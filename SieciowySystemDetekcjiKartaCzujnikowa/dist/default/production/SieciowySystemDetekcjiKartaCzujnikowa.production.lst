

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Jul 22 09:37:27 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4680
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1
    56                           	psect	text44,global,reloc=2,class=CODE,delta=1
    57                           	psect	text45,global,reloc=2,class=CODE,delta=1
    58                           	psect	text46,global,reloc=2,class=CODE,delta=1
    59                           	psect	text47,global,reloc=2,class=CODE,delta=1
    60                           	psect	text48,global,reloc=2,class=CODE,delta=1
    61                           	psect	text49,global,reloc=2,class=CODE,delta=1
    62                           	psect	text50,global,reloc=2,class=CODE,delta=1
    63                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    64                           	psect	text52,global,reloc=2,class=CODE,delta=1
    65                           	psect	text53,global,reloc=2,class=CODE,delta=1
    66                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    67                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    68                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    69                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    70                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    71  0000                     
    72                           ; Version 2.05
    73                           ; Generated 20/12/2018 GMT
    74                           ; 
    75                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    76                           ; All rights reserved.
    77                           ; 
    78                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    79                           ; 
    80                           ; Redistribution and use in source and binary forms, with or without modification, are
    81                           ; permitted provided that the following conditions are met:
    82                           ; 
    83                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    84                           ;        conditions and the following disclaimer.
    85                           ; 
    86                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    87                           ;        of conditions and the following disclaimer in the documentation and/or other
    88                           ;        materials provided with the distribution.
    89                           ; 
    90                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    91                           ;        software without specific prior written permission.
    92                           ; 
    93                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    94                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    95                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    96                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    97                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    98                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    99                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   100                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   101                           ; 
   102                           ; 
   103                           ; Code-generator required, PIC18F4680 Definitions
   104                           ; 
   105                           ; SFR Addresses
   106  0000                     
   107                           	psect	idataCOMRAM
   108  001584                     __pidataCOMRAM:
   109                           	opt callstack 0
   110                           
   111                           ;initializer for MOC_Frame_Counter@zeta
   112  001584  0011               	dw	17
   113                           
   114                           ;initializer for LED_Update@pos2
   115  001586  0001               	dw	1
   116                           
   117                           ;initializer for LED_Update@pos1
   118  001588  0001               	dw	1
   119                           
   120                           ;initializer for _Fulfillment_Lvl
   121  00158A  0014               	dw	20
   122                           
   123                           ;initializer for LED_Update@Green
   124  00158C  01                 	db	1
   125  0000                     _RXFCON0	set	3540
   126  0000                     _MSEL3	set	3571
   127  0000                     _MSEL2	set	3570
   128  0000                     _MSEL1	set	3569
   129  0000                     _MSEL0	set	3568
   130  0000                     _BIE0	set	3578
   131  0000                     _BSEL0	set	3576
   132  0000                     _B5CON	set	3696
   133  0000                     _B4CON	set	3680
   134  0000                     _B3CON	set	3664
   135  0000                     _B2CON	set	3648
   136  0000                     _B1CON	set	3632
   137  0000                     _B0CON	set	3616
   138  0000                     _TXB0CONbits	set	3904
   139  0000                     _RXF5EIDL	set	3863
   140  0000                     _RXF5EIDH	set	3862
   141  0000                     _RXF5SIDLbits	set	3861
   142  0000                     _RXF4EIDL	set	3859
   143  0000                     _RXF4EIDH	set	3858
   144  0000                     _RXF4SIDLbits	set	3857
   145  0000                     _RXF5SIDL	set	3861
   146  0000                     _RXF5SIDH	set	3860
   147  0000                     _RXF3EIDL	set	3855
   148  0000                     _RXF3EIDH	set	3854
   149  0000                     _RXF3SIDLbits	set	3853
   150  0000                     _RXF3SIDL	set	3853
   151  0000                     _RXF3SIDH	set	3852
   152  0000                     _RXF2EIDL	set	3851
   153  0000                     _RXF2EIDH	set	3850
   154  0000                     _RXF2SIDLbits	set	3849
   155  0000                     _RXF2SIDL	set	3849
   156  0000                     _RXF2SIDH	set	3848
   157  0000                     _RXF1EIDL	set	3847
   158  0000                     _RXF1EIDH	set	3846
   159  0000                     _RXF1SIDLbits	set	3845
   160  0000                     _RXF1SIDL	set	3845
   161  0000                     _RXF1SIDH	set	3844
   162  0000                     _RXF0EIDL	set	3843
   163  0000                     _RXF0EIDH	set	3842
   164  0000                     _RXF0SIDLbits	set	3841
   165  0000                     _RXF0SIDL	set	3841
   166  0000                     _RXF0SIDH	set	3840
   167  0000                     _RXM1EIDL	set	3871
   168  0000                     _RXM1EIDH	set	3870
   169  0000                     _RXM1SIDL	set	3869
   170  0000                     _RXM1SIDH	set	3868
   171  0000                     _RXM0EIDL	set	3867
   172  0000                     _RXM0EIDH	set	3866
   173  0000                     _RXM0SIDL	set	3865
   174  0000                     _RXM0SIDH	set	3864
   175  0000                     _RXB1CON	set	3920
   176  0000                     _TXB0CON	set	3904
   177  0000                     _INTCONbits	set	4082
   178  0000                     _WDTCONbits	set	4049
   179  0000                     _RCONbits	set	4048
   180  0000                     _TRISC	set	3988
   181  0000                     _LATC	set	3979
   182  0000                     _T1CON	set	4045
   183  0000                     _TMR1H	set	4047
   184  0000                     _TMR1L	set	4046
   185  0000                     _LATE	set	3981
   186  0000                     _LATA	set	3977
   187  0000                     _LATB	set	3978
   188  0000                     _LATD	set	3980
   189  0000                     _TRISD	set	3989
   190  0000                     _TRISE	set	3990
   191  0000                     _TRISB	set	3987
   192  0000                     _TRISA	set	3986
   193  0000                     _RXB0DLCbits	set	3941
   194  0000                     _RXB0DLC	set	3941
   195  0000                     _RXB0SIDH	set	3937
   196  0000                     _RXB0SIDLbits	set	3938
   197  0000                     _RXB0SIDL	set	3938
   198  0000                     _RXB0EIDH	set	3939
   199  0000                     _RXB0EIDL	set	3940
   200  0000                     _COMSTATbits	set	3956
   201  0000                     _RXB0CONbits	set	3936
   202  0000                     _BRGCON3bits	set	3954
   203  0000                     _BRGCON2bits	set	3953
   204  0000                     _BRGCON1bits	set	3952
   205  0000                     _CIOCON	set	3955
   206  0000                     _ECANCON	set	3959
   207  0000                     _PIR3	set	4004
   208  0000                     _IPR3	set	4005
   209  0000                     _PIE3	set	4003
   210  0000                     _RXB0CON	set	3936
   211  0000                     _CANSTAT	set	3950
   212  0000                     _CANCON	set	3951
   213  0000                     _RCON	set	4048
   214  0000                     _RXB0D0	set	3942
   215  0000                     _TMR1IF	set	31984
   216  0000                     _TMR1IP	set	31992
   217  0000                     _PEIE	set	32662
   218  0000                     _IPEN	set	32391
   219  0000                     _TMR1ON	set	32360
   220  0000                     _TMR1IE	set	31976
   221  0000                     _IRCF0	set	32412
   222  0000                     _IRCF1	set	32413
   223  0000                     _IRCF2	set	32414
   224                           
   225                           ; #config settings
   226  0000                     
   227                           	psect	cinit
   228  001034                     __pcinit:
   229                           	opt callstack 0
   230  001034                     start_initialization:
   231                           	opt callstack 0
   232  001034                     __initialization:
   233                           	opt callstack 0
   234                           
   235                           ; Initialize objects allocated to COMRAM (9 bytes)
   236                           ; load TBLPTR registers with __pidataCOMRAM
   237  001034  0E84               	movlw	low __pidataCOMRAM
   238  001036  6EF6               	movwf	tblptrl,c
   239  001038  0E15               	movlw	high __pidataCOMRAM
   240  00103A  6EF7               	movwf	tblptrh,c
   241  00103C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   242  00103E  6EF8               	movwf	tblptru,c
   243  001040  EE00  F04D         	lfsr	0,__pdataCOMRAM
   244  001044  EE10 F009          	lfsr	1,9
   245  001048                     copy_data0:
   246  001048  0009               	tblrd		*+
   247  00104A  CFF5 FFEE          	movff	tablat,postinc0
   248  00104E  50E5               	movf	postdec1,w,c
   249  001050  50E1               	movf	fsr1l,w,c
   250  001052  E1FA               	bnz	copy_data0
   251                           
   252                           ; Clear objects allocated to BIGRAM (544 bytes)
   253  001054  EE00  F0C6         	lfsr	0,__pbssBIGRAM
   254  001058  EE12 F020          	lfsr	1,544
   255  00105C                     clear_0:
   256  00105C  6AEE               	clrf	postinc0,c
   257  00105E  50E5               	movf	postdec1,w,c
   258  001060  50E1               	movf	fsr1l,w,c
   259  001062  E1FC               	bnz	clear_0
   260  001064  50E2               	movf	fsr1h,w,c
   261  001066  E1FA               	bnz	clear_0
   262                           
   263                           ; Clear objects allocated to BANK0 (102 bytes)
   264  001068  EE00  F060         	lfsr	0,__pbssBANK0
   265  00106C  0E66               	movlw	102
   266  00106E                     clear_1:
   267  00106E  6AEE               	clrf	postinc0,c
   268  001070  06E8               	decf	wreg,f,c
   269  001072  E1FD               	bnz	clear_1
   270                           
   271                           ; Clear objects allocated to COMRAM (21 bytes)
   272  001074  EE00  F038         	lfsr	0,__pbssCOMRAM
   273  001078  0E15               	movlw	21
   274  00107A                     clear_2:
   275  00107A  6AEE               	clrf	postinc0,c
   276  00107C  06E8               	decf	wreg,f,c
   277  00107E  E1FD               	bnz	clear_2
   278  001080                     end_of_initialization:
   279                           	opt callstack 0
   280  001080                     __end_of__initialization:
   281                           	opt callstack 0
   282  001080  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   283  001082  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   284  001084  0E00               	movlw	low (__Lmediumconst shr (0+16))
   285  001086  6EF8               	movwf	tblptru,c
   286  001088  0100               	movlb	0
   287  00108A  EFDC  F009         	goto	_main	;jump to C main() function
   288                           
   289                           	psect	bssCOMRAM
   290  000038                     __pbssCOMRAM:
   291                           	opt callstack 0
   292  000038                     _Flagi:
   293                           	opt callstack 0
   294  000038                     	ds	5
   295  00003D                     _DaneCan:
   296                           	opt callstack 0
   297  00003D                     	ds	4
   298  000041                     _DetectorLedRadar:
   299                           	opt callstack 0
   300  000041                     	ds	3
   301  000044                     _TMR1_Update_flag:
   302                           	opt callstack 0
   303  000044                     	ds	2
   304  000046                     _Dane:
   305                           	opt callstack 0
   306  000046                     	ds	2
   307  000048                     	ds	1
   308  000049                     	ds	1
   309  00004A                     ISR_low@ramkaStanuU8:
   310                           	opt callstack 0
   311  00004A                     	ds	1
   312  00004B                     	ds	1
   313  00004C                     _LOCK:
   314                           	opt callstack 0
   315  00004C                     	ds	1
   316                           
   317                           	psect	dataCOMRAM
   318  00004D                     __pdataCOMRAM:
   319                           	opt callstack 0
   320  00004D                     MOC_Frame_Counter@zeta:
   321                           	opt callstack 0
   322  00004D                     	ds	2
   323  00004F                     LED_Update@pos2:
   324                           	opt callstack 0
   325  00004F                     	ds	2
   326  000051                     LED_Update@pos1:
   327                           	opt callstack 0
   328  000051                     	ds	2
   329  000053                     _Fulfillment_Lvl:
   330                           	opt callstack 0
   331  000053                     	ds	2
   332  000055                     LED_Update@Green:
   333                           	opt callstack 0
   334  000055                     	ds	1
   335                           
   336                           	psect	bssBANK0
   337  000060                     __pbssBANK0:
   338                           	opt callstack 0
   339  000060                     _ramkaCanRxKarty:
   340                           	opt callstack 0
   341  000060                     	ds	85
   342  0000B5                     _ramkaCanTxKarty:
   343                           	opt callstack 0
   344  0000B5                     	ds	17
   345                           
   346                           	psect	bssBIGRAM
   347  0000C6                     __pbssBIGRAM:
   348                           	opt callstack 0
   349  0000C6                     _wartosciSasiada:
   350                           	opt callstack 0
   351  0000C6                     	ds	544
   352                           
   353                           	psect	cstackCOMRAM
   354  000001                     __pcstackCOMRAM:
   355                           	opt callstack 0
   356  000001                     TMR1_Timer_reset@t1L:
   357                           	opt callstack 0
   358  000001                     i1TMR1_Update_flag_Set@a:
   359                           	opt callstack 0
   360                           
   361                           ; 2 bytes @ 0x0
   362  000001                     	ds	1
   363  000002                     TMR1_Timer_reset@t1H:
   364                           	opt callstack 0
   365                           
   366                           ; 1 bytes @ 0x1
   367  000002                     	ds	1
   368  000003                     ??_ISR_low:
   369  000003                     
   370                           ; 1 bytes @ 0x2
   371  000003                     	ds	3
   372  000006                     ??_CAN_Setup:
   373  000006                     ?_TMR1_Update_flag_Get:
   374                           	opt callstack 0
   375  000006                     ?_LED_Right:
   376                           	opt callstack 0
   377  000006                     ?_LED_Left:
   378                           	opt callstack 0
   379  000006                     ?_MOC_Wynikowa_wartosc_roznicowa:
   380                           	opt callstack 0
   381  000006                     ?_MOC_Frame_Counter:
   382                           	opt callstack 0
   383  000006                     ?_MOC_Aktualna_Temperatura:
   384                           	opt callstack 0
   385  000006                     ?_MOC_NOTWORK:
   386                           	opt callstack 0
   387  000006                     ?_MOCK_PrzyspieszenieX:
   388                           	opt callstack 0
   389  000006                     ?_MOCK_PrzyspieszenieY:
   390                           	opt callstack 0
   391  000006                     ?_MOCK_PrzyspieszenieZ:
   392                           	opt callstack 0
   393  000006                     ?_MOCK_Klikniecie_Spadek:
   394                           	opt callstack 0
   395  000006                     ?___wmul:
   396                           	opt callstack 0
   397  000006                     ?___awdiv:
   398                           	opt callstack 0
   399  000006                     ?___lwdiv:
   400                           	opt callstack 0
   401  000006                     LOCK_Set@k:
   402                           	opt callstack 0
   403  000006                     CAN_MoveBuffIntoFrame@Ram:
   404                           	opt callstack 0
   405  000006                     CAN_GenID@message:
   406                           	opt callstack 0
   407  000006                     LED_Right@a:
   408                           	opt callstack 0
   409  000006                     LED_Left@a:
   410                           	opt callstack 0
   411  000006                     LED_Control@diode:
   412                           	opt callstack 0
   413  000006                     TMR1_Update_flag_Set@a:
   414                           	opt callstack 0
   415  000006                     IsInNeighbors@message_adress:
   416                           	opt callstack 0
   417  000006                     FRAME_ExcitationValue@message:
   418                           	opt callstack 0
   419  000006                     FRAME_ExcitationMultiplier@message:
   420                           	opt callstack 0
   421  000006                     FRAME_AveragingTimes@message:
   422                           	opt callstack 0
   423  000006                     FRAME_AxisStatus@message:
   424                           	opt callstack 0
   425  000006                     FRAME_DeviceReset@message:
   426                           	opt callstack 0
   427  000006                     FRAME_MapPosition@message:
   428                           	opt callstack 0
   429  000006                     FRAME_SoftwareVersion@message:
   430                           	opt callstack 0
   431  000006                     FRAME_AnalogValue@message:
   432                           	opt callstack 0
   433  000006                     FRAME_PrzypisanieDokarty@message:
   434                           	opt callstack 0
   435  000006                     ___wmul@multiplier:
   436                           	opt callstack 0
   437  000006                     ___awdiv@dividend:
   438                           	opt callstack 0
   439  000006                     ___lwdiv@dividend:
   440                           	opt callstack 0
   441                           
   442                           ; 2 bytes @ 0x5
   443  000006                     	ds	2
   444  000008                     ??_LED_Right:
   445  000008                     ??_IsInNeighbors:
   446  000008                     CAN_GenID@frameID:
   447                           	opt callstack 0
   448  000008                     CAN_MoveBuffIntoFrame@Buf:
   449                           	opt callstack 0
   450  000008                     LED_Left@b:
   451                           	opt callstack 0
   452  000008                     FRAME_AccelerometerStatus@message:
   453                           	opt callstack 0
   454  000008                     FRAME_AnalogValue@set:
   455                           	opt callstack 0
   456  000008                     ___wmul@multiplicand:
   457                           	opt callstack 0
   458  000008                     ___awdiv@divisor:
   459                           	opt callstack 0
   460  000008                     ___lwdiv@divisor:
   461                           	opt callstack 0
   462                           
   463                           ; 2 bytes @ 0x7
   464  000008                     	ds	1
   465  000009                     ??_CAN_GenID:
   466  000009                     FRAME_ExcitationMultiplier@i:
   467                           	opt callstack 0
   468                           
   469                           ; 2 bytes @ 0x8
   470  000009                     	ds	1
   471  00000A                     CAN_MoveBuffIntoFrame@i:
   472                           	opt callstack 0
   473  00000A                     LED_Control@color:
   474                           	opt callstack 0
   475  00000A                     ___awdiv@counter:
   476                           	opt callstack 0
   477  00000A                     LED_Right@b:
   478                           	opt callstack 0
   479  00000A                     ___wmul@product:
   480                           	opt callstack 0
   481  00000A                     ___lwdiv@quotient:
   482                           	opt callstack 0
   483                           
   484                           ; 2 bytes @ 0x9
   485  00000A                     	ds	1
   486  00000B                     ___awdiv@sign:
   487                           	opt callstack 0
   488  00000B                     CAN_SendFrame@message:
   489                           	opt callstack 0
   490                           
   491                           ; 2 bytes @ 0xA
   492  00000B                     	ds	1
   493  00000C                     ___lwdiv@counter:
   494                           	opt callstack 0
   495  00000C                     IsInNeighbors@i:
   496                           	opt callstack 0
   497  00000C                     FRAME_AdressOfNeighbors@message:
   498                           	opt callstack 0
   499  00000C                     ___awdiv@quotient:
   500                           	opt callstack 0
   501                           
   502                           ; 2 bytes @ 0xB
   503  00000C                     	ds	1
   504  00000D                     ??_CAN_SendFrame:
   505  00000D                     LED_Light_Pos@pos:
   506                           	opt callstack 0
   507  00000D                     FRAME_Plot@message:
   508                           	opt callstack 0
   509                           
   510                           ; 2 bytes @ 0xC
   511  00000D                     	ds	1
   512  00000E                     CAN_TakeFrame@message:
   513                           	opt callstack 0
   514  00000E                     FRAME_SensorExcitationStatus@message:
   515                           	opt callstack 0
   516  00000E                     FRAME_AdressOfNeighbors@nrRamki:
   517                           	opt callstack 0
   518                           
   519                           ; 2 bytes @ 0xD
   520  00000E                     	ds	1
   521  00000F                     ??_FRAME_Plot:
   522  00000F                     LED_Light_Pos@fulfillment:
   523                           	opt callstack 0
   524                           
   525                           ; 2 bytes @ 0xE
   526  00000F                     	ds	1
   527  000010                     ??_CAN_TakeFrame:
   528  000010                     ??_FRAME_AdressOfNeighbors:
   529                           
   530                           ; 1 bytes @ 0xF
   531  000010                     	ds	1
   532  000011                     LED_Light_Pos@color:
   533                           	opt callstack 0
   534  000011                     FRAME_SensorExcitationStatus@theta:
   535                           	opt callstack 0
   536                           
   537                           ; 2 bytes @ 0x10
   538  000011                     	ds	1
   539  000012                     CAN_TakeFrame@op_id:
   540                           	opt callstack 0
   541  000012                     LED_Light_Pos@LED_array:
   542                           	opt callstack 0
   543                           
   544                           ; 2 bytes @ 0x11
   545  000012                     	ds	2
   546  000014                     CAN_TakeFrame@tempCON:
   547                           	opt callstack 0
   548  000014                     LED_Light_Pos@pos2:
   549                           	opt callstack 0
   550                           
   551                           ; 2 bytes @ 0x13
   552  000014                     	ds	1
   553  000015                     CAN_TakeFrame@k:
   554                           	opt callstack 0
   555                           
   556                           ; 1 bytes @ 0x14
   557  000015                     	ds	1
   558  000016                     LED_Light_Pos@flage:
   559                           	opt callstack 0
   560                           
   561                           ; 2 bytes @ 0x15
   562  000016                     	ds	2
   563  000018                     
   564                           ; 1 bytes @ 0x17
   565  000018                     	ds	6
   566  00001E                     FRAME_AdressOfNeighbors@k:
   567                           	opt callstack 0
   568                           
   569                           ; 2 bytes @ 0x1D
   570  00001E                     	ds	2
   571  000020                     FRAME_AdressOfNeighbors@i:
   572                           	opt callstack 0
   573                           
   574                           ; 2 bytes @ 0x1F
   575  000020                     	ds	2
   576  000022                     FRAME_HandleCanFrame@message:
   577                           	opt callstack 0
   578                           
   579                           ; 2 bytes @ 0x21
   580  000022                     	ds	2
   581  000024                     ??_FRAME_HandleCanFrame:
   582                           
   583                           ; 1 bytes @ 0x23
   584  000024                     	ds	2
   585  000026                     FRAME_HandleCanFrame@identyfikator:
   586                           	opt callstack 0
   587                           
   588                           ; 1 bytes @ 0x25
   589  000026                     	ds	1
   590  000027                     TRM_DataTransmition@canMessage:
   591                           	opt callstack 0
   592                           
   593                           ; 17 bytes @ 0x26
   594  000027                     	ds	17
   595  000038                     
   596                           ; 1 bytes @ 0x37
   597 ;;
   598 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   599 ;;
   600 ;; *************** function _main *****************
   601 ;; Defined at:
   602 ;;		line 94 in file "main.c"
   603 ;; Parameters:    Size  Location     Type
   604 ;;		None
   605 ;; Auto vars:     Size  Location     Type
   606 ;;		None
   607 ;; Return value:  Size  Location     Type
   608 ;;                  1    wreg      void 
   609 ;; Registers used:
   610 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   611 ;; Tracked objects:
   612 ;;		On entry : 0/0
   613 ;;		On exit  : 0/0
   614 ;;		Unchanged: 0/0
   615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   620 ;;Total ram usage:        0 bytes
   621 ;; Hardware stack levels required when called:    8
   622 ;; This function calls:
   623 ;;		_INI_All
   624 ;;		_LED_Update
   625 ;;		_TMR1_Update_flag_Get
   626 ;;		_TMR1_Update_flag_Set
   627 ;;		_TRM_DataTransmition
   628 ;; This function is called by:
   629 ;;		Startup code after reset
   630 ;; This function uses a non-reentrant model
   631 ;;
   632                           
   633                           	psect	text0
   634  0013B8                     __ptext0:
   635                           	opt callstack 0
   636  0013B8                     _main:
   637                           	opt callstack 23
   638                           
   639                           ;main.c: 96:     INI_All();
   640                           
   641                           ;incstack = 0
   642  0013B8  EC6E  F00A         	call	_INI_All	;wreg free
   643                           
   644                           ;main.c: 98:     RCON = 0xFF;
   645  0013BC  68D0               	setf	4048,c	;volatile
   646  0013BE                     l3156:
   647                           
   648                           ;main.c: 101:     {;main.c: 102:         if(DetectorLedRadar.Flags.obsluzWeWy == 1)
   649  0013BE  B041               	btfsc	_DetectorLedRadar,0,c
   650                           
   651                           ;main.c: 103:         {;main.c: 104:             DetectorLedRadar.Flags.obsluzWeWy = 0;
   652  0013C0  9041               	bcf	_DetectorLedRadar,0,c
   653                           
   654                           ;main.c: 108:         if(TMR1_Update_flag_Get()==1)
   655  0013C2  ECB8  F00A         	call	_TMR1_Update_flag_Get	;wreg free
   656  0013C6  0406               	decf	?_TMR1_Update_flag_Get,w,c
   657  0013C8  1007               	iorwf	?_TMR1_Update_flag_Get+1,w,c
   658  0013CA  A4D8               	btfss	status,2,c
   659  0013CC  D008               	goto	l3166
   660                           
   661                           ;main.c: 109:         {;main.c: 110:             LED_Update();
   662  0013CE  EC41  F007         	call	_LED_Update	;wreg free
   663                           
   664                           ;main.c: 111:             TMR1_Update_flag_Set(0);
   665  0013D2  0E00               	movlw	0
   666  0013D4  6E07               	movwf	TMR1_Update_flag_Set@a+1,c
   667  0013D6  0E00               	movlw	0
   668  0013D8  6E06               	movwf	TMR1_Update_flag_Set@a,c
   669  0013DA  ECB3  F00A         	call	_TMR1_Update_flag_Set	;wreg free
   670  0013DE                     l3166:
   671                           
   672                           ;main.c: 115:         TRM_DataTransmition();
   673  0013DE  EC10  F009         	call	_TRM_DataTransmition	;wreg free
   674  0013E2  0004               	clrwdt		;# 
   675                           
   676                           ;main.c: 117:     }
   677  0013E4  D7EC               	goto	l3156
   678  0013E6                     __end_of_main:
   679                           	opt callstack 0
   680                           
   681 ;; *************** function _TRM_DataTransmition *****************
   682 ;; Defined at:
   683 ;;		line 19 in file "TRM.c"
   684 ;; Parameters:    Size  Location     Type
   685 ;;		None
   686 ;; Auto vars:     Size  Location     Type
   687 ;;  canMessage     17   38[COMRAM] struct .
   688 ;;  i               1    0        unsigned char 
   689 ;; Return value:  Size  Location     Type
   690 ;;                  1    wreg      void 
   691 ;; Registers used:
   692 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   693 ;; Tracked objects:
   694 ;;		On entry : 0/0
   695 ;;		On exit  : 0/0
   696 ;;		Unchanged: 0/0
   697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   699 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   701 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   702 ;;Total ram usage:       17 bytes
   703 ;; Hardware stack levels used:    1
   704 ;; Hardware stack levels required when called:    7
   705 ;; This function calls:
   706 ;;		_CAN_TakeFrame
   707 ;;		_FRAME_HandleCanFrame
   708 ;; This function is called by:
   709 ;;		_main
   710 ;; This function uses a non-reentrant model
   711 ;;
   712                           
   713                           	psect	text1
   714  001220                     __ptext1:
   715                           	opt callstack 0
   716  001220                     _TRM_DataTransmition:
   717                           	opt callstack 23
   718                           
   719                           ;TRM.c: 21:     static BYTE weWyU8 = 0, czujnikWeWyU8 = 0;;TRM.c: 22:     BYTE i;;TRM.c:
      +                           23:     mID canMessage;;TRM.c: 26:     if(DaneCan.Flags.wyslijRamkeStanu)
   720                           
   721                           ;incstack = 0
   722  001220  A03D               	btfss	_DaneCan,0,c
   723  001222  D013               	goto	l3124
   724                           
   725                           ;TRM.c: 27:     {;TRM.c: 29:         canMessage.message_type = 0x02;
   726  001224  0E02               	movlw	2
   727  001226  6E28               	movwf	TRM_DataTransmition@canMessage+1,c
   728                           
   729                           ;TRM.c: 30:         canMessage.id.Val = 0;
   730  001228  0E00               	movlw	0
   731  00122A  6E2B               	movwf	TRM_DataTransmition@canMessage+4,c
   732  00122C  0E00               	movlw	0
   733  00122E  6E2C               	movwf	TRM_DataTransmition@canMessage+5,c
   734  001230  0E00               	movlw	0
   735  001232  6E2D               	movwf	TRM_DataTransmition@canMessage+6,c
   736  001234  0E00               	movlw	0
   737  001236  6E2E               	movwf	TRM_DataTransmition@canMessage+7,c
   738                           
   739                           ;TRM.c: 31:         canMessage.id.v[2] = 0x01 *4;
   740  001238  0E04               	movlw	4
   741  00123A  6E2D               	movwf	TRM_DataTransmition@canMessage+6,c
   742                           
   743                           ;TRM.c: 32:         FRAME_HandleCanFrame(&canMessage);
   744  00123C  0E27               	movlw	low TRM_DataTransmition@canMessage
   745  00123E  6E22               	movwf	FRAME_HandleCanFrame@message,c
   746  001240  0E00               	movlw	high TRM_DataTransmition@canMessage
   747  001242  6E23               	movwf	FRAME_HandleCanFrame@message+1,c
   748  001244  ECD1  F002         	call	_FRAME_HandleCanFrame	;wreg free
   749                           
   750                           ;TRM.c: 49:         DaneCan.Flags.wyslijRamkeStanu = 0;
   751  001248  903D               	bcf	_DaneCan,0,c
   752  00124A                     l3124:
   753                           
   754                           ;TRM.c: 59:     if(CAN_TakeFrame(&canMessage))
   755  00124A  0E27               	movlw	low TRM_DataTransmition@canMessage
   756  00124C  6E0E               	movwf	CAN_TakeFrame@message,c
   757  00124E  0E00               	movlw	high TRM_DataTransmition@canMessage
   758  001250  6E0F               	movwf	CAN_TakeFrame@message+1,c
   759  001252  EC8F  F001         	call	_CAN_TakeFrame	;wreg free
   760  001256  0900               	iorlw	0
   761  001258  B4D8               	btfsc	status,2,c
   762  00125A  0012               	return	
   763                           
   764                           ;TRM.c: 64:         {;TRM.c: 66:             FRAME_HandleCanFrame(&canMessage);
   765  00125C  0E27               	movlw	low TRM_DataTransmition@canMessage
   766  00125E  6E22               	movwf	FRAME_HandleCanFrame@message,c
   767  001260  0E00               	movlw	high TRM_DataTransmition@canMessage
   768  001262  6E23               	movwf	FRAME_HandleCanFrame@message+1,c
   769  001264  ECD1  F002         	call	_FRAME_HandleCanFrame	;wreg free
   770                           
   771                           ;TRM.c: 67:         }
   772  001268  0012               	return		;funcret
   773  00126A                     __end_of_TRM_DataTransmition:
   774                           	opt callstack 0
   775                           
   776 ;; *************** function _FRAME_HandleCanFrame *****************
   777 ;; Defined at:
   778 ;;		line 495 in file "FRAME.c"
   779 ;; Parameters:    Size  Location     Type
   780 ;;  message         2   33[COMRAM] PTR struct .
   781 ;;		 -> TRM_DataTransmition@canMessage(17), 
   782 ;; Auto vars:     Size  Location     Type
   783 ;;  identyfikato    1   37[COMRAM] unsigned char 
   784 ;; Return value:  Size  Location     Type
   785 ;;                  1    wreg      void 
   786 ;; Registers used:
   787 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   788 ;; Tracked objects:
   789 ;;		On entry : 0/0
   790 ;;		On exit  : 0/0
   791 ;;		Unchanged: 0/0
   792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   793 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   794 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   795 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   796 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   797 ;;Total ram usage:        5 bytes
   798 ;; Hardware stack levels used:    1
   799 ;; Hardware stack levels required when called:    6
   800 ;; This function calls:
   801 ;;		_CAN_GenID
   802 ;;		_CAN_SendFrame
   803 ;;		_FRAME_AccelerometerStatus
   804 ;;		_FRAME_AdressOfNeighbors
   805 ;;		_FRAME_AnalogValue
   806 ;;		_FRAME_AveragingTimes
   807 ;;		_FRAME_AxisStatus
   808 ;;		_FRAME_DeviceReset
   809 ;;		_FRAME_ExcitationMultiplier
   810 ;;		_FRAME_ExcitationValue
   811 ;;		_FRAME_MapPosition
   812 ;;		_FRAME_Plot
   813 ;;		_FRAME_PrzypisanieDokarty
   814 ;;		_FRAME_SensorExcitationStatus
   815 ;;		_FRAME_SoftwareVersion
   816 ;;		_LED_Error
   817 ;;		___awdiv
   818 ;; This function is called by:
   819 ;;		_TRM_DataTransmition
   820 ;; This function uses a non-reentrant model
   821 ;;
   822                           
   823                           	psect	text2
   824  0005A2                     __ptext2:
   825                           	opt callstack 0
   826  0005A2                     _FRAME_HandleCanFrame:
   827                           	opt callstack 23
   828                           
   829                           ;FRAME.c: 495: void FRAME_HandleCanFrame(mID * message);FRAME.c: 496: {;FRAME.c: 497:   
      +                            BYTE identyfikator = (BYTE) message->id.v[2]/4;
   830                           
   831                           ;incstack = 0
   832  0005A2  EE20 F006          	lfsr	2,6
   833  0005A6  5022               	movf	FRAME_HandleCanFrame@message,w,c
   834  0005A8  26D9               	addwf	fsr2l,f,c
   835  0005AA  5023               	movf	FRAME_HandleCanFrame@message+1,w,c
   836  0005AC  22DA               	addwfc	fsr2h,f,c
   837  0005AE  50DF               	movf	indf2,w,c
   838  0005B0  6E24               	movwf	??_FRAME_HandleCanFrame& (0+255),c
   839  0005B2  5024               	movf	??_FRAME_HandleCanFrame,w,c
   840  0005B4  6E06               	movwf	___awdiv@dividend,c
   841  0005B6  6A07               	clrf	___awdiv@dividend+1,c
   842  0005B8  0E00               	movlw	0
   843  0005BA  6E09               	movwf	___awdiv@divisor+1,c
   844  0005BC  0E04               	movlw	4
   845  0005BE  6E08               	movwf	___awdiv@divisor,c
   846  0005C0  ECFF  F006         	call	___awdiv	;wreg free
   847  0005C4  5006               	movf	?___awdiv,w,c
   848  0005C6  6E26               	movwf	FRAME_HandleCanFrame@identyfikator,c
   849                           
   850                           ;FRAME.c: 500:     switch(identyfikator)
   851  0005C8  D067               	goto	l3072
   852  0005CA                     l3040:
   853                           
   854                           ;FRAME.c: 503:             FRAME_SensorExcitationStatus(message);
   855  0005CA  C022  F00E         	movff	FRAME_HandleCanFrame@message,FRAME_SensorExcitationStatus@message
   856  0005CE  C023  F00F         	movff	FRAME_HandleCanFrame@message+1,FRAME_SensorExcitationStatus@message+1
   857  0005D2  EC97  F005         	call	_FRAME_SensorExcitationStatus	;wreg free
   858                           
   859                           ;FRAME.c: 504:             break;
   860  0005D6  D096               	goto	l3074
   861  0005D8                     l3042:
   862                           
   863                           ;FRAME.c: 506:             FRAME_AccelerometerStatus(message);
   864  0005D8  C022  F008         	movff	FRAME_HandleCanFrame@message,FRAME_AccelerometerStatus@message
   865  0005DC  C023  F009         	movff	FRAME_HandleCanFrame@message+1,FRAME_AccelerometerStatus@message+1
   866  0005E0  EC7E  F007         	call	_FRAME_AccelerometerStatus	;wreg free
   867                           
   868                           ;FRAME.c: 507:             break;
   869  0005E4  D08F               	goto	l3074
   870  0005E6                     l3044:
   871                           
   872                           ;FRAME.c: 509:             FRAME_ExcitationValue(message);
   873  0005E6  C022  F006         	movff	FRAME_HandleCanFrame@message,FRAME_ExcitationValue@message
   874  0005EA  C023  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_ExcitationValue@message+1
   875  0005EE  EC71  F009         	call	_FRAME_ExcitationValue	;wreg free
   876                           
   877                           ;FRAME.c: 510:             break;
   878  0005F2  D088               	goto	l3074
   879  0005F4                     l3046:
   880                           
   881                           ;FRAME.c: 512:             FRAME_ExcitationMultiplier(message);
   882  0005F4  C022  F006         	movff	FRAME_HandleCanFrame@message,FRAME_ExcitationMultiplier@message
   883  0005F8  C023  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_ExcitationMultiplier@message+1
   884  0005FC  ECC3  F008         	call	_FRAME_ExcitationMultiplier	;wreg free
   885                           
   886                           ;FRAME.c: 513:             break;
   887  000600  D081               	goto	l3074
   888  000602                     l3048:
   889                           
   890                           ;FRAME.c: 515:             FRAME_AveragingTimes(message);
   891  000602  C022  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AveragingTimes@message
   892  000606  C023  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AveragingTimes@message+1
   893  00060A  ECA7  F009         	call	_FRAME_AveragingTimes	;wreg free
   894                           
   895                           ;FRAME.c: 516:             break;
   896  00060E  D07A               	goto	l3074
   897  000610                     l3050:
   898                           
   899                           ;FRAME.c: 518:             FRAME_AxisStatus(message);
   900  000610  C022  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AxisStatus@message
   901  000614  C023  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AxisStatus@message+1
   902  000618  EC8C  F009         	call	_FRAME_AxisStatus	;wreg free
   903                           
   904                           ;FRAME.c: 519:             break;
   905  00061C  D073               	goto	l3074
   906  00061E                     l3052:
   907                           
   908                           ;FRAME.c: 521:             FRAME_DeviceReset(message);
   909  00061E  C022  F006         	movff	FRAME_HandleCanFrame@message,FRAME_DeviceReset@message
   910  000622  C023  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_DeviceReset@message+1
   911  000626  EC26  F005         	call	_FRAME_DeviceReset	;wreg free
   912                           
   913                           ;FRAME.c: 522:             break;
   914  00062A  D06C               	goto	l3074
   915  00062C                     l3054:
   916                           
   917                           ;FRAME.c: 524:             FRAME_Plot(message);
   918  00062C  C022  F00D         	movff	FRAME_HandleCanFrame@message,FRAME_Plot@message
   919  000630  C023  F00E         	movff	FRAME_HandleCanFrame@message+1,FRAME_Plot@message+1
   920  000634  EC47  F008         	call	_FRAME_Plot	;wreg free
   921                           
   922                           ;FRAME.c: 525:             break;
   923  000638  D065               	goto	l3074
   924  00063A                     l3056:
   925                           
   926                           ;FRAME.c: 527:             FRAME_MapPosition(message);
   927  00063A  C022  F006         	movff	FRAME_HandleCanFrame@message,FRAME_MapPosition@message
   928  00063E  C023  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_MapPosition@message+1
   929  000642  ECD4  F00A         	call	_FRAME_MapPosition	;wreg free
   930                           
   931                           ;FRAME.c: 528:             break;
   932  000646  D05E               	goto	l3074
   933  000648                     l3058:
   934                           
   935                           ;FRAME.c: 530:             FRAME_SoftwareVersion(message);
   936  000648  C022  F006         	movff	FRAME_HandleCanFrame@message,FRAME_SoftwareVersion@message
   937  00064C  C023  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_SoftwareVersion@message+1
   938  000650  ECB9  F007         	call	_FRAME_SoftwareVersion	;wreg free
   939                           
   940                           ;FRAME.c: 531:             break;
   941  000654  D057               	goto	l3074
   942  000656                     l3060:
   943                           
   944                           ;FRAME.c: 534:             FRAME_AnalogValue(message, identyfikator - 0x0C);
   945  000656  C022  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AnalogValue@message
   946  00065A  C023  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AnalogValue@message+1
   947  00065E  0EF4               	movlw	244
   948  000660  2426               	addwf	FRAME_HandleCanFrame@identyfikator,w,c
   949  000662  6E08               	movwf	FRAME_AnalogValue@set,c
   950  000664  6A09               	clrf	FRAME_AnalogValue@set+1,c
   951  000666  0EFF               	movlw	255
   952  000668  2209               	addwfc	FRAME_AnalogValue@set+1,f,c
   953  00066A  ECD5  F00A         	call	_FRAME_AnalogValue	;wreg free
   954                           
   955                           ;FRAME.c: 535:             break;
   956  00066E  D04A               	goto	l3074
   957  000670                     l3062:
   958                           
   959                           ;FRAME.c: 537:             FRAME_PrzypisanieDokarty(message);
   960  000670  C022  F006         	movff	FRAME_HandleCanFrame@message,FRAME_PrzypisanieDokarty@message
   961  000674  C023  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_PrzypisanieDokarty@message+1
   962  000678  EC56  F009         	call	_FRAME_PrzypisanieDokarty	;wreg free
   963                           
   964                           ;FRAME.c: 538:             break;
   965  00067C  D043               	goto	l3074
   966  00067E                     l3064:
   967                           
   968                           ;FRAME.c: 540:             FRAME_AdressOfNeighbors(message, identyfikator - 0x10);
   969  00067E  C022  F00C         	movff	FRAME_HandleCanFrame@message,FRAME_AdressOfNeighbors@message
   970  000682  C023  F00D         	movff	FRAME_HandleCanFrame@message+1,FRAME_AdressOfNeighbors@message+1
   971  000686  0EF0               	movlw	240
   972  000688  2426               	addwf	FRAME_HandleCanFrame@identyfikator,w,c
   973  00068A  6E0E               	movwf	FRAME_AdressOfNeighbors@nrRamki,c
   974  00068C  6A0F               	clrf	FRAME_AdressOfNeighbors@nrRamki+1,c
   975  00068E  0EFF               	movlw	255
   976  000690  220F               	addwfc	FRAME_AdressOfNeighbors@nrRamki+1,f,c
   977  000692  EC30  F000         	call	_FRAME_AdressOfNeighbors	;wreg free
   978                           
   979                           ;FRAME.c: 541:             break;
   980  000696  D036               	goto	l3074
   981  000698                     l3072:
   982  000698  5026               	movf	FRAME_HandleCanFrame@identyfikator,w,c
   983  00069A  6E24               	movwf	??_FRAME_HandleCanFrame& (0+255),c
   984  00069C  6A25               	clrf	(??_FRAME_HandleCanFrame+1)& (0+255),c
   985                           
   986                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   987                           ; Switch size 1, requested type "simple"
   988                           ; Number of cases is 1, Range of values is 0 to 0
   989                           ; switch strategies available:
   990                           ; Name         Instructions Cycles
   991                           ; simple_byte            4     3 (average)
   992                           ;	Chosen strategy is simple_byte
   993  00069E  5025               	movf	??_FRAME_HandleCanFrame+1,w,c
   994  0006A0  0A00               	xorlw	0	; case 0
   995  0006A2  A4D8               	btfss	status,2,c
   996  0006A4  D792               	goto	l3040
   997                           
   998                           ; Switch size 1, requested type "simple"
   999                           ; Number of cases is 15, Range of values is 1 to 17
  1000                           ; switch strategies available:
  1001                           ; Name         Instructions Cycles
  1002                           ; simple_byte           46    24 (average)
  1003                           ;	Chosen strategy is simple_byte
  1004  0006A6  5024               	movf	??_FRAME_HandleCanFrame,w,c
  1005  0006A8  0A01               	xorlw	1	; case 1
  1006  0006AA  B4D8               	btfsc	status,2,c
  1007  0006AC  D78E               	goto	l3040
  1008  0006AE  0A03               	xorlw	3	; case 2
  1009  0006B0  B4D8               	btfsc	status,2,c
  1010  0006B2  D792               	goto	l3042
  1011  0006B4  0A01               	xorlw	1	; case 3
  1012  0006B6  B4D8               	btfsc	status,2,c
  1013  0006B8  D796               	goto	l3044
  1014  0006BA  0A07               	xorlw	7	; case 4
  1015  0006BC  B4D8               	btfsc	status,2,c
  1016  0006BE  D79A               	goto	l3046
  1017  0006C0  0A01               	xorlw	1	; case 5
  1018  0006C2  B4D8               	btfsc	status,2,c
  1019  0006C4  D79E               	goto	l3048
  1020  0006C6  0A03               	xorlw	3	; case 6
  1021  0006C8  B4D8               	btfsc	status,2,c
  1022  0006CA  D7A2               	goto	l3050
  1023  0006CC  0A01               	xorlw	1	; case 7
  1024  0006CE  B4D8               	btfsc	status,2,c
  1025  0006D0  D7A6               	goto	l3052
  1026  0006D2  0A0E               	xorlw	14	; case 9
  1027  0006D4  B4D8               	btfsc	status,2,c
  1028  0006D6  D7AA               	goto	l3054
  1029  0006D8  0A03               	xorlw	3	; case 10
  1030  0006DA  B4D8               	btfsc	status,2,c
  1031  0006DC  D7AE               	goto	l3056
  1032  0006DE  0A01               	xorlw	1	; case 11
  1033  0006E0  B4D8               	btfsc	status,2,c
  1034  0006E2  D7B2               	goto	l3058
  1035  0006E4  0A07               	xorlw	7	; case 12
  1036  0006E6  B4D8               	btfsc	status,2,c
  1037  0006E8  D7B6               	goto	l3060
  1038  0006EA  0A01               	xorlw	1	; case 13
  1039  0006EC  B4D8               	btfsc	status,2,c
  1040  0006EE  D7B3               	goto	l3060
  1041  0006F0  0A02               	xorlw	2	; case 15
  1042  0006F2  B4D8               	btfsc	status,2,c
  1043  0006F4  D7BD               	goto	l3062
  1044  0006F6  0A1F               	xorlw	31	; case 16
  1045  0006F8  B4D8               	btfsc	status,2,c
  1046  0006FA  D7C1               	goto	l3064
  1047  0006FC  0A01               	xorlw	1	; case 17
  1048  0006FE  B4D8               	btfsc	status,2,c
  1049  000700  D7BE               	goto	l3064
  1050  000702  D763               	goto	l3040
  1051  000704                     l3074:
  1052                           
  1053                           ;FRAME.c: 551:     if(message->message_type == 0x02)
  1054  000704  EE20 F001          	lfsr	2,1
  1055  000708  5022               	movf	FRAME_HandleCanFrame@message,w,c
  1056  00070A  26D9               	addwf	fsr2l,f,c
  1057  00070C  5023               	movf	FRAME_HandleCanFrame@message+1,w,c
  1058  00070E  22DA               	addwfc	fsr2h,f,c
  1059  000710  0E02               	movlw	2
  1060  000712  18DE               	xorwf	postinc2,w,c
  1061  000714  A4D8               	btfss	status,2,c
  1062  000716  0012               	return	
  1063                           
  1064                           ;FRAME.c: 552:     {;FRAME.c: 554:         message->frame_type = 0x03;
  1065  000718  EE20 F002          	lfsr	2,2
  1066  00071C  5022               	movf	FRAME_HandleCanFrame@message,w,c
  1067  00071E  26D9               	addwf	fsr2l,f,c
  1068  000720  5023               	movf	FRAME_HandleCanFrame@message+1,w,c
  1069  000722  22DA               	addwfc	fsr2h,f,c
  1070  000724  0E03               	movlw	3
  1071  000726  6EDF               	movwf	indf2,c
  1072                           
  1073                           ;FRAME.c: 555:         message->message_type = 0x01;
  1074  000728  EE20 F001          	lfsr	2,1
  1075  00072C  5022               	movf	FRAME_HandleCanFrame@message,w,c
  1076  00072E  26D9               	addwf	fsr2l,f,c
  1077  000730  5023               	movf	FRAME_HandleCanFrame@message+1,w,c
  1078  000732  22DA               	addwfc	fsr2h,f,c
  1079  000734  0E01               	movlw	1
  1080  000736  6EDF               	movwf	indf2,c
  1081                           
  1082                           ;FRAME.c: 556:         message->id.Val = 0;
  1083  000738  EE20 F004          	lfsr	2,4
  1084  00073C  5022               	movf	FRAME_HandleCanFrame@message,w,c
  1085  00073E  26D9               	addwf	fsr2l,f,c
  1086  000740  5023               	movf	FRAME_HandleCanFrame@message+1,w,c
  1087  000742  22DA               	addwfc	fsr2h,f,c
  1088  000744  6ADE               	clrf	postinc2,c
  1089  000746  6ADE               	clrf	postinc2,c
  1090  000748  6ADE               	clrf	postinc2,c
  1091  00074A  6ADD               	clrf	postdec2,c
  1092                           
  1093                           ;FRAME.c: 558:         message->id.v[2] = identyfikator*4;
  1094  00074C  5026               	movf	FRAME_HandleCanFrame@identyfikator,w,c
  1095  00074E  0D04               	mullw	4
  1096  000750  EE20 F006          	lfsr	2,6
  1097  000754  5022               	movf	FRAME_HandleCanFrame@message,w,c
  1098  000756  26D9               	addwf	fsr2l,f,c
  1099  000758  5023               	movf	FRAME_HandleCanFrame@message+1,w,c
  1100  00075A  22DA               	addwfc	fsr2h,f,c
  1101  00075C  CFF3 FFDF          	movff	prodl,indf2
  1102                           
  1103                           ;FRAME.c: 559:         CAN_GenID(message,identyfikator);
  1104  000760  C022  F006         	movff	FRAME_HandleCanFrame@message,CAN_GenID@message
  1105  000764  C023  F007         	movff	FRAME_HandleCanFrame@message+1,CAN_GenID@message+1
  1106  000768  C026  F008         	movff	FRAME_HandleCanFrame@identyfikator,CAN_GenID@frameID
  1107  00076C  EC5D  F006         	call	_CAN_GenID	;wreg free
  1108                           
  1109                           ;FRAME.c: 560:         CAN_SendFrame(message);
  1110  000770  C022  F00B         	movff	FRAME_HandleCanFrame@message,CAN_SendFrame@message
  1111  000774  C023  F00C         	movff	FRAME_HandleCanFrame@message+1,CAN_SendFrame@message+1
  1112  000778  ECC6  F003         	call	_CAN_SendFrame	;wreg free
  1113                           
  1114                           ;FRAME.c: 571:        while(RXB0CONbits.FILHIT3)
  1115  00077C  D004               	goto	l561
  1116  00077E                     l562:
  1117                           
  1118                           ;FRAME.c: 572:        {;FRAME.c: 573:            if(TXB0CONbits.TXERR == 1){
  1119  00077E  010F               	movlb	15	; () banked
  1120  000780  B940               	btfsc	64,4,b	;volatile
  1121                           
  1122                           ; BSR set to: 15
  1123                           ;FRAME.c: 574:                LED_Error();
  1124  000782  EC41  F00A         	call	_LED_Error	;wreg free
  1125  000786                     l561:
  1126                           
  1127                           ;FRAME.c: 571:        while(RXB0CONbits.FILHIT3)
  1128  000786  A660               	btfss	3936,3,c	;volatile
  1129  000788  0012               	return	
  1130  00078A  D7F9               	goto	l562
  1131  00078C                     __end_of_FRAME_HandleCanFrame:
  1132                           	opt callstack 0
  1133                           
  1134 ;; *************** function _LED_Error *****************
  1135 ;; Defined at:
  1136 ;;		line 37 in file "LED.c"
  1137 ;; Parameters:    Size  Location     Type
  1138 ;;		None
  1139 ;; Auto vars:     Size  Location     Type
  1140 ;;		None
  1141 ;; Return value:  Size  Location     Type
  1142 ;;                  2  283[None  ] unsigned int 
  1143 ;; Registers used:
  1144 ;;		wreg, status,2, status,0, cstack
  1145 ;; Tracked objects:
  1146 ;;		On entry : 0/0
  1147 ;;		On exit  : 0/0
  1148 ;;		Unchanged: 0/0
  1149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1153 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1154 ;;Total ram usage:        0 bytes
  1155 ;; Hardware stack levels used:    1
  1156 ;; Hardware stack levels required when called:    4
  1157 ;; This function calls:
  1158 ;;		_LED_Control
  1159 ;; This function is called by:
  1160 ;;		_FRAME_HandleCanFrame
  1161 ;; This function uses a non-reentrant model
  1162 ;;
  1163                           
  1164                           	psect	text3
  1165  001482                     __ptext3:
  1166                           	opt callstack 0
  1167  001482                     _LED_Error:
  1168                           	opt callstack 24
  1169                           
  1170                           ;LED.c: 39:     LED_Control(RED,0b1010101010);
  1171                           
  1172                           ;incstack = 0
  1173  001482  0E02               	movlw	2
  1174  001484  6E07               	movwf	LED_Control@diode+1,c
  1175  001486  0EAA               	movlw	170
  1176  001488  6E06               	movwf	LED_Control@diode,c
  1177  00148A  0E00               	movlw	0
  1178  00148C  EC7D  F004         	call	_LED_Control
  1179                           
  1180                           ;LED.c: 40:     LED_Control(GREEN,0b0000000000);
  1181  001490  0E00               	movlw	0
  1182  001492  6E07               	movwf	LED_Control@diode+1,c
  1183  001494  0E00               	movlw	0
  1184  001496  6E06               	movwf	LED_Control@diode,c
  1185  001498  0E01               	movlw	1
  1186  00149A  EC7D  F004         	call	_LED_Control
  1187  00149E  0012               	return		;funcret
  1188  0014A0                     __end_of_LED_Error:
  1189                           	opt callstack 0
  1190                           
  1191 ;; *************** function _FRAME_SoftwareVersion *****************
  1192 ;; Defined at:
  1193 ;;		line 384 in file "FRAME.c"
  1194 ;; Parameters:    Size  Location     Type
  1195 ;;  message         2    5[COMRAM] PTR struct .
  1196 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1197 ;; Auto vars:     Size  Location     Type
  1198 ;;		None
  1199 ;; Return value:  Size  Location     Type
  1200 ;;                  1    wreg      void 
  1201 ;; Registers used:
  1202 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1203 ;; Tracked objects:
  1204 ;;		On entry : 0/0
  1205 ;;		On exit  : 0/0
  1206 ;;		Unchanged: 0/0
  1207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1208 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1210 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1211 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1212 ;;Total ram usage:        3 bytes
  1213 ;; Hardware stack levels used:    1
  1214 ;; Hardware stack levels required when called:    3
  1215 ;; This function calls:
  1216 ;;		Nothing
  1217 ;; This function is called by:
  1218 ;;		_FRAME_HandleCanFrame
  1219 ;; This function uses a non-reentrant model
  1220 ;;
  1221                           
  1222                           	psect	text4
  1223  000F72                     __ptext4:
  1224                           	opt callstack 0
  1225  000F72                     _FRAME_SoftwareVersion:
  1226                           	opt callstack 25
  1227                           
  1228                           ;FRAME.c: 384: static void FRAME_SoftwareVersion(mID *message);FRAME.c: 385: {;FRAME.c: 
      +                          387:     if(message->message_type == 0x02)
  1229                           
  1230                           ;incstack = 0
  1231  000F72  EE20 F001          	lfsr	2,1
  1232  000F76  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1233  000F78  26D9               	addwf	fsr2l,f,c
  1234  000F7A  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1235  000F7C  22DA               	addwfc	fsr2h,f,c
  1236  000F7E  0E02               	movlw	2
  1237  000F80  18DE               	xorwf	postinc2,w,c
  1238  000F82  A4D8               	btfss	status,2,c
  1239  000F84  0012               	return	
  1240                           
  1241                           ;FRAME.c: 388:     {;FRAME.c: 389:         message->data_length = 4;
  1242  000F86  EE20 F010          	lfsr	2,16
  1243  000F8A  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1244  000F8C  26D9               	addwf	fsr2l,f,c
  1245  000F8E  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1246  000F90  22DA               	addwfc	fsr2h,f,c
  1247  000F92  0E04               	movlw	4
  1248  000F94  6EDF               	movwf	indf2,c
  1249                           
  1250                           ;FRAME.c: 390:         message->data[0] = (unsigned char)(Dane->wersjaOprogramowaniaU16 
      +                          >> 8);
  1251  000F96  EE20 F008          	lfsr	2,8
  1252  000F9A  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1253  000F9C  26D9               	addwf	fsr2l,f,c
  1254  000F9E  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1255  000FA0  22DA               	addwfc	fsr2h,f,c
  1256  000FA2  5005               	movf	5,w,c
  1257  000FA4  6EDF               	movwf	indf2,c
  1258                           
  1259                           ;FRAME.c: 391:         message->data[1] = (unsigned char)Dane->wersjaOprogramowaniaU16;
  1260  000FA6  EE20 F009          	lfsr	2,9
  1261  000FAA  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1262  000FAC  26D9               	addwf	fsr2l,f,c
  1263  000FAE  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1264  000FB0  22DA               	addwfc	fsr2h,f,c
  1265  000FB2  C004 FFDF          	movff	4,indf2
  1266                           
  1267                           ;FRAME.c: 392:         message->data[2] = (unsigned char)(Dane->wersjaSprzetuU16 >> 8);
  1268  000FB6  EE20 F00A          	lfsr	2,10
  1269  000FBA  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1270  000FBC  26D9               	addwf	fsr2l,f,c
  1271  000FBE  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1272  000FC0  22DA               	addwfc	fsr2h,f,c
  1273  000FC2  500B               	movf	11,w,c
  1274  000FC4  6EDF               	movwf	indf2,c
  1275                           
  1276                           ;FRAME.c: 393:         message->data[3] = (unsigned char)Dane->wersjaSprzetuU16;
  1277  000FC6  EE20 F00B          	lfsr	2,11
  1278  000FCA  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1279  000FCC  26D9               	addwf	fsr2l,f,c
  1280  000FCE  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1281  000FD0  22DA               	addwfc	fsr2h,f,c
  1282  000FD2  C00A FFDF          	movff	10,indf2
  1283                           
  1284                           ;FRAME.c: 394:     }
  1285  000FD6  0012               	return		;funcret
  1286  000FD8                     __end_of_FRAME_SoftwareVersion:
  1287                           	opt callstack 0
  1288                           
  1289 ;; *************** function _FRAME_SensorExcitationStatus *****************
  1290 ;; Defined at:
  1291 ;;		line 33 in file "FRAME.c"
  1292 ;; Parameters:    Size  Location     Type
  1293 ;;  message         2   13[COMRAM] PTR struct .
  1294 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1295 ;; Auto vars:     Size  Location     Type
  1296 ;;  theta           2   16[COMRAM] int 
  1297 ;; Return value:  Size  Location     Type
  1298 ;;                  1    wreg      void 
  1299 ;; Registers used:
  1300 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1301 ;; Tracked objects:
  1302 ;;		On entry : 0/0
  1303 ;;		On exit  : 0/0
  1304 ;;		Unchanged: 0/0
  1305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1306 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1307 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1308 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1309 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1310 ;;Total ram usage:        5 bytes
  1311 ;; Hardware stack levels used:    1
  1312 ;; Hardware stack levels required when called:    4
  1313 ;; This function calls:
  1314 ;;		_IsInNeighbors
  1315 ;;		_LOCK_Get
  1316 ;;		_LOCK_Set
  1317 ;;		_MOC_Aktualna_Temperatura
  1318 ;;		_MOC_Frame_Counter
  1319 ;;		_MOC_NOTWORK
  1320 ;;		_MOC_Wynikowa_wartosc_roznicowa
  1321 ;; This function is called by:
  1322 ;;		_FRAME_HandleCanFrame
  1323 ;; This function uses a non-reentrant model
  1324 ;;
  1325                           
  1326                           	psect	text5
  1327  000B2E                     __ptext5:
  1328                           	opt callstack 0
  1329  000B2E                     _FRAME_SensorExcitationStatus:
  1330                           	opt callstack 24
  1331                           
  1332                           ;FRAME.c: 33: static void FRAME_SensorExcitationStatus(mID *message);FRAME.c: 34: {;FRAM
      +                          E.c: 35:     if(message->message_type == 0x02)
  1333                           
  1334                           ;incstack = 0
  1335  000B2E  EE20 F001          	lfsr	2,1
  1336  000B32  500E               	movf	FRAME_SensorExcitationStatus@message,w,c
  1337  000B34  26D9               	addwf	fsr2l,f,c
  1338  000B36  500F               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1339  000B38  22DA               	addwfc	fsr2h,f,c
  1340  000B3A  0E02               	movlw	2
  1341  000B3C  18DE               	xorwf	postinc2,w,c
  1342  000B3E  A4D8               	btfss	status,2,c
  1343  000B40  D047               	goto	l2732
  1344                           
  1345                           ;FRAME.c: 36:     {;FRAME.c: 37:         message->data_length = 6;
  1346  000B42  EE20 F010          	lfsr	2,16
  1347  000B46  500E               	movf	FRAME_SensorExcitationStatus@message,w,c
  1348  000B48  26D9               	addwf	fsr2l,f,c
  1349  000B4A  500F               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1350  000B4C  22DA               	addwfc	fsr2h,f,c
  1351  000B4E  0E06               	movlw	6
  1352  000B50  6EDF               	movwf	indf2,c
  1353                           
  1354                           ;FRAME.c: 43:         message->data[0] = LOCK_Get();
  1355  000B52  EE20 F008          	lfsr	2,8
  1356  000B56  500E               	movf	FRAME_SensorExcitationStatus@message,w,c
  1357  000B58  26D9               	addwf	fsr2l,f,c
  1358  000B5A  500F               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1359  000B5C  22DA               	addwfc	fsr2h,f,c
  1360  000B5E  ECD2  F00A         	call	_LOCK_Get	;wreg free
  1361  000B62  6EDF               	movwf	indf2,c
  1362                           
  1363                           ;FRAME.c: 44:         message->data[1] = MOC_Wynikowa_wartosc_roznicowa() >> 8 ;
  1364  000B64  EE20 F009          	lfsr	2,9
  1365  000B68  500E               	movf	FRAME_SensorExcitationStatus@message,w,c
  1366  000B6A  26D9               	addwf	fsr2l,f,c
  1367  000B6C  500F               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1368  000B6E  22DA               	addwfc	fsr2h,f,c
  1369  000B70  EC95  F00A         	call	_MOC_Wynikowa_wartosc_roznicowa	;wreg free
  1370  000B74  C007  F006         	movff	?_MOC_Wynikowa_wartosc_roznicowa+1,?_MOC_Wynikowa_wartosc_roznicowa
  1371  000B78  6A07               	clrf	?_MOC_Wynikowa_wartosc_roznicowa+1,c
  1372  000B7A  5006               	movf	?_MOC_Wynikowa_wartosc_roznicowa,w,c
  1373  000B7C  6EDF               	movwf	indf2,c
  1374                           
  1375                           ;FRAME.c: 45:         message->data[2] = MOC_Wynikowa_wartosc_roznicowa() & 0x00FF;
  1376  000B7E  EE20 F00A          	lfsr	2,10
  1377  000B82  500E               	movf	FRAME_SensorExcitationStatus@message,w,c
  1378  000B84  26D9               	addwf	fsr2l,f,c
  1379  000B86  500F               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1380  000B88  22DA               	addwfc	fsr2h,f,c
  1381  000B8A  EC95  F00A         	call	_MOC_Wynikowa_wartosc_roznicowa	;wreg free
  1382  000B8E  5006               	movf	?_MOC_Wynikowa_wartosc_roznicowa,w,c
  1383  000B90  6EDF               	movwf	indf2,c
  1384                           
  1385                           ;FRAME.c: 46:         message->data[3] = MOC_Frame_Counter();
  1386  000B92  EE20 F00B          	lfsr	2,11
  1387  000B96  500E               	movf	FRAME_SensorExcitationStatus@message,w,c
  1388  000B98  26D9               	addwf	fsr2l,f,c
  1389  000B9A  500F               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1390  000B9C  22DA               	addwfc	fsr2h,f,c
  1391  000B9E  EC87  F00A         	call	_MOC_Frame_Counter	;wreg free
  1392  000BA2  5006               	movf	?_MOC_Frame_Counter,w,c
  1393  000BA4  6EDF               	movwf	indf2,c
  1394                           
  1395                           ;FRAME.c: 47:         message->data[4] = MOC_Aktualna_Temperatura();
  1396  000BA6  EE20 F00C          	lfsr	2,12
  1397  000BAA  500E               	movf	FRAME_SensorExcitationStatus@message,w,c
  1398  000BAC  26D9               	addwf	fsr2l,f,c
  1399  000BAE  500F               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1400  000BB0  22DA               	addwfc	fsr2h,f,c
  1401  000BB2  EC9A  F00A         	call	_MOC_Aktualna_Temperatura	;wreg free
  1402  000BB6  5006               	movf	?_MOC_Aktualna_Temperatura,w,c
  1403  000BB8  6EDF               	movwf	indf2,c
  1404                           
  1405                           ;FRAME.c: 48:         message->data[5] = MOC_NOTWORK();
  1406  000BBA  EE20 F00D          	lfsr	2,13
  1407  000BBE  500E               	movf	FRAME_SensorExcitationStatus@message,w,c
  1408  000BC0  26D9               	addwf	fsr2l,f,c
  1409  000BC2  500F               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1410  000BC4  22DA               	addwfc	fsr2h,f,c
  1411  000BC6  ECC7  F00A         	call	_MOC_NOTWORK	;wreg free
  1412  000BCA  5006               	movf	?_MOC_NOTWORK,w,c
  1413  000BCC  6EDF               	movwf	indf2,c
  1414                           
  1415                           ;FRAME.c: 58:     }
  1416  000BCE  0012               	return	
  1417  000BD0                     l2732:
  1418                           
  1419                           ;FRAME.c: 60:     {;FRAME.c: 61:         int theta = message->id.w[0];
  1420  000BD0  EE20 F004          	lfsr	2,4
  1421  000BD4  500E               	movf	FRAME_SensorExcitationStatus@message,w,c
  1422  000BD6  26D9               	addwf	fsr2l,f,c
  1423  000BD8  500F               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1424  000BDA  22DA               	addwfc	fsr2h,f,c
  1425  000BDC  CFDE F011          	movff	postinc2,FRAME_SensorExcitationStatus@theta
  1426  000BE0  CFDD F012          	movff	postdec2,FRAME_SensorExcitationStatus@theta+1
  1427                           
  1428                           ;FRAME.c: 62:         if(IsInNeighbors(theta))
  1429  000BE4  C011  F006         	movff	FRAME_SensorExcitationStatus@theta,IsInNeighbors@message_adress
  1430  000BE8  C012  F007         	movff	FRAME_SensorExcitationStatus@theta+1,IsInNeighbors@message_adress+1
  1431  000BEC  EC9C  F008         	call	_IsInNeighbors	;wreg free
  1432  000BF0  0900               	iorlw	0
  1433  000BF2  B4D8               	btfsc	status,2,c
  1434  000BF4  0012               	return	
  1435                           
  1436                           ;FRAME.c: 63:         {;FRAME.c: 64:         LOCK_Set(message->data[0]);
  1437  000BF6  EE20 F008          	lfsr	2,8
  1438  000BFA  500E               	movf	FRAME_SensorExcitationStatus@message,w,c
  1439  000BFC  26D9               	addwf	fsr2l,f,c
  1440  000BFE  500F               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1441  000C00  22DA               	addwfc	fsr2h,f,c
  1442  000C02  50DF               	movf	indf2,w,c
  1443  000C04  ECCB  F00A         	call	_LOCK_Set
  1444  000C08  0012               	return		;funcret
  1445  000C0A                     __end_of_FRAME_SensorExcitationStatus:
  1446                           	opt callstack 0
  1447                           
  1448 ;; *************** function _MOC_Wynikowa_wartosc_roznicowa *****************
  1449 ;; Defined at:
  1450 ;;		line 33 in file "MOC_Funct.c"
  1451 ;; Parameters:    Size  Location     Type
  1452 ;;		None
  1453 ;; Auto vars:     Size  Location     Type
  1454 ;;		None
  1455 ;; Return value:  Size  Location     Type
  1456 ;;                  2    5[COMRAM] unsigned int 
  1457 ;; Registers used:
  1458 ;;		wreg, status,2
  1459 ;; Tracked objects:
  1460 ;;		On entry : 0/0
  1461 ;;		On exit  : 0/0
  1462 ;;		Unchanged: 0/0
  1463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1464 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1467 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1468 ;;Total ram usage:        2 bytes
  1469 ;; Hardware stack levels used:    1
  1470 ;; Hardware stack levels required when called:    3
  1471 ;; This function calls:
  1472 ;;		Nothing
  1473 ;; This function is called by:
  1474 ;;		_FRAME_SensorExcitationStatus
  1475 ;; This function uses a non-reentrant model
  1476 ;;
  1477                           
  1478                           	psect	text6
  1479  00152A                     __ptext6:
  1480                           	opt callstack 0
  1481  00152A                     _MOC_Wynikowa_wartosc_roznicowa:
  1482                           	opt callstack 24
  1483                           
  1484                           ;MOC_Funct.c: 35:     return 0x0220;
  1485                           
  1486                           ;incstack = 0
  1487  00152A  0E02               	movlw	2
  1488  00152C  6E07               	movwf	?_MOC_Wynikowa_wartosc_roznicowa+1,c
  1489  00152E  0E20               	movlw	32
  1490  001530  6E06               	movwf	?_MOC_Wynikowa_wartosc_roznicowa,c
  1491  001532  0012               	return		;funcret
  1492  001534                     __end_of_MOC_Wynikowa_wartosc_roznicowa:
  1493                           	opt callstack 0
  1494                           
  1495 ;; *************** function _MOC_NOTWORK *****************
  1496 ;; Defined at:
  1497 ;;		line 47 in file "MOC_Funct.c"
  1498 ;; Parameters:    Size  Location     Type
  1499 ;;		None
  1500 ;; Auto vars:     Size  Location     Type
  1501 ;;		None
  1502 ;; Return value:  Size  Location     Type
  1503 ;;                  2    5[COMRAM] unsigned int 
  1504 ;; Registers used:
  1505 ;;		wreg, status,2
  1506 ;; Tracked objects:
  1507 ;;		On entry : 0/0
  1508 ;;		On exit  : 0/0
  1509 ;;		Unchanged: 0/0
  1510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1511 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1514 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1515 ;;Total ram usage:        2 bytes
  1516 ;; Hardware stack levels used:    1
  1517 ;; Hardware stack levels required when called:    3
  1518 ;; This function calls:
  1519 ;;		Nothing
  1520 ;; This function is called by:
  1521 ;;		_FRAME_SensorExcitationStatus
  1522 ;; This function uses a non-reentrant model
  1523 ;;
  1524                           
  1525                           	psect	text7
  1526  00158E                     __ptext7:
  1527                           	opt callstack 0
  1528  00158E                     _MOC_NOTWORK:
  1529                           	opt callstack 24
  1530                           
  1531                           ;MOC_Funct.c: 49:     return 0xFF;
  1532                           
  1533                           ;incstack = 0
  1534  00158E  0E00               	movlw	0
  1535  001590  6E07               	movwf	?_MOC_NOTWORK+1,c
  1536  001592  6806               	setf	?_MOC_NOTWORK,c
  1537  001594  0012               	return		;funcret
  1538  001596                     __end_of_MOC_NOTWORK:
  1539                           	opt callstack 0
  1540                           
  1541 ;; *************** function _MOC_Frame_Counter *****************
  1542 ;; Defined at:
  1543 ;;		line 38 in file "MOC_Funct.c"
  1544 ;; Parameters:    Size  Location     Type
  1545 ;;		None
  1546 ;; Auto vars:     Size  Location     Type
  1547 ;;		None
  1548 ;; Return value:  Size  Location     Type
  1549 ;;                  2    5[COMRAM] unsigned int 
  1550 ;; Registers used:
  1551 ;;		wreg, status,2, status,0
  1552 ;; Tracked objects:
  1553 ;;		On entry : 0/0
  1554 ;;		On exit  : 0/0
  1555 ;;		Unchanged: 0/0
  1556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1557 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1560 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1561 ;;Total ram usage:        2 bytes
  1562 ;; Hardware stack levels used:    1
  1563 ;; Hardware stack levels required when called:    3
  1564 ;; This function calls:
  1565 ;;		Nothing
  1566 ;; This function is called by:
  1567 ;;		_FRAME_SensorExcitationStatus
  1568 ;; This function uses a non-reentrant model
  1569 ;;
  1570                           
  1571                           	psect	text8
  1572  00150E                     __ptext8:
  1573                           	opt callstack 0
  1574  00150E                     _MOC_Frame_Counter:
  1575                           	opt callstack 24
  1576                           
  1577                           ;MOC_Funct.c: 40:     static UINT zeta = 0x11;;MOC_Funct.c: 41:     return zeta++;
  1578                           
  1579                           ;incstack = 0
  1580  00150E  504D               	movf	MOC_Frame_Counter@zeta,w,c
  1581  001510  6E06               	movwf	?_MOC_Frame_Counter,c
  1582  001512  504E               	movf	MOC_Frame_Counter@zeta+1,w,c
  1583  001514  6E07               	movwf	?_MOC_Frame_Counter+1,c
  1584  001516  4A4D               	infsnz	MOC_Frame_Counter@zeta,f,c
  1585  001518  2A4E               	incf	MOC_Frame_Counter@zeta+1,f,c
  1586  00151A  0012               	return		;funcret
  1587  00151C                     __end_of_MOC_Frame_Counter:
  1588                           	opt callstack 0
  1589                           
  1590 ;; *************** function _MOC_Aktualna_Temperatura *****************
  1591 ;; Defined at:
  1592 ;;		line 43 in file "MOC_Funct.c"
  1593 ;; Parameters:    Size  Location     Type
  1594 ;;		None
  1595 ;; Auto vars:     Size  Location     Type
  1596 ;;		None
  1597 ;; Return value:  Size  Location     Type
  1598 ;;                  2    5[COMRAM] unsigned int 
  1599 ;; Registers used:
  1600 ;;		wreg, status,2
  1601 ;; Tracked objects:
  1602 ;;		On entry : 0/0
  1603 ;;		On exit  : 0/0
  1604 ;;		Unchanged: 0/0
  1605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1606 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1609 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1610 ;;Total ram usage:        2 bytes
  1611 ;; Hardware stack levels used:    1
  1612 ;; Hardware stack levels required when called:    3
  1613 ;; This function calls:
  1614 ;;		Nothing
  1615 ;; This function is called by:
  1616 ;;		_FRAME_SensorExcitationStatus
  1617 ;; This function uses a non-reentrant model
  1618 ;;
  1619                           
  1620                           	psect	text9
  1621  001534                     __ptext9:
  1622                           	opt callstack 0
  1623  001534                     _MOC_Aktualna_Temperatura:
  1624                           	opt callstack 24
  1625                           
  1626                           ;MOC_Funct.c: 45:     return 0x1B;
  1627                           
  1628                           ;incstack = 0
  1629  001534  0E00               	movlw	0
  1630  001536  6E07               	movwf	?_MOC_Aktualna_Temperatura+1,c
  1631  001538  0E1B               	movlw	27
  1632  00153A  6E06               	movwf	?_MOC_Aktualna_Temperatura,c
  1633  00153C  0012               	return		;funcret
  1634  00153E                     __end_of_MOC_Aktualna_Temperatura:
  1635                           	opt callstack 0
  1636                           
  1637 ;; *************** function _LOCK_Set *****************
  1638 ;; Defined at:
  1639 ;;		line 52 in file "LED.c"
  1640 ;; Parameters:    Size  Location     Type
  1641 ;;  k               1    wreg     unsigned char 
  1642 ;; Auto vars:     Size  Location     Type
  1643 ;;  k               1    5[COMRAM] unsigned char 
  1644 ;; Return value:  Size  Location     Type
  1645 ;;                  1    wreg      void 
  1646 ;; Registers used:
  1647 ;;		wreg
  1648 ;; Tracked objects:
  1649 ;;		On entry : 0/0
  1650 ;;		On exit  : 0/0
  1651 ;;		Unchanged: 0/0
  1652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1654 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1656 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1657 ;;Total ram usage:        1 bytes
  1658 ;; Hardware stack levels used:    1
  1659 ;; Hardware stack levels required when called:    3
  1660 ;; This function calls:
  1661 ;;		Nothing
  1662 ;; This function is called by:
  1663 ;;		_FRAME_SensorExcitationStatus
  1664 ;; This function uses a non-reentrant model
  1665 ;;
  1666                           
  1667                           	psect	text10
  1668  001596                     __ptext10:
  1669                           	opt callstack 0
  1670  001596                     _LOCK_Set:
  1671                           	opt callstack 24
  1672                           
  1673                           ;incstack = 0
  1674                           ;LOCK_Set@k stored from wreg
  1675  001596  6E06               	movwf	LOCK_Set@k,c
  1676                           
  1677                           ;LED.c: 52: void LOCK_Set(BYTE k);LED.c: 53: {;LED.c: 54:     LOCK = k;
  1678  001598  C006  F04C         	movff	LOCK_Set@k,_LOCK
  1679  00159C  0012               	return		;funcret
  1680  00159E                     __end_of_LOCK_Set:
  1681                           	opt callstack 0
  1682                           
  1683 ;; *************** function _LOCK_Get *****************
  1684 ;; Defined at:
  1685 ;;		line 57 in file "LED.c"
  1686 ;; Parameters:    Size  Location     Type
  1687 ;;		None
  1688 ;; Auto vars:     Size  Location     Type
  1689 ;;		None
  1690 ;; Return value:  Size  Location     Type
  1691 ;;                  1    wreg      unsigned char 
  1692 ;; Registers used:
  1693 ;;		wreg, status,2
  1694 ;; Tracked objects:
  1695 ;;		On entry : 0/0
  1696 ;;		On exit  : 0/0
  1697 ;;		Unchanged: 0/0
  1698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1703 ;;Total ram usage:        0 bytes
  1704 ;; Hardware stack levels used:    1
  1705 ;; Hardware stack levels required when called:    3
  1706 ;; This function calls:
  1707 ;;		Nothing
  1708 ;; This function is called by:
  1709 ;;		_FRAME_SensorExcitationStatus
  1710 ;; This function uses a non-reentrant model
  1711 ;;
  1712                           
  1713                           	psect	text11
  1714  0015A4                     __ptext11:
  1715                           	opt callstack 0
  1716  0015A4                     _LOCK_Get:
  1717                           	opt callstack 24
  1718                           
  1719                           ;LED.c: 59:     return LOCK;
  1720                           
  1721                           ;incstack = 0
  1722  0015A4  504C               	movf	_LOCK,w,c
  1723  0015A6  0012               	return		;funcret
  1724  0015A8                     __end_of_LOCK_Get:
  1725                           	opt callstack 0
  1726                           
  1727 ;; *************** function _IsInNeighbors *****************
  1728 ;; Defined at:
  1729 ;;		line 69 in file "FRAME.c"
  1730 ;; Parameters:    Size  Location     Type
  1731 ;;  message_adre    2    5[COMRAM] unsigned int 
  1732 ;; Auto vars:     Size  Location     Type
  1733 ;;  i               2   11[COMRAM] unsigned short 
  1734 ;; Return value:  Size  Location     Type
  1735 ;;                  1    wreg      unsigned char 
  1736 ;; Registers used:
  1737 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1738 ;; Tracked objects:
  1739 ;;		On entry : 0/0
  1740 ;;		On exit  : 0/0
  1741 ;;		Unchanged: 0/0
  1742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1743 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1744 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1745 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1746 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1747 ;;Total ram usage:        8 bytes
  1748 ;; Hardware stack levels used:    1
  1749 ;; Hardware stack levels required when called:    3
  1750 ;; This function calls:
  1751 ;;		Nothing
  1752 ;; This function is called by:
  1753 ;;		_FRAME_SensorExcitationStatus
  1754 ;; This function uses a non-reentrant model
  1755 ;;
  1756                           
  1757                           	psect	text12
  1758  001138                     __ptext12:
  1759                           	opt callstack 0
  1760  001138                     _IsInNeighbors:
  1761                           	opt callstack 24
  1762                           
  1763                           ;FRAME.c: 69: static BYTE IsInNeighbors(UINT message_adress);FRAME.c: 70: {;FRAME.c: 71:
      +                               WORD i;;FRAME.c: 73:     for(i=0; i<4; i++)
  1764                           
  1765                           ;incstack = 0
  1766  001138  0E00               	movlw	0
  1767  00113A  6E0D               	movwf	IsInNeighbors@i+1,c
  1768  00113C  0E00               	movlw	0
  1769  00113E  6E0C               	movwf	IsInNeighbors@i,c
  1770  001140                     l2508:
  1771                           
  1772                           ;FRAME.c: 74:         {;FRAME.c: 75:             if(message_adress == Dane->sasiedzi[i+(
      +                          4*0x10)].adres )
  1773  001140  0E0E               	movlw	14
  1774  001142  6E08               	movwf	??_IsInNeighbors& (0+255),c
  1775  001144  0E01               	movlw	1
  1776  001146  6E09               	movwf	(??_IsInNeighbors+1)& (0+255),c
  1777  001148  90D8               	bcf	status,0,c
  1778  00114A  340C               	rlcf	IsInNeighbors@i,w,c
  1779  00114C  6ED9               	movwf	fsr2l,c
  1780  00114E  340D               	rlcf	IsInNeighbors@i+1,w,c
  1781  001150  6EDA               	movwf	fsr2h,c
  1782  001152  90D8               	bcf	status,0,c
  1783  001154  36D9               	rlcf	fsr2l,f,c
  1784  001156  36DA               	rlcf	fsr2h,f,c
  1785  001158  5008               	movf	??_IsInNeighbors,w,c
  1786  00115A  26D9               	addwf	fsr2l,f,c
  1787  00115C  5009               	movf	??_IsInNeighbors+1,w,c
  1788  00115E  22DA               	addwfc	fsr2h,f,c
  1789  001160  5006               	movf	IsInNeighbors@message_adress,w,c
  1790  001162  18DE               	xorwf	postinc2,w,c
  1791  001164  E106               	bnz	l2514
  1792  001166  5007               	movf	IsInNeighbors@message_adress+1,w,c
  1793  001168  18DE               	xorwf	postinc2,w,c
  1794  00116A  A4D8               	btfss	status,2,c
  1795  00116C  D002               	goto	l2514
  1796                           
  1797                           ;FRAME.c: 76:             {;FRAME.c: 77:                 return 1;
  1798  00116E  0E01               	movlw	1
  1799  001170  0012               	return	
  1800  001172                     l2514:
  1801                           
  1802                           ;FRAME.c: 81:         }
  1803  001172  4A0C               	infsnz	IsInNeighbors@i,f,c
  1804  001174  2A0D               	incf	IsInNeighbors@i+1,f,c
  1805  001176  500D               	movf	IsInNeighbors@i+1,w,c
  1806  001178  E104               	bnz	u1050
  1807  00117A  0E04               	movlw	4
  1808  00117C  5C0C               	subwf	IsInNeighbors@i,w,c
  1809  00117E  A0D8               	btfss	status,0,c
  1810  001180  D7DF               	goto	l2508
  1811  001182                     u1050:
  1812                           
  1813                           ;FRAME.c: 82:     return 0;
  1814  001182  0E00               	movlw	0
  1815  001184  0012               	return		;funcret
  1816  001186                     __end_of_IsInNeighbors:
  1817                           	opt callstack 0
  1818                           
  1819 ;; *************** function _FRAME_PrzypisanieDokarty *****************
  1820 ;; Defined at:
  1821 ;;		line 433 in file "FRAME.c"
  1822 ;; Parameters:    Size  Location     Type
  1823 ;;  message         2    5[COMRAM] PTR struct .
  1824 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1825 ;; Auto vars:     Size  Location     Type
  1826 ;;		None
  1827 ;; Return value:  Size  Location     Type
  1828 ;;                  1    wreg      void 
  1829 ;; Registers used:
  1830 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1831 ;; Tracked objects:
  1832 ;;		On entry : 0/0
  1833 ;;		On exit  : 0/0
  1834 ;;		Unchanged: 0/0
  1835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1836 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1838 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1839 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1840 ;;Total ram usage:        3 bytes
  1841 ;; Hardware stack levels used:    1
  1842 ;; Hardware stack levels required when called:    3
  1843 ;; This function calls:
  1844 ;;		Nothing
  1845 ;; This function is called by:
  1846 ;;		_FRAME_HandleCanFrame
  1847 ;; This function uses a non-reentrant model
  1848 ;;
  1849                           
  1850                           	psect	text13
  1851  0012AC                     __ptext13:
  1852                           	opt callstack 0
  1853  0012AC                     _FRAME_PrzypisanieDokarty:
  1854                           	opt callstack 25
  1855                           
  1856                           ;FRAME.c: 433: static void FRAME_PrzypisanieDokarty(mID *message);FRAME.c: 434: {;FRAME.
      +                          c: 435:     if(message->message_type == 0x02)
  1857                           
  1858                           ;incstack = 0
  1859  0012AC  EE20 F001          	lfsr	2,1
  1860  0012B0  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  1861  0012B2  26D9               	addwf	fsr2l,f,c
  1862  0012B4  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  1863  0012B6  22DA               	addwfc	fsr2h,f,c
  1864  0012B8  0E02               	movlw	2
  1865  0012BA  18DE               	xorwf	postinc2,w,c
  1866  0012BC  A4D8               	btfss	status,2,c
  1867  0012BE  0012               	return	
  1868                           
  1869                           ;FRAME.c: 436:     {;FRAME.c: 437:         message->data_length = 1;
  1870  0012C0  EE20 F010          	lfsr	2,16
  1871  0012C4  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  1872  0012C6  26D9               	addwf	fsr2l,f,c
  1873  0012C8  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  1874  0012CA  22DA               	addwfc	fsr2h,f,c
  1875  0012CC  0E01               	movlw	1
  1876  0012CE  6EDF               	movwf	indf2,c
  1877                           
  1878                           ;FRAME.c: 438:         message->data[0] = 0xFF;
  1879  0012D0  EE20 F008          	lfsr	2,8
  1880  0012D4  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  1881  0012D6  26D9               	addwf	fsr2l,f,c
  1882  0012D8  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  1883  0012DA  22DA               	addwfc	fsr2h,f,c
  1884  0012DC  0EFF               	movlw	255
  1885  0012DE  6EDF               	movwf	indf2,c
  1886                           
  1887                           ;FRAME.c: 439:     }
  1888  0012E0  0012               	return		;funcret
  1889  0012E2                     __end_of_FRAME_PrzypisanieDokarty:
  1890                           	opt callstack 0
  1891                           
  1892 ;; *************** function _FRAME_Plot *****************
  1893 ;; Defined at:
  1894 ;;		line 338 in file "FRAME.c"
  1895 ;; Parameters:    Size  Location     Type
  1896 ;;  message         2   12[COMRAM] PTR struct .
  1897 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1898 ;; Auto vars:     Size  Location     Type
  1899 ;;		None
  1900 ;; Return value:  Size  Location     Type
  1901 ;;                  1    wreg      void 
  1902 ;; Registers used:
  1903 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1904 ;; Tracked objects:
  1905 ;;		On entry : 0/0
  1906 ;;		On exit  : 0/0
  1907 ;;		Unchanged: 0/0
  1908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1909 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1911 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1912 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1913 ;;Total ram usage:        3 bytes
  1914 ;; Hardware stack levels used:    1
  1915 ;; Hardware stack levels required when called:    4
  1916 ;; This function calls:
  1917 ;;		___lwdiv
  1918 ;; This function is called by:
  1919 ;;		_FRAME_HandleCanFrame
  1920 ;; This function uses a non-reentrant model
  1921 ;;
  1922                           
  1923                           	psect	text14
  1924  00108E                     __ptext14:
  1925                           	opt callstack 0
  1926  00108E                     _FRAME_Plot:
  1927                           	opt callstack 24
  1928                           
  1929                           ;FRAME.c: 338: static void FRAME_Plot(mID *message);FRAME.c: 339: {;FRAME.c: 341:     if
      +                          (message->message_type == 0x02)
  1930                           
  1931                           ;incstack = 0
  1932  00108E  EE20 F001          	lfsr	2,1
  1933  001092  500D               	movf	FRAME_Plot@message,w,c
  1934  001094  26D9               	addwf	fsr2l,f,c
  1935  001096  500E               	movf	FRAME_Plot@message+1,w,c
  1936  001098  22DA               	addwfc	fsr2h,f,c
  1937  00109A  0E02               	movlw	2
  1938  00109C  18DE               	xorwf	postinc2,w,c
  1939  00109E  A4D8               	btfss	status,2,c
  1940  0010A0  D013               	goto	l2792
  1941                           
  1942                           ;FRAME.c: 342:     {;FRAME.c: 343:         message->data[0] = (BYTE)(Dane->timerRysowani
      +                          aWykresuU16/10);
  1943  0010A2  EE20 F008          	lfsr	2,8
  1944  0010A6  500D               	movf	FRAME_Plot@message,w,c
  1945  0010A8  26D9               	addwf	fsr2l,f,c
  1946  0010AA  500E               	movf	FRAME_Plot@message+1,w,c
  1947  0010AC  22DA               	addwfc	fsr2h,f,c
  1948  0010AE  C00C F006          	movff	12,___lwdiv@dividend
  1949  0010B2  C00D F007          	movff	13,___lwdiv@dividend+1
  1950  0010B6  0E00               	movlw	0
  1951  0010B8  6E09               	movwf	___lwdiv@divisor+1,c
  1952  0010BA  0E0A               	movlw	10
  1953  0010BC  6E08               	movwf	___lwdiv@divisor,c
  1954  0010BE  EC73  F008         	call	___lwdiv	;wreg free
  1955  0010C2  5006               	movf	?___lwdiv,w,c
  1956  0010C4  6EDF               	movwf	indf2,c
  1957                           
  1958                           ;FRAME.c: 344:     }
  1959  0010C6  0012               	return	
  1960  0010C8                     l2792:
  1961                           
  1962                           ;FRAME.c: 346:     {;FRAME.c: 347:         Dane->timerRysowaniaWykresuU16 = (WORD)messag
      +                          e->data[0]*10;
  1963  0010C8  EE20 F008          	lfsr	2,8
  1964  0010CC  500D               	movf	FRAME_Plot@message,w,c
  1965  0010CE  26D9               	addwf	fsr2l,f,c
  1966  0010D0  500E               	movf	FRAME_Plot@message+1,w,c
  1967  0010D2  22DA               	addwfc	fsr2h,f,c
  1968  0010D4  50DF               	movf	indf2,w,c
  1969  0010D6  6E0F               	movwf	??_FRAME_Plot& (0+255),c
  1970  0010D8  500F               	movf	??_FRAME_Plot,w,c
  1971  0010DA  0D0A               	mullw	10
  1972  0010DC  CFF3 F00C          	movff	prodl,12
  1973  0010E0  CFF4 F00D          	movff	prodh,13
  1974  0010E4  0012               	return		;funcret
  1975  0010E6                     __end_of_FRAME_Plot:
  1976                           	opt callstack 0
  1977                           
  1978 ;; *************** function _FRAME_MapPosition *****************
  1979 ;; Defined at:
  1980 ;;		line 359 in file "FRAME.c"
  1981 ;; Parameters:    Size  Location     Type
  1982 ;;  message         2    5[COMRAM] PTR struct .
  1983 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1984 ;; Auto vars:     Size  Location     Type
  1985 ;;		None
  1986 ;; Return value:  Size  Location     Type
  1987 ;;                  1    wreg      void 
  1988 ;; Registers used:
  1989 ;;		None
  1990 ;; Tracked objects:
  1991 ;;		On entry : 0/0
  1992 ;;		On exit  : 0/0
  1993 ;;		Unchanged: 0/0
  1994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1995 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1998 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1999 ;;Total ram usage:        2 bytes
  2000 ;; Hardware stack levels used:    1
  2001 ;; Hardware stack levels required when called:    3
  2002 ;; This function calls:
  2003 ;;		Nothing
  2004 ;; This function is called by:
  2005 ;;		_FRAME_HandleCanFrame
  2006 ;; This function uses a non-reentrant model
  2007 ;;
  2008                           
  2009                           	psect	text15
  2010  0015A8                     __ptext15:
  2011                           	opt callstack 0
  2012  0015A8                     _FRAME_MapPosition:
  2013                           	opt callstack 25
  2014                           
  2015                           ;incstack = 0
  2016  0015A8  0012               	return		;funcret
  2017  0015AA                     __end_of_FRAME_MapPosition:
  2018                           	opt callstack 0
  2019                           
  2020 ;; *************** function _FRAME_ExcitationValue *****************
  2021 ;; Defined at:
  2022 ;;		line 116 in file "FRAME.c"
  2023 ;; Parameters:    Size  Location     Type
  2024 ;;  message         2    5[COMRAM] PTR struct .
  2025 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2026 ;; Auto vars:     Size  Location     Type
  2027 ;;		None
  2028 ;; Return value:  Size  Location     Type
  2029 ;;                  1    wreg      void 
  2030 ;; Registers used:
  2031 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2032 ;; Tracked objects:
  2033 ;;		On entry : 0/0
  2034 ;;		On exit  : 0/0
  2035 ;;		Unchanged: 0/0
  2036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2037 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2039 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2040 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2041 ;;Total ram usage:        3 bytes
  2042 ;; Hardware stack levels used:    1
  2043 ;; Hardware stack levels required when called:    3
  2044 ;; This function calls:
  2045 ;;		Nothing
  2046 ;; This function is called by:
  2047 ;;		_FRAME_HandleCanFrame
  2048 ;; This function uses a non-reentrant model
  2049 ;;
  2050                           
  2051                           	psect	text16
  2052  0012E2                     __ptext16:
  2053                           	opt callstack 0
  2054  0012E2                     _FRAME_ExcitationValue:
  2055                           	opt callstack 25
  2056                           
  2057                           ;FRAME.c: 116: static void FRAME_ExcitationValue(mID *message);FRAME.c: 117: {;FRAME.c: 
      +                          118:     if(message->message_type == 0x02)
  2058                           
  2059                           ;incstack = 0
  2060  0012E2  EE20 F001          	lfsr	2,1
  2061  0012E6  5006               	movf	FRAME_ExcitationValue@message,w,c
  2062  0012E8  26D9               	addwf	fsr2l,f,c
  2063  0012EA  5007               	movf	FRAME_ExcitationValue@message+1,w,c
  2064  0012EC  22DA               	addwfc	fsr2h,f,c
  2065  0012EE  0E02               	movlw	2
  2066  0012F0  18DE               	xorwf	postinc2,w,c
  2067  0012F2  A4D8               	btfss	status,2,c
  2068  0012F4  0012               	return	
  2069                           
  2070                           ;FRAME.c: 119:     {;FRAME.c: 120:         message->data_length = 1;
  2071  0012F6  EE20 F010          	lfsr	2,16
  2072  0012FA  5006               	movf	FRAME_ExcitationValue@message,w,c
  2073  0012FC  26D9               	addwf	fsr2l,f,c
  2074  0012FE  5007               	movf	FRAME_ExcitationValue@message+1,w,c
  2075  001300  22DA               	addwfc	fsr2h,f,c
  2076  001302  0E01               	movlw	1
  2077  001304  6EDF               	movwf	indf2,c
  2078                           
  2079                           ;FRAME.c: 125:         message->data[0] = 0xFF;
  2080  001306  EE20 F008          	lfsr	2,8
  2081  00130A  5006               	movf	FRAME_ExcitationValue@message,w,c
  2082  00130C  26D9               	addwf	fsr2l,f,c
  2083  00130E  5007               	movf	FRAME_ExcitationValue@message+1,w,c
  2084  001310  22DA               	addwfc	fsr2h,f,c
  2085  001312  0EFF               	movlw	255
  2086  001314  6EDF               	movwf	indf2,c
  2087                           
  2088                           ;FRAME.c: 126:     }
  2089  001316  0012               	return		;funcret
  2090  001318                     __end_of_FRAME_ExcitationValue:
  2091                           	opt callstack 0
  2092                           
  2093 ;; *************** function _FRAME_ExcitationMultiplier *****************
  2094 ;; Defined at:
  2095 ;;		line 140 in file "FRAME.c"
  2096 ;; Parameters:    Size  Location     Type
  2097 ;;  message         2    5[COMRAM] PTR struct .
  2098 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2099 ;; Auto vars:     Size  Location     Type
  2100 ;;  i               2    8[COMRAM] unsigned short 
  2101 ;; Return value:  Size  Location     Type
  2102 ;;                  1    wreg      void 
  2103 ;; Registers used:
  2104 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2105 ;; Tracked objects:
  2106 ;;		On entry : 0/0
  2107 ;;		On exit  : 0/0
  2108 ;;		Unchanged: 0/0
  2109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2110 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2111 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2112 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2113 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2114 ;;Total ram usage:        5 bytes
  2115 ;; Hardware stack levels used:    1
  2116 ;; Hardware stack levels required when called:    3
  2117 ;; This function calls:
  2118 ;;		Nothing
  2119 ;; This function is called by:
  2120 ;;		_FRAME_HandleCanFrame
  2121 ;; This function uses a non-reentrant model
  2122 ;;
  2123                           
  2124                           	psect	text17
  2125  001186                     __ptext17:
  2126                           	opt callstack 0
  2127  001186                     _FRAME_ExcitationMultiplier:
  2128                           	opt callstack 25
  2129                           
  2130                           ;FRAME.c: 140: static void FRAME_ExcitationMultiplier(mID *message);FRAME.c: 141: {;FRAM
      +                          E.c: 142:     WORD i;;FRAME.c: 144:     if(message->message_type == 0x02)
  2131                           
  2132                           ;incstack = 0
  2133  001186  EE20 F001          	lfsr	2,1
  2134  00118A  5006               	movf	FRAME_ExcitationMultiplier@message,w,c
  2135  00118C  26D9               	addwf	fsr2l,f,c
  2136  00118E  5007               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  2137  001190  22DA               	addwfc	fsr2h,f,c
  2138  001192  0E02               	movlw	2
  2139  001194  18DE               	xorwf	postinc2,w,c
  2140  001196  A4D8               	btfss	status,2,c
  2141  001198  0012               	return	
  2142                           
  2143                           ;FRAME.c: 145:     {;FRAME.c: 146:         message->data_length = 1;
  2144  00119A  EE20 F010          	lfsr	2,16
  2145  00119E  5006               	movf	FRAME_ExcitationMultiplier@message,w,c
  2146  0011A0  26D9               	addwf	fsr2l,f,c
  2147  0011A2  5007               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  2148  0011A4  22DA               	addwfc	fsr2h,f,c
  2149  0011A6  0E01               	movlw	1
  2150  0011A8  6EDF               	movwf	indf2,c
  2151                           
  2152                           ;FRAME.c: 147:         for(i=0; i<3; i++)
  2153  0011AA  0E00               	movlw	0
  2154  0011AC  6E0A               	movwf	FRAME_ExcitationMultiplier@i+1,c
  2155  0011AE  0E00               	movlw	0
  2156  0011B0  6E09               	movwf	FRAME_ExcitationMultiplier@i,c
  2157  0011B2                     l2764:
  2158                           
  2159                           ;FRAME.c: 148:         {;FRAME.c: 151:         }
  2160  0011B2  4A09               	infsnz	FRAME_ExcitationMultiplier@i,f,c
  2161  0011B4  2A0A               	incf	FRAME_ExcitationMultiplier@i+1,f,c
  2162  0011B6  500A               	movf	FRAME_ExcitationMultiplier@i+1,w,c
  2163  0011B8  E104               	bnz	u1220
  2164  0011BA  0E03               	movlw	3
  2165  0011BC  5C09               	subwf	FRAME_ExcitationMultiplier@i,w,c
  2166  0011BE  A0D8               	btfss	status,0,c
  2167  0011C0  D7F8               	goto	l2764
  2168  0011C2                     u1220:
  2169                           
  2170                           ;FRAME.c: 152:         message->data[0] = 0xFF;
  2171  0011C2  EE20 F008          	lfsr	2,8
  2172  0011C6  5006               	movf	FRAME_ExcitationMultiplier@message,w,c
  2173  0011C8  26D9               	addwf	fsr2l,f,c
  2174  0011CA  5007               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  2175  0011CC  22DA               	addwfc	fsr2h,f,c
  2176  0011CE  0EFF               	movlw	255
  2177  0011D0  6EDF               	movwf	indf2,c
  2178                           
  2179                           ;FRAME.c: 153:     }
  2180  0011D2  0012               	return		;funcret
  2181  0011D4                     __end_of_FRAME_ExcitationMultiplier:
  2182                           	opt callstack 0
  2183                           
  2184 ;; *************** function _FRAME_DeviceReset *****************
  2185 ;; Defined at:
  2186 ;;		line 274 in file "FRAME.c"
  2187 ;; Parameters:    Size  Location     Type
  2188 ;;  message         2    5[COMRAM] PTR struct .
  2189 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2190 ;; Auto vars:     Size  Location     Type
  2191 ;;		None
  2192 ;; Return value:  Size  Location     Type
  2193 ;;                  1    wreg      void 
  2194 ;; Registers used:
  2195 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2196 ;; Tracked objects:
  2197 ;;		On entry : 0/0
  2198 ;;		On exit  : 0/0
  2199 ;;		Unchanged: 0/0
  2200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2201 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2203 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2204 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2205 ;;Total ram usage:        3 bytes
  2206 ;; Hardware stack levels used:    1
  2207 ;; Hardware stack levels required when called:    3
  2208 ;; This function calls:
  2209 ;;		Nothing
  2210 ;; This function is called by:
  2211 ;;		_FRAME_HandleCanFrame
  2212 ;; This function uses a non-reentrant model
  2213 ;;
  2214                           
  2215                           	psect	text18
  2216  000A4C                     __ptext18:
  2217                           	opt callstack 0
  2218  000A4C                     _FRAME_DeviceReset:
  2219                           	opt callstack 25
  2220                           
  2221                           ;FRAME.c: 274: static void FRAME_DeviceReset(mID *message);FRAME.c: 275: {;FRAME.c: 276:
      +                               if(message->message_type == 0x02)
  2222                           
  2223                           ;incstack = 0
  2224  000A4C  EE20 F001          	lfsr	2,1
  2225  000A50  5006               	movf	FRAME_DeviceReset@message,w,c
  2226  000A52  26D9               	addwf	fsr2l,f,c
  2227  000A54  5007               	movf	FRAME_DeviceReset@message+1,w,c
  2228  000A56  22DA               	addwfc	fsr2h,f,c
  2229  000A58  0E02               	movlw	2
  2230  000A5A  18DE               	xorwf	postinc2,w,c
  2231  000A5C  A4D8               	btfss	status,2,c
  2232  000A5E  D056               	goto	l2786
  2233                           
  2234                           ;FRAME.c: 277:     {;FRAME.c: 278:         message->data_length = 1;
  2235  000A60  EE20 F010          	lfsr	2,16
  2236  000A64  5006               	movf	FRAME_DeviceReset@message,w,c
  2237  000A66  26D9               	addwf	fsr2l,f,c
  2238  000A68  5007               	movf	FRAME_DeviceReset@message+1,w,c
  2239  000A6A  22DA               	addwfc	fsr2h,f,c
  2240  000A6C  0E01               	movlw	1
  2241  000A6E  6EDF               	movwf	indf2,c
  2242                           
  2243                           ;FRAME.c: 280:         message->data[0] = (RCON>>6) & 0x01;
  2244  000A70  EE20 F008          	lfsr	2,8
  2245  000A74  5006               	movf	FRAME_DeviceReset@message,w,c
  2246  000A76  26D9               	addwf	fsr2l,f,c
  2247  000A78  5007               	movf	FRAME_DeviceReset@message+1,w,c
  2248  000A7A  22DA               	addwfc	fsr2h,f,c
  2249  000A7C  44D0               	rlncf	4048,w,c	;volatile
  2250  000A7E  46E8               	rlncf	wreg,f,c
  2251  000A80  0B03               	andlw	3
  2252  000A82  0B01               	andlw	1
  2253  000A84  6EDF               	movwf	indf2,c
  2254                           
  2255                           ;FRAME.c: 281:         message->data[1] = Flagi.wykonanoZapisDoFlash;
  2256  000A86  EE20 F009          	lfsr	2,9
  2257  000A8A  5006               	movf	FRAME_DeviceReset@message,w,c
  2258  000A8C  26D9               	addwf	fsr2l,f,c
  2259  000A8E  5007               	movf	FRAME_DeviceReset@message+1,w,c
  2260  000A90  22DA               	addwfc	fsr2h,f,c
  2261  000A92  A838               	btfss	_Flagi,4,c
  2262  000A94  D002               	goto	u1260
  2263  000A96  0E01               	movlw	1
  2264  000A98  D001               	goto	u1266
  2265  000A9A                     u1260:
  2266  000A9A  0E00               	movlw	0
  2267  000A9C                     u1266:
  2268  000A9C  6EDF               	movwf	indf2,c
  2269                           
  2270                           ;FRAME.c: 282:         message->data[2] = Flagi.pomiarTla;
  2271  000A9E  EE20 F00A          	lfsr	2,10
  2272  000AA2  5006               	movf	FRAME_DeviceReset@message,w,c
  2273  000AA4  26D9               	addwf	fsr2l,f,c
  2274  000AA6  5007               	movf	FRAME_DeviceReset@message+1,w,c
  2275  000AA8  22DA               	addwfc	fsr2h,f,c
  2276  000AAA  A038               	btfss	_Flagi,0,c
  2277  000AAC  D002               	goto	u1270
  2278  000AAE  0E01               	movlw	1
  2279  000AB0  D001               	goto	u1276
  2280  000AB2                     u1270:
  2281  000AB2  0E00               	movlw	0
  2282  000AB4                     u1276:
  2283  000AB4  6EDF               	movwf	indf2,c
  2284                           
  2285                           ;FRAME.c: 283:         message->data[3] = 0;
  2286  000AB6  EE20 F00B          	lfsr	2,11
  2287  000ABA  5006               	movf	FRAME_DeviceReset@message,w,c
  2288  000ABC  26D9               	addwf	fsr2l,f,c
  2289  000ABE  5007               	movf	FRAME_DeviceReset@message+1,w,c
  2290  000AC0  22DA               	addwfc	fsr2h,f,c
  2291  000AC2  0E00               	movlw	0
  2292  000AC4  6EDF               	movwf	indf2,c
  2293                           
  2294                           ;FRAME.c: 284:         message->data[4] = Dane->rokU16;
  2295  000AC6  EE20 F00C          	lfsr	2,12
  2296  000ACA  5006               	movf	FRAME_DeviceReset@message,w,c
  2297  000ACC  26D9               	addwf	fsr2l,f,c
  2298  000ACE  5007               	movf	FRAME_DeviceReset@message+1,w,c
  2299  000AD0  22DA               	addwfc	fsr2h,f,c
  2300  000AD2  C02E FFDF          	movff	46,indf2
  2301                           
  2302                           ;FRAME.c: 285:         message->data[5] = Dane->miesiacU16;
  2303  000AD6  EE20 F00D          	lfsr	2,13
  2304  000ADA  5006               	movf	FRAME_DeviceReset@message,w,c
  2305  000ADC  26D9               	addwf	fsr2l,f,c
  2306  000ADE  5007               	movf	FRAME_DeviceReset@message+1,w,c
  2307  000AE0  22DA               	addwfc	fsr2h,f,c
  2308  000AE2  C030 FFDF          	movff	48,indf2
  2309                           
  2310                           ;FRAME.c: 286:         message->data[6] = Dane->dzienU16;
  2311  000AE6  EE20 F00E          	lfsr	2,14
  2312  000AEA  5006               	movf	FRAME_DeviceReset@message,w,c
  2313  000AEC  26D9               	addwf	fsr2l,f,c
  2314  000AEE  5007               	movf	FRAME_DeviceReset@message+1,w,c
  2315  000AF0  22DA               	addwfc	fsr2h,f,c
  2316  000AF2  C032 FFDF          	movff	50,indf2
  2317                           
  2318                           ;FRAME.c: 287:         message->data[7] = Dane->godzinaU16;
  2319  000AF6  EE20 F00F          	lfsr	2,15
  2320  000AFA  5006               	movf	FRAME_DeviceReset@message,w,c
  2321  000AFC  26D9               	addwf	fsr2l,f,c
  2322  000AFE  5007               	movf	FRAME_DeviceReset@message+1,w,c
  2323  000B00  22DA               	addwfc	fsr2h,f,c
  2324  000B02  C034 FFDF          	movff	52,indf2
  2325                           
  2326                           ;FRAME.c: 288:         RCON &= ~(1<<6);
  2327  000B06  9CD0               	bcf	4048,6,c	;volatile
  2328                           
  2329                           ;FRAME.c: 289:         Flagi.wykonanoZapisDoFlash = 0;
  2330  000B08  9838               	bcf	_Flagi,4,c
  2331                           
  2332                           ;FRAME.c: 303:     }
  2333  000B0A  0012               	return	
  2334  000B0C                     l2786:
  2335                           
  2336                           ;FRAME.c: 305:     {;FRAME.c: 306:         message->data_length = 1;
  2337  000B0C  EE20 F010          	lfsr	2,16
  2338  000B10  5006               	movf	FRAME_DeviceReset@message,w,c
  2339  000B12  26D9               	addwf	fsr2l,f,c
  2340  000B14  5007               	movf	FRAME_DeviceReset@message+1,w,c
  2341  000B16  22DA               	addwfc	fsr2h,f,c
  2342  000B18  0E01               	movlw	1
  2343  000B1A  6EDF               	movwf	indf2,c
  2344                           
  2345                           ;FRAME.c: 328:         message->data[0] = 0xFF;
  2346  000B1C  EE20 F008          	lfsr	2,8
  2347  000B20  5006               	movf	FRAME_DeviceReset@message,w,c
  2348  000B22  26D9               	addwf	fsr2l,f,c
  2349  000B24  5007               	movf	FRAME_DeviceReset@message+1,w,c
  2350  000B26  22DA               	addwfc	fsr2h,f,c
  2351  000B28  0EFF               	movlw	255
  2352  000B2A  6EDF               	movwf	indf2,c
  2353  000B2C  0012               	return		;funcret
  2354  000B2E                     __end_of_FRAME_DeviceReset:
  2355                           	opt callstack 0
  2356                           
  2357 ;; *************** function _FRAME_AxisStatus *****************
  2358 ;; Defined at:
  2359 ;;		line 227 in file "FRAME.c"
  2360 ;; Parameters:    Size  Location     Type
  2361 ;;  message         2    5[COMRAM] PTR struct .
  2362 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2363 ;; Auto vars:     Size  Location     Type
  2364 ;;  i               2    0        unsigned short 
  2365 ;; Return value:  Size  Location     Type
  2366 ;;                  1    wreg      void 
  2367 ;; Registers used:
  2368 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2369 ;; Tracked objects:
  2370 ;;		On entry : 0/0
  2371 ;;		On exit  : 0/0
  2372 ;;		Unchanged: 0/0
  2373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2374 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2376 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2377 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2378 ;;Total ram usage:        3 bytes
  2379 ;; Hardware stack levels used:    1
  2380 ;; Hardware stack levels required when called:    3
  2381 ;; This function calls:
  2382 ;;		Nothing
  2383 ;; This function is called by:
  2384 ;;		_FRAME_HandleCanFrame
  2385 ;; This function uses a non-reentrant model
  2386 ;;
  2387                           
  2388                           	psect	text19
  2389  001318                     __ptext19:
  2390                           	opt callstack 0
  2391  001318                     _FRAME_AxisStatus:
  2392                           	opt callstack 25
  2393                           
  2394                           ;FRAME.c: 227: static void FRAME_AxisStatus(mID *message);FRAME.c: 228: {;FRAME.c: 229: 
      +                              WORD i;;FRAME.c: 231:     if(message->message_type == 0x02)
  2395                           
  2396                           ;incstack = 0
  2397  001318  EE20 F001          	lfsr	2,1
  2398  00131C  5006               	movf	FRAME_AxisStatus@message,w,c
  2399  00131E  26D9               	addwf	fsr2l,f,c
  2400  001320  5007               	movf	FRAME_AxisStatus@message+1,w,c
  2401  001322  22DA               	addwfc	fsr2h,f,c
  2402  001324  0E02               	movlw	2
  2403  001326  18DE               	xorwf	postinc2,w,c
  2404  001328  A4D8               	btfss	status,2,c
  2405  00132A  0012               	return	
  2406                           
  2407                           ;FRAME.c: 232:     {;FRAME.c: 233:         message->data_length = 1;
  2408  00132C  EE20 F010          	lfsr	2,16
  2409  001330  5006               	movf	FRAME_AxisStatus@message,w,c
  2410  001332  26D9               	addwf	fsr2l,f,c
  2411  001334  5007               	movf	FRAME_AxisStatus@message+1,w,c
  2412  001336  22DA               	addwfc	fsr2h,f,c
  2413  001338  0E01               	movlw	1
  2414  00133A  6EDF               	movwf	indf2,c
  2415                           
  2416                           ;FRAME.c: 244:         message->data[0] = 0xFF;
  2417  00133C  EE20 F008          	lfsr	2,8
  2418  001340  5006               	movf	FRAME_AxisStatus@message,w,c
  2419  001342  26D9               	addwf	fsr2l,f,c
  2420  001344  5007               	movf	FRAME_AxisStatus@message+1,w,c
  2421  001346  22DA               	addwfc	fsr2h,f,c
  2422  001348  0EFF               	movlw	255
  2423  00134A  6EDF               	movwf	indf2,c
  2424                           
  2425                           ;FRAME.c: 245:     }
  2426  00134C  0012               	return		;funcret
  2427  00134E                     __end_of_FRAME_AxisStatus:
  2428                           	opt callstack 0
  2429                           
  2430 ;; *************** function _FRAME_AveragingTimes *****************
  2431 ;; Defined at:
  2432 ;;		line 168 in file "FRAME.c"
  2433 ;; Parameters:    Size  Location     Type
  2434 ;;  message         2    5[COMRAM] PTR struct .
  2435 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2436 ;; Auto vars:     Size  Location     Type
  2437 ;;		None
  2438 ;; Return value:  Size  Location     Type
  2439 ;;                  1    wreg      void 
  2440 ;; Registers used:
  2441 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2442 ;; Tracked objects:
  2443 ;;		On entry : 0/0
  2444 ;;		On exit  : 0/0
  2445 ;;		Unchanged: 0/0
  2446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2447 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2449 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2450 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2451 ;;Total ram usage:        3 bytes
  2452 ;; Hardware stack levels used:    1
  2453 ;; Hardware stack levels required when called:    3
  2454 ;; This function calls:
  2455 ;;		Nothing
  2456 ;; This function is called by:
  2457 ;;		_FRAME_HandleCanFrame
  2458 ;; This function uses a non-reentrant model
  2459 ;;
  2460                           
  2461                           	psect	text20
  2462  00134E                     __ptext20:
  2463                           	opt callstack 0
  2464  00134E                     _FRAME_AveragingTimes:
  2465                           	opt callstack 25
  2466                           
  2467                           ;FRAME.c: 168: static void FRAME_AveragingTimes(mID *message);FRAME.c: 169: {;FRAME.c: 1
      +                          70:     if(message->message_type == 0x02)
  2468                           
  2469                           ;incstack = 0
  2470  00134E  EE20 F001          	lfsr	2,1
  2471  001352  5006               	movf	FRAME_AveragingTimes@message,w,c
  2472  001354  26D9               	addwf	fsr2l,f,c
  2473  001356  5007               	movf	FRAME_AveragingTimes@message+1,w,c
  2474  001358  22DA               	addwfc	fsr2h,f,c
  2475  00135A  0E02               	movlw	2
  2476  00135C  18DE               	xorwf	postinc2,w,c
  2477  00135E  A4D8               	btfss	status,2,c
  2478  001360  0012               	return	
  2479                           
  2480                           ;FRAME.c: 171:     {;FRAME.c: 172:         message->data_length = 1;
  2481  001362  EE20 F010          	lfsr	2,16
  2482  001366  5006               	movf	FRAME_AveragingTimes@message,w,c
  2483  001368  26D9               	addwf	fsr2l,f,c
  2484  00136A  5007               	movf	FRAME_AveragingTimes@message+1,w,c
  2485  00136C  22DA               	addwfc	fsr2h,f,c
  2486  00136E  0E01               	movlw	1
  2487  001370  6EDF               	movwf	indf2,c
  2488                           
  2489                           ;FRAME.c: 180:         message->data[0] = 0xFF;
  2490  001372  EE20 F008          	lfsr	2,8
  2491  001376  5006               	movf	FRAME_AveragingTimes@message,w,c
  2492  001378  26D9               	addwf	fsr2l,f,c
  2493  00137A  5007               	movf	FRAME_AveragingTimes@message+1,w,c
  2494  00137C  22DA               	addwfc	fsr2h,f,c
  2495  00137E  0EFF               	movlw	255
  2496  001380  6EDF               	movwf	indf2,c
  2497                           
  2498                           ;FRAME.c: 181:     }
  2499  001382  0012               	return		;funcret
  2500  001384                     __end_of_FRAME_AveragingTimes:
  2501                           	opt callstack 0
  2502                           
  2503 ;; *************** function _FRAME_AnalogValue *****************
  2504 ;; Defined at:
  2505 ;;		line 407 in file "FRAME.c"
  2506 ;; Parameters:    Size  Location     Type
  2507 ;;  message         2    5[COMRAM] PTR struct .
  2508 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2509 ;;  set             2    7[COMRAM] unsigned short 
  2510 ;; Auto vars:     Size  Location     Type
  2511 ;;  i               2    0        unsigned short 
  2512 ;; Return value:  Size  Location     Type
  2513 ;;                  1    wreg      void 
  2514 ;; Registers used:
  2515 ;;		None
  2516 ;; Tracked objects:
  2517 ;;		On entry : 0/0
  2518 ;;		On exit  : 0/0
  2519 ;;		Unchanged: 0/0
  2520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2521 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2524 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2525 ;;Total ram usage:        4 bytes
  2526 ;; Hardware stack levels used:    1
  2527 ;; Hardware stack levels required when called:    3
  2528 ;; This function calls:
  2529 ;;		Nothing
  2530 ;; This function is called by:
  2531 ;;		_FRAME_HandleCanFrame
  2532 ;; This function uses a non-reentrant model
  2533 ;;
  2534                           
  2535                           	psect	text21
  2536  0015AA                     __ptext21:
  2537                           	opt callstack 0
  2538  0015AA                     _FRAME_AnalogValue:
  2539                           	opt callstack 25
  2540                           
  2541                           ;incstack = 0
  2542  0015AA  0012               	return		;funcret
  2543  0015AC                     __end_of_FRAME_AnalogValue:
  2544                           	opt callstack 0
  2545                           
  2546 ;; *************** function _FRAME_AdressOfNeighbors *****************
  2547 ;; Defined at:
  2548 ;;		line 451 in file "FRAME.c"
  2549 ;; Parameters:    Size  Location     Type
  2550 ;;  message         2   11[COMRAM] PTR struct .
  2551 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2552 ;;  nrRamki         2   13[COMRAM] unsigned short 
  2553 ;; Auto vars:     Size  Location     Type
  2554 ;;  k               2   29[COMRAM] unsigned short 
  2555 ;;  i               2   31[COMRAM] unsigned short 
  2556 ;; Return value:  Size  Location     Type
  2557 ;;                  1    wreg      void 
  2558 ;; Registers used:
  2559 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2560 ;; Tracked objects:
  2561 ;;		On entry : 0/0
  2562 ;;		On exit  : 0/0
  2563 ;;		Unchanged: 0/0
  2564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2565 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2566 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2567 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2568 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2569 ;;Total ram usage:       22 bytes
  2570 ;; Hardware stack levels used:    1
  2571 ;; Hardware stack levels required when called:    5
  2572 ;; This function calls:
  2573 ;;		_LED_Clear
  2574 ;;		___wmul
  2575 ;; This function is called by:
  2576 ;;		_FRAME_HandleCanFrame
  2577 ;; This function uses a non-reentrant model
  2578 ;;
  2579                           
  2580                           	psect	text22
  2581  000060                     __ptext22:
  2582                           	opt callstack 0
  2583  000060                     _FRAME_AdressOfNeighbors:
  2584                           	opt callstack 23
  2585                           
  2586                           ;FRAME.c: 451: static void FRAME_AdressOfNeighbors(mID *message, WORD nrRamki);FRAME.c: 
      +                          452: {;FRAME.c: 453:     WORD i;;FRAME.c: 457:     if(message->message_type == 0x02)
  2587                           
  2588                           ;incstack = 0
  2589  000060  EE20 F001          	lfsr	2,1
  2590  000064  500C               	movf	FRAME_AdressOfNeighbors@message,w,c
  2591  000066  26D9               	addwf	fsr2l,f,c
  2592  000068  500D               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  2593  00006A  22DA               	addwfc	fsr2h,f,c
  2594  00006C  0E02               	movlw	2
  2595  00006E  18DE               	xorwf	postinc2,w,c
  2596  000070  A4D8               	btfss	status,2,c
  2597  000072  D07F               	goto	l2818
  2598                           
  2599                           ;FRAME.c: 458:     {;FRAME.c: 460:         message->data_length = 8;
  2600  000074  EE20 F010          	lfsr	2,16
  2601  000078  500C               	movf	FRAME_AdressOfNeighbors@message,w,c
  2602  00007A  26D9               	addwf	fsr2l,f,c
  2603  00007C  500D               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  2604  00007E  22DA               	addwfc	fsr2h,f,c
  2605  000080  0E08               	movlw	8
  2606  000082  6EDF               	movwf	indf2,c
  2607                           
  2608                           ;FRAME.c: 461:         for(i=0; i<4; i++)
  2609  000084  0E00               	movlw	0
  2610  000086  6E21               	movwf	FRAME_AdressOfNeighbors@i+1,c
  2611  000088  0E00               	movlw	0
  2612  00008A  6E20               	movwf	FRAME_AdressOfNeighbors@i,c
  2613  00008C                     l2812:
  2614                           
  2615                           ;FRAME.c: 462:         {;FRAME.c: 463:             message->data[2*i] = (BYTE)(Dane->sas
      +                          iedzi[i+(4*nrRamki)].adres >> 8);
  2616  00008C  C020  F010         	movff	FRAME_AdressOfNeighbors@i,??_FRAME_AdressOfNeighbors
  2617  000090  C021  F011         	movff	FRAME_AdressOfNeighbors@i+1,??_FRAME_AdressOfNeighbors+1
  2618  000094  90D8               	bcf	status,0,c
  2619  000096  3610               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  2620  000098  3611               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  2621  00009A  C00C  F012         	movff	FRAME_AdressOfNeighbors@message,??_FRAME_AdressOfNeighbors+2
  2622  00009E  C00D  F013         	movff	FRAME_AdressOfNeighbors@message+1,??_FRAME_AdressOfNeighbors+3
  2623  0000A2  5010               	movf	??_FRAME_AdressOfNeighbors,w,c
  2624  0000A4  2612               	addwf	??_FRAME_AdressOfNeighbors+2,f,c
  2625  0000A6  5011               	movf	??_FRAME_AdressOfNeighbors+1,w,c
  2626  0000A8  2213               	addwfc	??_FRAME_AdressOfNeighbors+3,f,c
  2627  0000AA  0E08               	movlw	8
  2628  0000AC  2412               	addwf	??_FRAME_AdressOfNeighbors+2,w,c
  2629  0000AE  6ED9               	movwf	fsr2l,c
  2630  0000B0  0E00               	movlw	0
  2631  0000B2  2013               	addwfc	??_FRAME_AdressOfNeighbors+3,w,c
  2632  0000B4  6EDA               	movwf	fsr2h,c
  2633  0000B6  C00E  F014         	movff	FRAME_AdressOfNeighbors@nrRamki,??_FRAME_AdressOfNeighbors+4
  2634  0000BA  C00F  F015         	movff	FRAME_AdressOfNeighbors@nrRamki+1,??_FRAME_AdressOfNeighbors+5
  2635  0000BE  90D8               	bcf	status,0,c
  2636  0000C0  3614               	rlcf	??_FRAME_AdressOfNeighbors+4,f,c
  2637  0000C2  3615               	rlcf	??_FRAME_AdressOfNeighbors+5,f,c
  2638  0000C4  90D8               	bcf	status,0,c
  2639  0000C6  3614               	rlcf	??_FRAME_AdressOfNeighbors+4,f,c
  2640  0000C8  3615               	rlcf	??_FRAME_AdressOfNeighbors+5,f,c
  2641  0000CA  5020               	movf	FRAME_AdressOfNeighbors@i,w,c
  2642  0000CC  2614               	addwf	??_FRAME_AdressOfNeighbors+4,f,c
  2643  0000CE  5021               	movf	FRAME_AdressOfNeighbors@i+1,w,c
  2644  0000D0  2215               	addwfc	??_FRAME_AdressOfNeighbors+5,f,c
  2645  0000D2  90D8               	bcf	status,0,c
  2646  0000D4  3614               	rlcf	??_FRAME_AdressOfNeighbors+4,f,c
  2647  0000D6  3615               	rlcf	??_FRAME_AdressOfNeighbors+5,f,c
  2648  0000D8  90D8               	bcf	status,0,c
  2649  0000DA  3614               	rlcf	??_FRAME_AdressOfNeighbors+4,f,c
  2650  0000DC  3615               	rlcf	??_FRAME_AdressOfNeighbors+5,f,c
  2651  0000DE  0E0E               	movlw	14
  2652  0000E0  2414               	addwf	??_FRAME_AdressOfNeighbors+4,w,c
  2653  0000E2  6EE1               	movwf	fsr1l,c
  2654  0000E4  0E00               	movlw	0
  2655  0000E6  2015               	addwfc	??_FRAME_AdressOfNeighbors+5,w,c
  2656  0000E8  6EE2               	movwf	fsr1h,c
  2657  0000EA  CFE6 F016          	movff	postinc1,??_FRAME_AdressOfNeighbors+6
  2658  0000EE  CFE5 F017          	movff	postdec1,??_FRAME_AdressOfNeighbors+7
  2659  0000F2  C017  F016         	movff	??_FRAME_AdressOfNeighbors+7,??_FRAME_AdressOfNeighbors+6
  2660  0000F6  6A17               	clrf	??_FRAME_AdressOfNeighbors+7,c
  2661  0000F8  5016               	movf	??_FRAME_AdressOfNeighbors+6,w,c
  2662  0000FA  6EDF               	movwf	indf2,c
  2663                           
  2664                           ;FRAME.c: 464:             message->data[(2*i)+1] = (BYTE)Dane->sasiedzi[i+(4*nrRamki)].
      +                          adres;
  2665  0000FC  C00E  F010         	movff	FRAME_AdressOfNeighbors@nrRamki,??_FRAME_AdressOfNeighbors
  2666  000100  C00F  F011         	movff	FRAME_AdressOfNeighbors@nrRamki+1,??_FRAME_AdressOfNeighbors+1
  2667  000104  90D8               	bcf	status,0,c
  2668  000106  3610               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  2669  000108  3611               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  2670  00010A  90D8               	bcf	status,0,c
  2671  00010C  3610               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  2672  00010E  3611               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  2673  000110  5020               	movf	FRAME_AdressOfNeighbors@i,w,c
  2674  000112  2610               	addwf	??_FRAME_AdressOfNeighbors,f,c
  2675  000114  5021               	movf	FRAME_AdressOfNeighbors@i+1,w,c
  2676  000116  2211               	addwfc	??_FRAME_AdressOfNeighbors+1,f,c
  2677  000118  90D8               	bcf	status,0,c
  2678  00011A  3610               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  2679  00011C  3611               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  2680  00011E  90D8               	bcf	status,0,c
  2681  000120  3610               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  2682  000122  3611               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  2683  000124  0E0E               	movlw	14
  2684  000126  2410               	addwf	??_FRAME_AdressOfNeighbors,w,c
  2685  000128  6ED9               	movwf	fsr2l,c
  2686  00012A  0E00               	movlw	0
  2687  00012C  2011               	addwfc	??_FRAME_AdressOfNeighbors+1,w,c
  2688  00012E  6EDA               	movwf	fsr2h,c
  2689  000130  C020  F012         	movff	FRAME_AdressOfNeighbors@i,??_FRAME_AdressOfNeighbors+2
  2690  000134  C021  F013         	movff	FRAME_AdressOfNeighbors@i+1,??_FRAME_AdressOfNeighbors+3
  2691  000138  90D8               	bcf	status,0,c
  2692  00013A  3612               	rlcf	??_FRAME_AdressOfNeighbors+2,f,c
  2693  00013C  3613               	rlcf	??_FRAME_AdressOfNeighbors+3,f,c
  2694  00013E  C00C  F014         	movff	FRAME_AdressOfNeighbors@message,??_FRAME_AdressOfNeighbors+4
  2695  000142  C00D  F015         	movff	FRAME_AdressOfNeighbors@message+1,??_FRAME_AdressOfNeighbors+5
  2696  000146  5012               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  2697  000148  2614               	addwf	??_FRAME_AdressOfNeighbors+4,f,c
  2698  00014A  5013               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  2699  00014C  2215               	addwfc	??_FRAME_AdressOfNeighbors+5,f,c
  2700  00014E  0E09               	movlw	9
  2701  000150  2414               	addwf	??_FRAME_AdressOfNeighbors+4,w,c
  2702  000152  6EE1               	movwf	fsr1l,c
  2703  000154  0E00               	movlw	0
  2704  000156  2015               	addwfc	??_FRAME_AdressOfNeighbors+5,w,c
  2705  000158  6EE2               	movwf	fsr1h,c
  2706  00015A  CFDF FFE7          	movff	indf2,indf1
  2707                           
  2708                           ;FRAME.c: 465:         }
  2709  00015E  4A20               	infsnz	FRAME_AdressOfNeighbors@i,f,c
  2710  000160  2A21               	incf	FRAME_AdressOfNeighbors@i+1,f,c
  2711  000162  5021               	movf	FRAME_AdressOfNeighbors@i+1,w,c
  2712  000164  E105               	bnz	u1320
  2713  000166  0E04               	movlw	4
  2714  000168  5C20               	subwf	FRAME_AdressOfNeighbors@i,w,c
  2715  00016A  B0D8               	btfsc	status,0,c
  2716  00016C  0012               	return	
  2717  00016E  D78E               	goto	l2812
  2718  000170                     u1320:
  2719  000170  0012               	return	
  2720  000172                     l2818:
  2721                           
  2722                           ;FRAME.c: 469:     {;FRAME.c: 470:         for(i=0; i<4; i++)
  2723  000172  0E00               	movlw	0
  2724  000174  6E21               	movwf	FRAME_AdressOfNeighbors@i+1,c
  2725  000176  0E00               	movlw	0
  2726  000178  6E20               	movwf	FRAME_AdressOfNeighbors@i,c
  2727  00017A                     l2824:
  2728                           
  2729                           ;FRAME.c: 471:         {;FRAME.c: 472:             Dane->sasiedzi[i+(4*nrRamki)].adres =
      +                           ((WORD)message->data[2*i] << 8) |
  2730  00017A  C020  F010         	movff	FRAME_AdressOfNeighbors@i,??_FRAME_AdressOfNeighbors
  2731  00017E  C021  F011         	movff	FRAME_AdressOfNeighbors@i+1,??_FRAME_AdressOfNeighbors+1
  2732  000182  90D8               	bcf	status,0,c
  2733  000184  3610               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  2734  000186  3611               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  2735  000188  C00C  F012         	movff	FRAME_AdressOfNeighbors@message,??_FRAME_AdressOfNeighbors+2
  2736  00018C  C00D  F013         	movff	FRAME_AdressOfNeighbors@message+1,??_FRAME_AdressOfNeighbors+3
  2737  000190  5010               	movf	??_FRAME_AdressOfNeighbors,w,c
  2738  000192  2612               	addwf	??_FRAME_AdressOfNeighbors+2,f,c
  2739  000194  5011               	movf	??_FRAME_AdressOfNeighbors+1,w,c
  2740  000196  2213               	addwfc	??_FRAME_AdressOfNeighbors+3,f,c
  2741  000198  0E08               	movlw	8
  2742  00019A  2412               	addwf	??_FRAME_AdressOfNeighbors+2,w,c
  2743  00019C  6ED9               	movwf	fsr2l,c
  2744  00019E  0E00               	movlw	0
  2745  0001A0  2013               	addwfc	??_FRAME_AdressOfNeighbors+3,w,c
  2746  0001A2  6EDA               	movwf	fsr2h,c
  2747  0001A4  50DF               	movf	indf2,w,c
  2748  0001A6  6E14               	movwf	(??_FRAME_AdressOfNeighbors+4)& (0+255),c
  2749  0001A8  5014               	movf	??_FRAME_AdressOfNeighbors+4,w,c
  2750  0001AA  6E16               	movwf	(??_FRAME_AdressOfNeighbors+6)& (0+255),c
  2751  0001AC  6A15               	clrf	(??_FRAME_AdressOfNeighbors+5)& (0+255),c
  2752  0001AE  C020  F017         	movff	FRAME_AdressOfNeighbors@i,??_FRAME_AdressOfNeighbors+7
  2753  0001B2  C021  F018         	movff	FRAME_AdressOfNeighbors@i+1,??_FRAME_AdressOfNeighbors+8
  2754  0001B6  90D8               	bcf	status,0,c
  2755  0001B8  3617               	rlcf	??_FRAME_AdressOfNeighbors+7,f,c
  2756  0001BA  3618               	rlcf	??_FRAME_AdressOfNeighbors+8,f,c
  2757  0001BC  C00C  F019         	movff	FRAME_AdressOfNeighbors@message,??_FRAME_AdressOfNeighbors+9
  2758  0001C0  C00D  F01A         	movff	FRAME_AdressOfNeighbors@message+1,??_FRAME_AdressOfNeighbors+10
  2759  0001C4  5017               	movf	??_FRAME_AdressOfNeighbors+7,w,c
  2760  0001C6  2619               	addwf	??_FRAME_AdressOfNeighbors+9,f,c
  2761  0001C8  5018               	movf	??_FRAME_AdressOfNeighbors+8,w,c
  2762  0001CA  221A               	addwfc	??_FRAME_AdressOfNeighbors+10,f,c
  2763  0001CC  0E09               	movlw	9
  2764  0001CE  2419               	addwf	??_FRAME_AdressOfNeighbors+9,w,c
  2765  0001D0  6ED9               	movwf	fsr2l,c
  2766  0001D2  0E00               	movlw	0
  2767  0001D4  201A               	addwfc	??_FRAME_AdressOfNeighbors+10,w,c
  2768  0001D6  6EDA               	movwf	fsr2h,c
  2769  0001D8  50DF               	movf	indf2,w,c
  2770  0001DA  6E1B               	movwf	(??_FRAME_AdressOfNeighbors+11)& (0+255),c
  2771  0001DC  501B               	movf	??_FRAME_AdressOfNeighbors+11,w,c
  2772  0001DE  1215               	iorwf	??_FRAME_AdressOfNeighbors+5,f,c
  2773  0001E0  0E00               	movlw	0
  2774  0001E2  1216               	iorwf	??_FRAME_AdressOfNeighbors+6,f,c
  2775  0001E4  C00E  F01C         	movff	FRAME_AdressOfNeighbors@nrRamki,??_FRAME_AdressOfNeighbors+12
  2776  0001E8  C00F  F01D         	movff	FRAME_AdressOfNeighbors@nrRamki+1,??_FRAME_AdressOfNeighbors+13
  2777  0001EC  90D8               	bcf	status,0,c
  2778  0001EE  361C               	rlcf	??_FRAME_AdressOfNeighbors+12,f,c
  2779  0001F0  361D               	rlcf	??_FRAME_AdressOfNeighbors+13,f,c
  2780  0001F2  90D8               	bcf	status,0,c
  2781  0001F4  361C               	rlcf	??_FRAME_AdressOfNeighbors+12,f,c
  2782  0001F6  361D               	rlcf	??_FRAME_AdressOfNeighbors+13,f,c
  2783  0001F8  5020               	movf	FRAME_AdressOfNeighbors@i,w,c
  2784  0001FA  261C               	addwf	??_FRAME_AdressOfNeighbors+12,f,c
  2785  0001FC  5021               	movf	FRAME_AdressOfNeighbors@i+1,w,c
  2786  0001FE  221D               	addwfc	??_FRAME_AdressOfNeighbors+13,f,c
  2787  000200  90D8               	bcf	status,0,c
  2788  000202  361C               	rlcf	??_FRAME_AdressOfNeighbors+12,f,c
  2789  000204  361D               	rlcf	??_FRAME_AdressOfNeighbors+13,f,c
  2790  000206  90D8               	bcf	status,0,c
  2791  000208  361C               	rlcf	??_FRAME_AdressOfNeighbors+12,f,c
  2792  00020A  361D               	rlcf	??_FRAME_AdressOfNeighbors+13,f,c
  2793  00020C  0E0E               	movlw	14
  2794  00020E  241C               	addwf	??_FRAME_AdressOfNeighbors+12,w,c
  2795  000210  6ED9               	movwf	fsr2l,c
  2796  000212  0E00               	movlw	0
  2797  000214  201D               	addwfc	??_FRAME_AdressOfNeighbors+13,w,c
  2798  000216  6EDA               	movwf	fsr2h,c
  2799  000218  C015  FFDE         	movff	??_FRAME_AdressOfNeighbors+5,postinc2
  2800  00021C  C016  FFDD         	movff	??_FRAME_AdressOfNeighbors+6,postdec2
  2801                           
  2802                           ;FRAME.c: 476:             Dane->sasiedzi[i+(4*nrRamki)].pointerNaSasiada = &wartosciSas
      +                          iada[i+(4*nrRamki)];
  2803  000220  C00E  F010         	movff	FRAME_AdressOfNeighbors@nrRamki,??_FRAME_AdressOfNeighbors
  2804  000224  C00F  F011         	movff	FRAME_AdressOfNeighbors@nrRamki+1,??_FRAME_AdressOfNeighbors+1
  2805  000228  90D8               	bcf	status,0,c
  2806  00022A  3610               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  2807  00022C  3611               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  2808  00022E  90D8               	bcf	status,0,c
  2809  000230  3610               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  2810  000232  3611               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  2811  000234  C010  F006         	movff	??_FRAME_AdressOfNeighbors,___wmul@multiplier
  2812  000238  C011  F007         	movff	??_FRAME_AdressOfNeighbors+1,___wmul@multiplier+1
  2813  00023C  0E00               	movlw	0
  2814  00023E  6E09               	movwf	___wmul@multiplicand+1,c
  2815  000240  0E44               	movlw	68
  2816  000242  6E08               	movwf	___wmul@multiplicand,c
  2817  000244  EC1C  F00A         	call	___wmul	;wreg free
  2818  000248  0EC6               	movlw	low _wartosciSasiada
  2819  00024A  6E12               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  2820  00024C  0E00               	movlw	high _wartosciSasiada
  2821  00024E  6E13               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  2822  000250  5006               	movf	?___wmul,w,c
  2823  000252  2612               	addwf	??_FRAME_AdressOfNeighbors+2,f,c
  2824  000254  5007               	movf	?___wmul+1,w,c
  2825  000256  2213               	addwfc	??_FRAME_AdressOfNeighbors+3,f,c
  2826  000258  C020  F006         	movff	FRAME_AdressOfNeighbors@i,___wmul@multiplier
  2827  00025C  C021  F007         	movff	FRAME_AdressOfNeighbors@i+1,___wmul@multiplier+1
  2828  000260  0E00               	movlw	0
  2829  000262  6E09               	movwf	___wmul@multiplicand+1,c
  2830  000264  0E44               	movlw	68
  2831  000266  6E08               	movwf	___wmul@multiplicand,c
  2832  000268  EC1C  F00A         	call	___wmul	;wreg free
  2833  00026C  5006               	movf	?___wmul,w,c
  2834  00026E  2612               	addwf	??_FRAME_AdressOfNeighbors+2,f,c
  2835  000270  5007               	movf	?___wmul+1,w,c
  2836  000272  2213               	addwfc	??_FRAME_AdressOfNeighbors+3,f,c
  2837  000274  C00E  F014         	movff	FRAME_AdressOfNeighbors@nrRamki,??_FRAME_AdressOfNeighbors+4
  2838  000278  C00F  F015         	movff	FRAME_AdressOfNeighbors@nrRamki+1,??_FRAME_AdressOfNeighbors+5
  2839  00027C  90D8               	bcf	status,0,c
  2840  00027E  3614               	rlcf	??_FRAME_AdressOfNeighbors+4,f,c
  2841  000280  3615               	rlcf	??_FRAME_AdressOfNeighbors+5,f,c
  2842  000282  90D8               	bcf	status,0,c
  2843  000284  3614               	rlcf	??_FRAME_AdressOfNeighbors+4,f,c
  2844  000286  3615               	rlcf	??_FRAME_AdressOfNeighbors+5,f,c
  2845  000288  5020               	movf	FRAME_AdressOfNeighbors@i,w,c
  2846  00028A  2614               	addwf	??_FRAME_AdressOfNeighbors+4,f,c
  2847  00028C  5021               	movf	FRAME_AdressOfNeighbors@i+1,w,c
  2848  00028E  2215               	addwfc	??_FRAME_AdressOfNeighbors+5,f,c
  2849  000290  90D8               	bcf	status,0,c
  2850  000292  3614               	rlcf	??_FRAME_AdressOfNeighbors+4,f,c
  2851  000294  3615               	rlcf	??_FRAME_AdressOfNeighbors+5,f,c
  2852  000296  90D8               	bcf	status,0,c
  2853  000298  3614               	rlcf	??_FRAME_AdressOfNeighbors+4,f,c
  2854  00029A  3615               	rlcf	??_FRAME_AdressOfNeighbors+5,f,c
  2855  00029C  0E10               	movlw	16
  2856  00029E  2414               	addwf	??_FRAME_AdressOfNeighbors+4,w,c
  2857  0002A0  6ED9               	movwf	fsr2l,c
  2858  0002A2  0E00               	movlw	0
  2859  0002A4  2015               	addwfc	??_FRAME_AdressOfNeighbors+5,w,c
  2860  0002A6  6EDA               	movwf	fsr2h,c
  2861  0002A8  C012  FFDE         	movff	??_FRAME_AdressOfNeighbors+2,postinc2
  2862  0002AC  C013  FFDD         	movff	??_FRAME_AdressOfNeighbors+3,postdec2
  2863                           
  2864                           ;FRAME.c: 477:             if(Dane->sasiedzi[i+(4*nrRamki)].adres==16){
  2865  0002B0  C00E  F010         	movff	FRAME_AdressOfNeighbors@nrRamki,??_FRAME_AdressOfNeighbors
  2866  0002B4  C00F  F011         	movff	FRAME_AdressOfNeighbors@nrRamki+1,??_FRAME_AdressOfNeighbors+1
  2867  0002B8  90D8               	bcf	status,0,c
  2868  0002BA  3610               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  2869  0002BC  3611               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  2870  0002BE  90D8               	bcf	status,0,c
  2871  0002C0  3610               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  2872  0002C2  3611               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  2873  0002C4  5020               	movf	FRAME_AdressOfNeighbors@i,w,c
  2874  0002C6  2610               	addwf	??_FRAME_AdressOfNeighbors,f,c
  2875  0002C8  5021               	movf	FRAME_AdressOfNeighbors@i+1,w,c
  2876  0002CA  2211               	addwfc	??_FRAME_AdressOfNeighbors+1,f,c
  2877  0002CC  90D8               	bcf	status,0,c
  2878  0002CE  3610               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  2879  0002D0  3611               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  2880  0002D2  90D8               	bcf	status,0,c
  2881  0002D4  3610               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  2882  0002D6  3611               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  2883  0002D8  0E0E               	movlw	14
  2884  0002DA  2410               	addwf	??_FRAME_AdressOfNeighbors,w,c
  2885  0002DC  6ED9               	movwf	fsr2l,c
  2886  0002DE  0E00               	movlw	0
  2887  0002E0  2011               	addwfc	??_FRAME_AdressOfNeighbors+1,w,c
  2888  0002E2  6EDA               	movwf	fsr2h,c
  2889  0002E4  0E10               	movlw	16
  2890  0002E6  18DE               	xorwf	postinc2,w,c
  2891  0002E8  10DE               	iorwf	postinc2,w,c
  2892  0002EA  A4D8               	btfss	status,2,c
  2893  0002EC  D00E               	goto	u1340
  2894                           
  2895                           ;FRAME.c: 478:                 WORD k;;FRAME.c: 479:                 for(k=0;k<100;k++)
  2896  0002EE  0E00               	movlw	0
  2897  0002F0  6E1F               	movwf	FRAME_AdressOfNeighbors@k+1,c
  2898  0002F2  0E00               	movlw	0
  2899  0002F4  6E1E               	movwf	FRAME_AdressOfNeighbors@k,c
  2900  0002F6                     l2836:
  2901                           
  2902                           ;FRAME.c: 480:                 {;FRAME.c: 481:                     LED_Clear();
  2903  0002F6  EC50  F00A         	call	_LED_Clear	;wreg free
  2904                           
  2905                           ;FRAME.c: 482:                 }
  2906  0002FA  4A1E               	infsnz	FRAME_AdressOfNeighbors@k,f,c
  2907  0002FC  2A1F               	incf	FRAME_AdressOfNeighbors@k+1,f,c
  2908  0002FE  501F               	movf	FRAME_AdressOfNeighbors@k+1,w,c
  2909  000300  E104               	bnz	u1340
  2910  000302  0E64               	movlw	100
  2911  000304  5C1E               	subwf	FRAME_AdressOfNeighbors@k,w,c
  2912  000306  A0D8               	btfss	status,0,c
  2913  000308  D7F6               	goto	l2836
  2914  00030A                     u1340:
  2915                           
  2916                           ;FRAME.c: 485:         }
  2917  00030A  4A20               	infsnz	FRAME_AdressOfNeighbors@i,f,c
  2918  00030C  2A21               	incf	FRAME_AdressOfNeighbors@i+1,f,c
  2919  00030E  5021               	movf	FRAME_AdressOfNeighbors@i+1,w,c
  2920  000310  E105               	bnz	u1350
  2921  000312  0E04               	movlw	4
  2922  000314  5C20               	subwf	FRAME_AdressOfNeighbors@i,w,c
  2923  000316  B0D8               	btfsc	status,0,c
  2924  000318  0012               	return	
  2925  00031A  D72F               	goto	l2824
  2926  00031C                     u1350:
  2927  00031C  0012               	return		;funcret
  2928  00031E                     __end_of_FRAME_AdressOfNeighbors:
  2929                           	opt callstack 0
  2930                           
  2931 ;; *************** function ___wmul *****************
  2932 ;; Defined at:
  2933 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  2934 ;; Parameters:    Size  Location     Type
  2935 ;;  multiplier      2    5[COMRAM] unsigned int 
  2936 ;;  multiplicand    2    7[COMRAM] unsigned int 
  2937 ;; Auto vars:     Size  Location     Type
  2938 ;;  product         2    9[COMRAM] unsigned int 
  2939 ;; Return value:  Size  Location     Type
  2940 ;;                  2    5[COMRAM] unsigned int 
  2941 ;; Registers used:
  2942 ;;		wreg, status,2, status,0, prodl, prodh
  2943 ;; Tracked objects:
  2944 ;;		On entry : 0/0
  2945 ;;		On exit  : 0/0
  2946 ;;		Unchanged: 0/0
  2947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2948 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2949 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2951 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2952 ;;Total ram usage:        6 bytes
  2953 ;; Hardware stack levels used:    1
  2954 ;; Hardware stack levels required when called:    3
  2955 ;; This function calls:
  2956 ;;		Nothing
  2957 ;; This function is called by:
  2958 ;;		_IsInNeighbors
  2959 ;;		_FRAME_AdressOfNeighbors
  2960 ;; This function uses a non-reentrant model
  2961 ;;
  2962                           
  2963                           	psect	text23
  2964  001438                     __ptext23:
  2965                           	opt callstack 0
  2966  001438                     ___wmul:
  2967                           	opt callstack 24
  2968                           
  2969                           ;incstack = 0
  2970  001438  5006               	movf	___wmul@multiplier,w,c
  2971  00143A  0208               	mulwf	___wmul@multiplicand,c
  2972  00143C  CFF3 F00A          	movff	prodl,___wmul@product
  2973  001440  CFF4 F00B          	movff	prodh,___wmul@product+1
  2974  001444  5006               	movf	___wmul@multiplier,w,c
  2975  001446  0209               	mulwf	___wmul@multiplicand+1,c
  2976  001448  50F3               	movf	prodl,w,c
  2977  00144A  260B               	addwf	___wmul@product+1,f,c
  2978  00144C  5007               	movf	___wmul@multiplier+1,w,c
  2979  00144E  0208               	mulwf	___wmul@multiplicand,c
  2980  001450  50F3               	movf	prodl,w,c
  2981  001452  260B               	addwf	___wmul@product+1,f,c
  2982  001454  C00A  F006         	movff	___wmul@product,?___wmul
  2983  001458  C00B  F007         	movff	___wmul@product+1,?___wmul+1
  2984  00145C  0012               	return		;funcret
  2985  00145E                     __end_of___wmul:
  2986                           	opt callstack 0
  2987                           
  2988 ;; *************** function _LED_Clear *****************
  2989 ;; Defined at:
  2990 ;;		line 45 in file "LED.c"
  2991 ;; Parameters:    Size  Location     Type
  2992 ;;		None
  2993 ;; Auto vars:     Size  Location     Type
  2994 ;;		None
  2995 ;; Return value:  Size  Location     Type
  2996 ;;                  2  286[None  ] unsigned int 
  2997 ;; Registers used:
  2998 ;;		wreg, status,2, status,0, cstack
  2999 ;; Tracked objects:
  3000 ;;		On entry : 0/0
  3001 ;;		On exit  : 0/0
  3002 ;;		Unchanged: 0/0
  3003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3007 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3008 ;;Total ram usage:        0 bytes
  3009 ;; Hardware stack levels used:    1
  3010 ;; Hardware stack levels required when called:    4
  3011 ;; This function calls:
  3012 ;;		_LED_Control
  3013 ;; This function is called by:
  3014 ;;		_FRAME_AdressOfNeighbors
  3015 ;; This function uses a non-reentrant model
  3016 ;;
  3017                           
  3018                           	psect	text24
  3019  0014A0                     __ptext24:
  3020                           	opt callstack 0
  3021  0014A0                     _LED_Clear:
  3022                           	opt callstack 23
  3023                           
  3024                           ;LED.c: 47:     LED_Control(RED,0b0000000000);
  3025                           
  3026                           ;incstack = 0
  3027  0014A0  0E00               	movlw	0
  3028  0014A2  6E07               	movwf	LED_Control@diode+1,c
  3029  0014A4  0E00               	movlw	0
  3030  0014A6  6E06               	movwf	LED_Control@diode,c
  3031  0014A8  0E00               	movlw	0
  3032  0014AA  EC7D  F004         	call	_LED_Control
  3033                           
  3034                           ;LED.c: 48:     LED_Control(GREEN,0b1010101010);
  3035  0014AE  0E02               	movlw	2
  3036  0014B0  6E07               	movwf	LED_Control@diode+1,c
  3037  0014B2  0EAA               	movlw	170
  3038  0014B4  6E06               	movwf	LED_Control@diode,c
  3039  0014B6  0E01               	movlw	1
  3040  0014B8  EC7D  F004         	call	_LED_Control
  3041  0014BC  0012               	return		;funcret
  3042  0014BE                     __end_of_LED_Clear:
  3043                           	opt callstack 0
  3044                           
  3045 ;; *************** function _FRAME_AccelerometerStatus *****************
  3046 ;; Defined at:
  3047 ;;		line 91 in file "FRAME.c"
  3048 ;; Parameters:    Size  Location     Type
  3049 ;;  message         2    7[COMRAM] PTR struct .
  3050 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3051 ;; Auto vars:     Size  Location     Type
  3052 ;;		None
  3053 ;; Return value:  Size  Location     Type
  3054 ;;                  1    wreg      void 
  3055 ;; Registers used:
  3056 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3057 ;; Tracked objects:
  3058 ;;		On entry : 0/0
  3059 ;;		On exit  : 0/0
  3060 ;;		Unchanged: 0/0
  3061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3062 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3064 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3065 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3066 ;;Total ram usage:        3 bytes
  3067 ;; Hardware stack levels used:    1
  3068 ;; Hardware stack levels required when called:    4
  3069 ;; This function calls:
  3070 ;;		_MOCK_Klikniecie_Spadek
  3071 ;;		_MOCK_PrzyspieszenieX
  3072 ;;		_MOCK_PrzyspieszenieY
  3073 ;;		_MOCK_PrzyspieszenieZ
  3074 ;; This function is called by:
  3075 ;;		_FRAME_HandleCanFrame
  3076 ;; This function uses a non-reentrant model
  3077 ;;
  3078                           
  3079                           	psect	text25
  3080  000EFC                     __ptext25:
  3081                           	opt callstack 0
  3082  000EFC                     _FRAME_AccelerometerStatus:
  3083                           	opt callstack 24
  3084                           
  3085                           ;FRAME.c: 91: static void FRAME_AccelerometerStatus(mID *message);FRAME.c: 92: {;FRAME.c
      +                          : 93:     if(message->message_type == 0x02)
  3086                           
  3087                           ;incstack = 0
  3088  000EFC  EE20 F001          	lfsr	2,1
  3089  000F00  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  3090  000F02  26D9               	addwf	fsr2l,f,c
  3091  000F04  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3092  000F06  22DA               	addwfc	fsr2h,f,c
  3093  000F08  0E02               	movlw	2
  3094  000F0A  18DE               	xorwf	postinc2,w,c
  3095  000F0C  A4D8               	btfss	status,2,c
  3096  000F0E  0012               	return	
  3097                           
  3098                           ;FRAME.c: 94:     {;FRAME.c: 95:         message->data_length = 4;
  3099  000F10  EE20 F010          	lfsr	2,16
  3100  000F14  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  3101  000F16  26D9               	addwf	fsr2l,f,c
  3102  000F18  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3103  000F1A  22DA               	addwfc	fsr2h,f,c
  3104  000F1C  0E04               	movlw	4
  3105  000F1E  6EDF               	movwf	indf2,c
  3106                           
  3107                           ;FRAME.c: 99:         message->data[0] = MOCK_PrzyspieszenieX();
  3108  000F20  EE20 F008          	lfsr	2,8
  3109  000F24  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  3110  000F26  26D9               	addwf	fsr2l,f,c
  3111  000F28  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3112  000F2A  22DA               	addwfc	fsr2h,f,c
  3113  000F2C  ECA9  F00A         	call	_MOCK_PrzyspieszenieX	;wreg free
  3114  000F30  5006               	movf	?_MOCK_PrzyspieszenieX,w,c
  3115  000F32  6EDF               	movwf	indf2,c
  3116                           
  3117                           ;FRAME.c: 100:         message->data[1] = MOCK_PrzyspieszenieY();
  3118  000F34  EE20 F009          	lfsr	2,9
  3119  000F38  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  3120  000F3A  26D9               	addwf	fsr2l,f,c
  3121  000F3C  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3122  000F3E  22DA               	addwfc	fsr2h,f,c
  3123  000F40  ECA4  F00A         	call	_MOCK_PrzyspieszenieY	;wreg free
  3124  000F44  5006               	movf	?_MOCK_PrzyspieszenieY,w,c
  3125  000F46  6EDF               	movwf	indf2,c
  3126                           
  3127                           ;FRAME.c: 101:         message->data[2] = MOCK_PrzyspieszenieZ();
  3128  000F48  EE20 F00A          	lfsr	2,10
  3129  000F4C  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  3130  000F4E  26D9               	addwf	fsr2l,f,c
  3131  000F50  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3132  000F52  22DA               	addwfc	fsr2h,f,c
  3133  000F54  EC9F  F00A         	call	_MOCK_PrzyspieszenieZ	;wreg free
  3134  000F58  5006               	movf	?_MOCK_PrzyspieszenieZ,w,c
  3135  000F5A  6EDF               	movwf	indf2,c
  3136                           
  3137                           ;FRAME.c: 102:         message->data[3] = MOCK_Klikniecie_Spadek();
  3138  000F5C  EE20 F00B          	lfsr	2,11
  3139  000F60  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  3140  000F62  26D9               	addwf	fsr2l,f,c
  3141  000F64  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3142  000F66  22DA               	addwfc	fsr2h,f,c
  3143  000F68  ECAE  F00A         	call	_MOCK_Klikniecie_Spadek	;wreg free
  3144  000F6C  5006               	movf	?_MOCK_Klikniecie_Spadek,w,c
  3145  000F6E  6EDF               	movwf	indf2,c
  3146                           
  3147                           ;FRAME.c: 103:     }
  3148  000F70  0012               	return		;funcret
  3149  000F72                     __end_of_FRAME_AccelerometerStatus:
  3150                           	opt callstack 0
  3151                           
  3152 ;; *************** function _MOCK_PrzyspieszenieZ *****************
  3153 ;; Defined at:
  3154 ;;		line 72 in file "MOC_Funct.c"
  3155 ;; Parameters:    Size  Location     Type
  3156 ;;		None
  3157 ;; Auto vars:     Size  Location     Type
  3158 ;;		None
  3159 ;; Return value:  Size  Location     Type
  3160 ;;                  2    5[COMRAM] unsigned int 
  3161 ;; Registers used:
  3162 ;;		wreg, status,2
  3163 ;; Tracked objects:
  3164 ;;		On entry : 0/0
  3165 ;;		On exit  : 0/0
  3166 ;;		Unchanged: 0/0
  3167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3168 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3171 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3172 ;;Total ram usage:        2 bytes
  3173 ;; Hardware stack levels used:    1
  3174 ;; Hardware stack levels required when called:    3
  3175 ;; This function calls:
  3176 ;;		Nothing
  3177 ;; This function is called by:
  3178 ;;		_FRAME_AccelerometerStatus
  3179 ;; This function uses a non-reentrant model
  3180 ;;
  3181                           
  3182                           	psect	text26
  3183  00153E                     __ptext26:
  3184                           	opt callstack 0
  3185  00153E                     _MOCK_PrzyspieszenieZ:
  3186                           	opt callstack 24
  3187                           
  3188                           ;MOC_Funct.c: 74:     return 0xFE;
  3189                           
  3190                           ;incstack = 0
  3191  00153E  0E00               	movlw	0
  3192  001540  6E07               	movwf	?_MOCK_PrzyspieszenieZ+1,c
  3193  001542  0EFE               	movlw	254
  3194  001544  6E06               	movwf	?_MOCK_PrzyspieszenieZ,c
  3195  001546  0012               	return		;funcret
  3196  001548                     __end_of_MOCK_PrzyspieszenieZ:
  3197                           	opt callstack 0
  3198                           
  3199 ;; *************** function _MOCK_PrzyspieszenieY *****************
  3200 ;; Defined at:
  3201 ;;		line 68 in file "MOC_Funct.c"
  3202 ;; Parameters:    Size  Location     Type
  3203 ;;		None
  3204 ;; Auto vars:     Size  Location     Type
  3205 ;;		None
  3206 ;; Return value:  Size  Location     Type
  3207 ;;                  2    5[COMRAM] unsigned int 
  3208 ;; Registers used:
  3209 ;;		wreg, status,2
  3210 ;; Tracked objects:
  3211 ;;		On entry : 0/0
  3212 ;;		On exit  : 0/0
  3213 ;;		Unchanged: 0/0
  3214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3215 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3218 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3219 ;;Total ram usage:        2 bytes
  3220 ;; Hardware stack levels used:    1
  3221 ;; Hardware stack levels required when called:    3
  3222 ;; This function calls:
  3223 ;;		Nothing
  3224 ;; This function is called by:
  3225 ;;		_FRAME_AccelerometerStatus
  3226 ;; This function uses a non-reentrant model
  3227 ;;
  3228                           
  3229                           	psect	text27
  3230  001548                     __ptext27:
  3231                           	opt callstack 0
  3232  001548                     _MOCK_PrzyspieszenieY:
  3233                           	opt callstack 24
  3234                           
  3235                           ;MOC_Funct.c: 70:     return 0xFE;
  3236                           
  3237                           ;incstack = 0
  3238  001548  0E00               	movlw	0
  3239  00154A  6E07               	movwf	?_MOCK_PrzyspieszenieY+1,c
  3240  00154C  0EFE               	movlw	254
  3241  00154E  6E06               	movwf	?_MOCK_PrzyspieszenieY,c
  3242  001550  0012               	return		;funcret
  3243  001552                     __end_of_MOCK_PrzyspieszenieY:
  3244                           	opt callstack 0
  3245                           
  3246 ;; *************** function _MOCK_PrzyspieszenieX *****************
  3247 ;; Defined at:
  3248 ;;		line 63 in file "MOC_Funct.c"
  3249 ;; Parameters:    Size  Location     Type
  3250 ;;		None
  3251 ;; Auto vars:     Size  Location     Type
  3252 ;;		None
  3253 ;; Return value:  Size  Location     Type
  3254 ;;                  2    5[COMRAM] unsigned int 
  3255 ;; Registers used:
  3256 ;;		wreg, status,2
  3257 ;; Tracked objects:
  3258 ;;		On entry : 0/0
  3259 ;;		On exit  : 0/0
  3260 ;;		Unchanged: 0/0
  3261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3262 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3265 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3266 ;;Total ram usage:        2 bytes
  3267 ;; Hardware stack levels used:    1
  3268 ;; Hardware stack levels required when called:    3
  3269 ;; This function calls:
  3270 ;;		Nothing
  3271 ;; This function is called by:
  3272 ;;		_FRAME_AccelerometerStatus
  3273 ;; This function uses a non-reentrant model
  3274 ;;
  3275                           
  3276                           	psect	text28
  3277  001552                     __ptext28:
  3278                           	opt callstack 0
  3279  001552                     _MOCK_PrzyspieszenieX:
  3280                           	opt callstack 24
  3281                           
  3282                           ;MOC_Funct.c: 65:     return 0xFE;
  3283                           
  3284                           ;incstack = 0
  3285  001552  0E00               	movlw	0
  3286  001554  6E07               	movwf	?_MOCK_PrzyspieszenieX+1,c
  3287  001556  0EFE               	movlw	254
  3288  001558  6E06               	movwf	?_MOCK_PrzyspieszenieX,c
  3289  00155A  0012               	return		;funcret
  3290  00155C                     __end_of_MOCK_PrzyspieszenieX:
  3291                           	opt callstack 0
  3292                           
  3293 ;; *************** function _MOCK_Klikniecie_Spadek *****************
  3294 ;; Defined at:
  3295 ;;		line 76 in file "MOC_Funct.c"
  3296 ;; Parameters:    Size  Location     Type
  3297 ;;		None
  3298 ;; Auto vars:     Size  Location     Type
  3299 ;;		None
  3300 ;; Return value:  Size  Location     Type
  3301 ;;                  2    5[COMRAM] unsigned int 
  3302 ;; Registers used:
  3303 ;;		wreg, status,2
  3304 ;; Tracked objects:
  3305 ;;		On entry : 0/0
  3306 ;;		On exit  : 0/0
  3307 ;;		Unchanged: 0/0
  3308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3309 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3312 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3313 ;;Total ram usage:        2 bytes
  3314 ;; Hardware stack levels used:    1
  3315 ;; Hardware stack levels required when called:    3
  3316 ;; This function calls:
  3317 ;;		Nothing
  3318 ;; This function is called by:
  3319 ;;		_FRAME_AccelerometerStatus
  3320 ;; This function uses a non-reentrant model
  3321 ;;
  3322                           
  3323                           	psect	text29
  3324  00155C                     __ptext29:
  3325                           	opt callstack 0
  3326  00155C                     _MOCK_Klikniecie_Spadek:
  3327                           	opt callstack 24
  3328                           
  3329                           ;MOC_Funct.c: 78:     return 0b00000000;
  3330                           
  3331                           ;incstack = 0
  3332  00155C  0E00               	movlw	0
  3333  00155E  6E07               	movwf	?_MOCK_Klikniecie_Spadek+1,c
  3334  001560  0E00               	movlw	0
  3335  001562  6E06               	movwf	?_MOCK_Klikniecie_Spadek,c
  3336  001564  0012               	return		;funcret
  3337  001566                     __end_of_MOCK_Klikniecie_Spadek:
  3338                           	opt callstack 0
  3339                           
  3340 ;; *************** function _CAN_SendFrame *****************
  3341 ;; Defined at:
  3342 ;;		line 205 in file "CAN.c"
  3343 ;; Parameters:    Size  Location     Type
  3344 ;;  message         2   10[COMRAM] PTR struct .
  3345 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3346 ;; Auto vars:     Size  Location     Type
  3347 ;;		None
  3348 ;; Return value:  Size  Location     Type
  3349 ;;                  1    wreg      void 
  3350 ;; Registers used:
  3351 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3352 ;; Tracked objects:
  3353 ;;		On entry : 0/0
  3354 ;;		On exit  : 0/0
  3355 ;;		Unchanged: 0/0
  3356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3357 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3359 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3360 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3361 ;;Total ram usage:        5 bytes
  3362 ;; Hardware stack levels used:    1
  3363 ;; Hardware stack levels required when called:    4
  3364 ;; This function calls:
  3365 ;;		_CAN_MoveBuffIntoFrame
  3366 ;; This function is called by:
  3367 ;;		_FRAME_HandleCanFrame
  3368 ;; This function uses a non-reentrant model
  3369 ;;
  3370                           
  3371                           	psect	text30
  3372  00078C                     __ptext30:
  3373                           	opt callstack 0
  3374  00078C                     _CAN_SendFrame:
  3375                           	opt callstack 24
  3376                           
  3377                           ;CAN.c: 210:     {;CAN.c: 211:         ECANCON = 0x83;
  3378                           
  3379                           ;incstack = 0
  3380                           ;CAN.c: 205: void CAN_SendFrame(mID * message);CAN.c: 206: {;CAN.c: 209:     for(;;)
  3381  00078C  0E83               	movlw	131
  3382  00078E  6E77               	movwf	3959,c	;volatile
  3383                           
  3384                           ;CAN.c: 212:         if(!RXB0CONbits.FILHIT3)
  3385  000790  A660               	btfss	3936,3,c	;volatile
  3386  000792  D00A               	goto	l207
  3387                           
  3388                           ;CAN.c: 217:         ECANCON = 0x84;
  3389  000794  0E84               	movlw	132
  3390  000796  6E77               	movwf	3959,c	;volatile
  3391                           
  3392                           ;CAN.c: 218:         if(!RXB0CONbits.FILHIT3)
  3393  000798  A660               	btfss	3936,3,c	;volatile
  3394  00079A  D006               	goto	l207
  3395                           
  3396                           ;CAN.c: 223:         ECANCON = 0x85;
  3397  00079C  0E85               	movlw	133
  3398  00079E  6E77               	movwf	3959,c	;volatile
  3399                           
  3400                           ;CAN.c: 224:         if(!RXB0CONbits.FILHIT3)
  3401  0007A0  A660               	btfss	3936,3,c	;volatile
  3402  0007A2  D002               	goto	l207
  3403  0007A4  D7F3               	goto	_CAN_SendFrame
  3404  0007A6                     l208:
  3405  0007A6  00FF               	reset		;# 
  3406  0007A8                     l207:
  3407                           
  3408                           ;CAN.c: 231:     while(COMSTATbits.TXWARN)
  3409  0007A8  B474               	btfsc	3956,2,c	;volatile
  3410  0007AA  D7FD               	goto	l208
  3411                           
  3412                           ;CAN.c: 235:     DetectorLedRadar.timerRamkiTxCANU8 = 0;
  3413  0007AC  0E00               	movlw	0
  3414  0007AE  6E43               	movwf	_DetectorLedRadar+2,c
  3415                           
  3416                           ;CAN.c: 236:     RXB0EIDL = message->id.v[0];
  3417  0007B0  EE20 F004          	lfsr	2,4
  3418  0007B4  500B               	movf	CAN_SendFrame@message,w,c
  3419  0007B6  26D9               	addwf	fsr2l,f,c
  3420  0007B8  500C               	movf	CAN_SendFrame@message+1,w,c
  3421  0007BA  22DA               	addwfc	fsr2h,f,c
  3422  0007BC  50DF               	movf	indf2,w,c
  3423  0007BE  6E64               	movwf	3940,c	;volatile
  3424                           
  3425                           ;CAN.c: 237:     RXB0EIDH = message->id.v[1];
  3426  0007C0  EE20 F005          	lfsr	2,5
  3427  0007C4  500B               	movf	CAN_SendFrame@message,w,c
  3428  0007C6  26D9               	addwf	fsr2l,f,c
  3429  0007C8  500C               	movf	CAN_SendFrame@message+1,w,c
  3430  0007CA  22DA               	addwfc	fsr2h,f,c
  3431  0007CC  50DF               	movf	indf2,w,c
  3432  0007CE  6E63               	movwf	3939,c	;volatile
  3433                           
  3434                           ;CAN.c: 238:     RXB0SIDL = ((message->id.v[2]&0xFC)*8) | (message->id.v[2] & (0x03));
  3435  0007D0  EE20 F006          	lfsr	2,6
  3436  0007D4  500B               	movf	CAN_SendFrame@message,w,c
  3437  0007D6  26D9               	addwf	fsr2l,f,c
  3438  0007D8  500C               	movf	CAN_SendFrame@message+1,w,c
  3439  0007DA  22DA               	addwfc	fsr2h,f,c
  3440  0007DC  50DF               	movf	indf2,w,c
  3441  0007DE  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  3442  0007E0  0E03               	movlw	3
  3443  0007E2  160D               	andwf	??_CAN_SendFrame,f,c
  3444  0007E4  EE20 F006          	lfsr	2,6
  3445  0007E8  500B               	movf	CAN_SendFrame@message,w,c
  3446  0007EA  26D9               	addwf	fsr2l,f,c
  3447  0007EC  500C               	movf	CAN_SendFrame@message+1,w,c
  3448  0007EE  22DA               	addwfc	fsr2h,f,c
  3449  0007F0  50DF               	movf	indf2,w,c
  3450  0007F2  0BFC               	andlw	252
  3451  0007F4  0D08               	mullw	8
  3452  0007F6  50F3               	movf	prodl,w,c
  3453  0007F8  100D               	iorwf	??_CAN_SendFrame,w,c
  3454  0007FA  6E62               	movwf	3938,c	;volatile
  3455                           
  3456                           ;CAN.c: 239:     RXB0SIDLbits.EXID = 1;
  3457  0007FC  8662               	bsf	3938,3,c	;volatile
  3458                           
  3459                           ;CAN.c: 240:     RXB0SIDH = (BYTE)(message->id.w[1]/32);
  3460  0007FE  EE20 F006          	lfsr	2,6
  3461  000802  500B               	movf	CAN_SendFrame@message,w,c
  3462  000804  26D9               	addwf	fsr2l,f,c
  3463  000806  500C               	movf	CAN_SendFrame@message+1,w,c
  3464  000808  22DA               	addwfc	fsr2h,f,c
  3465  00080A  CFDE F00D          	movff	postinc2,??_CAN_SendFrame
  3466  00080E  CFDD F00E          	movff	postdec2,??_CAN_SendFrame+1
  3467  000812  0E05               	movlw	5
  3468  000814  6E0F               	movwf	(??_CAN_SendFrame+2)& (0+255),c
  3469  000816                     u1135:
  3470  000816  90D8               	bcf	status,0,c
  3471  000818  320E               	rrcf	??_CAN_SendFrame+1,f,c
  3472  00081A  320D               	rrcf	??_CAN_SendFrame,f,c
  3473  00081C  2E0F               	decfsz	(??_CAN_SendFrame+2)& (0+255),f,c
  3474  00081E  D7FB               	goto	u1135
  3475  000820  500D               	movf	??_CAN_SendFrame,w,c
  3476  000822  6E61               	movwf	3937,c	;volatile
  3477                           
  3478                           ;CAN.c: 242:     RXB0DLC = 0;
  3479  000824  0E00               	movlw	0
  3480  000826  6E65               	movwf	3941,c	;volatile
  3481                           
  3482                           ;CAN.c: 244:     if(message->message_type==0x02)
  3483  000828  EE20 F001          	lfsr	2,1
  3484  00082C  500B               	movf	CAN_SendFrame@message,w,c
  3485  00082E  26D9               	addwf	fsr2l,f,c
  3486  000830  500C               	movf	CAN_SendFrame@message+1,w,c
  3487  000832  22DA               	addwfc	fsr2h,f,c
  3488  000834  0E02               	movlw	2
  3489  000836  18DE               	xorwf	postinc2,w,c
  3490  000838  A4D8               	btfss	status,2,c
  3491  00083A  D002               	goto	l2670
  3492                           
  3493                           ;CAN.c: 245:     {;CAN.c: 246:         RXB0DLCbits.RXRTR = 1;
  3494  00083C  8C65               	bsf	3941,6,c	;volatile
  3495                           
  3496                           ;CAN.c: 247:     }
  3497  00083E  D05A               	goto	l2674
  3498  000840                     l2670:
  3499                           
  3500                           ;CAN.c: 249:     {;CAN.c: 250:         RXB0DLCbits.DLC0 = (message->data_length & 0x0F);
  3501  000840  EE20 F010          	lfsr	2,16
  3502  000844  500B               	movf	CAN_SendFrame@message,w,c
  3503  000846  26D9               	addwf	fsr2l,f,c
  3504  000848  500C               	movf	CAN_SendFrame@message+1,w,c
  3505  00084A  22DA               	addwfc	fsr2h,f,c
  3506  00084C  50DF               	movf	indf2,w,c
  3507  00084E  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  3508  000850  0E0F               	movlw	15
  3509  000852  160D               	andwf	??_CAN_SendFrame,f,c
  3510  000854  5065               	movf	3941,w,c	;volatile
  3511  000856  180D               	xorwf	??_CAN_SendFrame,w,c
  3512  000858  0BFE               	andlw	-2
  3513  00085A  180D               	xorwf	??_CAN_SendFrame,w,c
  3514  00085C  6E65               	movwf	3941,c	;volatile
  3515                           
  3516                           ;CAN.c: 251:         RXB0DLCbits.DLC1 = ((message->data_length & 0x0F)>> 1);
  3517  00085E  EE20 F010          	lfsr	2,16
  3518  000862  500B               	movf	CAN_SendFrame@message,w,c
  3519  000864  26D9               	addwf	fsr2l,f,c
  3520  000866  500C               	movf	CAN_SendFrame@message+1,w,c
  3521  000868  22DA               	addwfc	fsr2h,f,c
  3522  00086A  50DF               	movf	indf2,w,c
  3523  00086C  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  3524  00086E  90D8               	bcf	status,0,c
  3525  000870  320D               	rrcf	??_CAN_SendFrame,f,c
  3526  000872  0E07               	movlw	7
  3527  000874  160D               	andwf	??_CAN_SendFrame,f,c
  3528  000876  460D               	rlncf	??_CAN_SendFrame,f,c
  3529  000878  5065               	movf	3941,w,c	;volatile
  3530  00087A  180D               	xorwf	??_CAN_SendFrame,w,c
  3531  00087C  0BFD               	andlw	-3
  3532  00087E  180D               	xorwf	??_CAN_SendFrame,w,c
  3533  000880  6E65               	movwf	3941,c	;volatile
  3534                           
  3535                           ;CAN.c: 252:         RXB0DLCbits.DLC2 = ((message->data_length & 0x0F)>> 2);
  3536  000882  EE20 F010          	lfsr	2,16
  3537  000886  500B               	movf	CAN_SendFrame@message,w,c
  3538  000888  26D9               	addwf	fsr2l,f,c
  3539  00088A  500C               	movf	CAN_SendFrame@message+1,w,c
  3540  00088C  22DA               	addwfc	fsr2h,f,c
  3541  00088E  50DF               	movf	indf2,w,c
  3542  000890  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  3543  000892  90D8               	bcf	status,0,c
  3544  000894  320D               	rrcf	??_CAN_SendFrame,f,c
  3545  000896  90D8               	bcf	status,0,c
  3546  000898  320D               	rrcf	??_CAN_SendFrame,f,c
  3547  00089A  0E03               	movlw	3
  3548  00089C  160D               	andwf	??_CAN_SendFrame,f,c
  3549  00089E  460D               	rlncf	??_CAN_SendFrame,f,c
  3550  0008A0  460D               	rlncf	??_CAN_SendFrame,f,c
  3551  0008A2  5065               	movf	3941,w,c	;volatile
  3552  0008A4  180D               	xorwf	??_CAN_SendFrame,w,c
  3553  0008A6  0BFB               	andlw	-5
  3554  0008A8  180D               	xorwf	??_CAN_SendFrame,w,c
  3555  0008AA  6E65               	movwf	3941,c	;volatile
  3556                           
  3557                           ;CAN.c: 253:         RXB0DLCbits.DLC3 = ((message->data_length & 0x0F)>> 3);
  3558  0008AC  EE20 F010          	lfsr	2,16
  3559  0008B0  500B               	movf	CAN_SendFrame@message,w,c
  3560  0008B2  26D9               	addwf	fsr2l,f,c
  3561  0008B4  500C               	movf	CAN_SendFrame@message+1,w,c
  3562  0008B6  22DA               	addwfc	fsr2h,f,c
  3563  0008B8  50DF               	movf	indf2,w,c
  3564  0008BA  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  3565  0008BC  90D8               	bcf	status,0,c
  3566  0008BE  320D               	rrcf	??_CAN_SendFrame,f,c
  3567  0008C0  90D8               	bcf	status,0,c
  3568  0008C2  320D               	rrcf	??_CAN_SendFrame,f,c
  3569  0008C4  90D8               	bcf	status,0,c
  3570  0008C6  320D               	rrcf	??_CAN_SendFrame,f,c
  3571  0008C8  0E01               	movlw	1
  3572  0008CA  160D               	andwf	??_CAN_SendFrame,f,c
  3573  0008CC  460D               	rlncf	??_CAN_SendFrame,f,c
  3574  0008CE  460D               	rlncf	??_CAN_SendFrame,f,c
  3575  0008D0  460D               	rlncf	??_CAN_SendFrame,f,c
  3576  0008D2  5065               	movf	3941,w,c	;volatile
  3577  0008D4  180D               	xorwf	??_CAN_SendFrame,w,c
  3578  0008D6  0BF7               	andlw	-9
  3579  0008D8  180D               	xorwf	??_CAN_SendFrame,w,c
  3580  0008DA  6E65               	movwf	3941,c	;volatile
  3581                           
  3582                           ;CAN.c: 255:         CAN_MoveBuffIntoFrame(&RXB0D0, message->data);
  3583  0008DC  0E66               	movlw	102
  3584  0008DE  6E06               	movwf	CAN_MoveBuffIntoFrame@Ram,c
  3585  0008E0  0E0F               	movlw	15
  3586  0008E2  6E07               	movwf	CAN_MoveBuffIntoFrame@Ram+1,c
  3587  0008E4  0E08               	movlw	8
  3588  0008E6  240B               	addwf	CAN_SendFrame@message,w,c
  3589  0008E8  6E08               	movwf	CAN_MoveBuffIntoFrame@Buf,c
  3590  0008EA  0E00               	movlw	0
  3591  0008EC  200C               	addwfc	CAN_SendFrame@message+1,w,c
  3592  0008EE  6E09               	movwf	CAN_MoveBuffIntoFrame@Buf+1,c
  3593  0008F0  ECF3  F009         	call	_CAN_MoveBuffIntoFrame	;wreg free
  3594  0008F4                     l2674:
  3595                           
  3596                           ;CAN.c: 258:     RXB0CONbits.FILHIT3 = 1;
  3597  0008F4  8660               	bsf	3936,3,c	;volatile
  3598                           
  3599                           ;CAN.c: 260:     DetectorLedRadar.Flags.ramkaTx = 1;
  3600  0008F6  8841               	bsf	_DetectorLedRadar,4,c
  3601  0008F8  0012               	return		;funcret
  3602  0008FA                     __end_of_CAN_SendFrame:
  3603                           	opt callstack 0
  3604                           
  3605 ;; *************** function _CAN_GenID *****************
  3606 ;; Defined at:
  3607 ;;		line 406 in file "CAN.c"
  3608 ;; Parameters:    Size  Location     Type
  3609 ;;  message         2    5[COMRAM] PTR struct .
  3610 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3611 ;;  frameID         1    7[COMRAM] unsigned char 
  3612 ;; Auto vars:     Size  Location     Type
  3613 ;;		None
  3614 ;; Return value:  Size  Location     Type
  3615 ;;                  1    wreg      void 
  3616 ;; Registers used:
  3617 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3618 ;; Tracked objects:
  3619 ;;		On entry : 0/0
  3620 ;;		On exit  : 0/0
  3621 ;;		Unchanged: 0/0
  3622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3623 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3625 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3626 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3627 ;;Total ram usage:        7 bytes
  3628 ;; Hardware stack levels used:    1
  3629 ;; Hardware stack levels required when called:    3
  3630 ;; This function calls:
  3631 ;;		Nothing
  3632 ;; This function is called by:
  3633 ;;		_FRAME_HandleCanFrame
  3634 ;; This function uses a non-reentrant model
  3635 ;;
  3636                           
  3637                           	psect	text31
  3638  000CBA                     __ptext31:
  3639                           	opt callstack 0
  3640  000CBA                     _CAN_GenID:
  3641                           	opt callstack 25
  3642                           
  3643                           ;CAN.c: 406: void CAN_GenID(mID * message, BYTE frameID);CAN.c: 407: {;CAN.c: 409:     m
      +                          essage->frame_type = 0x03;
  3644                           
  3645                           ;incstack = 0
  3646  000CBA  EE20 F002          	lfsr	2,2
  3647  000CBE  5006               	movf	CAN_GenID@message,w,c
  3648  000CC0  26D9               	addwf	fsr2l,f,c
  3649  000CC2  5007               	movf	CAN_GenID@message+1,w,c
  3650  000CC4  22DA               	addwfc	fsr2h,f,c
  3651  000CC6  0E03               	movlw	3
  3652  000CC8  6EDF               	movwf	indf2,c
  3653                           
  3654                           ;CAN.c: 410:     message->message_type = 0x01;
  3655  000CCA  EE20 F001          	lfsr	2,1
  3656  000CCE  5006               	movf	CAN_GenID@message,w,c
  3657  000CD0  26D9               	addwf	fsr2l,f,c
  3658  000CD2  5007               	movf	CAN_GenID@message+1,w,c
  3659  000CD4  22DA               	addwfc	fsr2h,f,c
  3660  000CD6  0E01               	movlw	1
  3661  000CD8  6EDF               	movwf	indf2,c
  3662                           
  3663                           ;CAN.c: 411:     message->id.w[1] = (WORD)frameID * (WORD)4;
  3664  000CDA  5008               	movf	CAN_GenID@frameID,w,c
  3665  000CDC  6E09               	movwf	??_CAN_GenID& (0+255),c
  3666  000CDE  6A0A               	clrf	(??_CAN_GenID+1)& (0+255),c
  3667  000CE0  90D8               	bcf	status,0,c
  3668  000CE2  3609               	rlcf	??_CAN_GenID,f,c
  3669  000CE4  360A               	rlcf	??_CAN_GenID+1,f,c
  3670  000CE6  90D8               	bcf	status,0,c
  3671  000CE8  3609               	rlcf	??_CAN_GenID,f,c
  3672  000CEA  360A               	rlcf	??_CAN_GenID+1,f,c
  3673  000CEC  EE20 F006          	lfsr	2,6
  3674  000CF0  5006               	movf	CAN_GenID@message,w,c
  3675  000CF2  26D9               	addwf	fsr2l,f,c
  3676  000CF4  5007               	movf	CAN_GenID@message+1,w,c
  3677  000CF6  22DA               	addwfc	fsr2h,f,c
  3678  000CF8  C009  FFDE         	movff	??_CAN_GenID,postinc2
  3679  000CFC  C00A  FFDD         	movff	??_CAN_GenID+1,postdec2
  3680                           
  3681                           ;CAN.c: 412:     message->id.w[0] = DaneCan.adresCAN + 0x012c;
  3682  000D00  0E2C               	movlw	44
  3683  000D02  6E09               	movwf	??_CAN_GenID& (0+255),c
  3684  000D04  0E01               	movlw	1
  3685  000D06  6E0A               	movwf	(??_CAN_GenID+1)& (0+255),c
  3686  000D08  EE20  F03F         	lfsr	2,_DaneCan+2
  3687  000D0C  CFDE F00B          	movff	postinc2,??_CAN_GenID+2
  3688  000D10  CFDD F00C          	movff	postdec2,??_CAN_GenID+3
  3689  000D14  5009               	movf	??_CAN_GenID,w,c
  3690  000D16  260B               	addwf	??_CAN_GenID+2,f,c
  3691  000D18  500A               	movf	??_CAN_GenID+1,w,c
  3692  000D1A  220C               	addwfc	??_CAN_GenID+3,f,c
  3693  000D1C  EE20 F004          	lfsr	2,4
  3694  000D20  5006               	movf	CAN_GenID@message,w,c
  3695  000D22  26D9               	addwf	fsr2l,f,c
  3696  000D24  5007               	movf	CAN_GenID@message+1,w,c
  3697  000D26  22DA               	addwfc	fsr2h,f,c
  3698  000D28  C00B  FFDE         	movff	??_CAN_GenID+2,postinc2
  3699  000D2C  C00C  FFDD         	movff	??_CAN_GenID+3,postdec2
  3700                           
  3701                           ;CAN.c: 413:     message->id.v[2] |= 0x01;
  3702  000D30  EE20 F006          	lfsr	2,6
  3703  000D34  5006               	movf	CAN_GenID@message,w,c
  3704  000D36  26D9               	addwf	fsr2l,f,c
  3705  000D38  5007               	movf	CAN_GenID@message+1,w,c
  3706  000D3A  22DA               	addwfc	fsr2h,f,c
  3707  000D3C  0E00               	movlw	0
  3708  000D3E  80DB               	bsf	plusw2,0,c
  3709                           
  3710                           ;CAN.c: 415:     message ->id.bits.b16 = 0;
  3711  000D40  EE20 F006          	lfsr	2,6
  3712  000D44  5006               	movf	CAN_GenID@message,w,c
  3713  000D46  26D9               	addwf	fsr2l,f,c
  3714  000D48  5007               	movf	CAN_GenID@message+1,w,c
  3715  000D4A  22DA               	addwfc	fsr2h,f,c
  3716  000D4C  90DF               	bcf	indf2,0,c
  3717                           
  3718                           ;CAN.c: 416:     message ->id.bits.b17 = 0;
  3719  000D4E  EE20 F006          	lfsr	2,6
  3720  000D52  5006               	movf	CAN_GenID@message,w,c
  3721  000D54  26D9               	addwf	fsr2l,f,c
  3722  000D56  5007               	movf	CAN_GenID@message+1,w,c
  3723  000D58  22DA               	addwfc	fsr2h,f,c
  3724  000D5A  92DF               	bcf	indf2,1,c
  3725  000D5C  0012               	return		;funcret
  3726  000D5E                     __end_of_CAN_GenID:
  3727                           	opt callstack 0
  3728                           
  3729 ;; *************** function _CAN_TakeFrame *****************
  3730 ;; Defined at:
  3731 ;;		line 269 in file "CAN.c"
  3732 ;; Parameters:    Size  Location     Type
  3733 ;;  message         2   13[COMRAM] PTR struct .
  3734 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3735 ;; Auto vars:     Size  Location     Type
  3736 ;;  op_id           2   17[COMRAM] unsigned int 
  3737 ;;  k               1   20[COMRAM] unsigned char 
  3738 ;;  tempCON         1   19[COMRAM] unsigned char 
  3739 ;; Return value:  Size  Location     Type
  3740 ;;                  1    wreg      enum E10433
  3741 ;; Registers used:
  3742 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3743 ;; Tracked objects:
  3744 ;;		On entry : 0/0
  3745 ;;		On exit  : 0/0
  3746 ;;		Unchanged: 0/0
  3747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3748 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3749 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3750 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3751 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3752 ;;Total ram usage:        8 bytes
  3753 ;; Hardware stack levels used:    1
  3754 ;; Hardware stack levels required when called:    4
  3755 ;; This function calls:
  3756 ;;		_CAN_MoveBuffIntoFrame
  3757 ;;		___awdiv
  3758 ;; This function is called by:
  3759 ;;		_TRM_DataTransmition
  3760 ;; This function uses a non-reentrant model
  3761 ;;
  3762                           
  3763                           	psect	text32
  3764  00031E                     __ptext32:
  3765                           	opt callstack 0
  3766  00031E                     _CAN_TakeFrame:
  3767                           	opt callstack 25
  3768                           
  3769                           ;CAN.c: 269: BOOL CAN_TakeFrame(mID * message);CAN.c: 270: {;CAN.c: 271:     BYTE k, tem
      +                          pCON;;CAN.c: 273:     k = CANCON&0x0F;
  3770                           
  3771                           ;incstack = 0
  3772  00031E  506F               	movf	3951,w,c	;volatile
  3773  000320  0B0F               	andlw	15
  3774  000322  6E15               	movwf	CAN_TakeFrame@k,c
  3775                           
  3776                           ;CAN.c: 275:     ECANCON = 0x90 | k;
  3777  000324  5015               	movf	CAN_TakeFrame@k,w,c
  3778  000326  0990               	iorlw	144
  3779  000328  6E77               	movwf	3959,c	;volatile
  3780                           
  3781                           ;CAN.c: 278:     switch(k)
  3782  00032A  D018               	goto	l2912
  3783  00032C                     l216:
  3784                           
  3785                           ;CAN.c: 281:             tempCON = RXB0CON;
  3786  00032C  CF60 F014          	movff	3936,CAN_TakeFrame@tempCON	;volatile
  3787                           
  3788                           ;CAN.c: 282:             break;
  3789  000330  D035               	goto	l217
  3790  000332                     l218:
  3791                           
  3792                           ;CAN.c: 284:             tempCON = RXB1CON;
  3793  000332  CF50 F014          	movff	3920,CAN_TakeFrame@tempCON	;volatile
  3794                           
  3795                           ;CAN.c: 285:             break;
  3796  000336  D032               	goto	l217
  3797  000338                     l219:
  3798                           
  3799                           ;CAN.c: 287:             tempCON = B0CON;
  3800  000338  CE20 F014          	movff	3616,CAN_TakeFrame@tempCON	;volatile
  3801                           
  3802                           ;CAN.c: 288:             break;
  3803  00033C  D02F               	goto	l217
  3804  00033E                     l220:
  3805                           
  3806                           ;CAN.c: 290:             tempCON = B1CON;
  3807  00033E  CE30 F014          	movff	3632,CAN_TakeFrame@tempCON	;volatile
  3808                           
  3809                           ;CAN.c: 291:             break;
  3810  000342  D02C               	goto	l217
  3811  000344                     l221:
  3812                           
  3813                           ;CAN.c: 293:             tempCON = B2CON;
  3814  000344  CE40 F014          	movff	3648,CAN_TakeFrame@tempCON	;volatile
  3815                           
  3816                           ;CAN.c: 294:             break;
  3817  000348  D029               	goto	l217
  3818  00034A                     l222:
  3819                           
  3820                           ;CAN.c: 296:             tempCON = B3CON;
  3821  00034A  CE50 F014          	movff	3664,CAN_TakeFrame@tempCON	;volatile
  3822                           
  3823                           ;CAN.c: 297:             break;
  3824  00034E  D026               	goto	l217
  3825  000350                     l223:
  3826                           
  3827                           ;CAN.c: 299:             tempCON = B4CON;
  3828  000350  CE60 F014          	movff	3680,CAN_TakeFrame@tempCON	;volatile
  3829                           
  3830                           ;CAN.c: 300:             break;
  3831  000354  D023               	goto	l217
  3832  000356                     l224:
  3833                           
  3834                           ;CAN.c: 302:             tempCON = B5CON;
  3835  000356  CE70 F014          	movff	3696,CAN_TakeFrame@tempCON	;volatile
  3836                           
  3837                           ;CAN.c: 303:             break;
  3838  00035A  D020               	goto	l217
  3839  00035C                     l2912:
  3840  00035C  5015               	movf	CAN_TakeFrame@k,w,c
  3841  00035E  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  3842  000360  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  3843                           
  3844                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3845                           ; Switch size 1, requested type "simple"
  3846                           ; Number of cases is 1, Range of values is 0 to 0
  3847                           ; switch strategies available:
  3848                           ; Name         Instructions Cycles
  3849                           ; simple_byte            4     3 (average)
  3850                           ;	Chosen strategy is simple_byte
  3851  000362  5011               	movf	??_CAN_TakeFrame+1,w,c
  3852  000364  0A00               	xorlw	0	; case 0
  3853  000366  A4D8               	btfss	status,2,c
  3854  000368  D019               	goto	l217
  3855                           
  3856                           ; Switch size 1, requested type "simple"
  3857                           ; Number of cases is 8, Range of values is 0 to 7
  3858                           ; switch strategies available:
  3859                           ; Name         Instructions Cycles
  3860                           ; simple_byte           25    13 (average)
  3861                           ;	Chosen strategy is simple_byte
  3862  00036A  5010               	movf	??_CAN_TakeFrame,w,c
  3863  00036C  0A00               	xorlw	0	; case 0
  3864  00036E  B4D8               	btfsc	status,2,c
  3865  000370  D7DD               	goto	l216
  3866  000372  0A01               	xorlw	1	; case 1
  3867  000374  B4D8               	btfsc	status,2,c
  3868  000376  D7DD               	goto	l218
  3869  000378  0A03               	xorlw	3	; case 2
  3870  00037A  B4D8               	btfsc	status,2,c
  3871  00037C  D7DD               	goto	l219
  3872  00037E  0A01               	xorlw	1	; case 3
  3873  000380  B4D8               	btfsc	status,2,c
  3874  000382  D7DD               	goto	l220
  3875  000384  0A07               	xorlw	7	; case 4
  3876  000386  B4D8               	btfsc	status,2,c
  3877  000388  D7DD               	goto	l221
  3878  00038A  0A01               	xorlw	1	; case 5
  3879  00038C  B4D8               	btfsc	status,2,c
  3880  00038E  D7DD               	goto	l222
  3881  000390  0A03               	xorlw	3	; case 6
  3882  000392  B4D8               	btfsc	status,2,c
  3883  000394  D7DD               	goto	l223
  3884  000396  0A01               	xorlw	1	; case 7
  3885  000398  B4D8               	btfsc	status,2,c
  3886  00039A  D7DD               	goto	l224
  3887  00039C                     l217:
  3888                           
  3889                           ;CAN.c: 307:     if((tempCON & 0x80) > 0)
  3890  00039C  AE14               	btfss	CAN_TakeFrame@tempCON,7,c
  3891  00039E  D0A9               	goto	l2950
  3892                           
  3893                           ;CAN.c: 308:     {;CAN.c: 309:         message->buffer = RXB0CON & 0x1F;
  3894  0003A0  EE20 F003          	lfsr	2,3
  3895  0003A4  500E               	movf	CAN_TakeFrame@message,w,c
  3896  0003A6  26D9               	addwf	fsr2l,f,c
  3897  0003A8  500F               	movf	CAN_TakeFrame@message+1,w,c
  3898  0003AA  22DA               	addwfc	fsr2h,f,c
  3899  0003AC  5060               	movf	3936,w,c	;volatile
  3900  0003AE  0B1F               	andlw	31
  3901  0003B0  6EDF               	movwf	indf2,c
  3902                           
  3903                           ;CAN.c: 310:         message->id.v[0] = RXB0EIDL;
  3904  0003B2  EE20 F004          	lfsr	2,4
  3905  0003B6  500E               	movf	CAN_TakeFrame@message,w,c
  3906  0003B8  26D9               	addwf	fsr2l,f,c
  3907  0003BA  500F               	movf	CAN_TakeFrame@message+1,w,c
  3908  0003BC  22DA               	addwfc	fsr2h,f,c
  3909  0003BE  CF64 FFDF          	movff	3940,indf2	;volatile
  3910                           
  3911                           ;CAN.c: 311:         message->id.v[1] = RXB0EIDH;
  3912  0003C2  EE20 F005          	lfsr	2,5
  3913  0003C6  500E               	movf	CAN_TakeFrame@message,w,c
  3914  0003C8  26D9               	addwf	fsr2l,f,c
  3915  0003CA  500F               	movf	CAN_TakeFrame@message+1,w,c
  3916  0003CC  22DA               	addwfc	fsr2h,f,c
  3917  0003CE  CF63 FFDF          	movff	3939,indf2	;volatile
  3918                           
  3919                           ;CAN.c: 312:         UINT op_id = (RXB0SIDL/8) | (RXB0SIDL&0x03);
  3920  0003D2  CF62 F006          	movff	3938,___awdiv@dividend	;volatile
  3921  0003D6  6A07               	clrf	___awdiv@dividend+1,c
  3922  0003D8  0E00               	movlw	0
  3923  0003DA  6E09               	movwf	___awdiv@divisor+1,c
  3924  0003DC  0E08               	movlw	8
  3925  0003DE  6E08               	movwf	___awdiv@divisor,c
  3926  0003E0  ECFF  F006         	call	___awdiv	;wreg free
  3927  0003E4  CF62 F010          	movff	3938,??_CAN_TakeFrame	;volatile
  3928  0003E8  0E03               	movlw	3
  3929  0003EA  1610               	andwf	??_CAN_TakeFrame,f,c
  3930  0003EC  5010               	movf	??_CAN_TakeFrame,w,c
  3931  0003EE  1006               	iorwf	?___awdiv,w,c
  3932  0003F0  6E12               	movwf	CAN_TakeFrame@op_id,c
  3933  0003F2  5007               	movf	?___awdiv+1,w,c
  3934  0003F4  6E13               	movwf	CAN_TakeFrame@op_id+1,c
  3935                           
  3936                           ;CAN.c: 313:         message->id.v[2] = op_id;
  3937  0003F6  EE20 F006          	lfsr	2,6
  3938  0003FA  500E               	movf	CAN_TakeFrame@message,w,c
  3939  0003FC  26D9               	addwf	fsr2l,f,c
  3940  0003FE  500F               	movf	CAN_TakeFrame@message+1,w,c
  3941  000400  22DA               	addwfc	fsr2h,f,c
  3942  000402  C012  FFDF         	movff	CAN_TakeFrame@op_id,indf2
  3943                           
  3944                           ;CAN.c: 315:         message->id.w[1] |= (WORD)RXB0SIDH*32;
  3945  000406  5061               	movf	3937,w,c	;volatile
  3946  000408  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  3947  00040A  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  3948  00040C  0E05               	movlw	5
  3949  00040E                     u1455:
  3950  00040E  90D8               	bcf	status,0,c
  3951  000410  3610               	rlcf	??_CAN_TakeFrame,f,c
  3952  000412  3611               	rlcf	??_CAN_TakeFrame+1,f,c
  3953  000414  2EE8               	decfsz	wreg,f,c
  3954  000416  D7FB               	goto	u1455
  3955  000418  EE20 F006          	lfsr	2,6
  3956  00041C  500E               	movf	CAN_TakeFrame@message,w,c
  3957  00041E  26D9               	addwf	fsr2l,f,c
  3958  000420  500F               	movf	CAN_TakeFrame@message+1,w,c
  3959  000422  22DA               	addwfc	fsr2h,f,c
  3960  000424  5010               	movf	??_CAN_TakeFrame,w,c
  3961  000426  12DE               	iorwf	postinc2,f,c
  3962  000428  5011               	movf	??_CAN_TakeFrame+1,w,c
  3963  00042A  12DD               	iorwf	postdec2,f,c
  3964                           
  3965                           ;CAN.c: 316:         message->frame_type=0x03;
  3966  00042C  EE20 F002          	lfsr	2,2
  3967  000430  500E               	movf	CAN_TakeFrame@message,w,c
  3968  000432  26D9               	addwf	fsr2l,f,c
  3969  000434  500F               	movf	CAN_TakeFrame@message+1,w,c
  3970  000436  22DA               	addwfc	fsr2h,f,c
  3971  000438  0E03               	movlw	3
  3972  00043A  6EDF               	movwf	indf2,c
  3973                           
  3974                           ;CAN.c: 320:         if(RXB0DLCbits.RXRTR == 0)
  3975  00043C  BC65               	btfsc	3941,6,c	;volatile
  3976  00043E  D068               	goto	l2956
  3977                           
  3978                           ;CAN.c: 321:         {;CAN.c: 322:             message->message_type = 0x01;
  3979  000440  EE20 F001          	lfsr	2,1
  3980  000444  500E               	movf	CAN_TakeFrame@message,w,c
  3981  000446  26D9               	addwf	fsr2l,f,c
  3982  000448  500F               	movf	CAN_TakeFrame@message+1,w,c
  3983  00044A  22DA               	addwfc	fsr2h,f,c
  3984  00044C  0E01               	movlw	1
  3985  00044E  6EDF               	movwf	indf2,c
  3986                           
  3987                           ;CAN.c: 323:             message->data_length= RXB0DLC & 0x0F;
  3988  000450  EE20 F010          	lfsr	2,16
  3989  000454  500E               	movf	CAN_TakeFrame@message,w,c
  3990  000456  26D9               	addwf	fsr2l,f,c
  3991  000458  500F               	movf	CAN_TakeFrame@message+1,w,c
  3992  00045A  22DA               	addwfc	fsr2h,f,c
  3993  00045C  5065               	movf	3941,w,c	;volatile
  3994  00045E  0B0F               	andlw	15
  3995  000460  6EDF               	movwf	indf2,c
  3996                           
  3997                           ;CAN.c: 324:             if(message->data_length > 8)
  3998  000462  EE20 F010          	lfsr	2,16
  3999  000466  500E               	movf	CAN_TakeFrame@message,w,c
  4000  000468  26D9               	addwf	fsr2l,f,c
  4001  00046A  500F               	movf	CAN_TakeFrame@message+1,w,c
  4002  00046C  22DA               	addwfc	fsr2h,f,c
  4003  00046E  0E08               	movlw	8
  4004  000470  64DF               	cpfsgt	indf2,c
  4005  000472  D041               	goto	l2954
  4006  000474  D01E               	goto	l2948
  4007  000476                     l2930:
  4008                           
  4009                           ;CAN.c: 330:                         RXB0CON = 0;
  4010  000476  0E00               	movlw	0
  4011  000478  6E60               	movwf	3936,c	;volatile
  4012                           
  4013                           ;CAN.c: 331:                         break;
  4014  00047A  D03B               	goto	l2950
  4015  00047C                     l2932:
  4016                           
  4017                           ;CAN.c: 333:                         RXB1CON = 0;
  4018  00047C  0E00               	movlw	0
  4019  00047E  010F               	movlb	15	; () banked
  4020  000480  D00E               	goto	L1
  4021  000482                     l2934:
  4022                           
  4023                           ;CAN.c: 336:                         B0CON = 0;
  4024  000482  0E00               	movlw	0
  4025  000484  010E               	movlb	14	; () banked
  4026  000486  6F20               	movwf	32,b	;volatile
  4027                           
  4028                           ;CAN.c: 337:                         break;
  4029  000488  D034               	goto	l2950
  4030  00048A                     l2936:
  4031                           
  4032                           ;CAN.c: 339:                         B1CON = 0;
  4033  00048A  0E00               	movlw	0
  4034  00048C  010E               	movlb	14	; () banked
  4035  00048E  6F30               	movwf	48,b	;volatile
  4036                           
  4037                           ;CAN.c: 340:                         break;
  4038  000490  D030               	goto	l2950
  4039  000492                     l2938:
  4040                           
  4041                           ;CAN.c: 342:                         B2CON = 0;
  4042  000492  0E00               	movlw	0
  4043  000494  010E               	movlb	14	; () banked
  4044  000496  6F40               	movwf	64,b	;volatile
  4045                           
  4046                           ;CAN.c: 343:                         break;
  4047  000498  D02C               	goto	l2950
  4048  00049A                     l2940:
  4049                           
  4050                           ;CAN.c: 345:                         B3CON = 0;
  4051  00049A  0E00               	movlw	0
  4052  00049C  010E               	movlb	14	; () banked
  4053  00049E                     L1:
  4054  00049E  6F50               	movwf	80,b	;volatile
  4055                           
  4056                           ;CAN.c: 346:                         break;
  4057  0004A0  D028               	goto	l2950
  4058  0004A2                     l2942:
  4059                           
  4060                           ;CAN.c: 348:                         B4CON = 0;
  4061  0004A2  0E00               	movlw	0
  4062  0004A4  010E               	movlb	14	; () banked
  4063  0004A6  6F60               	movwf	96,b	;volatile
  4064                           
  4065                           ;CAN.c: 349:                         break;
  4066  0004A8  D024               	goto	l2950
  4067  0004AA                     l2944:
  4068                           
  4069                           ;CAN.c: 351:                         B5CON = 0;
  4070  0004AA  0E00               	movlw	0
  4071  0004AC  010E               	movlb	14	; () banked
  4072  0004AE  6F70               	movwf	112,b	;volatile
  4073                           
  4074                           ;CAN.c: 352:                         break;
  4075  0004B0  D020               	goto	l2950
  4076  0004B2                     l2948:
  4077  0004B2  5015               	movf	CAN_TakeFrame@k,w,c
  4078  0004B4  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  4079  0004B6  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  4080                           
  4081                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4082                           ; Switch size 1, requested type "simple"
  4083                           ; Number of cases is 1, Range of values is 0 to 0
  4084                           ; switch strategies available:
  4085                           ; Name         Instructions Cycles
  4086                           ; simple_byte            4     3 (average)
  4087                           ;	Chosen strategy is simple_byte
  4088  0004B8  5011               	movf	??_CAN_TakeFrame+1,w,c
  4089  0004BA  0A00               	xorlw	0	; case 0
  4090  0004BC  A4D8               	btfss	status,2,c
  4091  0004BE  D019               	goto	l2950
  4092                           
  4093                           ; Switch size 1, requested type "simple"
  4094                           ; Number of cases is 8, Range of values is 0 to 7
  4095                           ; switch strategies available:
  4096                           ; Name         Instructions Cycles
  4097                           ; simple_byte           25    13 (average)
  4098                           ;	Chosen strategy is simple_byte
  4099  0004C0  5010               	movf	??_CAN_TakeFrame,w,c
  4100  0004C2  0A00               	xorlw	0	; case 0
  4101  0004C4  B4D8               	btfsc	status,2,c
  4102  0004C6  D7D7               	goto	l2930
  4103  0004C8  0A01               	xorlw	1	; case 1
  4104  0004CA  B4D8               	btfsc	status,2,c
  4105  0004CC  D7D7               	goto	l2932
  4106  0004CE  0A03               	xorlw	3	; case 2
  4107  0004D0  B4D8               	btfsc	status,2,c
  4108  0004D2  D7D7               	goto	l2934
  4109  0004D4  0A01               	xorlw	1	; case 3
  4110  0004D6  B4D8               	btfsc	status,2,c
  4111  0004D8  D7D8               	goto	l2936
  4112  0004DA  0A07               	xorlw	7	; case 4
  4113  0004DC  B4D8               	btfsc	status,2,c
  4114  0004DE  D7D9               	goto	l2938
  4115  0004E0  0A01               	xorlw	1	; case 5
  4116  0004E2  B4D8               	btfsc	status,2,c
  4117  0004E4  D7DA               	goto	l2940
  4118  0004E6  0A03               	xorlw	3	; case 6
  4119  0004E8  B4D8               	btfsc	status,2,c
  4120  0004EA  D7DB               	goto	l2942
  4121  0004EC  0A01               	xorlw	1	; case 7
  4122  0004EE  B4D8               	btfsc	status,2,c
  4123  0004F0  D7DC               	goto	l2944
  4124  0004F2                     l2950:
  4125                           
  4126                           ;CAN.c: 354:                 return FALSE;
  4127  0004F2  0E00               	movlw	0
  4128  0004F4  0012               	return	
  4129  0004F6                     l2954:
  4130                           
  4131                           ;CAN.c: 356:             CAN_MoveBuffIntoFrame(message->data, &RXB0D0);
  4132  0004F6  0E08               	movlw	8
  4133  0004F8  240E               	addwf	CAN_TakeFrame@message,w,c
  4134  0004FA  6E06               	movwf	CAN_MoveBuffIntoFrame@Ram,c
  4135  0004FC  0E00               	movlw	0
  4136  0004FE  200F               	addwfc	CAN_TakeFrame@message+1,w,c
  4137  000500  6E07               	movwf	CAN_MoveBuffIntoFrame@Ram+1,c
  4138  000502  0E66               	movlw	102
  4139  000504  6E08               	movwf	CAN_MoveBuffIntoFrame@Buf,c
  4140  000506  0E0F               	movlw	15
  4141  000508  6E09               	movwf	CAN_MoveBuffIntoFrame@Buf+1,c
  4142  00050A  ECF3  F009         	call	_CAN_MoveBuffIntoFrame	;wreg free
  4143                           
  4144                           ;CAN.c: 357:         }
  4145  00050E  D027               	goto	l2976
  4146  000510                     l2956:
  4147                           
  4148                           ;CAN.c: 360:         {;CAN.c: 361:             message->message_type=0x02;
  4149  000510  EE20 F001          	lfsr	2,1
  4150  000514  500E               	movf	CAN_TakeFrame@message,w,c
  4151  000516  26D9               	addwf	fsr2l,f,c
  4152  000518  500F               	movf	CAN_TakeFrame@message+1,w,c
  4153  00051A  22DA               	addwfc	fsr2h,f,c
  4154  00051C  0E02               	movlw	2
  4155  00051E  6EDF               	movwf	indf2,c
  4156  000520  D01E               	goto	l2976
  4157  000522                     l2958:
  4158                           
  4159                           ;CAN.c: 367:                 RXB0CON = 0;
  4160  000522  0E00               	movlw	0
  4161  000524  6E60               	movwf	3936,c	;volatile
  4162                           
  4163                           ;CAN.c: 368:                 break;
  4164  000526  D03B               	goto	l2978
  4165  000528                     l2960:
  4166                           
  4167                           ;CAN.c: 370:                 RXB1CON = 0;
  4168  000528  0E00               	movlw	0
  4169  00052A  010F               	movlb	15	; () banked
  4170  00052C  D00E               	goto	L2
  4171  00052E                     l2962:
  4172                           
  4173                           ;CAN.c: 373:                 B0CON = 0;
  4174  00052E  0E00               	movlw	0
  4175  000530  010E               	movlb	14	; () banked
  4176  000532  6F20               	movwf	32,b	;volatile
  4177                           
  4178                           ;CAN.c: 374:                 break;
  4179  000534  D034               	goto	l2978
  4180  000536                     l2964:
  4181                           
  4182                           ;CAN.c: 376:                 B1CON = 0;
  4183  000536  0E00               	movlw	0
  4184  000538  010E               	movlb	14	; () banked
  4185  00053A  6F30               	movwf	48,b	;volatile
  4186                           
  4187                           ;CAN.c: 377:                 break;
  4188  00053C  D030               	goto	l2978
  4189  00053E                     l2966:
  4190                           
  4191                           ;CAN.c: 379:                 B2CON = 0;
  4192  00053E  0E00               	movlw	0
  4193  000540  010E               	movlb	14	; () banked
  4194  000542  6F40               	movwf	64,b	;volatile
  4195                           
  4196                           ;CAN.c: 380:                 break;
  4197  000544  D02C               	goto	l2978
  4198  000546                     l2968:
  4199                           
  4200                           ;CAN.c: 382:                 B3CON = 0;
  4201  000546  0E00               	movlw	0
  4202  000548  010E               	movlb	14	; () banked
  4203  00054A                     L2:
  4204  00054A  6F50               	movwf	80,b	;volatile
  4205                           
  4206                           ;CAN.c: 383:                 break;
  4207  00054C  D028               	goto	l2978
  4208  00054E                     l2970:
  4209                           
  4210                           ;CAN.c: 385:                 B4CON = 0;
  4211  00054E  0E00               	movlw	0
  4212  000550  010E               	movlb	14	; () banked
  4213  000552  6F60               	movwf	96,b	;volatile
  4214                           
  4215                           ;CAN.c: 386:                 break;
  4216  000554  D024               	goto	l2978
  4217  000556                     l2972:
  4218                           
  4219                           ;CAN.c: 388:                 B5CON = 0;
  4220  000556  0E00               	movlw	0
  4221  000558  010E               	movlb	14	; () banked
  4222  00055A  6F70               	movwf	112,b	;volatile
  4223                           
  4224                           ;CAN.c: 389:                 break;
  4225  00055C  D020               	goto	l2978
  4226  00055E                     l2976:
  4227  00055E  5015               	movf	CAN_TakeFrame@k,w,c
  4228  000560  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  4229  000562  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  4230                           
  4231                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4232                           ; Switch size 1, requested type "simple"
  4233                           ; Number of cases is 1, Range of values is 0 to 0
  4234                           ; switch strategies available:
  4235                           ; Name         Instructions Cycles
  4236                           ; simple_byte            4     3 (average)
  4237                           ;	Chosen strategy is simple_byte
  4238  000564  5011               	movf	??_CAN_TakeFrame+1,w,c
  4239  000566  0A00               	xorlw	0	; case 0
  4240  000568  A4D8               	btfss	status,2,c
  4241  00056A  D019               	goto	l2978
  4242                           
  4243                           ; Switch size 1, requested type "simple"
  4244                           ; Number of cases is 8, Range of values is 0 to 7
  4245                           ; switch strategies available:
  4246                           ; Name         Instructions Cycles
  4247                           ; simple_byte           25    13 (average)
  4248                           ;	Chosen strategy is simple_byte
  4249  00056C  5010               	movf	??_CAN_TakeFrame,w,c
  4250  00056E  0A00               	xorlw	0	; case 0
  4251  000570  B4D8               	btfsc	status,2,c
  4252  000572  D7D7               	goto	l2958
  4253  000574  0A01               	xorlw	1	; case 1
  4254  000576  B4D8               	btfsc	status,2,c
  4255  000578  D7D7               	goto	l2960
  4256  00057A  0A03               	xorlw	3	; case 2
  4257  00057C  B4D8               	btfsc	status,2,c
  4258  00057E  D7D7               	goto	l2962
  4259  000580  0A01               	xorlw	1	; case 3
  4260  000582  B4D8               	btfsc	status,2,c
  4261  000584  D7D8               	goto	l2964
  4262  000586  0A07               	xorlw	7	; case 4
  4263  000588  B4D8               	btfsc	status,2,c
  4264  00058A  D7D9               	goto	l2966
  4265  00058C  0A01               	xorlw	1	; case 5
  4266  00058E  B4D8               	btfsc	status,2,c
  4267  000590  D7DA               	goto	l2968
  4268  000592  0A03               	xorlw	3	; case 6
  4269  000594  B4D8               	btfsc	status,2,c
  4270  000596  D7DB               	goto	l2970
  4271  000598  0A01               	xorlw	1	; case 7
  4272  00059A  B4D8               	btfsc	status,2,c
  4273  00059C  D7DC               	goto	l2972
  4274  00059E                     l2978:
  4275                           
  4276                           ;CAN.c: 391:         return TRUE;
  4277  00059E  0E01               	movlw	1
  4278  0005A0  0012               	return		;funcret
  4279  0005A2                     __end_of_CAN_TakeFrame:
  4280                           	opt callstack 0
  4281                           
  4282 ;; *************** function ___awdiv *****************
  4283 ;; Defined at:
  4284 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  4285 ;; Parameters:    Size  Location     Type
  4286 ;;  dividend        2    5[COMRAM] int 
  4287 ;;  divisor         2    7[COMRAM] int 
  4288 ;; Auto vars:     Size  Location     Type
  4289 ;;  quotient        2   11[COMRAM] int 
  4290 ;;  sign            1   10[COMRAM] unsigned char 
  4291 ;;  counter         1    9[COMRAM] unsigned char 
  4292 ;; Return value:  Size  Location     Type
  4293 ;;                  2    5[COMRAM] int 
  4294 ;; Registers used:
  4295 ;;		wreg, status,2, status,0
  4296 ;; Tracked objects:
  4297 ;;		On entry : 0/0
  4298 ;;		On exit  : 0/0
  4299 ;;		Unchanged: 0/0
  4300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4301 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4302 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4304 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4305 ;;Total ram usage:        8 bytes
  4306 ;; Hardware stack levels used:    1
  4307 ;; Hardware stack levels required when called:    3
  4308 ;; This function calls:
  4309 ;;		Nothing
  4310 ;; This function is called by:
  4311 ;;		_CAN_TakeFrame
  4312 ;;		_FRAME_HandleCanFrame
  4313 ;; This function uses a non-reentrant model
  4314 ;;
  4315                           
  4316                           	psect	text33
  4317  000DFE                     __ptext33:
  4318                           	opt callstack 0
  4319  000DFE                     ___awdiv:
  4320                           	opt callstack 25
  4321                           
  4322                           ;incstack = 0
  4323  000DFE  0E00               	movlw	0
  4324  000E00  6E0B               	movwf	___awdiv@sign,c
  4325  000E02  AE09               	btfss	___awdiv@divisor+1,7,c
  4326  000E04  D006               	goto	l2854
  4327  000E06  6C08               	negf	___awdiv@divisor,c
  4328  000E08  1E09               	comf	___awdiv@divisor+1,f,c
  4329  000E0A  B0D8               	btfsc	status,0,c
  4330  000E0C  2A09               	incf	___awdiv@divisor+1,f,c
  4331  000E0E  0E01               	movlw	1
  4332  000E10  6E0B               	movwf	___awdiv@sign,c
  4333  000E12                     l2854:
  4334  000E12  AE07               	btfss	___awdiv@dividend+1,7,c
  4335  000E14  D006               	goto	l2860
  4336  000E16  6C06               	negf	___awdiv@dividend,c
  4337  000E18  1E07               	comf	___awdiv@dividend+1,f,c
  4338  000E1A  B0D8               	btfsc	status,0,c
  4339  000E1C  2A07               	incf	___awdiv@dividend+1,f,c
  4340  000E1E  0E01               	movlw	1
  4341  000E20  1A0B               	xorwf	___awdiv@sign,f,c
  4342  000E22                     l2860:
  4343  000E22  0E00               	movlw	0
  4344  000E24  6E0D               	movwf	___awdiv@quotient+1,c
  4345  000E26  0E00               	movlw	0
  4346  000E28  6E0C               	movwf	___awdiv@quotient,c
  4347  000E2A  5008               	movf	___awdiv@divisor,w,c
  4348  000E2C  1009               	iorwf	___awdiv@divisor+1,w,c
  4349  000E2E  B4D8               	btfsc	status,2,c
  4350  000E30  D01C               	goto	l2882
  4351  000E32  0E01               	movlw	1
  4352  000E34  6E0A               	movwf	___awdiv@counter,c
  4353  000E36  D004               	goto	l2868
  4354  000E38                     l2866:
  4355  000E38  90D8               	bcf	status,0,c
  4356  000E3A  3608               	rlcf	___awdiv@divisor,f,c
  4357  000E3C  3609               	rlcf	___awdiv@divisor+1,f,c
  4358  000E3E  2A0A               	incf	___awdiv@counter,f,c
  4359  000E40                     l2868:
  4360  000E40  AE09               	btfss	___awdiv@divisor+1,7,c
  4361  000E42  D7FA               	goto	l2866
  4362  000E44                     u1390:
  4363  000E44  90D8               	bcf	status,0,c
  4364  000E46  360C               	rlcf	___awdiv@quotient,f,c
  4365  000E48  360D               	rlcf	___awdiv@quotient+1,f,c
  4366  000E4A  5008               	movf	___awdiv@divisor,w,c
  4367  000E4C  5C06               	subwf	___awdiv@dividend,w,c
  4368  000E4E  5009               	movf	___awdiv@divisor+1,w,c
  4369  000E50  5807               	subwfb	___awdiv@dividend+1,w,c
  4370  000E52  A0D8               	btfss	status,0,c
  4371  000E54  D005               	goto	l2878
  4372  000E56  5008               	movf	___awdiv@divisor,w,c
  4373  000E58  5E06               	subwf	___awdiv@dividend,f,c
  4374  000E5A  5009               	movf	___awdiv@divisor+1,w,c
  4375  000E5C  5A07               	subwfb	___awdiv@dividend+1,f,c
  4376  000E5E  800C               	bsf	___awdiv@quotient,0,c
  4377  000E60                     l2878:
  4378  000E60  90D8               	bcf	status,0,c
  4379  000E62  3209               	rrcf	___awdiv@divisor+1,f,c
  4380  000E64  3208               	rrcf	___awdiv@divisor,f,c
  4381  000E66  2E0A               	decfsz	___awdiv@counter,f,c
  4382  000E68  D7ED               	goto	u1390
  4383  000E6A                     l2882:
  4384  000E6A  500B               	movf	___awdiv@sign,w,c
  4385  000E6C  B4D8               	btfsc	status,2,c
  4386  000E6E  D004               	goto	l2886
  4387  000E70  6C0C               	negf	___awdiv@quotient,c
  4388  000E72  1E0D               	comf	___awdiv@quotient+1,f,c
  4389  000E74  B0D8               	btfsc	status,0,c
  4390  000E76  2A0D               	incf	___awdiv@quotient+1,f,c
  4391  000E78                     l2886:
  4392  000E78  C00C  F006         	movff	___awdiv@quotient,?___awdiv
  4393  000E7C  C00D  F007         	movff	___awdiv@quotient+1,?___awdiv+1
  4394  000E80  0012               	return		;funcret
  4395  000E82                     __end_of___awdiv:
  4396                           	opt callstack 0
  4397                           
  4398 ;; *************** function _CAN_MoveBuffIntoFrame *****************
  4399 ;; Defined at:
  4400 ;;		line 191 in file "CAN.c"
  4401 ;; Parameters:    Size  Location     Type
  4402 ;;  Ram             2    5[COMRAM] PTR unsigned char 
  4403 ;;		 -> TRM_DataTransmition@canMessage(17), RXB0D0(1), 
  4404 ;;  Buf             2    7[COMRAM] PTR unsigned char 
  4405 ;;		 -> TRM_DataTransmition@canMessage(17), RXB0D0(1), 
  4406 ;; Auto vars:     Size  Location     Type
  4407 ;;  i               1    9[COMRAM] unsigned char 
  4408 ;; Return value:  Size  Location     Type
  4409 ;;                  1    wreg      void 
  4410 ;; Registers used:
  4411 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4412 ;; Tracked objects:
  4413 ;;		On entry : 0/0
  4414 ;;		On exit  : 0/0
  4415 ;;		Unchanged: 0/0
  4416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4417 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4418 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4420 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4421 ;;Total ram usage:        5 bytes
  4422 ;; Hardware stack levels used:    1
  4423 ;; Hardware stack levels required when called:    3
  4424 ;; This function calls:
  4425 ;;		Nothing
  4426 ;; This function is called by:
  4427 ;;		_CAN_SendFrame
  4428 ;;		_CAN_TakeFrame
  4429 ;; This function uses a non-reentrant model
  4430 ;;
  4431                           
  4432                           	psect	text34
  4433  0013E6                     __ptext34:
  4434                           	opt callstack 0
  4435  0013E6                     _CAN_MoveBuffIntoFrame:
  4436                           	opt callstack 24
  4437                           
  4438                           ;CAN.c: 191: static void CAN_MoveBuffIntoFrame(BYTE* Ram, BYTE* Buf);CAN.c: 192: {;CAN.c
      +                          : 193:     BYTE i;;CAN.c: 194:     for(i=0; i<8; ++i)
  4439                           
  4440                           ;incstack = 0
  4441  0013E6  0E00               	movlw	0
  4442  0013E8  6E0A               	movwf	CAN_MoveBuffIntoFrame@i,c
  4443  0013EA                     l2470:
  4444                           
  4445                           ;CAN.c: 195:     {;CAN.c: 196:         Ram[i]=(*(Buf+i));
  4446  0013EA  500A               	movf	CAN_MoveBuffIntoFrame@i,w,c
  4447  0013EC  2408               	addwf	CAN_MoveBuffIntoFrame@Buf,w,c
  4448  0013EE  6ED9               	movwf	fsr2l,c
  4449  0013F0  0E00               	movlw	0
  4450  0013F2  2009               	addwfc	CAN_MoveBuffIntoFrame@Buf+1,w,c
  4451  0013F4  6EDA               	movwf	fsr2h,c
  4452  0013F6  500A               	movf	CAN_MoveBuffIntoFrame@i,w,c
  4453  0013F8  2406               	addwf	CAN_MoveBuffIntoFrame@Ram,w,c
  4454  0013FA  6EE1               	movwf	fsr1l,c
  4455  0013FC  0E00               	movlw	0
  4456  0013FE  2007               	addwfc	CAN_MoveBuffIntoFrame@Ram+1,w,c
  4457  001400  6EE2               	movwf	fsr1h,c
  4458  001402  CFDF FFE7          	movff	indf2,indf1
  4459                           
  4460                           ;CAN.c: 197:     }
  4461  001406  2A0A               	incf	CAN_MoveBuffIntoFrame@i,f,c
  4462  001408  0E07               	movlw	7
  4463  00140A  640A               	cpfsgt	CAN_MoveBuffIntoFrame@i,c
  4464  00140C  D7EE               	goto	l2470
  4465  00140E  0012               	return	
  4466  001410                     __end_of_CAN_MoveBuffIntoFrame:
  4467                           	opt callstack 0
  4468                           
  4469 ;; *************** function _TMR1_Update_flag_Set *****************
  4470 ;; Defined at:
  4471 ;;		line 32 in file "TMR1.c"
  4472 ;; Parameters:    Size  Location     Type
  4473 ;;  a               2    5[COMRAM] unsigned int 
  4474 ;; Auto vars:     Size  Location     Type
  4475 ;;		None
  4476 ;; Return value:  Size  Location     Type
  4477 ;;                  1    wreg      void 
  4478 ;; Registers used:
  4479 ;;		None
  4480 ;; Tracked objects:
  4481 ;;		On entry : 0/0
  4482 ;;		On exit  : 0/0
  4483 ;;		Unchanged: 0/0
  4484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4485 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4488 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4489 ;;Total ram usage:        2 bytes
  4490 ;; Hardware stack levels used:    1
  4491 ;; Hardware stack levels required when called:    3
  4492 ;; This function calls:
  4493 ;;		Nothing
  4494 ;; This function is called by:
  4495 ;;		_main
  4496 ;; This function uses a non-reentrant model
  4497 ;;
  4498                           
  4499                           	psect	text35
  4500  001566                     __ptext35:
  4501                           	opt callstack 0
  4502  001566                     _TMR1_Update_flag_Set:
  4503                           	opt callstack 27
  4504                           
  4505                           ;TMR1.c: 32: void TMR1_Update_flag_Set(UINT a);TMR1.c: 33: {;TMR1.c: 34:     TMR1_Update
      +                          _flag = a;
  4506                           
  4507                           ;incstack = 0
  4508  001566  C006  F044         	movff	TMR1_Update_flag_Set@a,_TMR1_Update_flag
  4509  00156A  C007  F045         	movff	TMR1_Update_flag_Set@a+1,_TMR1_Update_flag+1
  4510  00156E  0012               	return		;funcret
  4511  001570                     __end_of_TMR1_Update_flag_Set:
  4512                           	opt callstack 0
  4513                           
  4514 ;; *************** function _TMR1_Update_flag_Get *****************
  4515 ;; Defined at:
  4516 ;;		line 47 in file "TMR1.c"
  4517 ;; Parameters:    Size  Location     Type
  4518 ;;		None
  4519 ;; Auto vars:     Size  Location     Type
  4520 ;;		None
  4521 ;; Return value:  Size  Location     Type
  4522 ;;                  2    5[COMRAM] unsigned int 
  4523 ;; Registers used:
  4524 ;;		None
  4525 ;; Tracked objects:
  4526 ;;		On entry : 0/0
  4527 ;;		On exit  : 0/0
  4528 ;;		Unchanged: 0/0
  4529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4530 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4533 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4534 ;;Total ram usage:        2 bytes
  4535 ;; Hardware stack levels used:    1
  4536 ;; Hardware stack levels required when called:    3
  4537 ;; This function calls:
  4538 ;;		Nothing
  4539 ;; This function is called by:
  4540 ;;		_main
  4541 ;; This function uses a non-reentrant model
  4542 ;;
  4543                           
  4544                           	psect	text36
  4545  001570                     __ptext36:
  4546                           	opt callstack 0
  4547  001570                     _TMR1_Update_flag_Get:
  4548                           	opt callstack 27
  4549                           
  4550                           ;TMR1.c: 49:     return TMR1_Update_flag;
  4551                           
  4552                           ;incstack = 0
  4553  001570  C044  F006         	movff	_TMR1_Update_flag,?_TMR1_Update_flag_Get
  4554  001574  C045  F007         	movff	_TMR1_Update_flag+1,?_TMR1_Update_flag_Get+1
  4555  001578  0012               	return		;funcret
  4556  00157A                     __end_of_TMR1_Update_flag_Get:
  4557                           	opt callstack 0
  4558                           
  4559 ;; *************** function _LED_Update *****************
  4560 ;; Defined at:
  4561 ;;		line 105 in file "LED.c"
  4562 ;; Parameters:    Size  Location     Type
  4563 ;;		None
  4564 ;; Auto vars:     Size  Location     Type
  4565 ;;		None
  4566 ;; Return value:  Size  Location     Type
  4567 ;;                  1    wreg      unsigned char 
  4568 ;; Registers used:
  4569 ;;		wreg, status,2, status,0, cstack
  4570 ;; Tracked objects:
  4571 ;;		On entry : 0/0
  4572 ;;		On exit  : 0/0
  4573 ;;		Unchanged: 0/0
  4574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4578 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4579 ;;Total ram usage:        0 bytes
  4580 ;; Hardware stack levels used:    1
  4581 ;; Hardware stack levels required when called:    5
  4582 ;; This function calls:
  4583 ;;		_LED_Control
  4584 ;;		_LED_Left
  4585 ;;		_LED_Light_Pos
  4586 ;;		_LED_Right
  4587 ;; This function is called by:
  4588 ;;		_main
  4589 ;; This function uses a non-reentrant model
  4590 ;;
  4591                           
  4592                           	psect	text37
  4593  000E82                     __ptext37:
  4594                           	opt callstack 0
  4595  000E82                     _LED_Update:
  4596                           	opt callstack 25
  4597                           
  4598                           ;LED.c: 107:     static LED_RGA_type Red = RED;;LED.c: 108:     static LED_RGA_type Gree
      +                          n = GREEN;;LED.c: 109:     static UINT pos1 = 0b0000000001;;LED.c: 110:     static UINT 
      +                          pos2 = 0b0000000001;;LED.c: 112:     if(LOCK == 0)
  4599                           
  4600                           ;incstack = 0
  4601  000E82  504C               	movf	_LOCK,w,c
  4602  000E84  A4D8               	btfss	status,2,c
  4603  000E86  D013               	goto	l3108
  4604                           
  4605                           ;LED.c: 113:     {;LED.c: 114:     LED_Control(RED,0b0000000000);
  4606  000E88  0E00               	movlw	0
  4607  000E8A  6E07               	movwf	LED_Control@diode+1,c
  4608  000E8C  0E00               	movlw	0
  4609  000E8E  6E06               	movwf	LED_Control@diode,c
  4610  000E90  0E00               	movlw	0
  4611  000E92  EC7D  F004         	call	_LED_Control
  4612                           
  4613                           ;LED.c: 115:     LED_Light_Pos(Green,pos2,Fulfillment_Lvl);
  4614  000E96  C04F  F00D         	movff	LED_Update@pos2,LED_Light_Pos@pos
  4615  000E9A  C050  F00E         	movff	LED_Update@pos2+1,LED_Light_Pos@pos+1
  4616  000E9E  C053  F00F         	movff	_Fulfillment_Lvl,LED_Light_Pos@fulfillment
  4617  000EA2  C054  F010         	movff	_Fulfillment_Lvl+1,LED_Light_Pos@fulfillment+1
  4618  000EA6  5055               	movf	LED_Update@Green,w,c
  4619  000EA8  EC05  F006         	call	_LED_Light_Pos
  4620                           
  4621                           ;LED.c: 117:     }
  4622  000EAC  D012               	goto	l311
  4623  000EAE                     l3108:
  4624                           
  4625                           ;LED.c: 119:     {;LED.c: 120:     LED_Control(Green,0b0000000000);
  4626  000EAE  0E00               	movlw	0
  4627  000EB0  6E07               	movwf	LED_Control@diode+1,c
  4628  000EB2  0E00               	movlw	0
  4629  000EB4  6E06               	movwf	LED_Control@diode,c
  4630  000EB6  5055               	movf	LED_Update@Green,w,c
  4631  000EB8  EC7D  F004         	call	_LED_Control
  4632                           
  4633                           ;LED.c: 121:     LED_Light_Pos(RED,pos1,Fulfillment_Lvl);
  4634  000EBC  C051  F00D         	movff	LED_Update@pos1,LED_Light_Pos@pos
  4635  000EC0  C052  F00E         	movff	LED_Update@pos1+1,LED_Light_Pos@pos+1
  4636  000EC4  C053  F00F         	movff	_Fulfillment_Lvl,LED_Light_Pos@fulfillment
  4637  000EC8  C054  F010         	movff	_Fulfillment_Lvl+1,LED_Light_Pos@fulfillment+1
  4638  000ECC  0E00               	movlw	0
  4639  000ECE  EC05  F006         	call	_LED_Light_Pos
  4640  000ED2                     l311:
  4641                           
  4642                           ;LED.c: 123:     pos1 = LED_Right(pos1);
  4643  000ED2  C051  F006         	movff	LED_Update@pos1,LED_Right@a
  4644  000ED6  C052  F007         	movff	LED_Update@pos1+1,LED_Right@a+1
  4645  000EDA  ECEA  F008         	call	_LED_Right	;wreg free
  4646  000EDE  C006  F051         	movff	?_LED_Right,LED_Update@pos1
  4647  000EE2  C007  F052         	movff	?_LED_Right+1,LED_Update@pos1+1
  4648                           
  4649                           ;LED.c: 124:     pos2 = LED_Left(pos2);
  4650  000EE6  C04F  F006         	movff	LED_Update@pos2,LED_Left@a
  4651  000EEA  C050  F007         	movff	LED_Update@pos2+1,LED_Left@a+1
  4652  000EEE  EC35  F009         	call	_LED_Left	;wreg free
  4653  000EF2  C006  F04F         	movff	?_LED_Left,LED_Update@pos2
  4654  000EF6  C007  F050         	movff	?_LED_Left+1,LED_Update@pos2+1
  4655  000EFA  0012               	return		;funcret
  4656  000EFC                     __end_of_LED_Update:
  4657                           	opt callstack 0
  4658                           
  4659 ;; *************** function _LED_Light_Pos *****************
  4660 ;; Defined at:
  4661 ;;		line 196 in file "LED.c"
  4662 ;; Parameters:    Size  Location     Type
  4663 ;;  color           1    wreg     enum E10644
  4664 ;;  pos             2   12[COMRAM] unsigned int 
  4665 ;;  fulfillment     2   14[COMRAM] unsigned int 
  4666 ;; Auto vars:     Size  Location     Type
  4667 ;;  color           1   16[COMRAM] enum E10644
  4668 ;;  flage           2   21[COMRAM] unsigned int 
  4669 ;;  pos2            2   19[COMRAM] unsigned int 
  4670 ;;  LED_array       2   17[COMRAM] unsigned int 
  4671 ;; Return value:  Size  Location     Type
  4672 ;;                  2   12[COMRAM] unsigned int 
  4673 ;; Registers used:
  4674 ;;		wreg, status,2, status,0, cstack
  4675 ;; Tracked objects:
  4676 ;;		On entry : 0/0
  4677 ;;		On exit  : 0/0
  4678 ;;		Unchanged: 0/0
  4679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4680 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4681 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4683 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4684 ;;Total ram usage:       11 bytes
  4685 ;; Hardware stack levels used:    1
  4686 ;; Hardware stack levels required when called:    4
  4687 ;; This function calls:
  4688 ;;		_LED_Control
  4689 ;;		_LED_Left
  4690 ;;		_LED_Right
  4691 ;;		___lwdiv
  4692 ;; This function is called by:
  4693 ;;		_LED_Update
  4694 ;; This function uses a non-reentrant model
  4695 ;;
  4696                           
  4697                           	psect	text38
  4698  000C0A                     __ptext38:
  4699                           	opt callstack 0
  4700  000C0A                     _LED_Light_Pos:
  4701                           	opt callstack 25
  4702                           
  4703                           ;incstack = 0
  4704                           ;LED_Light_Pos@color stored from wreg
  4705  000C0A  6E11               	movwf	LED_Light_Pos@color,c
  4706                           
  4707                           ;LED.c: 196: UINT LED_Light_Pos(LED_RGA_type color,UINT pos, UINT fulfillment);LED.c: 19
      +                          7: {;LED.c: 198:     UINT pos2 =pos;
  4708  000C0C  C00D  F014         	movff	LED_Light_Pos@pos,LED_Light_Pos@pos2
  4709  000C10  C00E  F015         	movff	LED_Light_Pos@pos+1,LED_Light_Pos@pos2+1
  4710                           
  4711                           ;LED.c: 199:     UINT LED_array = 0b0000000000;
  4712  000C14  0E00               	movlw	0
  4713  000C16  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  4714  000C18  0E00               	movlw	0
  4715  000C1A  6E12               	movwf	LED_Light_Pos@LED_array,c
  4716                           
  4717                           ;LED.c: 200:     UINT flage = fulfillment/10;
  4718  000C1C  C00F  F006         	movff	LED_Light_Pos@fulfillment,___lwdiv@dividend
  4719  000C20  C010  F007         	movff	LED_Light_Pos@fulfillment+1,___lwdiv@dividend+1
  4720  000C24  0E00               	movlw	0
  4721  000C26  6E09               	movwf	___lwdiv@divisor+1,c
  4722  000C28  0E0A               	movlw	10
  4723  000C2A  6E08               	movwf	___lwdiv@divisor,c
  4724  000C2C  EC73  F008         	call	___lwdiv	;wreg free
  4725  000C30  C006  F016         	movff	?___lwdiv,LED_Light_Pos@flage
  4726  000C34  C007  F017         	movff	?___lwdiv+1,LED_Light_Pos@flage+1
  4727                           
  4728                           ;LED.c: 201:     if(color == RED)
  4729  000C38  5011               	movf	LED_Light_Pos@color,w,c
  4730  000C3A  B4D8               	btfsc	status,2,c
  4731  000C3C  D017               	goto	l3016
  4732  000C3E  D031               	goto	l3024
  4733  000C40                     l3010:
  4734                           
  4735                           ;LED.c: 204:         {;LED.c: 205:             LED_array = pos2|LED_array;
  4736  000C40  5012               	movf	LED_Light_Pos@LED_array,w,c
  4737  000C42  1014               	iorwf	LED_Light_Pos@pos2,w,c
  4738  000C44  6E12               	movwf	LED_Light_Pos@LED_array,c
  4739  000C46  5013               	movf	LED_Light_Pos@LED_array+1,w,c
  4740  000C48  1015               	iorwf	LED_Light_Pos@pos2+1,w,c
  4741  000C4A  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  4742                           
  4743                           ;LED.c: 206:             pos2 = LED_Left(pos2);
  4744  000C4C  C014  F006         	movff	LED_Light_Pos@pos2,LED_Left@a
  4745  000C50  C015  F007         	movff	LED_Light_Pos@pos2+1,LED_Left@a+1
  4746  000C54  EC35  F009         	call	_LED_Left	;wreg free
  4747  000C58  C006  F014         	movff	?_LED_Left,LED_Light_Pos@pos2
  4748  000C5C  C007  F015         	movff	?_LED_Left+1,LED_Light_Pos@pos2+1
  4749                           
  4750                           ;LED.c: 207:             flage = flage - 1;
  4751  000C60  0EFF               	movlw	255
  4752  000C62  2416               	addwf	LED_Light_Pos@flage,w,c
  4753  000C64  6E16               	movwf	LED_Light_Pos@flage,c
  4754  000C66  0EFF               	movlw	255
  4755  000C68  2017               	addwfc	LED_Light_Pos@flage+1,w,c
  4756  000C6A  6E17               	movwf	LED_Light_Pos@flage+1,c
  4757  000C6C                     l3016:
  4758                           
  4759                           ;LED.c: 203:         while(flage>0)
  4760  000C6C  5016               	movf	LED_Light_Pos@flage,w,c
  4761  000C6E  1017               	iorwf	LED_Light_Pos@flage+1,w,c
  4762  000C70  B4D8               	btfsc	status,2,c
  4763  000C72  D01B               	goto	u1500
  4764  000C74  D7E5               	goto	l3010
  4765  000C76                     l3018:
  4766                           
  4767                           ;LED.c: 213:         {;LED.c: 214:             LED_array = pos2|LED_array;
  4768  000C76  5012               	movf	LED_Light_Pos@LED_array,w,c
  4769  000C78  1014               	iorwf	LED_Light_Pos@pos2,w,c
  4770  000C7A  6E12               	movwf	LED_Light_Pos@LED_array,c
  4771  000C7C  5013               	movf	LED_Light_Pos@LED_array+1,w,c
  4772  000C7E  1015               	iorwf	LED_Light_Pos@pos2+1,w,c
  4773  000C80  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  4774                           
  4775                           ;LED.c: 215:             pos2 = LED_Right(pos2);
  4776  000C82  C014  F006         	movff	LED_Light_Pos@pos2,LED_Right@a
  4777  000C86  C015  F007         	movff	LED_Light_Pos@pos2+1,LED_Right@a+1
  4778  000C8A  ECEA  F008         	call	_LED_Right	;wreg free
  4779  000C8E  C006  F014         	movff	?_LED_Right,LED_Light_Pos@pos2
  4780  000C92  C007  F015         	movff	?_LED_Right+1,LED_Light_Pos@pos2+1
  4781                           
  4782                           ;LED.c: 216:             flage = flage - 1;
  4783  000C96  0EFF               	movlw	255
  4784  000C98  2416               	addwf	LED_Light_Pos@flage,w,c
  4785  000C9A  6E16               	movwf	LED_Light_Pos@flage,c
  4786  000C9C  0EFF               	movlw	255
  4787  000C9E  2017               	addwfc	LED_Light_Pos@flage+1,w,c
  4788  000CA0  6E17               	movwf	LED_Light_Pos@flage+1,c
  4789  000CA2                     l3024:
  4790                           
  4791                           ;LED.c: 212:         while(flage>0)
  4792  000CA2  5016               	movf	LED_Light_Pos@flage,w,c
  4793  000CA4  1017               	iorwf	LED_Light_Pos@flage+1,w,c
  4794  000CA6  A4D8               	btfss	status,2,c
  4795  000CA8  D7E6               	goto	l3018
  4796  000CAA                     u1500:
  4797                           
  4798                           ;LED.c: 219:     LED_Control(color, LED_array);
  4799  000CAA  C012  F006         	movff	LED_Light_Pos@LED_array,LED_Control@diode
  4800  000CAE  C013  F007         	movff	LED_Light_Pos@LED_array+1,LED_Control@diode+1
  4801  000CB2  5011               	movf	LED_Light_Pos@color,w,c
  4802  000CB4  EC7D  F004         	call	_LED_Control
  4803  000CB8  0012               	return		;funcret
  4804  000CBA                     __end_of_LED_Light_Pos:
  4805                           	opt callstack 0
  4806                           
  4807 ;; *************** function ___lwdiv *****************
  4808 ;; Defined at:
  4809 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwdiv.c"
  4810 ;; Parameters:    Size  Location     Type
  4811 ;;  dividend        2    5[COMRAM] unsigned int 
  4812 ;;  divisor         2    7[COMRAM] unsigned int 
  4813 ;; Auto vars:     Size  Location     Type
  4814 ;;  quotient        2    9[COMRAM] unsigned int 
  4815 ;;  counter         1   11[COMRAM] unsigned char 
  4816 ;; Return value:  Size  Location     Type
  4817 ;;                  2    5[COMRAM] unsigned int 
  4818 ;; Registers used:
  4819 ;;		wreg, status,2, status,0
  4820 ;; Tracked objects:
  4821 ;;		On entry : 0/0
  4822 ;;		On exit  : 0/0
  4823 ;;		Unchanged: 0/0
  4824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4825 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4826 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4828 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4829 ;;Total ram usage:        7 bytes
  4830 ;; Hardware stack levels used:    1
  4831 ;; Hardware stack levels required when called:    3
  4832 ;; This function calls:
  4833 ;;		Nothing
  4834 ;; This function is called by:
  4835 ;;		_LED_Light_Pos
  4836 ;;		_FRAME_Plot
  4837 ;; This function uses a non-reentrant model
  4838 ;;
  4839                           
  4840                           	psect	text39
  4841  0010E6                     __ptext39:
  4842                           	opt callstack 0
  4843  0010E6                     ___lwdiv:
  4844                           	opt callstack 24
  4845                           
  4846                           ;incstack = 0
  4847  0010E6  0E00               	movlw	0
  4848  0010E8  6E0B               	movwf	___lwdiv@quotient+1,c
  4849  0010EA  0E00               	movlw	0
  4850  0010EC  6E0A               	movwf	___lwdiv@quotient,c
  4851  0010EE  5008               	movf	___lwdiv@divisor,w,c
  4852  0010F0  1009               	iorwf	___lwdiv@divisor+1,w,c
  4853  0010F2  B4D8               	btfsc	status,2,c
  4854  0010F4  D01C               	goto	l1192
  4855  0010F6  0E01               	movlw	1
  4856  0010F8  6E0C               	movwf	___lwdiv@counter,c
  4857  0010FA  D004               	goto	l2552
  4858  0010FC                     l2550:
  4859  0010FC  90D8               	bcf	status,0,c
  4860  0010FE  3608               	rlcf	___lwdiv@divisor,f,c
  4861  001100  3609               	rlcf	___lwdiv@divisor+1,f,c
  4862  001102  2A0C               	incf	___lwdiv@counter,f,c
  4863  001104                     l2552:
  4864  001104  AE09               	btfss	___lwdiv@divisor+1,7,c
  4865  001106  D7FA               	goto	l2550
  4866  001108                     u1070:
  4867  001108  90D8               	bcf	status,0,c
  4868  00110A  360A               	rlcf	___lwdiv@quotient,f,c
  4869  00110C  360B               	rlcf	___lwdiv@quotient+1,f,c
  4870  00110E  5008               	movf	___lwdiv@divisor,w,c
  4871  001110  5C06               	subwf	___lwdiv@dividend,w,c
  4872  001112  5009               	movf	___lwdiv@divisor+1,w,c
  4873  001114  5807               	subwfb	___lwdiv@dividend+1,w,c
  4874  001116  A0D8               	btfss	status,0,c
  4875  001118  D005               	goto	l2562
  4876  00111A  5008               	movf	___lwdiv@divisor,w,c
  4877  00111C  5E06               	subwf	___lwdiv@dividend,f,c
  4878  00111E  5009               	movf	___lwdiv@divisor+1,w,c
  4879  001120  5A07               	subwfb	___lwdiv@dividend+1,f,c
  4880  001122  800A               	bsf	___lwdiv@quotient,0,c
  4881  001124                     l2562:
  4882  001124  90D8               	bcf	status,0,c
  4883  001126  3209               	rrcf	___lwdiv@divisor+1,f,c
  4884  001128  3208               	rrcf	___lwdiv@divisor,f,c
  4885  00112A  2E0C               	decfsz	___lwdiv@counter,f,c
  4886  00112C  D7ED               	goto	u1070
  4887  00112E                     l1192:
  4888  00112E  C00A  F006         	movff	___lwdiv@quotient,?___lwdiv
  4889  001132  C00B  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4890  001136  0012               	return		;funcret
  4891  001138                     __end_of___lwdiv:
  4892                           	opt callstack 0
  4893                           
  4894 ;; *************** function _LED_Right *****************
  4895 ;; Defined at:
  4896 ;;		line 140 in file "LED.c"
  4897 ;; Parameters:    Size  Location     Type
  4898 ;;  a               2    5[COMRAM] unsigned int 
  4899 ;; Auto vars:     Size  Location     Type
  4900 ;;  b               2    9[COMRAM] unsigned int 
  4901 ;; Return value:  Size  Location     Type
  4902 ;;                  2    5[COMRAM] unsigned int 
  4903 ;; Registers used:
  4904 ;;		wreg, status,2, status,0
  4905 ;; Tracked objects:
  4906 ;;		On entry : 0/0
  4907 ;;		On exit  : 0/0
  4908 ;;		Unchanged: 0/0
  4909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4910 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4911 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4912 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4913 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4914 ;;Total ram usage:        6 bytes
  4915 ;; Hardware stack levels used:    1
  4916 ;; Hardware stack levels required when called:    3
  4917 ;; This function calls:
  4918 ;;		Nothing
  4919 ;; This function is called by:
  4920 ;;		_LED_Update
  4921 ;;		_LED_Light_Pos
  4922 ;; This function uses a non-reentrant model
  4923 ;;
  4924                           
  4925                           	psect	text40
  4926  0011D4                     __ptext40:
  4927                           	opt callstack 0
  4928  0011D4                     _LED_Right:
  4929                           	opt callstack 26
  4930                           
  4931                           ;LED.c: 140: UINT LED_Right(UINT a);LED.c: 141: {;LED.c: 142:     if ((a & 0b0000000001)
      +                           == 0b0000000001)
  4932                           
  4933                           ;incstack = 0
  4934  0011D4  A006               	btfss	LED_Right@a,0,c
  4935  0011D6  D018               	goto	l2694
  4936                           
  4937                           ;LED.c: 143:     {;LED.c: 144:         UINT b = a & 0b1111111110;
  4938  0011D8  0EFE               	movlw	254
  4939  0011DA  1406               	andwf	LED_Right@a,w,c
  4940  0011DC  6E0A               	movwf	LED_Right@b,c
  4941  0011DE  0E03               	movlw	3
  4942  0011E0  1407               	andwf	LED_Right@a+1,w,c
  4943  0011E2  6E0B               	movwf	LED_Right@b+1,c
  4944                           
  4945                           ;LED.c: 145:         b = b >> 1;
  4946  0011E4  90D8               	bcf	status,0,c
  4947  0011E6  300B               	rrcf	LED_Right@b+1,w,c
  4948  0011E8  6E08               	movwf	??_LED_Right& (0+255),c
  4949  0011EA  300A               	rrcf	LED_Right@b,w,c
  4950  0011EC  6E0A               	movwf	LED_Right@b,c
  4951  0011EE  C008  F00B         	movff	??_LED_Right,LED_Right@b+1
  4952                           
  4953                           ;LED.c: 146:         b = b | 0b1000000000;
  4954  0011F2  0E00               	movlw	0
  4955  0011F4  100A               	iorwf	LED_Right@b,w,c
  4956  0011F6  6E0A               	movwf	LED_Right@b,c
  4957  0011F8  0E02               	movlw	2
  4958  0011FA  100B               	iorwf	LED_Right@b+1,w,c
  4959  0011FC  6E0B               	movwf	LED_Right@b+1,c
  4960                           
  4961                           ;LED.c: 147:         return b;
  4962  0011FE  C00A  F006         	movff	LED_Right@b,?_LED_Right
  4963  001202  C00B  F007         	movff	LED_Right@b+1,?_LED_Right+1
  4964  001206  0012               	return	
  4965  001208                     l2694:
  4966                           
  4967                           ;LED.c: 150:     {;LED.c: 151:         a =a >> 1;
  4968  001208  90D8               	bcf	status,0,c
  4969  00120A  3007               	rrcf	LED_Right@a+1,w,c
  4970  00120C  6E08               	movwf	??_LED_Right& (0+255),c
  4971  00120E  3006               	rrcf	LED_Right@a,w,c
  4972  001210  6E06               	movwf	LED_Right@a,c
  4973  001212  C008  F007         	movff	??_LED_Right,LED_Right@a+1
  4974                           
  4975                           ;LED.c: 152:         return a;
  4976  001216  C006  F006         	movff	LED_Right@a,?_LED_Right
  4977  00121A  C007  F007         	movff	LED_Right@a+1,?_LED_Right+1
  4978  00121E  0012               	return		;funcret
  4979  001220                     __end_of_LED_Right:
  4980                           	opt callstack 0
  4981                           
  4982 ;; *************** function _LED_Left *****************
  4983 ;; Defined at:
  4984 ;;		line 167 in file "LED.c"
  4985 ;; Parameters:    Size  Location     Type
  4986 ;;  a               2    5[COMRAM] unsigned int 
  4987 ;; Auto vars:     Size  Location     Type
  4988 ;;  b               2    7[COMRAM] unsigned int 
  4989 ;; Return value:  Size  Location     Type
  4990 ;;                  2    5[COMRAM] unsigned int 
  4991 ;; Registers used:
  4992 ;;		wreg, status,2, status,0
  4993 ;; Tracked objects:
  4994 ;;		On entry : 0/0
  4995 ;;		On exit  : 0/0
  4996 ;;		Unchanged: 0/0
  4997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4998 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4999 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5001 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5002 ;;Total ram usage:        4 bytes
  5003 ;; Hardware stack levels used:    1
  5004 ;; Hardware stack levels required when called:    3
  5005 ;; This function calls:
  5006 ;;		Nothing
  5007 ;; This function is called by:
  5008 ;;		_LED_Update
  5009 ;;		_LED_Light_Pos
  5010 ;; This function uses a non-reentrant model
  5011 ;;
  5012                           
  5013                           	psect	text41
  5014  00126A                     __ptext41:
  5015                           	opt callstack 0
  5016  00126A                     _LED_Left:
  5017                           	opt callstack 25
  5018                           
  5019                           ;LED.c: 167: UINT LED_Left(UINT a);LED.c: 168: {;LED.c: 169:     if ((a & 0b1000000000) 
      +                          == 0b1000000000)
  5020                           
  5021                           ;incstack = 0
  5022  00126A  A207               	btfss	LED_Left@a+1,1,c
  5023  00126C  D015               	goto	l2710
  5024                           
  5025                           ;LED.c: 170:     {;LED.c: 171:         UINT b = a & 0b0111111111;
  5026  00126E  0EFF               	movlw	255
  5027  001270  1406               	andwf	LED_Left@a,w,c
  5028  001272  6E08               	movwf	LED_Left@b,c
  5029  001274  0E01               	movlw	1
  5030  001276  1407               	andwf	LED_Left@a+1,w,c
  5031  001278  6E09               	movwf	LED_Left@b+1,c
  5032                           
  5033                           ;LED.c: 172:         b = b << 1;
  5034  00127A  90D8               	bcf	status,0,c
  5035  00127C  3408               	rlcf	LED_Left@b,w,c
  5036  00127E  6E08               	movwf	LED_Left@b,c
  5037  001280  3409               	rlcf	LED_Left@b+1,w,c
  5038  001282  6E09               	movwf	LED_Left@b+1,c
  5039                           
  5040                           ;LED.c: 173:         b = b | 0b0000000001;
  5041  001284  0E01               	movlw	1
  5042  001286  1008               	iorwf	LED_Left@b,w,c
  5043  001288  6E08               	movwf	LED_Left@b,c
  5044  00128A  5009               	movf	LED_Left@b+1,w,c
  5045  00128C  6E09               	movwf	LED_Left@b+1,c
  5046                           
  5047                           ;LED.c: 174:         return b;
  5048  00128E  C008  F006         	movff	LED_Left@b,?_LED_Left
  5049  001292  C009  F007         	movff	LED_Left@b+1,?_LED_Left+1
  5050  001296  0012               	return	
  5051  001298                     l2710:
  5052                           
  5053                           ;LED.c: 177:     {;LED.c: 178:         a = a << 1;
  5054  001298  90D8               	bcf	status,0,c
  5055  00129A  3406               	rlcf	LED_Left@a,w,c
  5056  00129C  6E06               	movwf	LED_Left@a,c
  5057  00129E  3407               	rlcf	LED_Left@a+1,w,c
  5058  0012A0  6E07               	movwf	LED_Left@a+1,c
  5059                           
  5060                           ;LED.c: 179:         return a;
  5061  0012A2  C006  F006         	movff	LED_Left@a,?_LED_Left
  5062  0012A6  C007  F007         	movff	LED_Left@a+1,?_LED_Left+1
  5063  0012AA  0012               	return		;funcret
  5064  0012AC                     __end_of_LED_Left:
  5065                           	opt callstack 0
  5066                           
  5067 ;; *************** function _INI_All *****************
  5068 ;; Defined at:
  5069 ;;		line 52 in file "INI.c"
  5070 ;; Parameters:    Size  Location     Type
  5071 ;;		None
  5072 ;; Auto vars:     Size  Location     Type
  5073 ;;		None
  5074 ;; Return value:  Size  Location     Type
  5075 ;;                  1    wreg      void 
  5076 ;; Registers used:
  5077 ;;		wreg, status,2, status,0, cstack
  5078 ;; Tracked objects:
  5079 ;;		On entry : 0/0
  5080 ;;		On exit  : 0/0
  5081 ;;		Unchanged: 0/0
  5082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5086 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5087 ;;Total ram usage:        0 bytes
  5088 ;; Hardware stack levels used:    1
  5089 ;; Hardware stack levels required when called:    5
  5090 ;; This function calls:
  5091 ;;		_CAN_Setup
  5092 ;;		_INI_GlobalInterrupt
  5093 ;;		_INI_LED_Start
  5094 ;;		_INI_OUTPUT
  5095 ;;		_INI_Timer
  5096 ;; This function is called by:
  5097 ;;		_main
  5098 ;; This function uses a non-reentrant model
  5099 ;;
  5100                           
  5101                           	psect	text42
  5102  0014DC                     __ptext42:
  5103                           	opt callstack 0
  5104  0014DC                     _INI_All:
  5105                           	opt callstack 25
  5106                           
  5107                           ;INI.c: 55:     WDTCONbits.SWDTEN = 1;
  5108                           
  5109                           ;incstack = 0
  5110  0014DC  80D1               	bsf	4049,0,c	;volatile
  5111  0014DE  0004               	clrwdt		;# 
  5112                           
  5113                           ;INI.c: 64:     INI_OUTPUT();
  5114  0014E0  EC5F  F00A         	call	_INI_OUTPUT	;wreg free
  5115                           
  5116                           ;INI.c: 66:     CAN_Setup();
  5117  0014E4  ECEC  F007         	call	_CAN_Setup	;wreg free
  5118                           
  5119                           ;INI.c: 67:     INI_GlobalInterrupt();
  5120  0014E8  EC8E  F00A         	call	_INI_GlobalInterrupt	;wreg free
  5121                           
  5122                           ;INI.c: 69:     INI_Timer();
  5123  0014EC  EC7B  F00A         	call	_INI_Timer	;wreg free
  5124                           
  5125                           ;INI.c: 71:     INI_LED_Start();
  5126  0014F0  ECC2  F009         	call	_INI_LED_Start	;wreg free
  5127  0014F4  0012               	return		;funcret
  5128  0014F6                     __end_of_INI_All:
  5129                           	opt callstack 0
  5130                           
  5131 ;; *************** function _INI_Timer *****************
  5132 ;; Defined at:
  5133 ;;		line 92 in file "TMR1.c"
  5134 ;; Parameters:    Size  Location     Type
  5135 ;;		None
  5136 ;; Auto vars:     Size  Location     Type
  5137 ;;		None
  5138 ;; Return value:  Size  Location     Type
  5139 ;;                  1    wreg      unsigned char 
  5140 ;; Registers used:
  5141 ;;		wreg, status,2
  5142 ;; Tracked objects:
  5143 ;;		On entry : 0/0
  5144 ;;		On exit  : 0/0
  5145 ;;		Unchanged: 0/0
  5146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5151 ;;Total ram usage:        0 bytes
  5152 ;; Hardware stack levels used:    1
  5153 ;; Hardware stack levels required when called:    3
  5154 ;; This function calls:
  5155 ;;		Nothing
  5156 ;; This function is called by:
  5157 ;;		_INI_All
  5158 ;; This function uses a non-reentrant model
  5159 ;;
  5160                           
  5161                           	psect	text43
  5162  0014F6                     __ptext43:
  5163                           	opt callstack 0
  5164  0014F6                     _INI_Timer:
  5165                           	opt callstack 26
  5166                           
  5167                           ;TMR1.c: 96:     IRCF2 = 1;
  5168                           
  5169                           ;incstack = 0
  5170  0014F6  8CD3               	bsf	4051,6,c	;volatile
  5171                           
  5172                           ;TMR1.c: 97:     IRCF1 = 1;
  5173  0014F8  8AD3               	bsf	4051,5,c	;volatile
  5174                           
  5175                           ;TMR1.c: 98:     IRCF0 = 1;
  5176  0014FA  88D3               	bsf	4051,4,c	;volatile
  5177                           
  5178                           ;TMR1.c: 99:     T1CON = 0b00111101;
  5179  0014FC  0E3D               	movlw	61
  5180  0014FE  6ECD               	movwf	4045,c	;volatile
  5181                           
  5182                           ;TMR1.c: 100:     TMR1H= (UINT8)((0xFFFF - (((8000000/8)/4)/10)) >> 8);
  5183  001500  0E9E               	movlw	158
  5184  001502  6ECF               	movwf	4047,c	;volatile
  5185                           
  5186                           ;TMR1.c: 101:     TMR1L=(UINT8)((0xFFFF - (((8000000/8)/4)/10)) & 0xFF);
  5187  001504  0E57               	movlw	87
  5188  001506  6ECE               	movwf	4046,c	;volatile
  5189                           
  5190                           ;TMR1.c: 102:     TMR1IE=1;
  5191  001508  809D               	bsf	3997,0,c	;volatile
  5192                           
  5193                           ;TMR1.c: 103:     TMR1ON = 1;
  5194  00150A  80CD               	bsf	4045,0,c	;volatile
  5195  00150C  0012               	return		;funcret
  5196  00150E                     __end_of_INI_Timer:
  5197                           	opt callstack 0
  5198                           
  5199 ;; *************** function _INI_OUTPUT *****************
  5200 ;; Defined at:
  5201 ;;		line 27 in file "INI.c"
  5202 ;; Parameters:    Size  Location     Type
  5203 ;;		None
  5204 ;; Auto vars:     Size  Location     Type
  5205 ;;		None
  5206 ;; Return value:  Size  Location     Type
  5207 ;;                  1    wreg      void 
  5208 ;; Registers used:
  5209 ;;		wreg, status,2
  5210 ;; Tracked objects:
  5211 ;;		On entry : 0/0
  5212 ;;		On exit  : 0/0
  5213 ;;		Unchanged: 0/0
  5214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5219 ;;Total ram usage:        0 bytes
  5220 ;; Hardware stack levels used:    1
  5221 ;; Hardware stack levels required when called:    3
  5222 ;; This function calls:
  5223 ;;		Nothing
  5224 ;; This function is called by:
  5225 ;;		_INI_All
  5226 ;; This function uses a non-reentrant model
  5227 ;;
  5228                           
  5229                           	psect	text44
  5230  0014BE                     __ptext44:
  5231                           	opt callstack 0
  5232  0014BE                     _INI_OUTPUT:
  5233                           	opt callstack 26
  5234                           
  5235                           ;INI.c: 31:     LATA = 0;
  5236                           
  5237                           ;incstack = 0
  5238  0014BE  0E00               	movlw	0
  5239  0014C0  6E89               	movwf	3977,c	;volatile
  5240                           
  5241                           ;INI.c: 32:     LATB = 0;
  5242  0014C2  0E00               	movlw	0
  5243  0014C4  6E8A               	movwf	3978,c	;volatile
  5244                           
  5245                           ;INI.c: 33:     LATC = 0;
  5246  0014C6  0E00               	movlw	0
  5247  0014C8  6E8B               	movwf	3979,c	;volatile
  5248                           
  5249                           ;INI.c: 34:     TRISA = 0x0C;
  5250  0014CA  0E0C               	movlw	12
  5251  0014CC  6E92               	movwf	3986,c	;volatile
  5252                           
  5253                           ;INI.c: 35:     TRISB = 0b10001000;
  5254  0014CE  0E88               	movlw	136
  5255  0014D0  6E93               	movwf	3987,c	;volatile
  5256                           
  5257                           ;INI.c: 36:     TRISC = 0xBF;
  5258  0014D2  0EBF               	movlw	191
  5259  0014D4  6E94               	movwf	3988,c	;volatile
  5260                           
  5261                           ;INI.c: 37:     RCONbits.IPEN = 1;
  5262  0014D6  8ED0               	bsf	4048,7,c	;volatile
  5263                           
  5264                           ;INI.c: 40:     DetectorLedRadar.Flags.inicjalizacja = 1;
  5265  0014D8  8641               	bsf	_DetectorLedRadar,3,c
  5266  0014DA  0012               	return		;funcret
  5267  0014DC                     __end_of_INI_OUTPUT:
  5268                           	opt callstack 0
  5269                           
  5270 ;; *************** function _INI_LED_Start *****************
  5271 ;; Defined at:
  5272 ;;		line 231 in file "LED.c"
  5273 ;; Parameters:    Size  Location     Type
  5274 ;;		None
  5275 ;; Auto vars:     Size  Location     Type
  5276 ;;		None
  5277 ;; Return value:  Size  Location     Type
  5278 ;;                  1    wreg      void 
  5279 ;; Registers used:
  5280 ;;		wreg, status,2, status,0, cstack
  5281 ;; Tracked objects:
  5282 ;;		On entry : 0/0
  5283 ;;		On exit  : 0/0
  5284 ;;		Unchanged: 0/0
  5285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5290 ;;Total ram usage:        0 bytes
  5291 ;; Hardware stack levels used:    1
  5292 ;; Hardware stack levels required when called:    4
  5293 ;; This function calls:
  5294 ;;		_LED_Control
  5295 ;; This function is called by:
  5296 ;;		_INI_All
  5297 ;; This function uses a non-reentrant model
  5298 ;;
  5299                           
  5300                           	psect	text45
  5301  001384                     __ptext45:
  5302                           	opt callstack 0
  5303  001384                     _INI_LED_Start:
  5304                           	opt callstack 25
  5305                           
  5306                           ;LED.c: 233:     TRISA = TRISA & 0b00000001;
  5307                           
  5308                           ;incstack = 0
  5309  001384  5092               	movf	3986,w,c	;volatile
  5310  001386  0B01               	andlw	1
  5311  001388  6E92               	movwf	3986,c	;volatile
  5312                           
  5313                           ;LED.c: 234:     TRISB = TRISB & 0b11111100;
  5314  00138A  5093               	movf	3987,w,c	;volatile
  5315  00138C  0BFC               	andlw	252
  5316  00138E  6E93               	movwf	3987,c	;volatile
  5317                           
  5318                           ;LED.c: 235:     TRISE = TRISE & 0b11111000;
  5319  001390  5096               	movf	3990,w,c	;volatile
  5320  001392  0BF8               	andlw	248
  5321  001394  6E96               	movwf	3990,c	;volatile
  5322                           
  5323                           ;LED.c: 236:     TRISD = TRISD & 0b00000000;
  5324  001396  0E00               	movlw	0
  5325  001398  6E95               	movwf	3989,c	;volatile
  5326                           
  5327                           ;LED.c: 237:     LED_Control(RED,0b0000000000);
  5328  00139A  0E00               	movlw	0
  5329  00139C  6E07               	movwf	LED_Control@diode+1,c
  5330  00139E  0E00               	movlw	0
  5331  0013A0  6E06               	movwf	LED_Control@diode,c
  5332  0013A2  0E00               	movlw	0
  5333  0013A4  EC7D  F004         	call	_LED_Control
  5334                           
  5335                           ;LED.c: 238:     LED_Control(GREEN,0b0000000000);
  5336  0013A8  0E00               	movlw	0
  5337  0013AA  6E07               	movwf	LED_Control@diode+1,c
  5338  0013AC  0E00               	movlw	0
  5339  0013AE  6E06               	movwf	LED_Control@diode,c
  5340  0013B0  0E01               	movlw	1
  5341  0013B2  EC7D  F004         	call	_LED_Control
  5342  0013B6  0012               	return		;funcret
  5343  0013B8                     __end_of_INI_LED_Start:
  5344                           	opt callstack 0
  5345                           
  5346 ;; *************** function _LED_Control *****************
  5347 ;; Defined at:
  5348 ;;		line 256 in file "LED.c"
  5349 ;; Parameters:    Size  Location     Type
  5350 ;;  color           1    wreg     enum E10644
  5351 ;;  diode           2    5[COMRAM] unsigned int 
  5352 ;; Auto vars:     Size  Location     Type
  5353 ;;  color           1    9[COMRAM] enum E10644
  5354 ;;  cos             2    0        unsigned int 
  5355 ;; Return value:  Size  Location     Type
  5356 ;;                  1    wreg      unsigned char 
  5357 ;; Registers used:
  5358 ;;		wreg, status,2, status,0
  5359 ;; Tracked objects:
  5360 ;;		On entry : 0/0
  5361 ;;		On exit  : 0/0
  5362 ;;		Unchanged: 0/0
  5363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5364 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5365 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5367 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5368 ;;Total ram usage:        5 bytes
  5369 ;; Hardware stack levels used:    1
  5370 ;; Hardware stack levels required when called:    3
  5371 ;; This function calls:
  5372 ;;		Nothing
  5373 ;; This function is called by:
  5374 ;;		_LED_Error
  5375 ;;		_LED_Clear
  5376 ;;		_LED_Update
  5377 ;;		_LED_Light_Pos
  5378 ;;		_INI_LED_Start
  5379 ;; This function uses a non-reentrant model
  5380 ;;
  5381                           
  5382                           	psect	text46
  5383  0008FA                     __ptext46:
  5384                           	opt callstack 0
  5385  0008FA                     _LED_Control:
  5386                           	opt callstack 24
  5387                           
  5388                           ;incstack = 0
  5389                           ;LED_Control@color stored from wreg
  5390  0008FA  6E0A               	movwf	LED_Control@color,c
  5391                           
  5392                           ;LED.c: 259:     if(color == RED)
  5393  0008FC  500A               	movf	LED_Control@color,w,c
  5394  0008FE  A4D8               	btfss	status,2,c
  5395  000900  D050               	goto	l339
  5396                           
  5397                           ;LED.c: 260:     {;LED.c: 262:         if((diode & 0b0000000001)== 0b0000000001)
  5398  000902  A006               	btfss	LED_Control@diode,0,c
  5399  000904  D003               	goto	l2346
  5400                           
  5401                           ;LED.c: 263:         {;LED.c: 264:             LATD = LATD | ~0b11101111;
  5402  000906  508C               	movf	3980,w,c	;volatile
  5403  000908  0910               	iorlw	16
  5404  00090A  D002               	goto	L3
  5405  00090C                     l2346:
  5406                           
  5407                           ;LED.c: 267:         {;LED.c: 268:             LATD = LATD &0b11101111;
  5408  00090C  508C               	movf	3980,w,c	;volatile
  5409  00090E  0BEF               	andlw	239
  5410  000910                     L3:
  5411  000910  6E8C               	movwf	3980,c	;volatile
  5412                           
  5413                           ;LED.c: 271:         if((diode & 0b0000000010) == 0b0000000010)
  5414  000912  A206               	btfss	LED_Control@diode,1,c
  5415  000914  D003               	goto	l2352
  5416                           
  5417                           ;LED.c: 272:         {;LED.c: 273:             LATD = LATD | ~0b10111111;
  5418  000916  508C               	movf	3980,w,c	;volatile
  5419  000918  0940               	iorlw	64
  5420  00091A  D002               	goto	L4
  5421  00091C                     l2352:
  5422                           
  5423                           ;LED.c: 276:         {;LED.c: 277:             LATD = LATD & 0b10111111;
  5424  00091C  508C               	movf	3980,w,c	;volatile
  5425  00091E  0BBF               	andlw	191
  5426  000920                     L4:
  5427  000920  6E8C               	movwf	3980,c	;volatile
  5428                           
  5429                           ;LED.c: 280:         if((diode & 0b0000000100) == 0b0000000100)
  5430  000922  A406               	btfss	LED_Control@diode,2,c
  5431  000924  D003               	goto	l2358
  5432                           
  5433                           ;LED.c: 281:         {;LED.c: 282:             LATB = LATB | ~0b11111110;
  5434  000926  508A               	movf	3978,w,c	;volatile
  5435  000928  0901               	iorlw	1
  5436  00092A  D002               	goto	L5
  5437  00092C                     l2358:
  5438                           
  5439                           ;LED.c: 285:         {;LED.c: 286:             LATB = LATB & 0b11111110;
  5440  00092C  508A               	movf	3978,w,c	;volatile
  5441  00092E  0BFE               	andlw	254
  5442  000930                     L5:
  5443  000930  6E8A               	movwf	3978,c	;volatile
  5444                           
  5445                           ;LED.c: 290:         if((diode & 0b0000001000) == 0b0000001000)
  5446  000932  A606               	btfss	LED_Control@diode,3,c
  5447  000934  D003               	goto	l2364
  5448                           
  5449                           ;LED.c: 291:         {;LED.c: 292:             LATA = LATA | ~0b11111101;
  5450  000936  5089               	movf	3977,w,c	;volatile
  5451  000938  0902               	iorlw	2
  5452  00093A  D002               	goto	L6
  5453  00093C                     l2364:
  5454                           
  5455                           ;LED.c: 295:         {;LED.c: 296:             LATA = LATA & 0b11111101;
  5456  00093C  5089               	movf	3977,w,c	;volatile
  5457  00093E  0BFD               	andlw	253
  5458  000940                     L6:
  5459  000940  6E89               	movwf	3977,c	;volatile
  5460                           
  5461                           ;LED.c: 300:         if((diode & 0b0000010000) == 0b0000010000)
  5462  000942  A806               	btfss	LED_Control@diode,4,c
  5463  000944  D003               	goto	l2370
  5464                           
  5465                           ;LED.c: 301:         {;LED.c: 302:             LATA = LATA | ~0b11110111;
  5466  000946  5089               	movf	3977,w,c	;volatile
  5467  000948  0908               	iorlw	8
  5468  00094A  D002               	goto	L7
  5469  00094C                     l2370:
  5470                           
  5471                           ;LED.c: 305:         {;LED.c: 306:             LATA = LATA & 0b11110111;
  5472  00094C  5089               	movf	3977,w,c	;volatile
  5473  00094E  0BF7               	andlw	247
  5474  000950                     L7:
  5475  000950  6E89               	movwf	3977,c	;volatile
  5476                           
  5477                           ;LED.c: 310:         if((diode & 0b0000100000) == 0b0000100000)
  5478  000952  AA06               	btfss	LED_Control@diode,5,c
  5479  000954  D003               	goto	l2376
  5480                           
  5481                           ;LED.c: 311:         {;LED.c: 312:             LATA = LATA | ~0b11011111;
  5482  000956  5089               	movf	3977,w,c	;volatile
  5483  000958  0920               	iorlw	32
  5484  00095A  D002               	goto	L8
  5485  00095C                     l2376:
  5486                           
  5487                           ;LED.c: 315:         {;LED.c: 316:             LATA = LATA & 0b11011111;
  5488  00095C  5089               	movf	3977,w,c	;volatile
  5489  00095E  0BDF               	andlw	223
  5490  000960                     L8:
  5491  000960  6E89               	movwf	3977,c	;volatile
  5492                           
  5493                           ;LED.c: 319:         if((diode & 0b0001000000) == 0b0001000000)
  5494  000962  AC06               	btfss	LED_Control@diode,6,c
  5495  000964  D003               	goto	l2382
  5496                           
  5497                           ;LED.c: 320:         {;LED.c: 321:             LATE = LATE | ~0b11111101;
  5498  000966  508D               	movf	3981,w,c	;volatile
  5499  000968  0902               	iorlw	2
  5500  00096A  D002               	goto	L9
  5501  00096C                     l2382:
  5502                           
  5503                           ;LED.c: 324:         {;LED.c: 325:             LATE = LATE & 0b11111101;
  5504  00096C  508D               	movf	3981,w,c	;volatile
  5505  00096E  0BFD               	andlw	253
  5506  000970                     L9:
  5507  000970  6E8D               	movwf	3981,c	;volatile
  5508                           
  5509                           ;LED.c: 328:         if((diode & 0b0010000000) == 0b0010000000)
  5510  000972  AE06               	btfss	LED_Control@diode,7,c
  5511  000974  D003               	goto	l2388
  5512                           
  5513                           ;LED.c: 329:         {;LED.c: 330:             LATA = LATA | ~0b01111111;
  5514  000976  5089               	movf	3977,w,c	;volatile
  5515  000978  0980               	iorlw	128
  5516  00097A  D002               	goto	L10
  5517  00097C                     l2388:
  5518                           
  5519                           ;LED.c: 333:         {;LED.c: 334:             LATA = LATA & 0b01111111;
  5520  00097C  5089               	movf	3977,w,c	;volatile
  5521  00097E  0B7F               	andlw	127
  5522  000980                     L10:
  5523  000980  6E89               	movwf	3977,c	;volatile
  5524                           
  5525                           ;LED.c: 338:         if((diode & 0b0100000000) == 0b0100000000)
  5526  000982  A007               	btfss	LED_Control@diode+1,0,c
  5527  000984  D003               	goto	l2394
  5528                           
  5529                           ;LED.c: 339:         {;LED.c: 340:             LATD = LATD | ~0b11111110;
  5530  000986  508C               	movf	3980,w,c	;volatile
  5531  000988  0901               	iorlw	1
  5532  00098A  D002               	goto	L11
  5533  00098C                     l2394:
  5534                           
  5535                           ;LED.c: 343:         {;LED.c: 344:             LATD = LATD & 0b11111110;
  5536  00098C  508C               	movf	3980,w,c	;volatile
  5537  00098E  0BFE               	andlw	254
  5538  000990                     L11:
  5539  000990  6E8C               	movwf	3980,c	;volatile
  5540                           
  5541                           ;LED.c: 347:         if((diode & 0b1000000000) == 0b1000000000)
  5542  000992  A207               	btfss	LED_Control@diode+1,1,c
  5543  000994  D003               	goto	l2400
  5544                           
  5545                           ;LED.c: 348:         {;LED.c: 349:             LATD = LATD | ~0b11111011;
  5546  000996  508C               	movf	3980,w,c	;volatile
  5547  000998  0904               	iorlw	4
  5548  00099A  D002               	goto	L12
  5549  00099C                     l2400:
  5550                           
  5551                           ;LED.c: 352:         {;LED.c: 353:             LATD = LATD & 0b11111011;
  5552  00099C  508C               	movf	3980,w,c	;volatile
  5553  00099E  0BFB               	andlw	251
  5554  0009A0                     L12:
  5555  0009A0  6E8C               	movwf	3980,c	;volatile
  5556  0009A2                     l339:
  5557                           
  5558                           ;LED.c: 358:     if(color == GREEN)
  5559  0009A2  040A               	decf	LED_Control@color,w,c
  5560  0009A4  A4D8               	btfss	status,2,c
  5561  0009A6  0012               	return	
  5562                           
  5563                           ;LED.c: 359:     {;LED.c: 361:         if((diode & 0b0000000001) == 0b0000000001)
  5564  0009A8  A006               	btfss	LED_Control@diode,0,c
  5565  0009AA  D003               	goto	l2406
  5566                           
  5567                           ;LED.c: 362:         {;LED.c: 363:             LATD = LATD | ~0b11011111;
  5568  0009AC  508C               	movf	3980,w,c	;volatile
  5569  0009AE  0920               	iorlw	32
  5570  0009B0  D002               	goto	L13
  5571  0009B2                     l2406:
  5572                           
  5573                           ;LED.c: 366:         {;LED.c: 367:             LATD = LATD & 0b11011111;
  5574  0009B2  508C               	movf	3980,w,c	;volatile
  5575  0009B4  0BDF               	andlw	223
  5576  0009B6                     L13:
  5577  0009B6  6E8C               	movwf	3980,c	;volatile
  5578                           
  5579                           ;LED.c: 371:         if((diode & 0b0000000010) == 0b0000000010)
  5580  0009B8  A206               	btfss	LED_Control@diode,1,c
  5581  0009BA  D003               	goto	l2412
  5582                           
  5583                           ;LED.c: 372:         {;LED.c: 373:             LATD = LATD | ~0b01111111;
  5584  0009BC  508C               	movf	3980,w,c	;volatile
  5585  0009BE  0980               	iorlw	128
  5586  0009C0  D002               	goto	L14
  5587  0009C2                     l2412:
  5588                           
  5589                           ;LED.c: 376:         {;LED.c: 377:             LATD = LATD & 0b01111111;
  5590  0009C2  508C               	movf	3980,w,c	;volatile
  5591  0009C4  0B7F               	andlw	127
  5592  0009C6                     L14:
  5593  0009C6  6E8C               	movwf	3980,c	;volatile
  5594                           
  5595                           ;LED.c: 381:         if((diode & 0b0000000100) == 0b0000000100)
  5596  0009C8  A406               	btfss	LED_Control@diode,2,c
  5597  0009CA  D003               	goto	l2418
  5598                           
  5599                           ;LED.c: 382:         {;LED.c: 383:             LATB = LATB | ~0b11111101;
  5600  0009CC  508A               	movf	3978,w,c	;volatile
  5601  0009CE  0902               	iorlw	2
  5602  0009D0  D002               	goto	L15
  5603  0009D2                     l2418:
  5604                           
  5605                           ;LED.c: 386:         {;LED.c: 387:             LATB = LATB & 0b11111101;
  5606  0009D2  508A               	movf	3978,w,c	;volatile
  5607  0009D4  0BFD               	andlw	253
  5608  0009D6                     L15:
  5609  0009D6  6E8A               	movwf	3978,c	;volatile
  5610                           
  5611                           ;LED.c: 390:         if((diode & 0b0000001000) == 0b0000001000)
  5612  0009D8  A606               	btfss	LED_Control@diode,3,c
  5613  0009DA  D003               	goto	l2424
  5614                           
  5615                           ;LED.c: 391:         {;LED.c: 392:             LATA = LATA | ~0b11111011;
  5616  0009DC  5089               	movf	3977,w,c	;volatile
  5617  0009DE  0904               	iorlw	4
  5618  0009E0  D002               	goto	L16
  5619  0009E2                     l2424:
  5620                           
  5621                           ;LED.c: 395:         {;LED.c: 396:             LATA = LATA & 0b11111011;
  5622  0009E2  5089               	movf	3977,w,c	;volatile
  5623  0009E4  0BFB               	andlw	251
  5624  0009E6                     L16:
  5625  0009E6  6E89               	movwf	3977,c	;volatile
  5626                           
  5627                           ;LED.c: 400:         if((diode & 0b0000010000) == 0b0000010000)
  5628  0009E8  A806               	btfss	LED_Control@diode,4,c
  5629  0009EA  D003               	goto	l2430
  5630                           
  5631                           ;LED.c: 401:         {;LED.c: 402:             LATA = LATA | ~0b11101111;
  5632  0009EC  5089               	movf	3977,w,c	;volatile
  5633  0009EE  0910               	iorlw	16
  5634  0009F0  D002               	goto	L17
  5635  0009F2                     l2430:
  5636                           
  5637                           ;LED.c: 405:         {;LED.c: 406:             LATA = LATA & 0b11101111;
  5638  0009F2  5089               	movf	3977,w,c	;volatile
  5639  0009F4  0BEF               	andlw	239
  5640  0009F6                     L17:
  5641  0009F6  6E89               	movwf	3977,c	;volatile
  5642                           
  5643                           ;LED.c: 410:         if((diode & 0b0000100000) == 0b0000100000)
  5644  0009F8  AA06               	btfss	LED_Control@diode,5,c
  5645  0009FA  D003               	goto	l2436
  5646                           
  5647                           ;LED.c: 411:         {;LED.c: 412:             LATE = LATE | ~0b11111110;
  5648  0009FC  508D               	movf	3981,w,c	;volatile
  5649  0009FE  0901               	iorlw	1
  5650  000A00  D002               	goto	L18
  5651  000A02                     l2436:
  5652                           
  5653                           ;LED.c: 415:         {;LED.c: 416:             LATE = LATE & 0b11111110;
  5654  000A02  508D               	movf	3981,w,c	;volatile
  5655  000A04  0BFE               	andlw	254
  5656  000A06                     L18:
  5657  000A06  6E8D               	movwf	3981,c	;volatile
  5658                           
  5659                           ;LED.c: 420:         if((diode & 0b0001000000) == 0b0001000000)
  5660  000A08  AC06               	btfss	LED_Control@diode,6,c
  5661  000A0A  D003               	goto	l2442
  5662                           
  5663                           ;LED.c: 421:         {;LED.c: 422:             LATE = LATE | ~0b11111011;
  5664  000A0C  508D               	movf	3981,w,c	;volatile
  5665  000A0E  0904               	iorlw	4
  5666  000A10  D002               	goto	L19
  5667  000A12                     l2442:
  5668                           
  5669                           ;LED.c: 425:         {;LED.c: 426:             LATE = LATE & 0b11111011;
  5670  000A12  508D               	movf	3981,w,c	;volatile
  5671  000A14  0BFB               	andlw	251
  5672  000A16                     L19:
  5673  000A16  6E8D               	movwf	3981,c	;volatile
  5674                           
  5675                           ;LED.c: 429:         if((diode & 0b0010000000) == 0b0010000000)
  5676  000A18  AE06               	btfss	LED_Control@diode,7,c
  5677  000A1A  D003               	goto	l2448
  5678                           
  5679                           ;LED.c: 430:         {;LED.c: 431:             LATA = LATA | ~0b10111111;
  5680  000A1C  5089               	movf	3977,w,c	;volatile
  5681  000A1E  0940               	iorlw	64
  5682  000A20  D002               	goto	L20
  5683  000A22                     l2448:
  5684                           
  5685                           ;LED.c: 434:         {;LED.c: 435:             LATA = LATA & 0b10111111;
  5686  000A22  5089               	movf	3977,w,c	;volatile
  5687  000A24  0BBF               	andlw	191
  5688  000A26                     L20:
  5689  000A26  6E89               	movwf	3977,c	;volatile
  5690                           
  5691                           ;LED.c: 438:         if((diode & 0b0100000000) == 0b0100000000)
  5692  000A28  A007               	btfss	LED_Control@diode+1,0,c
  5693  000A2A  D003               	goto	l2454
  5694                           
  5695                           ;LED.c: 439:         {;LED.c: 440:             LATD = LATD | ~0b11111101;
  5696  000A2C  508C               	movf	3980,w,c	;volatile
  5697  000A2E  0902               	iorlw	2
  5698  000A30  D002               	goto	L21
  5699  000A32                     l2454:
  5700                           
  5701                           ;LED.c: 443:         {;LED.c: 444:             LATD = LATD & 0b11111101;
  5702  000A32  508C               	movf	3980,w,c	;volatile
  5703  000A34  0BFD               	andlw	253
  5704  000A36                     L21:
  5705  000A36  6E8C               	movwf	3980,c	;volatile
  5706                           
  5707                           ;LED.c: 447:         if((diode & 0b1000000000) == 0b1000000000)
  5708  000A38  A207               	btfss	LED_Control@diode+1,1,c
  5709  000A3A  D004               	goto	l2460
  5710                           
  5711                           ;LED.c: 448:         {;LED.c: 449:             LATD = LATD | ~0b11110111;
  5712  000A3C  508C               	movf	3980,w,c	;volatile
  5713  000A3E  0908               	iorlw	8
  5714  000A40  6E8C               	movwf	3980,c	;volatile
  5715                           
  5716                           ;LED.c: 450:         }
  5717  000A42  0012               	return	
  5718  000A44                     l2460:
  5719                           
  5720                           ;LED.c: 452:         {;LED.c: 453:             LATD = LATD &0b11110111;
  5721  000A44  508C               	movf	3980,w,c	;volatile
  5722  000A46  0BF7               	andlw	247
  5723  000A48  6E8C               	movwf	3980,c	;volatile
  5724  000A4A  0012               	return		;funcret
  5725  000A4C                     __end_of_LED_Control:
  5726                           	opt callstack 0
  5727                           
  5728 ;; *************** function _INI_GlobalInterrupt *****************
  5729 ;; Defined at:
  5730 ;;		line 74 in file "INI.c"
  5731 ;; Parameters:    Size  Location     Type
  5732 ;;		None
  5733 ;; Auto vars:     Size  Location     Type
  5734 ;;		None
  5735 ;; Return value:  Size  Location     Type
  5736 ;;                  1    wreg      void 
  5737 ;; Registers used:
  5738 ;;		None
  5739 ;; Tracked objects:
  5740 ;;		On entry : 0/0
  5741 ;;		On exit  : 0/0
  5742 ;;		Unchanged: 0/0
  5743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5747 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5748 ;;Total ram usage:        0 bytes
  5749 ;; Hardware stack levels used:    1
  5750 ;; Hardware stack levels required when called:    3
  5751 ;; This function calls:
  5752 ;;		Nothing
  5753 ;; This function is called by:
  5754 ;;		_INI_All
  5755 ;; This function uses a non-reentrant model
  5756 ;;
  5757                           
  5758                           	psect	text47
  5759  00151C                     __ptext47:
  5760                           	opt callstack 0
  5761  00151C                     _INI_GlobalInterrupt:
  5762                           	opt callstack 26
  5763                           
  5764                           ;INI.c: 76: INTCONbits.GIEH=1;
  5765                           
  5766                           ;incstack = 0
  5767  00151C  8EF2               	bsf	4082,7,c	;volatile
  5768                           
  5769                           ;INI.c: 77: INTCONbits.GIEL=1;
  5770  00151E  8CF2               	bsf	4082,6,c	;volatile
  5771                           
  5772                           ;INI.c: 78: RCONbits.IPEN=1;
  5773  001520  8ED0               	bsf	4048,7,c	;volatile
  5774                           
  5775                           ;INI.c: 79: IPEN =1;
  5776  001522  8ED0               	bsf	4048,7,c	;volatile
  5777                           
  5778                           ;INI.c: 81: PEIE=1;
  5779  001524  8CF2               	bsf	4082,6,c	;volatile
  5780                           
  5781                           ;INI.c: 82: TMR1IP = 0;
  5782  001526  909F               	bcf	3999,0,c	;volatile
  5783  001528  0012               	return		;funcret
  5784  00152A                     __end_of_INI_GlobalInterrupt:
  5785                           	opt callstack 0
  5786                           
  5787 ;; *************** function _CAN_Setup *****************
  5788 ;; Defined at:
  5789 ;;		line 22 in file "CAN.c"
  5790 ;; Parameters:    Size  Location     Type
  5791 ;;		None
  5792 ;; Auto vars:     Size  Location     Type
  5793 ;;		None
  5794 ;; Return value:  Size  Location     Type
  5795 ;;                  1    wreg      void 
  5796 ;; Registers used:
  5797 ;;		wreg, status,2, status,0, cstack
  5798 ;; Tracked objects:
  5799 ;;		On entry : 0/0
  5800 ;;		On exit  : 0/0
  5801 ;;		Unchanged: 0/0
  5802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5805 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5806 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5807 ;;Total ram usage:        1 bytes
  5808 ;; Hardware stack levels used:    1
  5809 ;; Hardware stack levels required when called:    4
  5810 ;; This function calls:
  5811 ;;		_CAN_SetupClock
  5812 ;;		_CAN_SetupMask
  5813 ;; This function is called by:
  5814 ;;		_INI_All
  5815 ;; This function uses a non-reentrant model
  5816 ;;
  5817                           
  5818                           	psect	text48
  5819  000FD8                     __ptext48:
  5820                           	opt callstack 0
  5821  000FD8                     _CAN_Setup:
  5822                           	opt callstack 25
  5823                           
  5824                           ;CAN.c: 27:     CANCON = 0x80;
  5825                           
  5826                           ;incstack = 0
  5827  000FD8  0E80               	movlw	128
  5828  000FDA  6E6F               	movwf	3951,c	;volatile
  5829  000FDC                     l2892:
  5830                           
  5831                           ;CAN.c: 28:     while((CANSTAT & 0xE0)!=0x80)
  5832  000FDC  506E               	movf	3950,w,c	;volatile
  5833  000FDE  0BE0               	andlw	224
  5834  000FE0  0A80               	xorlw	128
  5835  000FE2  A4D8               	btfss	status,2,c
  5836  000FE4  D7FB               	goto	l2892
  5837                           
  5838                           ;CAN.c: 33:     BSEL0 = 0;
  5839  000FE6  0E00               	movlw	0
  5840  000FE8  010D               	movlb	13	; () banked
  5841  000FEA  6FF8               	movwf	248,b	;volatile
  5842                           
  5843                           ;CAN.c: 34:     TXB0CON = 0;
  5844  000FEC  0E00               	movlw	0
  5845  000FEE  010F               	movlb	15	; () banked
  5846  000FF0  6F40               	movwf	64,b	;volatile
  5847                           
  5848                           ;CAN.c: 35:     RXB0CON = 0;
  5849  000FF2  0E00               	movlw	0
  5850  000FF4  6E60               	movwf	3936,c	;volatile
  5851                           
  5852                           ;CAN.c: 36:     RXB1CON = 0;
  5853  000FF6  0E00               	movlw	0
  5854  000FF8  6F50               	movwf	80,b	;volatile
  5855                           
  5856                           ;CAN.c: 37:     B0CON = 0;
  5857  000FFA  0E00               	movlw	0
  5858  000FFC  010E               	movlb	14	; () banked
  5859  000FFE  6F20               	movwf	32,b	;volatile
  5860                           
  5861                           ;CAN.c: 38:     B1CON = 0;
  5862  001000  0E00               	movlw	0
  5863  001002  6F30               	movwf	48,b	;volatile
  5864                           
  5865                           ;CAN.c: 39:     PIE3 = 0;
  5866  001004  0E00               	movlw	0
  5867  001006  6EA3               	movwf	4003,c	;volatile
  5868                           
  5869                           ; BSR set to: 14
  5870                           ;CAN.c: 40:     IPR3 = 0xFF;
  5871  001008  68A5               	setf	4005,c	;volatile
  5872                           
  5873                           ;CAN.c: 41:     PIR3 = 0x00;
  5874  00100A  0E00               	movlw	0
  5875  00100C  6EA4               	movwf	4004,c	;volatile
  5876                           
  5877                           ;CAN.c: 42:     BIE0 = 0;
  5878  00100E  0E00               	movlw	0
  5879  001010  010D               	movlb	13	; () banked
  5880  001012  6FFA               	movwf	250,b	;volatile
  5881                           
  5882                           ;CAN.c: 45:     ECANCON = 0x90;
  5883  001014  0E90               	movlw	144
  5884  001016  6E77               	movwf	3959,c	;volatile
  5885                           
  5886                           ; BSR set to: 13
  5887                           ;CAN.c: 48:     CAN_SetupClock();
  5888  001018  EC08  F00A         	call	_CAN_SetupClock	;wreg free
  5889                           
  5890                           ;CAN.c: 51:     CAN_SetupMask();
  5891  00101C  ECAF  F006         	call	_CAN_SetupMask	;wreg free
  5892                           
  5893                           ;CAN.c: 53:     CIOCON = 0xff;
  5894  001020  6873               	setf	3955,c	;volatile
  5895                           
  5896                           ;CAN.c: 59:     CANCON = 0x00;
  5897  001022  0E00               	movlw	0
  5898  001024  6E6F               	movwf	3951,c	;volatile
  5899  001026                     l2906:
  5900                           
  5901                           ;CAN.c: 60:     while((CANSTAT & 0xE0) != 0x00)
  5902  001026  CF6E F006          	movff	3950,??_CAN_Setup	;volatile
  5903  00102A  0EE0               	movlw	224
  5904  00102C  1606               	andwf	??_CAN_Setup,f,c
  5905  00102E  B4D8               	btfsc	status,2,c
  5906  001030  0012               	return	
  5907  001032  D7F9               	goto	l2906
  5908  001034                     __end_of_CAN_Setup:
  5909                           	opt callstack 0
  5910                           
  5911 ;; *************** function _CAN_SetupMask *****************
  5912 ;; Defined at:
  5913 ;;		line 81 in file "CAN.c"
  5914 ;; Parameters:    Size  Location     Type
  5915 ;;		None
  5916 ;; Auto vars:     Size  Location     Type
  5917 ;;		None
  5918 ;; Return value:  Size  Location     Type
  5919 ;;                  1    wreg      void 
  5920 ;; Registers used:
  5921 ;;		wreg, status,2, status,0
  5922 ;; Tracked objects:
  5923 ;;		On entry : 0/0
  5924 ;;		On exit  : 0/0
  5925 ;;		Unchanged: 0/0
  5926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5931 ;;Total ram usage:        0 bytes
  5932 ;; Hardware stack levels used:    1
  5933 ;; Hardware stack levels required when called:    3
  5934 ;; This function calls:
  5935 ;;		Nothing
  5936 ;; This function is called by:
  5937 ;;		_CAN_Setup
  5938 ;; This function uses a non-reentrant model
  5939 ;;
  5940                           
  5941                           	psect	text49
  5942  000D5E                     __ptext49:
  5943                           	opt callstack 0
  5944  000D5E                     _CAN_SetupMask:
  5945                           	opt callstack 25
  5946                           
  5947                           ;CAN.c: 83:     MSEL0 = 0x50;
  5948                           
  5949                           ;incstack = 0
  5950  000D5E  0E50               	movlw	80
  5951  000D60  010D               	movlb	13	; () banked
  5952  000D62  6FF0               	movwf	240,b	;volatile
  5953                           
  5954                           ;CAN.c: 84:     MSEL1 = 0x55;
  5955  000D64  0E55               	movlw	85
  5956  000D66  6FF1               	movwf	241,b	;volatile
  5957                           
  5958                           ;CAN.c: 85:     MSEL2 = 0x55;
  5959  000D68  0E55               	movlw	85
  5960  000D6A  6FF2               	movwf	242,b	;volatile
  5961                           
  5962                           ;CAN.c: 86:     MSEL3 = 0x55;
  5963  000D6C  0E55               	movlw	85
  5964  000D6E  6FF3               	movwf	243,b	;volatile
  5965                           
  5966                           ;CAN.c: 89:     RXM0SIDH = 0b00000000;
  5967  000D70  0E00               	movlw	0
  5968  000D72  010F               	movlb	15	; () banked
  5969  000D74  6F18               	movwf	24,b	;volatile
  5970                           
  5971                           ;CAN.c: 90:     RXM0SIDL = 0b00001011;
  5972  000D76  0E0B               	movlw	11
  5973  000D78  6F19               	movwf	25,b	;volatile
  5974                           
  5975                           ; BSR set to: 15
  5976                           ;CAN.c: 91:     RXM0EIDH = 0xFF;
  5977  000D7A  691A               	setf	26,b	;volatile
  5978                           
  5979                           ; BSR set to: 15
  5980                           ;CAN.c: 92:     RXM0EIDL = 0xFF;
  5981  000D7C  691B               	setf	27,b	;volatile
  5982                           
  5983                           ; BSR set to: 15
  5984                           ;CAN.c: 95:     RXM1SIDH = 0xFF;
  5985  000D7E  691C               	setf	28,b	;volatile
  5986                           
  5987                           ; BSR set to: 15
  5988                           ;CAN.c: 96:     RXM1SIDL = 0xFF;
  5989  000D80  691D               	setf	29,b	;volatile
  5990                           
  5991                           ;CAN.c: 97:     RXM1EIDH = 0;
  5992  000D82  0E00               	movlw	0
  5993  000D84  6F1E               	movwf	30,b	;volatile
  5994                           
  5995                           ;CAN.c: 98:     RXM1EIDL = 0;
  5996  000D86  0E00               	movlw	0
  5997  000D88  6F1F               	movwf	31,b	;volatile
  5998                           
  5999                           ;CAN.c: 101:     RXF0SIDH = 0x00;
  6000  000D8A  0E00               	movlw	0
  6001  000D8C  6F00               	movwf	0,b	;volatile
  6002                           
  6003                           ;CAN.c: 102:     RXF0SIDL = 0x01;
  6004  000D8E  0E01               	movlw	1
  6005  000D90  6F01               	movwf	1,b	;volatile
  6006                           
  6007                           ; BSR set to: 15
  6008                           ;CAN.c: 103:     RXF0SIDLbits.EXIDEN = 1;
  6009  000D92  8701               	bsf	1,3,b	;volatile
  6010                           
  6011                           ;CAN.c: 104:     RXF0EIDH = (BYTE)(DaneCan.adresCAN>>8);
  6012  000D94  5040               	movf	_DaneCan+3,w,c
  6013  000D96  6F02               	movwf	2,b	;volatile
  6014                           
  6015                           ; BSR set to: 15
  6016                           ;CAN.c: 105:  RXF0EIDH |= 0x40;
  6017  000D98  8D02               	bsf	2,6,b	;volatile
  6018                           
  6019                           ; BSR set to: 15
  6020                           ;CAN.c: 106:     RXF0EIDL = (BYTE)DaneCan.adresCAN;
  6021  000D9A  C03F  FF03         	movff	_DaneCan+2,3843	;volatile
  6022                           
  6023                           ; BSR set to: 15
  6024                           ;CAN.c: 108:     RXF1SIDH = 0x00;
  6025  000D9E  0E00               	movlw	0
  6026  000DA0  6F04               	movwf	4,b	;volatile
  6027                           
  6028                           ; BSR set to: 15
  6029                           ;CAN.c: 109:     RXF1SIDL = 0x01;
  6030  000DA2  0E01               	movlw	1
  6031  000DA4  6F05               	movwf	5,b	;volatile
  6032                           
  6033                           ; BSR set to: 15
  6034                           ;CAN.c: 110:     RXF1SIDLbits.EXIDEN = 1;
  6035  000DA6  8705               	bsf	5,3,b	;volatile
  6036                           
  6037                           ; BSR set to: 15
  6038                           ;CAN.c: 111:     RXF1EIDH = 0x7F;
  6039  000DA8  0E7F               	movlw	127
  6040  000DAA  6F06               	movwf	6,b	;volatile
  6041                           
  6042                           ; BSR set to: 15
  6043                           ;CAN.c: 112:     RXF1EIDL = 0xFF;
  6044  000DAC  6907               	setf	7,b	;volatile
  6045                           
  6046                           ; BSR set to: 15
  6047                           ;CAN.c: 115:     RXF2SIDH = 0x00;
  6048  000DAE  0E00               	movlw	0
  6049  000DB0  6F08               	movwf	8,b	;volatile
  6050                           
  6051                           ; BSR set to: 15
  6052                           ;CAN.c: 116:     RXF2SIDL = 0x20;
  6053  000DB2  0E20               	movlw	32
  6054  000DB4  6F09               	movwf	9,b	;volatile
  6055                           
  6056                           ; BSR set to: 15
  6057                           ;CAN.c: 117:     RXF2SIDLbits.EXIDEN = 1;
  6058  000DB6  8709               	bsf	9,3,b	;volatile
  6059                           
  6060                           ; BSR set to: 15
  6061                           ;CAN.c: 118:     RXF2EIDH = 0;
  6062  000DB8  0E00               	movlw	0
  6063  000DBA  6F0A               	movwf	10,b	;volatile
  6064                           
  6065                           ; BSR set to: 15
  6066                           ;CAN.c: 119:     RXF2EIDL = 0;
  6067  000DBC  0E00               	movlw	0
  6068  000DBE  6F0B               	movwf	11,b	;volatile
  6069                           
  6070                           ; BSR set to: 15
  6071                           ;CAN.c: 122:     RXF3SIDH = 0x00;
  6072  000DC0  0E00               	movlw	0
  6073  000DC2  6F0C               	movwf	12,b	;volatile
  6074                           
  6075                           ; BSR set to: 15
  6076                           ;CAN.c: 123:     RXF3SIDL = 0x40;
  6077  000DC4  0E40               	movlw	64
  6078  000DC6  6F0D               	movwf	13,b	;volatile
  6079                           
  6080                           ; BSR set to: 15
  6081                           ;CAN.c: 124:     RXF3SIDLbits.EXIDEN = 1;
  6082  000DC8  870D               	bsf	13,3,b	;volatile
  6083                           
  6084                           ; BSR set to: 15
  6085                           ;CAN.c: 125:     RXF3EIDH = 0;
  6086  000DCA  0E00               	movlw	0
  6087  000DCC  6F0E               	movwf	14,b	;volatile
  6088                           
  6089                           ; BSR set to: 15
  6090                           ;CAN.c: 126:     RXF3EIDL = 0;
  6091  000DCE  0E00               	movlw	0
  6092  000DD0  6F0F               	movwf	15,b	;volatile
  6093                           
  6094                           ; BSR set to: 15
  6095                           ;CAN.c: 129:     RXF5SIDH = 0b00000010;
  6096  000DD2  0E02               	movlw	2
  6097  000DD4  6F14               	movwf	20,b	;volatile
  6098                           
  6099                           ; BSR set to: 15
  6100                           ;CAN.c: 130:     RXF5SIDL = 0b00000000;
  6101  000DD6  0E00               	movlw	0
  6102  000DD8  6F15               	movwf	21,b	;volatile
  6103                           
  6104                           ; BSR set to: 15
  6105                           ;CAN.c: 131:     RXF4SIDLbits.EXIDEN = 1;
  6106  000DDA  8711               	bsf	17,3,b	;volatile
  6107                           
  6108                           ; BSR set to: 15
  6109                           ;CAN.c: 132:     RXF4EIDH = 0;
  6110  000DDC  0E00               	movlw	0
  6111  000DDE  6F12               	movwf	18,b	;volatile
  6112                           
  6113                           ; BSR set to: 15
  6114                           ;CAN.c: 133:     RXF4EIDL = 0;
  6115  000DE0  0E00               	movlw	0
  6116  000DE2  6F13               	movwf	19,b	;volatile
  6117                           
  6118                           ; BSR set to: 15
  6119                           ;CAN.c: 136:     RXF5SIDH = 0b00000010;
  6120  000DE4  0E02               	movlw	2
  6121  000DE6  6F14               	movwf	20,b	;volatile
  6122                           
  6123                           ; BSR set to: 15
  6124                           ;CAN.c: 137:     RXF5SIDL = 0b00100000;
  6125  000DE8  0E20               	movlw	32
  6126  000DEA  6F15               	movwf	21,b	;volatile
  6127                           
  6128                           ; BSR set to: 15
  6129                           ;CAN.c: 138:     RXF5SIDLbits.EXIDEN = 1;
  6130  000DEC  8715               	bsf	21,3,b	;volatile
  6131                           
  6132                           ; BSR set to: 15
  6133                           ;CAN.c: 139:     RXF5EIDH = 0;
  6134  000DEE  0E00               	movlw	0
  6135  000DF0  6F16               	movwf	22,b	;volatile
  6136                           
  6137                           ; BSR set to: 15
  6138                           ;CAN.c: 140:     RXF5EIDL = 0;
  6139  000DF2  0E00               	movlw	0
  6140  000DF4  6F17               	movwf	23,b	;volatile
  6141                           
  6142                           ; BSR set to: 15
  6143                           ;CAN.c: 148:     RXFCON0 = 0b00111111;
  6144  000DF6  0E3F               	movlw	63
  6145  000DF8  010D               	movlb	13	; () banked
  6146  000DFA  6FD4               	movwf	212,b	;volatile
  6147                           
  6148                           ; BSR set to: 13
  6149  000DFC  0012               	return		;funcret
  6150  000DFE                     __end_of_CAN_SetupMask:
  6151                           	opt callstack 0
  6152                           
  6153 ;; *************** function _CAN_SetupClock *****************
  6154 ;; Defined at:
  6155 ;;		line 158 in file "CAN.c"
  6156 ;; Parameters:    Size  Location     Type
  6157 ;;		None
  6158 ;; Auto vars:     Size  Location     Type
  6159 ;;		None
  6160 ;; Return value:  Size  Location     Type
  6161 ;;                  1    wreg      void 
  6162 ;; Registers used:
  6163 ;;		None
  6164 ;; Tracked objects:
  6165 ;;		On entry : 0/0
  6166 ;;		On exit  : 0/0
  6167 ;;		Unchanged: 0/0
  6168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6173 ;;Total ram usage:        0 bytes
  6174 ;; Hardware stack levels used:    1
  6175 ;; Hardware stack levels required when called:    3
  6176 ;; This function calls:
  6177 ;;		Nothing
  6178 ;; This function is called by:
  6179 ;;		_CAN_Setup
  6180 ;; This function uses a non-reentrant model
  6181 ;;
  6182                           
  6183                           	psect	text50
  6184  001410                     __ptext50:
  6185                           	opt callstack 0
  6186  001410                     _CAN_SetupClock:
  6187                           	opt callstack 25
  6188                           
  6189                           ;CAN.c: 160:     BRGCON1bits.BRP0 = (((32000000/4)/(2*20*50000))-1) & 0b000001;
  6190                           
  6191                           ; BSR set to: 13
  6192                           ;incstack = 0
  6193  001410  8070               	bsf	3952,0,c	;volatile
  6194                           
  6195                           ;CAN.c: 161:     BRGCON1bits.BRP1 = ((((32000000/4)/(2*20*50000))-1) >> 1) & 0b000001;
  6196  001412  8270               	bsf	3952,1,c	;volatile
  6197                           
  6198                           ;CAN.c: 162:     BRGCON1bits.BRP2 = ((((32000000/4)/(2*20*50000))-1) >> 2) & 0b000001;
  6199  001414  9470               	bcf	3952,2,c	;volatile
  6200                           
  6201                           ;CAN.c: 163:     BRGCON1bits.BRP3 = ((((32000000/4)/(2*20*50000))-1) >> 3) & 0b000001;
  6202  001416  9670               	bcf	3952,3,c	;volatile
  6203                           
  6204                           ;CAN.c: 164:     BRGCON1bits.BRP4 = ((((32000000/4)/(2*20*50000))-1) >> 4) & 0b000001;
  6205  001418  9870               	bcf	3952,4,c	;volatile
  6206                           
  6207                           ;CAN.c: 165:     BRGCON1bits.BRP5 = ((((32000000/4)/(2*20*50000))-1) >> 5) & 0b000001;
  6208  00141A  9A70               	bcf	3952,5,c	;volatile
  6209                           
  6210                           ;CAN.c: 167:     BRGCON1bits.SJW0 = 1;
  6211  00141C  8C70               	bsf	3952,6,c	;volatile
  6212                           
  6213                           ;CAN.c: 168:     BRGCON1bits.SJW1 = 1;
  6214  00141E  8E70               	bsf	3952,7,c	;volatile
  6215                           
  6216                           ;CAN.c: 170:     BRGCON2bits.SEG1PH0 = 1;
  6217  001420  8671               	bsf	3953,3,c	;volatile
  6218                           
  6219                           ;CAN.c: 171:     BRGCON2bits.SEG1PH1 = 1;
  6220  001422  8871               	bsf	3953,4,c	;volatile
  6221                           
  6222                           ;CAN.c: 172:     BRGCON2bits.SEG1PH2 = 1;
  6223  001424  8A71               	bsf	3953,5,c	;volatile
  6224                           
  6225                           ;CAN.c: 174:     BRGCON2bits.PRSEG2 = 1;
  6226  001426  8471               	bsf	3953,2,c	;volatile
  6227                           
  6228                           ;CAN.c: 175:     BRGCON2bits.PRSEG1 = 0;
  6229  001428  9271               	bcf	3953,1,c	;volatile
  6230                           
  6231                           ;CAN.c: 176:     BRGCON2bits.PRSEG0 = 0;
  6232  00142A  9071               	bcf	3953,0,c	;volatile
  6233                           
  6234                           ;CAN.c: 178:     BRGCON3bits.SEG2PH0 = 1;
  6235  00142C  8072               	bsf	3954,0,c	;volatile
  6236                           
  6237                           ;CAN.c: 179:     BRGCON3bits.SEG2PH1 = 0;
  6238  00142E  9272               	bcf	3954,1,c	;volatile
  6239                           
  6240                           ;CAN.c: 180:     BRGCON3bits.SEG2PH2 = 1;
  6241  001430  8472               	bsf	3954,2,c	;volatile
  6242                           
  6243                           ;CAN.c: 182:     BRGCON2bits.SAM = 1;
  6244  001432  8C71               	bsf	3953,6,c	;volatile
  6245                           
  6246                           ;CAN.c: 183:     BRGCON2bits.SEG2PHTS = 1;
  6247  001434  8E71               	bsf	3953,7,c	;volatile
  6248  001436  0012               	return		;funcret
  6249  001438                     __end_of_CAN_SetupClock:
  6250                           	opt callstack 0
  6251                           
  6252 ;; *************** function _ISR_low *****************
  6253 ;; Defined at:
  6254 ;;		line 16 in file "ISR.c"
  6255 ;; Parameters:    Size  Location     Type
  6256 ;;		None
  6257 ;; Auto vars:     Size  Location     Type
  6258 ;;		None
  6259 ;; Return value:  Size  Location     Type
  6260 ;;                  1    wreg      void 
  6261 ;; Registers used:
  6262 ;;		wreg, status,2, status,0, cstack
  6263 ;; Tracked objects:
  6264 ;;		On entry : 0/0
  6265 ;;		On exit  : 0/0
  6266 ;;		Unchanged: 0/0
  6267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6270 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6271 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6272 ;;Total ram usage:        3 bytes
  6273 ;; Hardware stack levels used:    1
  6274 ;; Hardware stack levels required when called:    2
  6275 ;; This function calls:
  6276 ;;		_TMR1_Timer_reset
  6277 ;;		i1_TMR1_Update_flag_Set
  6278 ;; This function is called by:
  6279 ;;		Interrupt level 1
  6280 ;; This function uses a non-reentrant model
  6281 ;;
  6282                           
  6283                           	psect	intcodelo
  6284  000018                     __pintcodelo:
  6285                           	opt callstack 0
  6286  000018                     _ISR_low:
  6287                           	opt callstack 23
  6288                           
  6289                           ;incstack = 0
  6290  000018  8056               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  6291  00001A  CFD8 F003          	movff	status,??_ISR_low
  6292  00001E  CFE8 F004          	movff	wreg,??_ISR_low+1
  6293  000022  CFE0 F005          	movff	bsr,??_ISR_low+2
  6294                           
  6295                           ;ISR.c: 21:     if(TMR1IF==1)
  6296  000026  A09E               	btfss	3998,0,c	;volatile
  6297  000028  D011               	goto	i1l628
  6298                           
  6299                           ;ISR.c: 22:         {;ISR.c: 23:             TMR1_Timer_reset();
  6300  00002A  EC2F  F00A         	call	_TMR1_Timer_reset	;wreg free
  6301                           
  6302                           ;ISR.c: 26:             static BYTE ramkaStanuU8=0;;ISR.c: 29:             TMR1_Update_f
      +                          lag_Set(1);
  6303  00002E  0E00               	movlw	0
  6304  000030  6E02               	movwf	i1TMR1_Update_flag_Set@a+1,c
  6305  000032  0E01               	movlw	1
  6306  000034  6E01               	movwf	i1TMR1_Update_flag_Set@a,c
  6307  000036  ECBD  F00A         	call	i1_TMR1_Update_flag_Set	;wreg free
  6308                           
  6309                           ;ISR.c: 31:             DetectorLedRadar.Flags.obsluzWeWy = 1;
  6310  00003A  8041               	bsf	_DetectorLedRadar,0,c
  6311                           
  6312                           ;ISR.c: 33:             if(++ramkaStanuU8 > (2*10))
  6313  00003C  2A4A               	incf	ISR_low@ramkaStanuU8,f,c
  6314  00003E  0E14               	movlw	20
  6315  000040  644A               	cpfsgt	ISR_low@ramkaStanuU8,c
  6316  000042  D003               	goto	i1l3182
  6317                           
  6318                           ;ISR.c: 34:                 {;ISR.c: 35:                     ramkaStanuU8 = 0;
  6319  000044  0E00               	movlw	0
  6320  000046  6E4A               	movwf	ISR_low@ramkaStanuU8,c
  6321                           
  6322                           ;ISR.c: 36:                     DaneCan.Flags.wyslijRamkeStanu = 1;
  6323  000048  803D               	bsf	_DaneCan,0,c
  6324  00004A                     i1l3182:
  6325                           
  6326                           ;ISR.c: 41:             TMR1IF=0;
  6327  00004A  909E               	bcf	3998,0,c	;volatile
  6328  00004C                     i1l628:
  6329  00004C  C005  FFE0         	movff	??_ISR_low+2,bsr
  6330  000050  C004  FFE8         	movff	??_ISR_low+1,wreg
  6331  000054  C003  FFD8         	movff	??_ISR_low,status
  6332  000058  9056               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  6333  00005A  0010               	retfie	
  6334  00005C                     __end_of_ISR_low:
  6335                           	opt callstack 0
  6336                           
  6337 ;; *************** function i1_TMR1_Update_flag_Set *****************
  6338 ;; Defined at:
  6339 ;;		line 32 in file "TMR1.c"
  6340 ;; Parameters:    Size  Location     Type
  6341 ;;  a               2    0[COMRAM] unsigned int 
  6342 ;; Auto vars:     Size  Location     Type
  6343 ;;		None
  6344 ;; Return value:  Size  Location     Type
  6345 ;;                  1    wreg      void 
  6346 ;; Registers used:
  6347 ;;		None
  6348 ;; Tracked objects:
  6349 ;;		On entry : 0/0
  6350 ;;		On exit  : 0/0
  6351 ;;		Unchanged: 0/0
  6352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6353 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6356 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6357 ;;Total ram usage:        2 bytes
  6358 ;; Hardware stack levels used:    1
  6359 ;; Hardware stack levels required when called:    1
  6360 ;; This function calls:
  6361 ;;		Nothing
  6362 ;; This function is called by:
  6363 ;;		_ISR_low
  6364 ;; This function uses a non-reentrant model
  6365 ;;
  6366                           
  6367                           	psect	text52
  6368  00157A                     __ptext52:
  6369                           	opt callstack 0
  6370  00157A                     i1_TMR1_Update_flag_Set:
  6371                           	opt callstack 23
  6372                           
  6373                           ;TMR1.c: 32: void TMR1_Update_flag_Set(UINT a);TMR1.c: 33: {;TMR1.c: 34:     TMR1_Update
      +                          _flag = a;
  6374                           
  6375                           ;incstack = 0
  6376  00157A  C001  F044         	movff	i1TMR1_Update_flag_Set@a,_TMR1_Update_flag
  6377  00157E  C002  F045         	movff	i1TMR1_Update_flag_Set@a+1,_TMR1_Update_flag+1
  6378  001582  0012               	return		;funcret
  6379  001584                     __end_ofi1_TMR1_Update_flag_Set:
  6380                           	opt callstack 0
  6381                           
  6382 ;; *************** function _TMR1_Timer_reset *****************
  6383 ;; Defined at:
  6384 ;;		line 63 in file "TMR1.c"
  6385 ;; Parameters:    Size  Location     Type
  6386 ;;		None
  6387 ;; Auto vars:     Size  Location     Type
  6388 ;;  t1H             1    1[COMRAM] volatile unsigned char 
  6389 ;;  t1L             1    0[COMRAM] volatile unsigned char 
  6390 ;; Return value:  Size  Location     Type
  6391 ;;                  1    wreg      unsigned char 
  6392 ;; Registers used:
  6393 ;;		wreg, status,2, status,0
  6394 ;; Tracked objects:
  6395 ;;		On entry : 0/0
  6396 ;;		On exit  : 0/0
  6397 ;;		Unchanged: 0/0
  6398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6400 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6402 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6403 ;;Total ram usage:        2 bytes
  6404 ;; Hardware stack levels used:    1
  6405 ;; Hardware stack levels required when called:    1
  6406 ;; This function calls:
  6407 ;;		Nothing
  6408 ;; This function is called by:
  6409 ;;		_ISR_low
  6410 ;; This function uses a non-reentrant model
  6411 ;;
  6412                           
  6413                           	psect	text53
  6414  00145E                     __ptext53:
  6415                           	opt callstack 0
  6416  00145E                     _TMR1_Timer_reset:
  6417                           	opt callstack 23
  6418                           
  6419                           ;TMR1.c: 69:     volatile BYTE t1L = 0, t1H = 0;
  6420                           
  6421                           ;incstack = 0
  6422  00145E  0E00               	movlw	0
  6423  001460  6E01               	movwf	TMR1_Timer_reset@t1L,c	;volatile
  6424  001462  0E00               	movlw	0
  6425  001464  6E02               	movwf	TMR1_Timer_reset@t1H,c	;volatile
  6426                           
  6427                           ;TMR1.c: 70:     t1L = TMR1L;
  6428  001466  CFCE F001          	movff	4046,TMR1_Timer_reset@t1L	;volatile
  6429                           
  6430                           ;TMR1.c: 71:     t1H = TMR1H;
  6431  00146A  CFCF F002          	movff	4047,TMR1_Timer_reset@t1H	;volatile
  6432                           
  6433                           ;TMR1.c: 72:     __nop();
  6434  00146E  F000               	nop	
  6435                           
  6436                           ;TMR1.c: 73:     t1H += (UINT8)((0xFFFF - (((8000000/8)/4)/10)) >> 8);
  6437  001470  0E9E               	movlw	158
  6438  001472  2602               	addwf	TMR1_Timer_reset@t1H,f,c	;volatile
  6439                           
  6440                           ;TMR1.c: 74:     t1L += (UINT8)((0xFFFF - (((8000000/8)/4)/10)) & 0xFF);
  6441  001474  0E57               	movlw	87
  6442  001476  2601               	addwf	TMR1_Timer_reset@t1L,f,c	;volatile
  6443                           
  6444                           ;TMR1.c: 75:     TMR1H = t1H;
  6445  001478  C002  FFCF         	movff	TMR1_Timer_reset@t1H,4047	;volatile
  6446                           
  6447                           ;TMR1.c: 76:     TMR1L = 0x5B;
  6448  00147C  0E5B               	movlw	91
  6449  00147E  6ECE               	movwf	4046,c	;volatile
  6450  001480  0012               	return		;funcret
  6451  001482                     __end_of_TMR1_Timer_reset:
  6452                           	opt callstack 0
  6453                           
  6454 ;; *************** function _ISR_high *****************
  6455 ;; Defined at:
  6456 ;;		line 53 in file "ISR.c"
  6457 ;; Parameters:    Size  Location     Type
  6458 ;;		None
  6459 ;; Auto vars:     Size  Location     Type
  6460 ;;		None
  6461 ;; Return value:  Size  Location     Type
  6462 ;;                  1    wreg      void 
  6463 ;; Registers used:
  6464 ;;		None
  6465 ;; Tracked objects:
  6466 ;;		On entry : 0/0
  6467 ;;		On exit  : 0/0
  6468 ;;		Unchanged: 0/0
  6469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6474 ;;Total ram usage:        0 bytes
  6475 ;; Hardware stack levels used:    1
  6476 ;; This function calls:
  6477 ;;		Nothing
  6478 ;; This function is called by:
  6479 ;;		Interrupt level 2
  6480 ;; This function uses a non-reentrant model
  6481 ;;
  6482                           
  6483                           	psect	intcode
  6484  000008                     __pintcode:
  6485                           	opt callstack 0
  6486  000008                     _ISR_high:
  6487                           	opt callstack 23
  6488                           
  6489                           ;incstack = 0
  6490  000008  8256               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6491  00000A  EDCF  F00A         	call	int_func,f	;refresh shadow registers
  6492                           
  6493                           	psect	intcode_body
  6494  00159E                     __pintcode_body:
  6495                           	opt callstack 23
  6496  00159E                     int_func:
  6497                           	opt callstack 23
  6498  00159E  0006               	pop		; remove dummy address from shadow register refresh
  6499  0015A0  9256               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  6500  0015A2  0011               	retfie		f
  6501  0015A4                     __end_of_ISR_high:
  6502                           	opt callstack 0
  6503  0000                     
  6504                           	psect	rparam
  6505  0000                     
  6506                           	psect	temp
  6507  000056                     btemp:
  6508                           	opt callstack 0
  6509  000056                     	ds	1
  6510  0000                     int$flags	set	btemp
  6511  0000                     wtemp8	set	btemp+1
  6512  0000                     ttemp5	set	btemp+1
  6513  0000                     ttemp6	set	btemp+4
  6514  0000                     ttemp7	set	btemp+8
  6515                           tosu	equ	0xFFF
  6516                           tosh	equ	0xFFE
  6517                           tosl	equ	0xFFD
  6518                           stkptr	equ	0xFFC
  6519                           pclatu	equ	0xFFB
  6520                           pclath	equ	0xFFA
  6521                           pcl	equ	0xFF9
  6522                           tblptru	equ	0xFF8
  6523                           tblptrh	equ	0xFF7
  6524                           tblptrl	equ	0xFF6
  6525                           tablat	equ	0xFF5
  6526                           prodh	equ	0xFF4
  6527                           prodl	equ	0xFF3
  6528                           indf0	equ	0xFEF
  6529                           postinc0	equ	0xFEE
  6530                           postdec0	equ	0xFED
  6531                           preinc0	equ	0xFEC
  6532                           plusw0	equ	0xFEB
  6533                           fsr0h	equ	0xFEA
  6534                           fsr0l	equ	0xFE9
  6535                           wreg	equ	0xFE8
  6536                           indf1	equ	0xFE7
  6537                           postinc1	equ	0xFE6
  6538                           postdec1	equ	0xFE5
  6539                           preinc1	equ	0xFE4
  6540                           plusw1	equ	0xFE3
  6541                           fsr1h	equ	0xFE2
  6542                           fsr1l	equ	0xFE1
  6543                           bsr	equ	0xFE0
  6544                           indf2	equ	0xFDF
  6545                           postinc2	equ	0xFDE
  6546                           postdec2	equ	0xFDD
  6547                           preinc2	equ	0xFDC
  6548                           plusw2	equ	0xFDB
  6549                           fsr2h	equ	0xFDA
  6550                           fsr2l	equ	0xFD9
  6551                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        9
    BSS         667
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     55      85
    BANK0           160      0     102
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    FRAME_AnalogValue@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_MapPosition@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_HandleCanFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_AdressOfNeighbors@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_PrzypisanieDokarty@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_SoftwareVersion@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_Plot@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_DeviceReset@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_AxisStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_AveragingTimes@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_ExcitationMultiplier@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_ExcitationValue@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_AccelerometerStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    S52$pointerNaSasiada	PTR struct . size(2) Largest target is 544
		 -> wartosciSasiada(BIGRAM[544]), 

    Dane.sasiedzi.pointerNaSasiada	PTR struct . size(2) Largest target is 544
		 -> wartosciSasiada(BIGRAM[544]), 

    Dane	PTR struct DaneStruct size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    FRAME_SensorExcitationStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_GenID@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_TakeFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_SendFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_MoveBuffIntoFrame@Buf	PTR unsigned char  size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), RXB0D0(SFR_3[1]), 

    CAN_MoveBuffIntoFrame@Ram	PTR unsigned char  size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), RXB0D0(SFR_3[1]), 


Critical Paths under _main in COMRAM

    _main->_TRM_DataTransmition
    _TRM_DataTransmition->_FRAME_HandleCanFrame
    _FRAME_HandleCanFrame->_FRAME_AdressOfNeighbors
    _LED_Error->_LED_Control
    _FRAME_SensorExcitationStatus->_IsInNeighbors
    _FRAME_Plot->___lwdiv
    _FRAME_AdressOfNeighbors->___wmul
    _LED_Clear->_LED_Control
    _FRAME_AccelerometerStatus->_MOCK_Klikniecie_Spadek
    _FRAME_AccelerometerStatus->_MOCK_PrzyspieszenieX
    _FRAME_AccelerometerStatus->_MOCK_PrzyspieszenieY
    _FRAME_AccelerometerStatus->_MOCK_PrzyspieszenieZ
    _CAN_SendFrame->_CAN_MoveBuffIntoFrame
    _CAN_TakeFrame->___awdiv
    _LED_Update->_LED_Light_Pos
    _LED_Light_Pos->___lwdiv
    _INI_LED_Start->_LED_Control

Critical Paths under _ISR_low in COMRAM

    _ISR_low->_TMR1_Timer_reset
    _ISR_low->i1_TMR1_Update_flag_Set

Critical Paths under _ISR_high in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR_low in BANK0

    None.

Critical Paths under _ISR_high in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_low in BANK1

    None.

Critical Paths under _ISR_high in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_low in BANK2

    None.

Critical Paths under _ISR_high in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_low in BANK3

    None.

Critical Paths under _ISR_high in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_low in BANK4

    None.

Critical Paths under _ISR_high in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_low in BANK5

    None.

Critical Paths under _ISR_high in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_low in BANK6

    None.

Critical Paths under _ISR_high in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_low in BANK7

    None.

Critical Paths under _ISR_high in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_low in BANK8

    None.

Critical Paths under _ISR_high in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_low in BANK9

    None.

Critical Paths under _ISR_high in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_low in BANK10

    None.

Critical Paths under _ISR_high in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_low in BANK11

    None.

Critical Paths under _ISR_high in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_low in BANK12

    None.

Critical Paths under _ISR_high in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   21960
                            _INI_All
                         _LED_Update
               _TMR1_Update_flag_Get
               _TMR1_Update_flag_Set
                _TRM_DataTransmition
 ---------------------------------------------------------------------------------
 (1) _TRM_DataTransmition                                 18    18      0   14735
                                             38 COMRAM    17    17      0
                      _CAN_TakeFrame
               _FRAME_HandleCanFrame
 ---------------------------------------------------------------------------------
 (2) _FRAME_HandleCanFrame                                 5     3      2   12730
                                             33 COMRAM     5     3      2
                          _CAN_GenID
                      _CAN_SendFrame
          _FRAME_AccelerometerStatus
            _FRAME_AdressOfNeighbors
                  _FRAME_AnalogValue
               _FRAME_AveragingTimes
                   _FRAME_AxisStatus
                  _FRAME_DeviceReset
         _FRAME_ExcitationMultiplier
              _FRAME_ExcitationValue
                  _FRAME_MapPosition
                         _FRAME_Plot
           _FRAME_PrzypisanieDokarty
       _FRAME_SensorExcitationStatus
              _FRAME_SoftwareVersion
                          _LED_Error
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) _LED_Error                                            0     0      0    1412
                        _LED_Control
 ---------------------------------------------------------------------------------
 (3) _FRAME_SoftwareVersion                                3     1      2     235
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_SensorExcitationStatus                         5     3      2     664
                                             13 COMRAM     5     3      2
                      _IsInNeighbors
                           _LOCK_Get
                           _LOCK_Set
           _MOC_Aktualna_Temperatura
                  _MOC_Frame_Counter
                        _MOC_NOTWORK
     _MOC_Wynikowa_wartosc_roznicowa
 ---------------------------------------------------------------------------------
 (4) _MOC_Wynikowa_wartosc_roznicowa                       2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_NOTWORK                                          2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_Frame_Counter                                    2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_Aktualna_Temperatura                             2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _LOCK_Set                                             1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _LOCK_Get                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _IsInNeighbors                                        8     6      2     193
                                              5 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_PrzypisanieDokarty                             3     1      2     169
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_Plot                                           3     1      2     743
                                             12 COMRAM     3     1      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) _FRAME_MapPosition                                    2     0      2     103
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_ExcitationValue                                3     1      2     169
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_ExcitationMultiplier                           5     3      2     215
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_DeviceReset                                    3     1      2     367
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AxisStatus                                     5     3      2     169
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AveragingTimes                                 3     1      2     169
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AnalogValue                                    6     2      4     206
                                              5 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _FRAME_AdressOfNeighbors                             22    18      4    5041
                                             11 COMRAM    22    18      4
                          _LED_Clear
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    2595
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _LED_Clear                                            0     0      0    1412
                        _LED_Control
 ---------------------------------------------------------------------------------
 (3) _FRAME_AccelerometerStatus                            3     1      2     235
                                              7 COMRAM     3     1      2
             _MOCK_Klikniecie_Spadek
               _MOCK_PrzyspieszenieX
               _MOCK_PrzyspieszenieY
               _MOCK_PrzyspieszenieZ
 ---------------------------------------------------------------------------------
 (4) _MOCK_PrzyspieszenieZ                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOCK_PrzyspieszenieY                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOCK_PrzyspieszenieX                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOCK_Klikniecie_Spadek                               2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _CAN_SendFrame                                        5     3      2     891
                                             10 COMRAM     5     3      2
              _CAN_MoveBuffIntoFrame
 ---------------------------------------------------------------------------------
 (3) _CAN_GenID                                            7     4      3     382
                                              5 COMRAM     7     4      3
 ---------------------------------------------------------------------------------
 (2) _CAN_TakeFrame                                        8     6      2    1645
                                             13 COMRAM     8     6      2
              _CAN_MoveBuffIntoFrame
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     612
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _CAN_MoveBuffIntoFrame                                5     1      4     546
                                              5 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) _TMR1_Update_flag_Set                                 2     0      2     202
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR1_Update_flag_Get                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _LED_Update                                           0     0      0    5611
                        _LED_Control
                           _LED_Left
                      _LED_Light_Pos
                          _LED_Right
 ---------------------------------------------------------------------------------
 (2) _LED_Light_Pos                                       11     7      4    3471
                                             12 COMRAM    11     7      4
                        _LED_Control
                           _LED_Left
                          _LED_Right
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     574
                                              5 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _LED_Right                                            6     4      2     364
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _LED_Left                                             4     2      2     364
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _INI_All                                              0     0      0    1412
                          _CAN_Setup
                _INI_GlobalInterrupt
                      _INI_LED_Start
                         _INI_OUTPUT
                          _INI_Timer
 ---------------------------------------------------------------------------------
 (2) _INI_Timer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INI_OUTPUT                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INI_LED_Start                                        0     0      0    1412
                        _LED_Control
 ---------------------------------------------------------------------------------
 (4) _LED_Control                                          5     3      2    1412
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _INI_GlobalInterrupt                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CAN_Setup                                            1     1      0       0
                                              5 COMRAM     1     1      0
                     _CAN_SetupClock
                      _CAN_SetupMask
 ---------------------------------------------------------------------------------
 (3) _CAN_SetupMask                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CAN_SetupClock                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR_low                                              3     3      0      76
                                              2 COMRAM     3     3      0
                   _TMR1_Timer_reset
             i1_TMR1_Update_flag_Set
 ---------------------------------------------------------------------------------
 (7) i1_TMR1_Update_flag_Set                               2     0      2      48
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (7) _TMR1_Timer_reset                                     2     2      0      28
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _ISR_high                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _INI_All
     _CAN_Setup
       _CAN_SetupClock
       _CAN_SetupMask
     _INI_GlobalInterrupt
     _INI_LED_Start
       _LED_Control
     _INI_OUTPUT
     _INI_Timer
   _LED_Update
     _LED_Control
     _LED_Left
     _LED_Light_Pos
       _LED_Control
       _LED_Left
       _LED_Right
       ___lwdiv
     _LED_Right
   _TMR1_Update_flag_Get
   _TMR1_Update_flag_Set
   _TRM_DataTransmition
     _CAN_TakeFrame
       _CAN_MoveBuffIntoFrame
       ___awdiv
     _FRAME_HandleCanFrame
       _CAN_GenID
       _CAN_SendFrame
         _CAN_MoveBuffIntoFrame
       _FRAME_AccelerometerStatus
         _MOCK_Klikniecie_Spadek
         _MOCK_PrzyspieszenieX
         _MOCK_PrzyspieszenieY
         _MOCK_PrzyspieszenieZ
       _FRAME_AdressOfNeighbors
         _LED_Clear
           _LED_Control
         ___wmul
       _FRAME_AnalogValue
       _FRAME_AveragingTimes
       _FRAME_AxisStatus
       _FRAME_DeviceReset
       _FRAME_ExcitationMultiplier
       _FRAME_ExcitationValue
       _FRAME_MapPosition
       _FRAME_Plot
         ___lwdiv
       _FRAME_PrzypisanieDokarty
       _FRAME_SensorExcitationStatus
         _IsInNeighbors
         _LOCK_Get
         _LOCK_Set
         _MOC_Aktualna_Temperatura
         _MOC_Frame_Counter
         _MOC_NOTWORK
         _MOC_Wynikowa_wartosc_roznicowa
       _FRAME_SoftwareVersion
       _LED_Error
         _LED_Control
       ___awdiv

 _ISR_low (ROOT)
   _TMR1_Timer_reset
   i1_TMR1_Update_flag_Set

 _ISR_high (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0     220      31       16.4%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      66       5       63.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     37      55       1       90.4%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      BB      20        0.0%
DATA                 0      0     2DB       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Jul 22 09:37:27 2019

              __end_of_FRAME_DeviceReset 0B2E                    ?_FRAME_AveragingTimes 0006  
                           ___awdiv@sign 000B                                       bsr 000FE0  
                    ___wmul@multiplicand 0008                              __CFG_BORV$3 000000  
                      ?_FRAME_AxisStatus 0006                        _FRAME_MapPosition 15A8  
                           __CFG_CP0$OFF 000000                             __CFG_CP1$OFF 000000  
                           __CFG_CP2$OFF 000000                             __CFG_CP3$OFF 000000  
                     __size_of_CAN_GenID 00A4                                      l220 033E  
                                    l221 0344                                      l222 034A  
                                    l311 0ED2                                      l223 0350  
                                    l207 07A8                                      l224 0356  
                                    l216 032C                                      l208 07A6  
                                    l217 039C                                      l218 0332  
                                    l219 0338                                      l339 09A2  
                            ?_LED_Update 0001                                      l561 0786  
                                    l562 077E                             __CFG_CPB$OFF 000000  
                     ??_FRAME_AxisStatus 0008                             __CFG_CPD$OFF 000000  
                     ?_FRAME_MapPosition 0006                       __size_of_CAN_Setup 005C  
                           ?_LED_Control 0006                                      wreg 000FE8  
                  __end_of_CAN_TakeFrame 05A2                              ?_INI_OUTPUT 0001  
                 __size_of_INI_LED_Start 0034                 ??_MOCK_Klikniecie_Spadek 0008  
                  __end_of_CAN_SendFrame 08FA                             __CFG_LVP$OFF 000000  
              TRM_DataTransmition@weWyU8 0049             __size_of_INI_GlobalInterrupt 000E  
                    ??_FRAME_MapPosition 0008                             __CFG_WDT$OFF 000000  
                                   l3010 0C40                                     l2400 099C  
                                   l1192 112E                                     l3016 0C6C  
                                   l3024 0CA2                                     l3040 05CA  
                                   l3018 0C76                                     l3050 0610  
                                   l3042 05D8                                     l2412 09C2  
                                   l3108 0EAE                                     l3060 0656  
                                   l3052 061E                                     l3044 05E6  
                                   l3124 124A                                     l2430 09F2  
                                   l2406 09B2                                     l3062 0670  
                                   l3054 062C                                     l3046 05F4  
                                   l2424 09E2                                     l2352 091C  
                                   l3064 067E                                     l3056 063A  
                                   l3048 0602                                     l3072 0698  
                                   l2442 0A12                                     l2418 09D2  
                                   l2370 094C                                     l2346 090C  
                                   l2514 1172                                     l3058 0648  
                                   l3074 0704                          __end_of_INI_All 14F6  
                                   l2460 0A44                                     l2436 0A02  
                                   l2364 093C                                     l2508 1140  
                                   l3156 13BE                                     l2454 0A32  
                                   l2382 096C                                     l2358 092C  
                                   l2710 1298                                     l2550 10FC  
                                   l2470 13EA                                     l3166 13DE  
                                   l2448 0A22                                     l2376 095C  
                                   l2552 1104                                     l2394 098C  
                                   l2562 1124                                     l2388 097C  
                                   l2812 008C                                     l2732 0BD0  
                                   l2670 0840                                     l2912 035C  
                                   l2824 017A                                     l2906 1026  
                                   l2930 0476                                     l2674 08F4  
                                   l2818 0172                                     l2860 0E22  
                                   l2940 049A                                     l2932 047C  
                                   l2836 02F6                                     l2764 11B2  
                                   l2694 1208                                     l2854 0E12  
                                   l2942 04A2                                     l2934 0482  
                                   l2950 04F2                                     l2960 0528  
                                   l2944 04AA                                     l2936 048A  
                                   l2792 10C8                                     l2866 0E38  
                                   l2882 0E6A                                     l2970 054E  
                                   l2962 052E                                     l2938 0492  
                                   l2954 04F6                                     l2786 0B0C  
                                   l2892 0FDC                                     l2868 0E40  
                                   l2972 0556                                     l2964 0536  
                                   l2948 04B2                                     l2956 0510  
                                   l2886 0E78                                     l2878 0E60  
                                   l2966 053E                                     l2958 0522  
                                   l2968 0546                                     l2976 055E  
                                   l2978 059E                                     _BIE0 000DFA  
                      _MOC_Frame_Counter 150E                                     u1050 1182  
                                   u1220 11C2                                     u1070 1108  
                                   u1135 0816                                     u1320 0170  
                                   u1500 0CAA                                     u1340 030A  
                                   u1260 0A9A                                     _LATA 000F89  
                                   u1350 031C                                     u1270 0AB2  
                                   _LATB 000F8A                                     _LATC 000F8B  
                                   _LATD 000F8C                                     _LATE 000F8D  
                                   u1266 0A9C                                     u1276 0AB4  
                                   u1390 0E44                                     u1455 040E  
                                   _IPR3 000FA5                                     _IPEN 007E87  
                                   _PIE3 000FA3                                     _PEIE 007F96  
                                   _LOCK 004C                                     _PIR3 000FA4  
                                   _RCON 000FD0              ??_FRAME_AccelerometerStatus 000A  
                                   _Dane 0046                          __end_of_ISR_low 005C  
                       LED_Control@diode 0006                     FRAME_AnalogValue@set 0008  
                     ?_MOC_Frame_Counter 0006                                     _main 13B8  
                       LED_Control@color 000A                                     fsr1h 000FE2  
                                   fsr2h 000FDA                                     indf1 000FE7  
                                   indf2 000FDF                                     fsr1l 000FE1  
                                   fsr2l 000FD9                                     btemp 0056  
                         _CAN_SetupClock 1410                       __size_of_LED_Clear 001E  
                                   prodh 000FF4                                     prodl 000FF3  
                  __end_of_CAN_SetupMask 0DFE            __size_of_TMR1_Update_flag_Get 000A  
                                   start 005C            __size_of_TMR1_Update_flag_Set 000A  
                     __size_of_LED_Error 001E                            __CFG_IESO$OFF 000000  
                     __size_of_LED_Right 004C            __size_of_FRAME_HandleCanFrame 01EA  
                          _LED_Light_Pos 0C0A                            __CFG_MCLRE$ON 000000  
                           ___param_bank 000000                      ??_MOC_Frame_Counter 0008  
                         IsInNeighbors@i 000C               ??_MOC_Aktualna_Temperatura 0008  
      FRAME_HandleCanFrame@identyfikator 0026                       __size_of_INI_Timer 0018  
              __end_of_FRAME_MapPosition 15AA                         __end_of_LED_Left 12AC  
          __size_of_MOCK_PrzyspieszenieX 000A            __size_of_MOCK_PrzyspieszenieY 000A  
          __size_of_MOCK_PrzyspieszenieZ 000A                                    _B0CON 000E20  
                                  _B1CON 000E30                                    _B2CON 000E40  
                                  _B3CON 000E50                                    _B4CON 000E60  
                                  _B5CON 000E70                         __end_of_LOCK_Get 15A8  
                                  ?_main 0001                         __end_of_LOCK_Set 159E  
                        __end_of___awdiv 0E82                                    _BSEL0 000DF8  
                        ___awdiv@divisor 0008                                    _T1CON 000FCD  
                                  _IRCF0 007E9C                                    _IRCF1 007E9D  
      FRAME_ExcitationMultiplier@message 0006                                    _IRCF2 007E9E  
                        __end_of___lwdiv 1138                                    i1l628 004C  
                    __size_of_FRAME_Plot 0058                          ___awdiv@counter 000A  
                                  _MSEL0 000DF0                                    _MSEL1 000DF1  
                                  _MSEL2 000DF2                                    _MSEL3 000DF3  
                                  _TMR1H 000FCF                                    _TMR1L 000FCE  
                                  _TRISA 000F92                                    _TRISB 000F93  
                                  _TRISC 000F94                                    _TRISD 000F95  
                                  _TRISE 000F96                            __CFG_PWRT$OFF 000000  
                                  _Flagi 0038                   ?_CAN_MoveBuffIntoFrame 0006  
                          __CFG_WRT0$OFF 000000               __size_of_FRAME_AnalogValue 0002  
                          __CFG_WRT1$OFF 000000                            __CFG_WRT2$OFF 000000  
                          __CFG_WRT3$OFF 000000                           __CFG_EBTR0$OFF 000000  
                         __CFG_FCMEN$OFF 000000                           __CFG_EBTR1$OFF 000000  
                         __CFG_EBTR2$OFF 000000                           __CFG_EBTR3$OFF 000000  
                       __end_of_ISR_high 15A4                            __CFG_WRTB$OFF 000000  
                          __CFG_WRTC$OFF 000000                            __CFG_WRTD$OFF 000000  
              __end_of_MOC_Frame_Counter 151C                           __CFG_EBTRB$OFF 000000  
                i1TMR1_Update_flag_Set@a 0001                             ?_MOC_NOTWORK 0006  
                                  tablat 000FF5                   __end_of_CAN_SetupClock 1438  
                                  plusw2 000FDB                                    ttemp5 0057  
                                  ttemp6 005A                                    ttemp7 005E  
                                  status 000FD8                                    wtemp8 0057  
                      __end_of_CAN_GenID 0D5E                           __CFG_PBADEN$ON 000000  
                    __size_of_LED_Update 007A                           ?_LED_Light_Pos 000D  
                       _TMR1_Timer_reset 145E                        __end_of_CAN_Setup 1034  
                          _INI_LED_Start 1384                    _FRAME_ExcitationValue 12E2  
       FRAME_AccelerometerStatus@message 0008                          __initialization 1034  
                    __size_of_INI_OUTPUT 001E                         CAN_GenID@frameID 0008  
                           __end_of_main 13E6                   ??_FRAME_AveragingTimes 0008  
             __size_of_FRAME_DeviceReset 00E2                 ?_FRAME_AdressOfNeighbors 000C  
                       CAN_GenID@message 0006                _FRAME_AccelerometerStatus 0EFC  
                                 ??_main 0038                   CAN_MoveBuffIntoFrame@i 000A  
                          __activetblptr 000002                         _TMR1_Update_flag 0044  
                      __end_of_LED_Clear 14BE                    __end_of_IsInNeighbors 1186  
                        _wartosciSasiada 00C6                                ??_INI_All 000B  
                      __end_of_LED_Error 14A0                        __end_of_LED_Right 1220  
        __size_of_MOCK_Klikniecie_Spadek 000A                                ??_ISR_low 0003  
                                 _CANCON 000F6F                         ___awdiv@dividend 0006  
            FRAME_ExcitationMultiplier@i 0009                                   _CIOCON 000F73  
                        __CFG_BBSIZ$1024 000000                        __end_of_INI_Timer 150E  
                                 i1l3182 004A                          ?_CAN_SetupClock 0001  
                                 _RXB0D0 000F66                                   _TMR1IE 007CE8  
                                 _TMR1IF 007CF0                                   _TMR1IP 007CF8  
                                 _TMR1ON 007E68             ??_FRAME_ExcitationMultiplier 0008  
                         ?_INI_LED_Start 0001                           __CFG_XINST$OFF 000000  
                                 ___wmul 1438                                ??___awdiv 000A  
                         __CFG_STVREN$ON 000000                         LED_Light_Pos@pos 000D  
             __size_of_FRAME_MapPosition 0002                                ??___lwdiv 000A  
                                 clear_0 105C                                   clear_1 106E  
                                 clear_2 107A                         ___awdiv@quotient 000C  
             ??_FRAME_PrzypisanieDokarty 0008                 ??i1_TMR1_Update_flag_Set 0003  
                        __CFG_BOREN$BOHW 000000                             __pdataCOMRAM 004D  
                                 tblptrh 000FF7                                   tblptrl 000FF6  
                                 tblptru 000FF8      __size_of_FRAME_ExcitationMultiplier 004E  
             __size_of_MOC_Frame_Counter 000E                     __size_of_LED_Control 0152  
               FRAME_MapPosition@message 0006                    TMR1_Update_flag_Set@a 0006  
                             __accesstop 0060                  __end_of__initialization 1080  
                           ??_FRAME_Plot 000F                      ISR_low@ramkaStanuU8 004A  
                              ?_LED_Left 0006                          ??_LED_Light_Pos 0011  
                          ___rparam_used 000001                   ?_FRAME_ExcitationValue 0006  
                              ?_LOCK_Get 0001                                ?_LOCK_Set 0001  
        __end_of_FRAME_AdressOfNeighbors 031E                   _MOCK_Klikniecie_Spadek 155C  
                         __pcstackCOMRAM 0001                                LED_Left@a 0006  
                              LED_Left@b 0008                      _INI_GlobalInterrupt 151C  
                              ?_ISR_high 0001                             ??_LED_Update 0018  
            __end_of_TRM_DataTransmition 126A                    _FRAME_SoftwareVersion 0F72  
                     __end_of_FRAME_Plot 10E6                             ??_INI_OUTPUT 0006  
                              LOCK_Set@k 0006                  FRAME_AxisStatus@message 0006  
            IsInNeighbors@message_adress 0006                     ?_INI_GlobalInterrupt 0001  
              __size_of_FRAME_AxisStatus 0036                               __pbssBANK0 0060  
                   __size_of_MOC_NOTWORK 0008                          ??_INI_LED_Start 000B  
                             ??_LED_Left 0008                               ??_LOCK_Get 0006  
                             ??_LOCK_Set 0006                       __end_of_LED_Update 0EFC  
                     __end_of_INI_OUTPUT 14DC                                  ?___wmul 0006  
                             ??_ISR_high 0001                      TMR1_Timer_reset@t1H 0002  
                    TMR1_Timer_reset@t1L 0001                                  _ECANCON 000F77  
                                _CANSTAT 000F6E                  ??_CAN_MoveBuffIntoFrame 000A  
           __end_of_TMR1_Update_flag_Get 157A             __end_of_TMR1_Update_flag_Set 1570  
        __size_ofi1_TMR1_Update_flag_Set 000A             __end_of_FRAME_HandleCanFrame 078C  
                                _INI_All 14DC                 __end_of_TMR1_Timer_reset 1482  
                                _RXB0DLC 000F65                                  _RXB0CON 000F60  
                                _RXB1CON 000F50                    ??_INI_GlobalInterrupt 0006  
                                _TXB0CON 000F40                                  _ISR_low 0018  
                                _RXFCON0 000DD4                                  _DaneCan 003D  
           __end_of_MOCK_PrzyspieszenieX 155C             __end_of_MOCK_PrzyspieszenieY 1552  
           __end_of_MOCK_PrzyspieszenieZ 1548       __end_of_FRAME_ExcitationMultiplier 11D4  
             _FRAME_ExcitationMultiplier 1186              FRAME_HandleCanFrame@message 0022  
                                __Hparam 0000         ??_MOC_Wynikowa_wartosc_roznicowa 0008  
        ?_MOC_Wynikowa_wartosc_roznicowa 0006                                  __Lparam 0000  
                 __size_of_CAN_TakeFrame 0284                                _CAN_GenID 0CBA  
                                ___awdiv 0DFE                                _CAN_Setup 0FD8  
                        __size_of___wmul 0026                   __size_of_CAN_SendFrame 016E  
                                ___lwdiv 10E6                        LED_Light_Pos@pos2 0014  
                                __pcinit 1034                                  __ramtop 0D00  
                                __ptext0 13B8                                  __ptext1 1220  
                                __ptext2 05A2                                  __ptext3 1482  
                                __ptext4 0F72                                  __ptext5 0B2E  
                                __ptext6 152A                                  __ptext7 158E  
                                __ptext8 150E                                  __ptext9 1534  
                 ?_FRAME_SoftwareVersion 0006                   __size_of_CAN_SetupMask 00A0  
      __size_of_MOC_Aktualna_Temperatura 000A           FRAME_AdressOfNeighbors@nrRamki 000E  
              ?_MOC_Aktualna_Temperatura 0006         __size_of_FRAME_AdressOfNeighbors 02BE  
                       ??_CAN_SetupClock 0006           FRAME_AdressOfNeighbors@message 000C  
                              _LED_Clear 14A0                                _LED_Error 1482  
                         __pintcode_body 159E                                _LED_Right 11D4  
                   end_of_initialization 1080                            __Lmediumconst 0000  
                                int_func 159E                                _INI_Timer 14F6  
                 i1_TMR1_Update_flag_Set 157A         TRM_DataTransmition@czujnikWeWyU8 0048  
                             ?_CAN_GenID 0006                                  postdec1 000FE5  
                                postdec2 000FDD                                  postinc0 000FEE  
                                postinc1 000FE6                                  postinc2 000FDE  
                             ?_CAN_Setup 0001            __size_of_FRAME_AveragingTimes 0036  
      FRAME_SensorExcitationStatus@theta 0011                     CAN_SendFrame@message 000B  
                          LED_Update@Red 004B                            _CAN_TakeFrame 031E  
                             ?_LED_Clear 0001                            _CAN_SendFrame 078C  
                             ?_LED_Error 0001                               ?_LED_Right 0006  
                       _FRAME_AxisStatus 1318                  ??_FRAME_ExcitationValue 0008  
                             ?_INI_Timer 0001                  ?_MOCK_Klikniecie_Spadek 0006  
                        _ramkaCanRxKarty 0060                     _TMR1_Update_flag_Get 1570  
                        _ramkaCanTxKarty 00B5                     _TMR1_Update_flag_Set 1566  
                          _CAN_SetupMask 0D5E                        __size_of_LED_Left 0042  
                   _FRAME_HandleCanFrame 05A2                   __size_of_IsInNeighbors 004E  
                      __size_of_LOCK_Get 0004                        __size_of_LOCK_Set 0008  
                         CAN_TakeFrame@k 0015                           __end_of___wmul 145E  
                          __pidataCOMRAM 1584                        __size_of_ISR_high 159C  
                   _MOCK_PrzyspieszenieX 1552                     _MOCK_PrzyspieszenieY 1548  
                   _MOCK_PrzyspieszenieZ 153E                               LED_Right@a 0006  
                             LED_Right@b 000A                    MOC_Frame_Counter@zeta 004D  
                          ??_LED_Control 0008                      start_initialization 1034  
                         ?_CAN_TakeFrame 000E                           ?_CAN_SendFrame 000B  
         __end_of_MOCK_Klikniecie_Spadek 1566                         __CFG_OSC$IRCIO67 000000  
      __size_of_FRAME_PrzypisanieDokarty 0036                ?_FRAME_PrzypisanieDokarty 0006  
                  ?_TMR1_Update_flag_Get 0006                    ?_TMR1_Update_flag_Set 0006  
                         ?_CAN_SetupMask 0001                    __end_of_LED_Light_Pos 0CBA  
                  ?_FRAME_HandleCanFrame 0022                              ??_CAN_GenID 0009  
                               ??___wmul 000A                              ??_CAN_Setup 0006  
                       __CFG_LPT1OSC$OFF 000000                    ?_MOCK_PrzyspieszenieX 0006  
                  ?_MOCK_PrzyspieszenieY 0006                    ?_MOCK_PrzyspieszenieZ 0006  
               CAN_MoveBuffIntoFrame@Buf 0008     __end_of_FRAME_SensorExcitationStatus 0C0A  
  __size_of_FRAME_SensorExcitationStatus 00DC                 CAN_MoveBuffIntoFrame@Ram 0006  
           _FRAME_SensorExcitationStatus 0B2E           __size_of_CAN_MoveBuffIntoFrame 002A  
                            __pbssBIGRAM 00C6            __end_of_CAN_MoveBuffIntoFrame 1410  
                        _Fulfillment_Lvl 0053                              __pbssCOMRAM 0038  
                               ?_INI_All 0001                  _FRAME_AdressOfNeighbors 0060  
                          _IsInNeighbors 1138                        ?_TMR1_Timer_reset 0001  
                            _BRGCON1bits 000F70                              _BRGCON2bits 000F71  
                            _BRGCON3bits 000F72                                 ?_ISR_low 0001  
                            ??_LED_Clear 000B                            ??_MOC_NOTWORK 0008  
                     ??_TMR1_Timer_reset 0001                              ??_LED_Error 000B  
                            ??_LED_Right 0008             __size_of_TRM_DataTransmition 004A  
               FRAME_AdressOfNeighbors@i 0020                 FRAME_AdressOfNeighbors@k 001E  
                    __end_of_LED_Control 0A4C              ?_FRAME_ExcitationMultiplier 0006  
                            ??_INI_Timer 0006                    __end_of_INI_LED_Start 13B8  
                       ___lwdiv@dividend 0006                                __pintcode 0008  
                               ?___awdiv 0006                  ??_FRAME_SoftwareVersion 0008  
       __end_of_MOC_Aktualna_Temperatura 153E                                 ?___lwdiv 0006  
                      FRAME_Plot@message 000D                              __pintcodelo 0018  
                     CAN_TakeFrame@op_id 0012              __end_of_INI_GlobalInterrupt 152A  
                        ??_CAN_TakeFrame 0010            ?_FRAME_SensorExcitationStatus 000E  
 __end_of_MOC_Wynikowa_wartosc_roznicowa 1534  __size_of_MOC_Wynikowa_wartosc_roznicowa 000A  
         _MOC_Wynikowa_wartosc_roznicowa 152A                              _COMSTATbits 000F74  
                         ?_IsInNeighbors 0006                          ??_CAN_SendFrame 000D  
                       ___lwdiv@quotient 000A                  ?i1_TMR1_Update_flag_Set 0001  
            FRAME_AveragingTimes@message 0006                   ??_TMR1_Update_flag_Get 0008  
                 ??_TMR1_Update_flag_Set 0008                          ??_CAN_SetupMask 0006  
                         ___wmul@product 000A                                 _LED_Left 126A  
                 ??_FRAME_HandleCanFrame 0024                     CAN_TakeFrame@message 000E  
                    __end_of_MOC_NOTWORK 1596                                 _LOCK_Get 15A4  
                   CAN_TakeFrame@tempCON 0014                                 _LOCK_Set 1596  
                               _RXB0EIDH 000F63                                 _RXB0EIDL 000F64  
                               _RCONbits 000FD0                         __CFG_WDTPS$32768 000000  
                               _RXB0SIDH 000F61                                 _RXB0SIDL 000F62  
                               _RXF0EIDH 000F02                                 _RXF0EIDL 000F03  
                               _RXF1EIDH 000F06                                 _RXF1EIDL 000F07  
                               _RXF2EIDH 000F0A                                 _RXF2EIDL 000F0B  
                               _RXF3EIDH 000F0E                                 _RXF3EIDL 000F0F  
                               _RXF4EIDH 000F12                                 _RXF4EIDL 000F13  
                               _RXF5EIDH 000F16                                 _RXF5EIDL 000F17  
                               _RXF0SIDH 000F00                                 _RXF0SIDL 000F01  
                               _RXF1SIDH 000F04                                 _RXF1SIDL 000F05  
                               _RXF2SIDH 000F08                                 _RXF2SIDL 000F09  
                               _RXF3SIDH 000F0C                                 _RXF3SIDL 000F0D  
                               _ISR_high 0008                                 _RXF5SIDH 000F14  
                               _RXF5SIDL 000F15                                 _RXM0EIDH 000F1A  
                               _RXM0EIDL 000F1B                                 _RXM1EIDH 000F1E  
                               _RXM1EIDL 000F1F                   ??_MOCK_PrzyspieszenieX 0008  
                 ??_MOCK_PrzyspieszenieY 0008                   ??_MOCK_PrzyspieszenieZ 0008  
                               _RXM0SIDH 000F18                                 _RXM0SIDL 000F19  
                               _RXM1SIDH 000F1C                                 _RXM1SIDL 000F1D  
               __end_of_FRAME_AxisStatus 134E                ??_FRAME_AdressOfNeighbors 0010  
                      ___wmul@multiplier 0006                         _DetectorLedRadar 0041  
                            _LED_Control 08FA                         __size_of_INI_All 001A  
           FRAME_ExcitationValue@message 0006           __end_ofi1_TMR1_Update_flag_Set 1584  
                              copy_data0 1048                         __size_of_ISR_low 0044  
     __size_of_FRAME_AccelerometerStatus 0076             __end_of_FRAME_AveragingTimes 1384  
             ?_FRAME_AccelerometerStatus 0008           __size_of_FRAME_ExcitationValue 0036  
          __end_of_FRAME_ExcitationValue 1318                                 __Hrparam 0000  
                           _RXB0SIDLbits 000F62                                 __Lrparam 0000  
                       __size_of___awdiv 0084                         __size_of___lwdiv 0052  
                        ??_IsInNeighbors 0008                 _MOC_Aktualna_Temperatura 1534  
        FRAME_PrzypisanieDokarty@message 0006                       LED_Light_Pos@flage 0016  
                     LED_Light_Pos@color 0011         __end_of_FRAME_PrzypisanieDokarty 12E2  
                           _RXF0SIDLbits 000F01                 FRAME_AnalogValue@message 0006  
                        ___lwdiv@divisor 0008                             _RXF1SIDLbits 000F05  
                        ___lwdiv@counter 000C                                 __ptext10 1596  
                               __ptext11 15A4                                 __ptext20 134E  
                               __ptext12 1138                                 __ptext21 15AA  
                               __ptext13 12AC                                 __ptext30 078C  
                               __ptext22 0060                                 __ptext14 108E  
                               __ptext31 0CBA                                 __ptext23 1438  
                               __ptext15 15A8                                 __ptext40 11D4  
                               __ptext32 031E                                 __ptext24 14A0  
                               __ptext16 12E2                                 __ptext41 126A  
                               __ptext33 0DFE                                 __ptext25 0EFC  
                               __ptext17 1186                                 __ptext50 1410  
                               __ptext42 14DC                                 __ptext34 13E6  
                               __ptext26 153E                                 __ptext18 0A4C  
                               __ptext43 14F6                                 __ptext35 1566  
                               __ptext27 1548                                 __ptext19 1318  
                               __ptext52 157A                                 __ptext44 14BE  
                               __ptext36 1570                                 __ptext28 1552  
         ??_FRAME_SensorExcitationStatus 0010                                 __ptext53 145E  
                               __ptext45 1384                                 __ptext37 0E82  
                               __ptext29 155C                                 __ptext46 08FA  
                               __ptext38 0C0A                                 __ptext47 151C  
                               __ptext39 10E6                                 __ptext48 0FD8  
                               __ptext49 0D5E            TRM_DataTransmition@canMessage 0027  
                           _RXF2SIDLbits 000F09                              _MOC_NOTWORK 158E  
                           _RXF3SIDLbits 000F0D                             _RXF4SIDLbits 000F11  
               FRAME_DeviceReset@message 0006        __end_of_FRAME_AccelerometerStatus 0F72  
                           _RXF5SIDLbits 000F15                               _FRAME_Plot 108E  
                          __size_of_main 002E                  __size_of_CAN_SetupClock 0028  
                               int$flags 0056                      _TRM_DataTransmition 1220  
                            _RXB0DLCbits 000F65                               _LED_Update 0E82  
                            _RXB0CONbits 000F60                               _INTCONbits 000FF2  
                             _INI_OUTPUT 14BE                        _FRAME_AnalogValue 15AA  
                   ?_TRM_DataTransmition 0001             FRAME_SoftwareVersion@message 0006  
                               intlevel1 0000                                 intlevel2 0000  
                     ?_FRAME_AnalogValue 0006      FRAME_SensorExcitationStatus@message 000E  
                            _TXB0CONbits 000F40                      ??_FRAME_AnalogValue 000A  
              __size_of_TMR1_Timer_reset 0024                 LED_Light_Pos@fulfillment 000F  
                   _FRAME_AveragingTimes 134E           __size_of_FRAME_SoftwareVersion 0066  
                      _FRAME_DeviceReset 0A4C            __end_of_FRAME_SoftwareVersion 0FD8  
                     ?_FRAME_DeviceReset 0006                          LED_Update@Green 0055  
              __end_of_FRAME_AnalogValue 15AC                   __size_of_LED_Light_Pos 00B0  
                  _CAN_MoveBuffIntoFrame 13E6                               _WDTCONbits 000FD1  
                    ??_FRAME_DeviceReset 0008                    ??_TRM_DataTransmition 0027  
               _FRAME_PrzypisanieDokarty 12AC                   LED_Light_Pos@LED_array 0012  
                         LED_Update@pos1 0051                           LED_Update@pos2 004F  
                            ?_FRAME_Plot 000D  
