

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Jul 24 09:28:51 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4680
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1
    56                           	psect	text44,global,reloc=2,class=CODE,delta=1
    57                           	psect	text45,global,reloc=2,class=CODE,delta=1
    58                           	psect	text46,global,reloc=2,class=CODE,delta=1
    59                           	psect	text47,global,reloc=2,class=CODE,delta=1
    60                           	psect	text48,global,reloc=2,class=CODE,delta=1
    61                           	psect	text49,global,reloc=2,class=CODE,delta=1
    62                           	psect	text50,global,reloc=2,class=CODE,delta=1
    63                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    64                           	psect	text52,global,reloc=2,class=CODE,delta=1
    65                           	psect	text53,global,reloc=2,class=CODE,delta=1
    66                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    67                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    68                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    69                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    70                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    71  0000                     
    72                           ; Version 2.05
    73                           ; Generated 20/12/2018 GMT
    74                           ; 
    75                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    76                           ; All rights reserved.
    77                           ; 
    78                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    79                           ; 
    80                           ; Redistribution and use in source and binary forms, with or without modification, are
    81                           ; permitted provided that the following conditions are met:
    82                           ; 
    83                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    84                           ;        conditions and the following disclaimer.
    85                           ; 
    86                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    87                           ;        of conditions and the following disclaimer in the documentation and/or other
    88                           ;        materials provided with the distribution.
    89                           ; 
    90                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    91                           ;        software without specific prior written permission.
    92                           ; 
    93                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    94                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    95                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    96                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    97                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    98                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    99                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   100                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   101                           ; 
   102                           ; 
   103                           ; Code-generator required, PIC18F4680 Definitions
   104                           ; 
   105                           ; SFR Addresses
   106  0000                     
   107                           	psect	idataCOMRAM
   108  0016DC                     __pidataCOMRAM:
   109                           	opt callstack 0
   110                           
   111                           ;initializer for MOC_Frame_Counter@zeta
   112  0016DC  0011               	dw	17
   113                           
   114                           ;initializer for LED_Update@pos2
   115  0016DE  0001               	dw	1
   116                           
   117                           ;initializer for LED_Update@pos1
   118  0016E0  0001               	dw	1
   119                           
   120                           ;initializer for _Fulfillment_Lvl
   121  0016E2  0014               	dw	20
   122                           
   123                           ;initializer for LED_Update@Green
   124  0016E4  01                 	db	1
   125  0000                     _RXFCON0	set	3540
   126  0000                     _MSEL3	set	3571
   127  0000                     _MSEL2	set	3570
   128  0000                     _MSEL1	set	3569
   129  0000                     _MSEL0	set	3568
   130  0000                     _BIE0	set	3578
   131  0000                     _BSEL0	set	3576
   132  0000                     _B5CON	set	3696
   133  0000                     _B4CON	set	3680
   134  0000                     _B3CON	set	3664
   135  0000                     _B2CON	set	3648
   136  0000                     _B1CON	set	3632
   137  0000                     _B0CON	set	3616
   138  0000                     _TXB0CONbits	set	3904
   139  0000                     _RXF3EIDL	set	3855
   140  0000                     _RXF3EIDH	set	3854
   141  0000                     _RXF3SIDL	set	3853
   142  0000                     _RXF3SIDH	set	3852
   143  0000                     _RXF2EIDL	set	3851
   144  0000                     _RXF2EIDH	set	3850
   145  0000                     _RXF2SIDLbits	set	3849
   146  0000                     _RXF2SIDL	set	3849
   147  0000                     _RXF2SIDH	set	3848
   148  0000                     _RXF1EIDL	set	3847
   149  0000                     _RXF1EIDH	set	3846
   150  0000                     _RXF1SIDLbits	set	3845
   151  0000                     _RXF1SIDL	set	3845
   152  0000                     _RXF1SIDH	set	3844
   153  0000                     _RXF0EIDL	set	3843
   154  0000                     _RXF0EIDH	set	3842
   155  0000                     _RXF0SIDLbits	set	3841
   156  0000                     _RXF0SIDL	set	3841
   157  0000                     _RXF0SIDH	set	3840
   158  0000                     _RXM1EIDL	set	3871
   159  0000                     _RXM1EIDH	set	3870
   160  0000                     _RXM1SIDL	set	3869
   161  0000                     _RXM1SIDH	set	3868
   162  0000                     _RXM0EIDL	set	3867
   163  0000                     _RXM0EIDH	set	3866
   164  0000                     _RXM0SIDL	set	3865
   165  0000                     _RXM0SIDH	set	3864
   166  0000                     _RXB1CON	set	3920
   167  0000                     _TXB0CON	set	3904
   168  0000                     _INTCONbits	set	4082
   169  0000                     _WDTCONbits	set	4049
   170  0000                     _RCONbits	set	4048
   171  0000                     _TRISC	set	3988
   172  0000                     _LATC	set	3979
   173  0000                     _T1CON	set	4045
   174  0000                     _TMR1H	set	4047
   175  0000                     _TMR1L	set	4046
   176  0000                     _LATE	set	3981
   177  0000                     _LATA	set	3977
   178  0000                     _LATB	set	3978
   179  0000                     _LATD	set	3980
   180  0000                     _TRISD	set	3989
   181  0000                     _TRISE	set	3990
   182  0000                     _TRISB	set	3987
   183  0000                     _TRISA	set	3986
   184  0000                     _RXB0DLCbits	set	3941
   185  0000                     _RXB0DLC	set	3941
   186  0000                     _RXB0SIDH	set	3937
   187  0000                     _RXB0SIDLbits	set	3938
   188  0000                     _RXB0SIDL	set	3938
   189  0000                     _RXB0EIDH	set	3939
   190  0000                     _RXB0EIDL	set	3940
   191  0000                     _COMSTATbits	set	3956
   192  0000                     _RXB0CONbits	set	3936
   193  0000                     _BRGCON3bits	set	3954
   194  0000                     _BRGCON2bits	set	3953
   195  0000                     _BRGCON1bits	set	3952
   196  0000                     _CIOCON	set	3955
   197  0000                     _ECANCON	set	3959
   198  0000                     _PIR3	set	4004
   199  0000                     _IPR3	set	4005
   200  0000                     _PIE3	set	4003
   201  0000                     _RXB0CON	set	3936
   202  0000                     _CANSTAT	set	3950
   203  0000                     _CANCON	set	3951
   204  0000                     _RCON	set	4048
   205  0000                     _RXB0D0	set	3942
   206  0000                     _TMR1IF	set	31984
   207  0000                     _TMR1IP	set	31992
   208  0000                     _PEIE	set	32662
   209  0000                     _IPEN	set	32391
   210  0000                     _TMR1ON	set	32360
   211  0000                     _TMR1IE	set	31976
   212  0000                     _IRCF0	set	32412
   213  0000                     _IRCF1	set	32413
   214  0000                     _IRCF2	set	32414
   215                           
   216                           ; #config settings
   217  0000                     
   218                           	psect	cinit
   219  0011DC                     __pcinit:
   220                           	opt callstack 0
   221  0011DC                     start_initialization:
   222                           	opt callstack 0
   223  0011DC                     __initialization:
   224                           	opt callstack 0
   225                           
   226                           ; Initialize objects allocated to COMRAM (9 bytes)
   227                           ; load TBLPTR registers with __pidataCOMRAM
   228  0011DC  0EDC               	movlw	low __pidataCOMRAM
   229  0011DE  6EF6               	movwf	tblptrl,c
   230  0011E0  0E16               	movlw	high __pidataCOMRAM
   231  0011E2  6EF7               	movwf	tblptrh,c
   232  0011E4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   233  0011E6  6EF8               	movwf	tblptru,c
   234  0011E8  EE00  F050         	lfsr	0,__pdataCOMRAM
   235  0011EC  EE10 F009          	lfsr	1,9
   236  0011F0                     copy_data0:
   237  0011F0  0009               	tblrd		*+
   238  0011F2  CFF5 FFEE          	movff	tablat,postinc0
   239  0011F6  50E5               	movf	postdec1,w,c
   240  0011F8  50E1               	movf	fsr1l,w,c
   241  0011FA  E1FA               	bnz	copy_data0
   242                           
   243                           ; Clear objects allocated to BIGRAM (544 bytes)
   244  0011FC  EE00  F0C6         	lfsr	0,__pbssBIGRAM
   245  001200  EE12 F020          	lfsr	1,544
   246  001204                     clear_0:
   247  001204  6AEE               	clrf	postinc0,c
   248  001206  50E5               	movf	postdec1,w,c
   249  001208  50E1               	movf	fsr1l,w,c
   250  00120A  E1FC               	bnz	clear_0
   251  00120C  50E2               	movf	fsr1h,w,c
   252  00120E  E1FA               	bnz	clear_0
   253                           
   254                           ; Clear objects allocated to BANK0 (102 bytes)
   255  001210  EE00  F060         	lfsr	0,__pbssBANK0
   256  001214  0E66               	movlw	102
   257  001216                     clear_1:
   258  001216  6AEE               	clrf	postinc0,c
   259  001218  06E8               	decf	wreg,f,c
   260  00121A  E1FD               	bnz	clear_1
   261                           
   262                           ; Clear objects allocated to COMRAM (37 bytes)
   263  00121C  EE00  F02B         	lfsr	0,__pbssCOMRAM
   264  001220  0E25               	movlw	37
   265  001222                     clear_2:
   266  001222  6AEE               	clrf	postinc0,c
   267  001224  06E8               	decf	wreg,f,c
   268  001226  E1FD               	bnz	clear_2
   269  001228                     end_of_initialization:
   270                           	opt callstack 0
   271  001228                     __end_of__initialization:
   272                           	opt callstack 0
   273  001228  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   274  00122A  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   275  00122C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   276  00122E  6EF8               	movwf	tblptru,c
   277  001230  0100               	movlb	0
   278  001232  EF9B  F00A         	goto	_main	;jump to C main() function
   279                           
   280                           	psect	bssCOMRAM
   281  00002B                     __pbssCOMRAM:
   282                           	opt callstack 0
   283  00002B                     _Flagi:
   284                           	opt callstack 0
   285  00002B                     	ds	5
   286  000030                     _DaneCan:
   287                           	opt callstack 0
   288  000030                     	ds	4
   289  000034                     _DetectorLedRadar:
   290                           	opt callstack 0
   291  000034                     	ds	3
   292  000037                     _NeightAdress8:
   293                           	opt callstack 0
   294  000037                     	ds	2
   295  000039                     _NeightAdress7:
   296                           	opt callstack 0
   297  000039                     	ds	2
   298  00003B                     _NeightAdress6:
   299                           	opt callstack 0
   300  00003B                     	ds	2
   301  00003D                     _NeightAdress5:
   302                           	opt callstack 0
   303  00003D                     	ds	2
   304  00003F                     _NeightAdress4:
   305                           	opt callstack 0
   306  00003F                     	ds	2
   307  000041                     _NeightAdress3:
   308                           	opt callstack 0
   309  000041                     	ds	2
   310  000043                     _NeightAdress2:
   311                           	opt callstack 0
   312  000043                     	ds	2
   313  000045                     _NeightAdress1:
   314                           	opt callstack 0
   315  000045                     	ds	2
   316  000047                     _TMR1_Update_flag:
   317                           	opt callstack 0
   318  000047                     	ds	2
   319  000049                     _Dane:
   320                           	opt callstack 0
   321  000049                     	ds	2
   322  00004B                     	ds	1
   323  00004C                     	ds	1
   324  00004D                     ISR_low@ramkaStanuU8:
   325                           	opt callstack 0
   326  00004D                     	ds	1
   327  00004E                     	ds	1
   328  00004F                     _LOCK:
   329                           	opt callstack 0
   330  00004F                     	ds	1
   331                           
   332                           	psect	dataCOMRAM
   333  000050                     __pdataCOMRAM:
   334                           	opt callstack 0
   335  000050                     MOC_Frame_Counter@zeta:
   336                           	opt callstack 0
   337  000050                     	ds	2
   338  000052                     LED_Update@pos2:
   339                           	opt callstack 0
   340  000052                     	ds	2
   341  000054                     LED_Update@pos1:
   342                           	opt callstack 0
   343  000054                     	ds	2
   344  000056                     _Fulfillment_Lvl:
   345                           	opt callstack 0
   346  000056                     	ds	2
   347  000058                     LED_Update@Green:
   348                           	opt callstack 0
   349  000058                     	ds	1
   350                           
   351                           	psect	bssBANK0
   352  000060                     __pbssBANK0:
   353                           	opt callstack 0
   354  000060                     _ramkaCanRxKarty:
   355                           	opt callstack 0
   356  000060                     	ds	85
   357  0000B5                     _ramkaCanTxKarty:
   358                           	opt callstack 0
   359  0000B5                     	ds	17
   360                           
   361                           	psect	bssBIGRAM
   362  0000C6                     __pbssBIGRAM:
   363                           	opt callstack 0
   364  0000C6                     _wartosciSasiada:
   365                           	opt callstack 0
   366  0000C6                     	ds	544
   367                           
   368                           	psect	cstackCOMRAM
   369  000001                     __pcstackCOMRAM:
   370                           	opt callstack 0
   371  000001                     TMR1_Timer_reset@t1L:
   372                           	opt callstack 0
   373  000001                     i1TMR1_Update_flag_Set@a:
   374                           	opt callstack 0
   375                           
   376                           ; 2 bytes @ 0x0
   377  000001                     	ds	1
   378  000002                     TMR1_Timer_reset@t1H:
   379                           	opt callstack 0
   380                           
   381                           ; 1 bytes @ 0x1
   382  000002                     	ds	1
   383  000003                     ??_ISR_low:
   384  000003                     
   385                           ; 1 bytes @ 0x2
   386  000003                     	ds	3
   387  000006                     ??_CAN_Setup:
   388  000006                     ?_TMR1_Update_flag_Get:
   389                           	opt callstack 0
   390  000006                     ?_LED_Right:
   391                           	opt callstack 0
   392  000006                     ?_LED_Left:
   393                           	opt callstack 0
   394  000006                     ?_MOC_Wynikowa_wartosc_roznicowa:
   395                           	opt callstack 0
   396  000006                     ?_MOC_Frame_Counter:
   397                           	opt callstack 0
   398  000006                     ?_MOC_Aktualna_Temperatura:
   399                           	opt callstack 0
   400  000006                     ?_MOC_NOTWORK:
   401                           	opt callstack 0
   402  000006                     ?_MOCK_PrzyspieszenieX:
   403                           	opt callstack 0
   404  000006                     ?_MOCK_PrzyspieszenieY:
   405                           	opt callstack 0
   406  000006                     ?_MOCK_PrzyspieszenieZ:
   407                           	opt callstack 0
   408  000006                     ?_MOCK_Klikniecie_Spadek:
   409                           	opt callstack 0
   410  000006                     ?___awdiv:
   411                           	opt callstack 0
   412  000006                     ?___lwdiv:
   413                           	opt callstack 0
   414  000006                     LOCK_Set@k:
   415                           	opt callstack 0
   416  000006                     CAN_MoveBuffIntoFrame@Ram:
   417                           	opt callstack 0
   418  000006                     CAN_GenID@message:
   419                           	opt callstack 0
   420  000006                     LED_Right@a:
   421                           	opt callstack 0
   422  000006                     LED_Left@a:
   423                           	opt callstack 0
   424  000006                     LED_Control@diode:
   425                           	opt callstack 0
   426  000006                     TMR1_Update_flag_Set@a:
   427                           	opt callstack 0
   428  000006                     IsInNeighbors@message_adress:
   429                           	opt callstack 0
   430  000006                     FRAME_ExcitationValue@message:
   431                           	opt callstack 0
   432  000006                     FRAME_ExcitationMultiplier@message:
   433                           	opt callstack 0
   434  000006                     FRAME_AveragingTimes@message:
   435                           	opt callstack 0
   436  000006                     FRAME_AxisStatus@message:
   437                           	opt callstack 0
   438  000006                     FRAME_DataUpdateAndChangeOption@message:
   439                           	opt callstack 0
   440  000006                     FRAME_MapPosition@message:
   441                           	opt callstack 0
   442  000006                     FRAME_SoftwareVersion@message:
   443                           	opt callstack 0
   444  000006                     FRAME_AnalogValue@message:
   445                           	opt callstack 0
   446  000006                     FRAME_PrzypisanieDokarty@message:
   447                           	opt callstack 0
   448  000006                     FRAME_AdressOfNeighbors@message:
   449                           	opt callstack 0
   450  000006                     ___awdiv@dividend:
   451                           	opt callstack 0
   452  000006                     ___lwdiv@dividend:
   453                           	opt callstack 0
   454                           
   455                           ; 2 bytes @ 0x5
   456  000006                     	ds	2
   457  000008                     ??_LED_Right:
   458  000008                     ??_FRAME_DataUpdateAndChangeOption:
   459  000008                     ??_FRAME_PrzypisanieDokarty:
   460  000008                     CAN_GenID@frameID:
   461                           	opt callstack 0
   462  000008                     CAN_MoveBuffIntoFrame@Buf:
   463                           	opt callstack 0
   464  000008                     LED_Left@b:
   465                           	opt callstack 0
   466  000008                     FRAME_AccelerometerStatus@message:
   467                           	opt callstack 0
   468  000008                     FRAME_AnalogValue@set:
   469                           	opt callstack 0
   470  000008                     FRAME_AdressOfNeighbors@nrRamki:
   471                           	opt callstack 0
   472  000008                     ___awdiv@divisor:
   473                           	opt callstack 0
   474  000008                     ___lwdiv@divisor:
   475                           	opt callstack 0
   476                           
   477                           ; 2 bytes @ 0x7
   478  000008                     	ds	1
   479  000009                     ??_CAN_GenID:
   480  000009                     FRAME_ExcitationMultiplier@i:
   481                           	opt callstack 0
   482  000009                     FRAME_DeviceReset@message:
   483                           	opt callstack 0
   484                           
   485                           ; 2 bytes @ 0x8
   486  000009                     	ds	1
   487  00000A                     ??_FRAME_AdressOfNeighbors:
   488  00000A                     CAN_MoveBuffIntoFrame@i:
   489                           	opt callstack 0
   490  00000A                     LED_Control@color:
   491                           	opt callstack 0
   492  00000A                     ___awdiv@counter:
   493                           	opt callstack 0
   494  00000A                     LED_Right@b:
   495                           	opt callstack 0
   496  00000A                     ___lwdiv@quotient:
   497                           	opt callstack 0
   498                           
   499                           ; 2 bytes @ 0x9
   500  00000A                     	ds	1
   501  00000B                     ___awdiv@sign:
   502                           	opt callstack 0
   503  00000B                     CAN_SendFrame@message:
   504                           	opt callstack 0
   505  00000B                     FRAME_SensorExcitationStatus@message:
   506                           	opt callstack 0
   507                           
   508                           ; 2 bytes @ 0xA
   509  00000B                     	ds	1
   510  00000C                     ___lwdiv@counter:
   511                           	opt callstack 0
   512  00000C                     ___awdiv@quotient:
   513                           	opt callstack 0
   514                           
   515                           ; 2 bytes @ 0xB
   516  00000C                     	ds	1
   517  00000D                     ??_CAN_SendFrame:
   518  00000D                     LED_Light_Pos@pos:
   519                           	opt callstack 0
   520  00000D                     FRAME_Plot@message:
   521                           	opt callstack 0
   522                           
   523                           ; 2 bytes @ 0xC
   524  00000D                     	ds	1
   525  00000E                     CAN_TakeFrame@message:
   526                           	opt callstack 0
   527  00000E                     FRAME_AdressOfNeighbors@kier:
   528                           	opt callstack 0
   529                           
   530                           ; 2 bytes @ 0xD
   531  00000E                     	ds	1
   532  00000F                     ??_FRAME_Plot:
   533  00000F                     LED_Light_Pos@fulfillment:
   534                           	opt callstack 0
   535  00000F                     FRAME_SensorExcitationStatus@iterator_beta:
   536                           	opt callstack 0
   537                           
   538                           ; 2 bytes @ 0xE
   539  00000F                     	ds	1
   540  000010                     ??_CAN_TakeFrame:
   541                           
   542                           ; 1 bytes @ 0xF
   543  000010                     	ds	1
   544  000011                     LED_Light_Pos@color:
   545                           	opt callstack 0
   546  000011                     FRAME_HandleCanFrame@message:
   547                           	opt callstack 0
   548                           
   549                           ; 2 bytes @ 0x10
   550  000011                     	ds	1
   551  000012                     CAN_TakeFrame@tempCON:
   552                           	opt callstack 0
   553  000012                     LED_Light_Pos@LED_array:
   554                           	opt callstack 0
   555                           
   556                           ; 2 bytes @ 0x11
   557  000012                     	ds	1
   558  000013                     ??_FRAME_HandleCanFrame:
   559  000013                     CAN_TakeFrame@k:
   560                           	opt callstack 0
   561                           
   562                           ; 1 bytes @ 0x12
   563  000013                     	ds	1
   564  000014                     LED_Light_Pos@pos2:
   565                           	opt callstack 0
   566                           
   567                           ; 2 bytes @ 0x13
   568  000014                     	ds	2
   569  000016                     LED_Light_Pos@flage:
   570                           	opt callstack 0
   571                           
   572                           ; 2 bytes @ 0x15
   573  000016                     	ds	1
   574  000017                     FRAME_HandleCanFrame@ident:
   575                           	opt callstack 0
   576                           
   577                           ; 2 bytes @ 0x16
   578  000017                     	ds	1
   579  000018                     
   580                           ; 1 bytes @ 0x17
   581  000018                     	ds	1
   582  000019                     FRAME_HandleCanFrame@identyfikator:
   583                           	opt callstack 0
   584                           
   585                           ; 1 bytes @ 0x18
   586  000019                     	ds	1
   587  00001A                     TRM_DataTransmition@canMessage:
   588                           	opt callstack 0
   589                           
   590                           ; 17 bytes @ 0x19
   591  00001A                     	ds	17
   592  00002B                     
   593                           ; 1 bytes @ 0x2A
   594 ;;
   595 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   596 ;;
   597 ;; *************** function _main *****************
   598 ;; Defined at:
   599 ;;		line 94 in file "main.c"
   600 ;; Parameters:    Size  Location     Type
   601 ;;		None
   602 ;; Auto vars:     Size  Location     Type
   603 ;;		None
   604 ;; Return value:  Size  Location     Type
   605 ;;                  1    wreg      void 
   606 ;; Registers used:
   607 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   608 ;; Tracked objects:
   609 ;;		On entry : 0/0
   610 ;;		On exit  : 0/0
   611 ;;		Unchanged: 0/0
   612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   617 ;;Total ram usage:        0 bytes
   618 ;; Hardware stack levels required when called:    8
   619 ;; This function calls:
   620 ;;		_INI_All
   621 ;;		_LED_Update
   622 ;;		_TMR1_Update_flag_Get
   623 ;;		_TMR1_Update_flag_Set
   624 ;;		_TRM_DataTransmition
   625 ;; This function is called by:
   626 ;;		Startup code after reset
   627 ;; This function uses a non-reentrant model
   628 ;;
   629                           
   630                           	psect	text0
   631  001536                     __ptext0:
   632                           	opt callstack 0
   633  001536                     _main:
   634                           	opt callstack 23
   635                           
   636                           ;main.c: 96:     INI_All();
   637                           
   638                           ;incstack = 0
   639  001536  EC1A  F00B         	call	_INI_All	;wreg free
   640                           
   641                           ;main.c: 98:     RCON = 0xFF;
   642  00153A  68D0               	setf	4048,c	;volatile
   643  00153C                     l3213:
   644                           
   645                           ;main.c: 101:     {;main.c: 102:         if(DetectorLedRadar.Flags.obsluzWeWy == 1)
   646  00153C  B034               	btfsc	_DetectorLedRadar,0,c
   647                           
   648                           ;main.c: 103:         {;main.c: 104:             DetectorLedRadar.Flags.obsluzWeWy = 0;
   649  00153E  9034               	bcf	_DetectorLedRadar,0,c
   650                           
   651                           ;main.c: 108:         if(TMR1_Update_flag_Get()==1)
   652  001540  EC64  F00B         	call	_TMR1_Update_flag_Get	;wreg free
   653  001544  0406               	decf	?_TMR1_Update_flag_Get,w,c
   654  001546  1007               	iorwf	?_TMR1_Update_flag_Get+1,w,c
   655  001548  A4D8               	btfss	status,2,c
   656  00154A  D008               	goto	l3223
   657                           
   658                           ;main.c: 109:         {;main.c: 110:             LED_Update();
   659  00154C  ECD9  F007         	call	_LED_Update	;wreg free
   660                           
   661                           ;main.c: 111:             TMR1_Update_flag_Set(0);
   662  001550  0E00               	movlw	0
   663  001552  6E07               	movwf	TMR1_Update_flag_Set@a+1,c
   664  001554  0E00               	movlw	0
   665  001556  6E06               	movwf	TMR1_Update_flag_Set@a,c
   666  001558  EC5F  F00B         	call	_TMR1_Update_flag_Set	;wreg free
   667  00155C                     l3223:
   668                           
   669                           ;main.c: 115:         TRM_DataTransmition();
   670  00155C  ECEA  F009         	call	_TRM_DataTransmition	;wreg free
   671  001560  0004               	clrwdt		;# 
   672                           
   673                           ;main.c: 117:     }
   674  001562  D7EC               	goto	l3213
   675  001564                     __end_of_main:
   676                           	opt callstack 0
   677                           
   678 ;; *************** function _TRM_DataTransmition *****************
   679 ;; Defined at:
   680 ;;		line 19 in file "TRM.c"
   681 ;; Parameters:    Size  Location     Type
   682 ;;		None
   683 ;; Auto vars:     Size  Location     Type
   684 ;;  canMessage     17   25[COMRAM] struct .
   685 ;;  i               1    0        unsigned char 
   686 ;; Return value:  Size  Location     Type
   687 ;;                  1    wreg      void 
   688 ;; Registers used:
   689 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   690 ;; Tracked objects:
   691 ;;		On entry : 0/0
   692 ;;		On exit  : 0/0
   693 ;;		Unchanged: 0/0
   694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   696 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   698 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   699 ;;Total ram usage:       17 bytes
   700 ;; Hardware stack levels used:    1
   701 ;; Hardware stack levels required when called:    7
   702 ;; This function calls:
   703 ;;		_CAN_TakeFrame
   704 ;;		_FRAME_HandleCanFrame
   705 ;; This function is called by:
   706 ;;		_main
   707 ;; This function uses a non-reentrant model
   708 ;;
   709                           
   710                           	psect	text1
   711  0013D4                     __ptext1:
   712                           	opt callstack 0
   713  0013D4                     _TRM_DataTransmition:
   714                           	opt callstack 23
   715                           
   716                           ;TRM.c: 21:     static BYTE weWyU8 = 0, czujnikWeWyU8 = 0;;TRM.c: 22:     BYTE i;;TRM.c:
      +                           23:     mID canMessage;;TRM.c: 26:     if(DaneCan.Flags.wyslijRamkeStanu)
   717                           
   718                           ;incstack = 0
   719  0013D4  A030               	btfss	_DaneCan,0,c
   720  0013D6  D013               	goto	l3181
   721                           
   722                           ;TRM.c: 27:     {;TRM.c: 29:         canMessage.message_type = 0x02;
   723  0013D8  0E02               	movlw	2
   724  0013DA  6E1B               	movwf	TRM_DataTransmition@canMessage+1,c
   725                           
   726                           ;TRM.c: 30:         canMessage.id.Val = 0;
   727  0013DC  0E00               	movlw	0
   728  0013DE  6E1E               	movwf	TRM_DataTransmition@canMessage+4,c
   729  0013E0  0E00               	movlw	0
   730  0013E2  6E1F               	movwf	TRM_DataTransmition@canMessage+5,c
   731  0013E4  0E00               	movlw	0
   732  0013E6  6E20               	movwf	TRM_DataTransmition@canMessage+6,c
   733  0013E8  0E00               	movlw	0
   734  0013EA  6E21               	movwf	TRM_DataTransmition@canMessage+7,c
   735                           
   736                           ;TRM.c: 31:         canMessage.id.v[2] = 0x01 *4;
   737  0013EC  0E04               	movlw	4
   738  0013EE  6E20               	movwf	TRM_DataTransmition@canMessage+6,c
   739                           
   740                           ;TRM.c: 32:         FRAME_HandleCanFrame(&canMessage);
   741  0013F0  0E1A               	movlw	low TRM_DataTransmition@canMessage
   742  0013F2  6E11               	movwf	FRAME_HandleCanFrame@message,c
   743  0013F4  0E00               	movlw	high TRM_DataTransmition@canMessage
   744  0013F6  6E12               	movwf	FRAME_HandleCanFrame@message+1,c
   745  0013F8  ECD2  F002         	call	_FRAME_HandleCanFrame	;wreg free
   746                           
   747                           ;TRM.c: 49:         DaneCan.Flags.wyslijRamkeStanu = 0;
   748  0013FC  9030               	bcf	_DaneCan,0,c
   749  0013FE                     l3181:
   750                           
   751                           ;TRM.c: 59:     if(CAN_TakeFrame(&canMessage))
   752  0013FE  0E1A               	movlw	low TRM_DataTransmition@canMessage
   753  001400  6E0E               	movwf	CAN_TakeFrame@message,c
   754  001402  0E00               	movlw	high TRM_DataTransmition@canMessage
   755  001404  6E0F               	movwf	CAN_TakeFrame@message+1,c
   756  001406  EC94  F001         	call	_CAN_TakeFrame	;wreg free
   757  00140A  0900               	iorlw	0
   758  00140C  B4D8               	btfsc	status,2,c
   759  00140E  0012               	return	
   760                           
   761                           ;TRM.c: 64:         {;TRM.c: 66:             FRAME_HandleCanFrame(&canMessage);
   762  001410  0E1A               	movlw	low TRM_DataTransmition@canMessage
   763  001412  6E11               	movwf	FRAME_HandleCanFrame@message,c
   764  001414  0E00               	movlw	high TRM_DataTransmition@canMessage
   765  001416  6E12               	movwf	FRAME_HandleCanFrame@message+1,c
   766  001418  ECD2  F002         	call	_FRAME_HandleCanFrame	;wreg free
   767                           
   768                           ;TRM.c: 67:         }
   769  00141C  0012               	return		;funcret
   770  00141E                     __end_of_TRM_DataTransmition:
   771                           	opt callstack 0
   772                           
   773 ;; *************** function _FRAME_HandleCanFrame *****************
   774 ;; Defined at:
   775 ;;		line 621 in file "FRAME.c"
   776 ;; Parameters:    Size  Location     Type
   777 ;;  message         2   16[COMRAM] PTR struct .
   778 ;;		 -> TRM_DataTransmition@canMessage(17), 
   779 ;; Auto vars:     Size  Location     Type
   780 ;;  ident           2   22[COMRAM] unsigned short 
   781 ;;  alfa            2    0        int 
   782 ;;  identyfikato    1   24[COMRAM] unsigned char 
   783 ;; Return value:  Size  Location     Type
   784 ;;                  1    wreg      void 
   785 ;; Registers used:
   786 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   787 ;; Tracked objects:
   788 ;;		On entry : 0/0
   789 ;;		On exit  : 0/0
   790 ;;		Unchanged: 0/0
   791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   792 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   793 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   794 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   795 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   796 ;;Total ram usage:        9 bytes
   797 ;; Hardware stack levels used:    1
   798 ;; Hardware stack levels required when called:    6
   799 ;; This function calls:
   800 ;;		_CAN_GenID
   801 ;;		_CAN_SendFrame
   802 ;;		_FRAME_AccelerometerStatus
   803 ;;		_FRAME_AdressOfNeighbors
   804 ;;		_FRAME_AnalogValue
   805 ;;		_FRAME_AveragingTimes
   806 ;;		_FRAME_AxisStatus
   807 ;;		_FRAME_DeviceReset
   808 ;;		_FRAME_ExcitationMultiplier
   809 ;;		_FRAME_ExcitationValue
   810 ;;		_FRAME_MapPosition
   811 ;;		_FRAME_Plot
   812 ;;		_FRAME_PrzypisanieDokarty
   813 ;;		_FRAME_SensorExcitationStatus
   814 ;;		_FRAME_SoftwareVersion
   815 ;;		_LED_Error
   816 ;;		___awdiv
   817 ;; This function is called by:
   818 ;;		_TRM_DataTransmition
   819 ;; This function uses a non-reentrant model
   820 ;;
   821                           
   822                           	psect	text2
   823  0005A4                     __ptext2:
   824                           	opt callstack 0
   825  0005A4                     _FRAME_HandleCanFrame:
   826                           	opt callstack 23
   827                           
   828                           ;FRAME.c: 621: void FRAME_HandleCanFrame(mID * message);FRAME.c: 622: {;FRAME.c: 623:   
      +                            BYTE identyfikator = (BYTE) message->id.v[2]/4;
   829                           
   830                           ;incstack = 0
   831  0005A4  EE20 F006          	lfsr	2,6
   832  0005A8  5011               	movf	FRAME_HandleCanFrame@message,w,c
   833  0005AA  26D9               	addwf	fsr2l,f,c
   834  0005AC  5012               	movf	FRAME_HandleCanFrame@message+1,w,c
   835  0005AE  22DA               	addwfc	fsr2h,f,c
   836  0005B0  50DF               	movf	indf2,w,c
   837  0005B2  6E13               	movwf	??_FRAME_HandleCanFrame& (0+255),c
   838  0005B4  5013               	movf	??_FRAME_HandleCanFrame,w,c
   839  0005B6  6E06               	movwf	___awdiv@dividend,c
   840  0005B8  6A07               	clrf	___awdiv@dividend+1,c
   841  0005BA  0E00               	movlw	0
   842  0005BC  6E09               	movwf	___awdiv@divisor+1,c
   843  0005BE  0E04               	movlw	4
   844  0005C0  6E08               	movwf	___awdiv@divisor,c
   845  0005C2  EC97  F007         	call	___awdiv	;wreg free
   846  0005C6  5006               	movf	?___awdiv,w,c
   847  0005C8  6E19               	movwf	FRAME_HandleCanFrame@identyfikator,c
   848                           
   849                           ;FRAME.c: 626:     if(identyfikator != 0x01)
   850  0005CA  0419               	decf	FRAME_HandleCanFrame@identyfikator,w,c
   851  0005CC  B4D8               	btfsc	status,2,c
   852  0005CE  D074               	goto	l3129
   853                           
   854                           ;FRAME.c: 627:     {;FRAME.c: 628:         WORD ident = identyfikator;
   855  0005D0  C019  F017         	movff	FRAME_HandleCanFrame@identyfikator,FRAME_HandleCanFrame@ident
   856  0005D4  6A18               	clrf	FRAME_HandleCanFrame@ident+1,c
   857  0005D6  D070               	goto	l3129
   858  0005D8                     l3099:
   859                           
   860                           ;FRAME.c: 635:             FRAME_SensorExcitationStatus(message);
   861  0005D8  C011  F00B         	movff	FRAME_HandleCanFrame@message,FRAME_SensorExcitationStatus@message
   862  0005DC  C012  F00C         	movff	FRAME_HandleCanFrame@message+1,FRAME_SensorExcitationStatus@message+1
   863  0005E0  ECD3  F005         	call	_FRAME_SensorExcitationStatus	;wreg free
   864                           
   865                           ;FRAME.c: 636:             break;
   866  0005E4  D09E               	goto	l3131
   867  0005E6                     l3101:
   868                           
   869                           ;FRAME.c: 638:             FRAME_AccelerometerStatus(message);
   870  0005E6  C011  F008         	movff	FRAME_HandleCanFrame@message,FRAME_AccelerometerStatus@message
   871  0005EA  C012  F009         	movff	FRAME_HandleCanFrame@message+1,FRAME_AccelerometerStatus@message+1
   872  0005EE  EC52  F008         	call	_FRAME_AccelerometerStatus	;wreg free
   873                           
   874                           ;FRAME.c: 639:             break;
   875  0005F2  D097               	goto	l3131
   876  0005F4                     l3103:
   877                           
   878                           ;FRAME.c: 641:             FRAME_ExcitationValue(message);
   879  0005F4  C011  F006         	movff	FRAME_HandleCanFrame@message,FRAME_ExcitationValue@message
   880  0005F8  C012  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_ExcitationValue@message+1
   881  0005FC  EC30  F00A         	call	_FRAME_ExcitationValue	;wreg free
   882                           
   883                           ;FRAME.c: 642:             break;
   884  000600  D090               	goto	l3131
   885  000602                     l3105:
   886                           
   887                           ;FRAME.c: 644:             FRAME_ExcitationMultiplier(message);
   888  000602  C011  F006         	movff	FRAME_HandleCanFrame@message,FRAME_ExcitationMultiplier@message
   889  000606  C012  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_ExcitationMultiplier@message+1
   890  00060A  EC9D  F009         	call	_FRAME_ExcitationMultiplier	;wreg free
   891                           
   892                           ;FRAME.c: 645:             break;
   893  00060E  D089               	goto	l3131
   894  000610                     l3107:
   895                           
   896                           ;FRAME.c: 647:             FRAME_AveragingTimes(message);
   897  000610  C011  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AveragingTimes@message
   898  000614  C012  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AveragingTimes@message+1
   899  000618  EC66  F00A         	call	_FRAME_AveragingTimes	;wreg free
   900                           
   901                           ;FRAME.c: 648:             break;
   902  00061C  D082               	goto	l3131
   903  00061E                     l3109:
   904                           
   905                           ;FRAME.c: 650:             FRAME_AxisStatus(message);
   906  00061E  C011  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AxisStatus@message
   907  000622  C012  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AxisStatus@message+1
   908  000626  EC4B  F00A         	call	_FRAME_AxisStatus	;wreg free
   909                           
   910                           ;FRAME.c: 651:             break;
   911  00062A  D07B               	goto	l3131
   912  00062C                     l3111:
   913                           
   914                           ;FRAME.c: 653:             FRAME_DeviceReset(message);
   915  00062C  C011  F009         	movff	FRAME_HandleCanFrame@message,FRAME_DeviceReset@message
   916  000630  C012  F00A         	movff	FRAME_HandleCanFrame@message+1,FRAME_DeviceReset@message+1
   917  000634  EC35  F005         	call	_FRAME_DeviceReset	;wreg free
   918                           
   919                           ;FRAME.c: 654:             break;
   920  000638  D074               	goto	l3131
   921  00063A                     l3113:
   922                           
   923                           ;FRAME.c: 656:             FRAME_Plot(message);
   924  00063A  C011  F00D         	movff	FRAME_HandleCanFrame@message,FRAME_Plot@message
   925  00063E  C012  F00E         	movff	FRAME_HandleCanFrame@message+1,FRAME_Plot@message+1
   926  000642  EC48  F009         	call	_FRAME_Plot	;wreg free
   927                           
   928                           ;FRAME.c: 657:             break;
   929  000646  D06D               	goto	l3131
   930  000648                     l3115:
   931                           
   932                           ;FRAME.c: 659:             FRAME_MapPosition(message);
   933  000648  C011  F006         	movff	FRAME_HandleCanFrame@message,FRAME_MapPosition@message
   934  00064C  C012  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_MapPosition@message+1
   935  000650  EC80  F00B         	call	_FRAME_MapPosition	;wreg free
   936                           
   937                           ;FRAME.c: 660:             break;
   938  000654  D066               	goto	l3131
   939  000656                     l3117:
   940                           
   941                           ;FRAME.c: 662:             FRAME_SoftwareVersion(message);
   942  000656  C011  F006         	movff	FRAME_HandleCanFrame@message,FRAME_SoftwareVersion@message
   943  00065A  C012  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_SoftwareVersion@message+1
   944  00065E  EC8D  F008         	call	_FRAME_SoftwareVersion	;wreg free
   945                           
   946                           ;FRAME.c: 663:             break;
   947  000662  D05F               	goto	l3131
   948  000664                     l3119:
   949                           
   950                           ;FRAME.c: 666:             FRAME_AnalogValue(message, identyfikator - 0x0C);
   951  000664  C011  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AnalogValue@message
   952  000668  C012  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AnalogValue@message+1
   953  00066C  0EF4               	movlw	244
   954  00066E  2419               	addwf	FRAME_HandleCanFrame@identyfikator,w,c
   955  000670  6E08               	movwf	FRAME_AnalogValue@set,c
   956  000672  6A09               	clrf	FRAME_AnalogValue@set+1,c
   957  000674  0EFF               	movlw	255
   958  000676  2209               	addwfc	FRAME_AnalogValue@set+1,f,c
   959  000678  EC81  F00B         	call	_FRAME_AnalogValue	;wreg free
   960                           
   961                           ;FRAME.c: 667:             break;
   962  00067C  D052               	goto	l3131
   963  00067E                     l3121:
   964                           
   965                           ;FRAME.c: 669:             FRAME_PrzypisanieDokarty(message);
   966  00067E  C011  F006         	movff	FRAME_HandleCanFrame@message,FRAME_PrzypisanieDokarty@message
   967  000682  C012  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_PrzypisanieDokarty@message+1
   968  000686  ECB8  F006         	call	_FRAME_PrzypisanieDokarty	;wreg free
   969                           
   970                           ;FRAME.c: 670:             break;
   971  00068A  D04B               	goto	l3131
   972  00068C                     l3123:
   973                           
   974                           ;FRAME.c: 672:             FRAME_AdressOfNeighbors(message,0x10);
   975  00068C  C011  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AdressOfNeighbors@message
   976  000690  C012  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AdressOfNeighbors@message+1
   977  000694  0E00               	movlw	0
   978  000696  6E09               	movwf	FRAME_AdressOfNeighbors@nrRamki+1,c
   979  000698  0E10               	movlw	16
   980  00069A  6E08               	movwf	FRAME_AdressOfNeighbors@nrRamki,c
   981  00069C  EC30  F000         	call	_FRAME_AdressOfNeighbors	;wreg free
   982                           
   983                           ;FRAME.c: 673:             break;
   984  0006A0  D040               	goto	l3131
   985  0006A2                     l3125:
   986                           
   987                           ;FRAME.c: 675:             FRAME_AdressOfNeighbors(message,0x11);
   988  0006A2  C011  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AdressOfNeighbors@message
   989  0006A6  C012  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AdressOfNeighbors@message+1
   990  0006AA  0E00               	movlw	0
   991  0006AC  6E09               	movwf	FRAME_AdressOfNeighbors@nrRamki+1,c
   992  0006AE  0E11               	movlw	17
   993  0006B0  6E08               	movwf	FRAME_AdressOfNeighbors@nrRamki,c
   994  0006B2  EC30  F000         	call	_FRAME_AdressOfNeighbors	;wreg free
   995                           
   996                           ;FRAME.c: 676:             break;
   997  0006B6  D035               	goto	l3131
   998  0006B8                     l3129:
   999  0006B8  5019               	movf	FRAME_HandleCanFrame@identyfikator,w,c
  1000  0006BA  6E13               	movwf	??_FRAME_HandleCanFrame& (0+255),c
  1001  0006BC  6A14               	clrf	(??_FRAME_HandleCanFrame+1)& (0+255),c
  1002                           
  1003                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1004                           ; Switch size 1, requested type "simple"
  1005                           ; Number of cases is 1, Range of values is 0 to 0
  1006                           ; switch strategies available:
  1007                           ; Name         Instructions Cycles
  1008                           ; simple_byte            4     3 (average)
  1009                           ;	Chosen strategy is simple_byte
  1010  0006BE  5014               	movf	??_FRAME_HandleCanFrame+1,w,c
  1011  0006C0  0A00               	xorlw	0	; case 0
  1012  0006C2  A4D8               	btfss	status,2,c
  1013  0006C4  D02E               	goto	l3131
  1014                           
  1015                           ; Switch size 1, requested type "simple"
  1016                           ; Number of cases is 15, Range of values is 1 to 17
  1017                           ; switch strategies available:
  1018                           ; Name         Instructions Cycles
  1019                           ; simple_byte           46    24 (average)
  1020                           ;	Chosen strategy is simple_byte
  1021  0006C6  5013               	movf	??_FRAME_HandleCanFrame,w,c
  1022  0006C8  0A01               	xorlw	1	; case 1
  1023  0006CA  B4D8               	btfsc	status,2,c
  1024  0006CC  D785               	goto	l3099
  1025  0006CE  0A03               	xorlw	3	; case 2
  1026  0006D0  B4D8               	btfsc	status,2,c
  1027  0006D2  D789               	goto	l3101
  1028  0006D4  0A01               	xorlw	1	; case 3
  1029  0006D6  B4D8               	btfsc	status,2,c
  1030  0006D8  D78D               	goto	l3103
  1031  0006DA  0A07               	xorlw	7	; case 4
  1032  0006DC  B4D8               	btfsc	status,2,c
  1033  0006DE  D791               	goto	l3105
  1034  0006E0  0A01               	xorlw	1	; case 5
  1035  0006E2  B4D8               	btfsc	status,2,c
  1036  0006E4  D795               	goto	l3107
  1037  0006E6  0A03               	xorlw	3	; case 6
  1038  0006E8  B4D8               	btfsc	status,2,c
  1039  0006EA  D799               	goto	l3109
  1040  0006EC  0A01               	xorlw	1	; case 7
  1041  0006EE  B4D8               	btfsc	status,2,c
  1042  0006F0  D79D               	goto	l3111
  1043  0006F2  0A0E               	xorlw	14	; case 9
  1044  0006F4  B4D8               	btfsc	status,2,c
  1045  0006F6  D7A1               	goto	l3113
  1046  0006F8  0A03               	xorlw	3	; case 10
  1047  0006FA  B4D8               	btfsc	status,2,c
  1048  0006FC  D7A5               	goto	l3115
  1049  0006FE  0A01               	xorlw	1	; case 11
  1050  000700  B4D8               	btfsc	status,2,c
  1051  000702  D7A9               	goto	l3117
  1052  000704  0A07               	xorlw	7	; case 12
  1053  000706  B4D8               	btfsc	status,2,c
  1054  000708  D7AD               	goto	l3119
  1055  00070A  0A01               	xorlw	1	; case 13
  1056  00070C  B4D8               	btfsc	status,2,c
  1057  00070E  D7AA               	goto	l3119
  1058  000710  0A02               	xorlw	2	; case 15
  1059  000712  B4D8               	btfsc	status,2,c
  1060  000714  D7B4               	goto	l3121
  1061  000716  0A1F               	xorlw	31	; case 16
  1062  000718  B4D8               	btfsc	status,2,c
  1063  00071A  D7B8               	goto	l3123
  1064  00071C  0A01               	xorlw	1	; case 17
  1065  00071E  B4D8               	btfsc	status,2,c
  1066  000720  D7C0               	goto	l3125
  1067  000722                     l3131:
  1068                           
  1069                           ;FRAME.c: 685:     if(message->message_type == 0x02)
  1070  000722  EE20 F001          	lfsr	2,1
  1071  000726  5011               	movf	FRAME_HandleCanFrame@message,w,c
  1072  000728  26D9               	addwf	fsr2l,f,c
  1073  00072A  5012               	movf	FRAME_HandleCanFrame@message+1,w,c
  1074  00072C  22DA               	addwfc	fsr2h,f,c
  1075  00072E  0E02               	movlw	2
  1076  000730  18DE               	xorwf	postinc2,w,c
  1077  000732  A4D8               	btfss	status,2,c
  1078  000734  0012               	return	
  1079                           
  1080                           ;FRAME.c: 686:     {;FRAME.c: 688:         message->frame_type = 0x03;
  1081  000736  EE20 F002          	lfsr	2,2
  1082  00073A  5011               	movf	FRAME_HandleCanFrame@message,w,c
  1083  00073C  26D9               	addwf	fsr2l,f,c
  1084  00073E  5012               	movf	FRAME_HandleCanFrame@message+1,w,c
  1085  000740  22DA               	addwfc	fsr2h,f,c
  1086  000742  0E03               	movlw	3
  1087  000744  6EDF               	movwf	indf2,c
  1088                           
  1089                           ;FRAME.c: 689:         message->message_type = 0x01;
  1090  000746  EE20 F001          	lfsr	2,1
  1091  00074A  5011               	movf	FRAME_HandleCanFrame@message,w,c
  1092  00074C  26D9               	addwf	fsr2l,f,c
  1093  00074E  5012               	movf	FRAME_HandleCanFrame@message+1,w,c
  1094  000750  22DA               	addwfc	fsr2h,f,c
  1095  000752  0E01               	movlw	1
  1096  000754  6EDF               	movwf	indf2,c
  1097                           
  1098                           ;FRAME.c: 690:         message->id.Val = 0;
  1099  000756  EE20 F004          	lfsr	2,4
  1100  00075A  5011               	movf	FRAME_HandleCanFrame@message,w,c
  1101  00075C  26D9               	addwf	fsr2l,f,c
  1102  00075E  5012               	movf	FRAME_HandleCanFrame@message+1,w,c
  1103  000760  22DA               	addwfc	fsr2h,f,c
  1104  000762  6ADE               	clrf	postinc2,c
  1105  000764  6ADE               	clrf	postinc2,c
  1106  000766  6ADE               	clrf	postinc2,c
  1107  000768  6ADD               	clrf	postdec2,c
  1108                           
  1109                           ;FRAME.c: 692:         message->id.v[2] = identyfikator*4;
  1110  00076A  5019               	movf	FRAME_HandleCanFrame@identyfikator,w,c
  1111  00076C  0D04               	mullw	4
  1112  00076E  EE20 F006          	lfsr	2,6
  1113  000772  5011               	movf	FRAME_HandleCanFrame@message,w,c
  1114  000774  26D9               	addwf	fsr2l,f,c
  1115  000776  5012               	movf	FRAME_HandleCanFrame@message+1,w,c
  1116  000778  22DA               	addwfc	fsr2h,f,c
  1117  00077A  CFF3 FFDF          	movff	prodl,indf2
  1118                           
  1119                           ;FRAME.c: 693:         CAN_GenID(message,identyfikator);
  1120  00077E  C011  F006         	movff	FRAME_HandleCanFrame@message,CAN_GenID@message
  1121  000782  C012  F007         	movff	FRAME_HandleCanFrame@message+1,CAN_GenID@message+1
  1122  000786  C019  F008         	movff	FRAME_HandleCanFrame@identyfikator,CAN_GenID@frameID
  1123  00078A  EC07  F007         	call	_CAN_GenID	;wreg free
  1124                           
  1125                           ;FRAME.c: 694:         CAN_SendFrame(message);
  1126  00078E  C011  F00B         	movff	FRAME_HandleCanFrame@message,CAN_SendFrame@message
  1127  000792  C012  F00C         	movff	FRAME_HandleCanFrame@message+1,CAN_SendFrame@message+1
  1128  000796  ECD5  F003         	call	_CAN_SendFrame	;wreg free
  1129                           
  1130                           ;FRAME.c: 705:        while(RXB0CONbits.FILHIT3)
  1131  00079A  D004               	goto	l570
  1132  00079C                     l571:
  1133                           
  1134                           ;FRAME.c: 706:        {;FRAME.c: 707:            if(TXB0CONbits.TXERR == 1){
  1135  00079C  010F               	movlb	15	; () banked
  1136  00079E  B940               	btfsc	64,4,b	;volatile
  1137                           
  1138                           ; BSR set to: 15
  1139                           ;FRAME.c: 708:                LED_Error();
  1140  0007A0  ECED  F00A         	call	_LED_Error	;wreg free
  1141  0007A4                     l570:
  1142                           
  1143                           ;FRAME.c: 705:        while(RXB0CONbits.FILHIT3)
  1144  0007A4  A660               	btfss	3936,3,c	;volatile
  1145  0007A6  0012               	return	
  1146  0007A8  D7F9               	goto	l571
  1147  0007AA                     __end_of_FRAME_HandleCanFrame:
  1148                           	opt callstack 0
  1149                           
  1150 ;; *************** function _FRAME_SoftwareVersion *****************
  1151 ;; Defined at:
  1152 ;;		line 455 in file "FRAME.c"
  1153 ;; Parameters:    Size  Location     Type
  1154 ;;  message         2    5[COMRAM] PTR struct .
  1155 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1156 ;; Auto vars:     Size  Location     Type
  1157 ;;		None
  1158 ;; Return value:  Size  Location     Type
  1159 ;;                  1    wreg      void 
  1160 ;; Registers used:
  1161 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1162 ;; Tracked objects:
  1163 ;;		On entry : 0/0
  1164 ;;		On exit  : 0/0
  1165 ;;		Unchanged: 0/0
  1166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1167 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1169 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1170 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1171 ;;Total ram usage:        3 bytes
  1172 ;; Hardware stack levels used:    1
  1173 ;; Hardware stack levels required when called:    3
  1174 ;; This function calls:
  1175 ;;		Nothing
  1176 ;; This function is called by:
  1177 ;;		_FRAME_HandleCanFrame
  1178 ;; This function uses a non-reentrant model
  1179 ;;
  1180                           
  1181                           	psect	text3
  1182  00111A                     __ptext3:
  1183                           	opt callstack 0
  1184  00111A                     _FRAME_SoftwareVersion:
  1185                           	opt callstack 25
  1186                           
  1187                           ;FRAME.c: 455: static void FRAME_SoftwareVersion(mID *message);FRAME.c: 456: {;FRAME.c: 
      +                          458:     if(message->message_type == 0x02)
  1188                           
  1189                           ;incstack = 0
  1190  00111A  EE20 F001          	lfsr	2,1
  1191  00111E  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1192  001120  26D9               	addwf	fsr2l,f,c
  1193  001122  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1194  001124  22DA               	addwfc	fsr2h,f,c
  1195  001126  0E02               	movlw	2
  1196  001128  18DE               	xorwf	postinc2,w,c
  1197  00112A  A4D8               	btfss	status,2,c
  1198  00112C  0012               	return	
  1199                           
  1200                           ;FRAME.c: 459:     {;FRAME.c: 460:         message->data_length = 4;
  1201  00112E  EE20 F010          	lfsr	2,16
  1202  001132  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1203  001134  26D9               	addwf	fsr2l,f,c
  1204  001136  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1205  001138  22DA               	addwfc	fsr2h,f,c
  1206  00113A  0E04               	movlw	4
  1207  00113C  6EDF               	movwf	indf2,c
  1208                           
  1209                           ;FRAME.c: 461:         message->data[0] = (unsigned char)(Dane->wersjaOprogramowaniaU16 
      +                          >> 8);
  1210  00113E  EE20 F008          	lfsr	2,8
  1211  001142  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1212  001144  26D9               	addwf	fsr2l,f,c
  1213  001146  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1214  001148  22DA               	addwfc	fsr2h,f,c
  1215  00114A  5005               	movf	5,w,c
  1216  00114C  6EDF               	movwf	indf2,c
  1217                           
  1218                           ;FRAME.c: 462:         message->data[1] = (unsigned char)Dane->wersjaOprogramowaniaU16;
  1219  00114E  EE20 F009          	lfsr	2,9
  1220  001152  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1221  001154  26D9               	addwf	fsr2l,f,c
  1222  001156  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1223  001158  22DA               	addwfc	fsr2h,f,c
  1224  00115A  C004 FFDF          	movff	4,indf2
  1225                           
  1226                           ;FRAME.c: 463:         message->data[2] = (unsigned char)(Dane->wersjaSprzetuU16 >> 8);
  1227  00115E  EE20 F00A          	lfsr	2,10
  1228  001162  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1229  001164  26D9               	addwf	fsr2l,f,c
  1230  001166  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1231  001168  22DA               	addwfc	fsr2h,f,c
  1232  00116A  500B               	movf	11,w,c
  1233  00116C  6EDF               	movwf	indf2,c
  1234                           
  1235                           ;FRAME.c: 464:         message->data[3] = (unsigned char)Dane->wersjaSprzetuU16;
  1236  00116E  EE20 F00B          	lfsr	2,11
  1237  001172  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1238  001174  26D9               	addwf	fsr2l,f,c
  1239  001176  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1240  001178  22DA               	addwfc	fsr2h,f,c
  1241  00117A  C00A FFDF          	movff	10,indf2
  1242                           
  1243                           ;FRAME.c: 465:     }
  1244  00117E  0012               	return		;funcret
  1245  001180                     __end_of_FRAME_SoftwareVersion:
  1246                           	opt callstack 0
  1247                           
  1248 ;; *************** function _FRAME_SensorExcitationStatus *****************
  1249 ;; Defined at:
  1250 ;;		line 43 in file "FRAME.c"
  1251 ;; Parameters:    Size  Location     Type
  1252 ;;  message         2   10[COMRAM] PTR struct .
  1253 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1254 ;; Auto vars:     Size  Location     Type
  1255 ;;  iterator_bet    2   14[COMRAM] unsigned short 
  1256 ;; Return value:  Size  Location     Type
  1257 ;;                  1    wreg      void 
  1258 ;; Registers used:
  1259 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1260 ;; Tracked objects:
  1261 ;;		On entry : 0/0
  1262 ;;		On exit  : 0/0
  1263 ;;		Unchanged: 0/0
  1264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1265 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1266 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1267 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1268 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1269 ;;Total ram usage:        6 bytes
  1270 ;; Hardware stack levels used:    1
  1271 ;; Hardware stack levels required when called:    5
  1272 ;; This function calls:
  1273 ;;		_IsInNeighbors
  1274 ;;		_LED_Clear
  1275 ;;		_LED_Error
  1276 ;;		_LOCK_Get
  1277 ;;		_LOCK_Set
  1278 ;;		_MOC_Aktualna_Temperatura
  1279 ;;		_MOC_Frame_Counter
  1280 ;;		_MOC_NOTWORK
  1281 ;;		_MOC_Wynikowa_wartosc_roznicowa
  1282 ;; This function is called by:
  1283 ;;		_FRAME_HandleCanFrame
  1284 ;; This function uses a non-reentrant model
  1285 ;;
  1286                           
  1287                           	psect	text4
  1288  000BA6                     __ptext4:
  1289                           	opt callstack 0
  1290  000BA6                     _FRAME_SensorExcitationStatus:
  1291                           	opt callstack 23
  1292                           
  1293                           ;FRAME.c: 43: static void FRAME_SensorExcitationStatus(mID *message);FRAME.c: 44: {;FRAM
      +                          E.c: 45:     if(message->message_type == 0x02)
  1294                           
  1295                           ;incstack = 0
  1296  000BA6  EE20 F001          	lfsr	2,1
  1297  000BAA  500B               	movf	FRAME_SensorExcitationStatus@message,w,c
  1298  000BAC  26D9               	addwf	fsr2l,f,c
  1299  000BAE  500C               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1300  000BB0  22DA               	addwfc	fsr2h,f,c
  1301  000BB2  0E02               	movlw	2
  1302  000BB4  18DE               	xorwf	postinc2,w,c
  1303  000BB6  A4D8               	btfss	status,2,c
  1304  000BB8  D047               	goto	l2773
  1305                           
  1306                           ;FRAME.c: 46:     {;FRAME.c: 47:         message->data_length = 6;
  1307  000BBA  EE20 F010          	lfsr	2,16
  1308  000BBE  500B               	movf	FRAME_SensorExcitationStatus@message,w,c
  1309  000BC0  26D9               	addwf	fsr2l,f,c
  1310  000BC2  500C               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1311  000BC4  22DA               	addwfc	fsr2h,f,c
  1312  000BC6  0E06               	movlw	6
  1313  000BC8  6EDF               	movwf	indf2,c
  1314                           
  1315                           ;FRAME.c: 53:         message->data[0] = LOCK_Get();
  1316  000BCA  EE20 F008          	lfsr	2,8
  1317  000BCE  500B               	movf	FRAME_SensorExcitationStatus@message,w,c
  1318  000BD0  26D9               	addwf	fsr2l,f,c
  1319  000BD2  500C               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1320  000BD4  22DA               	addwfc	fsr2h,f,c
  1321  000BD6  EC7E  F00B         	call	_LOCK_Get	;wreg free
  1322  000BDA  6EDF               	movwf	indf2,c
  1323                           
  1324                           ;FRAME.c: 54:         message->data[1] = MOC_Wynikowa_wartosc_roznicowa() >> 8 ;
  1325  000BDC  EE20 F009          	lfsr	2,9
  1326  000BE0  500B               	movf	FRAME_SensorExcitationStatus@message,w,c
  1327  000BE2  26D9               	addwf	fsr2l,f,c
  1328  000BE4  500C               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1329  000BE6  22DA               	addwfc	fsr2h,f,c
  1330  000BE8  EC41  F00B         	call	_MOC_Wynikowa_wartosc_roznicowa	;wreg free
  1331  000BEC  C007  F006         	movff	?_MOC_Wynikowa_wartosc_roznicowa+1,?_MOC_Wynikowa_wartosc_roznicowa
  1332  000BF0  6A07               	clrf	?_MOC_Wynikowa_wartosc_roznicowa+1,c
  1333  000BF2  5006               	movf	?_MOC_Wynikowa_wartosc_roznicowa,w,c
  1334  000BF4  6EDF               	movwf	indf2,c
  1335                           
  1336                           ;FRAME.c: 55:         message->data[2] = MOC_Wynikowa_wartosc_roznicowa() & 0x00FF;
  1337  000BF6  EE20 F00A          	lfsr	2,10
  1338  000BFA  500B               	movf	FRAME_SensorExcitationStatus@message,w,c
  1339  000BFC  26D9               	addwf	fsr2l,f,c
  1340  000BFE  500C               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1341  000C00  22DA               	addwfc	fsr2h,f,c
  1342  000C02  EC41  F00B         	call	_MOC_Wynikowa_wartosc_roznicowa	;wreg free
  1343  000C06  5006               	movf	?_MOC_Wynikowa_wartosc_roznicowa,w,c
  1344  000C08  6EDF               	movwf	indf2,c
  1345                           
  1346                           ;FRAME.c: 56:         message->data[3] = MOC_Frame_Counter();
  1347  000C0A  EE20 F00B          	lfsr	2,11
  1348  000C0E  500B               	movf	FRAME_SensorExcitationStatus@message,w,c
  1349  000C10  26D9               	addwf	fsr2l,f,c
  1350  000C12  500C               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1351  000C14  22DA               	addwfc	fsr2h,f,c
  1352  000C16  EC33  F00B         	call	_MOC_Frame_Counter	;wreg free
  1353  000C1A  5006               	movf	?_MOC_Frame_Counter,w,c
  1354  000C1C  6EDF               	movwf	indf2,c
  1355                           
  1356                           ;FRAME.c: 57:         message->data[4] = MOC_Aktualna_Temperatura();
  1357  000C1E  EE20 F00C          	lfsr	2,12
  1358  000C22  500B               	movf	FRAME_SensorExcitationStatus@message,w,c
  1359  000C24  26D9               	addwf	fsr2l,f,c
  1360  000C26  500C               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1361  000C28  22DA               	addwfc	fsr2h,f,c
  1362  000C2A  EC46  F00B         	call	_MOC_Aktualna_Temperatura	;wreg free
  1363  000C2E  5006               	movf	?_MOC_Aktualna_Temperatura,w,c
  1364  000C30  6EDF               	movwf	indf2,c
  1365                           
  1366                           ;FRAME.c: 58:         message->data[5] = MOC_NOTWORK();
  1367  000C32  EE20 F00D          	lfsr	2,13
  1368  000C36  500B               	movf	FRAME_SensorExcitationStatus@message,w,c
  1369  000C38  26D9               	addwf	fsr2l,f,c
  1370  000C3A  500C               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1371  000C3C  22DA               	addwfc	fsr2h,f,c
  1372  000C3E  EC73  F00B         	call	_MOC_NOTWORK	;wreg free
  1373  000C42  5006               	movf	?_MOC_NOTWORK,w,c
  1374  000C44  6EDF               	movwf	indf2,c
  1375                           
  1376                           ;FRAME.c: 68:     }
  1377  000C46  0012               	return	
  1378  000C48                     l2773:
  1379                           
  1380                           ;FRAME.c: 70:     {;FRAME.c: 72:         WORD iterator_beta;;FRAME.c: 75:         if(IsI
      +                          nNeighbors(12))
  1381  000C48  0E00               	movlw	0
  1382  000C4A  6E07               	movwf	IsInNeighbors@message_adress+1,c
  1383  000C4C  0E0C               	movlw	12
  1384  000C4E  6E06               	movwf	IsInNeighbors@message_adress,c
  1385  000C50  EC16  F008         	call	_IsInNeighbors	;wreg free
  1386  000C54  0900               	iorlw	0
  1387  000C56  B4D8               	btfsc	status,2,c
  1388  000C58  D00F               	goto	l2787
  1389                           
  1390                           ;FRAME.c: 76:         {;FRAME.c: 79:             for(iterator_beta=0;iterator_beta<400;i
      +                          terator_beta++)
  1391  000C5A  0E00               	movlw	0
  1392  000C5C  6E10               	movwf	FRAME_SensorExcitationStatus@iterator_beta+1,c
  1393  000C5E  0E00               	movlw	0
  1394  000C60  6E0F               	movwf	FRAME_SensorExcitationStatus@iterator_beta,c
  1395  000C62                     l2781:
  1396                           
  1397                           ;FRAME.c: 80:             {;FRAME.c: 81:             LED_Clear();
  1398  000C62  ECFC  F00A         	call	_LED_Clear	;wreg free
  1399                           
  1400                           ;FRAME.c: 82:             }
  1401  000C66  4A0F               	infsnz	FRAME_SensorExcitationStatus@iterator_beta,f,c
  1402  000C68  2A10               	incf	FRAME_SensorExcitationStatus@iterator_beta+1,f,c
  1403  000C6A  0E90               	movlw	144
  1404  000C6C  5C0F               	subwf	FRAME_SensorExcitationStatus@iterator_beta,w,c
  1405  000C6E  0E01               	movlw	1
  1406  000C70  5810               	subwfb	FRAME_SensorExcitationStatus@iterator_beta+1,w,c
  1407  000C72  B0D8               	btfsc	status,0,c
  1408  000C74  D00F               	goto	u1380
  1409  000C76  D7F5               	goto	l2781
  1410  000C78                     l2787:
  1411                           
  1412                           ;FRAME.c: 87:         {;FRAME.c: 89:             for(iterator_beta=0;iterator_beta<400;i
      +                          terator_beta++)
  1413  000C78  0E00               	movlw	0
  1414  000C7A  6E10               	movwf	FRAME_SensorExcitationStatus@iterator_beta+1,c
  1415  000C7C  0E00               	movlw	0
  1416  000C7E  6E0F               	movwf	FRAME_SensorExcitationStatus@iterator_beta,c
  1417  000C80                     l2793:
  1418                           
  1419                           ;FRAME.c: 90:             {;FRAME.c: 91:             LED_Error();
  1420  000C80  ECED  F00A         	call	_LED_Error	;wreg free
  1421                           
  1422                           ;FRAME.c: 92:             }
  1423  000C84  4A0F               	infsnz	FRAME_SensorExcitationStatus@iterator_beta,f,c
  1424  000C86  2A10               	incf	FRAME_SensorExcitationStatus@iterator_beta+1,f,c
  1425  000C88  0E90               	movlw	144
  1426  000C8A  5C0F               	subwf	FRAME_SensorExcitationStatus@iterator_beta,w,c
  1427  000C8C  0E01               	movlw	1
  1428  000C8E  5810               	subwfb	FRAME_SensorExcitationStatus@iterator_beta+1,w,c
  1429  000C90  A0D8               	btfss	status,0,c
  1430  000C92  D7F6               	goto	l2793
  1431  000C94                     u1380:
  1432                           
  1433                           ;FRAME.c: 96:         if(0x12b==message->id.w[0])
  1434  000C94  EE20 F004          	lfsr	2,4
  1435  000C98  500B               	movf	FRAME_SensorExcitationStatus@message,w,c
  1436  000C9A  26D9               	addwf	fsr2l,f,c
  1437  000C9C  500C               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1438  000C9E  22DA               	addwfc	fsr2h,f,c
  1439  000CA0  0E2B               	movlw	43
  1440  000CA2  18DE               	xorwf	postinc2,w,c
  1441  000CA4  E10C               	bnz	l467
  1442  000CA6  04DE               	decf	postinc2,w,c
  1443  000CA8  A4D8               	btfss	status,2,c
  1444  000CAA  0012               	return	
  1445                           
  1446                           ;FRAME.c: 97:         {;FRAME.c: 98:         LOCK_Set(message->data[0]);
  1447  000CAC  EE20 F008          	lfsr	2,8
  1448  000CB0  500B               	movf	FRAME_SensorExcitationStatus@message,w,c
  1449  000CB2  26D9               	addwf	fsr2l,f,c
  1450  000CB4  500C               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1451  000CB6  22DA               	addwfc	fsr2h,f,c
  1452  000CB8  50DF               	movf	indf2,w,c
  1453  000CBA  EC77  F00B         	call	_LOCK_Set
  1454  000CBE                     l467:
  1455  000CBE  0012               	return		;funcret
  1456  000CC0                     __end_of_FRAME_SensorExcitationStatus:
  1457                           	opt callstack 0
  1458                           
  1459 ;; *************** function _MOC_Wynikowa_wartosc_roznicowa *****************
  1460 ;; Defined at:
  1461 ;;		line 33 in file "MOC_Funct.c"
  1462 ;; Parameters:    Size  Location     Type
  1463 ;;		None
  1464 ;; Auto vars:     Size  Location     Type
  1465 ;;		None
  1466 ;; Return value:  Size  Location     Type
  1467 ;;                  2    5[COMRAM] unsigned int 
  1468 ;; Registers used:
  1469 ;;		wreg, status,2
  1470 ;; Tracked objects:
  1471 ;;		On entry : 0/0
  1472 ;;		On exit  : 0/0
  1473 ;;		Unchanged: 0/0
  1474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1475 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1478 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1479 ;;Total ram usage:        2 bytes
  1480 ;; Hardware stack levels used:    1
  1481 ;; Hardware stack levels required when called:    3
  1482 ;; This function calls:
  1483 ;;		Nothing
  1484 ;; This function is called by:
  1485 ;;		_FRAME_SensorExcitationStatus
  1486 ;; This function uses a non-reentrant model
  1487 ;;
  1488                           
  1489                           	psect	text5
  1490  001682                     __ptext5:
  1491                           	opt callstack 0
  1492  001682                     _MOC_Wynikowa_wartosc_roznicowa:
  1493                           	opt callstack 24
  1494                           
  1495                           ;MOC_Funct.c: 35:     return 0x0220;
  1496                           
  1497                           ;incstack = 0
  1498  001682  0E02               	movlw	2
  1499  001684  6E07               	movwf	?_MOC_Wynikowa_wartosc_roznicowa+1,c
  1500  001686  0E20               	movlw	32
  1501  001688  6E06               	movwf	?_MOC_Wynikowa_wartosc_roznicowa,c
  1502  00168A  0012               	return		;funcret
  1503  00168C                     __end_of_MOC_Wynikowa_wartosc_roznicowa:
  1504                           	opt callstack 0
  1505                           
  1506 ;; *************** function _MOC_NOTWORK *****************
  1507 ;; Defined at:
  1508 ;;		line 47 in file "MOC_Funct.c"
  1509 ;; Parameters:    Size  Location     Type
  1510 ;;		None
  1511 ;; Auto vars:     Size  Location     Type
  1512 ;;		None
  1513 ;; Return value:  Size  Location     Type
  1514 ;;                  2    5[COMRAM] unsigned int 
  1515 ;; Registers used:
  1516 ;;		wreg, status,2
  1517 ;; Tracked objects:
  1518 ;;		On entry : 0/0
  1519 ;;		On exit  : 0/0
  1520 ;;		Unchanged: 0/0
  1521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1522 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1525 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1526 ;;Total ram usage:        2 bytes
  1527 ;; Hardware stack levels used:    1
  1528 ;; Hardware stack levels required when called:    3
  1529 ;; This function calls:
  1530 ;;		Nothing
  1531 ;; This function is called by:
  1532 ;;		_FRAME_SensorExcitationStatus
  1533 ;; This function uses a non-reentrant model
  1534 ;;
  1535                           
  1536                           	psect	text6
  1537  0016E6                     __ptext6:
  1538                           	opt callstack 0
  1539  0016E6                     _MOC_NOTWORK:
  1540                           	opt callstack 24
  1541                           
  1542                           ;MOC_Funct.c: 49:     return 0xFF;
  1543                           
  1544                           ;incstack = 0
  1545  0016E6  0E00               	movlw	0
  1546  0016E8  6E07               	movwf	?_MOC_NOTWORK+1,c
  1547  0016EA  6806               	setf	?_MOC_NOTWORK,c
  1548  0016EC  0012               	return		;funcret
  1549  0016EE                     __end_of_MOC_NOTWORK:
  1550                           	opt callstack 0
  1551                           
  1552 ;; *************** function _MOC_Frame_Counter *****************
  1553 ;; Defined at:
  1554 ;;		line 38 in file "MOC_Funct.c"
  1555 ;; Parameters:    Size  Location     Type
  1556 ;;		None
  1557 ;; Auto vars:     Size  Location     Type
  1558 ;;		None
  1559 ;; Return value:  Size  Location     Type
  1560 ;;                  2    5[COMRAM] unsigned int 
  1561 ;; Registers used:
  1562 ;;		wreg, status,2, status,0
  1563 ;; Tracked objects:
  1564 ;;		On entry : 0/0
  1565 ;;		On exit  : 0/0
  1566 ;;		Unchanged: 0/0
  1567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1568 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1571 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1572 ;;Total ram usage:        2 bytes
  1573 ;; Hardware stack levels used:    1
  1574 ;; Hardware stack levels required when called:    3
  1575 ;; This function calls:
  1576 ;;		Nothing
  1577 ;; This function is called by:
  1578 ;;		_FRAME_SensorExcitationStatus
  1579 ;; This function uses a non-reentrant model
  1580 ;;
  1581                           
  1582                           	psect	text7
  1583  001666                     __ptext7:
  1584                           	opt callstack 0
  1585  001666                     _MOC_Frame_Counter:
  1586                           	opt callstack 24
  1587                           
  1588                           ;MOC_Funct.c: 40:     static UINT zeta = 0x11;;MOC_Funct.c: 41:     return zeta++;
  1589                           
  1590                           ;incstack = 0
  1591  001666  5050               	movf	MOC_Frame_Counter@zeta,w,c
  1592  001668  6E06               	movwf	?_MOC_Frame_Counter,c
  1593  00166A  5051               	movf	MOC_Frame_Counter@zeta+1,w,c
  1594  00166C  6E07               	movwf	?_MOC_Frame_Counter+1,c
  1595  00166E  4A50               	infsnz	MOC_Frame_Counter@zeta,f,c
  1596  001670  2A51               	incf	MOC_Frame_Counter@zeta+1,f,c
  1597  001672  0012               	return		;funcret
  1598  001674                     __end_of_MOC_Frame_Counter:
  1599                           	opt callstack 0
  1600                           
  1601 ;; *************** function _MOC_Aktualna_Temperatura *****************
  1602 ;; Defined at:
  1603 ;;		line 43 in file "MOC_Funct.c"
  1604 ;; Parameters:    Size  Location     Type
  1605 ;;		None
  1606 ;; Auto vars:     Size  Location     Type
  1607 ;;		None
  1608 ;; Return value:  Size  Location     Type
  1609 ;;                  2    5[COMRAM] unsigned int 
  1610 ;; Registers used:
  1611 ;;		wreg, status,2
  1612 ;; Tracked objects:
  1613 ;;		On entry : 0/0
  1614 ;;		On exit  : 0/0
  1615 ;;		Unchanged: 0/0
  1616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1617 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1620 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1621 ;;Total ram usage:        2 bytes
  1622 ;; Hardware stack levels used:    1
  1623 ;; Hardware stack levels required when called:    3
  1624 ;; This function calls:
  1625 ;;		Nothing
  1626 ;; This function is called by:
  1627 ;;		_FRAME_SensorExcitationStatus
  1628 ;; This function uses a non-reentrant model
  1629 ;;
  1630                           
  1631                           	psect	text8
  1632  00168C                     __ptext8:
  1633                           	opt callstack 0
  1634  00168C                     _MOC_Aktualna_Temperatura:
  1635                           	opt callstack 24
  1636                           
  1637                           ;MOC_Funct.c: 45:     return 0x1B;
  1638                           
  1639                           ;incstack = 0
  1640  00168C  0E00               	movlw	0
  1641  00168E  6E07               	movwf	?_MOC_Aktualna_Temperatura+1,c
  1642  001690  0E1B               	movlw	27
  1643  001692  6E06               	movwf	?_MOC_Aktualna_Temperatura,c
  1644  001694  0012               	return		;funcret
  1645  001696                     __end_of_MOC_Aktualna_Temperatura:
  1646                           	opt callstack 0
  1647                           
  1648 ;; *************** function _LOCK_Set *****************
  1649 ;; Defined at:
  1650 ;;		line 52 in file "LED.c"
  1651 ;; Parameters:    Size  Location     Type
  1652 ;;  k               1    wreg     unsigned char 
  1653 ;; Auto vars:     Size  Location     Type
  1654 ;;  k               1    5[COMRAM] unsigned char 
  1655 ;; Return value:  Size  Location     Type
  1656 ;;                  1    wreg      void 
  1657 ;; Registers used:
  1658 ;;		wreg
  1659 ;; Tracked objects:
  1660 ;;		On entry : 0/0
  1661 ;;		On exit  : 0/0
  1662 ;;		Unchanged: 0/0
  1663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1665 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1667 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1668 ;;Total ram usage:        1 bytes
  1669 ;; Hardware stack levels used:    1
  1670 ;; Hardware stack levels required when called:    3
  1671 ;; This function calls:
  1672 ;;		Nothing
  1673 ;; This function is called by:
  1674 ;;		_FRAME_SensorExcitationStatus
  1675 ;; This function uses a non-reentrant model
  1676 ;;
  1677                           
  1678                           	psect	text9
  1679  0016EE                     __ptext9:
  1680                           	opt callstack 0
  1681  0016EE                     _LOCK_Set:
  1682                           	opt callstack 24
  1683                           
  1684                           ;incstack = 0
  1685                           ;LOCK_Set@k stored from wreg
  1686  0016EE  6E06               	movwf	LOCK_Set@k,c
  1687                           
  1688                           ;LED.c: 52: void LOCK_Set(BYTE k);LED.c: 53: {;LED.c: 54:     LOCK = k;
  1689  0016F0  C006  F04F         	movff	LOCK_Set@k,_LOCK
  1690  0016F4  0012               	return		;funcret
  1691  0016F6                     __end_of_LOCK_Set:
  1692                           	opt callstack 0
  1693                           
  1694 ;; *************** function _LOCK_Get *****************
  1695 ;; Defined at:
  1696 ;;		line 57 in file "LED.c"
  1697 ;; Parameters:    Size  Location     Type
  1698 ;;		None
  1699 ;; Auto vars:     Size  Location     Type
  1700 ;;		None
  1701 ;; Return value:  Size  Location     Type
  1702 ;;                  1    wreg      unsigned char 
  1703 ;; Registers used:
  1704 ;;		wreg, status,2
  1705 ;; Tracked objects:
  1706 ;;		On entry : 0/0
  1707 ;;		On exit  : 0/0
  1708 ;;		Unchanged: 0/0
  1709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1714 ;;Total ram usage:        0 bytes
  1715 ;; Hardware stack levels used:    1
  1716 ;; Hardware stack levels required when called:    3
  1717 ;; This function calls:
  1718 ;;		Nothing
  1719 ;; This function is called by:
  1720 ;;		_FRAME_SensorExcitationStatus
  1721 ;; This function uses a non-reentrant model
  1722 ;;
  1723                           
  1724                           	psect	text10
  1725  0016FC                     __ptext10:
  1726                           	opt callstack 0
  1727  0016FC                     _LOCK_Get:
  1728                           	opt callstack 24
  1729                           
  1730                           ;LED.c: 59:     return LOCK;
  1731                           
  1732                           ;incstack = 0
  1733  0016FC  504F               	movf	_LOCK,w,c
  1734  0016FE  0012               	return		;funcret
  1735  001700                     __end_of_LOCK_Get:
  1736                           	opt callstack 0
  1737                           
  1738 ;; *************** function _LED_Error *****************
  1739 ;; Defined at:
  1740 ;;		line 37 in file "LED.c"
  1741 ;; Parameters:    Size  Location     Type
  1742 ;;		None
  1743 ;; Auto vars:     Size  Location     Type
  1744 ;;		None
  1745 ;; Return value:  Size  Location     Type
  1746 ;;                  2  265[None  ] unsigned int 
  1747 ;; Registers used:
  1748 ;;		wreg, status,2, status,0, cstack
  1749 ;; Tracked objects:
  1750 ;;		On entry : 0/0
  1751 ;;		On exit  : 0/0
  1752 ;;		Unchanged: 0/0
  1753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1758 ;;Total ram usage:        0 bytes
  1759 ;; Hardware stack levels used:    1
  1760 ;; Hardware stack levels required when called:    4
  1761 ;; This function calls:
  1762 ;;		_LED_Control
  1763 ;; This function is called by:
  1764 ;;		_FRAME_SensorExcitationStatus
  1765 ;;		_FRAME_HandleCanFrame
  1766 ;; This function uses a non-reentrant model
  1767 ;;
  1768                           
  1769                           	psect	text11
  1770  0015DA                     __ptext11:
  1771                           	opt callstack 0
  1772  0015DA                     _LED_Error:
  1773                           	opt callstack 24
  1774                           
  1775                           ;LED.c: 39:     LED_Control(RED,0b1010101010);
  1776                           
  1777                           ;incstack = 0
  1778  0015DA  0E02               	movlw	2
  1779  0015DC  6E07               	movwf	LED_Control@diode+1,c
  1780  0015DE  0EAA               	movlw	170
  1781  0015E0  6E06               	movwf	LED_Control@diode,c
  1782  0015E2  0E00               	movlw	0
  1783  0015E4  EC8C  F004         	call	_LED_Control
  1784                           
  1785                           ;LED.c: 40:     LED_Control(GREEN,0b0000000000);
  1786  0015E8  0E00               	movlw	0
  1787  0015EA  6E07               	movwf	LED_Control@diode+1,c
  1788  0015EC  0E00               	movlw	0
  1789  0015EE  6E06               	movwf	LED_Control@diode,c
  1790  0015F0  0E01               	movlw	1
  1791  0015F2  EC8C  F004         	call	_LED_Control
  1792  0015F6  0012               	return		;funcret
  1793  0015F8                     __end_of_LED_Error:
  1794                           	opt callstack 0
  1795                           
  1796 ;; *************** function _LED_Clear *****************
  1797 ;; Defined at:
  1798 ;;		line 45 in file "LED.c"
  1799 ;; Parameters:    Size  Location     Type
  1800 ;;		None
  1801 ;; Auto vars:     Size  Location     Type
  1802 ;;		None
  1803 ;; Return value:  Size  Location     Type
  1804 ;;                  2  268[None  ] unsigned int 
  1805 ;; Registers used:
  1806 ;;		wreg, status,2, status,0, cstack
  1807 ;; Tracked objects:
  1808 ;;		On entry : 0/0
  1809 ;;		On exit  : 0/0
  1810 ;;		Unchanged: 0/0
  1811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1816 ;;Total ram usage:        0 bytes
  1817 ;; Hardware stack levels used:    1
  1818 ;; Hardware stack levels required when called:    4
  1819 ;; This function calls:
  1820 ;;		_LED_Control
  1821 ;; This function is called by:
  1822 ;;		_FRAME_SensorExcitationStatus
  1823 ;; This function uses a non-reentrant model
  1824 ;;
  1825                           
  1826                           	psect	text12
  1827  0015F8                     __ptext12:
  1828                           	opt callstack 0
  1829  0015F8                     _LED_Clear:
  1830                           	opt callstack 23
  1831                           
  1832                           ;LED.c: 47:     LED_Control(RED,0b0000000000);
  1833                           
  1834                           ;incstack = 0
  1835  0015F8  0E00               	movlw	0
  1836  0015FA  6E07               	movwf	LED_Control@diode+1,c
  1837  0015FC  0E00               	movlw	0
  1838  0015FE  6E06               	movwf	LED_Control@diode,c
  1839  001600  0E00               	movlw	0
  1840  001602  EC8C  F004         	call	_LED_Control
  1841                           
  1842                           ;LED.c: 48:     LED_Control(GREEN,0b1010101010);
  1843  001606  0E02               	movlw	2
  1844  001608  6E07               	movwf	LED_Control@diode+1,c
  1845  00160A  0EAA               	movlw	170
  1846  00160C  6E06               	movwf	LED_Control@diode,c
  1847  00160E  0E01               	movlw	1
  1848  001610  EC8C  F004         	call	_LED_Control
  1849  001614  0012               	return		;funcret
  1850  001616                     __end_of_LED_Clear:
  1851                           	opt callstack 0
  1852                           
  1853 ;; *************** function _IsInNeighbors *****************
  1854 ;; Defined at:
  1855 ;;		line 103 in file "FRAME.c"
  1856 ;; Parameters:    Size  Location     Type
  1857 ;;  message_adre    2    5[COMRAM] unsigned int 
  1858 ;; Auto vars:     Size  Location     Type
  1859 ;;  i               2    0        unsigned short 
  1860 ;; Return value:  Size  Location     Type
  1861 ;;                  1    wreg      unsigned char 
  1862 ;; Registers used:
  1863 ;;		wreg, status,2, status,0
  1864 ;; Tracked objects:
  1865 ;;		On entry : 0/0
  1866 ;;		On exit  : 0/0
  1867 ;;		Unchanged: 0/0
  1868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1869 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1872 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1873 ;;Total ram usage:        2 bytes
  1874 ;; Hardware stack levels used:    1
  1875 ;; Hardware stack levels required when called:    3
  1876 ;; This function calls:
  1877 ;;		Nothing
  1878 ;; This function is called by:
  1879 ;;		_FRAME_SensorExcitationStatus
  1880 ;; This function uses a non-reentrant model
  1881 ;;
  1882                           
  1883                           	psect	text13
  1884  00102C                     __ptext13:
  1885                           	opt callstack 0
  1886  00102C                     _IsInNeighbors:
  1887                           	opt callstack 24
  1888                           
  1889                           ;FRAME.c: 103: BYTE IsInNeighbors(UINT message_adress);FRAME.c: 104: {;FRAME.c: 105:    
      +                           WORD i;;FRAME.c: 107:     if(NeightAdress1==message_adress)
  1890                           
  1891                           ;incstack = 0
  1892  00102C  5006               	movf	IsInNeighbors@message_adress,w,c
  1893  00102E  1845               	xorwf	_NeightAdress1,w,c	;volatile
  1894  001030  E106               	bnz	l2545
  1895  001032  5007               	movf	IsInNeighbors@message_adress+1,w,c
  1896  001034  1846               	xorwf	_NeightAdress1+1,w,c	;volatile
  1897  001036  A4D8               	btfss	status,2,c
  1898  001038  D002               	goto	l2545
  1899  00103A                     u1160:
  1900                           
  1901                           ;FRAME.c: 108:     {;FRAME.c: 109:         return 1;
  1902  00103A  0E01               	movlw	1
  1903  00103C  0012               	return	
  1904  00103E                     l2545:
  1905                           
  1906                           ;FRAME.c: 111:     if(NeightAdress2==message_adress)
  1907  00103E  5006               	movf	IsInNeighbors@message_adress,w,c
  1908  001040  1843               	xorwf	_NeightAdress2,w,c	;volatile
  1909  001042  E104               	bnz	l2551
  1910  001044  5007               	movf	IsInNeighbors@message_adress+1,w,c
  1911  001046  1844               	xorwf	_NeightAdress2+1,w,c	;volatile
  1912  001048  B4D8               	btfsc	status,2,c
  1913  00104A  D7F7               	goto	u1160
  1914  00104C                     l2551:
  1915                           
  1916                           ;FRAME.c: 115:     if(NeightAdress3==message_adress)
  1917  00104C  5006               	movf	IsInNeighbors@message_adress,w,c
  1918  00104E  1841               	xorwf	_NeightAdress3,w,c	;volatile
  1919  001050  E104               	bnz	l2557
  1920  001052  5007               	movf	IsInNeighbors@message_adress+1,w,c
  1921  001054  1842               	xorwf	_NeightAdress3+1,w,c	;volatile
  1922  001056  B4D8               	btfsc	status,2,c
  1923  001058  D7F0               	goto	u1160
  1924  00105A                     l2557:
  1925                           
  1926                           ;FRAME.c: 119:     if(NeightAdress4==message_adress)
  1927  00105A  5006               	movf	IsInNeighbors@message_adress,w,c
  1928  00105C  183F               	xorwf	_NeightAdress4,w,c	;volatile
  1929  00105E  E104               	bnz	l2563
  1930  001060  5007               	movf	IsInNeighbors@message_adress+1,w,c
  1931  001062  1840               	xorwf	_NeightAdress4+1,w,c	;volatile
  1932  001064  B4D8               	btfsc	status,2,c
  1933  001066  D7E9               	goto	u1160
  1934  001068                     l2563:
  1935                           
  1936                           ;FRAME.c: 123:     if(NeightAdress5==message_adress)
  1937  001068  5006               	movf	IsInNeighbors@message_adress,w,c
  1938  00106A  183D               	xorwf	_NeightAdress5,w,c	;volatile
  1939  00106C  E104               	bnz	l2569
  1940  00106E  5007               	movf	IsInNeighbors@message_adress+1,w,c
  1941  001070  183E               	xorwf	_NeightAdress5+1,w,c	;volatile
  1942  001072  B4D8               	btfsc	status,2,c
  1943  001074  D7E2               	goto	u1160
  1944  001076                     l2569:
  1945                           
  1946                           ;FRAME.c: 127:     if(NeightAdress6==message_adress)
  1947  001076  5006               	movf	IsInNeighbors@message_adress,w,c
  1948  001078  183B               	xorwf	_NeightAdress6,w,c	;volatile
  1949  00107A  E104               	bnz	l2575
  1950  00107C  5007               	movf	IsInNeighbors@message_adress+1,w,c
  1951  00107E  183C               	xorwf	_NeightAdress6+1,w,c	;volatile
  1952  001080  B4D8               	btfsc	status,2,c
  1953  001082  D7DB               	goto	u1160
  1954  001084                     l2575:
  1955                           
  1956                           ;FRAME.c: 131:     if(NeightAdress7==message_adress)
  1957  001084  5006               	movf	IsInNeighbors@message_adress,w,c
  1958  001086  1839               	xorwf	_NeightAdress7,w,c	;volatile
  1959  001088  E104               	bnz	l2581
  1960  00108A  5007               	movf	IsInNeighbors@message_adress+1,w,c
  1961  00108C  183A               	xorwf	_NeightAdress7+1,w,c	;volatile
  1962  00108E  B4D8               	btfsc	status,2,c
  1963  001090  D7D4               	goto	u1160
  1964  001092                     l2581:
  1965                           
  1966                           ;FRAME.c: 135:     if(NeightAdress8==message_adress)
  1967  001092  5006               	movf	IsInNeighbors@message_adress,w,c
  1968  001094  1837               	xorwf	_NeightAdress8,w,c	;volatile
  1969  001096  E104               	bnz	l2587
  1970  001098  5007               	movf	IsInNeighbors@message_adress+1,w,c
  1971  00109A  1838               	xorwf	_NeightAdress8+1,w,c	;volatile
  1972  00109C  B4D8               	btfsc	status,2,c
  1973  00109E  D7CD               	goto	u1160
  1974  0010A0                     l2587:
  1975                           
  1976                           ;FRAME.c: 153:     return 0;
  1977  0010A0  0E00               	movlw	0
  1978  0010A2  0012               	return		;funcret
  1979  0010A4                     __end_of_IsInNeighbors:
  1980                           	opt callstack 0
  1981                           
  1982 ;; *************** function _FRAME_PrzypisanieDokarty *****************
  1983 ;; Defined at:
  1984 ;;		line 504 in file "FRAME.c"
  1985 ;; Parameters:    Size  Location     Type
  1986 ;;  message         2    5[COMRAM] PTR struct .
  1987 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1988 ;; Auto vars:     Size  Location     Type
  1989 ;;		None
  1990 ;; Return value:  Size  Location     Type
  1991 ;;                  1    wreg      void 
  1992 ;; Registers used:
  1993 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1994 ;; Tracked objects:
  1995 ;;		On entry : 0/0
  1996 ;;		On exit  : 0/0
  1997 ;;		Unchanged: 0/0
  1998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1999 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2001 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2002 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2003 ;;Total ram usage:        6 bytes
  2004 ;; Hardware stack levels used:    1
  2005 ;; Hardware stack levels required when called:    3
  2006 ;; This function calls:
  2007 ;;		Nothing
  2008 ;; This function is called by:
  2009 ;;		_FRAME_HandleCanFrame
  2010 ;; This function uses a non-reentrant model
  2011 ;;
  2012                           
  2013                           	psect	text14
  2014  000D70                     __ptext14:
  2015                           	opt callstack 0
  2016  000D70                     _FRAME_PrzypisanieDokarty:
  2017                           	opt callstack 25
  2018                           
  2019                           ;FRAME.c: 504: static void FRAME_PrzypisanieDokarty(mID *message);FRAME.c: 505: {;FRAME.
      +                          c: 506:     if(message->message_type == 0x02)
  2020                           
  2021                           ;incstack = 0
  2022  000D70  EE20 F001          	lfsr	2,1
  2023  000D74  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2024  000D76  26D9               	addwf	fsr2l,f,c
  2025  000D78  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2026  000D7A  22DA               	addwfc	fsr2h,f,c
  2027  000D7C  0E02               	movlw	2
  2028  000D7E  18DE               	xorwf	postinc2,w,c
  2029  000D80  A4D8               	btfss	status,2,c
  2030  000D82  D021               	goto	l2883
  2031                           
  2032                           ;FRAME.c: 507:     {;FRAME.c: 508:         message->data_length = 3;
  2033  000D84  EE20 F010          	lfsr	2,16
  2034  000D88  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2035  000D8A  26D9               	addwf	fsr2l,f,c
  2036  000D8C  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2037  000D8E  22DA               	addwfc	fsr2h,f,c
  2038  000D90  0E03               	movlw	3
  2039  000D92  6EDF               	movwf	indf2,c
  2040                           
  2041                           ;FRAME.c: 509:         message->data[0] = (unsigned char)Dane->NrKarty >> 8 ;
  2042  000D94  EE20 F008          	lfsr	2,8
  2043  000D98  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2044  000D9A  26D9               	addwf	fsr2l,f,c
  2045  000D9C  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2046  000D9E  22DA               	addwfc	fsr2h,f,c
  2047  000DA0  0E00               	movlw	0
  2048  000DA2  6EDF               	movwf	indf2,c
  2049                           
  2050                           ;FRAME.c: 510:         message->data[1] = (unsigned char)Dane->NrKarty ;
  2051  000DA4  EE20 F009          	lfsr	2,9
  2052  000DA8  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2053  000DAA  26D9               	addwf	fsr2l,f,c
  2054  000DAC  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2055  000DAE  22DA               	addwfc	fsr2h,f,c
  2056  000DB0  C040 FFDF          	movff	64,indf2
  2057                           
  2058                           ;FRAME.c: 511:         message->data[2] = (unsigned char)Dane->Nr_WeWy ;
  2059  000DB4  EE20 F00A          	lfsr	2,10
  2060  000DB8  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2061  000DBA  26D9               	addwf	fsr2l,f,c
  2062  000DBC  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2063  000DBE  22DA               	addwfc	fsr2h,f,c
  2064  000DC0  C042 FFDF          	movff	66,indf2
  2065                           
  2066                           ;FRAME.c: 513:     }
  2067  000DC4  0012               	return	
  2068  000DC6                     l2883:
  2069                           
  2070                           ;FRAME.c: 515:     {;FRAME.c: 516:          Dane->NrKarty = (message->data[0] << 8) | (m
      +                          essage->data[1]);
  2071  000DC6  EE20 F008          	lfsr	2,8
  2072  000DCA  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2073  000DCC  26D9               	addwf	fsr2l,f,c
  2074  000DCE  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2075  000DD0  22DA               	addwfc	fsr2h,f,c
  2076  000DD2  50DF               	movf	indf2,w,c
  2077  000DD4  6E08               	movwf	??_FRAME_PrzypisanieDokarty& (0+255),c
  2078  000DD6  5008               	movf	??_FRAME_PrzypisanieDokarty,w,c
  2079  000DD8  6E0A               	movwf	(??_FRAME_PrzypisanieDokarty+2)& (0+255),c
  2080  000DDA  6A09               	clrf	(??_FRAME_PrzypisanieDokarty+1)& (0+255),c
  2081  000DDC  EE20 F009          	lfsr	2,9
  2082  000DE0  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2083  000DE2  26D9               	addwf	fsr2l,f,c
  2084  000DE4  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2085  000DE6  22DA               	addwfc	fsr2h,f,c
  2086  000DE8  50DF               	movf	indf2,w,c
  2087  000DEA  6E0B               	movwf	(??_FRAME_PrzypisanieDokarty+3)& (0+255),c
  2088  000DEC  500B               	movf	??_FRAME_PrzypisanieDokarty+3,w,c
  2089  000DEE  1009               	iorwf	??_FRAME_PrzypisanieDokarty+1,w,c
  2090  000DF0  6E40               	movwf	64,c
  2091  000DF2  500A               	movf	??_FRAME_PrzypisanieDokarty+2,w,c
  2092  000DF4  6E41               	movwf	65,c
  2093                           
  2094                           ;FRAME.c: 517:          Dane->Nr_WeWy = (message->data[2]);
  2095  000DF6  EE20 F00A          	lfsr	2,10
  2096  000DFA  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2097  000DFC  26D9               	addwf	fsr2l,f,c
  2098  000DFE  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2099  000E00  22DA               	addwfc	fsr2h,f,c
  2100  000E02  50DF               	movf	indf2,w,c
  2101  000E04  6E08               	movwf	??_FRAME_PrzypisanieDokarty& (0+255),c
  2102  000E06  5008               	movf	??_FRAME_PrzypisanieDokarty,w,c
  2103  000E08  6E42               	movwf	66,c
  2104  000E0A  6A43               	clrf	67,c
  2105  000E0C  0012               	return		;funcret
  2106  000E0E                     __end_of_FRAME_PrzypisanieDokarty:
  2107                           	opt callstack 0
  2108                           
  2109 ;; *************** function _FRAME_Plot *****************
  2110 ;; Defined at:
  2111 ;;		line 409 in file "FRAME.c"
  2112 ;; Parameters:    Size  Location     Type
  2113 ;;  message         2   12[COMRAM] PTR struct .
  2114 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2115 ;; Auto vars:     Size  Location     Type
  2116 ;;		None
  2117 ;; Return value:  Size  Location     Type
  2118 ;;                  1    wreg      void 
  2119 ;; Registers used:
  2120 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2121 ;; Tracked objects:
  2122 ;;		On entry : 0/0
  2123 ;;		On exit  : 0/0
  2124 ;;		Unchanged: 0/0
  2125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2126 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2128 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2129 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2130 ;;Total ram usage:        3 bytes
  2131 ;; Hardware stack levels used:    1
  2132 ;; Hardware stack levels required when called:    4
  2133 ;; This function calls:
  2134 ;;		___lwdiv
  2135 ;; This function is called by:
  2136 ;;		_FRAME_HandleCanFrame
  2137 ;; This function uses a non-reentrant model
  2138 ;;
  2139                           
  2140                           	psect	text15
  2141  001290                     __ptext15:
  2142                           	opt callstack 0
  2143  001290                     _FRAME_Plot:
  2144                           	opt callstack 24
  2145                           
  2146                           ;FRAME.c: 409: static void FRAME_Plot(mID *message);FRAME.c: 410: {;FRAME.c: 412:     if
      +                          (message->message_type == 0x02)
  2147                           
  2148                           ;incstack = 0
  2149  001290  EE20 F001          	lfsr	2,1
  2150  001294  500D               	movf	FRAME_Plot@message,w,c
  2151  001296  26D9               	addwf	fsr2l,f,c
  2152  001298  500E               	movf	FRAME_Plot@message+1,w,c
  2153  00129A  22DA               	addwfc	fsr2h,f,c
  2154  00129C  0E02               	movlw	2
  2155  00129E  18DE               	xorwf	postinc2,w,c
  2156  0012A0  A4D8               	btfss	status,2,c
  2157  0012A2  D013               	goto	l2873
  2158                           
  2159                           ;FRAME.c: 413:     {;FRAME.c: 414:         message->data[0] = (BYTE)(Dane->timerRysowani
      +                          aWykresuU16/10);
  2160  0012A4  EE20 F008          	lfsr	2,8
  2161  0012A8  500D               	movf	FRAME_Plot@message,w,c
  2162  0012AA  26D9               	addwf	fsr2l,f,c
  2163  0012AC  500E               	movf	FRAME_Plot@message+1,w,c
  2164  0012AE  22DA               	addwfc	fsr2h,f,c
  2165  0012B0  C00C F006          	movff	12,___lwdiv@dividend
  2166  0012B4  C00D F007          	movff	13,___lwdiv@dividend+1
  2167  0012B8  0E00               	movlw	0
  2168  0012BA  6E09               	movwf	___lwdiv@divisor+1,c
  2169  0012BC  0E0A               	movlw	10
  2170  0012BE  6E08               	movwf	___lwdiv@divisor,c
  2171  0012C0  EC74  F009         	call	___lwdiv	;wreg free
  2172  0012C4  5006               	movf	?___lwdiv,w,c
  2173  0012C6  6EDF               	movwf	indf2,c
  2174                           
  2175                           ;FRAME.c: 415:     }
  2176  0012C8  0012               	return	
  2177  0012CA                     l2873:
  2178                           
  2179                           ;FRAME.c: 417:     {;FRAME.c: 418:         Dane->timerRysowaniaWykresuU16 = (WORD)messag
      +                          e->data[0]*10;
  2180  0012CA  EE20 F008          	lfsr	2,8
  2181  0012CE  500D               	movf	FRAME_Plot@message,w,c
  2182  0012D0  26D9               	addwf	fsr2l,f,c
  2183  0012D2  500E               	movf	FRAME_Plot@message+1,w,c
  2184  0012D4  22DA               	addwfc	fsr2h,f,c
  2185  0012D6  50DF               	movf	indf2,w,c
  2186  0012D8  6E0F               	movwf	??_FRAME_Plot& (0+255),c
  2187  0012DA  500F               	movf	??_FRAME_Plot,w,c
  2188  0012DC  0D0A               	mullw	10
  2189  0012DE  CFF3 F00C          	movff	prodl,12
  2190  0012E2  CFF4 F00D          	movff	prodh,13
  2191  0012E6  0012               	return		;funcret
  2192  0012E8                     __end_of_FRAME_Plot:
  2193                           	opt callstack 0
  2194                           
  2195 ;; *************** function _FRAME_MapPosition *****************
  2196 ;; Defined at:
  2197 ;;		line 430 in file "FRAME.c"
  2198 ;; Parameters:    Size  Location     Type
  2199 ;;  message         2    5[COMRAM] PTR struct .
  2200 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2201 ;; Auto vars:     Size  Location     Type
  2202 ;;		None
  2203 ;; Return value:  Size  Location     Type
  2204 ;;                  1    wreg      void 
  2205 ;; Registers used:
  2206 ;;		None
  2207 ;; Tracked objects:
  2208 ;;		On entry : 0/0
  2209 ;;		On exit  : 0/0
  2210 ;;		Unchanged: 0/0
  2211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2212 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2215 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2216 ;;Total ram usage:        2 bytes
  2217 ;; Hardware stack levels used:    1
  2218 ;; Hardware stack levels required when called:    3
  2219 ;; This function calls:
  2220 ;;		Nothing
  2221 ;; This function is called by:
  2222 ;;		_FRAME_HandleCanFrame
  2223 ;; This function uses a non-reentrant model
  2224 ;;
  2225                           
  2226                           	psect	text16
  2227  001700                     __ptext16:
  2228                           	opt callstack 0
  2229  001700                     _FRAME_MapPosition:
  2230                           	opt callstack 25
  2231                           
  2232                           ;incstack = 0
  2233  001700  0012               	return		;funcret
  2234  001702                     __end_of_FRAME_MapPosition:
  2235                           	opt callstack 0
  2236                           
  2237 ;; *************** function _FRAME_ExcitationValue *****************
  2238 ;; Defined at:
  2239 ;;		line 187 in file "FRAME.c"
  2240 ;; Parameters:    Size  Location     Type
  2241 ;;  message         2    5[COMRAM] PTR struct .
  2242 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2243 ;; Auto vars:     Size  Location     Type
  2244 ;;		None
  2245 ;; Return value:  Size  Location     Type
  2246 ;;                  1    wreg      void 
  2247 ;; Registers used:
  2248 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2249 ;; Tracked objects:
  2250 ;;		On entry : 0/0
  2251 ;;		On exit  : 0/0
  2252 ;;		Unchanged: 0/0
  2253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2254 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2256 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2257 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2258 ;;Total ram usage:        3 bytes
  2259 ;; Hardware stack levels used:    1
  2260 ;; Hardware stack levels required when called:    3
  2261 ;; This function calls:
  2262 ;;		Nothing
  2263 ;; This function is called by:
  2264 ;;		_FRAME_HandleCanFrame
  2265 ;; This function uses a non-reentrant model
  2266 ;;
  2267                           
  2268                           	psect	text17
  2269  001460                     __ptext17:
  2270                           	opt callstack 0
  2271  001460                     _FRAME_ExcitationValue:
  2272                           	opt callstack 25
  2273                           
  2274                           ;FRAME.c: 187: static void FRAME_ExcitationValue(mID *message);FRAME.c: 188: {;FRAME.c: 
      +                          189:     if(message->message_type == 0x02)
  2275                           
  2276                           ;incstack = 0
  2277  001460  EE20 F001          	lfsr	2,1
  2278  001464  5006               	movf	FRAME_ExcitationValue@message,w,c
  2279  001466  26D9               	addwf	fsr2l,f,c
  2280  001468  5007               	movf	FRAME_ExcitationValue@message+1,w,c
  2281  00146A  22DA               	addwfc	fsr2h,f,c
  2282  00146C  0E02               	movlw	2
  2283  00146E  18DE               	xorwf	postinc2,w,c
  2284  001470  A4D8               	btfss	status,2,c
  2285  001472  0012               	return	
  2286                           
  2287                           ;FRAME.c: 190:     {;FRAME.c: 191:         message->data_length = 1;
  2288  001474  EE20 F010          	lfsr	2,16
  2289  001478  5006               	movf	FRAME_ExcitationValue@message,w,c
  2290  00147A  26D9               	addwf	fsr2l,f,c
  2291  00147C  5007               	movf	FRAME_ExcitationValue@message+1,w,c
  2292  00147E  22DA               	addwfc	fsr2h,f,c
  2293  001480  0E01               	movlw	1
  2294  001482  6EDF               	movwf	indf2,c
  2295                           
  2296                           ;FRAME.c: 196:         message->data[0] = 0xFF;
  2297  001484  EE20 F008          	lfsr	2,8
  2298  001488  5006               	movf	FRAME_ExcitationValue@message,w,c
  2299  00148A  26D9               	addwf	fsr2l,f,c
  2300  00148C  5007               	movf	FRAME_ExcitationValue@message+1,w,c
  2301  00148E  22DA               	addwfc	fsr2h,f,c
  2302  001490  0EFF               	movlw	255
  2303  001492  6EDF               	movwf	indf2,c
  2304                           
  2305                           ;FRAME.c: 197:     }
  2306  001494  0012               	return		;funcret
  2307  001496                     __end_of_FRAME_ExcitationValue:
  2308                           	opt callstack 0
  2309                           
  2310 ;; *************** function _FRAME_ExcitationMultiplier *****************
  2311 ;; Defined at:
  2312 ;;		line 211 in file "FRAME.c"
  2313 ;; Parameters:    Size  Location     Type
  2314 ;;  message         2    5[COMRAM] PTR struct .
  2315 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2316 ;; Auto vars:     Size  Location     Type
  2317 ;;  i               2    8[COMRAM] unsigned short 
  2318 ;; Return value:  Size  Location     Type
  2319 ;;                  1    wreg      void 
  2320 ;; Registers used:
  2321 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2322 ;; Tracked objects:
  2323 ;;		On entry : 0/0
  2324 ;;		On exit  : 0/0
  2325 ;;		Unchanged: 0/0
  2326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2327 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2328 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2329 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2330 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2331 ;;Total ram usage:        5 bytes
  2332 ;; Hardware stack levels used:    1
  2333 ;; Hardware stack levels required when called:    3
  2334 ;; This function calls:
  2335 ;;		Nothing
  2336 ;; This function is called by:
  2337 ;;		_FRAME_HandleCanFrame
  2338 ;; This function uses a non-reentrant model
  2339 ;;
  2340                           
  2341                           	psect	text18
  2342  00133A                     __ptext18:
  2343                           	opt callstack 0
  2344  00133A                     _FRAME_ExcitationMultiplier:
  2345                           	opt callstack 25
  2346                           
  2347                           ;FRAME.c: 211: static void FRAME_ExcitationMultiplier(mID *message);FRAME.c: 212: {;FRAM
      +                          E.c: 213:     WORD i;;FRAME.c: 215:     if(message->message_type == 0x02)
  2348                           
  2349                           ;incstack = 0
  2350  00133A  EE20 F001          	lfsr	2,1
  2351  00133E  5006               	movf	FRAME_ExcitationMultiplier@message,w,c
  2352  001340  26D9               	addwf	fsr2l,f,c
  2353  001342  5007               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  2354  001344  22DA               	addwfc	fsr2h,f,c
  2355  001346  0E02               	movlw	2
  2356  001348  18DE               	xorwf	postinc2,w,c
  2357  00134A  A4D8               	btfss	status,2,c
  2358  00134C  0012               	return	
  2359                           
  2360                           ;FRAME.c: 216:     {;FRAME.c: 217:         message->data_length = 1;
  2361  00134E  EE20 F010          	lfsr	2,16
  2362  001352  5006               	movf	FRAME_ExcitationMultiplier@message,w,c
  2363  001354  26D9               	addwf	fsr2l,f,c
  2364  001356  5007               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  2365  001358  22DA               	addwfc	fsr2h,f,c
  2366  00135A  0E01               	movlw	1
  2367  00135C  6EDF               	movwf	indf2,c
  2368                           
  2369                           ;FRAME.c: 218:         for(i=0; i<3; i++)
  2370  00135E  0E00               	movlw	0
  2371  001360  6E0A               	movwf	FRAME_ExcitationMultiplier@i+1,c
  2372  001362  0E00               	movlw	0
  2373  001364  6E09               	movwf	FRAME_ExcitationMultiplier@i,c
  2374  001366                     l2829:
  2375                           
  2376                           ;FRAME.c: 219:         {;FRAME.c: 222:         }
  2377  001366  4A09               	infsnz	FRAME_ExcitationMultiplier@i,f,c
  2378  001368  2A0A               	incf	FRAME_ExcitationMultiplier@i+1,f,c
  2379  00136A  500A               	movf	FRAME_ExcitationMultiplier@i+1,w,c
  2380  00136C  E104               	bnz	u1430
  2381  00136E  0E03               	movlw	3
  2382  001370  5C09               	subwf	FRAME_ExcitationMultiplier@i,w,c
  2383  001372  A0D8               	btfss	status,0,c
  2384  001374  D7F8               	goto	l2829
  2385  001376                     u1430:
  2386                           
  2387                           ;FRAME.c: 223:         message->data[0] = 0xFF;
  2388  001376  EE20 F008          	lfsr	2,8
  2389  00137A  5006               	movf	FRAME_ExcitationMultiplier@message,w,c
  2390  00137C  26D9               	addwf	fsr2l,f,c
  2391  00137E  5007               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  2392  001380  22DA               	addwfc	fsr2h,f,c
  2393  001382  0EFF               	movlw	255
  2394  001384  6EDF               	movwf	indf2,c
  2395                           
  2396                           ;FRAME.c: 224:     }
  2397  001386  0012               	return		;funcret
  2398  001388                     __end_of_FRAME_ExcitationMultiplier:
  2399                           	opt callstack 0
  2400                           
  2401 ;; *************** function _FRAME_DeviceReset *****************
  2402 ;; Defined at:
  2403 ;;		line 345 in file "FRAME.c"
  2404 ;; Parameters:    Size  Location     Type
  2405 ;;  message         2    8[COMRAM] PTR struct .
  2406 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2407 ;; Auto vars:     Size  Location     Type
  2408 ;;		None
  2409 ;; Return value:  Size  Location     Type
  2410 ;;                  1    wreg      void 
  2411 ;; Registers used:
  2412 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2413 ;; Tracked objects:
  2414 ;;		On entry : 0/0
  2415 ;;		On exit  : 0/0
  2416 ;;		Unchanged: 0/0
  2417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2418 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2420 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2421 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2422 ;;Total ram usage:        3 bytes
  2423 ;; Hardware stack levels used:    1
  2424 ;; Hardware stack levels required when called:    4
  2425 ;; This function calls:
  2426 ;;		_FRAME_DataUpdateAndChangeOption
  2427 ;; This function is called by:
  2428 ;;		_FRAME_HandleCanFrame
  2429 ;; This function uses a non-reentrant model
  2430 ;;
  2431                           
  2432                           	psect	text19
  2433  000A6A                     __ptext19:
  2434                           	opt callstack 0
  2435  000A6A                     _FRAME_DeviceReset:
  2436                           	opt callstack 24
  2437                           
  2438                           ;FRAME.c: 345: static void FRAME_DeviceReset(mID *message);FRAME.c: 346: {;FRAME.c: 347:
      +                               if(message->message_type == 0x02)
  2439                           
  2440                           ;incstack = 0
  2441  000A6A  EE20 F001          	lfsr	2,1
  2442  000A6E  5009               	movf	FRAME_DeviceReset@message,w,c
  2443  000A70  26D9               	addwf	fsr2l,f,c
  2444  000A72  500A               	movf	FRAME_DeviceReset@message+1,w,c
  2445  000A74  22DA               	addwfc	fsr2h,f,c
  2446  000A76  0E02               	movlw	2
  2447  000A78  18DE               	xorwf	postinc2,w,c
  2448  000A7A  A4D8               	btfss	status,2,c
  2449  000A7C  D056               	goto	l2851
  2450                           
  2451                           ;FRAME.c: 348:     {;FRAME.c: 349:         message->data_length = 1;
  2452  000A7E  EE20 F010          	lfsr	2,16
  2453  000A82  5009               	movf	FRAME_DeviceReset@message,w,c
  2454  000A84  26D9               	addwf	fsr2l,f,c
  2455  000A86  500A               	movf	FRAME_DeviceReset@message+1,w,c
  2456  000A88  22DA               	addwfc	fsr2h,f,c
  2457  000A8A  0E01               	movlw	1
  2458  000A8C  6EDF               	movwf	indf2,c
  2459                           
  2460                           ;FRAME.c: 351:         message->data[0] = (RCON>>6) & 0x01;
  2461  000A8E  EE20 F008          	lfsr	2,8
  2462  000A92  5009               	movf	FRAME_DeviceReset@message,w,c
  2463  000A94  26D9               	addwf	fsr2l,f,c
  2464  000A96  500A               	movf	FRAME_DeviceReset@message+1,w,c
  2465  000A98  22DA               	addwfc	fsr2h,f,c
  2466  000A9A  44D0               	rlncf	4048,w,c	;volatile
  2467  000A9C  46E8               	rlncf	wreg,f,c
  2468  000A9E  0B03               	andlw	3
  2469  000AA0  0B01               	andlw	1
  2470  000AA2  6EDF               	movwf	indf2,c
  2471                           
  2472                           ;FRAME.c: 352:         message->data[1] = Flagi.wykonanoZapisDoFlash;
  2473  000AA4  EE20 F009          	lfsr	2,9
  2474  000AA8  5009               	movf	FRAME_DeviceReset@message,w,c
  2475  000AAA  26D9               	addwf	fsr2l,f,c
  2476  000AAC  500A               	movf	FRAME_DeviceReset@message+1,w,c
  2477  000AAE  22DA               	addwfc	fsr2h,f,c
  2478  000AB0  A82B               	btfss	_Flagi,4,c
  2479  000AB2  D002               	goto	u1470
  2480  000AB4  0E01               	movlw	1
  2481  000AB6  D001               	goto	u1476
  2482  000AB8                     u1470:
  2483  000AB8  0E00               	movlw	0
  2484  000ABA                     u1476:
  2485  000ABA  6EDF               	movwf	indf2,c
  2486                           
  2487                           ;FRAME.c: 353:         message->data[2] = Flagi.pomiarTla;
  2488  000ABC  EE20 F00A          	lfsr	2,10
  2489  000AC0  5009               	movf	FRAME_DeviceReset@message,w,c
  2490  000AC2  26D9               	addwf	fsr2l,f,c
  2491  000AC4  500A               	movf	FRAME_DeviceReset@message+1,w,c
  2492  000AC6  22DA               	addwfc	fsr2h,f,c
  2493  000AC8  A02B               	btfss	_Flagi,0,c
  2494  000ACA  D002               	goto	u1480
  2495  000ACC  0E01               	movlw	1
  2496  000ACE  D001               	goto	u1486
  2497  000AD0                     u1480:
  2498  000AD0  0E00               	movlw	0
  2499  000AD2                     u1486:
  2500  000AD2  6EDF               	movwf	indf2,c
  2501                           
  2502                           ;FRAME.c: 354:         message->data[3] = 0;
  2503  000AD4  EE20 F00B          	lfsr	2,11
  2504  000AD8  5009               	movf	FRAME_DeviceReset@message,w,c
  2505  000ADA  26D9               	addwf	fsr2l,f,c
  2506  000ADC  500A               	movf	FRAME_DeviceReset@message+1,w,c
  2507  000ADE  22DA               	addwfc	fsr2h,f,c
  2508  000AE0  0E00               	movlw	0
  2509  000AE2  6EDF               	movwf	indf2,c
  2510                           
  2511                           ;FRAME.c: 355:         message->data[4] = Dane->rokU16;
  2512  000AE4  EE20 F00C          	lfsr	2,12
  2513  000AE8  5009               	movf	FRAME_DeviceReset@message,w,c
  2514  000AEA  26D9               	addwf	fsr2l,f,c
  2515  000AEC  500A               	movf	FRAME_DeviceReset@message+1,w,c
  2516  000AEE  22DA               	addwfc	fsr2h,f,c
  2517  000AF0  C036 FFDF          	movff	54,indf2
  2518                           
  2519                           ;FRAME.c: 356:         message->data[5] = Dane->miesiacU16;
  2520  000AF4  EE20 F00D          	lfsr	2,13
  2521  000AF8  5009               	movf	FRAME_DeviceReset@message,w,c
  2522  000AFA  26D9               	addwf	fsr2l,f,c
  2523  000AFC  500A               	movf	FRAME_DeviceReset@message+1,w,c
  2524  000AFE  22DA               	addwfc	fsr2h,f,c
  2525  000B00  C038 FFDF          	movff	56,indf2
  2526                           
  2527                           ;FRAME.c: 357:         message->data[6] = Dane->dzienU16;
  2528  000B04  EE20 F00E          	lfsr	2,14
  2529  000B08  5009               	movf	FRAME_DeviceReset@message,w,c
  2530  000B0A  26D9               	addwf	fsr2l,f,c
  2531  000B0C  500A               	movf	FRAME_DeviceReset@message+1,w,c
  2532  000B0E  22DA               	addwfc	fsr2h,f,c
  2533  000B10  C03A FFDF          	movff	58,indf2
  2534                           
  2535                           ;FRAME.c: 358:         message->data[7] = Dane->godzinaU16;
  2536  000B14  EE20 F00F          	lfsr	2,15
  2537  000B18  5009               	movf	FRAME_DeviceReset@message,w,c
  2538  000B1A  26D9               	addwf	fsr2l,f,c
  2539  000B1C  500A               	movf	FRAME_DeviceReset@message+1,w,c
  2540  000B1E  22DA               	addwfc	fsr2h,f,c
  2541  000B20  C03C FFDF          	movff	60,indf2
  2542                           
  2543                           ;FRAME.c: 359:         RCON &= ~(1<<6);
  2544  000B24  9CD0               	bcf	4048,6,c	;volatile
  2545                           
  2546                           ;FRAME.c: 360:         Flagi.wykonanoZapisDoFlash = 0;
  2547  000B26  982B               	bcf	_Flagi,4,c
  2548                           
  2549                           ;FRAME.c: 374:     }
  2550  000B28  0012               	return	
  2551  000B2A                     l2851:
  2552                           
  2553                           ;FRAME.c: 376:     {;FRAME.c: 377:         message->data_length = 1;
  2554  000B2A  EE20 F010          	lfsr	2,16
  2555  000B2E  5009               	movf	FRAME_DeviceReset@message,w,c
  2556  000B30  26D9               	addwf	fsr2l,f,c
  2557  000B32  500A               	movf	FRAME_DeviceReset@message+1,w,c
  2558  000B34  22DA               	addwfc	fsr2h,f,c
  2559  000B36  0E01               	movlw	1
  2560  000B38  6EDF               	movwf	indf2,c
  2561                           
  2562                           ;FRAME.c: 379:         if(message->data[2])
  2563  000B3A  EE20 F00A          	lfsr	2,10
  2564  000B3E  5009               	movf	FRAME_DeviceReset@message,w,c
  2565  000B40  26D9               	addwf	fsr2l,f,c
  2566  000B42  500A               	movf	FRAME_DeviceReset@message+1,w,c
  2567  000B44  22DA               	addwfc	fsr2h,f,c
  2568  000B46  50DF               	movf	indf2,w,c
  2569  000B48  B4D8               	btfsc	status,2,c
  2570  000B4A  D00C               	goto	l2859
  2571                           
  2572                           ;FRAME.c: 380:         {;FRAME.c: 381:             Flagi.pomiarTla = 1;
  2573  000B4C  802B               	bsf	_Flagi,0,c
  2574                           
  2575                           ;FRAME.c: 382:             if(message->data[1])
  2576  000B4E  EE20 F009          	lfsr	2,9
  2577  000B52  5009               	movf	FRAME_DeviceReset@message,w,c
  2578  000B54  26D9               	addwf	fsr2l,f,c
  2579  000B56  500A               	movf	FRAME_DeviceReset@message+1,w,c
  2580  000B58  22DA               	addwfc	fsr2h,f,c
  2581  000B5A  50DF               	movf	indf2,w,c
  2582  000B5C  B4D8               	btfsc	status,2,c
  2583  000B5E  D01A               	goto	l2867
  2584                           
  2585                           ;FRAME.c: 383:             {;FRAME.c: 384:                 Flagi.zapisDoFlash = 1;
  2586  000B60  862B               	bsf	_Flagi,3,c
  2587  000B62  D018               	goto	l2867
  2588  000B64                     l2859:
  2589                           
  2590                           ;FRAME.c: 388:         {;FRAME.c: 389:             if(message->data[1])
  2591  000B64  EE20 F009          	lfsr	2,9
  2592  000B68  5009               	movf	FRAME_DeviceReset@message,w,c
  2593  000B6A  26D9               	addwf	fsr2l,f,c
  2594  000B6C  500A               	movf	FRAME_DeviceReset@message+1,w,c
  2595  000B6E  22DA               	addwfc	fsr2h,f,c
  2596  000B70  50DF               	movf	indf2,w,c
  2597  000B72  B4D8               	btfsc	status,2,c
  2598  000B74  D006               	goto	l2863
  2599                           
  2600                           ;FRAME.c: 390:             {;FRAME.c: 391:                 FRAME_DataUpdateAndChangeOpti
      +                          on(message);
  2601  000B76  C009  F006         	movff	FRAME_DeviceReset@message,FRAME_DataUpdateAndChangeOption@message
  2602  000B7A  C00A  F007         	movff	FRAME_DeviceReset@message+1,FRAME_DataUpdateAndChangeOption@message+1
  2603  000B7E  EC1B  F009         	call	_FRAME_DataUpdateAndChangeOption	;wreg free
  2604  000B82                     l2863:
  2605                           
  2606                           ;FRAME.c: 394:             if(message->data[0])
  2607  000B82  EE20 F008          	lfsr	2,8
  2608  000B86  5009               	movf	FRAME_DeviceReset@message,w,c
  2609  000B88  26D9               	addwf	fsr2l,f,c
  2610  000B8A  500A               	movf	FRAME_DeviceReset@message+1,w,c
  2611  000B8C  22DA               	addwfc	fsr2h,f,c
  2612  000B8E  50DF               	movf	indf2,w,c
  2613  000B90  A4D8               	btfss	status,2,c
  2614  000B92  00FF               	reset		;# 
  2615  000B94                     l2867:
  2616                           
  2617                           ;FRAME.c: 399:         message->data[0] = 0xFF;
  2618  000B94  EE20 F008          	lfsr	2,8
  2619  000B98  5009               	movf	FRAME_DeviceReset@message,w,c
  2620  000B9A  26D9               	addwf	fsr2l,f,c
  2621  000B9C  500A               	movf	FRAME_DeviceReset@message+1,w,c
  2622  000B9E  22DA               	addwfc	fsr2h,f,c
  2623  000BA0  0EFF               	movlw	255
  2624  000BA2  6EDF               	movwf	indf2,c
  2625  000BA4  0012               	return		;funcret
  2626  000BA6                     __end_of_FRAME_DeviceReset:
  2627                           	opt callstack 0
  2628                           
  2629 ;; *************** function _FRAME_DataUpdateAndChangeOption *****************
  2630 ;; Defined at:
  2631 ;;		line 329 in file "FRAME.c"
  2632 ;; Parameters:    Size  Location     Type
  2633 ;;  message         2    5[COMRAM] PTR struct .
  2634 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2635 ;; Auto vars:     Size  Location     Type
  2636 ;;		None
  2637 ;; Return value:  Size  Location     Type
  2638 ;;                  1    wreg      void 
  2639 ;; Registers used:
  2640 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2641 ;; Tracked objects:
  2642 ;;		On entry : 0/0
  2643 ;;		On exit  : 0/0
  2644 ;;		Unchanged: 0/0
  2645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2646 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2648 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2649 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2650 ;;Total ram usage:        3 bytes
  2651 ;; Hardware stack levels used:    1
  2652 ;; Hardware stack levels required when called:    3
  2653 ;; This function calls:
  2654 ;;		Nothing
  2655 ;; This function is called by:
  2656 ;;		_FRAME_DeviceReset
  2657 ;; This function uses a non-reentrant model
  2658 ;;
  2659                           
  2660                           	psect	text20
  2661  001236                     __ptext20:
  2662                           	opt callstack 0
  2663  001236                     _FRAME_DataUpdateAndChangeOption:
  2664                           	opt callstack 24
  2665                           
  2666                           ;FRAME.c: 329: static void FRAME_DataUpdateAndChangeOption(mID *message);FRAME.c: 330: {
      +                          ;FRAME.c: 332:     Dane->rokU16 = message->data[4];
  2667                           
  2668                           ;incstack = 0
  2669  001236  EE20 F00C          	lfsr	2,12
  2670  00123A  5006               	movf	FRAME_DataUpdateAndChangeOption@message,w,c
  2671  00123C  26D9               	addwf	fsr2l,f,c
  2672  00123E  5007               	movf	FRAME_DataUpdateAndChangeOption@message+1,w,c
  2673  001240  22DA               	addwfc	fsr2h,f,c
  2674  001242  50DF               	movf	indf2,w,c
  2675  001244  6E08               	movwf	??_FRAME_DataUpdateAndChangeOption& (0+255),c
  2676  001246  5008               	movf	??_FRAME_DataUpdateAndChangeOption,w,c
  2677  001248  6E36               	movwf	54,c
  2678  00124A  6A37               	clrf	55,c
  2679                           
  2680                           ;FRAME.c: 333:     Dane->miesiacU16 = message->data[5];
  2681  00124C  EE20 F00D          	lfsr	2,13
  2682  001250  5006               	movf	FRAME_DataUpdateAndChangeOption@message,w,c
  2683  001252  26D9               	addwf	fsr2l,f,c
  2684  001254  5007               	movf	FRAME_DataUpdateAndChangeOption@message+1,w,c
  2685  001256  22DA               	addwfc	fsr2h,f,c
  2686  001258  50DF               	movf	indf2,w,c
  2687  00125A  6E08               	movwf	??_FRAME_DataUpdateAndChangeOption& (0+255),c
  2688  00125C  5008               	movf	??_FRAME_DataUpdateAndChangeOption,w,c
  2689  00125E  6E38               	movwf	56,c
  2690  001260  6A39               	clrf	57,c
  2691                           
  2692                           ;FRAME.c: 334:     Dane->dzienU16 = message->data[6];
  2693  001262  EE20 F00E          	lfsr	2,14
  2694  001266  5006               	movf	FRAME_DataUpdateAndChangeOption@message,w,c
  2695  001268  26D9               	addwf	fsr2l,f,c
  2696  00126A  5007               	movf	FRAME_DataUpdateAndChangeOption@message+1,w,c
  2697  00126C  22DA               	addwfc	fsr2h,f,c
  2698  00126E  50DF               	movf	indf2,w,c
  2699  001270  6E08               	movwf	??_FRAME_DataUpdateAndChangeOption& (0+255),c
  2700  001272  5008               	movf	??_FRAME_DataUpdateAndChangeOption,w,c
  2701  001274  6E3A               	movwf	58,c
  2702  001276  6A3B               	clrf	59,c
  2703                           
  2704                           ;FRAME.c: 335:     Dane->godzinaU16 = message->data[7];
  2705  001278  EE20 F00F          	lfsr	2,15
  2706  00127C  5006               	movf	FRAME_DataUpdateAndChangeOption@message,w,c
  2707  00127E  26D9               	addwf	fsr2l,f,c
  2708  001280  5007               	movf	FRAME_DataUpdateAndChangeOption@message+1,w,c
  2709  001282  22DA               	addwfc	fsr2h,f,c
  2710  001284  50DF               	movf	indf2,w,c
  2711  001286  6E08               	movwf	??_FRAME_DataUpdateAndChangeOption& (0+255),c
  2712  001288  5008               	movf	??_FRAME_DataUpdateAndChangeOption,w,c
  2713  00128A  6E3C               	movwf	60,c
  2714  00128C  6A3D               	clrf	61,c
  2715  00128E  0012               	return		;funcret
  2716  001290                     __end_of_FRAME_DataUpdateAndChangeOption:
  2717                           	opt callstack 0
  2718                           
  2719 ;; *************** function _FRAME_AxisStatus *****************
  2720 ;; Defined at:
  2721 ;;		line 298 in file "FRAME.c"
  2722 ;; Parameters:    Size  Location     Type
  2723 ;;  message         2    5[COMRAM] PTR struct .
  2724 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2725 ;; Auto vars:     Size  Location     Type
  2726 ;;  i               2    0        unsigned short 
  2727 ;; Return value:  Size  Location     Type
  2728 ;;                  1    wreg      void 
  2729 ;; Registers used:
  2730 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2731 ;; Tracked objects:
  2732 ;;		On entry : 0/0
  2733 ;;		On exit  : 0/0
  2734 ;;		Unchanged: 0/0
  2735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2736 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2738 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2739 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2740 ;;Total ram usage:        3 bytes
  2741 ;; Hardware stack levels used:    1
  2742 ;; Hardware stack levels required when called:    3
  2743 ;; This function calls:
  2744 ;;		Nothing
  2745 ;; This function is called by:
  2746 ;;		_FRAME_HandleCanFrame
  2747 ;; This function uses a non-reentrant model
  2748 ;;
  2749                           
  2750                           	psect	text21
  2751  001496                     __ptext21:
  2752                           	opt callstack 0
  2753  001496                     _FRAME_AxisStatus:
  2754                           	opt callstack 25
  2755                           
  2756                           ;FRAME.c: 298: static void FRAME_AxisStatus(mID *message);FRAME.c: 299: {;FRAME.c: 300: 
      +                              WORD i;;FRAME.c: 302:     if(message->message_type == 0x02)
  2757                           
  2758                           ;incstack = 0
  2759  001496  EE20 F001          	lfsr	2,1
  2760  00149A  5006               	movf	FRAME_AxisStatus@message,w,c
  2761  00149C  26D9               	addwf	fsr2l,f,c
  2762  00149E  5007               	movf	FRAME_AxisStatus@message+1,w,c
  2763  0014A0  22DA               	addwfc	fsr2h,f,c
  2764  0014A2  0E02               	movlw	2
  2765  0014A4  18DE               	xorwf	postinc2,w,c
  2766  0014A6  A4D8               	btfss	status,2,c
  2767  0014A8  0012               	return	
  2768                           
  2769                           ;FRAME.c: 303:     {;FRAME.c: 304:         message->data_length = 1;
  2770  0014AA  EE20 F010          	lfsr	2,16
  2771  0014AE  5006               	movf	FRAME_AxisStatus@message,w,c
  2772  0014B0  26D9               	addwf	fsr2l,f,c
  2773  0014B2  5007               	movf	FRAME_AxisStatus@message+1,w,c
  2774  0014B4  22DA               	addwfc	fsr2h,f,c
  2775  0014B6  0E01               	movlw	1
  2776  0014B8  6EDF               	movwf	indf2,c
  2777                           
  2778                           ;FRAME.c: 315:         message->data[0] = 0xFF;
  2779  0014BA  EE20 F008          	lfsr	2,8
  2780  0014BE  5006               	movf	FRAME_AxisStatus@message,w,c
  2781  0014C0  26D9               	addwf	fsr2l,f,c
  2782  0014C2  5007               	movf	FRAME_AxisStatus@message+1,w,c
  2783  0014C4  22DA               	addwfc	fsr2h,f,c
  2784  0014C6  0EFF               	movlw	255
  2785  0014C8  6EDF               	movwf	indf2,c
  2786                           
  2787                           ;FRAME.c: 316:     }
  2788  0014CA  0012               	return		;funcret
  2789  0014CC                     __end_of_FRAME_AxisStatus:
  2790                           	opt callstack 0
  2791                           
  2792 ;; *************** function _FRAME_AveragingTimes *****************
  2793 ;; Defined at:
  2794 ;;		line 239 in file "FRAME.c"
  2795 ;; Parameters:    Size  Location     Type
  2796 ;;  message         2    5[COMRAM] PTR struct .
  2797 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2798 ;; Auto vars:     Size  Location     Type
  2799 ;;		None
  2800 ;; Return value:  Size  Location     Type
  2801 ;;                  1    wreg      void 
  2802 ;; Registers used:
  2803 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2804 ;; Tracked objects:
  2805 ;;		On entry : 0/0
  2806 ;;		On exit  : 0/0
  2807 ;;		Unchanged: 0/0
  2808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2809 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2811 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2812 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2813 ;;Total ram usage:        3 bytes
  2814 ;; Hardware stack levels used:    1
  2815 ;; Hardware stack levels required when called:    3
  2816 ;; This function calls:
  2817 ;;		Nothing
  2818 ;; This function is called by:
  2819 ;;		_FRAME_HandleCanFrame
  2820 ;; This function uses a non-reentrant model
  2821 ;;
  2822                           
  2823                           	psect	text22
  2824  0014CC                     __ptext22:
  2825                           	opt callstack 0
  2826  0014CC                     _FRAME_AveragingTimes:
  2827                           	opt callstack 25
  2828                           
  2829                           ;FRAME.c: 239: static void FRAME_AveragingTimes(mID *message);FRAME.c: 240: {;FRAME.c: 2
      +                          41:     if(message->message_type == 0x02)
  2830                           
  2831                           ;incstack = 0
  2832  0014CC  EE20 F001          	lfsr	2,1
  2833  0014D0  5006               	movf	FRAME_AveragingTimes@message,w,c
  2834  0014D2  26D9               	addwf	fsr2l,f,c
  2835  0014D4  5007               	movf	FRAME_AveragingTimes@message+1,w,c
  2836  0014D6  22DA               	addwfc	fsr2h,f,c
  2837  0014D8  0E02               	movlw	2
  2838  0014DA  18DE               	xorwf	postinc2,w,c
  2839  0014DC  A4D8               	btfss	status,2,c
  2840  0014DE  0012               	return	
  2841                           
  2842                           ;FRAME.c: 242:     {;FRAME.c: 243:         message->data_length = 1;
  2843  0014E0  EE20 F010          	lfsr	2,16
  2844  0014E4  5006               	movf	FRAME_AveragingTimes@message,w,c
  2845  0014E6  26D9               	addwf	fsr2l,f,c
  2846  0014E8  5007               	movf	FRAME_AveragingTimes@message+1,w,c
  2847  0014EA  22DA               	addwfc	fsr2h,f,c
  2848  0014EC  0E01               	movlw	1
  2849  0014EE  6EDF               	movwf	indf2,c
  2850                           
  2851                           ;FRAME.c: 251:         message->data[0] = 0xFF;
  2852  0014F0  EE20 F008          	lfsr	2,8
  2853  0014F4  5006               	movf	FRAME_AveragingTimes@message,w,c
  2854  0014F6  26D9               	addwf	fsr2l,f,c
  2855  0014F8  5007               	movf	FRAME_AveragingTimes@message+1,w,c
  2856  0014FA  22DA               	addwfc	fsr2h,f,c
  2857  0014FC  0EFF               	movlw	255
  2858  0014FE  6EDF               	movwf	indf2,c
  2859                           
  2860                           ;FRAME.c: 252:     }
  2861  001500  0012               	return		;funcret
  2862  001502                     __end_of_FRAME_AveragingTimes:
  2863                           	opt callstack 0
  2864                           
  2865 ;; *************** function _FRAME_AnalogValue *****************
  2866 ;; Defined at:
  2867 ;;		line 478 in file "FRAME.c"
  2868 ;; Parameters:    Size  Location     Type
  2869 ;;  message         2    5[COMRAM] PTR struct .
  2870 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2871 ;;  set             2    7[COMRAM] unsigned short 
  2872 ;; Auto vars:     Size  Location     Type
  2873 ;;  i               2    0        unsigned short 
  2874 ;; Return value:  Size  Location     Type
  2875 ;;                  1    wreg      void 
  2876 ;; Registers used:
  2877 ;;		None
  2878 ;; Tracked objects:
  2879 ;;		On entry : 0/0
  2880 ;;		On exit  : 0/0
  2881 ;;		Unchanged: 0/0
  2882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2883 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2886 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2887 ;;Total ram usage:        4 bytes
  2888 ;; Hardware stack levels used:    1
  2889 ;; Hardware stack levels required when called:    3
  2890 ;; This function calls:
  2891 ;;		Nothing
  2892 ;; This function is called by:
  2893 ;;		_FRAME_HandleCanFrame
  2894 ;; This function uses a non-reentrant model
  2895 ;;
  2896                           
  2897                           	psect	text23
  2898  001702                     __ptext23:
  2899                           	opt callstack 0
  2900  001702                     _FRAME_AnalogValue:
  2901                           	opt callstack 25
  2902                           
  2903                           ;incstack = 0
  2904  001702  0012               	return		;funcret
  2905  001704                     __end_of_FRAME_AnalogValue:
  2906                           	opt callstack 0
  2907                           
  2908 ;; *************** function _FRAME_AdressOfNeighbors *****************
  2909 ;; Defined at:
  2910 ;;		line 526 in file "FRAME.c"
  2911 ;; Parameters:    Size  Location     Type
  2912 ;;  message         2    5[COMRAM] PTR struct .
  2913 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2914 ;;  nrRamki         2    7[COMRAM] unsigned short 
  2915 ;; Auto vars:     Size  Location     Type
  2916 ;;  kier            2   13[COMRAM] unsigned short 
  2917 ;;  iterator_alf    2    0        unsigned short 
  2918 ;; Return value:  Size  Location     Type
  2919 ;;                  1    wreg      void 
  2920 ;; Registers used:
  2921 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2922 ;; Tracked objects:
  2923 ;;		On entry : 0/0
  2924 ;;		On exit  : 0/0
  2925 ;;		Unchanged: 0/0
  2926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2927 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2928 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2929 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2930 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2931 ;;Total ram usage:       10 bytes
  2932 ;; Hardware stack levels used:    1
  2933 ;; Hardware stack levels required when called:    3
  2934 ;; This function calls:
  2935 ;;		Nothing
  2936 ;; This function is called by:
  2937 ;;		_FRAME_HandleCanFrame
  2938 ;; This function uses a non-reentrant model
  2939 ;;
  2940                           
  2941                           	psect	text24
  2942  000060                     __ptext24:
  2943                           	opt callstack 0
  2944  000060                     _FRAME_AdressOfNeighbors:
  2945                           	opt callstack 25
  2946                           
  2947                           ;FRAME.c: 526: static void FRAME_AdressOfNeighbors(mID *message, WORD nrRamki);FRAME.c: 
      +                          527: {;FRAME.c: 528:     WORD iterator_alfa;;FRAME.c: 531:     WORD kier = (nrRamki-0x10
      +                          );
  2948                           
  2949                           ;incstack = 0
  2950  000060  0EF0               	movlw	240
  2951  000062  2408               	addwf	FRAME_AdressOfNeighbors@nrRamki,w,c
  2952  000064  6E0E               	movwf	FRAME_AdressOfNeighbors@kier,c
  2953  000066  0EFF               	movlw	255
  2954  000068  2009               	addwfc	FRAME_AdressOfNeighbors@nrRamki+1,w,c
  2955  00006A  6E0F               	movwf	FRAME_AdressOfNeighbors@kier+1,c
  2956                           
  2957                           ;FRAME.c: 532:     if(message->message_type == 0x02)
  2958  00006C  EE20 F001          	lfsr	2,1
  2959  000070  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  2960  000072  26D9               	addwf	fsr2l,f,c
  2961  000074  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  2962  000076  22DA               	addwfc	fsr2h,f,c
  2963  000078  0E02               	movlw	2
  2964  00007A  18DE               	xorwf	postinc2,w,c
  2965  00007C  A4D8               	btfss	status,2,c
  2966  00007E  D08E               	goto	l2897
  2967                           
  2968                           ;FRAME.c: 533:     {;FRAME.c: 535:         message->data_length = 8;
  2969  000080  EE20 F010          	lfsr	2,16
  2970  000084  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  2971  000086  26D9               	addwf	fsr2l,f,c
  2972  000088  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  2973  00008A  22DA               	addwfc	fsr2h,f,c
  2974  00008C  0E08               	movlw	8
  2975  00008E  6EDF               	movwf	indf2,c
  2976                           
  2977                           ;FRAME.c: 537:         if(kier == 0)
  2978  000090  500E               	movf	FRAME_AdressOfNeighbors@kier,w,c
  2979  000092  100F               	iorwf	FRAME_AdressOfNeighbors@kier+1,w,c
  2980  000094  A4D8               	btfss	status,2,c
  2981  000096  D041               	goto	l2895
  2982                           
  2983                           ;FRAME.c: 538:         {;FRAME.c: 539:         message->data[0] = (NeightAdress1>> 8);
  2984  000098  EE20 F008          	lfsr	2,8
  2985  00009C  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  2986  00009E  26D9               	addwf	fsr2l,f,c
  2987  0000A0  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  2988  0000A2  22DA               	addwfc	fsr2h,f,c
  2989  0000A4  5046               	movf	_NeightAdress1+1,w,c	;volatile
  2990  0000A6  6EDF               	movwf	indf2,c
  2991                           
  2992                           ;FRAME.c: 540:         message->data[1] = NeightAdress1;
  2993  0000A8  EE20 F009          	lfsr	2,9
  2994  0000AC  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  2995  0000AE  26D9               	addwf	fsr2l,f,c
  2996  0000B0  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  2997  0000B2  22DA               	addwfc	fsr2h,f,c
  2998  0000B4  C045  FFDF         	movff	_NeightAdress1,indf2	;volatile
  2999                           
  3000                           ;FRAME.c: 541:         message->data[2] = (NeightAdress2>> 8);
  3001  0000B8  EE20 F00A          	lfsr	2,10
  3002  0000BC  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3003  0000BE  26D9               	addwf	fsr2l,f,c
  3004  0000C0  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3005  0000C2  22DA               	addwfc	fsr2h,f,c
  3006  0000C4  5044               	movf	_NeightAdress2+1,w,c	;volatile
  3007  0000C6  6EDF               	movwf	indf2,c
  3008                           
  3009                           ;FRAME.c: 542:         message->data[3] = NeightAdress2;
  3010  0000C8  EE20 F00B          	lfsr	2,11
  3011  0000CC  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3012  0000CE  26D9               	addwf	fsr2l,f,c
  3013  0000D0  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3014  0000D2  22DA               	addwfc	fsr2h,f,c
  3015  0000D4  C043  FFDF         	movff	_NeightAdress2,indf2	;volatile
  3016                           
  3017                           ;FRAME.c: 543:         message->data[4] = (NeightAdress3>> 8);
  3018  0000D8  EE20 F00C          	lfsr	2,12
  3019  0000DC  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3020  0000DE  26D9               	addwf	fsr2l,f,c
  3021  0000E0  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3022  0000E2  22DA               	addwfc	fsr2h,f,c
  3023  0000E4  5042               	movf	_NeightAdress3+1,w,c	;volatile
  3024  0000E6  6EDF               	movwf	indf2,c
  3025                           
  3026                           ;FRAME.c: 544:         message->data[5] = NeightAdress3;
  3027  0000E8  EE20 F00D          	lfsr	2,13
  3028  0000EC  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3029  0000EE  26D9               	addwf	fsr2l,f,c
  3030  0000F0  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3031  0000F2  22DA               	addwfc	fsr2h,f,c
  3032  0000F4  C041  FFDF         	movff	_NeightAdress3,indf2	;volatile
  3033                           
  3034                           ;FRAME.c: 545:         message->data[6] = (NeightAdress4>> 8);
  3035  0000F8  EE20 F00E          	lfsr	2,14
  3036  0000FC  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3037  0000FE  26D9               	addwf	fsr2l,f,c
  3038  000100  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3039  000102  22DA               	addwfc	fsr2h,f,c
  3040  000104  5040               	movf	_NeightAdress4+1,w,c	;volatile
  3041  000106  6EDF               	movwf	indf2,c
  3042                           
  3043                           ;FRAME.c: 546:         message->data[7] = NeightAdress4;
  3044  000108  EE20 F00F          	lfsr	2,15
  3045  00010C  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3046  00010E  26D9               	addwf	fsr2l,f,c
  3047  000110  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3048  000112  22DA               	addwfc	fsr2h,f,c
  3049  000114  C03F  FFDF         	movff	_NeightAdress4,indf2	;volatile
  3050                           
  3051                           ;FRAME.c: 547:         }
  3052  000118  0012               	return	
  3053  00011A                     l2895:
  3054                           
  3055                           ;FRAME.c: 549:         {;FRAME.c: 550:         message->data[0] = (NeightAdress5>> 8);
  3056  00011A  EE20 F008          	lfsr	2,8
  3057  00011E  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3058  000120  26D9               	addwf	fsr2l,f,c
  3059  000122  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3060  000124  22DA               	addwfc	fsr2h,f,c
  3061  000126  503E               	movf	_NeightAdress5+1,w,c	;volatile
  3062  000128  6EDF               	movwf	indf2,c
  3063                           
  3064                           ;FRAME.c: 551:         message->data[1] = NeightAdress5;
  3065  00012A  EE20 F009          	lfsr	2,9
  3066  00012E  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3067  000130  26D9               	addwf	fsr2l,f,c
  3068  000132  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3069  000134  22DA               	addwfc	fsr2h,f,c
  3070  000136  C03D  FFDF         	movff	_NeightAdress5,indf2	;volatile
  3071                           
  3072                           ;FRAME.c: 552:         message->data[2] = (NeightAdress6>> 8);
  3073  00013A  EE20 F00A          	lfsr	2,10
  3074  00013E  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3075  000140  26D9               	addwf	fsr2l,f,c
  3076  000142  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3077  000144  22DA               	addwfc	fsr2h,f,c
  3078  000146  503C               	movf	_NeightAdress6+1,w,c	;volatile
  3079  000148  6EDF               	movwf	indf2,c
  3080                           
  3081                           ;FRAME.c: 553:         message->data[3] = NeightAdress6;
  3082  00014A  EE20 F00B          	lfsr	2,11
  3083  00014E  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3084  000150  26D9               	addwf	fsr2l,f,c
  3085  000152  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3086  000154  22DA               	addwfc	fsr2h,f,c
  3087  000156  C03B  FFDF         	movff	_NeightAdress6,indf2	;volatile
  3088                           
  3089                           ;FRAME.c: 554:         message->data[4] = (NeightAdress7>> 8);
  3090  00015A  EE20 F00C          	lfsr	2,12
  3091  00015E  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3092  000160  26D9               	addwf	fsr2l,f,c
  3093  000162  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3094  000164  22DA               	addwfc	fsr2h,f,c
  3095  000166  503A               	movf	_NeightAdress7+1,w,c	;volatile
  3096  000168  6EDF               	movwf	indf2,c
  3097                           
  3098                           ;FRAME.c: 555:         message->data[5] = NeightAdress7;
  3099  00016A  EE20 F00D          	lfsr	2,13
  3100  00016E  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3101  000170  26D9               	addwf	fsr2l,f,c
  3102  000172  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3103  000174  22DA               	addwfc	fsr2h,f,c
  3104  000176  C039  FFDF         	movff	_NeightAdress7,indf2	;volatile
  3105                           
  3106                           ;FRAME.c: 556:         message->data[6] = (NeightAdress8>> 8);
  3107  00017A  EE20 F00E          	lfsr	2,14
  3108  00017E  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3109  000180  26D9               	addwf	fsr2l,f,c
  3110  000182  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3111  000184  22DA               	addwfc	fsr2h,f,c
  3112  000186  5038               	movf	_NeightAdress8+1,w,c	;volatile
  3113  000188  6EDF               	movwf	indf2,c
  3114                           
  3115                           ;FRAME.c: 557:         message->data[7] = NeightAdress8;
  3116  00018A  EE20 F00F          	lfsr	2,15
  3117  00018E  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3118  000190  26D9               	addwf	fsr2l,f,c
  3119  000192  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3120  000194  22DA               	addwfc	fsr2h,f,c
  3121  000196  C037  FFDF         	movff	_NeightAdress8,indf2	;volatile
  3122  00019A  0012               	return	
  3123  00019C                     l2897:
  3124                           
  3125                           ;FRAME.c: 569:     {;FRAME.c: 572:         if(kier == 0)
  3126  00019C  500E               	movf	FRAME_AdressOfNeighbors@kier,w,c
  3127  00019E  100F               	iorwf	FRAME_AdressOfNeighbors@kier+1,w,c
  3128  0001A0  A4D8               	btfss	status,2,c
  3129  0001A2  D061               	goto	l2901
  3130                           
  3131                           ;FRAME.c: 573:         {;FRAME.c: 574:          NeightAdress1 = (message->data[0] << 8)|
      +                           message->data[1];
  3132  0001A4  EE20 F008          	lfsr	2,8
  3133  0001A8  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3134  0001AA  26D9               	addwf	fsr2l,f,c
  3135  0001AC  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3136  0001AE  22DA               	addwfc	fsr2h,f,c
  3137  0001B0  50DF               	movf	indf2,w,c
  3138  0001B2  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3139  0001B4  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3140  0001B6  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3141  0001B8  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3142  0001BA  EE20 F009          	lfsr	2,9
  3143  0001BE  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3144  0001C0  26D9               	addwf	fsr2l,f,c
  3145  0001C2  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3146  0001C4  22DA               	addwfc	fsr2h,f,c
  3147  0001C6  50DF               	movf	indf2,w,c
  3148  0001C8  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3149  0001CA  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3150  0001CC  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3151  0001CE  6E45               	movwf	_NeightAdress1,c	;volatile
  3152  0001D0  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3153  0001D2  6E46               	movwf	_NeightAdress1+1,c	;volatile
  3154                           
  3155                           ;FRAME.c: 575:          NeightAdress2 = (message->data[2] << 8)| message->data[3];
  3156  0001D4  EE20 F00A          	lfsr	2,10
  3157  0001D8  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3158  0001DA  26D9               	addwf	fsr2l,f,c
  3159  0001DC  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3160  0001DE  22DA               	addwfc	fsr2h,f,c
  3161  0001E0  50DF               	movf	indf2,w,c
  3162  0001E2  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3163  0001E4  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3164  0001E6  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3165  0001E8  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3166  0001EA  EE20 F00B          	lfsr	2,11
  3167  0001EE  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3168  0001F0  26D9               	addwf	fsr2l,f,c
  3169  0001F2  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3170  0001F4  22DA               	addwfc	fsr2h,f,c
  3171  0001F6  50DF               	movf	indf2,w,c
  3172  0001F8  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3173  0001FA  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3174  0001FC  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3175  0001FE  6E43               	movwf	_NeightAdress2,c	;volatile
  3176  000200  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3177  000202  6E44               	movwf	_NeightAdress2+1,c	;volatile
  3178                           
  3179                           ;FRAME.c: 576:          NeightAdress3 = (message->data[4] << 8)| message->data[5];
  3180  000204  EE20 F00C          	lfsr	2,12
  3181  000208  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3182  00020A  26D9               	addwf	fsr2l,f,c
  3183  00020C  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3184  00020E  22DA               	addwfc	fsr2h,f,c
  3185  000210  50DF               	movf	indf2,w,c
  3186  000212  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3187  000214  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3188  000216  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3189  000218  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3190  00021A  EE20 F00D          	lfsr	2,13
  3191  00021E  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3192  000220  26D9               	addwf	fsr2l,f,c
  3193  000222  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3194  000224  22DA               	addwfc	fsr2h,f,c
  3195  000226  50DF               	movf	indf2,w,c
  3196  000228  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3197  00022A  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3198  00022C  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3199  00022E  6E41               	movwf	_NeightAdress3,c	;volatile
  3200  000230  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3201  000232  6E42               	movwf	_NeightAdress3+1,c	;volatile
  3202                           
  3203                           ;FRAME.c: 577:          NeightAdress4 = (message->data[6] << 8)| message->data[7];
  3204  000234  EE20 F00E          	lfsr	2,14
  3205  000238  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3206  00023A  26D9               	addwf	fsr2l,f,c
  3207  00023C  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3208  00023E  22DA               	addwfc	fsr2h,f,c
  3209  000240  50DF               	movf	indf2,w,c
  3210  000242  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3211  000244  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3212  000246  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3213  000248  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3214  00024A  EE20 F00F          	lfsr	2,15
  3215  00024E  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3216  000250  26D9               	addwf	fsr2l,f,c
  3217  000252  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3218  000254  22DA               	addwfc	fsr2h,f,c
  3219  000256  50DF               	movf	indf2,w,c
  3220  000258  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3221  00025A  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3222  00025C  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3223  00025E  6E3F               	movwf	_NeightAdress4,c	;volatile
  3224  000260  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3225  000262  6E40               	movwf	_NeightAdress4+1,c	;volatile
  3226                           
  3227                           ;FRAME.c: 578:         }
  3228  000264  0012               	return	
  3229  000266                     l2901:
  3230                           
  3231                           ;FRAME.c: 580:         {;FRAME.c: 581:          NeightAdress5 = (message->data[0] << 8)|
      +                           message->data[1];
  3232  000266  EE20 F008          	lfsr	2,8
  3233  00026A  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3234  00026C  26D9               	addwf	fsr2l,f,c
  3235  00026E  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3236  000270  22DA               	addwfc	fsr2h,f,c
  3237  000272  50DF               	movf	indf2,w,c
  3238  000274  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3239  000276  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3240  000278  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3241  00027A  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3242  00027C  EE20 F009          	lfsr	2,9
  3243  000280  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3244  000282  26D9               	addwf	fsr2l,f,c
  3245  000284  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3246  000286  22DA               	addwfc	fsr2h,f,c
  3247  000288  50DF               	movf	indf2,w,c
  3248  00028A  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3249  00028C  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3250  00028E  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3251  000290  6E3D               	movwf	_NeightAdress5,c	;volatile
  3252  000292  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3253  000294  6E3E               	movwf	_NeightAdress5+1,c	;volatile
  3254                           
  3255                           ;FRAME.c: 582:          NeightAdress6 = (message->data[2] << 8)| message->data[3];
  3256  000296  EE20 F00A          	lfsr	2,10
  3257  00029A  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3258  00029C  26D9               	addwf	fsr2l,f,c
  3259  00029E  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3260  0002A0  22DA               	addwfc	fsr2h,f,c
  3261  0002A2  50DF               	movf	indf2,w,c
  3262  0002A4  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3263  0002A6  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3264  0002A8  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3265  0002AA  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3266  0002AC  EE20 F00B          	lfsr	2,11
  3267  0002B0  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3268  0002B2  26D9               	addwf	fsr2l,f,c
  3269  0002B4  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3270  0002B6  22DA               	addwfc	fsr2h,f,c
  3271  0002B8  50DF               	movf	indf2,w,c
  3272  0002BA  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3273  0002BC  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3274  0002BE  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3275  0002C0  6E3B               	movwf	_NeightAdress6,c	;volatile
  3276  0002C2  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3277  0002C4  6E3C               	movwf	_NeightAdress6+1,c	;volatile
  3278                           
  3279                           ;FRAME.c: 583:          NeightAdress7 = (message->data[4] << 8)| message->data[5];
  3280  0002C6  EE20 F00C          	lfsr	2,12
  3281  0002CA  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3282  0002CC  26D9               	addwf	fsr2l,f,c
  3283  0002CE  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3284  0002D0  22DA               	addwfc	fsr2h,f,c
  3285  0002D2  50DF               	movf	indf2,w,c
  3286  0002D4  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3287  0002D6  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3288  0002D8  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3289  0002DA  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3290  0002DC  EE20 F00D          	lfsr	2,13
  3291  0002E0  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3292  0002E2  26D9               	addwf	fsr2l,f,c
  3293  0002E4  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3294  0002E6  22DA               	addwfc	fsr2h,f,c
  3295  0002E8  50DF               	movf	indf2,w,c
  3296  0002EA  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3297  0002EC  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3298  0002EE  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3299  0002F0  6E39               	movwf	_NeightAdress7,c	;volatile
  3300  0002F2  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3301  0002F4  6E3A               	movwf	_NeightAdress7+1,c	;volatile
  3302                           
  3303                           ;FRAME.c: 584:          NeightAdress8 = (message->data[6] << 8)| message->data[7];
  3304  0002F6  EE20 F00E          	lfsr	2,14
  3305  0002FA  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3306  0002FC  26D9               	addwf	fsr2l,f,c
  3307  0002FE  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3308  000300  22DA               	addwfc	fsr2h,f,c
  3309  000302  50DF               	movf	indf2,w,c
  3310  000304  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3311  000306  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3312  000308  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3313  00030A  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3314  00030C  EE20 F00F          	lfsr	2,15
  3315  000310  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3316  000312  26D9               	addwf	fsr2l,f,c
  3317  000314  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3318  000316  22DA               	addwfc	fsr2h,f,c
  3319  000318  50DF               	movf	indf2,w,c
  3320  00031A  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3321  00031C  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3322  00031E  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3323  000320  6E37               	movwf	_NeightAdress8,c	;volatile
  3324  000322  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3325  000324  6E38               	movwf	_NeightAdress8+1,c	;volatile
  3326  000326  0012               	return		;funcret
  3327  000328                     __end_of_FRAME_AdressOfNeighbors:
  3328                           	opt callstack 0
  3329                           
  3330 ;; *************** function _FRAME_AccelerometerStatus *****************
  3331 ;; Defined at:
  3332 ;;		line 162 in file "FRAME.c"
  3333 ;; Parameters:    Size  Location     Type
  3334 ;;  message         2    7[COMRAM] PTR struct .
  3335 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3336 ;; Auto vars:     Size  Location     Type
  3337 ;;		None
  3338 ;; Return value:  Size  Location     Type
  3339 ;;                  1    wreg      void 
  3340 ;; Registers used:
  3341 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3342 ;; Tracked objects:
  3343 ;;		On entry : 0/0
  3344 ;;		On exit  : 0/0
  3345 ;;		Unchanged: 0/0
  3346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3347 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3349 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3350 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3351 ;;Total ram usage:        3 bytes
  3352 ;; Hardware stack levels used:    1
  3353 ;; Hardware stack levels required when called:    4
  3354 ;; This function calls:
  3355 ;;		_MOCK_Klikniecie_Spadek
  3356 ;;		_MOCK_PrzyspieszenieX
  3357 ;;		_MOCK_PrzyspieszenieY
  3358 ;;		_MOCK_PrzyspieszenieZ
  3359 ;; This function is called by:
  3360 ;;		_FRAME_HandleCanFrame
  3361 ;; This function uses a non-reentrant model
  3362 ;;
  3363                           
  3364                           	psect	text25
  3365  0010A4                     __ptext25:
  3366                           	opt callstack 0
  3367  0010A4                     _FRAME_AccelerometerStatus:
  3368                           	opt callstack 24
  3369                           
  3370                           ;FRAME.c: 162: static void FRAME_AccelerometerStatus(mID *message);FRAME.c: 163: {;FRAME
      +                          .c: 164:     if(message->message_type == 0x02)
  3371                           
  3372                           ;incstack = 0
  3373  0010A4  EE20 F001          	lfsr	2,1
  3374  0010A8  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  3375  0010AA  26D9               	addwf	fsr2l,f,c
  3376  0010AC  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3377  0010AE  22DA               	addwfc	fsr2h,f,c
  3378  0010B0  0E02               	movlw	2
  3379  0010B2  18DE               	xorwf	postinc2,w,c
  3380  0010B4  A4D8               	btfss	status,2,c
  3381  0010B6  0012               	return	
  3382                           
  3383                           ;FRAME.c: 165:     {;FRAME.c: 166:         message->data_length = 4;
  3384  0010B8  EE20 F010          	lfsr	2,16
  3385  0010BC  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  3386  0010BE  26D9               	addwf	fsr2l,f,c
  3387  0010C0  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3388  0010C2  22DA               	addwfc	fsr2h,f,c
  3389  0010C4  0E04               	movlw	4
  3390  0010C6  6EDF               	movwf	indf2,c
  3391                           
  3392                           ;FRAME.c: 170:         message->data[0] = MOCK_PrzyspieszenieX();
  3393  0010C8  EE20 F008          	lfsr	2,8
  3394  0010CC  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  3395  0010CE  26D9               	addwf	fsr2l,f,c
  3396  0010D0  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3397  0010D2  22DA               	addwfc	fsr2h,f,c
  3398  0010D4  EC55  F00B         	call	_MOCK_PrzyspieszenieX	;wreg free
  3399  0010D8  5006               	movf	?_MOCK_PrzyspieszenieX,w,c
  3400  0010DA  6EDF               	movwf	indf2,c
  3401                           
  3402                           ;FRAME.c: 171:         message->data[1] = MOCK_PrzyspieszenieY();
  3403  0010DC  EE20 F009          	lfsr	2,9
  3404  0010E0  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  3405  0010E2  26D9               	addwf	fsr2l,f,c
  3406  0010E4  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3407  0010E6  22DA               	addwfc	fsr2h,f,c
  3408  0010E8  EC50  F00B         	call	_MOCK_PrzyspieszenieY	;wreg free
  3409  0010EC  5006               	movf	?_MOCK_PrzyspieszenieY,w,c
  3410  0010EE  6EDF               	movwf	indf2,c
  3411                           
  3412                           ;FRAME.c: 172:         message->data[2] = MOCK_PrzyspieszenieZ();
  3413  0010F0  EE20 F00A          	lfsr	2,10
  3414  0010F4  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  3415  0010F6  26D9               	addwf	fsr2l,f,c
  3416  0010F8  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3417  0010FA  22DA               	addwfc	fsr2h,f,c
  3418  0010FC  EC4B  F00B         	call	_MOCK_PrzyspieszenieZ	;wreg free
  3419  001100  5006               	movf	?_MOCK_PrzyspieszenieZ,w,c
  3420  001102  6EDF               	movwf	indf2,c
  3421                           
  3422                           ;FRAME.c: 173:         message->data[3] = MOCK_Klikniecie_Spadek();
  3423  001104  EE20 F00B          	lfsr	2,11
  3424  001108  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  3425  00110A  26D9               	addwf	fsr2l,f,c
  3426  00110C  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3427  00110E  22DA               	addwfc	fsr2h,f,c
  3428  001110  EC5A  F00B         	call	_MOCK_Klikniecie_Spadek	;wreg free
  3429  001114  5006               	movf	?_MOCK_Klikniecie_Spadek,w,c
  3430  001116  6EDF               	movwf	indf2,c
  3431                           
  3432                           ;FRAME.c: 174:     }
  3433  001118  0012               	return		;funcret
  3434  00111A                     __end_of_FRAME_AccelerometerStatus:
  3435                           	opt callstack 0
  3436                           
  3437 ;; *************** function _MOCK_PrzyspieszenieZ *****************
  3438 ;; Defined at:
  3439 ;;		line 72 in file "MOC_Funct.c"
  3440 ;; Parameters:    Size  Location     Type
  3441 ;;		None
  3442 ;; Auto vars:     Size  Location     Type
  3443 ;;		None
  3444 ;; Return value:  Size  Location     Type
  3445 ;;                  2    5[COMRAM] unsigned int 
  3446 ;; Registers used:
  3447 ;;		wreg, status,2
  3448 ;; Tracked objects:
  3449 ;;		On entry : 0/0
  3450 ;;		On exit  : 0/0
  3451 ;;		Unchanged: 0/0
  3452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3453 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3456 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3457 ;;Total ram usage:        2 bytes
  3458 ;; Hardware stack levels used:    1
  3459 ;; Hardware stack levels required when called:    3
  3460 ;; This function calls:
  3461 ;;		Nothing
  3462 ;; This function is called by:
  3463 ;;		_FRAME_AccelerometerStatus
  3464 ;; This function uses a non-reentrant model
  3465 ;;
  3466                           
  3467                           	psect	text26
  3468  001696                     __ptext26:
  3469                           	opt callstack 0
  3470  001696                     _MOCK_PrzyspieszenieZ:
  3471                           	opt callstack 24
  3472                           
  3473                           ;MOC_Funct.c: 74:     return 0xFE;
  3474                           
  3475                           ;incstack = 0
  3476  001696  0E00               	movlw	0
  3477  001698  6E07               	movwf	?_MOCK_PrzyspieszenieZ+1,c
  3478  00169A  0EFE               	movlw	254
  3479  00169C  6E06               	movwf	?_MOCK_PrzyspieszenieZ,c
  3480  00169E  0012               	return		;funcret
  3481  0016A0                     __end_of_MOCK_PrzyspieszenieZ:
  3482                           	opt callstack 0
  3483                           
  3484 ;; *************** function _MOCK_PrzyspieszenieY *****************
  3485 ;; Defined at:
  3486 ;;		line 68 in file "MOC_Funct.c"
  3487 ;; Parameters:    Size  Location     Type
  3488 ;;		None
  3489 ;; Auto vars:     Size  Location     Type
  3490 ;;		None
  3491 ;; Return value:  Size  Location     Type
  3492 ;;                  2    5[COMRAM] unsigned int 
  3493 ;; Registers used:
  3494 ;;		wreg, status,2
  3495 ;; Tracked objects:
  3496 ;;		On entry : 0/0
  3497 ;;		On exit  : 0/0
  3498 ;;		Unchanged: 0/0
  3499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3500 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3503 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3504 ;;Total ram usage:        2 bytes
  3505 ;; Hardware stack levels used:    1
  3506 ;; Hardware stack levels required when called:    3
  3507 ;; This function calls:
  3508 ;;		Nothing
  3509 ;; This function is called by:
  3510 ;;		_FRAME_AccelerometerStatus
  3511 ;; This function uses a non-reentrant model
  3512 ;;
  3513                           
  3514                           	psect	text27
  3515  0016A0                     __ptext27:
  3516                           	opt callstack 0
  3517  0016A0                     _MOCK_PrzyspieszenieY:
  3518                           	opt callstack 24
  3519                           
  3520                           ;MOC_Funct.c: 70:     return 0xFE;
  3521                           
  3522                           ;incstack = 0
  3523  0016A0  0E00               	movlw	0
  3524  0016A2  6E07               	movwf	?_MOCK_PrzyspieszenieY+1,c
  3525  0016A4  0EFE               	movlw	254
  3526  0016A6  6E06               	movwf	?_MOCK_PrzyspieszenieY,c
  3527  0016A8  0012               	return		;funcret
  3528  0016AA                     __end_of_MOCK_PrzyspieszenieY:
  3529                           	opt callstack 0
  3530                           
  3531 ;; *************** function _MOCK_PrzyspieszenieX *****************
  3532 ;; Defined at:
  3533 ;;		line 63 in file "MOC_Funct.c"
  3534 ;; Parameters:    Size  Location     Type
  3535 ;;		None
  3536 ;; Auto vars:     Size  Location     Type
  3537 ;;		None
  3538 ;; Return value:  Size  Location     Type
  3539 ;;                  2    5[COMRAM] unsigned int 
  3540 ;; Registers used:
  3541 ;;		wreg, status,2
  3542 ;; Tracked objects:
  3543 ;;		On entry : 0/0
  3544 ;;		On exit  : 0/0
  3545 ;;		Unchanged: 0/0
  3546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3547 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3550 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3551 ;;Total ram usage:        2 bytes
  3552 ;; Hardware stack levels used:    1
  3553 ;; Hardware stack levels required when called:    3
  3554 ;; This function calls:
  3555 ;;		Nothing
  3556 ;; This function is called by:
  3557 ;;		_FRAME_AccelerometerStatus
  3558 ;; This function uses a non-reentrant model
  3559 ;;
  3560                           
  3561                           	psect	text28
  3562  0016AA                     __ptext28:
  3563                           	opt callstack 0
  3564  0016AA                     _MOCK_PrzyspieszenieX:
  3565                           	opt callstack 24
  3566                           
  3567                           ;MOC_Funct.c: 65:     return 0xFE;
  3568                           
  3569                           ;incstack = 0
  3570  0016AA  0E00               	movlw	0
  3571  0016AC  6E07               	movwf	?_MOCK_PrzyspieszenieX+1,c
  3572  0016AE  0EFE               	movlw	254
  3573  0016B0  6E06               	movwf	?_MOCK_PrzyspieszenieX,c
  3574  0016B2  0012               	return		;funcret
  3575  0016B4                     __end_of_MOCK_PrzyspieszenieX:
  3576                           	opt callstack 0
  3577                           
  3578 ;; *************** function _MOCK_Klikniecie_Spadek *****************
  3579 ;; Defined at:
  3580 ;;		line 76 in file "MOC_Funct.c"
  3581 ;; Parameters:    Size  Location     Type
  3582 ;;		None
  3583 ;; Auto vars:     Size  Location     Type
  3584 ;;		None
  3585 ;; Return value:  Size  Location     Type
  3586 ;;                  2    5[COMRAM] unsigned int 
  3587 ;; Registers used:
  3588 ;;		wreg, status,2
  3589 ;; Tracked objects:
  3590 ;;		On entry : 0/0
  3591 ;;		On exit  : 0/0
  3592 ;;		Unchanged: 0/0
  3593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3594 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3597 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3598 ;;Total ram usage:        2 bytes
  3599 ;; Hardware stack levels used:    1
  3600 ;; Hardware stack levels required when called:    3
  3601 ;; This function calls:
  3602 ;;		Nothing
  3603 ;; This function is called by:
  3604 ;;		_FRAME_AccelerometerStatus
  3605 ;; This function uses a non-reentrant model
  3606 ;;
  3607                           
  3608                           	psect	text29
  3609  0016B4                     __ptext29:
  3610                           	opt callstack 0
  3611  0016B4                     _MOCK_Klikniecie_Spadek:
  3612                           	opt callstack 24
  3613                           
  3614                           ;MOC_Funct.c: 78:     return 0b00000000;
  3615                           
  3616                           ;incstack = 0
  3617  0016B4  0E00               	movlw	0
  3618  0016B6  6E07               	movwf	?_MOCK_Klikniecie_Spadek+1,c
  3619  0016B8  0E00               	movlw	0
  3620  0016BA  6E06               	movwf	?_MOCK_Klikniecie_Spadek,c
  3621  0016BC  0012               	return		;funcret
  3622  0016BE                     __end_of_MOCK_Klikniecie_Spadek:
  3623                           	opt callstack 0
  3624                           
  3625 ;; *************** function _CAN_SendFrame *****************
  3626 ;; Defined at:
  3627 ;;		line 196 in file "CAN.c"
  3628 ;; Parameters:    Size  Location     Type
  3629 ;;  message         2   10[COMRAM] PTR struct .
  3630 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3631 ;; Auto vars:     Size  Location     Type
  3632 ;;		None
  3633 ;; Return value:  Size  Location     Type
  3634 ;;                  1    wreg      void 
  3635 ;; Registers used:
  3636 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3637 ;; Tracked objects:
  3638 ;;		On entry : 0/0
  3639 ;;		On exit  : 0/0
  3640 ;;		Unchanged: 0/0
  3641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3642 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3644 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3645 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3646 ;;Total ram usage:        5 bytes
  3647 ;; Hardware stack levels used:    1
  3648 ;; Hardware stack levels required when called:    4
  3649 ;; This function calls:
  3650 ;;		_CAN_MoveBuffIntoFrame
  3651 ;; This function is called by:
  3652 ;;		_FRAME_HandleCanFrame
  3653 ;; This function uses a non-reentrant model
  3654 ;;
  3655                           
  3656                           	psect	text30
  3657  0007AA                     __ptext30:
  3658                           	opt callstack 0
  3659  0007AA                     _CAN_SendFrame:
  3660                           	opt callstack 24
  3661                           
  3662                           ;CAN.c: 201:     {;CAN.c: 202:         ECANCON = 0x83;
  3663                           
  3664                           ;incstack = 0
  3665                           ;CAN.c: 196: void CAN_SendFrame(mID * message);CAN.c: 197: {;CAN.c: 200:     for(;;)
  3666  0007AA  0E83               	movlw	131
  3667  0007AC  6E77               	movwf	3959,c	;volatile
  3668                           
  3669                           ;CAN.c: 203:         if(!RXB0CONbits.FILHIT3)
  3670  0007AE  A660               	btfss	3936,3,c	;volatile
  3671  0007B0  D00A               	goto	l189
  3672                           
  3673                           ;CAN.c: 208:         ECANCON = 0x84;
  3674  0007B2  0E84               	movlw	132
  3675  0007B4  6E77               	movwf	3959,c	;volatile
  3676                           
  3677                           ;CAN.c: 209:         if(!RXB0CONbits.FILHIT3)
  3678  0007B6  A660               	btfss	3936,3,c	;volatile
  3679  0007B8  D006               	goto	l189
  3680                           
  3681                           ;CAN.c: 214:         ECANCON = 0x85;
  3682  0007BA  0E85               	movlw	133
  3683  0007BC  6E77               	movwf	3959,c	;volatile
  3684                           
  3685                           ;CAN.c: 215:         if(!RXB0CONbits.FILHIT3)
  3686  0007BE  A660               	btfss	3936,3,c	;volatile
  3687  0007C0  D002               	goto	l189
  3688  0007C2  D7F3               	goto	_CAN_SendFrame
  3689  0007C4                     l190:
  3690  0007C4  00FF               	reset		;# 
  3691  0007C6                     l189:
  3692                           
  3693                           ;CAN.c: 222:     while(COMSTATbits.TXWARN)
  3694  0007C6  B474               	btfsc	3956,2,c	;volatile
  3695  0007C8  D7FD               	goto	l190
  3696                           
  3697                           ;CAN.c: 226:     DetectorLedRadar.timerRamkiTxCANU8 = 0;
  3698  0007CA  0E00               	movlw	0
  3699  0007CC  6E36               	movwf	_DetectorLedRadar+2,c
  3700                           
  3701                           ;CAN.c: 227:     RXB0EIDL = message->id.v[0];
  3702  0007CE  EE20 F004          	lfsr	2,4
  3703  0007D2  500B               	movf	CAN_SendFrame@message,w,c
  3704  0007D4  26D9               	addwf	fsr2l,f,c
  3705  0007D6  500C               	movf	CAN_SendFrame@message+1,w,c
  3706  0007D8  22DA               	addwfc	fsr2h,f,c
  3707  0007DA  50DF               	movf	indf2,w,c
  3708  0007DC  6E64               	movwf	3940,c	;volatile
  3709                           
  3710                           ;CAN.c: 228:     RXB0EIDH = message->id.v[1];
  3711  0007DE  EE20 F005          	lfsr	2,5
  3712  0007E2  500B               	movf	CAN_SendFrame@message,w,c
  3713  0007E4  26D9               	addwf	fsr2l,f,c
  3714  0007E6  500C               	movf	CAN_SendFrame@message+1,w,c
  3715  0007E8  22DA               	addwfc	fsr2h,f,c
  3716  0007EA  50DF               	movf	indf2,w,c
  3717  0007EC  6E63               	movwf	3939,c	;volatile
  3718                           
  3719                           ;CAN.c: 229:     RXB0SIDL = ((message->id.v[2]&0xFC)*8) | (message->id.v[2] & (0x03));
  3720  0007EE  EE20 F006          	lfsr	2,6
  3721  0007F2  500B               	movf	CAN_SendFrame@message,w,c
  3722  0007F4  26D9               	addwf	fsr2l,f,c
  3723  0007F6  500C               	movf	CAN_SendFrame@message+1,w,c
  3724  0007F8  22DA               	addwfc	fsr2h,f,c
  3725  0007FA  50DF               	movf	indf2,w,c
  3726  0007FC  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  3727  0007FE  0E03               	movlw	3
  3728  000800  160D               	andwf	??_CAN_SendFrame,f,c
  3729  000802  EE20 F006          	lfsr	2,6
  3730  000806  500B               	movf	CAN_SendFrame@message,w,c
  3731  000808  26D9               	addwf	fsr2l,f,c
  3732  00080A  500C               	movf	CAN_SendFrame@message+1,w,c
  3733  00080C  22DA               	addwfc	fsr2h,f,c
  3734  00080E  50DF               	movf	indf2,w,c
  3735  000810  0BFC               	andlw	252
  3736  000812  0D08               	mullw	8
  3737  000814  50F3               	movf	prodl,w,c
  3738  000816  100D               	iorwf	??_CAN_SendFrame,w,c
  3739  000818  6E62               	movwf	3938,c	;volatile
  3740                           
  3741                           ;CAN.c: 230:     RXB0SIDLbits.EXID = 1;
  3742  00081A  8662               	bsf	3938,3,c	;volatile
  3743                           
  3744                           ;CAN.c: 231:     RXB0SIDH = (BYTE)(message->id.w[1]/32);
  3745  00081C  EE20 F006          	lfsr	2,6
  3746  000820  500B               	movf	CAN_SendFrame@message,w,c
  3747  000822  26D9               	addwf	fsr2l,f,c
  3748  000824  500C               	movf	CAN_SendFrame@message+1,w,c
  3749  000826  22DA               	addwfc	fsr2h,f,c
  3750  000828  CFDE F00D          	movff	postinc2,??_CAN_SendFrame
  3751  00082C  CFDD F00E          	movff	postdec2,??_CAN_SendFrame+1
  3752  000830  0E05               	movlw	5
  3753  000832  6E0F               	movwf	(??_CAN_SendFrame+2)& (0+255),c
  3754  000834                     u1315:
  3755  000834  90D8               	bcf	status,0,c
  3756  000836  320E               	rrcf	??_CAN_SendFrame+1,f,c
  3757  000838  320D               	rrcf	??_CAN_SendFrame,f,c
  3758  00083A  2E0F               	decfsz	(??_CAN_SendFrame+2)& (0+255),f,c
  3759  00083C  D7FB               	goto	u1315
  3760  00083E  500D               	movf	??_CAN_SendFrame,w,c
  3761  000840  6E61               	movwf	3937,c	;volatile
  3762                           
  3763                           ;CAN.c: 233:     RXB0DLC = 0;
  3764  000842  0E00               	movlw	0
  3765  000844  6E65               	movwf	3941,c	;volatile
  3766                           
  3767                           ;CAN.c: 235:     if(message->message_type==0x02)
  3768  000846  EE20 F001          	lfsr	2,1
  3769  00084A  500B               	movf	CAN_SendFrame@message,w,c
  3770  00084C  26D9               	addwf	fsr2l,f,c
  3771  00084E  500C               	movf	CAN_SendFrame@message+1,w,c
  3772  000850  22DA               	addwfc	fsr2h,f,c
  3773  000852  0E02               	movlw	2
  3774  000854  18DE               	xorwf	postinc2,w,c
  3775  000856  A4D8               	btfss	status,2,c
  3776  000858  D002               	goto	l2715
  3777                           
  3778                           ;CAN.c: 236:     {;CAN.c: 237:         RXB0DLCbits.RXRTR = 1;
  3779  00085A  8C65               	bsf	3941,6,c	;volatile
  3780                           
  3781                           ;CAN.c: 238:     }
  3782  00085C  D05A               	goto	l2719
  3783  00085E                     l2715:
  3784                           
  3785                           ;CAN.c: 240:     {;CAN.c: 241:         RXB0DLCbits.DLC0 = (message->data_length & 0x0F);
  3786  00085E  EE20 F010          	lfsr	2,16
  3787  000862  500B               	movf	CAN_SendFrame@message,w,c
  3788  000864  26D9               	addwf	fsr2l,f,c
  3789  000866  500C               	movf	CAN_SendFrame@message+1,w,c
  3790  000868  22DA               	addwfc	fsr2h,f,c
  3791  00086A  50DF               	movf	indf2,w,c
  3792  00086C  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  3793  00086E  0E0F               	movlw	15
  3794  000870  160D               	andwf	??_CAN_SendFrame,f,c
  3795  000872  5065               	movf	3941,w,c	;volatile
  3796  000874  180D               	xorwf	??_CAN_SendFrame,w,c
  3797  000876  0BFE               	andlw	-2
  3798  000878  180D               	xorwf	??_CAN_SendFrame,w,c
  3799  00087A  6E65               	movwf	3941,c	;volatile
  3800                           
  3801                           ;CAN.c: 242:         RXB0DLCbits.DLC1 = ((message->data_length & 0x0F)>> 1);
  3802  00087C  EE20 F010          	lfsr	2,16
  3803  000880  500B               	movf	CAN_SendFrame@message,w,c
  3804  000882  26D9               	addwf	fsr2l,f,c
  3805  000884  500C               	movf	CAN_SendFrame@message+1,w,c
  3806  000886  22DA               	addwfc	fsr2h,f,c
  3807  000888  50DF               	movf	indf2,w,c
  3808  00088A  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  3809  00088C  90D8               	bcf	status,0,c
  3810  00088E  320D               	rrcf	??_CAN_SendFrame,f,c
  3811  000890  0E07               	movlw	7
  3812  000892  160D               	andwf	??_CAN_SendFrame,f,c
  3813  000894  460D               	rlncf	??_CAN_SendFrame,f,c
  3814  000896  5065               	movf	3941,w,c	;volatile
  3815  000898  180D               	xorwf	??_CAN_SendFrame,w,c
  3816  00089A  0BFD               	andlw	-3
  3817  00089C  180D               	xorwf	??_CAN_SendFrame,w,c
  3818  00089E  6E65               	movwf	3941,c	;volatile
  3819                           
  3820                           ;CAN.c: 243:         RXB0DLCbits.DLC2 = ((message->data_length & 0x0F)>> 2);
  3821  0008A0  EE20 F010          	lfsr	2,16
  3822  0008A4  500B               	movf	CAN_SendFrame@message,w,c
  3823  0008A6  26D9               	addwf	fsr2l,f,c
  3824  0008A8  500C               	movf	CAN_SendFrame@message+1,w,c
  3825  0008AA  22DA               	addwfc	fsr2h,f,c
  3826  0008AC  50DF               	movf	indf2,w,c
  3827  0008AE  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  3828  0008B0  90D8               	bcf	status,0,c
  3829  0008B2  320D               	rrcf	??_CAN_SendFrame,f,c
  3830  0008B4  90D8               	bcf	status,0,c
  3831  0008B6  320D               	rrcf	??_CAN_SendFrame,f,c
  3832  0008B8  0E03               	movlw	3
  3833  0008BA  160D               	andwf	??_CAN_SendFrame,f,c
  3834  0008BC  460D               	rlncf	??_CAN_SendFrame,f,c
  3835  0008BE  460D               	rlncf	??_CAN_SendFrame,f,c
  3836  0008C0  5065               	movf	3941,w,c	;volatile
  3837  0008C2  180D               	xorwf	??_CAN_SendFrame,w,c
  3838  0008C4  0BFB               	andlw	-5
  3839  0008C6  180D               	xorwf	??_CAN_SendFrame,w,c
  3840  0008C8  6E65               	movwf	3941,c	;volatile
  3841                           
  3842                           ;CAN.c: 244:         RXB0DLCbits.DLC3 = ((message->data_length & 0x0F)>> 3);
  3843  0008CA  EE20 F010          	lfsr	2,16
  3844  0008CE  500B               	movf	CAN_SendFrame@message,w,c
  3845  0008D0  26D9               	addwf	fsr2l,f,c
  3846  0008D2  500C               	movf	CAN_SendFrame@message+1,w,c
  3847  0008D4  22DA               	addwfc	fsr2h,f,c
  3848  0008D6  50DF               	movf	indf2,w,c
  3849  0008D8  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  3850  0008DA  90D8               	bcf	status,0,c
  3851  0008DC  320D               	rrcf	??_CAN_SendFrame,f,c
  3852  0008DE  90D8               	bcf	status,0,c
  3853  0008E0  320D               	rrcf	??_CAN_SendFrame,f,c
  3854  0008E2  90D8               	bcf	status,0,c
  3855  0008E4  320D               	rrcf	??_CAN_SendFrame,f,c
  3856  0008E6  0E01               	movlw	1
  3857  0008E8  160D               	andwf	??_CAN_SendFrame,f,c
  3858  0008EA  460D               	rlncf	??_CAN_SendFrame,f,c
  3859  0008EC  460D               	rlncf	??_CAN_SendFrame,f,c
  3860  0008EE  460D               	rlncf	??_CAN_SendFrame,f,c
  3861  0008F0  5065               	movf	3941,w,c	;volatile
  3862  0008F2  180D               	xorwf	??_CAN_SendFrame,w,c
  3863  0008F4  0BF7               	andlw	-9
  3864  0008F6  180D               	xorwf	??_CAN_SendFrame,w,c
  3865  0008F8  6E65               	movwf	3941,c	;volatile
  3866                           
  3867                           ;CAN.c: 246:         CAN_MoveBuffIntoFrame(&RXB0D0, message->data);
  3868  0008FA  0E66               	movlw	102
  3869  0008FC  6E06               	movwf	CAN_MoveBuffIntoFrame@Ram,c
  3870  0008FE  0E0F               	movlw	15
  3871  000900  6E07               	movwf	CAN_MoveBuffIntoFrame@Ram+1,c
  3872  000902  0E08               	movlw	8
  3873  000904  240B               	addwf	CAN_SendFrame@message,w,c
  3874  000906  6E08               	movwf	CAN_MoveBuffIntoFrame@Buf,c
  3875  000908  0E00               	movlw	0
  3876  00090A  200C               	addwfc	CAN_SendFrame@message+1,w,c
  3877  00090C  6E09               	movwf	CAN_MoveBuffIntoFrame@Buf+1,c
  3878  00090E  ECB2  F00A         	call	_CAN_MoveBuffIntoFrame	;wreg free
  3879  000912                     l2719:
  3880                           
  3881                           ;CAN.c: 249:     RXB0CONbits.FILHIT3 = 1;
  3882  000912  8660               	bsf	3936,3,c	;volatile
  3883                           
  3884                           ;CAN.c: 251:     DetectorLedRadar.Flags.ramkaTx = 1;
  3885  000914  8834               	bsf	_DetectorLedRadar,4,c
  3886  000916  0012               	return		;funcret
  3887  000918                     __end_of_CAN_SendFrame:
  3888                           	opt callstack 0
  3889                           
  3890 ;; *************** function _CAN_GenID *****************
  3891 ;; Defined at:
  3892 ;;		line 395 in file "CAN.c"
  3893 ;; Parameters:    Size  Location     Type
  3894 ;;  message         2    5[COMRAM] PTR struct .
  3895 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3896 ;;  frameID         1    7[COMRAM] unsigned char 
  3897 ;; Auto vars:     Size  Location     Type
  3898 ;;		None
  3899 ;; Return value:  Size  Location     Type
  3900 ;;                  1    wreg      void 
  3901 ;; Registers used:
  3902 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3903 ;; Tracked objects:
  3904 ;;		On entry : 0/0
  3905 ;;		On exit  : 0/0
  3906 ;;		Unchanged: 0/0
  3907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3908 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3910 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3911 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3912 ;;Total ram usage:        7 bytes
  3913 ;; Hardware stack levels used:    1
  3914 ;; Hardware stack levels required when called:    3
  3915 ;; This function calls:
  3916 ;;		Nothing
  3917 ;; This function is called by:
  3918 ;;		_FRAME_HandleCanFrame
  3919 ;; This function uses a non-reentrant model
  3920 ;;
  3921                           
  3922                           	psect	text31
  3923  000E0E                     __ptext31:
  3924                           	opt callstack 0
  3925  000E0E                     _CAN_GenID:
  3926                           	opt callstack 25
  3927                           
  3928                           ;CAN.c: 395: void CAN_GenID(mID * message, BYTE frameID);CAN.c: 396: {;CAN.c: 398:     m
      +                          essage->frame_type = 0x03;
  3929                           
  3930                           ;incstack = 0
  3931  000E0E  EE20 F002          	lfsr	2,2
  3932  000E12  5006               	movf	CAN_GenID@message,w,c
  3933  000E14  26D9               	addwf	fsr2l,f,c
  3934  000E16  5007               	movf	CAN_GenID@message+1,w,c
  3935  000E18  22DA               	addwfc	fsr2h,f,c
  3936  000E1A  0E03               	movlw	3
  3937  000E1C  6EDF               	movwf	indf2,c
  3938                           
  3939                           ;CAN.c: 399:     message->message_type = 0x01;
  3940  000E1E  EE20 F001          	lfsr	2,1
  3941  000E22  5006               	movf	CAN_GenID@message,w,c
  3942  000E24  26D9               	addwf	fsr2l,f,c
  3943  000E26  5007               	movf	CAN_GenID@message+1,w,c
  3944  000E28  22DA               	addwfc	fsr2h,f,c
  3945  000E2A  0E01               	movlw	1
  3946  000E2C  6EDF               	movwf	indf2,c
  3947                           
  3948                           ;CAN.c: 400:     message->id.w[1] = (WORD)frameID * (WORD)4;
  3949  000E2E  5008               	movf	CAN_GenID@frameID,w,c
  3950  000E30  6E09               	movwf	??_CAN_GenID& (0+255),c
  3951  000E32  6A0A               	clrf	(??_CAN_GenID+1)& (0+255),c
  3952  000E34  90D8               	bcf	status,0,c
  3953  000E36  3609               	rlcf	??_CAN_GenID,f,c
  3954  000E38  360A               	rlcf	??_CAN_GenID+1,f,c
  3955  000E3A  90D8               	bcf	status,0,c
  3956  000E3C  3609               	rlcf	??_CAN_GenID,f,c
  3957  000E3E  360A               	rlcf	??_CAN_GenID+1,f,c
  3958  000E40  EE20 F006          	lfsr	2,6
  3959  000E44  5006               	movf	CAN_GenID@message,w,c
  3960  000E46  26D9               	addwf	fsr2l,f,c
  3961  000E48  5007               	movf	CAN_GenID@message+1,w,c
  3962  000E4A  22DA               	addwfc	fsr2h,f,c
  3963  000E4C  C009  FFDE         	movff	??_CAN_GenID,postinc2
  3964  000E50  C00A  FFDD         	movff	??_CAN_GenID+1,postdec2
  3965                           
  3966                           ;CAN.c: 401:     message->id.w[0] = DaneCan.adresCAN + 0x012c;
  3967  000E54  0E2C               	movlw	44
  3968  000E56  6E09               	movwf	??_CAN_GenID& (0+255),c
  3969  000E58  0E01               	movlw	1
  3970  000E5A  6E0A               	movwf	(??_CAN_GenID+1)& (0+255),c
  3971  000E5C  EE20  F032         	lfsr	2,_DaneCan+2
  3972  000E60  CFDE F00B          	movff	postinc2,??_CAN_GenID+2
  3973  000E64  CFDD F00C          	movff	postdec2,??_CAN_GenID+3
  3974  000E68  5009               	movf	??_CAN_GenID,w,c
  3975  000E6A  260B               	addwf	??_CAN_GenID+2,f,c
  3976  000E6C  500A               	movf	??_CAN_GenID+1,w,c
  3977  000E6E  220C               	addwfc	??_CAN_GenID+3,f,c
  3978  000E70  EE20 F004          	lfsr	2,4
  3979  000E74  5006               	movf	CAN_GenID@message,w,c
  3980  000E76  26D9               	addwf	fsr2l,f,c
  3981  000E78  5007               	movf	CAN_GenID@message+1,w,c
  3982  000E7A  22DA               	addwfc	fsr2h,f,c
  3983  000E7C  C00B  FFDE         	movff	??_CAN_GenID+2,postinc2
  3984  000E80  C00C  FFDD         	movff	??_CAN_GenID+3,postdec2
  3985                           
  3986                           ;CAN.c: 404:     message ->id.bits.b16 = 0;
  3987  000E84  EE20 F006          	lfsr	2,6
  3988  000E88  5006               	movf	CAN_GenID@message,w,c
  3989  000E8A  26D9               	addwf	fsr2l,f,c
  3990  000E8C  5007               	movf	CAN_GenID@message+1,w,c
  3991  000E8E  22DA               	addwfc	fsr2h,f,c
  3992  000E90  90DF               	bcf	indf2,0,c
  3993                           
  3994                           ;CAN.c: 405:     message ->id.bits.b17 = 0;
  3995  000E92  EE20 F006          	lfsr	2,6
  3996  000E96  5006               	movf	CAN_GenID@message,w,c
  3997  000E98  26D9               	addwf	fsr2l,f,c
  3998  000E9A  5007               	movf	CAN_GenID@message+1,w,c
  3999  000E9C  22DA               	addwfc	fsr2h,f,c
  4000  000E9E  92DF               	bcf	indf2,1,c
  4001  000EA0  0012               	return		;funcret
  4002  000EA2                     __end_of_CAN_GenID:
  4003                           	opt callstack 0
  4004                           
  4005 ;; *************** function _CAN_TakeFrame *****************
  4006 ;; Defined at:
  4007 ;;		line 260 in file "CAN.c"
  4008 ;; Parameters:    Size  Location     Type
  4009 ;;  message         2   13[COMRAM] PTR struct .
  4010 ;;		 -> TRM_DataTransmition@canMessage(17), 
  4011 ;; Auto vars:     Size  Location     Type
  4012 ;;  k               1   18[COMRAM] unsigned char 
  4013 ;;  tempCON         1   17[COMRAM] unsigned char 
  4014 ;; Return value:  Size  Location     Type
  4015 ;;                  1    wreg      enum E10433
  4016 ;; Registers used:
  4017 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4018 ;; Tracked objects:
  4019 ;;		On entry : 0/0
  4020 ;;		On exit  : 0/0
  4021 ;;		Unchanged: 0/0
  4022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4023 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4024 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4025 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4026 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4027 ;;Total ram usage:        6 bytes
  4028 ;; Hardware stack levels used:    1
  4029 ;; Hardware stack levels required when called:    4
  4030 ;; This function calls:
  4031 ;;		_CAN_MoveBuffIntoFrame
  4032 ;;		___awdiv
  4033 ;; This function is called by:
  4034 ;;		_TRM_DataTransmition
  4035 ;; This function uses a non-reentrant model
  4036 ;;
  4037                           
  4038                           	psect	text32
  4039  000328                     __ptext32:
  4040                           	opt callstack 0
  4041  000328                     _CAN_TakeFrame:
  4042                           	opt callstack 25
  4043                           
  4044                           ;CAN.c: 260: BOOL CAN_TakeFrame(mID * message);CAN.c: 261: {;CAN.c: 262:     BYTE k, tem
      +                          pCON;;CAN.c: 264:     k = CANCON&0x0F;
  4045                           
  4046                           ;incstack = 0
  4047  000328  506F               	movf	3951,w,c	;volatile
  4048  00032A  0B0F               	andlw	15
  4049  00032C  6E13               	movwf	CAN_TakeFrame@k,c
  4050                           
  4051                           ;CAN.c: 266:     ECANCON = 0x90 | k;
  4052  00032E  5013               	movf	CAN_TakeFrame@k,w,c
  4053  000330  0990               	iorlw	144
  4054  000332  6E77               	movwf	3959,c	;volatile
  4055                           
  4056                           ;CAN.c: 269:     switch(k)
  4057  000334  D018               	goto	l2969
  4058  000336                     l198:
  4059                           
  4060                           ;CAN.c: 272:             tempCON = RXB0CON;
  4061  000336  CF60 F012          	movff	3936,CAN_TakeFrame@tempCON	;volatile
  4062                           
  4063                           ;CAN.c: 273:             break;
  4064  00033A  D035               	goto	l199
  4065  00033C                     l200:
  4066                           
  4067                           ;CAN.c: 275:             tempCON = RXB1CON;
  4068  00033C  CF50 F012          	movff	3920,CAN_TakeFrame@tempCON	;volatile
  4069                           
  4070                           ;CAN.c: 276:             break;
  4071  000340  D032               	goto	l199
  4072  000342                     l201:
  4073                           
  4074                           ;CAN.c: 278:             tempCON = B0CON;
  4075  000342  CE20 F012          	movff	3616,CAN_TakeFrame@tempCON	;volatile
  4076                           
  4077                           ;CAN.c: 279:             break;
  4078  000346  D02F               	goto	l199
  4079  000348                     l202:
  4080                           
  4081                           ;CAN.c: 281:             tempCON = B1CON;
  4082  000348  CE30 F012          	movff	3632,CAN_TakeFrame@tempCON	;volatile
  4083                           
  4084                           ;CAN.c: 282:             break;
  4085  00034C  D02C               	goto	l199
  4086  00034E                     l203:
  4087                           
  4088                           ;CAN.c: 284:             tempCON = B2CON;
  4089  00034E  CE40 F012          	movff	3648,CAN_TakeFrame@tempCON	;volatile
  4090                           
  4091                           ;CAN.c: 285:             break;
  4092  000352  D029               	goto	l199
  4093  000354                     l204:
  4094                           
  4095                           ;CAN.c: 287:             tempCON = B3CON;
  4096  000354  CE50 F012          	movff	3664,CAN_TakeFrame@tempCON	;volatile
  4097                           
  4098                           ;CAN.c: 288:             break;
  4099  000358  D026               	goto	l199
  4100  00035A                     l205:
  4101                           
  4102                           ;CAN.c: 290:             tempCON = B4CON;
  4103  00035A  CE60 F012          	movff	3680,CAN_TakeFrame@tempCON	;volatile
  4104                           
  4105                           ;CAN.c: 291:             break;
  4106  00035E  D023               	goto	l199
  4107  000360                     l206:
  4108                           
  4109                           ;CAN.c: 293:             tempCON = B5CON;
  4110  000360  CE70 F012          	movff	3696,CAN_TakeFrame@tempCON	;volatile
  4111                           
  4112                           ;CAN.c: 294:             break;
  4113  000364  D020               	goto	l199
  4114  000366                     l2969:
  4115  000366  5013               	movf	CAN_TakeFrame@k,w,c
  4116  000368  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  4117  00036A  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  4118                           
  4119                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4120                           ; Switch size 1, requested type "simple"
  4121                           ; Number of cases is 1, Range of values is 0 to 0
  4122                           ; switch strategies available:
  4123                           ; Name         Instructions Cycles
  4124                           ; simple_byte            4     3 (average)
  4125                           ;	Chosen strategy is simple_byte
  4126  00036C  5011               	movf	??_CAN_TakeFrame+1,w,c
  4127  00036E  0A00               	xorlw	0	; case 0
  4128  000370  A4D8               	btfss	status,2,c
  4129  000372  D019               	goto	l199
  4130                           
  4131                           ; Switch size 1, requested type "simple"
  4132                           ; Number of cases is 8, Range of values is 0 to 7
  4133                           ; switch strategies available:
  4134                           ; Name         Instructions Cycles
  4135                           ; simple_byte           25    13 (average)
  4136                           ;	Chosen strategy is simple_byte
  4137  000374  5010               	movf	??_CAN_TakeFrame,w,c
  4138  000376  0A00               	xorlw	0	; case 0
  4139  000378  B4D8               	btfsc	status,2,c
  4140  00037A  D7DD               	goto	l198
  4141  00037C  0A01               	xorlw	1	; case 1
  4142  00037E  B4D8               	btfsc	status,2,c
  4143  000380  D7DD               	goto	l200
  4144  000382  0A03               	xorlw	3	; case 2
  4145  000384  B4D8               	btfsc	status,2,c
  4146  000386  D7DD               	goto	l201
  4147  000388  0A01               	xorlw	1	; case 3
  4148  00038A  B4D8               	btfsc	status,2,c
  4149  00038C  D7DD               	goto	l202
  4150  00038E  0A07               	xorlw	7	; case 4
  4151  000390  B4D8               	btfsc	status,2,c
  4152  000392  D7DD               	goto	l203
  4153  000394  0A01               	xorlw	1	; case 5
  4154  000396  B4D8               	btfsc	status,2,c
  4155  000398  D7DD               	goto	l204
  4156  00039A  0A03               	xorlw	3	; case 6
  4157  00039C  B4D8               	btfsc	status,2,c
  4158  00039E  D7DD               	goto	l205
  4159  0003A0  0A01               	xorlw	1	; case 7
  4160  0003A2  B4D8               	btfsc	status,2,c
  4161  0003A4  D7DD               	goto	l206
  4162  0003A6                     l199:
  4163                           
  4164                           ;CAN.c: 298:     if((tempCON & 0x80) > 0)
  4165  0003A6  AE12               	btfss	CAN_TakeFrame@tempCON,7,c
  4166  0003A8  D0A5               	goto	l3005
  4167                           
  4168                           ;CAN.c: 299:     {;CAN.c: 300:         message->buffer = RXB0CON & 0x1F;
  4169  0003AA  EE20 F003          	lfsr	2,3
  4170  0003AE  500E               	movf	CAN_TakeFrame@message,w,c
  4171  0003B0  26D9               	addwf	fsr2l,f,c
  4172  0003B2  500F               	movf	CAN_TakeFrame@message+1,w,c
  4173  0003B4  22DA               	addwfc	fsr2h,f,c
  4174  0003B6  5060               	movf	3936,w,c	;volatile
  4175  0003B8  0B1F               	andlw	31
  4176  0003BA  6EDF               	movwf	indf2,c
  4177                           
  4178                           ;CAN.c: 301:         message->id.v[0] = RXB0EIDL;
  4179  0003BC  EE20 F004          	lfsr	2,4
  4180  0003C0  500E               	movf	CAN_TakeFrame@message,w,c
  4181  0003C2  26D9               	addwf	fsr2l,f,c
  4182  0003C4  500F               	movf	CAN_TakeFrame@message+1,w,c
  4183  0003C6  22DA               	addwfc	fsr2h,f,c
  4184  0003C8  CF64 FFDF          	movff	3940,indf2	;volatile
  4185                           
  4186                           ;CAN.c: 302:         message->id.v[1] = RXB0EIDH;
  4187  0003CC  EE20 F005          	lfsr	2,5
  4188  0003D0  500E               	movf	CAN_TakeFrame@message,w,c
  4189  0003D2  26D9               	addwf	fsr2l,f,c
  4190  0003D4  500F               	movf	CAN_TakeFrame@message+1,w,c
  4191  0003D6  22DA               	addwfc	fsr2h,f,c
  4192  0003D8  CF63 FFDF          	movff	3939,indf2	;volatile
  4193                           
  4194                           ;CAN.c: 303:         message->id.v[2] = (RXB0SIDL/8) | (RXB0SIDL&0x03);
  4195  0003DC  EE20 F006          	lfsr	2,6
  4196  0003E0  500E               	movf	CAN_TakeFrame@message,w,c
  4197  0003E2  26D9               	addwf	fsr2l,f,c
  4198  0003E4  500F               	movf	CAN_TakeFrame@message+1,w,c
  4199  0003E6  22DA               	addwfc	fsr2h,f,c
  4200  0003E8  CF62 F010          	movff	3938,??_CAN_TakeFrame	;volatile
  4201  0003EC  0E03               	movlw	3
  4202  0003EE  1610               	andwf	??_CAN_TakeFrame,f,c
  4203  0003F0  CF62 F006          	movff	3938,___awdiv@dividend	;volatile
  4204  0003F4  6A07               	clrf	___awdiv@dividend+1,c
  4205  0003F6  0E00               	movlw	0
  4206  0003F8  6E09               	movwf	___awdiv@divisor+1,c
  4207  0003FA  0E08               	movlw	8
  4208  0003FC  6E08               	movwf	___awdiv@divisor,c
  4209  0003FE  EC97  F007         	call	___awdiv	;wreg free
  4210  000402  5006               	movf	?___awdiv,w,c
  4211  000404  1010               	iorwf	??_CAN_TakeFrame,w,c
  4212  000406  6EDF               	movwf	indf2,c
  4213                           
  4214                           ;CAN.c: 304:         message->id.w[1] |= (WORD)RXB0SIDH*32;
  4215  000408  5061               	movf	3937,w,c	;volatile
  4216  00040A  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  4217  00040C  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  4218  00040E  0E05               	movlw	5
  4219  000410                     u1685:
  4220  000410  90D8               	bcf	status,0,c
  4221  000412  3610               	rlcf	??_CAN_TakeFrame,f,c
  4222  000414  3611               	rlcf	??_CAN_TakeFrame+1,f,c
  4223  000416  2EE8               	decfsz	wreg,f,c
  4224  000418  D7FB               	goto	u1685
  4225  00041A  EE20 F006          	lfsr	2,6
  4226  00041E  500E               	movf	CAN_TakeFrame@message,w,c
  4227  000420  26D9               	addwf	fsr2l,f,c
  4228  000422  500F               	movf	CAN_TakeFrame@message+1,w,c
  4229  000424  22DA               	addwfc	fsr2h,f,c
  4230  000426  5010               	movf	??_CAN_TakeFrame,w,c
  4231  000428  12DE               	iorwf	postinc2,f,c
  4232  00042A  5011               	movf	??_CAN_TakeFrame+1,w,c
  4233  00042C  12DD               	iorwf	postdec2,f,c
  4234                           
  4235                           ;CAN.c: 305:         message->frame_type=0x03;
  4236  00042E  EE20 F002          	lfsr	2,2
  4237  000432  500E               	movf	CAN_TakeFrame@message,w,c
  4238  000434  26D9               	addwf	fsr2l,f,c
  4239  000436  500F               	movf	CAN_TakeFrame@message+1,w,c
  4240  000438  22DA               	addwfc	fsr2h,f,c
  4241  00043A  0E03               	movlw	3
  4242  00043C  6EDF               	movwf	indf2,c
  4243                           
  4244                           ;CAN.c: 309:         if(RXB0DLCbits.RXRTR == 0)
  4245  00043E  BC65               	btfsc	3941,6,c	;volatile
  4246  000440  D068               	goto	l3011
  4247                           
  4248                           ;CAN.c: 310:         {;CAN.c: 311:             message->message_type = 0x01;
  4249  000442  EE20 F001          	lfsr	2,1
  4250  000446  500E               	movf	CAN_TakeFrame@message,w,c
  4251  000448  26D9               	addwf	fsr2l,f,c
  4252  00044A  500F               	movf	CAN_TakeFrame@message+1,w,c
  4253  00044C  22DA               	addwfc	fsr2h,f,c
  4254  00044E  0E01               	movlw	1
  4255  000450  6EDF               	movwf	indf2,c
  4256                           
  4257                           ;CAN.c: 312:             message->data_length= RXB0DLC & 0x0F;
  4258  000452  EE20 F010          	lfsr	2,16
  4259  000456  500E               	movf	CAN_TakeFrame@message,w,c
  4260  000458  26D9               	addwf	fsr2l,f,c
  4261  00045A  500F               	movf	CAN_TakeFrame@message+1,w,c
  4262  00045C  22DA               	addwfc	fsr2h,f,c
  4263  00045E  5065               	movf	3941,w,c	;volatile
  4264  000460  0B0F               	andlw	15
  4265  000462  6EDF               	movwf	indf2,c
  4266                           
  4267                           ;CAN.c: 313:             if(message->data_length > 8)
  4268  000464  EE20 F010          	lfsr	2,16
  4269  000468  500E               	movf	CAN_TakeFrame@message,w,c
  4270  00046A  26D9               	addwf	fsr2l,f,c
  4271  00046C  500F               	movf	CAN_TakeFrame@message+1,w,c
  4272  00046E  22DA               	addwfc	fsr2h,f,c
  4273  000470  0E08               	movlw	8
  4274  000472  64DF               	cpfsgt	indf2,c
  4275  000474  D041               	goto	l3009
  4276  000476  D01E               	goto	l3003
  4277  000478                     l2985:
  4278                           
  4279                           ;CAN.c: 319:                         RXB0CON = 0;
  4280  000478  0E00               	movlw	0
  4281  00047A  6E60               	movwf	3936,c	;volatile
  4282                           
  4283                           ;CAN.c: 320:                         break;
  4284  00047C  D03B               	goto	l3005
  4285  00047E                     l2987:
  4286                           
  4287                           ;CAN.c: 322:                         RXB1CON = 0;
  4288  00047E  0E00               	movlw	0
  4289  000480  010F               	movlb	15	; () banked
  4290  000482  D00E               	goto	L1
  4291  000484                     l2989:
  4292                           
  4293                           ;CAN.c: 325:                         B0CON = 0;
  4294  000484  0E00               	movlw	0
  4295  000486  010E               	movlb	14	; () banked
  4296  000488  6F20               	movwf	32,b	;volatile
  4297                           
  4298                           ;CAN.c: 326:                         break;
  4299  00048A  D034               	goto	l3005
  4300  00048C                     l2991:
  4301                           
  4302                           ;CAN.c: 328:                         B1CON = 0;
  4303  00048C  0E00               	movlw	0
  4304  00048E  010E               	movlb	14	; () banked
  4305  000490  6F30               	movwf	48,b	;volatile
  4306                           
  4307                           ;CAN.c: 329:                         break;
  4308  000492  D030               	goto	l3005
  4309  000494                     l2993:
  4310                           
  4311                           ;CAN.c: 331:                         B2CON = 0;
  4312  000494  0E00               	movlw	0
  4313  000496  010E               	movlb	14	; () banked
  4314  000498  6F40               	movwf	64,b	;volatile
  4315                           
  4316                           ;CAN.c: 332:                         break;
  4317  00049A  D02C               	goto	l3005
  4318  00049C                     l2995:
  4319                           
  4320                           ;CAN.c: 334:                         B3CON = 0;
  4321  00049C  0E00               	movlw	0
  4322  00049E  010E               	movlb	14	; () banked
  4323  0004A0                     L1:
  4324  0004A0  6F50               	movwf	80,b	;volatile
  4325                           
  4326                           ;CAN.c: 335:                         break;
  4327  0004A2  D028               	goto	l3005
  4328  0004A4                     l2997:
  4329                           
  4330                           ;CAN.c: 337:                         B4CON = 0;
  4331  0004A4  0E00               	movlw	0
  4332  0004A6  010E               	movlb	14	; () banked
  4333  0004A8  6F60               	movwf	96,b	;volatile
  4334                           
  4335                           ;CAN.c: 338:                         break;
  4336  0004AA  D024               	goto	l3005
  4337  0004AC                     l2999:
  4338                           
  4339                           ;CAN.c: 340:                         B5CON = 0;
  4340  0004AC  0E00               	movlw	0
  4341  0004AE  010E               	movlb	14	; () banked
  4342  0004B0  6F70               	movwf	112,b	;volatile
  4343                           
  4344                           ;CAN.c: 341:                         break;
  4345  0004B2  D020               	goto	l3005
  4346  0004B4                     l3003:
  4347  0004B4  5013               	movf	CAN_TakeFrame@k,w,c
  4348  0004B6  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  4349  0004B8  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  4350                           
  4351                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4352                           ; Switch size 1, requested type "simple"
  4353                           ; Number of cases is 1, Range of values is 0 to 0
  4354                           ; switch strategies available:
  4355                           ; Name         Instructions Cycles
  4356                           ; simple_byte            4     3 (average)
  4357                           ;	Chosen strategy is simple_byte
  4358  0004BA  5011               	movf	??_CAN_TakeFrame+1,w,c
  4359  0004BC  0A00               	xorlw	0	; case 0
  4360  0004BE  A4D8               	btfss	status,2,c
  4361  0004C0  D019               	goto	l3005
  4362                           
  4363                           ; Switch size 1, requested type "simple"
  4364                           ; Number of cases is 8, Range of values is 0 to 7
  4365                           ; switch strategies available:
  4366                           ; Name         Instructions Cycles
  4367                           ; simple_byte           25    13 (average)
  4368                           ;	Chosen strategy is simple_byte
  4369  0004C2  5010               	movf	??_CAN_TakeFrame,w,c
  4370  0004C4  0A00               	xorlw	0	; case 0
  4371  0004C6  B4D8               	btfsc	status,2,c
  4372  0004C8  D7D7               	goto	l2985
  4373  0004CA  0A01               	xorlw	1	; case 1
  4374  0004CC  B4D8               	btfsc	status,2,c
  4375  0004CE  D7D7               	goto	l2987
  4376  0004D0  0A03               	xorlw	3	; case 2
  4377  0004D2  B4D8               	btfsc	status,2,c
  4378  0004D4  D7D7               	goto	l2989
  4379  0004D6  0A01               	xorlw	1	; case 3
  4380  0004D8  B4D8               	btfsc	status,2,c
  4381  0004DA  D7D8               	goto	l2991
  4382  0004DC  0A07               	xorlw	7	; case 4
  4383  0004DE  B4D8               	btfsc	status,2,c
  4384  0004E0  D7D9               	goto	l2993
  4385  0004E2  0A01               	xorlw	1	; case 5
  4386  0004E4  B4D8               	btfsc	status,2,c
  4387  0004E6  D7DA               	goto	l2995
  4388  0004E8  0A03               	xorlw	3	; case 6
  4389  0004EA  B4D8               	btfsc	status,2,c
  4390  0004EC  D7DB               	goto	l2997
  4391  0004EE  0A01               	xorlw	1	; case 7
  4392  0004F0  B4D8               	btfsc	status,2,c
  4393  0004F2  D7DC               	goto	l2999
  4394  0004F4                     l3005:
  4395                           
  4396                           ;CAN.c: 343:                 return FALSE;
  4397  0004F4  0E00               	movlw	0
  4398  0004F6  0012               	return	
  4399  0004F8                     l3009:
  4400                           
  4401                           ;CAN.c: 345:             CAN_MoveBuffIntoFrame(message->data, &RXB0D0);
  4402  0004F8  0E08               	movlw	8
  4403  0004FA  240E               	addwf	CAN_TakeFrame@message,w,c
  4404  0004FC  6E06               	movwf	CAN_MoveBuffIntoFrame@Ram,c
  4405  0004FE  0E00               	movlw	0
  4406  000500  200F               	addwfc	CAN_TakeFrame@message+1,w,c
  4407  000502  6E07               	movwf	CAN_MoveBuffIntoFrame@Ram+1,c
  4408  000504  0E66               	movlw	102
  4409  000506  6E08               	movwf	CAN_MoveBuffIntoFrame@Buf,c
  4410  000508  0E0F               	movlw	15
  4411  00050A  6E09               	movwf	CAN_MoveBuffIntoFrame@Buf+1,c
  4412  00050C  ECB2  F00A         	call	_CAN_MoveBuffIntoFrame	;wreg free
  4413                           
  4414                           ;CAN.c: 346:         }
  4415  000510  D027               	goto	l3031
  4416  000512                     l3011:
  4417                           
  4418                           ;CAN.c: 349:         {;CAN.c: 350:             message->message_type=0x02;
  4419  000512  EE20 F001          	lfsr	2,1
  4420  000516  500E               	movf	CAN_TakeFrame@message,w,c
  4421  000518  26D9               	addwf	fsr2l,f,c
  4422  00051A  500F               	movf	CAN_TakeFrame@message+1,w,c
  4423  00051C  22DA               	addwfc	fsr2h,f,c
  4424  00051E  0E02               	movlw	2
  4425  000520  6EDF               	movwf	indf2,c
  4426  000522  D01E               	goto	l3031
  4427  000524                     l3013:
  4428                           
  4429                           ;CAN.c: 356:                 RXB0CON = 0;
  4430  000524  0E00               	movlw	0
  4431  000526  6E60               	movwf	3936,c	;volatile
  4432                           
  4433                           ;CAN.c: 357:                 break;
  4434  000528  D03B               	goto	l3033
  4435  00052A                     l3015:
  4436                           
  4437                           ;CAN.c: 359:                 RXB1CON = 0;
  4438  00052A  0E00               	movlw	0
  4439  00052C  010F               	movlb	15	; () banked
  4440  00052E  D00E               	goto	L2
  4441  000530                     l3017:
  4442                           
  4443                           ;CAN.c: 362:                 B0CON = 0;
  4444  000530  0E00               	movlw	0
  4445  000532  010E               	movlb	14	; () banked
  4446  000534  6F20               	movwf	32,b	;volatile
  4447                           
  4448                           ;CAN.c: 363:                 break;
  4449  000536  D034               	goto	l3033
  4450  000538                     l3019:
  4451                           
  4452                           ;CAN.c: 365:                 B1CON = 0;
  4453  000538  0E00               	movlw	0
  4454  00053A  010E               	movlb	14	; () banked
  4455  00053C  6F30               	movwf	48,b	;volatile
  4456                           
  4457                           ;CAN.c: 366:                 break;
  4458  00053E  D030               	goto	l3033
  4459  000540                     l3021:
  4460                           
  4461                           ;CAN.c: 368:                 B2CON = 0;
  4462  000540  0E00               	movlw	0
  4463  000542  010E               	movlb	14	; () banked
  4464  000544  6F40               	movwf	64,b	;volatile
  4465                           
  4466                           ;CAN.c: 369:                 break;
  4467  000546  D02C               	goto	l3033
  4468  000548                     l3023:
  4469                           
  4470                           ;CAN.c: 371:                 B3CON = 0;
  4471  000548  0E00               	movlw	0
  4472  00054A  010E               	movlb	14	; () banked
  4473  00054C                     L2:
  4474  00054C  6F50               	movwf	80,b	;volatile
  4475                           
  4476                           ;CAN.c: 372:                 break;
  4477  00054E  D028               	goto	l3033
  4478  000550                     l3025:
  4479                           
  4480                           ;CAN.c: 374:                 B4CON = 0;
  4481  000550  0E00               	movlw	0
  4482  000552  010E               	movlb	14	; () banked
  4483  000554  6F60               	movwf	96,b	;volatile
  4484                           
  4485                           ;CAN.c: 375:                 break;
  4486  000556  D024               	goto	l3033
  4487  000558                     l3027:
  4488                           
  4489                           ;CAN.c: 377:                 B5CON = 0;
  4490  000558  0E00               	movlw	0
  4491  00055A  010E               	movlb	14	; () banked
  4492  00055C  6F70               	movwf	112,b	;volatile
  4493                           
  4494                           ;CAN.c: 378:                 break;
  4495  00055E  D020               	goto	l3033
  4496  000560                     l3031:
  4497  000560  5013               	movf	CAN_TakeFrame@k,w,c
  4498  000562  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  4499  000564  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  4500                           
  4501                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4502                           ; Switch size 1, requested type "simple"
  4503                           ; Number of cases is 1, Range of values is 0 to 0
  4504                           ; switch strategies available:
  4505                           ; Name         Instructions Cycles
  4506                           ; simple_byte            4     3 (average)
  4507                           ;	Chosen strategy is simple_byte
  4508  000566  5011               	movf	??_CAN_TakeFrame+1,w,c
  4509  000568  0A00               	xorlw	0	; case 0
  4510  00056A  A4D8               	btfss	status,2,c
  4511  00056C  D019               	goto	l3033
  4512                           
  4513                           ; Switch size 1, requested type "simple"
  4514                           ; Number of cases is 8, Range of values is 0 to 7
  4515                           ; switch strategies available:
  4516                           ; Name         Instructions Cycles
  4517                           ; simple_byte           25    13 (average)
  4518                           ;	Chosen strategy is simple_byte
  4519  00056E  5010               	movf	??_CAN_TakeFrame,w,c
  4520  000570  0A00               	xorlw	0	; case 0
  4521  000572  B4D8               	btfsc	status,2,c
  4522  000574  D7D7               	goto	l3013
  4523  000576  0A01               	xorlw	1	; case 1
  4524  000578  B4D8               	btfsc	status,2,c
  4525  00057A  D7D7               	goto	l3015
  4526  00057C  0A03               	xorlw	3	; case 2
  4527  00057E  B4D8               	btfsc	status,2,c
  4528  000580  D7D7               	goto	l3017
  4529  000582  0A01               	xorlw	1	; case 3
  4530  000584  B4D8               	btfsc	status,2,c
  4531  000586  D7D8               	goto	l3019
  4532  000588  0A07               	xorlw	7	; case 4
  4533  00058A  B4D8               	btfsc	status,2,c
  4534  00058C  D7D9               	goto	l3021
  4535  00058E  0A01               	xorlw	1	; case 5
  4536  000590  B4D8               	btfsc	status,2,c
  4537  000592  D7DA               	goto	l3023
  4538  000594  0A03               	xorlw	3	; case 6
  4539  000596  B4D8               	btfsc	status,2,c
  4540  000598  D7DB               	goto	l3025
  4541  00059A  0A01               	xorlw	1	; case 7
  4542  00059C  B4D8               	btfsc	status,2,c
  4543  00059E  D7DC               	goto	l3027
  4544  0005A0                     l3033:
  4545                           
  4546                           ;CAN.c: 380:         return TRUE;
  4547  0005A0  0E01               	movlw	1
  4548  0005A2  0012               	return		;funcret
  4549  0005A4                     __end_of_CAN_TakeFrame:
  4550                           	opt callstack 0
  4551                           
  4552 ;; *************** function ___awdiv *****************
  4553 ;; Defined at:
  4554 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  4555 ;; Parameters:    Size  Location     Type
  4556 ;;  dividend        2    5[COMRAM] int 
  4557 ;;  divisor         2    7[COMRAM] int 
  4558 ;; Auto vars:     Size  Location     Type
  4559 ;;  quotient        2   11[COMRAM] int 
  4560 ;;  sign            1   10[COMRAM] unsigned char 
  4561 ;;  counter         1    9[COMRAM] unsigned char 
  4562 ;; Return value:  Size  Location     Type
  4563 ;;                  2    5[COMRAM] int 
  4564 ;; Registers used:
  4565 ;;		wreg, status,2, status,0
  4566 ;; Tracked objects:
  4567 ;;		On entry : 0/0
  4568 ;;		On exit  : 0/0
  4569 ;;		Unchanged: 0/0
  4570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4571 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4572 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4574 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4575 ;;Total ram usage:        8 bytes
  4576 ;; Hardware stack levels used:    1
  4577 ;; Hardware stack levels required when called:    3
  4578 ;; This function calls:
  4579 ;;		Nothing
  4580 ;; This function is called by:
  4581 ;;		_CAN_TakeFrame
  4582 ;;		_FRAME_HandleCanFrame
  4583 ;; This function uses a non-reentrant model
  4584 ;;
  4585                           
  4586                           	psect	text33
  4587  000F2E                     __ptext33:
  4588                           	opt callstack 0
  4589  000F2E                     ___awdiv:
  4590                           	opt callstack 25
  4591                           
  4592                           ;incstack = 0
  4593  000F2E  0E00               	movlw	0
  4594  000F30  6E0B               	movwf	___awdiv@sign,c
  4595  000F32  AE09               	btfss	___awdiv@divisor+1,7,c
  4596  000F34  D006               	goto	l2911
  4597  000F36  6C08               	negf	___awdiv@divisor,c
  4598  000F38  1E09               	comf	___awdiv@divisor+1,f,c
  4599  000F3A  B0D8               	btfsc	status,0,c
  4600  000F3C  2A09               	incf	___awdiv@divisor+1,f,c
  4601  000F3E  0E01               	movlw	1
  4602  000F40  6E0B               	movwf	___awdiv@sign,c
  4603  000F42                     l2911:
  4604  000F42  AE07               	btfss	___awdiv@dividend+1,7,c
  4605  000F44  D006               	goto	l2917
  4606  000F46  6C06               	negf	___awdiv@dividend,c
  4607  000F48  1E07               	comf	___awdiv@dividend+1,f,c
  4608  000F4A  B0D8               	btfsc	status,0,c
  4609  000F4C  2A07               	incf	___awdiv@dividend+1,f,c
  4610  000F4E  0E01               	movlw	1
  4611  000F50  1A0B               	xorwf	___awdiv@sign,f,c
  4612  000F52                     l2917:
  4613  000F52  0E00               	movlw	0
  4614  000F54  6E0D               	movwf	___awdiv@quotient+1,c
  4615  000F56  0E00               	movlw	0
  4616  000F58  6E0C               	movwf	___awdiv@quotient,c
  4617  000F5A  5008               	movf	___awdiv@divisor,w,c
  4618  000F5C  1009               	iorwf	___awdiv@divisor+1,w,c
  4619  000F5E  B4D8               	btfsc	status,2,c
  4620  000F60  D01C               	goto	l2939
  4621  000F62  0E01               	movlw	1
  4622  000F64  6E0A               	movwf	___awdiv@counter,c
  4623  000F66  D004               	goto	l2925
  4624  000F68                     l2923:
  4625  000F68  90D8               	bcf	status,0,c
  4626  000F6A  3608               	rlcf	___awdiv@divisor,f,c
  4627  000F6C  3609               	rlcf	___awdiv@divisor+1,f,c
  4628  000F6E  2A0A               	incf	___awdiv@counter,f,c
  4629  000F70                     l2925:
  4630  000F70  AE09               	btfss	___awdiv@divisor+1,7,c
  4631  000F72  D7FA               	goto	l2923
  4632  000F74                     u1620:
  4633  000F74  90D8               	bcf	status,0,c
  4634  000F76  360C               	rlcf	___awdiv@quotient,f,c
  4635  000F78  360D               	rlcf	___awdiv@quotient+1,f,c
  4636  000F7A  5008               	movf	___awdiv@divisor,w,c
  4637  000F7C  5C06               	subwf	___awdiv@dividend,w,c
  4638  000F7E  5009               	movf	___awdiv@divisor+1,w,c
  4639  000F80  5807               	subwfb	___awdiv@dividend+1,w,c
  4640  000F82  A0D8               	btfss	status,0,c
  4641  000F84  D005               	goto	l2935
  4642  000F86  5008               	movf	___awdiv@divisor,w,c
  4643  000F88  5E06               	subwf	___awdiv@dividend,f,c
  4644  000F8A  5009               	movf	___awdiv@divisor+1,w,c
  4645  000F8C  5A07               	subwfb	___awdiv@dividend+1,f,c
  4646  000F8E  800C               	bsf	___awdiv@quotient,0,c
  4647  000F90                     l2935:
  4648  000F90  90D8               	bcf	status,0,c
  4649  000F92  3209               	rrcf	___awdiv@divisor+1,f,c
  4650  000F94  3208               	rrcf	___awdiv@divisor,f,c
  4651  000F96  2E0A               	decfsz	___awdiv@counter,f,c
  4652  000F98  D7ED               	goto	u1620
  4653  000F9A                     l2939:
  4654  000F9A  500B               	movf	___awdiv@sign,w,c
  4655  000F9C  B4D8               	btfsc	status,2,c
  4656  000F9E  D004               	goto	l2943
  4657  000FA0  6C0C               	negf	___awdiv@quotient,c
  4658  000FA2  1E0D               	comf	___awdiv@quotient+1,f,c
  4659  000FA4  B0D8               	btfsc	status,0,c
  4660  000FA6  2A0D               	incf	___awdiv@quotient+1,f,c
  4661  000FA8                     l2943:
  4662  000FA8  C00C  F006         	movff	___awdiv@quotient,?___awdiv
  4663  000FAC  C00D  F007         	movff	___awdiv@quotient+1,?___awdiv+1
  4664  000FB0  0012               	return		;funcret
  4665  000FB2                     __end_of___awdiv:
  4666                           	opt callstack 0
  4667                           
  4668 ;; *************** function _CAN_MoveBuffIntoFrame *****************
  4669 ;; Defined at:
  4670 ;;		line 182 in file "CAN.c"
  4671 ;; Parameters:    Size  Location     Type
  4672 ;;  Ram             2    5[COMRAM] PTR unsigned char 
  4673 ;;		 -> TRM_DataTransmition@canMessage(17), RXB0D0(1), 
  4674 ;;  Buf             2    7[COMRAM] PTR unsigned char 
  4675 ;;		 -> TRM_DataTransmition@canMessage(17), RXB0D0(1), 
  4676 ;; Auto vars:     Size  Location     Type
  4677 ;;  i               1    9[COMRAM] unsigned char 
  4678 ;; Return value:  Size  Location     Type
  4679 ;;                  1    wreg      void 
  4680 ;; Registers used:
  4681 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4682 ;; Tracked objects:
  4683 ;;		On entry : 0/0
  4684 ;;		On exit  : 0/0
  4685 ;;		Unchanged: 0/0
  4686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4687 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4688 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4690 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4691 ;;Total ram usage:        5 bytes
  4692 ;; Hardware stack levels used:    1
  4693 ;; Hardware stack levels required when called:    3
  4694 ;; This function calls:
  4695 ;;		Nothing
  4696 ;; This function is called by:
  4697 ;;		_CAN_SendFrame
  4698 ;;		_CAN_TakeFrame
  4699 ;; This function uses a non-reentrant model
  4700 ;;
  4701                           
  4702                           	psect	text34
  4703  001564                     __ptext34:
  4704                           	opt callstack 0
  4705  001564                     _CAN_MoveBuffIntoFrame:
  4706                           	opt callstack 24
  4707                           
  4708                           ;CAN.c: 182: static void CAN_MoveBuffIntoFrame(BYTE* Ram, BYTE* Buf);CAN.c: 183: {;CAN.c
      +                          : 184:     BYTE i;;CAN.c: 185:     for(i=0; i<8; ++i)
  4709                           
  4710                           ;incstack = 0
  4711  001564  0E00               	movlw	0
  4712  001566  6E0A               	movwf	CAN_MoveBuffIntoFrame@i,c
  4713  001568                     l2503:
  4714                           
  4715                           ;CAN.c: 186:     {;CAN.c: 187:         Ram[i]=(*(Buf+i));
  4716  001568  500A               	movf	CAN_MoveBuffIntoFrame@i,w,c
  4717  00156A  2408               	addwf	CAN_MoveBuffIntoFrame@Buf,w,c
  4718  00156C  6ED9               	movwf	fsr2l,c
  4719  00156E  0E00               	movlw	0
  4720  001570  2009               	addwfc	CAN_MoveBuffIntoFrame@Buf+1,w,c
  4721  001572  6EDA               	movwf	fsr2h,c
  4722  001574  500A               	movf	CAN_MoveBuffIntoFrame@i,w,c
  4723  001576  2406               	addwf	CAN_MoveBuffIntoFrame@Ram,w,c
  4724  001578  6EE1               	movwf	fsr1l,c
  4725  00157A  0E00               	movlw	0
  4726  00157C  2007               	addwfc	CAN_MoveBuffIntoFrame@Ram+1,w,c
  4727  00157E  6EE2               	movwf	fsr1h,c
  4728  001580  CFDF FFE7          	movff	indf2,indf1
  4729                           
  4730                           ;CAN.c: 188:     }
  4731  001584  2A0A               	incf	CAN_MoveBuffIntoFrame@i,f,c
  4732  001586  0E07               	movlw	7
  4733  001588  640A               	cpfsgt	CAN_MoveBuffIntoFrame@i,c
  4734  00158A  D7EE               	goto	l2503
  4735  00158C  0012               	return	
  4736  00158E                     __end_of_CAN_MoveBuffIntoFrame:
  4737                           	opt callstack 0
  4738                           
  4739 ;; *************** function _TMR1_Update_flag_Set *****************
  4740 ;; Defined at:
  4741 ;;		line 32 in file "TMR1.c"
  4742 ;; Parameters:    Size  Location     Type
  4743 ;;  a               2    5[COMRAM] unsigned int 
  4744 ;; Auto vars:     Size  Location     Type
  4745 ;;		None
  4746 ;; Return value:  Size  Location     Type
  4747 ;;                  1    wreg      void 
  4748 ;; Registers used:
  4749 ;;		None
  4750 ;; Tracked objects:
  4751 ;;		On entry : 0/0
  4752 ;;		On exit  : 0/0
  4753 ;;		Unchanged: 0/0
  4754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4755 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4758 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4759 ;;Total ram usage:        2 bytes
  4760 ;; Hardware stack levels used:    1
  4761 ;; Hardware stack levels required when called:    3
  4762 ;; This function calls:
  4763 ;;		Nothing
  4764 ;; This function is called by:
  4765 ;;		_main
  4766 ;; This function uses a non-reentrant model
  4767 ;;
  4768                           
  4769                           	psect	text35
  4770  0016BE                     __ptext35:
  4771                           	opt callstack 0
  4772  0016BE                     _TMR1_Update_flag_Set:
  4773                           	opt callstack 27
  4774                           
  4775                           ;TMR1.c: 32: void TMR1_Update_flag_Set(UINT a);TMR1.c: 33: {;TMR1.c: 34:     TMR1_Update
      +                          _flag = a;
  4776                           
  4777                           ;incstack = 0
  4778  0016BE  C006  F047         	movff	TMR1_Update_flag_Set@a,_TMR1_Update_flag
  4779  0016C2  C007  F048         	movff	TMR1_Update_flag_Set@a+1,_TMR1_Update_flag+1
  4780  0016C6  0012               	return		;funcret
  4781  0016C8                     __end_of_TMR1_Update_flag_Set:
  4782                           	opt callstack 0
  4783                           
  4784 ;; *************** function _TMR1_Update_flag_Get *****************
  4785 ;; Defined at:
  4786 ;;		line 47 in file "TMR1.c"
  4787 ;; Parameters:    Size  Location     Type
  4788 ;;		None
  4789 ;; Auto vars:     Size  Location     Type
  4790 ;;		None
  4791 ;; Return value:  Size  Location     Type
  4792 ;;                  2    5[COMRAM] unsigned int 
  4793 ;; Registers used:
  4794 ;;		None
  4795 ;; Tracked objects:
  4796 ;;		On entry : 0/0
  4797 ;;		On exit  : 0/0
  4798 ;;		Unchanged: 0/0
  4799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4800 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4803 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4804 ;;Total ram usage:        2 bytes
  4805 ;; Hardware stack levels used:    1
  4806 ;; Hardware stack levels required when called:    3
  4807 ;; This function calls:
  4808 ;;		Nothing
  4809 ;; This function is called by:
  4810 ;;		_main
  4811 ;; This function uses a non-reentrant model
  4812 ;;
  4813                           
  4814                           	psect	text36
  4815  0016C8                     __ptext36:
  4816                           	opt callstack 0
  4817  0016C8                     _TMR1_Update_flag_Get:
  4818                           	opt callstack 27
  4819                           
  4820                           ;TMR1.c: 49:     return TMR1_Update_flag;
  4821                           
  4822                           ;incstack = 0
  4823  0016C8  C047  F006         	movff	_TMR1_Update_flag,?_TMR1_Update_flag_Get
  4824  0016CC  C048  F007         	movff	_TMR1_Update_flag+1,?_TMR1_Update_flag_Get+1
  4825  0016D0  0012               	return		;funcret
  4826  0016D2                     __end_of_TMR1_Update_flag_Get:
  4827                           	opt callstack 0
  4828                           
  4829 ;; *************** function _LED_Update *****************
  4830 ;; Defined at:
  4831 ;;		line 105 in file "LED.c"
  4832 ;; Parameters:    Size  Location     Type
  4833 ;;		None
  4834 ;; Auto vars:     Size  Location     Type
  4835 ;;		None
  4836 ;; Return value:  Size  Location     Type
  4837 ;;                  1    wreg      unsigned char 
  4838 ;; Registers used:
  4839 ;;		wreg, status,2, status,0, cstack
  4840 ;; Tracked objects:
  4841 ;;		On entry : 0/0
  4842 ;;		On exit  : 0/0
  4843 ;;		Unchanged: 0/0
  4844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4848 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4849 ;;Total ram usage:        0 bytes
  4850 ;; Hardware stack levels used:    1
  4851 ;; Hardware stack levels required when called:    5
  4852 ;; This function calls:
  4853 ;;		_LED_Control
  4854 ;;		_LED_Left
  4855 ;;		_LED_Light_Pos
  4856 ;;		_LED_Right
  4857 ;; This function is called by:
  4858 ;;		_main
  4859 ;; This function uses a non-reentrant model
  4860 ;;
  4861                           
  4862                           	psect	text37
  4863  000FB2                     __ptext37:
  4864                           	opt callstack 0
  4865  000FB2                     _LED_Update:
  4866                           	opt callstack 25
  4867                           
  4868                           ;LED.c: 107:     static LED_RGA_type Red = RED;;LED.c: 108:     static LED_RGA_type Gree
      +                          n = GREEN;;LED.c: 109:     static UINT pos1 = 0b0000000001;;LED.c: 110:     static UINT 
      +                          pos2 = 0b0000000001;;LED.c: 112:     if(LOCK == 0)
  4869                           
  4870                           ;incstack = 0
  4871  000FB2  504F               	movf	_LOCK,w,c
  4872  000FB4  A4D8               	btfss	status,2,c
  4873  000FB6  D013               	goto	l3165
  4874                           
  4875                           ;LED.c: 113:     {;LED.c: 114:     LED_Control(RED,0b0000000000);
  4876  000FB8  0E00               	movlw	0
  4877  000FBA  6E07               	movwf	LED_Control@diode+1,c
  4878  000FBC  0E00               	movlw	0
  4879  000FBE  6E06               	movwf	LED_Control@diode,c
  4880  000FC0  0E00               	movlw	0
  4881  000FC2  EC8C  F004         	call	_LED_Control
  4882                           
  4883                           ;LED.c: 115:     LED_Light_Pos(Green,pos2,Fulfillment_Lvl);
  4884  000FC6  C052  F00D         	movff	LED_Update@pos2,LED_Light_Pos@pos
  4885  000FCA  C053  F00E         	movff	LED_Update@pos2+1,LED_Light_Pos@pos+1
  4886  000FCE  C056  F00F         	movff	_Fulfillment_Lvl,LED_Light_Pos@fulfillment
  4887  000FD2  C057  F010         	movff	_Fulfillment_Lvl+1,LED_Light_Pos@fulfillment+1
  4888  000FD6  5058               	movf	LED_Update@Green,w,c
  4889  000FD8  EC60  F006         	call	_LED_Light_Pos
  4890                           
  4891                           ;LED.c: 117:     }
  4892  000FDC  D012               	goto	l293
  4893  000FDE                     l3165:
  4894                           
  4895                           ;LED.c: 119:     {;LED.c: 120:     LED_Control(Green,0b0000000000);
  4896  000FDE  0E00               	movlw	0
  4897  000FE0  6E07               	movwf	LED_Control@diode+1,c
  4898  000FE2  0E00               	movlw	0
  4899  000FE4  6E06               	movwf	LED_Control@diode,c
  4900  000FE6  5058               	movf	LED_Update@Green,w,c
  4901  000FE8  EC8C  F004         	call	_LED_Control
  4902                           
  4903                           ;LED.c: 121:     LED_Light_Pos(RED,pos1,Fulfillment_Lvl);
  4904  000FEC  C054  F00D         	movff	LED_Update@pos1,LED_Light_Pos@pos
  4905  000FF0  C055  F00E         	movff	LED_Update@pos1+1,LED_Light_Pos@pos+1
  4906  000FF4  C056  F00F         	movff	_Fulfillment_Lvl,LED_Light_Pos@fulfillment
  4907  000FF8  C057  F010         	movff	_Fulfillment_Lvl+1,LED_Light_Pos@fulfillment+1
  4908  000FFC  0E00               	movlw	0
  4909  000FFE  EC60  F006         	call	_LED_Light_Pos
  4910  001002                     l293:
  4911                           
  4912                           ;LED.c: 123:     pos1 = LED_Right(pos1);
  4913  001002  C054  F006         	movff	LED_Update@pos1,LED_Right@a
  4914  001006  C055  F007         	movff	LED_Update@pos1+1,LED_Right@a+1
  4915  00100A  ECC4  F009         	call	_LED_Right	;wreg free
  4916  00100E  C006  F054         	movff	?_LED_Right,LED_Update@pos1
  4917  001012  C007  F055         	movff	?_LED_Right+1,LED_Update@pos1+1
  4918                           
  4919                           ;LED.c: 124:     pos2 = LED_Left(pos2);
  4920  001016  C052  F006         	movff	LED_Update@pos2,LED_Left@a
  4921  00101A  C053  F007         	movff	LED_Update@pos2+1,LED_Left@a+1
  4922  00101E  EC0F  F00A         	call	_LED_Left	;wreg free
  4923  001022  C006  F052         	movff	?_LED_Left,LED_Update@pos2
  4924  001026  C007  F053         	movff	?_LED_Left+1,LED_Update@pos2+1
  4925  00102A  0012               	return		;funcret
  4926  00102C                     __end_of_LED_Update:
  4927                           	opt callstack 0
  4928                           
  4929 ;; *************** function _LED_Light_Pos *****************
  4930 ;; Defined at:
  4931 ;;		line 196 in file "LED.c"
  4932 ;; Parameters:    Size  Location     Type
  4933 ;;  color           1    wreg     enum E10644
  4934 ;;  pos             2   12[COMRAM] unsigned int 
  4935 ;;  fulfillment     2   14[COMRAM] unsigned int 
  4936 ;; Auto vars:     Size  Location     Type
  4937 ;;  color           1   16[COMRAM] enum E10644
  4938 ;;  flage           2   21[COMRAM] unsigned int 
  4939 ;;  pos2            2   19[COMRAM] unsigned int 
  4940 ;;  LED_array       2   17[COMRAM] unsigned int 
  4941 ;; Return value:  Size  Location     Type
  4942 ;;                  2   12[COMRAM] unsigned int 
  4943 ;; Registers used:
  4944 ;;		wreg, status,2, status,0, cstack
  4945 ;; Tracked objects:
  4946 ;;		On entry : 0/0
  4947 ;;		On exit  : 0/0
  4948 ;;		Unchanged: 0/0
  4949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4950 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4951 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4953 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4954 ;;Total ram usage:       11 bytes
  4955 ;; Hardware stack levels used:    1
  4956 ;; Hardware stack levels required when called:    4
  4957 ;; This function calls:
  4958 ;;		_LED_Control
  4959 ;;		_LED_Left
  4960 ;;		_LED_Right
  4961 ;;		___lwdiv
  4962 ;; This function is called by:
  4963 ;;		_LED_Update
  4964 ;; This function uses a non-reentrant model
  4965 ;;
  4966                           
  4967                           	psect	text38
  4968  000CC0                     __ptext38:
  4969                           	opt callstack 0
  4970  000CC0                     _LED_Light_Pos:
  4971                           	opt callstack 25
  4972                           
  4973                           ;incstack = 0
  4974                           ;LED_Light_Pos@color stored from wreg
  4975  000CC0  6E11               	movwf	LED_Light_Pos@color,c
  4976                           
  4977                           ;LED.c: 196: UINT LED_Light_Pos(LED_RGA_type color,UINT pos, UINT fulfillment);LED.c: 19
      +                          7: {;LED.c: 198:     UINT pos2 =pos;
  4978  000CC2  C00D  F014         	movff	LED_Light_Pos@pos,LED_Light_Pos@pos2
  4979  000CC6  C00E  F015         	movff	LED_Light_Pos@pos+1,LED_Light_Pos@pos2+1
  4980                           
  4981                           ;LED.c: 199:     UINT LED_array = 0b0000000000;
  4982  000CCA  0E00               	movlw	0
  4983  000CCC  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  4984  000CCE  0E00               	movlw	0
  4985  000CD0  6E12               	movwf	LED_Light_Pos@LED_array,c
  4986                           
  4987                           ;LED.c: 200:     UINT flage = fulfillment/10;
  4988  000CD2  C00F  F006         	movff	LED_Light_Pos@fulfillment,___lwdiv@dividend
  4989  000CD6  C010  F007         	movff	LED_Light_Pos@fulfillment+1,___lwdiv@dividend+1
  4990  000CDA  0E00               	movlw	0
  4991  000CDC  6E09               	movwf	___lwdiv@divisor+1,c
  4992  000CDE  0E0A               	movlw	10
  4993  000CE0  6E08               	movwf	___lwdiv@divisor,c
  4994  000CE2  EC74  F009         	call	___lwdiv	;wreg free
  4995  000CE6  C006  F016         	movff	?___lwdiv,LED_Light_Pos@flage
  4996  000CEA  C007  F017         	movff	?___lwdiv+1,LED_Light_Pos@flage+1
  4997                           
  4998                           ;LED.c: 201:     if(color == RED)
  4999  000CEE  5011               	movf	LED_Light_Pos@color,w,c
  5000  000CF0  B4D8               	btfsc	status,2,c
  5001  000CF2  D017               	goto	l3071
  5002  000CF4  D031               	goto	l3079
  5003  000CF6                     l3065:
  5004                           
  5005                           ;LED.c: 204:         {;LED.c: 205:             LED_array = pos2|LED_array;
  5006  000CF6  5012               	movf	LED_Light_Pos@LED_array,w,c
  5007  000CF8  1014               	iorwf	LED_Light_Pos@pos2,w,c
  5008  000CFA  6E12               	movwf	LED_Light_Pos@LED_array,c
  5009  000CFC  5013               	movf	LED_Light_Pos@LED_array+1,w,c
  5010  000CFE  1015               	iorwf	LED_Light_Pos@pos2+1,w,c
  5011  000D00  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  5012                           
  5013                           ;LED.c: 206:             pos2 = LED_Left(pos2);
  5014  000D02  C014  F006         	movff	LED_Light_Pos@pos2,LED_Left@a
  5015  000D06  C015  F007         	movff	LED_Light_Pos@pos2+1,LED_Left@a+1
  5016  000D0A  EC0F  F00A         	call	_LED_Left	;wreg free
  5017  000D0E  C006  F014         	movff	?_LED_Left,LED_Light_Pos@pos2
  5018  000D12  C007  F015         	movff	?_LED_Left+1,LED_Light_Pos@pos2+1
  5019                           
  5020                           ;LED.c: 207:             flage = flage - 1;
  5021  000D16  0EFF               	movlw	255
  5022  000D18  2416               	addwf	LED_Light_Pos@flage,w,c
  5023  000D1A  6E16               	movwf	LED_Light_Pos@flage,c
  5024  000D1C  0EFF               	movlw	255
  5025  000D1E  2017               	addwfc	LED_Light_Pos@flage+1,w,c
  5026  000D20  6E17               	movwf	LED_Light_Pos@flage+1,c
  5027  000D22                     l3071:
  5028                           
  5029                           ;LED.c: 203:         while(flage>0)
  5030  000D22  5016               	movf	LED_Light_Pos@flage,w,c
  5031  000D24  1017               	iorwf	LED_Light_Pos@flage+1,w,c
  5032  000D26  B4D8               	btfsc	status,2,c
  5033  000D28  D01B               	goto	u1730
  5034  000D2A  D7E5               	goto	l3065
  5035  000D2C                     l3073:
  5036                           
  5037                           ;LED.c: 213:         {;LED.c: 214:             LED_array = pos2|LED_array;
  5038  000D2C  5012               	movf	LED_Light_Pos@LED_array,w,c
  5039  000D2E  1014               	iorwf	LED_Light_Pos@pos2,w,c
  5040  000D30  6E12               	movwf	LED_Light_Pos@LED_array,c
  5041  000D32  5013               	movf	LED_Light_Pos@LED_array+1,w,c
  5042  000D34  1015               	iorwf	LED_Light_Pos@pos2+1,w,c
  5043  000D36  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  5044                           
  5045                           ;LED.c: 215:             pos2 = LED_Right(pos2);
  5046  000D38  C014  F006         	movff	LED_Light_Pos@pos2,LED_Right@a
  5047  000D3C  C015  F007         	movff	LED_Light_Pos@pos2+1,LED_Right@a+1
  5048  000D40  ECC4  F009         	call	_LED_Right	;wreg free
  5049  000D44  C006  F014         	movff	?_LED_Right,LED_Light_Pos@pos2
  5050  000D48  C007  F015         	movff	?_LED_Right+1,LED_Light_Pos@pos2+1
  5051                           
  5052                           ;LED.c: 216:             flage = flage - 1;
  5053  000D4C  0EFF               	movlw	255
  5054  000D4E  2416               	addwf	LED_Light_Pos@flage,w,c
  5055  000D50  6E16               	movwf	LED_Light_Pos@flage,c
  5056  000D52  0EFF               	movlw	255
  5057  000D54  2017               	addwfc	LED_Light_Pos@flage+1,w,c
  5058  000D56  6E17               	movwf	LED_Light_Pos@flage+1,c
  5059  000D58                     l3079:
  5060                           
  5061                           ;LED.c: 212:         while(flage>0)
  5062  000D58  5016               	movf	LED_Light_Pos@flage,w,c
  5063  000D5A  1017               	iorwf	LED_Light_Pos@flage+1,w,c
  5064  000D5C  A4D8               	btfss	status,2,c
  5065  000D5E  D7E6               	goto	l3073
  5066  000D60                     u1730:
  5067                           
  5068                           ;LED.c: 219:     LED_Control(color, LED_array);
  5069  000D60  C012  F006         	movff	LED_Light_Pos@LED_array,LED_Control@diode
  5070  000D64  C013  F007         	movff	LED_Light_Pos@LED_array+1,LED_Control@diode+1
  5071  000D68  5011               	movf	LED_Light_Pos@color,w,c
  5072  000D6A  EC8C  F004         	call	_LED_Control
  5073  000D6E  0012               	return		;funcret
  5074  000D70                     __end_of_LED_Light_Pos:
  5075                           	opt callstack 0
  5076                           
  5077 ;; *************** function ___lwdiv *****************
  5078 ;; Defined at:
  5079 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwdiv.c"
  5080 ;; Parameters:    Size  Location     Type
  5081 ;;  dividend        2    5[COMRAM] unsigned int 
  5082 ;;  divisor         2    7[COMRAM] unsigned int 
  5083 ;; Auto vars:     Size  Location     Type
  5084 ;;  quotient        2    9[COMRAM] unsigned int 
  5085 ;;  counter         1   11[COMRAM] unsigned char 
  5086 ;; Return value:  Size  Location     Type
  5087 ;;                  2    5[COMRAM] unsigned int 
  5088 ;; Registers used:
  5089 ;;		wreg, status,2, status,0
  5090 ;; Tracked objects:
  5091 ;;		On entry : 0/0
  5092 ;;		On exit  : 0/0
  5093 ;;		Unchanged: 0/0
  5094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5095 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5096 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5098 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5099 ;;Total ram usage:        7 bytes
  5100 ;; Hardware stack levels used:    1
  5101 ;; Hardware stack levels required when called:    3
  5102 ;; This function calls:
  5103 ;;		Nothing
  5104 ;; This function is called by:
  5105 ;;		_LED_Light_Pos
  5106 ;;		_FRAME_Plot
  5107 ;; This function uses a non-reentrant model
  5108 ;;
  5109                           
  5110                           	psect	text39
  5111  0012E8                     __ptext39:
  5112                           	opt callstack 0
  5113  0012E8                     ___lwdiv:
  5114                           	opt callstack 24
  5115                           
  5116                           ;incstack = 0
  5117  0012E8  0E00               	movlw	0
  5118  0012EA  6E0B               	movwf	___lwdiv@quotient+1,c
  5119  0012EC  0E00               	movlw	0
  5120  0012EE  6E0A               	movwf	___lwdiv@quotient,c
  5121  0012F0  5008               	movf	___lwdiv@divisor,w,c
  5122  0012F2  1009               	iorwf	___lwdiv@divisor+1,w,c
  5123  0012F4  B4D8               	btfsc	status,2,c
  5124  0012F6  D01C               	goto	l1201
  5125  0012F8  0E01               	movlw	1
  5126  0012FA  6E0C               	movwf	___lwdiv@counter,c
  5127  0012FC  D004               	goto	l2617
  5128  0012FE                     l2615:
  5129  0012FE  90D8               	bcf	status,0,c
  5130  001300  3608               	rlcf	___lwdiv@divisor,f,c
  5131  001302  3609               	rlcf	___lwdiv@divisor+1,f,c
  5132  001304  2A0C               	incf	___lwdiv@counter,f,c
  5133  001306                     l2617:
  5134  001306  AE09               	btfss	___lwdiv@divisor+1,7,c
  5135  001308  D7FA               	goto	l2615
  5136  00130A                     u1250:
  5137  00130A  90D8               	bcf	status,0,c
  5138  00130C  360A               	rlcf	___lwdiv@quotient,f,c
  5139  00130E  360B               	rlcf	___lwdiv@quotient+1,f,c
  5140  001310  5008               	movf	___lwdiv@divisor,w,c
  5141  001312  5C06               	subwf	___lwdiv@dividend,w,c
  5142  001314  5009               	movf	___lwdiv@divisor+1,w,c
  5143  001316  5807               	subwfb	___lwdiv@dividend+1,w,c
  5144  001318  A0D8               	btfss	status,0,c
  5145  00131A  D005               	goto	l2627
  5146  00131C  5008               	movf	___lwdiv@divisor,w,c
  5147  00131E  5E06               	subwf	___lwdiv@dividend,f,c
  5148  001320  5009               	movf	___lwdiv@divisor+1,w,c
  5149  001322  5A07               	subwfb	___lwdiv@dividend+1,f,c
  5150  001324  800A               	bsf	___lwdiv@quotient,0,c
  5151  001326                     l2627:
  5152  001326  90D8               	bcf	status,0,c
  5153  001328  3209               	rrcf	___lwdiv@divisor+1,f,c
  5154  00132A  3208               	rrcf	___lwdiv@divisor,f,c
  5155  00132C  2E0C               	decfsz	___lwdiv@counter,f,c
  5156  00132E  D7ED               	goto	u1250
  5157  001330                     l1201:
  5158  001330  C00A  F006         	movff	___lwdiv@quotient,?___lwdiv
  5159  001334  C00B  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5160  001338  0012               	return		;funcret
  5161  00133A                     __end_of___lwdiv:
  5162                           	opt callstack 0
  5163                           
  5164 ;; *************** function _LED_Right *****************
  5165 ;; Defined at:
  5166 ;;		line 140 in file "LED.c"
  5167 ;; Parameters:    Size  Location     Type
  5168 ;;  a               2    5[COMRAM] unsigned int 
  5169 ;; Auto vars:     Size  Location     Type
  5170 ;;  b               2    9[COMRAM] unsigned int 
  5171 ;; Return value:  Size  Location     Type
  5172 ;;                  2    5[COMRAM] unsigned int 
  5173 ;; Registers used:
  5174 ;;		wreg, status,2, status,0
  5175 ;; Tracked objects:
  5176 ;;		On entry : 0/0
  5177 ;;		On exit  : 0/0
  5178 ;;		Unchanged: 0/0
  5179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5180 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5181 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5182 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5183 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5184 ;;Total ram usage:        6 bytes
  5185 ;; Hardware stack levels used:    1
  5186 ;; Hardware stack levels required when called:    3
  5187 ;; This function calls:
  5188 ;;		Nothing
  5189 ;; This function is called by:
  5190 ;;		_LED_Update
  5191 ;;		_LED_Light_Pos
  5192 ;; This function uses a non-reentrant model
  5193 ;;
  5194                           
  5195                           	psect	text40
  5196  001388                     __ptext40:
  5197                           	opt callstack 0
  5198  001388                     _LED_Right:
  5199                           	opt callstack 26
  5200                           
  5201                           ;LED.c: 140: UINT LED_Right(UINT a);LED.c: 141: {;LED.c: 142:     if ((a & 0b0000000001)
      +                           == 0b0000000001)
  5202                           
  5203                           ;incstack = 0
  5204  001388  A006               	btfss	LED_Right@a,0,c
  5205  00138A  D018               	goto	l2735
  5206                           
  5207                           ;LED.c: 143:     {;LED.c: 144:         UINT b = a & 0b1111111110;
  5208  00138C  0EFE               	movlw	254
  5209  00138E  1406               	andwf	LED_Right@a,w,c
  5210  001390  6E0A               	movwf	LED_Right@b,c
  5211  001392  0E03               	movlw	3
  5212  001394  1407               	andwf	LED_Right@a+1,w,c
  5213  001396  6E0B               	movwf	LED_Right@b+1,c
  5214                           
  5215                           ;LED.c: 145:         b = b >> 1;
  5216  001398  90D8               	bcf	status,0,c
  5217  00139A  300B               	rrcf	LED_Right@b+1,w,c
  5218  00139C  6E08               	movwf	??_LED_Right& (0+255),c
  5219  00139E  300A               	rrcf	LED_Right@b,w,c
  5220  0013A0  6E0A               	movwf	LED_Right@b,c
  5221  0013A2  C008  F00B         	movff	??_LED_Right,LED_Right@b+1
  5222                           
  5223                           ;LED.c: 146:         b = b | 0b1000000000;
  5224  0013A6  0E00               	movlw	0
  5225  0013A8  100A               	iorwf	LED_Right@b,w,c
  5226  0013AA  6E0A               	movwf	LED_Right@b,c
  5227  0013AC  0E02               	movlw	2
  5228  0013AE  100B               	iorwf	LED_Right@b+1,w,c
  5229  0013B0  6E0B               	movwf	LED_Right@b+1,c
  5230                           
  5231                           ;LED.c: 147:         return b;
  5232  0013B2  C00A  F006         	movff	LED_Right@b,?_LED_Right
  5233  0013B6  C00B  F007         	movff	LED_Right@b+1,?_LED_Right+1
  5234  0013BA  0012               	return	
  5235  0013BC                     l2735:
  5236                           
  5237                           ;LED.c: 150:     {;LED.c: 151:         a =a >> 1;
  5238  0013BC  90D8               	bcf	status,0,c
  5239  0013BE  3007               	rrcf	LED_Right@a+1,w,c
  5240  0013C0  6E08               	movwf	??_LED_Right& (0+255),c
  5241  0013C2  3006               	rrcf	LED_Right@a,w,c
  5242  0013C4  6E06               	movwf	LED_Right@a,c
  5243  0013C6  C008  F007         	movff	??_LED_Right,LED_Right@a+1
  5244                           
  5245                           ;LED.c: 152:         return a;
  5246  0013CA  C006  F006         	movff	LED_Right@a,?_LED_Right
  5247  0013CE  C007  F007         	movff	LED_Right@a+1,?_LED_Right+1
  5248  0013D2  0012               	return		;funcret
  5249  0013D4                     __end_of_LED_Right:
  5250                           	opt callstack 0
  5251                           
  5252 ;; *************** function _LED_Left *****************
  5253 ;; Defined at:
  5254 ;;		line 167 in file "LED.c"
  5255 ;; Parameters:    Size  Location     Type
  5256 ;;  a               2    5[COMRAM] unsigned int 
  5257 ;; Auto vars:     Size  Location     Type
  5258 ;;  b               2    7[COMRAM] unsigned int 
  5259 ;; Return value:  Size  Location     Type
  5260 ;;                  2    5[COMRAM] unsigned int 
  5261 ;; Registers used:
  5262 ;;		wreg, status,2, status,0
  5263 ;; Tracked objects:
  5264 ;;		On entry : 0/0
  5265 ;;		On exit  : 0/0
  5266 ;;		Unchanged: 0/0
  5267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5268 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5269 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5271 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5272 ;;Total ram usage:        4 bytes
  5273 ;; Hardware stack levels used:    1
  5274 ;; Hardware stack levels required when called:    3
  5275 ;; This function calls:
  5276 ;;		Nothing
  5277 ;; This function is called by:
  5278 ;;		_LED_Update
  5279 ;;		_LED_Light_Pos
  5280 ;; This function uses a non-reentrant model
  5281 ;;
  5282                           
  5283                           	psect	text41
  5284  00141E                     __ptext41:
  5285                           	opt callstack 0
  5286  00141E                     _LED_Left:
  5287                           	opt callstack 25
  5288                           
  5289                           ;LED.c: 167: UINT LED_Left(UINT a);LED.c: 168: {;LED.c: 169:     if ((a & 0b1000000000) 
      +                          == 0b1000000000)
  5290                           
  5291                           ;incstack = 0
  5292  00141E  A207               	btfss	LED_Left@a+1,1,c
  5293  001420  D015               	goto	l2751
  5294                           
  5295                           ;LED.c: 170:     {;LED.c: 171:         UINT b = a & 0b0111111111;
  5296  001422  0EFF               	movlw	255
  5297  001424  1406               	andwf	LED_Left@a,w,c
  5298  001426  6E08               	movwf	LED_Left@b,c
  5299  001428  0E01               	movlw	1
  5300  00142A  1407               	andwf	LED_Left@a+1,w,c
  5301  00142C  6E09               	movwf	LED_Left@b+1,c
  5302                           
  5303                           ;LED.c: 172:         b = b << 1;
  5304  00142E  90D8               	bcf	status,0,c
  5305  001430  3408               	rlcf	LED_Left@b,w,c
  5306  001432  6E08               	movwf	LED_Left@b,c
  5307  001434  3409               	rlcf	LED_Left@b+1,w,c
  5308  001436  6E09               	movwf	LED_Left@b+1,c
  5309                           
  5310                           ;LED.c: 173:         b = b | 0b0000000001;
  5311  001438  0E01               	movlw	1
  5312  00143A  1008               	iorwf	LED_Left@b,w,c
  5313  00143C  6E08               	movwf	LED_Left@b,c
  5314  00143E  5009               	movf	LED_Left@b+1,w,c
  5315  001440  6E09               	movwf	LED_Left@b+1,c
  5316                           
  5317                           ;LED.c: 174:         return b;
  5318  001442  C008  F006         	movff	LED_Left@b,?_LED_Left
  5319  001446  C009  F007         	movff	LED_Left@b+1,?_LED_Left+1
  5320  00144A  0012               	return	
  5321  00144C                     l2751:
  5322                           
  5323                           ;LED.c: 177:     {;LED.c: 178:         a = a << 1;
  5324  00144C  90D8               	bcf	status,0,c
  5325  00144E  3406               	rlcf	LED_Left@a,w,c
  5326  001450  6E06               	movwf	LED_Left@a,c
  5327  001452  3407               	rlcf	LED_Left@a+1,w,c
  5328  001454  6E07               	movwf	LED_Left@a+1,c
  5329                           
  5330                           ;LED.c: 179:         return a;
  5331  001456  C006  F006         	movff	LED_Left@a,?_LED_Left
  5332  00145A  C007  F007         	movff	LED_Left@a+1,?_LED_Left+1
  5333  00145E  0012               	return		;funcret
  5334  001460                     __end_of_LED_Left:
  5335                           	opt callstack 0
  5336                           
  5337 ;; *************** function _INI_All *****************
  5338 ;; Defined at:
  5339 ;;		line 52 in file "INI.c"
  5340 ;; Parameters:    Size  Location     Type
  5341 ;;		None
  5342 ;; Auto vars:     Size  Location     Type
  5343 ;;		None
  5344 ;; Return value:  Size  Location     Type
  5345 ;;                  1    wreg      void 
  5346 ;; Registers used:
  5347 ;;		wreg, status,2, status,0, cstack
  5348 ;; Tracked objects:
  5349 ;;		On entry : 0/0
  5350 ;;		On exit  : 0/0
  5351 ;;		Unchanged: 0/0
  5352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5356 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5357 ;;Total ram usage:        0 bytes
  5358 ;; Hardware stack levels used:    1
  5359 ;; Hardware stack levels required when called:    5
  5360 ;; This function calls:
  5361 ;;		_CAN_Setup
  5362 ;;		_INI_GlobalInterrupt
  5363 ;;		_INI_LED_Start
  5364 ;;		_INI_OUTPUT
  5365 ;;		_INI_Timer
  5366 ;; This function is called by:
  5367 ;;		_main
  5368 ;; This function uses a non-reentrant model
  5369 ;;
  5370                           
  5371                           	psect	text42
  5372  001634                     __ptext42:
  5373                           	opt callstack 0
  5374  001634                     _INI_All:
  5375                           	opt callstack 25
  5376                           
  5377                           ;INI.c: 55:     WDTCONbits.SWDTEN = 1;
  5378                           
  5379                           ;incstack = 0
  5380  001634  80D1               	bsf	4049,0,c	;volatile
  5381  001636  0004               	clrwdt		;# 
  5382                           
  5383                           ;INI.c: 64:     INI_OUTPUT();
  5384  001638  EC0B  F00B         	call	_INI_OUTPUT	;wreg free
  5385                           
  5386                           ;INI.c: 66:     CAN_Setup();
  5387  00163C  ECC0  F008         	call	_CAN_Setup	;wreg free
  5388                           
  5389                           ;INI.c: 67:     INI_GlobalInterrupt();
  5390  001640  EC3A  F00B         	call	_INI_GlobalInterrupt	;wreg free
  5391                           
  5392                           ;INI.c: 69:     INI_Timer();
  5393  001644  EC27  F00B         	call	_INI_Timer	;wreg free
  5394                           
  5395                           ;INI.c: 71:     INI_LED_Start();
  5396  001648  EC81  F00A         	call	_INI_LED_Start	;wreg free
  5397  00164C  0012               	return		;funcret
  5398  00164E                     __end_of_INI_All:
  5399                           	opt callstack 0
  5400                           
  5401 ;; *************** function _INI_Timer *****************
  5402 ;; Defined at:
  5403 ;;		line 92 in file "TMR1.c"
  5404 ;; Parameters:    Size  Location     Type
  5405 ;;		None
  5406 ;; Auto vars:     Size  Location     Type
  5407 ;;		None
  5408 ;; Return value:  Size  Location     Type
  5409 ;;                  1    wreg      unsigned char 
  5410 ;; Registers used:
  5411 ;;		wreg, status,2
  5412 ;; Tracked objects:
  5413 ;;		On entry : 0/0
  5414 ;;		On exit  : 0/0
  5415 ;;		Unchanged: 0/0
  5416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5421 ;;Total ram usage:        0 bytes
  5422 ;; Hardware stack levels used:    1
  5423 ;; Hardware stack levels required when called:    3
  5424 ;; This function calls:
  5425 ;;		Nothing
  5426 ;; This function is called by:
  5427 ;;		_INI_All
  5428 ;; This function uses a non-reentrant model
  5429 ;;
  5430                           
  5431                           	psect	text43
  5432  00164E                     __ptext43:
  5433                           	opt callstack 0
  5434  00164E                     _INI_Timer:
  5435                           	opt callstack 26
  5436                           
  5437                           ;TMR1.c: 96:     IRCF2 = 1;
  5438                           
  5439                           ;incstack = 0
  5440  00164E  8CD3               	bsf	4051,6,c	;volatile
  5441                           
  5442                           ;TMR1.c: 97:     IRCF1 = 1;
  5443  001650  8AD3               	bsf	4051,5,c	;volatile
  5444                           
  5445                           ;TMR1.c: 98:     IRCF0 = 1;
  5446  001652  88D3               	bsf	4051,4,c	;volatile
  5447                           
  5448                           ;TMR1.c: 99:     T1CON = 0b00111101;
  5449  001654  0E3D               	movlw	61
  5450  001656  6ECD               	movwf	4045,c	;volatile
  5451                           
  5452                           ;TMR1.c: 100:     TMR1H= (UINT8)((0xFFFF - (((8000000/8)/4)/10)) >> 8);
  5453  001658  0E9E               	movlw	158
  5454  00165A  6ECF               	movwf	4047,c	;volatile
  5455                           
  5456                           ;TMR1.c: 101:     TMR1L=(UINT8)((0xFFFF - (((8000000/8)/4)/10)) & 0xFF);
  5457  00165C  0E57               	movlw	87
  5458  00165E  6ECE               	movwf	4046,c	;volatile
  5459                           
  5460                           ;TMR1.c: 102:     TMR1IE=1;
  5461  001660  809D               	bsf	3997,0,c	;volatile
  5462                           
  5463                           ;TMR1.c: 103:     TMR1ON = 1;
  5464  001662  80CD               	bsf	4045,0,c	;volatile
  5465  001664  0012               	return		;funcret
  5466  001666                     __end_of_INI_Timer:
  5467                           	opt callstack 0
  5468                           
  5469 ;; *************** function _INI_OUTPUT *****************
  5470 ;; Defined at:
  5471 ;;		line 27 in file "INI.c"
  5472 ;; Parameters:    Size  Location     Type
  5473 ;;		None
  5474 ;; Auto vars:     Size  Location     Type
  5475 ;;		None
  5476 ;; Return value:  Size  Location     Type
  5477 ;;                  1    wreg      void 
  5478 ;; Registers used:
  5479 ;;		wreg, status,2
  5480 ;; Tracked objects:
  5481 ;;		On entry : 0/0
  5482 ;;		On exit  : 0/0
  5483 ;;		Unchanged: 0/0
  5484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5489 ;;Total ram usage:        0 bytes
  5490 ;; Hardware stack levels used:    1
  5491 ;; Hardware stack levels required when called:    3
  5492 ;; This function calls:
  5493 ;;		Nothing
  5494 ;; This function is called by:
  5495 ;;		_INI_All
  5496 ;; This function uses a non-reentrant model
  5497 ;;
  5498                           
  5499                           	psect	text44
  5500  001616                     __ptext44:
  5501                           	opt callstack 0
  5502  001616                     _INI_OUTPUT:
  5503                           	opt callstack 26
  5504                           
  5505                           ;INI.c: 31:     LATA = 0;
  5506                           
  5507                           ;incstack = 0
  5508  001616  0E00               	movlw	0
  5509  001618  6E89               	movwf	3977,c	;volatile
  5510                           
  5511                           ;INI.c: 32:     LATB = 0;
  5512  00161A  0E00               	movlw	0
  5513  00161C  6E8A               	movwf	3978,c	;volatile
  5514                           
  5515                           ;INI.c: 33:     LATC = 0;
  5516  00161E  0E00               	movlw	0
  5517  001620  6E8B               	movwf	3979,c	;volatile
  5518                           
  5519                           ;INI.c: 34:     TRISA = 0x0C;
  5520  001622  0E0C               	movlw	12
  5521  001624  6E92               	movwf	3986,c	;volatile
  5522                           
  5523                           ;INI.c: 35:     TRISB = 0b10001000;
  5524  001626  0E88               	movlw	136
  5525  001628  6E93               	movwf	3987,c	;volatile
  5526                           
  5527                           ;INI.c: 36:     TRISC = 0xBF;
  5528  00162A  0EBF               	movlw	191
  5529  00162C  6E94               	movwf	3988,c	;volatile
  5530                           
  5531                           ;INI.c: 37:     RCONbits.IPEN = 1;
  5532  00162E  8ED0               	bsf	4048,7,c	;volatile
  5533                           
  5534                           ;INI.c: 40:     DetectorLedRadar.Flags.inicjalizacja = 1;
  5535  001630  8634               	bsf	_DetectorLedRadar,3,c
  5536  001632  0012               	return		;funcret
  5537  001634                     __end_of_INI_OUTPUT:
  5538                           	opt callstack 0
  5539                           
  5540 ;; *************** function _INI_LED_Start *****************
  5541 ;; Defined at:
  5542 ;;		line 231 in file "LED.c"
  5543 ;; Parameters:    Size  Location     Type
  5544 ;;		None
  5545 ;; Auto vars:     Size  Location     Type
  5546 ;;		None
  5547 ;; Return value:  Size  Location     Type
  5548 ;;                  1    wreg      void 
  5549 ;; Registers used:
  5550 ;;		wreg, status,2, status,0, cstack
  5551 ;; Tracked objects:
  5552 ;;		On entry : 0/0
  5553 ;;		On exit  : 0/0
  5554 ;;		Unchanged: 0/0
  5555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5559 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5560 ;;Total ram usage:        0 bytes
  5561 ;; Hardware stack levels used:    1
  5562 ;; Hardware stack levels required when called:    4
  5563 ;; This function calls:
  5564 ;;		_LED_Control
  5565 ;; This function is called by:
  5566 ;;		_INI_All
  5567 ;; This function uses a non-reentrant model
  5568 ;;
  5569                           
  5570                           	psect	text45
  5571  001502                     __ptext45:
  5572                           	opt callstack 0
  5573  001502                     _INI_LED_Start:
  5574                           	opt callstack 25
  5575                           
  5576                           ;LED.c: 233:     TRISA = TRISA & 0b00000001;
  5577                           
  5578                           ;incstack = 0
  5579  001502  5092               	movf	3986,w,c	;volatile
  5580  001504  0B01               	andlw	1
  5581  001506  6E92               	movwf	3986,c	;volatile
  5582                           
  5583                           ;LED.c: 234:     TRISB = TRISB & 0b11111100;
  5584  001508  5093               	movf	3987,w,c	;volatile
  5585  00150A  0BFC               	andlw	252
  5586  00150C  6E93               	movwf	3987,c	;volatile
  5587                           
  5588                           ;LED.c: 235:     TRISE = TRISE & 0b11111000;
  5589  00150E  5096               	movf	3990,w,c	;volatile
  5590  001510  0BF8               	andlw	248
  5591  001512  6E96               	movwf	3990,c	;volatile
  5592                           
  5593                           ;LED.c: 236:     TRISD = TRISD & 0b00000000;
  5594  001514  0E00               	movlw	0
  5595  001516  6E95               	movwf	3989,c	;volatile
  5596                           
  5597                           ;LED.c: 237:     LED_Control(RED,0b0000000000);
  5598  001518  0E00               	movlw	0
  5599  00151A  6E07               	movwf	LED_Control@diode+1,c
  5600  00151C  0E00               	movlw	0
  5601  00151E  6E06               	movwf	LED_Control@diode,c
  5602  001520  0E00               	movlw	0
  5603  001522  EC8C  F004         	call	_LED_Control
  5604                           
  5605                           ;LED.c: 238:     LED_Control(GREEN,0b0000000000);
  5606  001526  0E00               	movlw	0
  5607  001528  6E07               	movwf	LED_Control@diode+1,c
  5608  00152A  0E00               	movlw	0
  5609  00152C  6E06               	movwf	LED_Control@diode,c
  5610  00152E  0E01               	movlw	1
  5611  001530  EC8C  F004         	call	_LED_Control
  5612  001534  0012               	return		;funcret
  5613  001536                     __end_of_INI_LED_Start:
  5614                           	opt callstack 0
  5615                           
  5616 ;; *************** function _LED_Control *****************
  5617 ;; Defined at:
  5618 ;;		line 256 in file "LED.c"
  5619 ;; Parameters:    Size  Location     Type
  5620 ;;  color           1    wreg     enum E10644
  5621 ;;  diode           2    5[COMRAM] unsigned int 
  5622 ;; Auto vars:     Size  Location     Type
  5623 ;;  color           1    9[COMRAM] enum E10644
  5624 ;;  cos             2    0        unsigned int 
  5625 ;; Return value:  Size  Location     Type
  5626 ;;                  1    wreg      unsigned char 
  5627 ;; Registers used:
  5628 ;;		wreg, status,2, status,0
  5629 ;; Tracked objects:
  5630 ;;		On entry : 0/0
  5631 ;;		On exit  : 0/0
  5632 ;;		Unchanged: 0/0
  5633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5634 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5635 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5637 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5638 ;;Total ram usage:        5 bytes
  5639 ;; Hardware stack levels used:    1
  5640 ;; Hardware stack levels required when called:    3
  5641 ;; This function calls:
  5642 ;;		Nothing
  5643 ;; This function is called by:
  5644 ;;		_LED_Error
  5645 ;;		_LED_Clear
  5646 ;;		_LED_Update
  5647 ;;		_LED_Light_Pos
  5648 ;;		_INI_LED_Start
  5649 ;; This function uses a non-reentrant model
  5650 ;;
  5651                           
  5652                           	psect	text46
  5653  000918                     __ptext46:
  5654                           	opt callstack 0
  5655  000918                     _LED_Control:
  5656                           	opt callstack 24
  5657                           
  5658                           ;incstack = 0
  5659                           ;LED_Control@color stored from wreg
  5660  000918  6E0A               	movwf	LED_Control@color,c
  5661                           
  5662                           ;LED.c: 259:     if(color == RED)
  5663  00091A  500A               	movf	LED_Control@color,w,c
  5664  00091C  A4D8               	btfss	status,2,c
  5665  00091E  D050               	goto	l321
  5666                           
  5667                           ;LED.c: 260:     {;LED.c: 262:         if((diode & 0b0000000001)== 0b0000000001)
  5668  000920  A006               	btfss	LED_Control@diode,0,c
  5669  000922  D003               	goto	l2379
  5670                           
  5671                           ;LED.c: 263:         {;LED.c: 264:             LATD = LATD | ~0b11101111;
  5672  000924  508C               	movf	3980,w,c	;volatile
  5673  000926  0910               	iorlw	16
  5674  000928  D002               	goto	L3
  5675  00092A                     l2379:
  5676                           
  5677                           ;LED.c: 267:         {;LED.c: 268:             LATD = LATD &0b11101111;
  5678  00092A  508C               	movf	3980,w,c	;volatile
  5679  00092C  0BEF               	andlw	239
  5680  00092E                     L3:
  5681  00092E  6E8C               	movwf	3980,c	;volatile
  5682                           
  5683                           ;LED.c: 271:         if((diode & 0b0000000010) == 0b0000000010)
  5684  000930  A206               	btfss	LED_Control@diode,1,c
  5685  000932  D003               	goto	l2385
  5686                           
  5687                           ;LED.c: 272:         {;LED.c: 273:             LATD = LATD | ~0b10111111;
  5688  000934  508C               	movf	3980,w,c	;volatile
  5689  000936  0940               	iorlw	64
  5690  000938  D002               	goto	L4
  5691  00093A                     l2385:
  5692                           
  5693                           ;LED.c: 276:         {;LED.c: 277:             LATD = LATD & 0b10111111;
  5694  00093A  508C               	movf	3980,w,c	;volatile
  5695  00093C  0BBF               	andlw	191
  5696  00093E                     L4:
  5697  00093E  6E8C               	movwf	3980,c	;volatile
  5698                           
  5699                           ;LED.c: 280:         if((diode & 0b0000000100) == 0b0000000100)
  5700  000940  A406               	btfss	LED_Control@diode,2,c
  5701  000942  D003               	goto	l2391
  5702                           
  5703                           ;LED.c: 281:         {;LED.c: 282:             LATB = LATB | ~0b11111110;
  5704  000944  508A               	movf	3978,w,c	;volatile
  5705  000946  0901               	iorlw	1
  5706  000948  D002               	goto	L5
  5707  00094A                     l2391:
  5708                           
  5709                           ;LED.c: 285:         {;LED.c: 286:             LATB = LATB & 0b11111110;
  5710  00094A  508A               	movf	3978,w,c	;volatile
  5711  00094C  0BFE               	andlw	254
  5712  00094E                     L5:
  5713  00094E  6E8A               	movwf	3978,c	;volatile
  5714                           
  5715                           ;LED.c: 290:         if((diode & 0b0000001000) == 0b0000001000)
  5716  000950  A606               	btfss	LED_Control@diode,3,c
  5717  000952  D003               	goto	l2397
  5718                           
  5719                           ;LED.c: 291:         {;LED.c: 292:             LATA = LATA | ~0b11111101;
  5720  000954  5089               	movf	3977,w,c	;volatile
  5721  000956  0902               	iorlw	2
  5722  000958  D002               	goto	L6
  5723  00095A                     l2397:
  5724                           
  5725                           ;LED.c: 295:         {;LED.c: 296:             LATA = LATA & 0b11111101;
  5726  00095A  5089               	movf	3977,w,c	;volatile
  5727  00095C  0BFD               	andlw	253
  5728  00095E                     L6:
  5729  00095E  6E89               	movwf	3977,c	;volatile
  5730                           
  5731                           ;LED.c: 300:         if((diode & 0b0000010000) == 0b0000010000)
  5732  000960  A806               	btfss	LED_Control@diode,4,c
  5733  000962  D003               	goto	l2403
  5734                           
  5735                           ;LED.c: 301:         {;LED.c: 302:             LATA = LATA | ~0b11110111;
  5736  000964  5089               	movf	3977,w,c	;volatile
  5737  000966  0908               	iorlw	8
  5738  000968  D002               	goto	L7
  5739  00096A                     l2403:
  5740                           
  5741                           ;LED.c: 305:         {;LED.c: 306:             LATA = LATA & 0b11110111;
  5742  00096A  5089               	movf	3977,w,c	;volatile
  5743  00096C  0BF7               	andlw	247
  5744  00096E                     L7:
  5745  00096E  6E89               	movwf	3977,c	;volatile
  5746                           
  5747                           ;LED.c: 310:         if((diode & 0b0000100000) == 0b0000100000)
  5748  000970  AA06               	btfss	LED_Control@diode,5,c
  5749  000972  D003               	goto	l2409
  5750                           
  5751                           ;LED.c: 311:         {;LED.c: 312:             LATA = LATA | ~0b11011111;
  5752  000974  5089               	movf	3977,w,c	;volatile
  5753  000976  0920               	iorlw	32
  5754  000978  D002               	goto	L8
  5755  00097A                     l2409:
  5756                           
  5757                           ;LED.c: 315:         {;LED.c: 316:             LATA = LATA & 0b11011111;
  5758  00097A  5089               	movf	3977,w,c	;volatile
  5759  00097C  0BDF               	andlw	223
  5760  00097E                     L8:
  5761  00097E  6E89               	movwf	3977,c	;volatile
  5762                           
  5763                           ;LED.c: 319:         if((diode & 0b0001000000) == 0b0001000000)
  5764  000980  AC06               	btfss	LED_Control@diode,6,c
  5765  000982  D003               	goto	l2415
  5766                           
  5767                           ;LED.c: 320:         {;LED.c: 321:             LATE = LATE | ~0b11111101;
  5768  000984  508D               	movf	3981,w,c	;volatile
  5769  000986  0902               	iorlw	2
  5770  000988  D002               	goto	L9
  5771  00098A                     l2415:
  5772                           
  5773                           ;LED.c: 324:         {;LED.c: 325:             LATE = LATE & 0b11111101;
  5774  00098A  508D               	movf	3981,w,c	;volatile
  5775  00098C  0BFD               	andlw	253
  5776  00098E                     L9:
  5777  00098E  6E8D               	movwf	3981,c	;volatile
  5778                           
  5779                           ;LED.c: 328:         if((diode & 0b0010000000) == 0b0010000000)
  5780  000990  AE06               	btfss	LED_Control@diode,7,c
  5781  000992  D003               	goto	l2421
  5782                           
  5783                           ;LED.c: 329:         {;LED.c: 330:             LATA = LATA | ~0b01111111;
  5784  000994  5089               	movf	3977,w,c	;volatile
  5785  000996  0980               	iorlw	128
  5786  000998  D002               	goto	L10
  5787  00099A                     l2421:
  5788                           
  5789                           ;LED.c: 333:         {;LED.c: 334:             LATA = LATA & 0b01111111;
  5790  00099A  5089               	movf	3977,w,c	;volatile
  5791  00099C  0B7F               	andlw	127
  5792  00099E                     L10:
  5793  00099E  6E89               	movwf	3977,c	;volatile
  5794                           
  5795                           ;LED.c: 338:         if((diode & 0b0100000000) == 0b0100000000)
  5796  0009A0  A007               	btfss	LED_Control@diode+1,0,c
  5797  0009A2  D003               	goto	l2427
  5798                           
  5799                           ;LED.c: 339:         {;LED.c: 340:             LATD = LATD | ~0b11111110;
  5800  0009A4  508C               	movf	3980,w,c	;volatile
  5801  0009A6  0901               	iorlw	1
  5802  0009A8  D002               	goto	L11
  5803  0009AA                     l2427:
  5804                           
  5805                           ;LED.c: 343:         {;LED.c: 344:             LATD = LATD & 0b11111110;
  5806  0009AA  508C               	movf	3980,w,c	;volatile
  5807  0009AC  0BFE               	andlw	254
  5808  0009AE                     L11:
  5809  0009AE  6E8C               	movwf	3980,c	;volatile
  5810                           
  5811                           ;LED.c: 347:         if((diode & 0b1000000000) == 0b1000000000)
  5812  0009B0  A207               	btfss	LED_Control@diode+1,1,c
  5813  0009B2  D003               	goto	l2433
  5814                           
  5815                           ;LED.c: 348:         {;LED.c: 349:             LATD = LATD | ~0b11111011;
  5816  0009B4  508C               	movf	3980,w,c	;volatile
  5817  0009B6  0904               	iorlw	4
  5818  0009B8  D002               	goto	L12
  5819  0009BA                     l2433:
  5820                           
  5821                           ;LED.c: 352:         {;LED.c: 353:             LATD = LATD & 0b11111011;
  5822  0009BA  508C               	movf	3980,w,c	;volatile
  5823  0009BC  0BFB               	andlw	251
  5824  0009BE                     L12:
  5825  0009BE  6E8C               	movwf	3980,c	;volatile
  5826  0009C0                     l321:
  5827                           
  5828                           ;LED.c: 358:     if(color == GREEN)
  5829  0009C0  040A               	decf	LED_Control@color,w,c
  5830  0009C2  A4D8               	btfss	status,2,c
  5831  0009C4  0012               	return	
  5832                           
  5833                           ;LED.c: 359:     {;LED.c: 361:         if((diode & 0b0000000001) == 0b0000000001)
  5834  0009C6  A006               	btfss	LED_Control@diode,0,c
  5835  0009C8  D003               	goto	l2439
  5836                           
  5837                           ;LED.c: 362:         {;LED.c: 363:             LATD = LATD | ~0b11011111;
  5838  0009CA  508C               	movf	3980,w,c	;volatile
  5839  0009CC  0920               	iorlw	32
  5840  0009CE  D002               	goto	L13
  5841  0009D0                     l2439:
  5842                           
  5843                           ;LED.c: 366:         {;LED.c: 367:             LATD = LATD & 0b11011111;
  5844  0009D0  508C               	movf	3980,w,c	;volatile
  5845  0009D2  0BDF               	andlw	223
  5846  0009D4                     L13:
  5847  0009D4  6E8C               	movwf	3980,c	;volatile
  5848                           
  5849                           ;LED.c: 371:         if((diode & 0b0000000010) == 0b0000000010)
  5850  0009D6  A206               	btfss	LED_Control@diode,1,c
  5851  0009D8  D003               	goto	l2445
  5852                           
  5853                           ;LED.c: 372:         {;LED.c: 373:             LATD = LATD | ~0b01111111;
  5854  0009DA  508C               	movf	3980,w,c	;volatile
  5855  0009DC  0980               	iorlw	128
  5856  0009DE  D002               	goto	L14
  5857  0009E0                     l2445:
  5858                           
  5859                           ;LED.c: 376:         {;LED.c: 377:             LATD = LATD & 0b01111111;
  5860  0009E0  508C               	movf	3980,w,c	;volatile
  5861  0009E2  0B7F               	andlw	127
  5862  0009E4                     L14:
  5863  0009E4  6E8C               	movwf	3980,c	;volatile
  5864                           
  5865                           ;LED.c: 381:         if((diode & 0b0000000100) == 0b0000000100)
  5866  0009E6  A406               	btfss	LED_Control@diode,2,c
  5867  0009E8  D003               	goto	l2451
  5868                           
  5869                           ;LED.c: 382:         {;LED.c: 383:             LATB = LATB | ~0b11111101;
  5870  0009EA  508A               	movf	3978,w,c	;volatile
  5871  0009EC  0902               	iorlw	2
  5872  0009EE  D002               	goto	L15
  5873  0009F0                     l2451:
  5874                           
  5875                           ;LED.c: 386:         {;LED.c: 387:             LATB = LATB & 0b11111101;
  5876  0009F0  508A               	movf	3978,w,c	;volatile
  5877  0009F2  0BFD               	andlw	253
  5878  0009F4                     L15:
  5879  0009F4  6E8A               	movwf	3978,c	;volatile
  5880                           
  5881                           ;LED.c: 390:         if((diode & 0b0000001000) == 0b0000001000)
  5882  0009F6  A606               	btfss	LED_Control@diode,3,c
  5883  0009F8  D003               	goto	l2457
  5884                           
  5885                           ;LED.c: 391:         {;LED.c: 392:             LATA = LATA | ~0b11111011;
  5886  0009FA  5089               	movf	3977,w,c	;volatile
  5887  0009FC  0904               	iorlw	4
  5888  0009FE  D002               	goto	L16
  5889  000A00                     l2457:
  5890                           
  5891                           ;LED.c: 395:         {;LED.c: 396:             LATA = LATA & 0b11111011;
  5892  000A00  5089               	movf	3977,w,c	;volatile
  5893  000A02  0BFB               	andlw	251
  5894  000A04                     L16:
  5895  000A04  6E89               	movwf	3977,c	;volatile
  5896                           
  5897                           ;LED.c: 400:         if((diode & 0b0000010000) == 0b0000010000)
  5898  000A06  A806               	btfss	LED_Control@diode,4,c
  5899  000A08  D003               	goto	l2463
  5900                           
  5901                           ;LED.c: 401:         {;LED.c: 402:             LATA = LATA | ~0b11101111;
  5902  000A0A  5089               	movf	3977,w,c	;volatile
  5903  000A0C  0910               	iorlw	16
  5904  000A0E  D002               	goto	L17
  5905  000A10                     l2463:
  5906                           
  5907                           ;LED.c: 405:         {;LED.c: 406:             LATA = LATA & 0b11101111;
  5908  000A10  5089               	movf	3977,w,c	;volatile
  5909  000A12  0BEF               	andlw	239
  5910  000A14                     L17:
  5911  000A14  6E89               	movwf	3977,c	;volatile
  5912                           
  5913                           ;LED.c: 410:         if((diode & 0b0000100000) == 0b0000100000)
  5914  000A16  AA06               	btfss	LED_Control@diode,5,c
  5915  000A18  D003               	goto	l2469
  5916                           
  5917                           ;LED.c: 411:         {;LED.c: 412:             LATE = LATE | ~0b11111110;
  5918  000A1A  508D               	movf	3981,w,c	;volatile
  5919  000A1C  0901               	iorlw	1
  5920  000A1E  D002               	goto	L18
  5921  000A20                     l2469:
  5922                           
  5923                           ;LED.c: 415:         {;LED.c: 416:             LATE = LATE & 0b11111110;
  5924  000A20  508D               	movf	3981,w,c	;volatile
  5925  000A22  0BFE               	andlw	254
  5926  000A24                     L18:
  5927  000A24  6E8D               	movwf	3981,c	;volatile
  5928                           
  5929                           ;LED.c: 420:         if((diode & 0b0001000000) == 0b0001000000)
  5930  000A26  AC06               	btfss	LED_Control@diode,6,c
  5931  000A28  D003               	goto	l2475
  5932                           
  5933                           ;LED.c: 421:         {;LED.c: 422:             LATE = LATE | ~0b11111011;
  5934  000A2A  508D               	movf	3981,w,c	;volatile
  5935  000A2C  0904               	iorlw	4
  5936  000A2E  D002               	goto	L19
  5937  000A30                     l2475:
  5938                           
  5939                           ;LED.c: 425:         {;LED.c: 426:             LATE = LATE & 0b11111011;
  5940  000A30  508D               	movf	3981,w,c	;volatile
  5941  000A32  0BFB               	andlw	251
  5942  000A34                     L19:
  5943  000A34  6E8D               	movwf	3981,c	;volatile
  5944                           
  5945                           ;LED.c: 429:         if((diode & 0b0010000000) == 0b0010000000)
  5946  000A36  AE06               	btfss	LED_Control@diode,7,c
  5947  000A38  D003               	goto	l2481
  5948                           
  5949                           ;LED.c: 430:         {;LED.c: 431:             LATA = LATA | ~0b10111111;
  5950  000A3A  5089               	movf	3977,w,c	;volatile
  5951  000A3C  0940               	iorlw	64
  5952  000A3E  D002               	goto	L20
  5953  000A40                     l2481:
  5954                           
  5955                           ;LED.c: 434:         {;LED.c: 435:             LATA = LATA & 0b10111111;
  5956  000A40  5089               	movf	3977,w,c	;volatile
  5957  000A42  0BBF               	andlw	191
  5958  000A44                     L20:
  5959  000A44  6E89               	movwf	3977,c	;volatile
  5960                           
  5961                           ;LED.c: 438:         if((diode & 0b0100000000) == 0b0100000000)
  5962  000A46  A007               	btfss	LED_Control@diode+1,0,c
  5963  000A48  D003               	goto	l2487
  5964                           
  5965                           ;LED.c: 439:         {;LED.c: 440:             LATD = LATD | ~0b11111101;
  5966  000A4A  508C               	movf	3980,w,c	;volatile
  5967  000A4C  0902               	iorlw	2
  5968  000A4E  D002               	goto	L21
  5969  000A50                     l2487:
  5970                           
  5971                           ;LED.c: 443:         {;LED.c: 444:             LATD = LATD & 0b11111101;
  5972  000A50  508C               	movf	3980,w,c	;volatile
  5973  000A52  0BFD               	andlw	253
  5974  000A54                     L21:
  5975  000A54  6E8C               	movwf	3980,c	;volatile
  5976                           
  5977                           ;LED.c: 447:         if((diode & 0b1000000000) == 0b1000000000)
  5978  000A56  A207               	btfss	LED_Control@diode+1,1,c
  5979  000A58  D004               	goto	l2493
  5980                           
  5981                           ;LED.c: 448:         {;LED.c: 449:             LATD = LATD | ~0b11110111;
  5982  000A5A  508C               	movf	3980,w,c	;volatile
  5983  000A5C  0908               	iorlw	8
  5984  000A5E  6E8C               	movwf	3980,c	;volatile
  5985                           
  5986                           ;LED.c: 450:         }
  5987  000A60  0012               	return	
  5988  000A62                     l2493:
  5989                           
  5990                           ;LED.c: 452:         {;LED.c: 453:             LATD = LATD &0b11110111;
  5991  000A62  508C               	movf	3980,w,c	;volatile
  5992  000A64  0BF7               	andlw	247
  5993  000A66  6E8C               	movwf	3980,c	;volatile
  5994  000A68  0012               	return		;funcret
  5995  000A6A                     __end_of_LED_Control:
  5996                           	opt callstack 0
  5997                           
  5998 ;; *************** function _INI_GlobalInterrupt *****************
  5999 ;; Defined at:
  6000 ;;		line 74 in file "INI.c"
  6001 ;; Parameters:    Size  Location     Type
  6002 ;;		None
  6003 ;; Auto vars:     Size  Location     Type
  6004 ;;		None
  6005 ;; Return value:  Size  Location     Type
  6006 ;;                  1    wreg      void 
  6007 ;; Registers used:
  6008 ;;		None
  6009 ;; Tracked objects:
  6010 ;;		On entry : 0/0
  6011 ;;		On exit  : 0/0
  6012 ;;		Unchanged: 0/0
  6013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6018 ;;Total ram usage:        0 bytes
  6019 ;; Hardware stack levels used:    1
  6020 ;; Hardware stack levels required when called:    3
  6021 ;; This function calls:
  6022 ;;		Nothing
  6023 ;; This function is called by:
  6024 ;;		_INI_All
  6025 ;; This function uses a non-reentrant model
  6026 ;;
  6027                           
  6028                           	psect	text47
  6029  001674                     __ptext47:
  6030                           	opt callstack 0
  6031  001674                     _INI_GlobalInterrupt:
  6032                           	opt callstack 26
  6033                           
  6034                           ;INI.c: 76: INTCONbits.GIEH=1;
  6035                           
  6036                           ;incstack = 0
  6037  001674  8EF2               	bsf	4082,7,c	;volatile
  6038                           
  6039                           ;INI.c: 77: INTCONbits.GIEL=1;
  6040  001676  8CF2               	bsf	4082,6,c	;volatile
  6041                           
  6042                           ;INI.c: 78: RCONbits.IPEN=1;
  6043  001678  8ED0               	bsf	4048,7,c	;volatile
  6044                           
  6045                           ;INI.c: 79: IPEN =1;
  6046  00167A  8ED0               	bsf	4048,7,c	;volatile
  6047                           
  6048                           ;INI.c: 81: PEIE=1;
  6049  00167C  8CF2               	bsf	4082,6,c	;volatile
  6050                           
  6051                           ;INI.c: 82: TMR1IP = 0;
  6052  00167E  909F               	bcf	3999,0,c	;volatile
  6053  001680  0012               	return		;funcret
  6054  001682                     __end_of_INI_GlobalInterrupt:
  6055                           	opt callstack 0
  6056                           
  6057 ;; *************** function _CAN_Setup *****************
  6058 ;; Defined at:
  6059 ;;		line 23 in file "CAN.c"
  6060 ;; Parameters:    Size  Location     Type
  6061 ;;		None
  6062 ;; Auto vars:     Size  Location     Type
  6063 ;;		None
  6064 ;; Return value:  Size  Location     Type
  6065 ;;                  1    wreg      void 
  6066 ;; Registers used:
  6067 ;;		wreg, status,2, status,0, cstack
  6068 ;; Tracked objects:
  6069 ;;		On entry : 0/0
  6070 ;;		On exit  : 0/0
  6071 ;;		Unchanged: 0/0
  6072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6075 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6076 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6077 ;;Total ram usage:        1 bytes
  6078 ;; Hardware stack levels used:    1
  6079 ;; Hardware stack levels required when called:    4
  6080 ;; This function calls:
  6081 ;;		_CAN_SetupClock
  6082 ;;		_CAN_SetupMask
  6083 ;; This function is called by:
  6084 ;;		_INI_All
  6085 ;; This function uses a non-reentrant model
  6086 ;;
  6087                           
  6088                           	psect	text48
  6089  001180                     __ptext48:
  6090                           	opt callstack 0
  6091  001180                     _CAN_Setup:
  6092                           	opt callstack 25
  6093                           
  6094                           ;CAN.c: 28:     CANCON = 0x80;
  6095                           
  6096                           ;incstack = 0
  6097  001180  0E80               	movlw	128
  6098  001182  6E6F               	movwf	3951,c	;volatile
  6099  001184                     l2949:
  6100                           
  6101                           ;CAN.c: 29:     while((CANSTAT & 0xE0)!=0x80)
  6102  001184  506E               	movf	3950,w,c	;volatile
  6103  001186  0BE0               	andlw	224
  6104  001188  0A80               	xorlw	128
  6105  00118A  A4D8               	btfss	status,2,c
  6106  00118C  D7FB               	goto	l2949
  6107                           
  6108                           ;CAN.c: 34:     BSEL0 = 0;
  6109  00118E  0E00               	movlw	0
  6110  001190  010D               	movlb	13	; () banked
  6111  001192  6FF8               	movwf	248,b	;volatile
  6112                           
  6113                           ;CAN.c: 35:     TXB0CON = 0;
  6114  001194  0E00               	movlw	0
  6115  001196  010F               	movlb	15	; () banked
  6116  001198  6F40               	movwf	64,b	;volatile
  6117                           
  6118                           ;CAN.c: 36:     RXB0CON = 0;
  6119  00119A  0E00               	movlw	0
  6120  00119C  6E60               	movwf	3936,c	;volatile
  6121                           
  6122                           ;CAN.c: 37:     RXB1CON = 0;
  6123  00119E  0E00               	movlw	0
  6124  0011A0  6F50               	movwf	80,b	;volatile
  6125                           
  6126                           ;CAN.c: 38:     B0CON = 0;
  6127  0011A2  0E00               	movlw	0
  6128  0011A4  010E               	movlb	14	; () banked
  6129  0011A6  6F20               	movwf	32,b	;volatile
  6130                           
  6131                           ;CAN.c: 39:     B1CON = 0;
  6132  0011A8  0E00               	movlw	0
  6133  0011AA  6F30               	movwf	48,b	;volatile
  6134                           
  6135                           ;CAN.c: 40:     PIE3 = 0;
  6136  0011AC  0E00               	movlw	0
  6137  0011AE  6EA3               	movwf	4003,c	;volatile
  6138                           
  6139                           ; BSR set to: 14
  6140                           ;CAN.c: 41:     IPR3 = 0xFF;
  6141  0011B0  68A5               	setf	4005,c	;volatile
  6142                           
  6143                           ;CAN.c: 42:     PIR3 = 0x00;
  6144  0011B2  0E00               	movlw	0
  6145  0011B4  6EA4               	movwf	4004,c	;volatile
  6146                           
  6147                           ;CAN.c: 43:     BIE0 = 0;
  6148  0011B6  0E00               	movlw	0
  6149  0011B8  010D               	movlb	13	; () banked
  6150  0011BA  6FFA               	movwf	250,b	;volatile
  6151                           
  6152                           ;CAN.c: 46:     ECANCON = 0x90;
  6153  0011BC  0E90               	movlw	144
  6154  0011BE  6E77               	movwf	3959,c	;volatile
  6155                           
  6156                           ; BSR set to: 13
  6157                           ;CAN.c: 49:     CAN_SetupClock();
  6158  0011C0  ECC7  F00A         	call	_CAN_SetupClock	;wreg free
  6159                           
  6160                           ;CAN.c: 52:     CAN_SetupMask();
  6161  0011C4  EC51  F007         	call	_CAN_SetupMask	;wreg free
  6162                           
  6163                           ;CAN.c: 54:     CIOCON = 0xff;
  6164  0011C8  6873               	setf	3955,c	;volatile
  6165                           
  6166                           ;CAN.c: 60:     CANCON = 0x00;
  6167  0011CA  0E00               	movlw	0
  6168  0011CC  6E6F               	movwf	3951,c	;volatile
  6169  0011CE                     l2963:
  6170                           
  6171                           ;CAN.c: 61:     while((CANSTAT & 0xE0) != 0x00)
  6172  0011CE  CF6E F006          	movff	3950,??_CAN_Setup	;volatile
  6173  0011D2  0EE0               	movlw	224
  6174  0011D4  1606               	andwf	??_CAN_Setup,f,c
  6175  0011D6  B4D8               	btfsc	status,2,c
  6176  0011D8  0012               	return	
  6177  0011DA  D7F9               	goto	l2963
  6178  0011DC                     __end_of_CAN_Setup:
  6179                           	opt callstack 0
  6180                           
  6181 ;; *************** function _CAN_SetupMask *****************
  6182 ;; Defined at:
  6183 ;;		line 82 in file "CAN.c"
  6184 ;; Parameters:    Size  Location     Type
  6185 ;;		None
  6186 ;; Auto vars:     Size  Location     Type
  6187 ;;		None
  6188 ;; Return value:  Size  Location     Type
  6189 ;;                  1    wreg      void 
  6190 ;; Registers used:
  6191 ;;		wreg, status,2, status,0
  6192 ;; Tracked objects:
  6193 ;;		On entry : 0/0
  6194 ;;		On exit  : 0/0
  6195 ;;		Unchanged: 0/0
  6196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6200 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6201 ;;Total ram usage:        0 bytes
  6202 ;; Hardware stack levels used:    1
  6203 ;; Hardware stack levels required when called:    3
  6204 ;; This function calls:
  6205 ;;		Nothing
  6206 ;; This function is called by:
  6207 ;;		_CAN_Setup
  6208 ;; This function uses a non-reentrant model
  6209 ;;
  6210                           
  6211                           	psect	text49
  6212  000EA2                     __ptext49:
  6213                           	opt callstack 0
  6214  000EA2                     _CAN_SetupMask:
  6215                           	opt callstack 25
  6216                           
  6217                           ;CAN.c: 84:     MSEL0 = 0x50;
  6218                           
  6219                           ;incstack = 0
  6220  000EA2  0E50               	movlw	80
  6221  000EA4  010D               	movlb	13	; () banked
  6222  000EA6  6FF0               	movwf	240,b	;volatile
  6223                           
  6224                           ;CAN.c: 85:     MSEL1 = 0x55;
  6225  000EA8  0E55               	movlw	85
  6226  000EAA  6FF1               	movwf	241,b	;volatile
  6227                           
  6228                           ;CAN.c: 86:     MSEL2 = 0x55;
  6229  000EAC  0E55               	movlw	85
  6230  000EAE  6FF2               	movwf	242,b	;volatile
  6231                           
  6232                           ;CAN.c: 87:     MSEL3 = 0x55;
  6233  000EB0  0E55               	movlw	85
  6234  000EB2  6FF3               	movwf	243,b	;volatile
  6235                           
  6236                           ;CAN.c: 90:     RXM0SIDH = 0b00000000;
  6237  000EB4  0E00               	movlw	0
  6238  000EB6  010F               	movlb	15	; () banked
  6239  000EB8  6F18               	movwf	24,b	;volatile
  6240                           
  6241                           ;CAN.c: 91:     RXM0SIDL = 0b00001011;
  6242  000EBA  0E0B               	movlw	11
  6243  000EBC  6F19               	movwf	25,b	;volatile
  6244                           
  6245                           ; BSR set to: 15
  6246                           ;CAN.c: 92:     RXM0EIDH = 0xFF;
  6247  000EBE  691A               	setf	26,b	;volatile
  6248                           
  6249                           ; BSR set to: 15
  6250                           ;CAN.c: 93:     RXM0EIDL = 0xFF;
  6251  000EC0  691B               	setf	27,b	;volatile
  6252                           
  6253                           ; BSR set to: 15
  6254                           ;CAN.c: 96:     RXM1SIDH = 0xFF;
  6255  000EC2  691C               	setf	28,b	;volatile
  6256                           
  6257                           ; BSR set to: 15
  6258                           ;CAN.c: 97:     RXM1SIDL = 0xFF;
  6259  000EC4  691D               	setf	29,b	;volatile
  6260                           
  6261                           ;CAN.c: 98:     RXM1EIDH = 0;
  6262  000EC6  0E00               	movlw	0
  6263  000EC8  6F1E               	movwf	30,b	;volatile
  6264                           
  6265                           ;CAN.c: 99:     RXM1EIDL = 0;
  6266  000ECA  0E00               	movlw	0
  6267  000ECC  6F1F               	movwf	31,b	;volatile
  6268                           
  6269                           ;CAN.c: 102:     RXM0SIDH = 0x00;
  6270  000ECE  0E00               	movlw	0
  6271  000ED0  6F18               	movwf	24,b	;volatile
  6272                           
  6273                           ;CAN.c: 103:     RXM0SIDL = 0x00;
  6274  000ED2  0E00               	movlw	0
  6275  000ED4  6F19               	movwf	25,b	;volatile
  6276                           
  6277                           ;CAN.c: 104:     RXM0EIDH = 0;
  6278  000ED6  0E00               	movlw	0
  6279  000ED8  6F1A               	movwf	26,b	;volatile
  6280                           
  6281                           ;CAN.c: 105:     RXM0EIDL = 0;
  6282  000EDA  0E00               	movlw	0
  6283  000EDC  6F1B               	movwf	27,b	;volatile
  6284                           
  6285                           ;CAN.c: 108:     RXF0SIDH = 0x00;
  6286  000EDE  0E00               	movlw	0
  6287  000EE0  6F00               	movwf	0,b	;volatile
  6288                           
  6289                           ;CAN.c: 109:     RXF0SIDL = 0x01;
  6290  000EE2  0E01               	movlw	1
  6291  000EE4  6F01               	movwf	1,b	;volatile
  6292                           
  6293                           ; BSR set to: 15
  6294                           ;CAN.c: 110:     RXF0SIDLbits.EXIDEN = 1;
  6295  000EE6  8701               	bsf	1,3,b	;volatile
  6296                           
  6297                           ;CAN.c: 111:     RXF0EIDH = (BYTE)(DaneCan.adresCAN>>8);
  6298  000EE8  5033               	movf	_DaneCan+3,w,c
  6299  000EEA  6F02               	movwf	2,b	;volatile
  6300                           
  6301                           ; BSR set to: 15
  6302                           ;CAN.c: 112:  RXF0EIDH |= 0x40;
  6303  000EEC  8D02               	bsf	2,6,b	;volatile
  6304                           
  6305                           ; BSR set to: 15
  6306                           ;CAN.c: 113:     RXF0EIDL = (BYTE)DaneCan.adresCAN;
  6307  000EEE  C032  FF03         	movff	_DaneCan+2,3843	;volatile
  6308                           
  6309                           ; BSR set to: 15
  6310                           ;CAN.c: 115:     RXF1SIDH = 0x00;
  6311  000EF2  0E00               	movlw	0
  6312  000EF4  6F04               	movwf	4,b	;volatile
  6313                           
  6314                           ; BSR set to: 15
  6315                           ;CAN.c: 116:     RXF1SIDL = 0x01;
  6316  000EF6  0E01               	movlw	1
  6317  000EF8  6F05               	movwf	5,b	;volatile
  6318                           
  6319                           ; BSR set to: 15
  6320                           ;CAN.c: 117:     RXF1SIDLbits.EXIDEN = 1;
  6321  000EFA  8705               	bsf	5,3,b	;volatile
  6322                           
  6323                           ; BSR set to: 15
  6324                           ;CAN.c: 118:     RXF1EIDH = 0x7F;
  6325  000EFC  0E7F               	movlw	127
  6326  000EFE  6F06               	movwf	6,b	;volatile
  6327                           
  6328                           ; BSR set to: 15
  6329                           ;CAN.c: 119:     RXF1EIDL = 0xFF;
  6330  000F00  6907               	setf	7,b	;volatile
  6331                           
  6332                           ; BSR set to: 15
  6333                           ;CAN.c: 122:     RXF2SIDH = 0;
  6334  000F02  0E00               	movlw	0
  6335  000F04  6F08               	movwf	8,b	;volatile
  6336                           
  6337                           ; BSR set to: 15
  6338                           ;CAN.c: 123:     RXF2SIDL = 0x20;
  6339  000F06  0E20               	movlw	32
  6340  000F08  6F09               	movwf	9,b	;volatile
  6341                           
  6342                           ; BSR set to: 15
  6343                           ;CAN.c: 124:     RXF2SIDLbits.EXIDEN = 1;
  6344  000F0A  8709               	bsf	9,3,b	;volatile
  6345                           
  6346                           ; BSR set to: 15
  6347                           ;CAN.c: 125:     RXF2EIDH = 0;
  6348  000F0C  0E00               	movlw	0
  6349  000F0E  6F0A               	movwf	10,b	;volatile
  6350                           
  6351                           ; BSR set to: 15
  6352                           ;CAN.c: 126:     RXF2EIDL = 0;
  6353  000F10  0E00               	movlw	0
  6354  000F12  6F0B               	movwf	11,b	;volatile
  6355                           
  6356                           ; BSR set to: 15
  6357                           ;CAN.c: 129:     RXF3SIDH = 0x00;
  6358  000F14  0E00               	movlw	0
  6359  000F16  6F0C               	movwf	12,b	;volatile
  6360                           
  6361                           ; BSR set to: 15
  6362                           ;CAN.c: 130:     RXF3SIDL = 0x00;
  6363  000F18  0E00               	movlw	0
  6364  000F1A  6F0D               	movwf	13,b	;volatile
  6365                           
  6366                           ; BSR set to: 15
  6367                           ;CAN.c: 131:     RXF3EIDH = 0x00;
  6368  000F1C  0E00               	movlw	0
  6369  000F1E  6F0E               	movwf	14,b	;volatile
  6370                           
  6371                           ; BSR set to: 15
  6372                           ;CAN.c: 132:  RXF3EIDH |= 0x00;
  6373  000F20  510E               	movf	14,w,b	;volatile
  6374                           
  6375                           ; BSR set to: 15
  6376                           ;CAN.c: 133:     RXF3EIDL = 0x00;
  6377  000F22  0E00               	movlw	0
  6378  000F24  6F0F               	movwf	15,b	;volatile
  6379                           
  6380                           ; BSR set to: 15
  6381                           ;CAN.c: 140:     RXFCON0 = 0x0F;
  6382  000F26  0E0F               	movlw	15
  6383  000F28  010D               	movlb	13	; () banked
  6384  000F2A  6FD4               	movwf	212,b	;volatile
  6385                           
  6386                           ; BSR set to: 13
  6387  000F2C  0012               	return		;funcret
  6388  000F2E                     __end_of_CAN_SetupMask:
  6389                           	opt callstack 0
  6390                           
  6391 ;; *************** function _CAN_SetupClock *****************
  6392 ;; Defined at:
  6393 ;;		line 149 in file "CAN.c"
  6394 ;; Parameters:    Size  Location     Type
  6395 ;;		None
  6396 ;; Auto vars:     Size  Location     Type
  6397 ;;		None
  6398 ;; Return value:  Size  Location     Type
  6399 ;;                  1    wreg      void 
  6400 ;; Registers used:
  6401 ;;		None
  6402 ;; Tracked objects:
  6403 ;;		On entry : 0/0
  6404 ;;		On exit  : 0/0
  6405 ;;		Unchanged: 0/0
  6406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6410 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6411 ;;Total ram usage:        0 bytes
  6412 ;; Hardware stack levels used:    1
  6413 ;; Hardware stack levels required when called:    3
  6414 ;; This function calls:
  6415 ;;		Nothing
  6416 ;; This function is called by:
  6417 ;;		_CAN_Setup
  6418 ;; This function uses a non-reentrant model
  6419 ;;
  6420                           
  6421                           	psect	text50
  6422  00158E                     __ptext50:
  6423                           	opt callstack 0
  6424  00158E                     _CAN_SetupClock:
  6425                           	opt callstack 25
  6426                           
  6427                           ;CAN.c: 151:     BRGCON1bits.BRP0 = (((32000000/4)/(2*20*50000))-1) & 0b000001;
  6428                           
  6429                           ; BSR set to: 13
  6430                           ;incstack = 0
  6431  00158E  8070               	bsf	3952,0,c	;volatile
  6432                           
  6433                           ;CAN.c: 152:     BRGCON1bits.BRP1 = ((((32000000/4)/(2*20*50000))-1) >> 1) & 0b000001;
  6434  001590  8270               	bsf	3952,1,c	;volatile
  6435                           
  6436                           ;CAN.c: 153:     BRGCON1bits.BRP2 = ((((32000000/4)/(2*20*50000))-1) >> 2) & 0b000001;
  6437  001592  9470               	bcf	3952,2,c	;volatile
  6438                           
  6439                           ;CAN.c: 154:     BRGCON1bits.BRP3 = ((((32000000/4)/(2*20*50000))-1) >> 3) & 0b000001;
  6440  001594  9670               	bcf	3952,3,c	;volatile
  6441                           
  6442                           ;CAN.c: 155:     BRGCON1bits.BRP4 = ((((32000000/4)/(2*20*50000))-1) >> 4) & 0b000001;
  6443  001596  9870               	bcf	3952,4,c	;volatile
  6444                           
  6445                           ;CAN.c: 156:     BRGCON1bits.BRP5 = ((((32000000/4)/(2*20*50000))-1) >> 5) & 0b000001;
  6446  001598  9A70               	bcf	3952,5,c	;volatile
  6447                           
  6448                           ;CAN.c: 158:     BRGCON1bits.SJW0 = 1;
  6449  00159A  8C70               	bsf	3952,6,c	;volatile
  6450                           
  6451                           ;CAN.c: 159:     BRGCON1bits.SJW1 = 1;
  6452  00159C  8E70               	bsf	3952,7,c	;volatile
  6453                           
  6454                           ;CAN.c: 161:     BRGCON2bits.SEG1PH0 = 1;
  6455  00159E  8671               	bsf	3953,3,c	;volatile
  6456                           
  6457                           ;CAN.c: 162:     BRGCON2bits.SEG1PH1 = 1;
  6458  0015A0  8871               	bsf	3953,4,c	;volatile
  6459                           
  6460                           ;CAN.c: 163:     BRGCON2bits.SEG1PH2 = 1;
  6461  0015A2  8A71               	bsf	3953,5,c	;volatile
  6462                           
  6463                           ;CAN.c: 165:     BRGCON2bits.PRSEG2 = 1;
  6464  0015A4  8471               	bsf	3953,2,c	;volatile
  6465                           
  6466                           ;CAN.c: 166:     BRGCON2bits.PRSEG1 = 0;
  6467  0015A6  9271               	bcf	3953,1,c	;volatile
  6468                           
  6469                           ;CAN.c: 167:     BRGCON2bits.PRSEG0 = 0;
  6470  0015A8  9071               	bcf	3953,0,c	;volatile
  6471                           
  6472                           ;CAN.c: 169:     BRGCON3bits.SEG2PH0 = 1;
  6473  0015AA  8072               	bsf	3954,0,c	;volatile
  6474                           
  6475                           ;CAN.c: 170:     BRGCON3bits.SEG2PH1 = 0;
  6476  0015AC  9272               	bcf	3954,1,c	;volatile
  6477                           
  6478                           ;CAN.c: 171:     BRGCON3bits.SEG2PH2 = 1;
  6479  0015AE  8472               	bsf	3954,2,c	;volatile
  6480                           
  6481                           ;CAN.c: 173:     BRGCON2bits.SAM = 1;
  6482  0015B0  8C71               	bsf	3953,6,c	;volatile
  6483                           
  6484                           ;CAN.c: 174:     BRGCON2bits.SEG2PHTS = 1;
  6485  0015B2  8E71               	bsf	3953,7,c	;volatile
  6486  0015B4  0012               	return		;funcret
  6487  0015B6                     __end_of_CAN_SetupClock:
  6488                           	opt callstack 0
  6489                           
  6490 ;; *************** function _ISR_low *****************
  6491 ;; Defined at:
  6492 ;;		line 16 in file "ISR.c"
  6493 ;; Parameters:    Size  Location     Type
  6494 ;;		None
  6495 ;; Auto vars:     Size  Location     Type
  6496 ;;		None
  6497 ;; Return value:  Size  Location     Type
  6498 ;;                  1    wreg      void 
  6499 ;; Registers used:
  6500 ;;		wreg, status,2, status,0, cstack
  6501 ;; Tracked objects:
  6502 ;;		On entry : 0/0
  6503 ;;		On exit  : 0/0
  6504 ;;		Unchanged: 0/0
  6505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6508 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6509 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6510 ;;Total ram usage:        3 bytes
  6511 ;; Hardware stack levels used:    1
  6512 ;; Hardware stack levels required when called:    2
  6513 ;; This function calls:
  6514 ;;		_TMR1_Timer_reset
  6515 ;;		i1_TMR1_Update_flag_Set
  6516 ;; This function is called by:
  6517 ;;		Interrupt level 1
  6518 ;; This function uses a non-reentrant model
  6519 ;;
  6520                           
  6521                           	psect	intcodelo
  6522  000018                     __pintcodelo:
  6523                           	opt callstack 0
  6524  000018                     _ISR_low:
  6525                           	opt callstack 23
  6526                           
  6527                           ;incstack = 0
  6528  000018  8059               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  6529  00001A  CFD8 F003          	movff	status,??_ISR_low
  6530  00001E  CFE8 F004          	movff	wreg,??_ISR_low+1
  6531  000022  CFE0 F005          	movff	bsr,??_ISR_low+2
  6532                           
  6533                           ;ISR.c: 21:     if(TMR1IF==1)
  6534  000026  A09E               	btfss	3998,0,c	;volatile
  6535  000028  D011               	goto	i1l637
  6536                           
  6537                           ;ISR.c: 22:         {;ISR.c: 23:             TMR1_Timer_reset();
  6538  00002A  ECDB  F00A         	call	_TMR1_Timer_reset	;wreg free
  6539                           
  6540                           ;ISR.c: 26:             static BYTE ramkaStanuU8=0;;ISR.c: 29:             TMR1_Update_f
      +                          lag_Set(1);
  6541  00002E  0E00               	movlw	0
  6542  000030  6E02               	movwf	i1TMR1_Update_flag_Set@a+1,c
  6543  000032  0E01               	movlw	1
  6544  000034  6E01               	movwf	i1TMR1_Update_flag_Set@a,c
  6545  000036  EC69  F00B         	call	i1_TMR1_Update_flag_Set	;wreg free
  6546                           
  6547                           ;ISR.c: 31:             DetectorLedRadar.Flags.obsluzWeWy = 1;
  6548  00003A  8034               	bsf	_DetectorLedRadar,0,c
  6549                           
  6550                           ;ISR.c: 33:             if(++ramkaStanuU8 > (2*10))
  6551  00003C  2A4D               	incf	ISR_low@ramkaStanuU8,f,c
  6552  00003E  0E14               	movlw	20
  6553  000040  644D               	cpfsgt	ISR_low@ramkaStanuU8,c
  6554  000042  D003               	goto	i1l3239
  6555                           
  6556                           ;ISR.c: 34:                 {;ISR.c: 35:                     ramkaStanuU8 = 0;
  6557  000044  0E00               	movlw	0
  6558  000046  6E4D               	movwf	ISR_low@ramkaStanuU8,c
  6559                           
  6560                           ;ISR.c: 36:                     DaneCan.Flags.wyslijRamkeStanu = 1;
  6561  000048  8030               	bsf	_DaneCan,0,c
  6562  00004A                     i1l3239:
  6563                           
  6564                           ;ISR.c: 41:             TMR1IF=0;
  6565  00004A  909E               	bcf	3998,0,c	;volatile
  6566  00004C                     i1l637:
  6567  00004C  C005  FFE0         	movff	??_ISR_low+2,bsr
  6568  000050  C004  FFE8         	movff	??_ISR_low+1,wreg
  6569  000054  C003  FFD8         	movff	??_ISR_low,status
  6570  000058  9059               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  6571  00005A  0010               	retfie	
  6572  00005C                     __end_of_ISR_low:
  6573                           	opt callstack 0
  6574                           
  6575 ;; *************** function i1_TMR1_Update_flag_Set *****************
  6576 ;; Defined at:
  6577 ;;		line 32 in file "TMR1.c"
  6578 ;; Parameters:    Size  Location     Type
  6579 ;;  a               2    0[COMRAM] unsigned int 
  6580 ;; Auto vars:     Size  Location     Type
  6581 ;;		None
  6582 ;; Return value:  Size  Location     Type
  6583 ;;                  1    wreg      void 
  6584 ;; Registers used:
  6585 ;;		None
  6586 ;; Tracked objects:
  6587 ;;		On entry : 0/0
  6588 ;;		On exit  : 0/0
  6589 ;;		Unchanged: 0/0
  6590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6591 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6594 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6595 ;;Total ram usage:        2 bytes
  6596 ;; Hardware stack levels used:    1
  6597 ;; Hardware stack levels required when called:    1
  6598 ;; This function calls:
  6599 ;;		Nothing
  6600 ;; This function is called by:
  6601 ;;		_ISR_low
  6602 ;; This function uses a non-reentrant model
  6603 ;;
  6604                           
  6605                           	psect	text52
  6606  0016D2                     __ptext52:
  6607                           	opt callstack 0
  6608  0016D2                     i1_TMR1_Update_flag_Set:
  6609                           	opt callstack 23
  6610                           
  6611                           ;TMR1.c: 32: void TMR1_Update_flag_Set(UINT a);TMR1.c: 33: {;TMR1.c: 34:     TMR1_Update
      +                          _flag = a;
  6612                           
  6613                           ;incstack = 0
  6614  0016D2  C001  F047         	movff	i1TMR1_Update_flag_Set@a,_TMR1_Update_flag
  6615  0016D6  C002  F048         	movff	i1TMR1_Update_flag_Set@a+1,_TMR1_Update_flag+1
  6616  0016DA  0012               	return		;funcret
  6617  0016DC                     __end_ofi1_TMR1_Update_flag_Set:
  6618                           	opt callstack 0
  6619                           
  6620 ;; *************** function _TMR1_Timer_reset *****************
  6621 ;; Defined at:
  6622 ;;		line 63 in file "TMR1.c"
  6623 ;; Parameters:    Size  Location     Type
  6624 ;;		None
  6625 ;; Auto vars:     Size  Location     Type
  6626 ;;  t1H             1    1[COMRAM] volatile unsigned char 
  6627 ;;  t1L             1    0[COMRAM] volatile unsigned char 
  6628 ;; Return value:  Size  Location     Type
  6629 ;;                  1    wreg      unsigned char 
  6630 ;; Registers used:
  6631 ;;		wreg, status,2, status,0
  6632 ;; Tracked objects:
  6633 ;;		On entry : 0/0
  6634 ;;		On exit  : 0/0
  6635 ;;		Unchanged: 0/0
  6636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6638 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6640 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6641 ;;Total ram usage:        2 bytes
  6642 ;; Hardware stack levels used:    1
  6643 ;; Hardware stack levels required when called:    1
  6644 ;; This function calls:
  6645 ;;		Nothing
  6646 ;; This function is called by:
  6647 ;;		_ISR_low
  6648 ;; This function uses a non-reentrant model
  6649 ;;
  6650                           
  6651                           	psect	text53
  6652  0015B6                     __ptext53:
  6653                           	opt callstack 0
  6654  0015B6                     _TMR1_Timer_reset:
  6655                           	opt callstack 23
  6656                           
  6657                           ;TMR1.c: 69:     volatile BYTE t1L = 0, t1H = 0;
  6658                           
  6659                           ;incstack = 0
  6660  0015B6  0E00               	movlw	0
  6661  0015B8  6E01               	movwf	TMR1_Timer_reset@t1L,c	;volatile
  6662  0015BA  0E00               	movlw	0
  6663  0015BC  6E02               	movwf	TMR1_Timer_reset@t1H,c	;volatile
  6664                           
  6665                           ;TMR1.c: 70:     t1L = TMR1L;
  6666  0015BE  CFCE F001          	movff	4046,TMR1_Timer_reset@t1L	;volatile
  6667                           
  6668                           ;TMR1.c: 71:     t1H = TMR1H;
  6669  0015C2  CFCF F002          	movff	4047,TMR1_Timer_reset@t1H	;volatile
  6670                           
  6671                           ;TMR1.c: 72:     __nop();
  6672  0015C6  F000               	nop	
  6673                           
  6674                           ;TMR1.c: 73:     t1H += (UINT8)((0xFFFF - (((8000000/8)/4)/10)) >> 8);
  6675  0015C8  0E9E               	movlw	158
  6676  0015CA  2602               	addwf	TMR1_Timer_reset@t1H,f,c	;volatile
  6677                           
  6678                           ;TMR1.c: 74:     t1L += (UINT8)((0xFFFF - (((8000000/8)/4)/10)) & 0xFF);
  6679  0015CC  0E57               	movlw	87
  6680  0015CE  2601               	addwf	TMR1_Timer_reset@t1L,f,c	;volatile
  6681                           
  6682                           ;TMR1.c: 75:     TMR1H = t1H;
  6683  0015D0  C002  FFCF         	movff	TMR1_Timer_reset@t1H,4047	;volatile
  6684                           
  6685                           ;TMR1.c: 76:     TMR1L = 0x5B;
  6686  0015D4  0E5B               	movlw	91
  6687  0015D6  6ECE               	movwf	4046,c	;volatile
  6688  0015D8  0012               	return		;funcret
  6689  0015DA                     __end_of_TMR1_Timer_reset:
  6690                           	opt callstack 0
  6691                           
  6692 ;; *************** function _ISR_high *****************
  6693 ;; Defined at:
  6694 ;;		line 53 in file "ISR.c"
  6695 ;; Parameters:    Size  Location     Type
  6696 ;;		None
  6697 ;; Auto vars:     Size  Location     Type
  6698 ;;		None
  6699 ;; Return value:  Size  Location     Type
  6700 ;;                  1    wreg      void 
  6701 ;; Registers used:
  6702 ;;		None
  6703 ;; Tracked objects:
  6704 ;;		On entry : 0/0
  6705 ;;		On exit  : 0/0
  6706 ;;		Unchanged: 0/0
  6707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6711 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6712 ;;Total ram usage:        0 bytes
  6713 ;; Hardware stack levels used:    1
  6714 ;; This function calls:
  6715 ;;		Nothing
  6716 ;; This function is called by:
  6717 ;;		Interrupt level 2
  6718 ;; This function uses a non-reentrant model
  6719 ;;
  6720                           
  6721                           	psect	intcode
  6722  000008                     __pintcode:
  6723                           	opt callstack 0
  6724  000008                     _ISR_high:
  6725                           	opt callstack 23
  6726                           
  6727                           ;incstack = 0
  6728  000008  8259               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6729  00000A  ED7B  F00B         	call	int_func,f	;refresh shadow registers
  6730                           
  6731                           	psect	intcode_body
  6732  0016F6                     __pintcode_body:
  6733                           	opt callstack 23
  6734  0016F6                     int_func:
  6735                           	opt callstack 23
  6736  0016F6  0006               	pop		; remove dummy address from shadow register refresh
  6737  0016F8  9259               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  6738  0016FA  0011               	retfie		f
  6739  0016FC                     __end_of_ISR_high:
  6740                           	opt callstack 0
  6741  0000                     
  6742                           	psect	rparam
  6743  0000                     
  6744                           	psect	temp
  6745  000059                     btemp:
  6746                           	opt callstack 0
  6747  000059                     	ds	1
  6748  0000                     int$flags	set	btemp
  6749  0000                     wtemp8	set	btemp+1
  6750  0000                     ttemp5	set	btemp+1
  6751  0000                     ttemp6	set	btemp+4
  6752  0000                     ttemp7	set	btemp+8
  6753                           tosu	equ	0xFFF
  6754                           tosh	equ	0xFFE
  6755                           tosl	equ	0xFFD
  6756                           stkptr	equ	0xFFC
  6757                           pclatu	equ	0xFFB
  6758                           pclath	equ	0xFFA
  6759                           pcl	equ	0xFF9
  6760                           tblptru	equ	0xFF8
  6761                           tblptrh	equ	0xFF7
  6762                           tblptrl	equ	0xFF6
  6763                           tablat	equ	0xFF5
  6764                           prodh	equ	0xFF4
  6765                           prodl	equ	0xFF3
  6766                           indf0	equ	0xFEF
  6767                           postinc0	equ	0xFEE
  6768                           postdec0	equ	0xFED
  6769                           preinc0	equ	0xFEC
  6770                           plusw0	equ	0xFEB
  6771                           fsr0h	equ	0xFEA
  6772                           fsr0l	equ	0xFE9
  6773                           wreg	equ	0xFE8
  6774                           indf1	equ	0xFE7
  6775                           postinc1	equ	0xFE6
  6776                           postdec1	equ	0xFE5
  6777                           preinc1	equ	0xFE4
  6778                           plusw1	equ	0xFE3
  6779                           fsr1h	equ	0xFE2
  6780                           fsr1l	equ	0xFE1
  6781                           bsr	equ	0xFE0
  6782                           indf2	equ	0xFDF
  6783                           postinc2	equ	0xFDE
  6784                           postdec2	equ	0xFDD
  6785                           preinc2	equ	0xFDC
  6786                           plusw2	equ	0xFDB
  6787                           fsr2h	equ	0xFDA
  6788                           fsr2l	equ	0xFD9
  6789                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        9
    BSS         683
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     42      88
    BANK0           160      0     102
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    FRAME_AnalogValue@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_MapPosition@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_HandleCanFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_AdressOfNeighbors@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_PrzypisanieDokarty@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_SoftwareVersion@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_Plot@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_DeviceReset@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_DataUpdateAndChangeOption@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    Dane	PTR struct DaneStruct size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    FRAME_AxisStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_AveragingTimes@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_ExcitationMultiplier@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_ExcitationValue@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_AccelerometerStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_SensorExcitationStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_GenID@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_TakeFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_SendFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_MoveBuffIntoFrame@Buf	PTR unsigned char  size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), RXB0D0(SFR_3[1]), 

    CAN_MoveBuffIntoFrame@Ram	PTR unsigned char  size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), RXB0D0(SFR_3[1]), 


Critical Paths under _main in COMRAM

    _main->_TRM_DataTransmition
    _TRM_DataTransmition->_FRAME_HandleCanFrame
    _FRAME_HandleCanFrame->_FRAME_SensorExcitationStatus
    _LED_Error->_LED_Control
    _LED_Clear->_LED_Control
    _FRAME_Plot->___lwdiv
    _FRAME_DeviceReset->_FRAME_DataUpdateAndChangeOption
    _FRAME_AccelerometerStatus->_MOCK_Klikniecie_Spadek
    _FRAME_AccelerometerStatus->_MOCK_PrzyspieszenieX
    _FRAME_AccelerometerStatus->_MOCK_PrzyspieszenieY
    _FRAME_AccelerometerStatus->_MOCK_PrzyspieszenieZ
    _CAN_SendFrame->_CAN_MoveBuffIntoFrame
    _CAN_TakeFrame->___awdiv
    _LED_Update->_LED_Light_Pos
    _LED_Light_Pos->___lwdiv
    _INI_LED_Start->_LED_Control

Critical Paths under _ISR_low in COMRAM

    _ISR_low->_TMR1_Timer_reset
    _ISR_low->i1_TMR1_Update_flag_Set

Critical Paths under _ISR_high in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR_low in BANK0

    None.

Critical Paths under _ISR_high in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_low in BANK1

    None.

Critical Paths under _ISR_high in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_low in BANK2

    None.

Critical Paths under _ISR_high in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_low in BANK3

    None.

Critical Paths under _ISR_high in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_low in BANK4

    None.

Critical Paths under _ISR_high in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_low in BANK5

    None.

Critical Paths under _ISR_high in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_low in BANK6

    None.

Critical Paths under _ISR_high in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_low in BANK7

    None.

Critical Paths under _ISR_high in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_low in BANK8

    None.

Critical Paths under _ISR_high in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_low in BANK9

    None.

Critical Paths under _ISR_high in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_low in BANK10

    None.

Critical Paths under _ISR_high in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_low in BANK11

    None.

Critical Paths under _ISR_high in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_low in BANK12

    None.

Critical Paths under _ISR_high in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   21445
                            _INI_All
                         _LED_Update
               _TMR1_Update_flag_Get
               _TMR1_Update_flag_Set
                _TRM_DataTransmition
 ---------------------------------------------------------------------------------
 (1) _TRM_DataTransmition                                 18    18      0   14220
                                             25 COMRAM    17    17      0
                      _CAN_TakeFrame
               _FRAME_HandleCanFrame
 ---------------------------------------------------------------------------------
 (2) _FRAME_HandleCanFrame                                 9     7      2   12183
                                             16 COMRAM     9     7      2
                          _CAN_GenID
                      _CAN_SendFrame
          _FRAME_AccelerometerStatus
            _FRAME_AdressOfNeighbors
                  _FRAME_AnalogValue
               _FRAME_AveragingTimes
                   _FRAME_AxisStatus
                  _FRAME_DeviceReset
         _FRAME_ExcitationMultiplier
              _FRAME_ExcitationValue
                  _FRAME_MapPosition
                         _FRAME_Plot
           _FRAME_PrzypisanieDokarty
       _FRAME_SensorExcitationStatus
              _FRAME_SoftwareVersion
                          _LED_Error
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) _FRAME_SoftwareVersion                                3     1      2     235
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_SensorExcitationStatus                         6     4      2    3540
                                             10 COMRAM     6     4      2
                      _IsInNeighbors
                          _LED_Clear
                          _LED_Error
                           _LOCK_Get
                           _LOCK_Set
           _MOC_Aktualna_Temperatura
                  _MOC_Frame_Counter
                        _MOC_NOTWORK
     _MOC_Wynikowa_wartosc_roznicowa
 ---------------------------------------------------------------------------------
 (4) _MOC_Wynikowa_wartosc_roznicowa                       2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_NOTWORK                                          2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_Frame_Counter                                    2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_Aktualna_Temperatura                             2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _LOCK_Set                                             1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _LOCK_Get                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _LED_Error                                            0     0      0    1412
                        _LED_Control
 ---------------------------------------------------------------------------------
 (4) _LED_Clear                                            0     0      0    1412
                        _LED_Control
 ---------------------------------------------------------------------------------
 (4) _IsInNeighbors                                        4     2      2     279
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_PrzypisanieDokarty                             6     4      2     279
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_Plot                                           3     1      2     743
                                             12 COMRAM     3     1      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) _FRAME_MapPosition                                    2     0      2     103
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_ExcitationValue                                3     1      2     169
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_ExcitationMultiplier                           5     3      2     215
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_DeviceReset                                    3     1      2     668
                                              8 COMRAM     3     1      2
    _FRAME_DataUpdateAndChangeOption
 ---------------------------------------------------------------------------------
 (4) _FRAME_DataUpdateAndChangeOption                      3     1      2     191
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AxisStatus                                     5     3      2     169
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AveragingTimes                                 3     1      2     169
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AnalogValue                                    6     2      4     206
                                              5 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _FRAME_AdressOfNeighbors                             12     8      4    1227
                                              5 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (3) _FRAME_AccelerometerStatus                            3     1      2     235
                                              7 COMRAM     3     1      2
             _MOCK_Klikniecie_Spadek
               _MOCK_PrzyspieszenieX
               _MOCK_PrzyspieszenieY
               _MOCK_PrzyspieszenieZ
 ---------------------------------------------------------------------------------
 (4) _MOCK_PrzyspieszenieZ                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOCK_PrzyspieszenieY                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOCK_PrzyspieszenieX                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOCK_Klikniecie_Spadek                               2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _CAN_SendFrame                                        5     3      2     891
                                             10 COMRAM     5     3      2
              _CAN_MoveBuffIntoFrame
 ---------------------------------------------------------------------------------
 (3) _CAN_GenID                                            7     4      3     360
                                              5 COMRAM     7     4      3
 ---------------------------------------------------------------------------------
 (2) _CAN_TakeFrame                                        6     4      2    1622
                                             13 COMRAM     6     4      2
              _CAN_MoveBuffIntoFrame
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     612
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _CAN_MoveBuffIntoFrame                                5     1      4     546
                                              5 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) _TMR1_Update_flag_Set                                 2     0      2     202
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR1_Update_flag_Get                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _LED_Update                                           0     0      0    5611
                        _LED_Control
                           _LED_Left
                      _LED_Light_Pos
                          _LED_Right
 ---------------------------------------------------------------------------------
 (2) _LED_Light_Pos                                       11     7      4    3471
                                             12 COMRAM    11     7      4
                        _LED_Control
                           _LED_Left
                          _LED_Right
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     574
                                              5 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _LED_Right                                            6     4      2     364
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _LED_Left                                             4     2      2     364
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _INI_All                                              0     0      0    1412
                          _CAN_Setup
                _INI_GlobalInterrupt
                      _INI_LED_Start
                         _INI_OUTPUT
                          _INI_Timer
 ---------------------------------------------------------------------------------
 (2) _INI_Timer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INI_OUTPUT                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INI_LED_Start                                        0     0      0    1412
                        _LED_Control
 ---------------------------------------------------------------------------------
 (4) _LED_Control                                          5     3      2    1412
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _INI_GlobalInterrupt                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CAN_Setup                                            1     1      0       0
                                              5 COMRAM     1     1      0
                     _CAN_SetupClock
                      _CAN_SetupMask
 ---------------------------------------------------------------------------------
 (3) _CAN_SetupMask                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CAN_SetupClock                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR_low                                              3     3      0      76
                                              2 COMRAM     3     3      0
                   _TMR1_Timer_reset
             i1_TMR1_Update_flag_Set
 ---------------------------------------------------------------------------------
 (7) i1_TMR1_Update_flag_Set                               2     0      2      48
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (7) _TMR1_Timer_reset                                     2     2      0      28
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _ISR_high                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _INI_All
     _CAN_Setup
       _CAN_SetupClock
       _CAN_SetupMask
     _INI_GlobalInterrupt
     _INI_LED_Start
       _LED_Control
     _INI_OUTPUT
     _INI_Timer
   _LED_Update
     _LED_Control
     _LED_Left
     _LED_Light_Pos
       _LED_Control
       _LED_Left
       _LED_Right
       ___lwdiv
     _LED_Right
   _TMR1_Update_flag_Get
   _TMR1_Update_flag_Set
   _TRM_DataTransmition
     _CAN_TakeFrame
       _CAN_MoveBuffIntoFrame
       ___awdiv
     _FRAME_HandleCanFrame
       _CAN_GenID
       _CAN_SendFrame
         _CAN_MoveBuffIntoFrame
       _FRAME_AccelerometerStatus
         _MOCK_Klikniecie_Spadek
         _MOCK_PrzyspieszenieX
         _MOCK_PrzyspieszenieY
         _MOCK_PrzyspieszenieZ
       _FRAME_AdressOfNeighbors
       _FRAME_AnalogValue
       _FRAME_AveragingTimes
       _FRAME_AxisStatus
       _FRAME_DeviceReset
         _FRAME_DataUpdateAndChangeOption
       _FRAME_ExcitationMultiplier
       _FRAME_ExcitationValue
       _FRAME_MapPosition
       _FRAME_Plot
         ___lwdiv
       _FRAME_PrzypisanieDokarty
       _FRAME_SensorExcitationStatus
         _IsInNeighbors
         _LED_Clear
           _LED_Control
         _LED_Error
           _LED_Control
         _LOCK_Get
         _LOCK_Set
         _MOC_Aktualna_Temperatura
         _MOC_Frame_Counter
         _MOC_NOTWORK
         _MOC_Wynikowa_wartosc_roznicowa
       _FRAME_SoftwareVersion
       _LED_Error
         _LED_Control
       ___awdiv

 _ISR_low (ROOT)
   _TMR1_Timer_reset
   i1_TMR1_Update_flag_Set

 _ISR_high (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0     220      31       16.4%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      66       5       63.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2A      58       1       93.6%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      BE      20        0.0%
DATA                 0      0     2DE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Jul 24 09:28:51 2019

                __end_of_FRAME_DeviceReset 0BA6                      ?_FRAME_AveragingTimes 0006  
                             ___awdiv@sign 000B                                         bsr 000FE0  
                              __CFG_BORV$3 000000                          ?_FRAME_AxisStatus 0006  
                        _FRAME_MapPosition 1700                               __CFG_CP0$OFF 000000  
                             __CFG_CP1$OFF 000000                               __CFG_CP2$OFF 000000  
                             __CFG_CP3$OFF 000000                         __size_of_CAN_GenID 0094  
                                      l200 033C                                        l201 0342  
                                      l202 0348                                        l203 034E  
                                      l204 0354                                        l205 035A  
                                      l206 0360                                        l321 09C0  
                                      l190 07C4                                        l293 1002  
                                      l189 07C6                                        l198 0336  
                                      l199 03A6                                ?_LED_Update 0001  
                                      l570 07A4                                        l467 0CBE  
                                      l571 079C                               __CFG_CPB$OFF 000000  
                       ??_FRAME_AxisStatus 0008                               __CFG_CPD$OFF 000000  
                       ?_FRAME_MapPosition 0006                         __size_of_CAN_Setup 005C  
                             ?_LED_Control 0006                                        wreg 000FE8  
                    __end_of_CAN_TakeFrame 05A4                                ?_INI_OUTPUT 0001  
                   __size_of_INI_LED_Start 0034                   ??_MOCK_Klikniecie_Spadek 0008  
                    __end_of_CAN_SendFrame 0918                               __CFG_LVP$OFF 000000  
                TRM_DataTransmition@weWyU8 004C               __size_of_INI_GlobalInterrupt 000E  
                      ??_FRAME_MapPosition 0008                               __CFG_WDT$OFF 000000  
                                     l1201 1330                                       l3003 04B4  
                                     l3011 0512                                       l3021 0540  
                                     l3013 0524                                       l3005 04F4  
                                     l3101 05E6                                       l3023 0548  
                                     l3015 052A                                       l3031 0560  
                                     l3111 062C                                       l3103 05F4  
                                     l3025 0550                                       l3017 0530  
                                     l3033 05A0                                       l3009 04F8  
                                     l3121 067E                                       l3113 063A  
                                     l3105 0602                                       l2403 096A  
                                     l3027 0558                                       l3019 0538  
                                     l3123 068C                                       l3115 0648  
                                     l3107 0610                                       l3131 0722  
                                     l2421 099A                                       l3125 06A2  
                                     l3117 0656                                       l3109 061E  
                                     l3213 153C                                       l2415 098A  
                                     l3071 0D22                                       l2503 1568  
                                     l3119 0664                                       l3223 155C  
                                     l2433 09BA                                       l2409 097A  
                                     l3073 0D2C                                       l3065 0CF6  
                                     l3129 06B8                                       l2451 09F0  
                                     l2427 09AA                            __end_of_INI_All 164E  
                                     l2445 09E0                                       l3165 0FDE  
                                     l3181 13FE                                       l2463 0A10  
                                     l2439 09D0                                       l2391 094A  
                                     l2615 12FE                                       l3079 0D58  
                                     l2551 104C                                       l2481 0A40  
                                     l2457 0A00                                       l2385 093A  
                                     l2617 1306                                       l2545 103E  
                                     l2475 0A30                                       l2379 092A  
                                     l2627 1326                                       l2715 085E  
                                     l2563 1068                                       l3099 05D8  
                                     l2493 0A62                                       l2469 0A20  
                                     l2397 095A                                       l2901 0266  
                                     l2581 1092                                       l2557 105A  
                                     l2487 0A50                                       l2751 144C  
                                     l2735 13BC                                       l2911 0F42  
                                     l2719 0912                                       l2575 1084  
                                     l2569 1076                                       l2923 0F68  
                                     l2851 0B2A                                       l2587 10A0  
                                     l2925 0F70                                       l2917 0F52  
                                     l2829 1366                                       l2781 0C62  
                                     l2773 0C48                                       l2943 0FA8  
                                     l2935 0F90                                       l2863 0B82  
                                     l2873 12CA                                       l2793 0C80  
                                     l2963 11CE                                       l2939 0F9A  
                                     l2867 0B94                                       l2859 0B64  
                                     l2883 0DC6                                       l2787 0C78  
                                     l2949 1184                                       l2991 048C  
                                     l2895 011A                                       l2993 0494  
                                     l2985 0478                                       l2969 0366  
                                     l2897 019C                                       l2995 049C  
                                     l2987 047E                                       l2997 04A4  
                                     l2989 0484                                       _BIE0 000DFA  
                                     l2999 04AC                          _MOC_Frame_Counter 1666  
                                     u1160 103A                                       u1250 130A  
                                     u1315 0834                                       _LATA 000F89  
                                     u1430 1376                                       _LATB 000F8A  
                                     _LATC 000F8B                                       _LATD 000F8C  
                                     _LATE 000F8D                                       u1620 0F74  
                                     u1380 0C94                                       u1470 0AB8  
                                     u1480 0AD0                                       u1730 0D60  
                                     u1476 0ABA                                       u1486 0AD2  
                                     _IPR3 000FA5                                       _IPEN 007E87  
                                     _PIE3 000FA3                                       u1685 0410  
                                     _PEIE 007F96                                       _LOCK 004F  
                                     _PIR3 000FA4                                       _RCON 000FD0  
              ??_FRAME_AccelerometerStatus 000A                                       _Dane 0049  
                          __end_of_ISR_low 005C                           LED_Control@diode 0006  
                     FRAME_AnalogValue@set 0008                         ?_MOC_Frame_Counter 0006  
                                     _main 1536                           LED_Control@color 000A  
                                     fsr1h 000FE2                                       fsr2h 000FDA  
                                     indf1 000FE7                                       indf2 000FDF  
                                     fsr1l 000FE1                                       fsr2l 000FD9  
                                     btemp 0059                             _CAN_SetupClock 158E  
                       __size_of_LED_Clear 001E                                       prodh 000FF4  
                                     prodl 000FF3                      __end_of_CAN_SetupMask 0F2E  
            __size_of_TMR1_Update_flag_Get 000A                                       start 005C  
            __size_of_TMR1_Update_flag_Set 000A                         __size_of_LED_Error 001E  
                            __CFG_IESO$OFF 000000                         __size_of_LED_Right 004C  
            __size_of_FRAME_HandleCanFrame 0206                              _LED_Light_Pos 0CC0  
                            __CFG_MCLRE$ON 000000                               ___param_bank 000000  
                      ??_MOC_Frame_Counter 0008                 ??_MOC_Aktualna_Temperatura 0008  
        FRAME_HandleCanFrame@identyfikator 0019                         __size_of_INI_Timer 0018  
                __end_of_FRAME_MapPosition 1702                              _NeightAdress1 0045  
                            _NeightAdress2 0043                              _NeightAdress3 0041  
                            _NeightAdress4 003F                              _NeightAdress5 003D  
                            _NeightAdress6 003B                              _NeightAdress7 0039  
                            _NeightAdress8 0037                           __end_of_LED_Left 1460  
            __size_of_MOCK_PrzyspieszenieX 000A              __size_of_MOCK_PrzyspieszenieY 000A  
            __size_of_MOCK_PrzyspieszenieZ 000A                                      _B0CON 000E20  
                                    _B1CON 000E30                                      _B2CON 000E40  
                                    _B3CON 000E50                                      _B4CON 000E60  
                                    _B5CON 000E70                           __end_of_LOCK_Get 1700  
                                    ?_main 0001                           __end_of_LOCK_Set 16F6  
                          __end_of___awdiv 0FB2                                      _BSEL0 000DF8  
                          ___awdiv@divisor 0008                                      _T1CON 000FCD  
                                    _IRCF0 007E9C                                      _IRCF1 007E9D  
        FRAME_ExcitationMultiplier@message 0006                                      _IRCF2 007E9E  
                          __end_of___lwdiv 133A                                      i1l637 004C  
                      __size_of_FRAME_Plot 0058                            ___awdiv@counter 000A  
                                    _MSEL0 000DF0                                      _MSEL1 000DF1  
                                    _MSEL2 000DF2                                      _MSEL3 000DF3  
                                    _TMR1H 000FCF                                      _TMR1L 000FCE  
                                    _TRISA 000F92                                      _TRISB 000F93  
                                    _TRISC 000F94                                      _TRISD 000F95  
                                    _TRISE 000F96                              __CFG_PWRT$OFF 000000  
                                    _Flagi 002B                     ?_CAN_MoveBuffIntoFrame 0006  
                            __CFG_WRT0$OFF 000000                 __size_of_FRAME_AnalogValue 0002  
                            __CFG_WRT1$OFF 000000                              __CFG_WRT2$OFF 000000  
                            __CFG_WRT3$OFF 000000                             __CFG_EBTR0$OFF 000000  
                           __CFG_FCMEN$OFF 000000                             __CFG_EBTR1$OFF 000000  
                           __CFG_EBTR2$OFF 000000                             __CFG_EBTR3$OFF 000000  
                         __end_of_ISR_high 16FC                              __CFG_WRTB$OFF 000000  
                            __CFG_WRTC$OFF 000000                              __CFG_WRTD$OFF 000000  
                __end_of_MOC_Frame_Counter 1674                             __CFG_EBTRB$OFF 000000  
                  i1TMR1_Update_flag_Set@a 0001                               ?_MOC_NOTWORK 0006  
                                    tablat 000FF5                     __end_of_CAN_SetupClock 15B6  
                                    ttemp5 005A                                      ttemp6 005D  
                                    ttemp7 0061                                      status 000FD8  
                                    wtemp8 005A                          __end_of_CAN_GenID 0EA2  
                           __CFG_PBADEN$ON 000000                        __size_of_LED_Update 007A  
                           ?_LED_Light_Pos 000D                           _TMR1_Timer_reset 15B6  
                        __end_of_CAN_Setup 11DC                              _INI_LED_Start 1502  
                    _FRAME_ExcitationValue 1460           FRAME_AccelerometerStatus@message 0008  
                          __initialization 11DC                        __size_of_INI_OUTPUT 001E  
                         CAN_GenID@frameID 0008                               __end_of_main 1564  
                   ??_FRAME_AveragingTimes 0008                 __size_of_FRAME_DeviceReset 013C  
                 ?_FRAME_AdressOfNeighbors 0006                           CAN_GenID@message 0006  
                _FRAME_AccelerometerStatus 10A4  FRAME_SensorExcitationStatus@iterator_beta 000F  
                                   ??_main 002B                     CAN_MoveBuffIntoFrame@i 000A  
                            __activetblptr 000002                           _TMR1_Update_flag 0047  
                        __end_of_LED_Clear 1616                      __end_of_IsInNeighbors 10A4  
                          _wartosciSasiada 00C6                                  ??_INI_All 000B  
                        __end_of_LED_Error 15F8                          __end_of_LED_Right 13D4  
          __size_of_MOCK_Klikniecie_Spadek 000A                                  ??_ISR_low 0003  
                                   _CANCON 000F6F                           ___awdiv@dividend 0006  
              FRAME_ExcitationMultiplier@i 0009                                     _CIOCON 000F73  
                          __CFG_BBSIZ$1024 000000                          __end_of_INI_Timer 1666  
                                   i1l3239 004A                            ?_CAN_SetupClock 0001  
                                   _RXB0D0 000F66                                     _TMR1IE 007CE8  
                                   _TMR1IF 007CF0                                     _TMR1IP 007CF8  
                                   _TMR1ON 007E68               ??_FRAME_ExcitationMultiplier 0008  
                           ?_INI_LED_Start 0001                             __CFG_XINST$OFF 000000  
                                ??___awdiv 000A                             __CFG_STVREN$ON 000000  
                         LED_Light_Pos@pos 000D                 __size_of_FRAME_MapPosition 0002  
                                ??___lwdiv 000A                                     clear_0 1204  
                                   clear_1 1216                                     clear_2 1222  
                         ___awdiv@quotient 000C                 ??_FRAME_PrzypisanieDokarty 0008  
                 ??i1_TMR1_Update_flag_Set 0003                            __CFG_BOREN$BOHW 000000  
                             __pdataCOMRAM 0050                                     tblptrh 000FF7  
                                   tblptrl 000FF6                                     tblptru 000FF8  
      __size_of_FRAME_ExcitationMultiplier 004E                 __size_of_MOC_Frame_Counter 000E  
                     __size_of_LED_Control 0152                   FRAME_MapPosition@message 0006  
                    TMR1_Update_flag_Set@a 0006                                 __accesstop 0060  
                  __end_of__initialization 1228                               ??_FRAME_Plot 000F  
                      ISR_low@ramkaStanuU8 004D                                  ?_LED_Left 0006  
                          ??_LED_Light_Pos 0011                              ___rparam_used 000001  
                   ?_FRAME_ExcitationValue 0006                                  ?_LOCK_Get 0001  
                                ?_LOCK_Set 0001            __end_of_FRAME_AdressOfNeighbors 0328  
                   _MOCK_Klikniecie_Spadek 16B4                             __pcstackCOMRAM 0001  
                                LED_Left@a 0006                                  LED_Left@b 0008  
                      _INI_GlobalInterrupt 1674                                  ?_ISR_high 0001  
                             ??_LED_Update 0018                __end_of_TRM_DataTransmition 141E  
                    _FRAME_SoftwareVersion 111A                         __end_of_FRAME_Plot 12E8  
                             ??_INI_OUTPUT 0006                                  LOCK_Set@k 0006  
                  FRAME_AxisStatus@message 0006                IsInNeighbors@message_adress 0006  
                     ?_INI_GlobalInterrupt 0001                  __size_of_FRAME_AxisStatus 0036  
                               __pbssBANK0 0060                       __size_of_MOC_NOTWORK 0008  
                          ??_INI_LED_Start 000B                                 ??_LED_Left 0008  
                               ??_LOCK_Get 0006                                 ??_LOCK_Set 0006  
                       __end_of_LED_Update 102C                         __end_of_INI_OUTPUT 1634  
                               ??_ISR_high 0001                        TMR1_Timer_reset@t1H 0002  
                      TMR1_Timer_reset@t1L 0001                                    _ECANCON 000F77  
                                  _CANSTAT 000F6E                    ??_CAN_MoveBuffIntoFrame 000A  
             __end_of_TMR1_Update_flag_Get 16D2               __end_of_TMR1_Update_flag_Set 16C8  
          __size_ofi1_TMR1_Update_flag_Set 000A               __end_of_FRAME_HandleCanFrame 07AA  
                                  _INI_All 1634                   __end_of_TMR1_Timer_reset 15DA  
                                  _RXB0DLC 000F65                                    _RXB0CON 000F60  
                                  _RXB1CON 000F50                      ??_INI_GlobalInterrupt 0006  
                                  _TXB0CON 000F40                                    _ISR_low 0018  
                                  _RXFCON0 000DD4                                    _DaneCan 0030  
             __end_of_MOCK_PrzyspieszenieX 16B4               __end_of_MOCK_PrzyspieszenieY 16AA  
             __end_of_MOCK_PrzyspieszenieZ 16A0         __end_of_FRAME_ExcitationMultiplier 1388  
               _FRAME_ExcitationMultiplier 133A                FRAME_HandleCanFrame@message 0011  
                                  __Hparam 0000           ??_MOC_Wynikowa_wartosc_roznicowa 0008  
          ?_MOC_Wynikowa_wartosc_roznicowa 0006                                    __Lparam 0000  
                   __size_of_CAN_TakeFrame 027C                                  _CAN_GenID 0E0E  
                                  ___awdiv 0F2E                                  _CAN_Setup 1180  
                   __size_of_CAN_SendFrame 016E                                    ___lwdiv 12E8  
                        LED_Light_Pos@pos2 0014                                    __pcinit 11DC  
                                  __ramtop 0D00     FRAME_DataUpdateAndChangeOption@message 0006  
                                  __ptext0 1536                                    __ptext1 13D4  
                                  __ptext2 05A4                                    __ptext3 111A  
                                  __ptext4 0BA6                                    __ptext5 1682  
                                  __ptext6 16E6                                    __ptext7 1666  
                                  __ptext8 168C                                    __ptext9 16EE  
                   ?_FRAME_SoftwareVersion 0006                     __size_of_CAN_SetupMask 008C  
        __size_of_MOC_Aktualna_Temperatura 000A             FRAME_AdressOfNeighbors@nrRamki 0008  
                ?_MOC_Aktualna_Temperatura 0006           __size_of_FRAME_AdressOfNeighbors 02C8  
                         ??_CAN_SetupClock 0006             FRAME_AdressOfNeighbors@message 0006  
                                _LED_Clear 15F8                                  _LED_Error 15DA  
                           __pintcode_body 16F6                                  _LED_Right 1388  
                     end_of_initialization 1228                              __Lmediumconst 0000  
                                  int_func 16F6                                  _INI_Timer 164E  
                   i1_TMR1_Update_flag_Set 16D2           TRM_DataTransmition@czujnikWeWyU8 004B  
                               ?_CAN_GenID 0006                                    postdec1 000FE5  
                                  postdec2 000FDD                                    postinc0 000FEE  
                                  postinc2 000FDE                                 ?_CAN_Setup 0001  
            __size_of_FRAME_AveragingTimes 0036                       CAN_SendFrame@message 000B  
                            LED_Update@Red 004E                              _CAN_TakeFrame 0328  
                               ?_LED_Clear 0001                              _CAN_SendFrame 07AA  
                               ?_LED_Error 0001                FRAME_AdressOfNeighbors@kier 000E  
                               ?_LED_Right 0006                           _FRAME_AxisStatus 1496  
                  ??_FRAME_ExcitationValue 0008                                 ?_INI_Timer 0001  
                  ?_MOCK_Klikniecie_Spadek 0006                            _ramkaCanRxKarty 0060  
                     _TMR1_Update_flag_Get 16C8                            _ramkaCanTxKarty 00B5  
                     _TMR1_Update_flag_Set 16BE                              _CAN_SetupMask 0EA2  
                        __size_of_LED_Left 0042                       _FRAME_HandleCanFrame 05A4  
                   __size_of_IsInNeighbors 0078                          __size_of_LOCK_Get 0004  
                        __size_of_LOCK_Set 0008                             CAN_TakeFrame@k 0013  
                            __pidataCOMRAM 16DC                          __size_of_ISR_high 16F4  
                     _MOCK_PrzyspieszenieX 16AA                       _MOCK_PrzyspieszenieY 16A0  
                     _MOCK_PrzyspieszenieZ 1696                                 LED_Right@a 0006  
                               LED_Right@b 000A                      MOC_Frame_Counter@zeta 0050  
                            ??_LED_Control 0008                        start_initialization 11DC  
                           ?_CAN_TakeFrame 000E                             ?_CAN_SendFrame 000B  
           __end_of_MOCK_Klikniecie_Spadek 16BE                           __CFG_OSC$IRCIO67 000000  
        __size_of_FRAME_PrzypisanieDokarty 009E                  ?_FRAME_PrzypisanieDokarty 0006  
                    ?_TMR1_Update_flag_Get 0006                      ?_TMR1_Update_flag_Set 0006  
                           ?_CAN_SetupMask 0001                      __end_of_LED_Light_Pos 0D70  
                    ?_FRAME_HandleCanFrame 0011                                ??_CAN_GenID 0009  
                              ??_CAN_Setup 0006                           __CFG_LPT1OSC$OFF 000000  
                    ?_MOCK_PrzyspieszenieX 0006                      ?_MOCK_PrzyspieszenieY 0006  
                    ?_MOCK_PrzyspieszenieZ 0006                   CAN_MoveBuffIntoFrame@Buf 0008  
     __end_of_FRAME_SensorExcitationStatus 0CC0      __size_of_FRAME_SensorExcitationStatus 011A  
                 CAN_MoveBuffIntoFrame@Ram 0006               _FRAME_SensorExcitationStatus 0BA6  
           __size_of_CAN_MoveBuffIntoFrame 002A                                __pbssBIGRAM 00C6  
            __end_of_CAN_MoveBuffIntoFrame 158E                            _Fulfillment_Lvl 0056  
                              __pbssCOMRAM 002B                                   ?_INI_All 0001  
                  _FRAME_AdressOfNeighbors 0060                              _IsInNeighbors 102C  
                        ?_TMR1_Timer_reset 0001                                _BRGCON1bits 000F70  
                              _BRGCON2bits 000F71                                _BRGCON3bits 000F72  
                                 ?_ISR_low 0001    __end_of_FRAME_DataUpdateAndChangeOption 1290  
 __size_of_FRAME_DataUpdateAndChangeOption 005A          ??_FRAME_DataUpdateAndChangeOption 0008  
         ?_FRAME_DataUpdateAndChangeOption 0006            _FRAME_DataUpdateAndChangeOption 1236  
                              ??_LED_Clear 000B                              ??_MOC_NOTWORK 0008  
                       ??_TMR1_Timer_reset 0001                                ??_LED_Error 000B  
                              ??_LED_Right 0008               __size_of_TRM_DataTransmition 004A  
                      __end_of_LED_Control 0A6A                ?_FRAME_ExcitationMultiplier 0006  
                              ??_INI_Timer 0006                      __end_of_INI_LED_Start 1536  
                         ___lwdiv@dividend 0006                                  __pintcode 0008  
                                 ?___awdiv 0006                    ??_FRAME_SoftwareVersion 0008  
         __end_of_MOC_Aktualna_Temperatura 1696                                   ?___lwdiv 0006  
                        FRAME_Plot@message 000D                                __pintcodelo 0018  
              __end_of_INI_GlobalInterrupt 1682                            ??_CAN_TakeFrame 0010  
            ?_FRAME_SensorExcitationStatus 000B     __end_of_MOC_Wynikowa_wartosc_roznicowa 168C  
  __size_of_MOC_Wynikowa_wartosc_roznicowa 000A             _MOC_Wynikowa_wartosc_roznicowa 1682  
                              _COMSTATbits 000F74                             ?_IsInNeighbors 0006  
                          ??_CAN_SendFrame 000D                           ___lwdiv@quotient 000A  
                  ?i1_TMR1_Update_flag_Set 0001                FRAME_AveragingTimes@message 0006  
                   ??_TMR1_Update_flag_Get 0008                     ??_TMR1_Update_flag_Set 0008  
                          ??_CAN_SetupMask 0006                                   _LED_Left 141E  
                   ??_FRAME_HandleCanFrame 0013                       CAN_TakeFrame@message 000E  
                      __end_of_MOC_NOTWORK 16EE                                   _LOCK_Get 16FC  
                     CAN_TakeFrame@tempCON 0012                                   _LOCK_Set 16EE  
                                 _RXB0EIDH 000F63                                   _RXB0EIDL 000F64  
                                 _RCONbits 000FD0                           __CFG_WDTPS$32768 000000  
                                 _RXB0SIDH 000F61                                   _RXB0SIDL 000F62  
                                 _RXF0EIDH 000F02                                   _RXF0EIDL 000F03  
                                 _RXF1EIDH 000F06                                   _RXF1EIDL 000F07  
                                 _RXF2EIDH 000F0A                                   _RXF2EIDL 000F0B  
                                 _RXF3EIDH 000F0E                                   _RXF3EIDL 000F0F  
                                 _RXF0SIDH 000F00                                   _RXF0SIDL 000F01  
                                 _RXF1SIDH 000F04                                   _RXF1SIDL 000F05  
                                 _RXF2SIDH 000F08                                   _RXF2SIDL 000F09  
                                 _RXF3SIDH 000F0C                                   _RXF3SIDL 000F0D  
                                 _ISR_high 0008                                   _RXM0EIDH 000F1A  
                                 _RXM0EIDL 000F1B                                   _RXM1EIDH 000F1E  
                                 _RXM1EIDL 000F1F                     ??_MOCK_PrzyspieszenieX 0008  
                   ??_MOCK_PrzyspieszenieY 0008                     ??_MOCK_PrzyspieszenieZ 0008  
                                 _RXM0SIDH 000F18                                   _RXM0SIDL 000F19  
                                 _RXM1SIDH 000F1C                                   _RXM1SIDL 000F1D  
                 __end_of_FRAME_AxisStatus 14CC                  ??_FRAME_AdressOfNeighbors 000A  
                         _DetectorLedRadar 0034                                _LED_Control 0918  
                         __size_of_INI_All 001A               FRAME_ExcitationValue@message 0006  
           __end_ofi1_TMR1_Update_flag_Set 16DC                                  copy_data0 11F0  
                         __size_of_ISR_low 0044         __size_of_FRAME_AccelerometerStatus 0076  
             __end_of_FRAME_AveragingTimes 1502                 ?_FRAME_AccelerometerStatus 0008  
           __size_of_FRAME_ExcitationValue 0036              __end_of_FRAME_ExcitationValue 1496  
                                 __Hrparam 0000                               _RXB0SIDLbits 000F62  
                                 __Lrparam 0000                           __size_of___awdiv 0084  
                         __size_of___lwdiv 0052                            ??_IsInNeighbors 0008  
                 _MOC_Aktualna_Temperatura 168C            FRAME_PrzypisanieDokarty@message 0006  
                       LED_Light_Pos@flage 0016                         LED_Light_Pos@color 0011  
         __end_of_FRAME_PrzypisanieDokarty 0E0E                               _RXF0SIDLbits 000F01  
                 FRAME_AnalogValue@message 0006                            ___lwdiv@divisor 0008  
                             _RXF1SIDLbits 000F05                            ___lwdiv@counter 000C  
                                 __ptext10 16FC                                   __ptext11 15DA  
                                 __ptext20 1236                                   __ptext12 15F8  
                                 __ptext21 1496                                   __ptext13 102C  
                                 __ptext30 07AA                                   __ptext22 14CC  
                                 __ptext14 0D70                                   __ptext31 0E0E  
                                 __ptext23 1702                                   __ptext15 1290  
                                 __ptext40 1388                                   __ptext32 0328  
                                 __ptext24 0060                                   __ptext16 1700  
                                 __ptext41 141E                                   __ptext33 0F2E  
                                 __ptext25 10A4                                   __ptext17 1460  
                                 __ptext50 158E                                   __ptext42 1634  
                                 __ptext34 1564                                   __ptext26 1696  
                                 __ptext18 133A                                   __ptext43 164E  
                                 __ptext35 16BE                                   __ptext27 16A0  
                                 __ptext19 0A6A                                   __ptext52 16D2  
                                 __ptext44 1616                                   __ptext36 16C8  
                                 __ptext28 16AA             ??_FRAME_SensorExcitationStatus 000D  
                                 __ptext53 15B6                                   __ptext45 1502  
                                 __ptext37 0FB2                                   __ptext29 16B4  
                                 __ptext46 0918                                   __ptext38 0CC0  
                                 __ptext47 1674                                   __ptext39 12E8  
                                 __ptext48 1180                                   __ptext49 0EA2  
            TRM_DataTransmition@canMessage 001A                               _RXF2SIDLbits 000F09  
                              _MOC_NOTWORK 16E6                  FRAME_HandleCanFrame@ident 0017  
                 FRAME_DeviceReset@message 0009          __end_of_FRAME_AccelerometerStatus 111A  
                               _FRAME_Plot 1290                              __size_of_main 002E  
                  __size_of_CAN_SetupClock 0028                                   int$flags 0059  
                      _TRM_DataTransmition 13D4                                _RXB0DLCbits 000F65  
                               _LED_Update 0FB2                                _RXB0CONbits 000F60  
                               _INTCONbits 000FF2                                 _INI_OUTPUT 1616  
                        _FRAME_AnalogValue 1702                       ?_TRM_DataTransmition 0001  
             FRAME_SoftwareVersion@message 0006                                   intlevel1 0000  
                                 intlevel2 0000                         ?_FRAME_AnalogValue 0006  
      FRAME_SensorExcitationStatus@message 000B                                _TXB0CONbits 000F40  
                      ??_FRAME_AnalogValue 000A                  __size_of_TMR1_Timer_reset 0024  
                 LED_Light_Pos@fulfillment 000F                       _FRAME_AveragingTimes 14CC  
           __size_of_FRAME_SoftwareVersion 0066                          _FRAME_DeviceReset 0A6A  
            __end_of_FRAME_SoftwareVersion 1180                         ?_FRAME_DeviceReset 0009  
                          LED_Update@Green 0058                  __end_of_FRAME_AnalogValue 1704  
                   __size_of_LED_Light_Pos 00B0                      _CAN_MoveBuffIntoFrame 1564  
                               _WDTCONbits 000FD1                        ??_FRAME_DeviceReset 000B  
                    ??_TRM_DataTransmition 001A                   _FRAME_PrzypisanieDokarty 0D70  
                   LED_Light_Pos@LED_array 0012                             LED_Update@pos1 0054  
                           LED_Update@pos2 0052                                ?_FRAME_Plot 000D  
