

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Jul 31 08:52:32 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4680
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1
    67                           	psect	text54,global,reloc=2,class=CODE,delta=1
    68                           	psect	text55,global,reloc=2,class=CODE,delta=1
    69                           	psect	text56,global,reloc=2,class=CODE,delta=1
    70                           	psect	text57,global,reloc=2,class=CODE,delta=1
    71                           	psect	text58,global,reloc=2,class=CODE,delta=1
    72                           	psect	text59,global,reloc=2,class=CODE,delta=1
    73                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    74                           	psect	text61,global,reloc=2,class=CODE,delta=1
    75                           	psect	text62,global,reloc=2,class=CODE,delta=1
    76                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    77                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    78                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    79                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    80                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    81  0000                     
    82                           ; Version 2.05
    83                           ; Generated 20/12/2018 GMT
    84                           ; 
    85                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    86                           ; All rights reserved.
    87                           ; 
    88                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    89                           ; 
    90                           ; Redistribution and use in source and binary forms, with or without modification, are
    91                           ; permitted provided that the following conditions are met:
    92                           ; 
    93                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    94                           ;        conditions and the following disclaimer.
    95                           ; 
    96                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    97                           ;        of conditions and the following disclaimer in the documentation and/or other
    98                           ;        materials provided with the distribution.
    99                           ; 
   100                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   101                           ;        software without specific prior written permission.
   102                           ; 
   103                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   104                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   105                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   106                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   107                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   108                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   109                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   110                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   111                           ; 
   112                           ; 
   113                           ; Code-generator required, PIC18F4680 Definitions
   114                           ; 
   115                           ; SFR Addresses
   116  0000                     
   117                           	psect	idataCOMRAM
   118  001B4E                     __pidataCOMRAM:
   119                           	opt callstack 0
   120                           
   121                           ;initializer for MOC_Frame_Counter@zeta
   122  001B4E  0011               	dw	17
   123                           
   124                           ;initializer for LED_Update@pos2
   125  001B50  0001               	dw	1
   126                           
   127                           ;initializer for LED_Update@pos1
   128  001B52  0001               	dw	1
   129                           
   130                           ;initializer for _Fulfillment_Lvl
   131  001B54  0014               	dw	20
   132                           
   133                           ;initializer for LED_Update@Green
   134  001B56  01                 	db	1
   135                           
   136                           ;initializer for _Init_Data
   137  001B57  FFFF               	dw	65535
   138                           
   139                           ;initializer for _NeightAdress2
   140  001B59  012A               	dw	298
   141  0000                     _RXF9EIDL	set	3443
   142  0000                     _RXF9EIDH	set	3442
   143  0000                     _RXF9SIDLbits	set	3441
   144  0000                     _RXF9SIDL	set	3441
   145  0000                     _RXF9SIDH	set	3440
   146  0000                     _RXF8EIDL	set	3435
   147  0000                     _RXF8EIDH	set	3434
   148  0000                     _RXF8SIDLbits	set	3433
   149  0000                     _RXF8SIDL	set	3433
   150  0000                     _RXF8SIDH	set	3432
   151  0000                     _RXF7EIDL	set	3431
   152  0000                     _RXF7EIDH	set	3430
   153  0000                     _RXF7SIDLbits	set	3429
   154  0000                     _RXF7SIDL	set	3429
   155  0000                     _RXF7SIDH	set	3428
   156  0000                     _RXF6EIDL	set	3427
   157  0000                     _RXF6EIDH	set	3426
   158  0000                     _RXF6SIDLbits	set	3425
   159  0000                     _RXF6SIDL	set	3425
   160  0000                     _RXF6SIDH	set	3424
   161  0000                     _RXFCON1	set	3541
   162  0000                     _RXFCON0	set	3540
   163  0000                     _RXFBCON4	set	3556
   164  0000                     _RXFBCON3	set	3555
   165  0000                     _RXFBCON2	set	3554
   166  0000                     _RXFBCON1	set	3553
   167  0000                     _RXFBCON0	set	3552
   168  0000                     _MSEL3	set	3571
   169  0000                     _MSEL2	set	3570
   170  0000                     _MSEL1	set	3569
   171  0000                     _MSEL0	set	3568
   172  0000                     _BIE0	set	3578
   173  0000                     _BSEL0	set	3576
   174  0000                     _B5CON	set	3696
   175  0000                     _B4CON	set	3680
   176  0000                     _B3CON	set	3664
   177  0000                     _B2CON	set	3648
   178  0000                     _B1CON	set	3632
   179  0000                     _B0CON	set	3616
   180  0000                     _TXB0CONbits	set	3904
   181  0000                     _RXF5EIDL	set	3863
   182  0000                     _RXF5EIDH	set	3862
   183  0000                     _RXF5SIDLbits	set	3861
   184  0000                     _RXF5SIDL	set	3861
   185  0000                     _RXF5SIDH	set	3860
   186  0000                     _RXF4EIDL	set	3859
   187  0000                     _RXF4EIDH	set	3858
   188  0000                     _RXF4SIDLbits	set	3857
   189  0000                     _RXF4SIDL	set	3857
   190  0000                     _RXF4SIDH	set	3856
   191  0000                     _RXF3EIDL	set	3855
   192  0000                     _RXF3EIDH	set	3854
   193  0000                     _RXF3SIDLbits	set	3853
   194  0000                     _RXF3SIDL	set	3853
   195  0000                     _RXF3SIDH	set	3852
   196  0000                     _RXF2EIDL	set	3851
   197  0000                     _RXF2EIDH	set	3850
   198  0000                     _RXF2SIDLbits	set	3849
   199  0000                     _RXF2SIDL	set	3849
   200  0000                     _RXF2SIDH	set	3848
   201  0000                     _RXF1EIDL	set	3847
   202  0000                     _RXF1EIDH	set	3846
   203  0000                     _RXF1SIDLbits	set	3845
   204  0000                     _RXF1SIDL	set	3845
   205  0000                     _RXF1SIDH	set	3844
   206  0000                     _RXF0EIDL	set	3843
   207  0000                     _RXF0EIDH	set	3842
   208  0000                     _RXF0SIDLbits	set	3841
   209  0000                     _RXF0SIDL	set	3841
   210  0000                     _RXF0SIDH	set	3840
   211  0000                     _RXM1EIDL	set	3871
   212  0000                     _RXM1EIDH	set	3870
   213  0000                     _RXM1SIDL	set	3869
   214  0000                     _RXM1SIDH	set	3868
   215  0000                     _RXM0EIDL	set	3867
   216  0000                     _RXM0EIDH	set	3866
   217  0000                     _RXM0SIDL	set	3865
   218  0000                     _RXM0SIDH	set	3864
   219  0000                     _RXB1CON	set	3920
   220  0000                     _TXB0CON	set	3904
   221  0000                     _TBLPTR	set	4086
   222  0000                     _TABLAT	set	4085
   223  0000                     _EECON2	set	4007
   224  0000                     _EEDATA	set	4008
   225  0000                     _EECON1bits	set	4006
   226  0000                     _EEADR	set	4009
   227  0000                     _EEADRH	set	4010
   228  0000                     _INTCONbits	set	4082
   229  0000                     _WDTCONbits	set	4049
   230  0000                     _RCONbits	set	4048
   231  0000                     _TRISC	set	3988
   232  0000                     _LATC	set	3979
   233  0000                     _T1CON	set	4045
   234  0000                     _TMR1H	set	4047
   235  0000                     _TMR1L	set	4046
   236  0000                     _LATE	set	3981
   237  0000                     _LATA	set	3977
   238  0000                     _LATB	set	3978
   239  0000                     _LATD	set	3980
   240  0000                     _TRISD	set	3989
   241  0000                     _TRISE	set	3990
   242  0000                     _TRISB	set	3987
   243  0000                     _TRISA	set	3986
   244  0000                     _RXB0DLCbits	set	3941
   245  0000                     _RXB0DLC	set	3941
   246  0000                     _RXB0SIDH	set	3937
   247  0000                     _RXB0SIDLbits	set	3938
   248  0000                     _RXB0SIDL	set	3938
   249  0000                     _RXB0EIDH	set	3939
   250  0000                     _RXB0EIDL	set	3940
   251  0000                     _COMSTATbits	set	3956
   252  0000                     _RXB0CONbits	set	3936
   253  0000                     _BRGCON3bits	set	3954
   254  0000                     _BRGCON2bits	set	3953
   255  0000                     _BRGCON1bits	set	3952
   256  0000                     _CIOCON	set	3955
   257  0000                     _ECANCON	set	3959
   258  0000                     _PIR3	set	4004
   259  0000                     _IPR3	set	4005
   260  0000                     _PIE3	set	4003
   261  0000                     _RXB0CON	set	3936
   262  0000                     _CANSTAT	set	3950
   263  0000                     _CANCON	set	3951
   264  0000                     _RCON	set	4048
   265  0000                     _RXB0D0	set	3942
   266  0000                     _TMR1IF	set	31984
   267  0000                     _TMR1IP	set	31992
   268  0000                     _PEIE	set	32662
   269  0000                     _IPEN	set	32391
   270  0000                     _TMR1ON	set	32360
   271  0000                     _TMR1IE	set	31976
   272  0000                     _IRCF0	set	32412
   273  0000                     _IRCF1	set	32413
   274  0000                     _IRCF2	set	32414
   275                           
   276                           ; #config settings
   277  0000                     
   278                           	psect	cinit
   279  0015B2                     __pcinit:
   280                           	opt callstack 0
   281  0015B2                     start_initialization:
   282                           	opt callstack 0
   283  0015B2                     __initialization:
   284                           	opt callstack 0
   285                           
   286                           ; Initialize objects allocated to COMRAM (13 bytes)
   287                           ; load TBLPTR registers with __pidataCOMRAM
   288  0015B2  0E4E               	movlw	low __pidataCOMRAM
   289  0015B4  6EF6               	movwf	tblptrl,c
   290  0015B6  0E1B               	movlw	high __pidataCOMRAM
   291  0015B8  6EF7               	movwf	tblptrh,c
   292  0015BA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   293  0015BC  6EF8               	movwf	tblptru,c
   294  0015BE  EE00  F03F         	lfsr	0,__pdataCOMRAM
   295  0015C2  EE10 F00D          	lfsr	1,13
   296  0015C6                     copy_data0:
   297  0015C6  0009               	tblrd		*+
   298  0015C8  CFF5 FFEE          	movff	tablat,postinc0
   299  0015CC  50E5               	movf	postdec1,w,c
   300  0015CE  50E1               	movf	fsr1l,w,c
   301  0015D0  E1FA               	bnz	copy_data0
   302                           
   303                           ; Clear objects allocated to BIGRAM (544 bytes)
   304  0015D2  EE00  F0E3         	lfsr	0,__pbssBIGRAM
   305  0015D6  EE12 F020          	lfsr	1,544
   306  0015DA                     clear_0:
   307  0015DA  6AEE               	clrf	postinc0,c
   308  0015DC  50E5               	movf	postdec1,w,c
   309  0015DE  50E1               	movf	fsr1l,w,c
   310  0015E0  E1FC               	bnz	clear_0
   311  0015E2  50E2               	movf	fsr1h,w,c
   312  0015E4  E1FA               	bnz	clear_0
   313                           
   314                           ; Clear objects allocated to BANK0 (114 bytes)
   315  0015E6  EE00  F060         	lfsr	0,__pbssBANK0
   316  0015EA  0E72               	movlw	114
   317  0015EC                     clear_1:
   318  0015EC  6AEE               	clrf	postinc0,c
   319  0015EE  06E8               	decf	wreg,f,c
   320  0015F0  E1FD               	bnz	clear_1
   321                           
   322                           ; Clear objects allocated to COMRAM (34 bytes)
   323  0015F2  EE00  F001         	lfsr	0,__pbssCOMRAM
   324  0015F6  0E22               	movlw	34
   325  0015F8                     clear_2:
   326  0015F8  6AEE               	clrf	postinc0,c
   327  0015FA  06E8               	decf	wreg,f,c
   328  0015FC  E1FD               	bnz	clear_2
   329  0015FE                     end_of_initialization:
   330                           	opt callstack 0
   331  0015FE                     __end_of__initialization:
   332                           	opt callstack 0
   333  0015FE  904C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   334  001600  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   335  001602  0E00               	movlw	low (__Lmediumconst shr (0+16))
   336  001604  6EF8               	movwf	tblptru,c
   337  001606  0100               	movlb	0
   338  001608  EFC8  F009         	goto	_main	;jump to C main() function
   339                           
   340                           	psect	bssCOMRAM
   341  000001                     __pbssCOMRAM:
   342                           	opt callstack 0
   343  000001                     _DaneCan:
   344                           	opt callstack 0
   345  000001                     	ds	4
   346  000005                     _nextEEPosition:
   347                           	opt callstack 0
   348  000005                     	ds	2
   349  000007                     FRAME_SensorExcitationStatus@statwect:
   350                           	opt callstack 0
   351  000007                     	ds	2
   352  000009                     _TMR1_Update_flag:
   353                           	opt callstack 0
   354  000009                     	ds	2
   355  00000B                     WritetoEEPROM@GIE_Status:
   356                           	opt callstack 0
   357  00000B                     	ds	1
   358  00000C                     	ds	1
   359  00000D                     	ds	1
   360  00000E                     ISR_low@ramkaStanuU8:
   361                           	opt callstack 0
   362  00000E                     	ds	1
   363  00000F                     	ds	1
   364  000010                     _LOCK:
   365                           	opt callstack 0
   366  000010                     	ds	1
   367  000011                     _neighborsAdress:
   368                           	opt callstack 0
   369  000011                     	ds	2
   370  000013                     _ustawieniaKarty:
   371                           	opt callstack 0
   372  000013                     	ds	2
   373  000015                     _NeightAdress8:
   374                           	opt callstack 0
   375  000015                     	ds	2
   376  000017                     _NeightAdress7:
   377                           	opt callstack 0
   378  000017                     	ds	2
   379  000019                     _NeightAdress6:
   380                           	opt callstack 0
   381  000019                     	ds	2
   382  00001B                     _NeightAdress5:
   383                           	opt callstack 0
   384  00001B                     	ds	2
   385  00001D                     _NeightAdress4:
   386                           	opt callstack 0
   387  00001D                     	ds	2
   388  00001F                     _NeightAdress3:
   389                           	opt callstack 0
   390  00001F                     	ds	2
   391  000021                     _NeightAdress1:
   392                           	opt callstack 0
   393  000021                     	ds	2
   394                           
   395                           	psect	dataCOMRAM
   396  00003F                     __pdataCOMRAM:
   397                           	opt callstack 0
   398  00003F                     MOC_Frame_Counter@zeta:
   399                           	opt callstack 0
   400  00003F                     	ds	2
   401  000041                     LED_Update@pos2:
   402                           	opt callstack 0
   403  000041                     	ds	2
   404  000043                     LED_Update@pos1:
   405                           	opt callstack 0
   406  000043                     	ds	2
   407  000045                     _Fulfillment_Lvl:
   408                           	opt callstack 0
   409  000045                     	ds	2
   410  000047                     LED_Update@Green:
   411                           	opt callstack 0
   412  000047                     	ds	1
   413  000048                     _Init_Data:
   414                           	opt callstack 0
   415  000048                     	ds	2
   416  00004A                     _NeightAdress2:
   417                           	opt callstack 0
   418  00004A                     	ds	2
   419                           
   420                           	psect	bssBANK0
   421  000060                     __pbssBANK0:
   422                           	opt callstack 0
   423  000060                     _ramkaCanRxKarty:
   424                           	opt callstack 0
   425  000060                     	ds	85
   426  0000B5                     _ramkaCanTxKarty:
   427                           	opt callstack 0
   428  0000B5                     	ds	17
   429  0000C6                     _Flagi:
   430                           	opt callstack 0
   431  0000C6                     	ds	5
   432  0000CB                     _DetectorLedRadar:
   433                           	opt callstack 0
   434  0000CB                     	ds	3
   435  0000CE                     _czujnikiNaMapie:
   436                           	opt callstack 0
   437  0000CE                     	ds	2
   438  0000D0                     _Dane:
   439                           	opt callstack 0
   440  0000D0                     	ds	2
   441                           
   442                           	psect	bssBIGRAM
   443  0000E3                     __pbssBIGRAM:
   444                           	opt callstack 0
   445  0000E3                     _wartosciSasiada:
   446                           	opt callstack 0
   447  0000E3                     	ds	544
   448                           
   449                           	psect	cstackBANK0
   450  0000D2                     __pcstackBANK0:
   451                           	opt callstack 0
   452  0000D2                     TRM_DataTransmition@canMessage:
   453                           	opt callstack 0
   454                           
   455                           ; 17 bytes @ 0x0
   456  0000D2                     	ds	17
   457                           
   458                           	psect	cstackCOMRAM
   459  000023                     __pcstackCOMRAM:
   460                           	opt callstack 0
   461  000023                     TMR1_Timer_reset@t1L:
   462                           	opt callstack 0
   463  000023                     i1TMR1_Update_flag_Set@a:
   464                           	opt callstack 0
   465                           
   466                           ; 2 bytes @ 0x0
   467  000023                     	ds	1
   468  000024                     TMR1_Timer_reset@t1H:
   469                           	opt callstack 0
   470                           
   471                           ; 1 bytes @ 0x1
   472  000024                     	ds	1
   473  000025                     ??_ISR_low:
   474  000025                     
   475                           ; 1 bytes @ 0x2
   476  000025                     	ds	3
   477  000028                     ??_CAN_Setup:
   478  000028                     ?_FLASH_Read:
   479                           	opt callstack 0
   480  000028                     ?_TMR1_Update_flag_Get:
   481                           	opt callstack 0
   482  000028                     ?_LED_Right:
   483                           	opt callstack 0
   484  000028                     ?_LED_Left:
   485                           	opt callstack 0
   486  000028                     ?_MOC_Wynikowa_wartosc_roznicowa:
   487                           	opt callstack 0
   488  000028                     ?_MOC_Frame_Counter:
   489                           	opt callstack 0
   490  000028                     ?_MOC_Aktualna_Temperatura:
   491                           	opt callstack 0
   492  000028                     ?_MOC_NOTWORK:
   493                           	opt callstack 0
   494  000028                     ?_IsInNeighbors:
   495                           	opt callstack 0
   496  000028                     ?_MOCK_PrzyspieszenieX:
   497                           	opt callstack 0
   498  000028                     ?_MOCK_PrzyspieszenieY:
   499                           	opt callstack 0
   500  000028                     ?_MOCK_PrzyspieszenieZ:
   501                           	opt callstack 0
   502  000028                     ?_MOCK_Klikniecie_Spadek:
   503                           	opt callstack 0
   504  000028                     ?___awdiv:
   505                           	opt callstack 0
   506  000028                     ?___lwdiv:
   507                           	opt callstack 0
   508  000028                     LOCK_Set@k:
   509                           	opt callstack 0
   510  000028                     CAN_MoveBuffIntoFrame@Ram:
   511                           	opt callstack 0
   512  000028                     CAN_GenID@message:
   513                           	opt callstack 0
   514  000028                     LED_Right@a:
   515                           	opt callstack 0
   516  000028                     LED_Left@a:
   517                           	opt callstack 0
   518  000028                     LED_Control@diode:
   519                           	opt callstack 0
   520  000028                     TMR1_Update_flag_Set@a:
   521                           	opt callstack 0
   522  000028                     IsInNeighbors@message_adress:
   523                           	opt callstack 0
   524  000028                     FRAME_ExcitationValue@message:
   525                           	opt callstack 0
   526  000028                     FRAME_ExcitationMultiplier@message:
   527                           	opt callstack 0
   528  000028                     FRAME_AveragingTimes@message:
   529                           	opt callstack 0
   530  000028                     FRAME_AxisStatus@message:
   531                           	opt callstack 0
   532  000028                     FRAME_DataUpdateAndChangeOption@message:
   533                           	opt callstack 0
   534  000028                     FRAME_MapPosition@message:
   535                           	opt callstack 0
   536  000028                     FRAME_SoftwareVersion@message:
   537                           	opt callstack 0
   538  000028                     FRAME_AnalogValue@message:
   539                           	opt callstack 0
   540  000028                     FRAME_PrzypisanieDokarty@message:
   541                           	opt callstack 0
   542  000028                     FRAME_AdressOfNeighbors@message:
   543                           	opt callstack 0
   544  000028                     NVMalloc@size:
   545                           	opt callstack 0
   546  000028                     ReadfromEEPROM@Address:
   547                           	opt callstack 0
   548  000028                     WritetoEEPROM@Address:
   549                           	opt callstack 0
   550  000028                     ___awdiv@dividend:
   551                           	opt callstack 0
   552  000028                     ___lwdiv@dividend:
   553                           	opt callstack 0
   554  000028                     FLASH_Read@addr:
   555                           	opt callstack 0
   556                           
   557                           ; 4 bytes @ 0x5
   558  000028                     	ds	2
   559  00002A                     ??_LED_Right:
   560  00002A                     ??_FRAME_DataUpdateAndChangeOption:
   561  00002A                     ??_FRAME_PrzypisanieDokarty:
   562  00002A                     CAN_GenID@frameID:
   563                           	opt callstack 0
   564  00002A                     WritetoEEPROM@Data:
   565                           	opt callstack 0
   566  00002A                     CAN_MoveBuffIntoFrame@Buf:
   567                           	opt callstack 0
   568  00002A                     LED_Left@b:
   569                           	opt callstack 0
   570  00002A                     FRAME_SensorExcitationStatus@message:
   571                           	opt callstack 0
   572  00002A                     FRAME_AccelerometerStatus@message:
   573                           	opt callstack 0
   574  00002A                     FRAME_AnalogValue@set:
   575                           	opt callstack 0
   576  00002A                     FRAME_AdressOfNeighbors@nrRamki:
   577                           	opt callstack 0
   578  00002A                     NVMalloc@location:
   579                           	opt callstack 0
   580  00002A                     NVMRead@dest:
   581                           	opt callstack 0
   582  00002A                     ___awdiv@divisor:
   583                           	opt callstack 0
   584  00002A                     ___lwdiv@divisor:
   585                           	opt callstack 0
   586                           
   587                           ; 2 bytes @ 0x7
   588  00002A                     	ds	1
   589  00002B                     ??_CAN_GenID:
   590  00002B                     FRAME_ExcitationMultiplier@i:
   591                           	opt callstack 0
   592  00002B                     NVMWrite@source:
   593                           	opt callstack 0
   594                           
   595                           ; 2 bytes @ 0x8
   596  00002B                     	ds	1
   597  00002C                     ??_FRAME_SensorExcitationStatus:
   598  00002C                     ??_FRAME_AdressOfNeighbors:
   599  00002C                     ??_NVMalloc:
   600  00002C                     CAN_MoveBuffIntoFrame@i:
   601                           	opt callstack 0
   602  00002C                     LED_Control@color:
   603                           	opt callstack 0
   604  00002C                     ___awdiv@counter:
   605                           	opt callstack 0
   606  00002C                     ___lwdiv@counter:
   607                           	opt callstack 0
   608  00002C                     LED_Right@b:
   609                           	opt callstack 0
   610  00002C                     NVMRead@addr:
   611                           	opt callstack 0
   612                           
   613                           ; 2 bytes @ 0x9
   614  00002C                     	ds	1
   615  00002D                     ___awdiv@sign:
   616                           	opt callstack 0
   617  00002D                     CAN_SendFrame@message:
   618                           	opt callstack 0
   619  00002D                     NVMWrite@addr:
   620                           	opt callstack 0
   621  00002D                     ___lwdiv@quotient:
   622                           	opt callstack 0
   623                           
   624                           ; 2 bytes @ 0xA
   625  00002D                     	ds	1
   626  00002E                     FRAME_SensorExcitationStatus@tru:
   627                           	opt callstack 0
   628  00002E                     NVMRead@count:
   629                           	opt callstack 0
   630  00002E                     ___awdiv@quotient:
   631                           	opt callstack 0
   632                           
   633                           ; 2 bytes @ 0xB
   634  00002E                     	ds	1
   635  00002F                     ??_CAN_SendFrame:
   636  00002F                     LED_Light_Pos@pos:
   637                           	opt callstack 0
   638  00002F                     FRAME_Plot@message:
   639                           	opt callstack 0
   640  00002F                     NVMWrite@count:
   641                           	opt callstack 0
   642                           
   643                           ; 2 bytes @ 0xC
   644  00002F                     	ds	1
   645  000030                     NVMInit@result:
   646                           	opt callstack 0
   647  000030                     CAN_TakeFrame@message:
   648                           	opt callstack 0
   649  000030                     FRAME_AdressOfNeighbors@kier:
   650                           	opt callstack 0
   651                           
   652                           ; 2 bytes @ 0xD
   653  000030                     	ds	1
   654  000031                     ??_FRAME_Plot:
   655  000031                     LED_Light_Pos@fulfillment:
   656                           	opt callstack 0
   657  000031                     FRAME_DeviceReset@message:
   658                           	opt callstack 0
   659                           
   660                           ; 2 bytes @ 0xE
   661  000031                     	ds	1
   662  000032                     ??_CAN_TakeFrame:
   663                           
   664                           ; 1 bytes @ 0xF
   665  000032                     	ds	1
   666  000033                     LED_Light_Pos@color:
   667                           	opt callstack 0
   668                           
   669                           ; 1 bytes @ 0x10
   670  000033                     	ds	1
   671  000034                     CAN_TakeFrame@tempCON:
   672                           	opt callstack 0
   673  000034                     LED_Light_Pos@LED_array:
   674                           	opt callstack 0
   675  000034                     FRAME_HandleCanFrame@message:
   676                           	opt callstack 0
   677                           
   678                           ; 2 bytes @ 0x11
   679  000034                     	ds	1
   680  000035                     CAN_TakeFrame@k:
   681                           	opt callstack 0
   682                           
   683                           ; 1 bytes @ 0x12
   684  000035                     	ds	1
   685  000036                     ??_FRAME_HandleCanFrame:
   686  000036                     LED_Light_Pos@pos2:
   687                           	opt callstack 0
   688                           
   689                           ; 2 bytes @ 0x13
   690  000036                     	ds	2
   691  000038                     LED_Light_Pos@flage:
   692                           	opt callstack 0
   693                           
   694                           ; 2 bytes @ 0x15
   695  000038                     	ds	2
   696  00003A                     FRAME_HandleCanFrame@ident:
   697                           	opt callstack 0
   698                           
   699                           ; 2 bytes @ 0x17
   700  00003A                     	ds	2
   701  00003C                     FRAME_HandleCanFrame@identyfikator:
   702                           	opt callstack 0
   703                           
   704                           ; 1 bytes @ 0x19
   705  00003C                     	ds	1
   706  00003D                     main@adr:
   707                           	opt callstack 0
   708                           
   709                           ; 2 bytes @ 0x1A
   710  00003D                     	ds	2
   711                           
   712 ;;
   713 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   714 ;;
   715 ;; *************** function _main *****************
   716 ;; Defined at:
   717 ;;		line 100 in file "main.c"
   718 ;; Parameters:    Size  Location     Type
   719 ;;		None
   720 ;; Auto vars:     Size  Location     Type
   721 ;;  adr             2   26[COMRAM] int 
   722 ;; Return value:  Size  Location     Type
   723 ;;                  1    wreg      void 
   724 ;; Registers used:
   725 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   726 ;; Tracked objects:
   727 ;;		On entry : 0/0
   728 ;;		On exit  : 0/0
   729 ;;		Unchanged: 0/0
   730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   732 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   734 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   735 ;;Total ram usage:        2 bytes
   736 ;; Hardware stack levels required when called:    9
   737 ;; This function calls:
   738 ;;		_FLASH_Read
   739 ;;		_INI_All
   740 ;;		_LED_Update
   741 ;;		_TMR1_Update_flag_Get
   742 ;;		_TMR1_Update_flag_Set
   743 ;;		_TRM_DataTransmition
   744 ;; This function is called by:
   745 ;;		Startup code after reset
   746 ;; This function uses a non-reentrant model
   747 ;;
   748                           
   749                           	psect	text0
   750  001390                     __ptext0:
   751                           	opt callstack 0
   752  001390                     _main:
   753                           	opt callstack 22
   754                           
   755                           ;main.c: 103:     int adr = FLASH_Read(0x200000);
   756                           
   757                           ;incstack = 0
   758  001390  0E00               	movlw	0
   759  001392  6E28               	movwf	FLASH_Read@addr,c
   760  001394  0E00               	movlw	0
   761  001396  6E29               	movwf	FLASH_Read@addr+1,c
   762  001398  0E20               	movlw	32
   763  00139A  6E2A               	movwf	FLASH_Read@addr+2,c
   764  00139C  0E00               	movlw	0
   765  00139E  6E2B               	movwf	FLASH_Read@addr+3,c
   766  0013A0  EC85  F00D         	call	_FLASH_Read	;wreg free
   767  0013A4  C028  F03D         	movff	?_FLASH_Read,main@adr
   768  0013A8  C029  F03E         	movff	?_FLASH_Read+1,main@adr+1
   769                           
   770                           ;main.c: 104:      adr |= FLASH_Read(0x200001)<<8;
   771  0013AC  0E01               	movlw	1
   772  0013AE  6E28               	movwf	FLASH_Read@addr,c
   773  0013B0  0E00               	movlw	0
   774  0013B2  6E29               	movwf	FLASH_Read@addr+1,c
   775  0013B4  0E20               	movlw	32
   776  0013B6  6E2A               	movwf	FLASH_Read@addr+2,c
   777  0013B8  0E00               	movlw	0
   778  0013BA  6E2B               	movwf	FLASH_Read@addr+3,c
   779  0013BC  EC85  F00D         	call	_FLASH_Read	;wreg free
   780  0013C0  C028  F029         	movff	?_FLASH_Read,?_FLASH_Read+1
   781  0013C4  6A28               	clrf	?_FLASH_Read,c
   782  0013C6  5028               	movf	?_FLASH_Read,w,c
   783  0013C8  123D               	iorwf	main@adr,f,c
   784  0013CA  5029               	movf	?_FLASH_Read+1,w,c
   785  0013CC  123E               	iorwf	main@adr+1,f,c
   786                           
   787                           ;main.c: 114:     DaneCan.adresCAN = adr;
   788  0013CE  C03D  F003         	movff	main@adr,_DaneCan+2
   789  0013D2  C03E  F004         	movff	main@adr+1,_DaneCan+3
   790                           
   791                           ;main.c: 115:     INI_All();
   792  0013D6  EC49  F00D         	call	_INI_All	;wreg free
   793                           
   794                           ;main.c: 117:     RCON = 0xFF;
   795  0013DA  68D0               	setf	4048,c	;volatile
   796  0013DC                     l4813:
   797                           
   798                           ;main.c: 120:     {;main.c: 121:         if(DetectorLedRadar.Flags.obsluzWeWy == 1)
   799  0013DC  0100               	movlb	0	; () banked
   800  0013DE  B1CB               	btfsc	_DetectorLedRadar& (0+255),0,b
   801                           
   802                           ; BSR set to: 0
   803                           ;main.c: 122:         {;main.c: 123:             DetectorLedRadar.Flags.obsluzWeWy = 0;
   804  0013E0  91CB               	bcf	_DetectorLedRadar& (0+255),0,b
   805                           
   806                           ; BSR set to: 0
   807                           ;main.c: 127:         if(TMR1_Update_flag_Get()==1)
   808  0013E2  ECD1  F00D         	call	_TMR1_Update_flag_Get	;wreg free
   809  0013E6  0428               	decf	?_TMR1_Update_flag_Get,w,c
   810  0013E8  1029               	iorwf	?_TMR1_Update_flag_Get+1,w,c
   811  0013EA  A4D8               	btfss	status,2,c
   812  0013EC  D008               	goto	l4823
   813                           
   814                           ;main.c: 128:         {;main.c: 129:             LED_Update();
   815  0013EE  EC4F  F009         	call	_LED_Update	;wreg free
   816                           
   817                           ;main.c: 130:             TMR1_Update_flag_Set(0);
   818  0013F2  0E00               	movlw	0
   819  0013F4  6E29               	movwf	TMR1_Update_flag_Set@a+1,c
   820  0013F6  0E00               	movlw	0
   821  0013F8  6E28               	movwf	TMR1_Update_flag_Set@a,c
   822  0013FA  ECCC  F00D         	call	_TMR1_Update_flag_Set	;wreg free
   823  0013FE                     l4823:
   824                           
   825                           ;main.c: 135:         TRM_DataTransmition();
   826  0013FE  ECAF  F00B         	call	_TRM_DataTransmition	;wreg free
   827  001402  0004               	clrwdt		;# 
   828                           
   829                           ;main.c: 137:     }
   830  001404  D7EB               	goto	l4813
   831  001406                     __end_of_main:
   832                           	opt callstack 0
   833                           
   834 ;; *************** function _TRM_DataTransmition *****************
   835 ;; Defined at:
   836 ;;		line 19 in file "TRM.c"
   837 ;; Parameters:    Size  Location     Type
   838 ;;		None
   839 ;; Auto vars:     Size  Location     Type
   840 ;;  canMessage     17    0[BANK0 ] struct .
   841 ;;  i               1    0        unsigned char 
   842 ;; Return value:  Size  Location     Type
   843 ;;                  1    wreg      void 
   844 ;; Registers used:
   845 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   846 ;; Tracked objects:
   847 ;;		On entry : 0/0
   848 ;;		On exit  : 0/0
   849 ;;		Unchanged: 0/0
   850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   852 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
   853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   854 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
   855 ;;Total ram usage:       17 bytes
   856 ;; Hardware stack levels used:    1
   857 ;; Hardware stack levels required when called:    8
   858 ;; This function calls:
   859 ;;		_CAN_TakeFrame
   860 ;;		_FRAME_HandleCanFrame
   861 ;; This function is called by:
   862 ;;		_main
   863 ;; This function uses a non-reentrant model
   864 ;;
   865                           
   866                           	psect	text1
   867  00175E                     __ptext1:
   868                           	opt callstack 0
   869  00175E                     _TRM_DataTransmition:
   870                           	opt callstack 22
   871                           
   872                           ;TRM.c: 21:     static BYTE weWyU8 = 0, czujnikWeWyU8 = 0;;TRM.c: 22:     BYTE i;;TRM.c:
      +                           23:     mID canMessage;;TRM.c: 26:     if(DaneCan.Flags.wyslijRamkeStanu)
   873                           
   874                           ;incstack = 0
   875  00175E  A001               	btfss	_DaneCan,0,c
   876  001760  D014               	goto	l4793
   877                           
   878                           ;TRM.c: 27:     {;TRM.c: 29:         canMessage.message_type = 0x02;
   879  001762  0E02               	movlw	2
   880  001764  0100               	movlb	0	; () banked
   881  001766  6FD3               	movwf	(TRM_DataTransmition@canMessage+1)& (0+255),b
   882                           
   883                           ;TRM.c: 30:         canMessage.id.Val = 0;
   884  001768  0E00               	movlw	0
   885  00176A  6FD6               	movwf	(TRM_DataTransmition@canMessage+4)& (0+255),b
   886  00176C  0E00               	movlw	0
   887  00176E  6FD7               	movwf	(TRM_DataTransmition@canMessage+5)& (0+255),b
   888  001770  0E00               	movlw	0
   889  001772  6FD8               	movwf	(TRM_DataTransmition@canMessage+6)& (0+255),b
   890  001774  0E00               	movlw	0
   891  001776  6FD9               	movwf	(TRM_DataTransmition@canMessage+7)& (0+255),b
   892                           
   893                           ;TRM.c: 31:         canMessage.id.v[2] = 0x01 *4;
   894  001778  0E04               	movlw	4
   895  00177A  6FD8               	movwf	(TRM_DataTransmition@canMessage+6)& (0+255),b
   896                           
   897                           ; BSR set to: 0
   898                           ;TRM.c: 32:         FRAME_HandleCanFrame(&canMessage);
   899  00177C  0ED2               	movlw	low TRM_DataTransmition@canMessage
   900  00177E  6E34               	movwf	FRAME_HandleCanFrame@message,c
   901  001780  0E00               	movlw	high TRM_DataTransmition@canMessage
   902  001782  6E35               	movwf	FRAME_HandleCanFrame@message+1,c
   903  001784  ECD5  F002         	call	_FRAME_HandleCanFrame	;wreg free
   904                           
   905                           ;TRM.c: 49:         DaneCan.Flags.wyslijRamkeStanu = 0;
   906  001788  9001               	bcf	_DaneCan,0,c
   907  00178A                     l4793:
   908                           
   909                           ;TRM.c: 59:     if(CAN_TakeFrame(&canMessage))
   910  00178A  0ED2               	movlw	low TRM_DataTransmition@canMessage
   911  00178C  6E30               	movwf	CAN_TakeFrame@message,c
   912  00178E  0E00               	movlw	high TRM_DataTransmition@canMessage
   913  001790  6E31               	movwf	CAN_TakeFrame@message+1,c
   914  001792  EC97  F001         	call	_CAN_TakeFrame	;wreg free
   915  001796  0900               	iorlw	0
   916  001798  B4D8               	btfsc	status,2,c
   917  00179A  0012               	return	
   918                           
   919                           ;TRM.c: 64:         {;TRM.c: 66:             FRAME_HandleCanFrame(&canMessage);
   920  00179C  0ED2               	movlw	low TRM_DataTransmition@canMessage
   921  00179E  6E34               	movwf	FRAME_HandleCanFrame@message,c
   922  0017A0  0E00               	movlw	high TRM_DataTransmition@canMessage
   923  0017A2  6E35               	movwf	FRAME_HandleCanFrame@message+1,c
   924  0017A4  ECD5  F002         	call	_FRAME_HandleCanFrame	;wreg free
   925                           
   926                           ;TRM.c: 67:         }
   927  0017A8  0012               	return		;funcret
   928  0017AA                     __end_of_TRM_DataTransmition:
   929                           	opt callstack 0
   930                           
   931 ;; *************** function _FRAME_HandleCanFrame *****************
   932 ;; Defined at:
   933 ;;		line 807 in file "FRAME.c"
   934 ;; Parameters:    Size  Location     Type
   935 ;;  message         2   17[COMRAM] PTR struct .
   936 ;;		 -> TRM_DataTransmition@canMessage(17), 
   937 ;; Auto vars:     Size  Location     Type
   938 ;;  ident           2   23[COMRAM] unsigned short 
   939 ;;  alfa            2    0        int 
   940 ;;  identyfikato    1   25[COMRAM] unsigned char 
   941 ;; Return value:  Size  Location     Type
   942 ;;                  1    wreg      void 
   943 ;; Registers used:
   944 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   945 ;; Tracked objects:
   946 ;;		On entry : 0/0
   947 ;;		On exit  : 0/0
   948 ;;		Unchanged: 0/0
   949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   950 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   951 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   952 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   953 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   954 ;;Total ram usage:        9 bytes
   955 ;; Hardware stack levels used:    1
   956 ;; Hardware stack levels required when called:    7
   957 ;; This function calls:
   958 ;;		_CAN_GenID
   959 ;;		_CAN_SendFrame
   960 ;;		_FRAME_AccelerometerStatus
   961 ;;		_FRAME_AdressOfNeighbors
   962 ;;		_FRAME_AnalogValue
   963 ;;		_FRAME_AveragingTimes
   964 ;;		_FRAME_AxisStatus
   965 ;;		_FRAME_DeviceReset
   966 ;;		_FRAME_ExcitationMultiplier
   967 ;;		_FRAME_ExcitationValue
   968 ;;		_FRAME_MapPosition
   969 ;;		_FRAME_Plot
   970 ;;		_FRAME_PrzypisanieDokarty
   971 ;;		_FRAME_SensorExcitationStatus
   972 ;;		_FRAME_SoftwareVersion
   973 ;;		_LED_Error
   974 ;;		___awdiv
   975 ;; This function is called by:
   976 ;;		_TRM_DataTransmition
   977 ;; This function uses a non-reentrant model
   978 ;;
   979                           
   980                           	psect	text2
   981  0005AA                     __ptext2:
   982                           	opt callstack 0
   983  0005AA                     _FRAME_HandleCanFrame:
   984                           	opt callstack 22
   985                           
   986                           ;FRAME.c: 807: void FRAME_HandleCanFrame(mID * message);FRAME.c: 808: {;FRAME.c: 809:   
      +                            BYTE identyfikator = (BYTE) message->id.v[2]/4;
   987                           
   988                           ;incstack = 0
   989  0005AA  EE20 F006          	lfsr	2,6
   990  0005AE  5034               	movf	FRAME_HandleCanFrame@message,w,c
   991  0005B0  26D9               	addwf	fsr2l,f,c
   992  0005B2  5035               	movf	FRAME_HandleCanFrame@message+1,w,c
   993  0005B4  22DA               	addwfc	fsr2h,f,c
   994  0005B6  50DF               	movf	indf2,w,c
   995  0005B8  6E36               	movwf	??_FRAME_HandleCanFrame& (0+255),c
   996  0005BA  5036               	movf	??_FRAME_HandleCanFrame,w,c
   997  0005BC  6E28               	movwf	___awdiv@dividend,c
   998  0005BE  6A29               	clrf	___awdiv@dividend+1,c
   999  0005C0  0E00               	movlw	0
  1000  0005C2  6E2B               	movwf	___awdiv@divisor+1,c
  1001  0005C4  0E04               	movlw	4
  1002  0005C6  6E2A               	movwf	___awdiv@divisor,c
  1003  0005C8  EC0D  F009         	call	___awdiv	;wreg free
  1004  0005CC  5028               	movf	?___awdiv,w,c
  1005  0005CE  6E3C               	movwf	FRAME_HandleCanFrame@identyfikator,c
  1006                           
  1007                           ;FRAME.c: 812:     if(identyfikator != 0x01)
  1008  0005D0  043C               	decf	FRAME_HandleCanFrame@identyfikator,w,c
  1009  0005D2  B4D8               	btfsc	status,2,c
  1010  0005D4  D074               	goto	l4743
  1011                           
  1012                           ;FRAME.c: 813:     {;FRAME.c: 814:         WORD ident = identyfikator;
  1013  0005D6  C03C  F03A         	movff	FRAME_HandleCanFrame@identyfikator,FRAME_HandleCanFrame@ident
  1014  0005DA  6A3B               	clrf	FRAME_HandleCanFrame@ident+1,c
  1015  0005DC  D070               	goto	l4743
  1016  0005DE                     l4713:
  1017                           
  1018                           ;FRAME.c: 821:             FRAME_SensorExcitationStatus(message);
  1019  0005DE  C034  F02A         	movff	FRAME_HandleCanFrame@message,FRAME_SensorExcitationStatus@message
  1020  0005E2  C035  F02B         	movff	FRAME_HandleCanFrame@message+1,FRAME_SensorExcitationStatus@message+1
  1021  0005E6  ECA5  F006         	call	_FRAME_SensorExcitationStatus	;wreg free
  1022                           
  1023                           ;FRAME.c: 822:             break;
  1024  0005EA  D09E               	goto	l4745
  1025  0005EC                     l4715:
  1026                           
  1027                           ;FRAME.c: 824:             FRAME_AccelerometerStatus(message);
  1028  0005EC  C034  F02A         	movff	FRAME_HandleCanFrame@message,FRAME_AccelerometerStatus@message
  1029  0005F0  C035  F02B         	movff	FRAME_HandleCanFrame@message+1,FRAME_AccelerometerStatus@message+1
  1030  0005F4  EC03  F00A         	call	_FRAME_AccelerometerStatus	;wreg free
  1031                           
  1032                           ;FRAME.c: 825:             break;
  1033  0005F8  D097               	goto	l4745
  1034  0005FA                     l4717:
  1035                           
  1036                           ;FRAME.c: 827:             FRAME_ExcitationValue(message);
  1037  0005FA  C034  F028         	movff	FRAME_HandleCanFrame@message,FRAME_ExcitationValue@message
  1038  0005FE  C035  F029         	movff	FRAME_HandleCanFrame@message+1,FRAME_ExcitationValue@message+1
  1039  000602  EC39  F00C         	call	_FRAME_ExcitationValue	;wreg free
  1040                           
  1041                           ;FRAME.c: 828:             break;
  1042  000606  D090               	goto	l4745
  1043  000608                     l4719:
  1044                           
  1045                           ;FRAME.c: 830:             FRAME_ExcitationMultiplier(message);
  1046  000608  C034  F028         	movff	FRAME_HandleCanFrame@message,FRAME_ExcitationMultiplier@message
  1047  00060C  C035  F029         	movff	FRAME_HandleCanFrame@message+1,FRAME_ExcitationMultiplier@message+1
  1048  000610  EC88  F00B         	call	_FRAME_ExcitationMultiplier	;wreg free
  1049                           
  1050                           ;FRAME.c: 831:             break;
  1051  000614  D089               	goto	l4745
  1052  000616                     l4721:
  1053                           
  1054                           ;FRAME.c: 833:             FRAME_AveragingTimes(message);
  1055  000616  C034  F028         	movff	FRAME_HandleCanFrame@message,FRAME_AveragingTimes@message
  1056  00061A  C035  F029         	movff	FRAME_HandleCanFrame@message+1,FRAME_AveragingTimes@message+1
  1057  00061E  EC8A  F00C         	call	_FRAME_AveragingTimes	;wreg free
  1058                           
  1059                           ;FRAME.c: 834:             break;
  1060  000622  D082               	goto	l4745
  1061  000624                     l4723:
  1062                           
  1063                           ;FRAME.c: 836:             FRAME_AxisStatus(message);
  1064  000624  C034  F028         	movff	FRAME_HandleCanFrame@message,FRAME_AxisStatus@message
  1065  000628  C035  F029         	movff	FRAME_HandleCanFrame@message+1,FRAME_AxisStatus@message+1
  1066  00062C  EC6F  F00C         	call	_FRAME_AxisStatus	;wreg free
  1067                           
  1068                           ;FRAME.c: 837:             break;
  1069  000630  D07B               	goto	l4745
  1070  000632                     l4725:
  1071                           
  1072                           ;FRAME.c: 839:             FRAME_DeviceReset(message);
  1073  000632  C034  F031         	movff	FRAME_HandleCanFrame@message,FRAME_DeviceReset@message
  1074  000636  C035  F032         	movff	FRAME_HandleCanFrame@message+1,FRAME_DeviceReset@message+1
  1075  00063A  EC01  F006         	call	_FRAME_DeviceReset	;wreg free
  1076                           
  1077                           ;FRAME.c: 840:             break;
  1078  00063E  D074               	goto	l4745
  1079  000640                     l4727:
  1080                           
  1081                           ;FRAME.c: 842:             FRAME_Plot(message);
  1082  000640  C034  F02F         	movff	FRAME_HandleCanFrame@message,FRAME_Plot@message
  1083  000644  C035  F030         	movff	FRAME_HandleCanFrame@message+1,FRAME_Plot@message+1
  1084  000648  EC33  F00B         	call	_FRAME_Plot	;wreg free
  1085                           
  1086                           ;FRAME.c: 843:             break;
  1087  00064C  D06D               	goto	l4745
  1088  00064E                     l4729:
  1089                           
  1090                           ;FRAME.c: 845:             FRAME_MapPosition(message);
  1091  00064E  C034  F028         	movff	FRAME_HandleCanFrame@message,FRAME_MapPosition@message
  1092  000652  C035  F029         	movff	FRAME_HandleCanFrame@message+1,FRAME_MapPosition@message+1
  1093  000656  ECE8  F00D         	call	_FRAME_MapPosition	;wreg free
  1094                           
  1095                           ;FRAME.c: 846:             break;
  1096  00065A  D066               	goto	l4745
  1097  00065C                     l4731:
  1098                           
  1099                           ;FRAME.c: 848:             FRAME_SoftwareVersion(message);
  1100  00065C  C034  F028         	movff	FRAME_HandleCanFrame@message,FRAME_SoftwareVersion@message
  1101  000660  C035  F029         	movff	FRAME_HandleCanFrame@message+1,FRAME_SoftwareVersion@message+1
  1102  000664  EC78  F00A         	call	_FRAME_SoftwareVersion	;wreg free
  1103                           
  1104                           ;FRAME.c: 849:             break;
  1105  000668  D05F               	goto	l4745
  1106  00066A                     l4733:
  1107                           
  1108                           ;FRAME.c: 852:             FRAME_AnalogValue(message, identyfikator - 0x0C);
  1109  00066A  C034  F028         	movff	FRAME_HandleCanFrame@message,FRAME_AnalogValue@message
  1110  00066E  C035  F029         	movff	FRAME_HandleCanFrame@message+1,FRAME_AnalogValue@message+1
  1111  000672  0EF4               	movlw	244
  1112  000674  243C               	addwf	FRAME_HandleCanFrame@identyfikator,w,c
  1113  000676  6E2A               	movwf	FRAME_AnalogValue@set,c
  1114  000678  6A2B               	clrf	FRAME_AnalogValue@set+1,c
  1115  00067A  0EFF               	movlw	255
  1116  00067C  222B               	addwfc	FRAME_AnalogValue@set+1,f,c
  1117  00067E  ECE9  F00D         	call	_FRAME_AnalogValue	;wreg free
  1118                           
  1119                           ;FRAME.c: 853:             break;
  1120  000682  D052               	goto	l4745
  1121  000684                     l4735:
  1122                           
  1123                           ;FRAME.c: 855:             FRAME_PrzypisanieDokarty(message);
  1124  000684  C034  F028         	movff	FRAME_HandleCanFrame@message,FRAME_PrzypisanieDokarty@message
  1125  000688  C035  F029         	movff	FRAME_HandleCanFrame@message+1,FRAME_PrzypisanieDokarty@message+1
  1126  00068C  EC73  F008         	call	_FRAME_PrzypisanieDokarty	;wreg free
  1127                           
  1128                           ;FRAME.c: 856:             break;
  1129  000690  D04B               	goto	l4745
  1130  000692                     l4737:
  1131                           
  1132                           ;FRAME.c: 858:             FRAME_AdressOfNeighbors(message,0x10);
  1133  000692  C034  F028         	movff	FRAME_HandleCanFrame@message,FRAME_AdressOfNeighbors@message
  1134  000696  C035  F029         	movff	FRAME_HandleCanFrame@message+1,FRAME_AdressOfNeighbors@message+1
  1135  00069A  0E00               	movlw	0
  1136  00069C  6E2B               	movwf	FRAME_AdressOfNeighbors@nrRamki+1,c
  1137  00069E  0E10               	movlw	16
  1138  0006A0  6E2A               	movwf	FRAME_AdressOfNeighbors@nrRamki,c
  1139  0006A2  EC31  F000         	call	_FRAME_AdressOfNeighbors	;wreg free
  1140                           
  1141                           ;FRAME.c: 859:             break;
  1142  0006A6  D040               	goto	l4745
  1143  0006A8                     l4739:
  1144                           
  1145                           ;FRAME.c: 861:             FRAME_AdressOfNeighbors(message,0x11);
  1146  0006A8  C034  F028         	movff	FRAME_HandleCanFrame@message,FRAME_AdressOfNeighbors@message
  1147  0006AC  C035  F029         	movff	FRAME_HandleCanFrame@message+1,FRAME_AdressOfNeighbors@message+1
  1148  0006B0  0E00               	movlw	0
  1149  0006B2  6E2B               	movwf	FRAME_AdressOfNeighbors@nrRamki+1,c
  1150  0006B4  0E11               	movlw	17
  1151  0006B6  6E2A               	movwf	FRAME_AdressOfNeighbors@nrRamki,c
  1152  0006B8  EC31  F000         	call	_FRAME_AdressOfNeighbors	;wreg free
  1153                           
  1154                           ;FRAME.c: 862:             break;
  1155  0006BC  D035               	goto	l4745
  1156  0006BE                     l4743:
  1157  0006BE  503C               	movf	FRAME_HandleCanFrame@identyfikator,w,c
  1158  0006C0  6E36               	movwf	??_FRAME_HandleCanFrame& (0+255),c
  1159  0006C2  6A37               	clrf	(??_FRAME_HandleCanFrame+1)& (0+255),c
  1160                           
  1161                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1162                           ; Switch size 1, requested type "simple"
  1163                           ; Number of cases is 1, Range of values is 0 to 0
  1164                           ; switch strategies available:
  1165                           ; Name         Instructions Cycles
  1166                           ; simple_byte            4     3 (average)
  1167                           ;	Chosen strategy is simple_byte
  1168  0006C4  5037               	movf	??_FRAME_HandleCanFrame+1,w,c
  1169  0006C6  0A00               	xorlw	0	; case 0
  1170  0006C8  A4D8               	btfss	status,2,c
  1171  0006CA  D02E               	goto	l4745
  1172                           
  1173                           ; Switch size 1, requested type "simple"
  1174                           ; Number of cases is 15, Range of values is 1 to 17
  1175                           ; switch strategies available:
  1176                           ; Name         Instructions Cycles
  1177                           ; simple_byte           46    24 (average)
  1178                           ;	Chosen strategy is simple_byte
  1179  0006CC  5036               	movf	??_FRAME_HandleCanFrame,w,c
  1180  0006CE  0A01               	xorlw	1	; case 1
  1181  0006D0  B4D8               	btfsc	status,2,c
  1182  0006D2  D785               	goto	l4713
  1183  0006D4  0A03               	xorlw	3	; case 2
  1184  0006D6  B4D8               	btfsc	status,2,c
  1185  0006D8  D789               	goto	l4715
  1186  0006DA  0A01               	xorlw	1	; case 3
  1187  0006DC  B4D8               	btfsc	status,2,c
  1188  0006DE  D78D               	goto	l4717
  1189  0006E0  0A07               	xorlw	7	; case 4
  1190  0006E2  B4D8               	btfsc	status,2,c
  1191  0006E4  D791               	goto	l4719
  1192  0006E6  0A01               	xorlw	1	; case 5
  1193  0006E8  B4D8               	btfsc	status,2,c
  1194  0006EA  D795               	goto	l4721
  1195  0006EC  0A03               	xorlw	3	; case 6
  1196  0006EE  B4D8               	btfsc	status,2,c
  1197  0006F0  D799               	goto	l4723
  1198  0006F2  0A01               	xorlw	1	; case 7
  1199  0006F4  B4D8               	btfsc	status,2,c
  1200  0006F6  D79D               	goto	l4725
  1201  0006F8  0A0E               	xorlw	14	; case 9
  1202  0006FA  B4D8               	btfsc	status,2,c
  1203  0006FC  D7A1               	goto	l4727
  1204  0006FE  0A03               	xorlw	3	; case 10
  1205  000700  B4D8               	btfsc	status,2,c
  1206  000702  D7A5               	goto	l4729
  1207  000704  0A01               	xorlw	1	; case 11
  1208  000706  B4D8               	btfsc	status,2,c
  1209  000708  D7A9               	goto	l4731
  1210  00070A  0A07               	xorlw	7	; case 12
  1211  00070C  B4D8               	btfsc	status,2,c
  1212  00070E  D7AD               	goto	l4733
  1213  000710  0A01               	xorlw	1	; case 13
  1214  000712  B4D8               	btfsc	status,2,c
  1215  000714  D7AA               	goto	l4733
  1216  000716  0A02               	xorlw	2	; case 15
  1217  000718  B4D8               	btfsc	status,2,c
  1218  00071A  D7B4               	goto	l4735
  1219  00071C  0A1F               	xorlw	31	; case 16
  1220  00071E  B4D8               	btfsc	status,2,c
  1221  000720  D7B8               	goto	l4737
  1222  000722  0A01               	xorlw	1	; case 17
  1223  000724  B4D8               	btfsc	status,2,c
  1224  000726  D7C0               	goto	l4739
  1225  000728                     l4745:
  1226                           
  1227                           ;FRAME.c: 871:     if(message->message_type == 0x02)
  1228  000728  EE20 F001          	lfsr	2,1
  1229  00072C  5034               	movf	FRAME_HandleCanFrame@message,w,c
  1230  00072E  26D9               	addwf	fsr2l,f,c
  1231  000730  5035               	movf	FRAME_HandleCanFrame@message+1,w,c
  1232  000732  22DA               	addwfc	fsr2h,f,c
  1233  000734  0E02               	movlw	2
  1234  000736  18DE               	xorwf	postinc2,w,c
  1235  000738  A4D8               	btfss	status,2,c
  1236  00073A  0012               	return	
  1237                           
  1238                           ;FRAME.c: 872:     {;FRAME.c: 874:         message->frame_type = 0x03;
  1239  00073C  EE20 F002          	lfsr	2,2
  1240  000740  5034               	movf	FRAME_HandleCanFrame@message,w,c
  1241  000742  26D9               	addwf	fsr2l,f,c
  1242  000744  5035               	movf	FRAME_HandleCanFrame@message+1,w,c
  1243  000746  22DA               	addwfc	fsr2h,f,c
  1244  000748  0E03               	movlw	3
  1245  00074A  6EDF               	movwf	indf2,c
  1246                           
  1247                           ;FRAME.c: 875:         message->message_type = 0x01;
  1248  00074C  EE20 F001          	lfsr	2,1
  1249  000750  5034               	movf	FRAME_HandleCanFrame@message,w,c
  1250  000752  26D9               	addwf	fsr2l,f,c
  1251  000754  5035               	movf	FRAME_HandleCanFrame@message+1,w,c
  1252  000756  22DA               	addwfc	fsr2h,f,c
  1253  000758  0E01               	movlw	1
  1254  00075A  6EDF               	movwf	indf2,c
  1255                           
  1256                           ;FRAME.c: 876:         message->id.Val = 0;
  1257  00075C  EE20 F004          	lfsr	2,4
  1258  000760  5034               	movf	FRAME_HandleCanFrame@message,w,c
  1259  000762  26D9               	addwf	fsr2l,f,c
  1260  000764  5035               	movf	FRAME_HandleCanFrame@message+1,w,c
  1261  000766  22DA               	addwfc	fsr2h,f,c
  1262  000768  6ADE               	clrf	postinc2,c
  1263  00076A  6ADE               	clrf	postinc2,c
  1264  00076C  6ADE               	clrf	postinc2,c
  1265  00076E  6ADD               	clrf	postdec2,c
  1266                           
  1267                           ;FRAME.c: 878:         message->id.v[2] = identyfikator*4;
  1268  000770  503C               	movf	FRAME_HandleCanFrame@identyfikator,w,c
  1269  000772  0D04               	mullw	4
  1270  000774  EE20 F006          	lfsr	2,6
  1271  000778  5034               	movf	FRAME_HandleCanFrame@message,w,c
  1272  00077A  26D9               	addwf	fsr2l,f,c
  1273  00077C  5035               	movf	FRAME_HandleCanFrame@message+1,w,c
  1274  00077E  22DA               	addwfc	fsr2h,f,c
  1275  000780  CFF3 FFDF          	movff	prodl,indf2
  1276                           
  1277                           ;FRAME.c: 879:         CAN_GenID(message,identyfikator);
  1278  000784  C034  F028         	movff	FRAME_HandleCanFrame@message,CAN_GenID@message
  1279  000788  C035  F029         	movff	FRAME_HandleCanFrame@message+1,CAN_GenID@message+1
  1280  00078C  C03C  F02A         	movff	FRAME_HandleCanFrame@identyfikator,CAN_GenID@frameID
  1281  000790  EC8C  F009         	call	_CAN_GenID	;wreg free
  1282                           
  1283                           ;FRAME.c: 880:         CAN_SendFrame(message);
  1284  000794  C034  F02D         	movff	FRAME_HandleCanFrame@message,CAN_SendFrame@message
  1285  000798  C035  F02E         	movff	FRAME_HandleCanFrame@message+1,CAN_SendFrame@message+1
  1286  00079C  EC9F  F004         	call	_CAN_SendFrame	;wreg free
  1287                           
  1288                           ;FRAME.c: 891:        while(RXB0CONbits.FILHIT3)
  1289  0007A0  D004               	goto	l710
  1290  0007A2                     l711:
  1291                           
  1292                           ;FRAME.c: 892:        {;FRAME.c: 893:            if(TXB0CONbits.TXERR == 1){
  1293  0007A2  010F               	movlb	15	; () banked
  1294  0007A4  B940               	btfsc	64,4,b	;volatile
  1295                           
  1296                           ; BSR set to: 15
  1297                           ;FRAME.c: 894:                LED_Error();
  1298  0007A6  EC6A  F00D         	call	_LED_Error	;wreg free
  1299  0007AA                     l710:
  1300                           
  1301                           ;FRAME.c: 891:        while(RXB0CONbits.FILHIT3)
  1302  0007AA  A660               	btfss	3936,3,c	;volatile
  1303  0007AC  0012               	return	
  1304  0007AE  D7F9               	goto	l711
  1305  0007B0                     __end_of_FRAME_HandleCanFrame:
  1306                           	opt callstack 0
  1307                           
  1308 ;; *************** function _LED_Error *****************
  1309 ;; Defined at:
  1310 ;;		line 49 in file "LED.c"
  1311 ;; Parameters:    Size  Location     Type
  1312 ;;		None
  1313 ;; Auto vars:     Size  Location     Type
  1314 ;;		None
  1315 ;; Return value:  Size  Location     Type
  1316 ;;                  2  364[None  ] unsigned int 
  1317 ;; Registers used:
  1318 ;;		wreg, status,2, status,0, cstack
  1319 ;; Tracked objects:
  1320 ;;		On entry : 0/0
  1321 ;;		On exit  : 0/0
  1322 ;;		Unchanged: 0/0
  1323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1328 ;;Total ram usage:        0 bytes
  1329 ;; Hardware stack levels used:    1
  1330 ;; Hardware stack levels required when called:    4
  1331 ;; This function calls:
  1332 ;;		_LED_Control
  1333 ;; This function is called by:
  1334 ;;		_FRAME_HandleCanFrame
  1335 ;; This function uses a non-reentrant model
  1336 ;;
  1337                           
  1338                           	psect	text3
  1339  001AD4                     __ptext3:
  1340                           	opt callstack 0
  1341  001AD4                     _LED_Error:
  1342                           	opt callstack 24
  1343                           
  1344                           ;LED.c: 51:     LED_Control(RED,0b1010101010);
  1345                           
  1346                           ;incstack = 0
  1347  001AD4  0E02               	movlw	2
  1348  001AD6  6E29               	movwf	LED_Control@diode+1,c
  1349  001AD8  0EAA               	movlw	170
  1350  001ADA  6E28               	movwf	LED_Control@diode,c
  1351  001ADC  0E00               	movlw	0
  1352  001ADE  EC58  F005         	call	_LED_Control
  1353                           
  1354                           ;LED.c: 52:     LED_Control(GREEN,0b0000000000);
  1355  001AE2  0E00               	movlw	0
  1356  001AE4  6E29               	movwf	LED_Control@diode+1,c
  1357  001AE6  0E00               	movlw	0
  1358  001AE8  6E28               	movwf	LED_Control@diode,c
  1359  001AEA  0E01               	movlw	1
  1360  001AEC  EC58  F005         	call	_LED_Control
  1361  001AF0  0012               	return		;funcret
  1362  001AF2                     __end_of_LED_Error:
  1363                           	opt callstack 0
  1364                           
  1365 ;; *************** function _FRAME_SoftwareVersion *****************
  1366 ;; Defined at:
  1367 ;;		line 620 in file "FRAME.c"
  1368 ;; Parameters:    Size  Location     Type
  1369 ;;  message         2    5[COMRAM] PTR struct .
  1370 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1371 ;; Auto vars:     Size  Location     Type
  1372 ;;		None
  1373 ;; Return value:  Size  Location     Type
  1374 ;;                  1    wreg      void 
  1375 ;; Registers used:
  1376 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1377 ;; Tracked objects:
  1378 ;;		On entry : 0/0
  1379 ;;		On exit  : 0/0
  1380 ;;		Unchanged: 0/0
  1381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1382 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1384 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1385 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1386 ;;Total ram usage:        3 bytes
  1387 ;; Hardware stack levels used:    1
  1388 ;; Hardware stack levels required when called:    3
  1389 ;; This function calls:
  1390 ;;		Nothing
  1391 ;; This function is called by:
  1392 ;;		_FRAME_HandleCanFrame
  1393 ;; This function uses a non-reentrant model
  1394 ;;
  1395                           
  1396                           	psect	text4
  1397  0014F0                     __ptext4:
  1398                           	opt callstack 0
  1399  0014F0                     _FRAME_SoftwareVersion:
  1400                           	opt callstack 25
  1401                           
  1402                           ;FRAME.c: 620: static void FRAME_SoftwareVersion(mID *message);FRAME.c: 621: {;FRAME.c: 
      +                          623:     if(message->message_type == 0x02)
  1403                           
  1404                           ;incstack = 0
  1405  0014F0  EE20 F001          	lfsr	2,1
  1406  0014F4  5028               	movf	FRAME_SoftwareVersion@message,w,c
  1407  0014F6  26D9               	addwf	fsr2l,f,c
  1408  0014F8  5029               	movf	FRAME_SoftwareVersion@message+1,w,c
  1409  0014FA  22DA               	addwfc	fsr2h,f,c
  1410  0014FC  0E02               	movlw	2
  1411  0014FE  18DE               	xorwf	postinc2,w,c
  1412  001500  A4D8               	btfss	status,2,c
  1413  001502  0012               	return	
  1414                           
  1415                           ;FRAME.c: 624:     {;FRAME.c: 625:         message->data_length = 4;
  1416  001504  EE20 F010          	lfsr	2,16
  1417  001508  5028               	movf	FRAME_SoftwareVersion@message,w,c
  1418  00150A  26D9               	addwf	fsr2l,f,c
  1419  00150C  5029               	movf	FRAME_SoftwareVersion@message+1,w,c
  1420  00150E  22DA               	addwfc	fsr2h,f,c
  1421  001510  0E04               	movlw	4
  1422  001512  6EDF               	movwf	indf2,c
  1423                           
  1424                           ;FRAME.c: 626:         message->data[0] = (unsigned char)(Dane->wersjaOprogramowaniaU16 
      +                          >> 8);
  1425  001514  EE20 F008          	lfsr	2,8
  1426  001518  5028               	movf	FRAME_SoftwareVersion@message,w,c
  1427  00151A  26D9               	addwf	fsr2l,f,c
  1428  00151C  5029               	movf	FRAME_SoftwareVersion@message+1,w,c
  1429  00151E  22DA               	addwfc	fsr2h,f,c
  1430  001520  5005               	movf	5,w,c
  1431  001522  6EDF               	movwf	indf2,c
  1432                           
  1433                           ;FRAME.c: 627:         message->data[1] = (unsigned char)Dane->wersjaOprogramowaniaU16;
  1434  001524  EE20 F009          	lfsr	2,9
  1435  001528  5028               	movf	FRAME_SoftwareVersion@message,w,c
  1436  00152A  26D9               	addwf	fsr2l,f,c
  1437  00152C  5029               	movf	FRAME_SoftwareVersion@message+1,w,c
  1438  00152E  22DA               	addwfc	fsr2h,f,c
  1439  001530  C004 FFDF          	movff	4,indf2
  1440                           
  1441                           ;FRAME.c: 628:         message->data[2] = (unsigned char)(Dane->wersjaSprzetuU16 >> 8);
  1442  001534  EE20 F00A          	lfsr	2,10
  1443  001538  5028               	movf	FRAME_SoftwareVersion@message,w,c
  1444  00153A  26D9               	addwf	fsr2l,f,c
  1445  00153C  5029               	movf	FRAME_SoftwareVersion@message+1,w,c
  1446  00153E  22DA               	addwfc	fsr2h,f,c
  1447  001540  500B               	movf	11,w,c
  1448  001542  6EDF               	movwf	indf2,c
  1449                           
  1450                           ;FRAME.c: 629:         message->data[3] = (unsigned char)Dane->wersjaSprzetuU16;
  1451  001544  EE20 F00B          	lfsr	2,11
  1452  001548  5028               	movf	FRAME_SoftwareVersion@message,w,c
  1453  00154A  26D9               	addwf	fsr2l,f,c
  1454  00154C  5029               	movf	FRAME_SoftwareVersion@message+1,w,c
  1455  00154E  22DA               	addwfc	fsr2h,f,c
  1456  001550  C00A FFDF          	movff	10,indf2
  1457                           
  1458                           ;FRAME.c: 630:     }
  1459  001554  0012               	return		;funcret
  1460  001556                     __end_of_FRAME_SoftwareVersion:
  1461                           	opt callstack 0
  1462                           
  1463 ;; *************** function _FRAME_SensorExcitationStatus *****************
  1464 ;; Defined at:
  1465 ;;		line 55 in file "FRAME.c"
  1466 ;; Parameters:    Size  Location     Type
  1467 ;;  message         2    7[COMRAM] PTR struct .
  1468 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1469 ;; Auto vars:     Size  Location     Type
  1470 ;;  tru             2   11[COMRAM] unsigned int 
  1471 ;; Return value:  Size  Location     Type
  1472 ;;                  1    wreg      void 
  1473 ;; Registers used:
  1474 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1475 ;; Tracked objects:
  1476 ;;		On entry : 0/0
  1477 ;;		On exit  : 0/0
  1478 ;;		Unchanged: 0/0
  1479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1480 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1481 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1482 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1483 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1484 ;;Total ram usage:        6 bytes
  1485 ;; Hardware stack levels used:    1
  1486 ;; Hardware stack levels required when called:    4
  1487 ;; This function calls:
  1488 ;;		_IsInNeighbors
  1489 ;;		_LOCK_Get
  1490 ;;		_LOCK_Set
  1491 ;;		_MOC_Aktualna_Temperatura
  1492 ;;		_MOC_Frame_Counter
  1493 ;;		_MOC_NOTWORK
  1494 ;;		_MOC_Wynikowa_wartosc_roznicowa
  1495 ;; This function is called by:
  1496 ;;		_FRAME_HandleCanFrame
  1497 ;; This function uses a non-reentrant model
  1498 ;;
  1499                           
  1500                           	psect	text5
  1501  000D4A                     __ptext5:
  1502                           	opt callstack 0
  1503  000D4A                     _FRAME_SensorExcitationStatus:
  1504                           	opt callstack 24
  1505                           
  1506                           ;FRAME.c: 55: static void FRAME_SensorExcitationStatus(mID *message);FRAME.c: 56: {;FRAM
      +                          E.c: 58:     static UINT statwect = 0b00000000;;FRAME.c: 59:     if(message->message_typ
      +                          e == 0x02)
  1507                           
  1508                           ;incstack = 0
  1509  000D4A  EE20 F001          	lfsr	2,1
  1510  000D4E  502A               	movf	FRAME_SensorExcitationStatus@message,w,c
  1511  000D50  26D9               	addwf	fsr2l,f,c
  1512  000D52  502B               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1513  000D54  22DA               	addwfc	fsr2h,f,c
  1514  000D56  0E02               	movlw	2
  1515  000D58  18DE               	xorwf	postinc2,w,c
  1516  000D5A  A4D8               	btfss	status,2,c
  1517  000D5C  D047               	goto	l4393
  1518                           
  1519                           ;FRAME.c: 60:     {;FRAME.c: 61:         message->data_length = 6;
  1520  000D5E  EE20 F010          	lfsr	2,16
  1521  000D62  502A               	movf	FRAME_SensorExcitationStatus@message,w,c
  1522  000D64  26D9               	addwf	fsr2l,f,c
  1523  000D66  502B               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1524  000D68  22DA               	addwfc	fsr2h,f,c
  1525  000D6A  0E06               	movlw	6
  1526  000D6C  6EDF               	movwf	indf2,c
  1527                           
  1528                           ;FRAME.c: 67:         message->data[0] = LOCK_Get();
  1529  000D6E  EE20 F008          	lfsr	2,8
  1530  000D72  502A               	movf	FRAME_SensorExcitationStatus@message,w,c
  1531  000D74  26D9               	addwf	fsr2l,f,c
  1532  000D76  502B               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1533  000D78  22DA               	addwfc	fsr2h,f,c
  1534  000D7A  ECE6  F00D         	call	_LOCK_Get	;wreg free
  1535  000D7E  6EDF               	movwf	indf2,c
  1536                           
  1537                           ;FRAME.c: 68:         message->data[1] = MOC_Wynikowa_wartosc_roznicowa() >> 8 ;
  1538  000D80  EE20 F009          	lfsr	2,9
  1539  000D84  502A               	movf	FRAME_SensorExcitationStatus@message,w,c
  1540  000D86  26D9               	addwf	fsr2l,f,c
  1541  000D88  502B               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1542  000D8A  22DA               	addwfc	fsr2h,f,c
  1543  000D8C  ECAE  F00D         	call	_MOC_Wynikowa_wartosc_roznicowa	;wreg free
  1544  000D90  C029  F028         	movff	?_MOC_Wynikowa_wartosc_roznicowa+1,?_MOC_Wynikowa_wartosc_roznicowa
  1545  000D94  6A29               	clrf	?_MOC_Wynikowa_wartosc_roznicowa+1,c
  1546  000D96  5028               	movf	?_MOC_Wynikowa_wartosc_roznicowa,w,c
  1547  000D98  6EDF               	movwf	indf2,c
  1548                           
  1549                           ;FRAME.c: 69:         message->data[2] = MOC_Wynikowa_wartosc_roznicowa() & 0x00FF;
  1550  000D9A  EE20 F00A          	lfsr	2,10
  1551  000D9E  502A               	movf	FRAME_SensorExcitationStatus@message,w,c
  1552  000DA0  26D9               	addwf	fsr2l,f,c
  1553  000DA2  502B               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1554  000DA4  22DA               	addwfc	fsr2h,f,c
  1555  000DA6  ECAE  F00D         	call	_MOC_Wynikowa_wartosc_roznicowa	;wreg free
  1556  000DAA  5028               	movf	?_MOC_Wynikowa_wartosc_roznicowa,w,c
  1557  000DAC  6EDF               	movwf	indf2,c
  1558                           
  1559                           ;FRAME.c: 70:         message->data[3] = MOC_Frame_Counter();
  1560  000DAE  EE20 F00B          	lfsr	2,11
  1561  000DB2  502A               	movf	FRAME_SensorExcitationStatus@message,w,c
  1562  000DB4  26D9               	addwf	fsr2l,f,c
  1563  000DB6  502B               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1564  000DB8  22DA               	addwfc	fsr2h,f,c
  1565  000DBA  EC99  F00D         	call	_MOC_Frame_Counter	;wreg free
  1566  000DBE  5028               	movf	?_MOC_Frame_Counter,w,c
  1567  000DC0  6EDF               	movwf	indf2,c
  1568                           
  1569                           ;FRAME.c: 71:         message->data[4] = MOC_Aktualna_Temperatura();
  1570  000DC2  EE20 F00C          	lfsr	2,12
  1571  000DC6  502A               	movf	FRAME_SensorExcitationStatus@message,w,c
  1572  000DC8  26D9               	addwf	fsr2l,f,c
  1573  000DCA  502B               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1574  000DCC  22DA               	addwfc	fsr2h,f,c
  1575  000DCE  ECB3  F00D         	call	_MOC_Aktualna_Temperatura	;wreg free
  1576  000DD2  5028               	movf	?_MOC_Aktualna_Temperatura,w,c
  1577  000DD4  6EDF               	movwf	indf2,c
  1578                           
  1579                           ;FRAME.c: 72:         message->data[5] = MOC_NOTWORK();
  1580  000DD6  EE20 F00D          	lfsr	2,13
  1581  000DDA  502A               	movf	FRAME_SensorExcitationStatus@message,w,c
  1582  000DDC  26D9               	addwf	fsr2l,f,c
  1583  000DDE  502B               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1584  000DE0  22DA               	addwfc	fsr2h,f,c
  1585  000DE2  ECDB  F00D         	call	_MOC_NOTWORK	;wreg free
  1586  000DE6  5028               	movf	?_MOC_NOTWORK,w,c
  1587  000DE8  6EDF               	movwf	indf2,c
  1588                           
  1589                           ;FRAME.c: 82:     }
  1590  000DEA  0012               	return	
  1591  000DEC                     l4393:
  1592                           
  1593                           ;FRAME.c: 84:     {;FRAME.c: 86:         UINT tru = IsInNeighbors(message->id.w[0]);
  1594  000DEC  EE20 F004          	lfsr	2,4
  1595  000DF0  502A               	movf	FRAME_SensorExcitationStatus@message,w,c
  1596  000DF2  26D9               	addwf	fsr2l,f,c
  1597  000DF4  502B               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1598  000DF6  22DA               	addwfc	fsr2h,f,c
  1599  000DF8  CFDE F028          	movff	postinc2,IsInNeighbors@message_adress
  1600  000DFC  CFDD F029          	movff	postdec2,IsInNeighbors@message_adress+1
  1601  000E00  ECB6  F007         	call	_IsInNeighbors	;wreg free
  1602  000E04  C028  F02E         	movff	?_IsInNeighbors,FRAME_SensorExcitationStatus@tru
  1603  000E08  C029  F02F         	movff	?_IsInNeighbors+1,FRAME_SensorExcitationStatus@tru+1
  1604                           
  1605                           ;FRAME.c: 89:         if(message->data[0]==0)
  1606  000E0C  EE20 F008          	lfsr	2,8
  1607  000E10  502A               	movf	FRAME_SensorExcitationStatus@message,w,c
  1608  000E12  26D9               	addwf	fsr2l,f,c
  1609  000E14  502B               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1610  000E16  22DA               	addwfc	fsr2h,f,c
  1611  000E18  50DF               	movf	indf2,w,c
  1612  000E1A  A4D8               	btfss	status,2,c
  1613  000E1C  D00A               	goto	l4399
  1614                           
  1615                           ;FRAME.c: 90:         {;FRAME.c: 92:             statwect = statwect &( ~tru );
  1616  000E1E  1C2E               	comf	FRAME_SensorExcitationStatus@tru,w,c
  1617  000E20  6E2C               	movwf	??_FRAME_SensorExcitationStatus& (0+255),c
  1618  000E22  1C2F               	comf	FRAME_SensorExcitationStatus@tru+1,w,c
  1619  000E24  6E2D               	movwf	(??_FRAME_SensorExcitationStatus+1)& (0+255),c
  1620  000E26  5007               	movf	FRAME_SensorExcitationStatus@statwect,w,c
  1621  000E28  142C               	andwf	??_FRAME_SensorExcitationStatus,w,c
  1622  000E2A  6E07               	movwf	FRAME_SensorExcitationStatus@statwect,c
  1623  000E2C  5008               	movf	FRAME_SensorExcitationStatus@statwect+1,w,c
  1624  000E2E  142D               	andwf	??_FRAME_SensorExcitationStatus+1,w,c
  1625  000E30  D005               	goto	L1
  1626  000E32                     l4399:
  1627                           
  1628                           ;FRAME.c: 95:         {;FRAME.c: 96:             statwect = statwect| tru;
  1629  000E32  502E               	movf	FRAME_SensorExcitationStatus@tru,w,c
  1630  000E34  1007               	iorwf	FRAME_SensorExcitationStatus@statwect,w,c
  1631  000E36  6E07               	movwf	FRAME_SensorExcitationStatus@statwect,c
  1632  000E38  502F               	movf	FRAME_SensorExcitationStatus@tru+1,w,c
  1633  000E3A  1008               	iorwf	FRAME_SensorExcitationStatus@statwect+1,w,c
  1634  000E3C                     L1:
  1635  000E3C  6E08               	movwf	FRAME_SensorExcitationStatus@statwect+1,c
  1636                           
  1637                           ;FRAME.c: 99:         if(statwect>0)
  1638                           
  1639                           ;FRAME.c: 97:         }
  1640  000E3E  5007               	movf	FRAME_SensorExcitationStatus@statwect,w,c
  1641  000E40  1008               	iorwf	FRAME_SensorExcitationStatus@statwect+1,w,c
  1642  000E42  B4D8               	btfsc	status,2,c
  1643  000E44  D00A               	goto	l4407
  1644                           
  1645                           ;FRAME.c: 100:         {;FRAME.c: 101:             if(1 != LOCK_Get())
  1646  000E46  ECE6  F00D         	call	_LOCK_Get	;wreg free
  1647  000E4A  06E8               	decf	wreg,f,c
  1648  000E4C  B4D8               	btfsc	status,2,c
  1649  000E4E  0012               	return	
  1650                           
  1651                           ;FRAME.c: 102:             {;FRAME.c: 103:                 DaneCan.Flags.wyslijRamkeStan
      +                          u = 1;
  1652  000E50  8001               	bsf	_DaneCan,0,c
  1653                           
  1654                           ;FRAME.c: 104:                 LOCK_Set(1);
  1655  000E52  0E01               	movlw	1
  1656  000E54  ECDF  F00D         	call	_LOCK_Set
  1657  000E58  0012               	return	
  1658  000E5A                     l4407:
  1659                           
  1660                           ;FRAME.c: 109:         {;FRAME.c: 111:             if(1 == LOCK_Get())
  1661  000E5A  ECE6  F00D         	call	_LOCK_Get	;wreg free
  1662  000E5E  06E8               	decf	wreg,f,c
  1663  000E60  A4D8               	btfss	status,2,c
  1664  000E62  0012               	return	
  1665                           
  1666                           ;FRAME.c: 112:             {;FRAME.c: 113:                 DaneCan.Flags.wyslijRamkeStan
      +                          u = 1;
  1667  000E64  8001               	bsf	_DaneCan,0,c
  1668                           
  1669                           ;FRAME.c: 114:                 LOCK_Set(0);
  1670  000E66  0E00               	movlw	0
  1671  000E68  ECDF  F00D         	call	_LOCK_Set
  1672  000E6C  0012               	return		;funcret
  1673  000E6E                     __end_of_FRAME_SensorExcitationStatus:
  1674                           	opt callstack 0
  1675                           
  1676 ;; *************** function _MOC_Wynikowa_wartosc_roznicowa *****************
  1677 ;; Defined at:
  1678 ;;		line 34 in file "MOC_Funct.c"
  1679 ;; Parameters:    Size  Location     Type
  1680 ;;		None
  1681 ;; Auto vars:     Size  Location     Type
  1682 ;;		None
  1683 ;; Return value:  Size  Location     Type
  1684 ;;                  2    5[COMRAM] unsigned int 
  1685 ;; Registers used:
  1686 ;;		wreg, status,2
  1687 ;; Tracked objects:
  1688 ;;		On entry : 0/0
  1689 ;;		On exit  : 0/0
  1690 ;;		Unchanged: 0/0
  1691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1692 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1695 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1696 ;;Total ram usage:        2 bytes
  1697 ;; Hardware stack levels used:    1
  1698 ;; Hardware stack levels required when called:    3
  1699 ;; This function calls:
  1700 ;;		Nothing
  1701 ;; This function is called by:
  1702 ;;		_FRAME_SensorExcitationStatus
  1703 ;; This function uses a non-reentrant model
  1704 ;;
  1705                           
  1706                           	psect	text6
  1707  001B5C                     __ptext6:
  1708                           	opt callstack 0
  1709  001B5C                     _MOC_Wynikowa_wartosc_roznicowa:
  1710                           	opt callstack 24
  1711                           
  1712                           ;MOC_Funct.c: 36:     return 0x0220;
  1713                           
  1714                           ;incstack = 0
  1715  001B5C  0E02               	movlw	2
  1716  001B5E  6E29               	movwf	?_MOC_Wynikowa_wartosc_roznicowa+1,c
  1717  001B60  0E20               	movlw	32
  1718  001B62  6E28               	movwf	?_MOC_Wynikowa_wartosc_roznicowa,c
  1719  001B64  0012               	return		;funcret
  1720  001B66                     __end_of_MOC_Wynikowa_wartosc_roznicowa:
  1721                           	opt callstack 0
  1722                           
  1723 ;; *************** function _MOC_NOTWORK *****************
  1724 ;; Defined at:
  1725 ;;		line 48 in file "MOC_Funct.c"
  1726 ;; Parameters:    Size  Location     Type
  1727 ;;		None
  1728 ;; Auto vars:     Size  Location     Type
  1729 ;;		None
  1730 ;; Return value:  Size  Location     Type
  1731 ;;                  2    5[COMRAM] unsigned int 
  1732 ;; Registers used:
  1733 ;;		wreg, status,2
  1734 ;; Tracked objects:
  1735 ;;		On entry : 0/0
  1736 ;;		On exit  : 0/0
  1737 ;;		Unchanged: 0/0
  1738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1739 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1742 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1743 ;;Total ram usage:        2 bytes
  1744 ;; Hardware stack levels used:    1
  1745 ;; Hardware stack levels required when called:    3
  1746 ;; This function calls:
  1747 ;;		Nothing
  1748 ;; This function is called by:
  1749 ;;		_FRAME_SensorExcitationStatus
  1750 ;; This function uses a non-reentrant model
  1751 ;;
  1752                           
  1753                           	psect	text7
  1754  001BB6                     __ptext7:
  1755                           	opt callstack 0
  1756  001BB6                     _MOC_NOTWORK:
  1757                           	opt callstack 24
  1758                           
  1759                           ;MOC_Funct.c: 50:     return 0xFF;
  1760                           
  1761                           ;incstack = 0
  1762  001BB6  0E00               	movlw	0
  1763  001BB8  6E29               	movwf	?_MOC_NOTWORK+1,c
  1764  001BBA  6828               	setf	?_MOC_NOTWORK,c
  1765  001BBC  0012               	return		;funcret
  1766  001BBE                     __end_of_MOC_NOTWORK:
  1767                           	opt callstack 0
  1768                           
  1769 ;; *************** function _MOC_Frame_Counter *****************
  1770 ;; Defined at:
  1771 ;;		line 39 in file "MOC_Funct.c"
  1772 ;; Parameters:    Size  Location     Type
  1773 ;;		None
  1774 ;; Auto vars:     Size  Location     Type
  1775 ;;		None
  1776 ;; Return value:  Size  Location     Type
  1777 ;;                  2    5[COMRAM] unsigned int 
  1778 ;; Registers used:
  1779 ;;		wreg, status,2, status,0
  1780 ;; Tracked objects:
  1781 ;;		On entry : 0/0
  1782 ;;		On exit  : 0/0
  1783 ;;		Unchanged: 0/0
  1784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1785 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1788 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1789 ;;Total ram usage:        2 bytes
  1790 ;; Hardware stack levels used:    1
  1791 ;; Hardware stack levels required when called:    3
  1792 ;; This function calls:
  1793 ;;		Nothing
  1794 ;; This function is called by:
  1795 ;;		_FRAME_SensorExcitationStatus
  1796 ;; This function uses a non-reentrant model
  1797 ;;
  1798                           
  1799                           	psect	text8
  1800  001B32                     __ptext8:
  1801                           	opt callstack 0
  1802  001B32                     _MOC_Frame_Counter:
  1803                           	opt callstack 24
  1804                           
  1805                           ;MOC_Funct.c: 41:     static UINT zeta = 0x11;;MOC_Funct.c: 42:     return zeta++;
  1806                           
  1807                           ;incstack = 0
  1808  001B32  503F               	movf	MOC_Frame_Counter@zeta,w,c
  1809  001B34  6E28               	movwf	?_MOC_Frame_Counter,c
  1810  001B36  5040               	movf	MOC_Frame_Counter@zeta+1,w,c
  1811  001B38  6E29               	movwf	?_MOC_Frame_Counter+1,c
  1812  001B3A  4A3F               	infsnz	MOC_Frame_Counter@zeta,f,c
  1813  001B3C  2A40               	incf	MOC_Frame_Counter@zeta+1,f,c
  1814  001B3E  0012               	return		;funcret
  1815  001B40                     __end_of_MOC_Frame_Counter:
  1816                           	opt callstack 0
  1817                           
  1818 ;; *************** function _MOC_Aktualna_Temperatura *****************
  1819 ;; Defined at:
  1820 ;;		line 44 in file "MOC_Funct.c"
  1821 ;; Parameters:    Size  Location     Type
  1822 ;;		None
  1823 ;; Auto vars:     Size  Location     Type
  1824 ;;		None
  1825 ;; Return value:  Size  Location     Type
  1826 ;;                  2    5[COMRAM] unsigned int 
  1827 ;; Registers used:
  1828 ;;		wreg, status,2
  1829 ;; Tracked objects:
  1830 ;;		On entry : 0/0
  1831 ;;		On exit  : 0/0
  1832 ;;		Unchanged: 0/0
  1833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1834 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1837 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1838 ;;Total ram usage:        2 bytes
  1839 ;; Hardware stack levels used:    1
  1840 ;; Hardware stack levels required when called:    3
  1841 ;; This function calls:
  1842 ;;		Nothing
  1843 ;; This function is called by:
  1844 ;;		_FRAME_SensorExcitationStatus
  1845 ;; This function uses a non-reentrant model
  1846 ;;
  1847                           
  1848                           	psect	text9
  1849  001B66                     __ptext9:
  1850                           	opt callstack 0
  1851  001B66                     _MOC_Aktualna_Temperatura:
  1852                           	opt callstack 24
  1853                           
  1854                           ;MOC_Funct.c: 46:     return 0x1B;
  1855                           
  1856                           ;incstack = 0
  1857  001B66  0E00               	movlw	0
  1858  001B68  6E29               	movwf	?_MOC_Aktualna_Temperatura+1,c
  1859  001B6A  0E1B               	movlw	27
  1860  001B6C  6E28               	movwf	?_MOC_Aktualna_Temperatura,c
  1861  001B6E  0012               	return		;funcret
  1862  001B70                     __end_of_MOC_Aktualna_Temperatura:
  1863                           	opt callstack 0
  1864                           
  1865 ;; *************** function _LOCK_Set *****************
  1866 ;; Defined at:
  1867 ;;		line 84 in file "LED.c"
  1868 ;; Parameters:    Size  Location     Type
  1869 ;;  k               1    wreg     unsigned char 
  1870 ;; Auto vars:     Size  Location     Type
  1871 ;;  k               1    5[COMRAM] unsigned char 
  1872 ;; Return value:  Size  Location     Type
  1873 ;;                  1    wreg      void 
  1874 ;; Registers used:
  1875 ;;		wreg
  1876 ;; Tracked objects:
  1877 ;;		On entry : 0/0
  1878 ;;		On exit  : 0/0
  1879 ;;		Unchanged: 0/0
  1880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1882 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1884 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1885 ;;Total ram usage:        1 bytes
  1886 ;; Hardware stack levels used:    1
  1887 ;; Hardware stack levels required when called:    3
  1888 ;; This function calls:
  1889 ;;		Nothing
  1890 ;; This function is called by:
  1891 ;;		_FRAME_SensorExcitationStatus
  1892 ;; This function uses a non-reentrant model
  1893 ;;
  1894                           
  1895                           	psect	text10
  1896  001BBE                     __ptext10:
  1897                           	opt callstack 0
  1898  001BBE                     _LOCK_Set:
  1899                           	opt callstack 24
  1900                           
  1901                           ;incstack = 0
  1902                           ;LOCK_Set@k stored from wreg
  1903  001BBE  6E28               	movwf	LOCK_Set@k,c
  1904                           
  1905                           ;LED.c: 84: void LOCK_Set(BYTE k);LED.c: 85: {;LED.c: 86:     LOCK = k;
  1906  001BC0  C028  F010         	movff	LOCK_Set@k,_LOCK
  1907  001BC4  0012               	return		;funcret
  1908  001BC6                     __end_of_LOCK_Set:
  1909                           	opt callstack 0
  1910                           
  1911 ;; *************** function _LOCK_Get *****************
  1912 ;; Defined at:
  1913 ;;		line 100 in file "LED.c"
  1914 ;; Parameters:    Size  Location     Type
  1915 ;;		None
  1916 ;; Auto vars:     Size  Location     Type
  1917 ;;		None
  1918 ;; Return value:  Size  Location     Type
  1919 ;;                  1    wreg      unsigned char 
  1920 ;; Registers used:
  1921 ;;		wreg, status,2
  1922 ;; Tracked objects:
  1923 ;;		On entry : 0/0
  1924 ;;		On exit  : 0/0
  1925 ;;		Unchanged: 0/0
  1926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1931 ;;Total ram usage:        0 bytes
  1932 ;; Hardware stack levels used:    1
  1933 ;; Hardware stack levels required when called:    3
  1934 ;; This function calls:
  1935 ;;		Nothing
  1936 ;; This function is called by:
  1937 ;;		_FRAME_SensorExcitationStatus
  1938 ;; This function uses a non-reentrant model
  1939 ;;
  1940                           
  1941                           	psect	text11
  1942  001BCC                     __ptext11:
  1943                           	opt callstack 0
  1944  001BCC                     _LOCK_Get:
  1945                           	opt callstack 24
  1946                           
  1947                           ;LED.c: 102:     return LOCK;
  1948                           
  1949                           ;incstack = 0
  1950  001BCC  5010               	movf	_LOCK,w,c
  1951  001BCE  0012               	return		;funcret
  1952  001BD0                     __end_of_LOCK_Get:
  1953                           	opt callstack 0
  1954                           
  1955 ;; *************** function _IsInNeighbors *****************
  1956 ;; Defined at:
  1957 ;;		line 133 in file "FRAME.c"
  1958 ;; Parameters:    Size  Location     Type
  1959 ;;  message_adre    2    5[COMRAM] unsigned int 
  1960 ;; Auto vars:     Size  Location     Type
  1961 ;;  i               2    0        unsigned short 
  1962 ;; Return value:  Size  Location     Type
  1963 ;;                  2    5[COMRAM] unsigned int 
  1964 ;; Registers used:
  1965 ;;		wreg, status,2, status,0
  1966 ;; Tracked objects:
  1967 ;;		On entry : 0/0
  1968 ;;		On exit  : 0/0
  1969 ;;		Unchanged: 0/0
  1970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1971 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1974 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1975 ;;Total ram usage:        2 bytes
  1976 ;; Hardware stack levels used:    1
  1977 ;; Hardware stack levels required when called:    3
  1978 ;; This function calls:
  1979 ;;		Nothing
  1980 ;; This function is called by:
  1981 ;;		_FRAME_SensorExcitationStatus
  1982 ;; This function uses a non-reentrant model
  1983 ;;
  1984                           
  1985                           	psect	text12
  1986  000F6C                     __ptext12:
  1987                           	opt callstack 0
  1988  000F6C                     _IsInNeighbors:
  1989                           	opt callstack 24
  1990                           
  1991                           ;FRAME.c: 133: UINT IsInNeighbors(UINT message_adress);FRAME.c: 134: {;FRAME.c: 135:    
      +                           WORD i;;FRAME.c: 137:     if(NeightAdress1==message_adress)
  1992                           
  1993                           ;incstack = 0
  1994  000F6C  5028               	movf	IsInNeighbors@message_adress,w,c
  1995  000F6E  1821               	xorwf	_NeightAdress1,w,c	;volatile
  1996  000F70  E109               	bnz	l4201
  1997  000F72  5029               	movf	IsInNeighbors@message_adress+1,w,c
  1998  000F74  1822               	xorwf	_NeightAdress1+1,w,c	;volatile
  1999  000F76  A4D8               	btfss	status,2,c
  2000  000F78  D005               	goto	l4201
  2001                           
  2002                           ;FRAME.c: 138:     {;FRAME.c: 139:         return 0b1;
  2003  000F7A  0E00               	movlw	0
  2004  000F7C  6E29               	movwf	?_IsInNeighbors+1,c
  2005  000F7E  0E01               	movlw	1
  2006  000F80  6E28               	movwf	?_IsInNeighbors,c
  2007  000F82  0012               	return	
  2008  000F84                     l4201:
  2009                           
  2010                           ;FRAME.c: 141:     if(NeightAdress2==message_adress)
  2011  000F84  5028               	movf	IsInNeighbors@message_adress,w,c
  2012  000F86  184A               	xorwf	_NeightAdress2,w,c	;volatile
  2013  000F88  E109               	bnz	l4207
  2014  000F8A  5029               	movf	IsInNeighbors@message_adress+1,w,c
  2015  000F8C  184B               	xorwf	_NeightAdress2+1,w,c	;volatile
  2016  000F8E  A4D8               	btfss	status,2,c
  2017  000F90  D005               	goto	l4207
  2018                           
  2019                           ;FRAME.c: 142:     {;FRAME.c: 143:         return 0b10;
  2020  000F92  0E00               	movlw	0
  2021  000F94  6E29               	movwf	?_IsInNeighbors+1,c
  2022  000F96  0E02               	movlw	2
  2023  000F98  6E28               	movwf	?_IsInNeighbors,c
  2024  000F9A  0012               	return	
  2025  000F9C                     l4207:
  2026                           
  2027                           ;FRAME.c: 145:     if(NeightAdress3==message_adress)
  2028  000F9C  5028               	movf	IsInNeighbors@message_adress,w,c
  2029  000F9E  181F               	xorwf	_NeightAdress3,w,c	;volatile
  2030  000FA0  E109               	bnz	l4213
  2031  000FA2  5029               	movf	IsInNeighbors@message_adress+1,w,c
  2032  000FA4  1820               	xorwf	_NeightAdress3+1,w,c	;volatile
  2033  000FA6  A4D8               	btfss	status,2,c
  2034  000FA8  D005               	goto	l4213
  2035                           
  2036                           ;FRAME.c: 146:     {;FRAME.c: 147:         return 0b100;
  2037  000FAA  0E00               	movlw	0
  2038  000FAC  6E29               	movwf	?_IsInNeighbors+1,c
  2039  000FAE  0E04               	movlw	4
  2040  000FB0  6E28               	movwf	?_IsInNeighbors,c
  2041  000FB2  0012               	return	
  2042  000FB4                     l4213:
  2043                           
  2044                           ;FRAME.c: 149:     if(NeightAdress4==message_adress)
  2045  000FB4  5028               	movf	IsInNeighbors@message_adress,w,c
  2046  000FB6  181D               	xorwf	_NeightAdress4,w,c	;volatile
  2047  000FB8  E109               	bnz	l4219
  2048  000FBA  5029               	movf	IsInNeighbors@message_adress+1,w,c
  2049  000FBC  181E               	xorwf	_NeightAdress4+1,w,c	;volatile
  2050  000FBE  A4D8               	btfss	status,2,c
  2051  000FC0  D005               	goto	l4219
  2052                           
  2053                           ;FRAME.c: 150:     {;FRAME.c: 151:         return 0b1000;
  2054  000FC2  0E00               	movlw	0
  2055  000FC4  6E29               	movwf	?_IsInNeighbors+1,c
  2056  000FC6  0E08               	movlw	8
  2057  000FC8  6E28               	movwf	?_IsInNeighbors,c
  2058  000FCA  0012               	return	
  2059  000FCC                     l4219:
  2060                           
  2061                           ;FRAME.c: 153:     if(NeightAdress5==message_adress)
  2062  000FCC  5028               	movf	IsInNeighbors@message_adress,w,c
  2063  000FCE  181B               	xorwf	_NeightAdress5,w,c	;volatile
  2064  000FD0  E109               	bnz	l4225
  2065  000FD2  5029               	movf	IsInNeighbors@message_adress+1,w,c
  2066  000FD4  181C               	xorwf	_NeightAdress5+1,w,c	;volatile
  2067  000FD6  A4D8               	btfss	status,2,c
  2068  000FD8  D005               	goto	l4225
  2069                           
  2070                           ;FRAME.c: 154:     {;FRAME.c: 155:         return 0b10000;
  2071  000FDA  0E00               	movlw	0
  2072  000FDC  6E29               	movwf	?_IsInNeighbors+1,c
  2073  000FDE  0E10               	movlw	16
  2074  000FE0  6E28               	movwf	?_IsInNeighbors,c
  2075  000FE2  0012               	return	
  2076  000FE4                     l4225:
  2077                           
  2078                           ;FRAME.c: 157:     if(NeightAdress6==message_adress)
  2079  000FE4  5028               	movf	IsInNeighbors@message_adress,w,c
  2080  000FE6  1819               	xorwf	_NeightAdress6,w,c	;volatile
  2081  000FE8  E109               	bnz	l4231
  2082  000FEA  5029               	movf	IsInNeighbors@message_adress+1,w,c
  2083  000FEC  181A               	xorwf	_NeightAdress6+1,w,c	;volatile
  2084  000FEE  A4D8               	btfss	status,2,c
  2085  000FF0  D005               	goto	l4231
  2086                           
  2087                           ;FRAME.c: 158:     {;FRAME.c: 159:         return 0b100000;
  2088  000FF2  0E00               	movlw	0
  2089  000FF4  6E29               	movwf	?_IsInNeighbors+1,c
  2090  000FF6  0E20               	movlw	32
  2091  000FF8  6E28               	movwf	?_IsInNeighbors,c
  2092  000FFA  0012               	return	
  2093  000FFC                     l4231:
  2094                           
  2095                           ;FRAME.c: 161:     if(NeightAdress7==message_adress)
  2096  000FFC  5028               	movf	IsInNeighbors@message_adress,w,c
  2097  000FFE  1817               	xorwf	_NeightAdress7,w,c	;volatile
  2098  001000  E109               	bnz	l4237
  2099  001002  5029               	movf	IsInNeighbors@message_adress+1,w,c
  2100  001004  1818               	xorwf	_NeightAdress7+1,w,c	;volatile
  2101  001006  A4D8               	btfss	status,2,c
  2102  001008  D005               	goto	l4237
  2103                           
  2104                           ;FRAME.c: 162:     {;FRAME.c: 163:         return 0b1000000;
  2105  00100A  0E00               	movlw	0
  2106  00100C  6E29               	movwf	?_IsInNeighbors+1,c
  2107  00100E  0E40               	movlw	64
  2108  001010  6E28               	movwf	?_IsInNeighbors,c
  2109  001012  0012               	return	
  2110  001014                     l4237:
  2111                           
  2112                           ;FRAME.c: 165:     if(NeightAdress8==message_adress)
  2113  001014  5028               	movf	IsInNeighbors@message_adress,w,c
  2114  001016  1815               	xorwf	_NeightAdress8,w,c	;volatile
  2115  001018  E109               	bnz	l4243
  2116  00101A  5029               	movf	IsInNeighbors@message_adress+1,w,c
  2117  00101C  1816               	xorwf	_NeightAdress8+1,w,c	;volatile
  2118  00101E  A4D8               	btfss	status,2,c
  2119  001020  D005               	goto	l4243
  2120                           
  2121                           ;FRAME.c: 166:     {;FRAME.c: 167:         return 0b10000000;
  2122  001022  0E00               	movlw	0
  2123  001024  6E29               	movwf	?_IsInNeighbors+1,c
  2124  001026  0E80               	movlw	128
  2125  001028  6E28               	movwf	?_IsInNeighbors,c
  2126  00102A  0012               	return	
  2127  00102C                     l4243:
  2128                           
  2129                           ;FRAME.c: 183:     return 0;
  2130  00102C  0E00               	movlw	0
  2131  00102E  6E29               	movwf	?_IsInNeighbors+1,c
  2132  001030  0E00               	movlw	0
  2133  001032  6E28               	movwf	?_IsInNeighbors,c
  2134  001034  0012               	return		;funcret
  2135  001036                     __end_of_IsInNeighbors:
  2136                           	opt callstack 0
  2137                           
  2138 ;; *************** function _FRAME_PrzypisanieDokarty *****************
  2139 ;; Defined at:
  2140 ;;		line 679 in file "FRAME.c"
  2141 ;; Parameters:    Size  Location     Type
  2142 ;;  message         2    5[COMRAM] PTR struct .
  2143 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2144 ;; Auto vars:     Size  Location     Type
  2145 ;;		None
  2146 ;; Return value:  Size  Location     Type
  2147 ;;                  1    wreg      void 
  2148 ;; Registers used:
  2149 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2150 ;; Tracked objects:
  2151 ;;		On entry : 0/0
  2152 ;;		On exit  : 0/0
  2153 ;;		Unchanged: 0/0
  2154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2155 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2157 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2158 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2159 ;;Total ram usage:        6 bytes
  2160 ;; Hardware stack levels used:    1
  2161 ;; Hardware stack levels required when called:    3
  2162 ;; This function calls:
  2163 ;;		Nothing
  2164 ;; This function is called by:
  2165 ;;		_FRAME_HandleCanFrame
  2166 ;; This function uses a non-reentrant model
  2167 ;;
  2168                           
  2169                           	psect	text13
  2170  0010E6                     __ptext13:
  2171                           	opt callstack 0
  2172  0010E6                     _FRAME_PrzypisanieDokarty:
  2173                           	opt callstack 25
  2174                           
  2175                           ;FRAME.c: 679: static void FRAME_PrzypisanieDokarty(mID *message);FRAME.c: 680: {;FRAME.
      +                          c: 681:     if(message->message_type == 0x02)
  2176                           
  2177                           ;incstack = 0
  2178  0010E6  EE20 F001          	lfsr	2,1
  2179  0010EA  5028               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2180  0010EC  26D9               	addwf	fsr2l,f,c
  2181  0010EE  5029               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2182  0010F0  22DA               	addwfc	fsr2h,f,c
  2183  0010F2  0E02               	movlw	2
  2184  0010F4  18DE               	xorwf	postinc2,w,c
  2185  0010F6  A4D8               	btfss	status,2,c
  2186  0010F8  D021               	goto	l4495
  2187                           
  2188                           ;FRAME.c: 682:     {;FRAME.c: 683:         message->data_length = 3;
  2189  0010FA  EE20 F010          	lfsr	2,16
  2190  0010FE  5028               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2191  001100  26D9               	addwf	fsr2l,f,c
  2192  001102  5029               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2193  001104  22DA               	addwfc	fsr2h,f,c
  2194  001106  0E03               	movlw	3
  2195  001108  6EDF               	movwf	indf2,c
  2196                           
  2197                           ;FRAME.c: 684:         message->data[0] = (unsigned char)Dane->NrKarty >> 8 ;
  2198  00110A  EE20 F008          	lfsr	2,8
  2199  00110E  5028               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2200  001110  26D9               	addwf	fsr2l,f,c
  2201  001112  5029               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2202  001114  22DA               	addwfc	fsr2h,f,c
  2203  001116  0E00               	movlw	0
  2204  001118  6EDF               	movwf	indf2,c
  2205                           
  2206                           ;FRAME.c: 685:         message->data[1] = (unsigned char)Dane->NrKarty ;
  2207  00111A  EE20 F009          	lfsr	2,9
  2208  00111E  5028               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2209  001120  26D9               	addwf	fsr2l,f,c
  2210  001122  5029               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2211  001124  22DA               	addwfc	fsr2h,f,c
  2212  001126  C040 FFDF          	movff	64,indf2
  2213                           
  2214                           ;FRAME.c: 686:         message->data[2] = (unsigned char)Dane->Nr_WeWy ;
  2215  00112A  EE20 F00A          	lfsr	2,10
  2216  00112E  5028               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2217  001130  26D9               	addwf	fsr2l,f,c
  2218  001132  5029               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2219  001134  22DA               	addwfc	fsr2h,f,c
  2220  001136  C042 FFDF          	movff	66,indf2
  2221                           
  2222                           ;FRAME.c: 688:     }
  2223  00113A  0012               	return	
  2224  00113C                     l4495:
  2225                           
  2226                           ;FRAME.c: 690:     {;FRAME.c: 691:          Dane->NrKarty = (message->data[0] << 8) | (m
      +                          essage->data[1]);
  2227  00113C  EE20 F008          	lfsr	2,8
  2228  001140  5028               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2229  001142  26D9               	addwf	fsr2l,f,c
  2230  001144  5029               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2231  001146  22DA               	addwfc	fsr2h,f,c
  2232  001148  50DF               	movf	indf2,w,c
  2233  00114A  6E2A               	movwf	??_FRAME_PrzypisanieDokarty& (0+255),c
  2234  00114C  502A               	movf	??_FRAME_PrzypisanieDokarty,w,c
  2235  00114E  6E2C               	movwf	(??_FRAME_PrzypisanieDokarty+2)& (0+255),c
  2236  001150  6A2B               	clrf	(??_FRAME_PrzypisanieDokarty+1)& (0+255),c
  2237  001152  EE20 F009          	lfsr	2,9
  2238  001156  5028               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2239  001158  26D9               	addwf	fsr2l,f,c
  2240  00115A  5029               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2241  00115C  22DA               	addwfc	fsr2h,f,c
  2242  00115E  50DF               	movf	indf2,w,c
  2243  001160  6E2D               	movwf	(??_FRAME_PrzypisanieDokarty+3)& (0+255),c
  2244  001162  502D               	movf	??_FRAME_PrzypisanieDokarty+3,w,c
  2245  001164  102B               	iorwf	??_FRAME_PrzypisanieDokarty+1,w,c
  2246  001166  6E40               	movwf	64,c
  2247  001168  502C               	movf	??_FRAME_PrzypisanieDokarty+2,w,c
  2248  00116A  6E41               	movwf	65,c
  2249                           
  2250                           ;FRAME.c: 692:          Dane->Nr_WeWy = (message->data[2]);
  2251  00116C  EE20 F00A          	lfsr	2,10
  2252  001170  5028               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2253  001172  26D9               	addwf	fsr2l,f,c
  2254  001174  5029               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2255  001176  22DA               	addwfc	fsr2h,f,c
  2256  001178  50DF               	movf	indf2,w,c
  2257  00117A  6E2A               	movwf	??_FRAME_PrzypisanieDokarty& (0+255),c
  2258  00117C  502A               	movf	??_FRAME_PrzypisanieDokarty,w,c
  2259  00117E  6E42               	movwf	66,c
  2260  001180  6A43               	clrf	67,c
  2261  001182  0012               	return		;funcret
  2262  001184                     __end_of_FRAME_PrzypisanieDokarty:
  2263                           	opt callstack 0
  2264                           
  2265 ;; *************** function _FRAME_Plot *****************
  2266 ;; Defined at:
  2267 ;;		line 564 in file "FRAME.c"
  2268 ;; Parameters:    Size  Location     Type
  2269 ;;  message         2   12[COMRAM] PTR struct .
  2270 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2271 ;; Auto vars:     Size  Location     Type
  2272 ;;		None
  2273 ;; Return value:  Size  Location     Type
  2274 ;;                  1    wreg      void 
  2275 ;; Registers used:
  2276 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2277 ;; Tracked objects:
  2278 ;;		On entry : 0/0
  2279 ;;		On exit  : 0/0
  2280 ;;		Unchanged: 0/0
  2281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2282 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2284 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2285 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2286 ;;Total ram usage:        3 bytes
  2287 ;; Hardware stack levels used:    1
  2288 ;; Hardware stack levels required when called:    4
  2289 ;; This function calls:
  2290 ;;		___lwdiv
  2291 ;; This function is called by:
  2292 ;;		_FRAME_HandleCanFrame
  2293 ;; This function uses a non-reentrant model
  2294 ;;
  2295                           
  2296                           	psect	text14
  2297  001666                     __ptext14:
  2298                           	opt callstack 0
  2299  001666                     _FRAME_Plot:
  2300                           	opt callstack 24
  2301                           
  2302                           ;FRAME.c: 564: static void FRAME_Plot(mID *message);FRAME.c: 565: {;FRAME.c: 567:     if
      +                          (message->message_type == 0x02)
  2303                           
  2304                           ;incstack = 0
  2305  001666  EE20 F001          	lfsr	2,1
  2306  00166A  502F               	movf	FRAME_Plot@message,w,c
  2307  00166C  26D9               	addwf	fsr2l,f,c
  2308  00166E  5030               	movf	FRAME_Plot@message+1,w,c
  2309  001670  22DA               	addwfc	fsr2h,f,c
  2310  001672  0E02               	movlw	2
  2311  001674  18DE               	xorwf	postinc2,w,c
  2312  001676  A4D8               	btfss	status,2,c
  2313  001678  D013               	goto	l4485
  2314                           
  2315                           ;FRAME.c: 568:     {;FRAME.c: 569:         message->data[0] = (BYTE)(Dane->timerRysowani
      +                          aWykresuU16/10);
  2316  00167A  EE20 F008          	lfsr	2,8
  2317  00167E  502F               	movf	FRAME_Plot@message,w,c
  2318  001680  26D9               	addwf	fsr2l,f,c
  2319  001682  5030               	movf	FRAME_Plot@message+1,w,c
  2320  001684  22DA               	addwfc	fsr2h,f,c
  2321  001686  C00C F028          	movff	12,___lwdiv@dividend
  2322  00168A  C00D F029          	movff	13,___lwdiv@dividend+1
  2323  00168E  0E00               	movlw	0
  2324  001690  6E2B               	movwf	___lwdiv@divisor+1,c
  2325  001692  0E0A               	movlw	10
  2326  001694  6E2A               	movwf	___lwdiv@divisor,c
  2327  001696  EC5F  F00B         	call	___lwdiv	;wreg free
  2328  00169A  5028               	movf	?___lwdiv,w,c
  2329  00169C  6EDF               	movwf	indf2,c
  2330                           
  2331                           ;FRAME.c: 570:     }
  2332  00169E  0012               	return	
  2333  0016A0                     l4485:
  2334                           
  2335                           ;FRAME.c: 572:     {;FRAME.c: 573:         Dane->timerRysowaniaWykresuU16 = (WORD)messag
      +                          e->data[0]*10;
  2336  0016A0  EE20 F008          	lfsr	2,8
  2337  0016A4  502F               	movf	FRAME_Plot@message,w,c
  2338  0016A6  26D9               	addwf	fsr2l,f,c
  2339  0016A8  5030               	movf	FRAME_Plot@message+1,w,c
  2340  0016AA  22DA               	addwfc	fsr2h,f,c
  2341  0016AC  50DF               	movf	indf2,w,c
  2342  0016AE  6E31               	movwf	??_FRAME_Plot& (0+255),c
  2343  0016B0  5031               	movf	??_FRAME_Plot,w,c
  2344  0016B2  0D0A               	mullw	10
  2345  0016B4  CFF3 F00C          	movff	prodl,12
  2346  0016B8  CFF4 F00D          	movff	prodh,13
  2347  0016BC  0012               	return		;funcret
  2348  0016BE                     __end_of_FRAME_Plot:
  2349                           	opt callstack 0
  2350                           
  2351 ;; *************** function _FRAME_MapPosition *****************
  2352 ;; Defined at:
  2353 ;;		line 590 in file "FRAME.c"
  2354 ;; Parameters:    Size  Location     Type
  2355 ;;  message         2    5[COMRAM] PTR struct .
  2356 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2357 ;; Auto vars:     Size  Location     Type
  2358 ;;		None
  2359 ;; Return value:  Size  Location     Type
  2360 ;;                  1    wreg      void 
  2361 ;; Registers used:
  2362 ;;		None
  2363 ;; Tracked objects:
  2364 ;;		On entry : 0/0
  2365 ;;		On exit  : 0/0
  2366 ;;		Unchanged: 0/0
  2367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2368 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2371 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2372 ;;Total ram usage:        2 bytes
  2373 ;; Hardware stack levels used:    1
  2374 ;; Hardware stack levels required when called:    3
  2375 ;; This function calls:
  2376 ;;		Nothing
  2377 ;; This function is called by:
  2378 ;;		_FRAME_HandleCanFrame
  2379 ;; This function uses a non-reentrant model
  2380 ;;
  2381                           
  2382                           	psect	text15
  2383  001BD0                     __ptext15:
  2384                           	opt callstack 0
  2385  001BD0                     _FRAME_MapPosition:
  2386                           	opt callstack 25
  2387                           
  2388                           ;incstack = 0
  2389  001BD0  0012               	return		;funcret
  2390  001BD2                     __end_of_FRAME_MapPosition:
  2391                           	opt callstack 0
  2392                           
  2393 ;; *************** function _FRAME_ExcitationValue *****************
  2394 ;; Defined at:
  2395 ;;		line 228 in file "FRAME.c"
  2396 ;; Parameters:    Size  Location     Type
  2397 ;;  message         2    5[COMRAM] PTR struct .
  2398 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2399 ;; Auto vars:     Size  Location     Type
  2400 ;;		None
  2401 ;; Return value:  Size  Location     Type
  2402 ;;                  1    wreg      void 
  2403 ;; Registers used:
  2404 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2405 ;; Tracked objects:
  2406 ;;		On entry : 0/0
  2407 ;;		On exit  : 0/0
  2408 ;;		Unchanged: 0/0
  2409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2410 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2412 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2413 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2414 ;;Total ram usage:        3 bytes
  2415 ;; Hardware stack levels used:    1
  2416 ;; Hardware stack levels required when called:    3
  2417 ;; This function calls:
  2418 ;;		Nothing
  2419 ;; This function is called by:
  2420 ;;		_FRAME_HandleCanFrame
  2421 ;; This function uses a non-reentrant model
  2422 ;;
  2423                           
  2424                           	psect	text16
  2425  001872                     __ptext16:
  2426                           	opt callstack 0
  2427  001872                     _FRAME_ExcitationValue:
  2428                           	opt callstack 25
  2429                           
  2430                           ;FRAME.c: 228: static void FRAME_ExcitationValue(mID *message);FRAME.c: 229: {;FRAME.c: 
      +                          230:     if(message->message_type == 0x02)
  2431                           
  2432                           ;incstack = 0
  2433  001872  EE20 F001          	lfsr	2,1
  2434  001876  5028               	movf	FRAME_ExcitationValue@message,w,c
  2435  001878  26D9               	addwf	fsr2l,f,c
  2436  00187A  5029               	movf	FRAME_ExcitationValue@message+1,w,c
  2437  00187C  22DA               	addwfc	fsr2h,f,c
  2438  00187E  0E02               	movlw	2
  2439  001880  18DE               	xorwf	postinc2,w,c
  2440  001882  A4D8               	btfss	status,2,c
  2441  001884  0012               	return	
  2442                           
  2443                           ;FRAME.c: 231:     {;FRAME.c: 232:         message->data_length = 1;
  2444  001886  EE20 F010          	lfsr	2,16
  2445  00188A  5028               	movf	FRAME_ExcitationValue@message,w,c
  2446  00188C  26D9               	addwf	fsr2l,f,c
  2447  00188E  5029               	movf	FRAME_ExcitationValue@message+1,w,c
  2448  001890  22DA               	addwfc	fsr2h,f,c
  2449  001892  0E01               	movlw	1
  2450  001894  6EDF               	movwf	indf2,c
  2451                           
  2452                           ;FRAME.c: 237:         message->data[0] = 0xFF;
  2453  001896  EE20 F008          	lfsr	2,8
  2454  00189A  5028               	movf	FRAME_ExcitationValue@message,w,c
  2455  00189C  26D9               	addwf	fsr2l,f,c
  2456  00189E  5029               	movf	FRAME_ExcitationValue@message+1,w,c
  2457  0018A0  22DA               	addwfc	fsr2h,f,c
  2458  0018A2  0EFF               	movlw	255
  2459  0018A4  6EDF               	movwf	indf2,c
  2460                           
  2461                           ;FRAME.c: 238:     }
  2462  0018A6  0012               	return		;funcret
  2463  0018A8                     __end_of_FRAME_ExcitationValue:
  2464                           	opt callstack 0
  2465                           
  2466 ;; *************** function _FRAME_ExcitationMultiplier *****************
  2467 ;; Defined at:
  2468 ;;		line 257 in file "FRAME.c"
  2469 ;; Parameters:    Size  Location     Type
  2470 ;;  message         2    5[COMRAM] PTR struct .
  2471 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2472 ;; Auto vars:     Size  Location     Type
  2473 ;;  i               2    8[COMRAM] unsigned short 
  2474 ;; Return value:  Size  Location     Type
  2475 ;;                  1    wreg      void 
  2476 ;; Registers used:
  2477 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2478 ;; Tracked objects:
  2479 ;;		On entry : 0/0
  2480 ;;		On exit  : 0/0
  2481 ;;		Unchanged: 0/0
  2482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2483 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2484 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2485 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2486 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2487 ;;Total ram usage:        5 bytes
  2488 ;; Hardware stack levels used:    1
  2489 ;; Hardware stack levels required when called:    3
  2490 ;; This function calls:
  2491 ;;		Nothing
  2492 ;; This function is called by:
  2493 ;;		_FRAME_HandleCanFrame
  2494 ;; This function uses a non-reentrant model
  2495 ;;
  2496                           
  2497                           	psect	text17
  2498  001710                     __ptext17:
  2499                           	opt callstack 0
  2500  001710                     _FRAME_ExcitationMultiplier:
  2501                           	opt callstack 25
  2502                           
  2503                           ;FRAME.c: 257: static void FRAME_ExcitationMultiplier(mID *message);FRAME.c: 258: {;FRAM
      +                          E.c: 259:     WORD i;;FRAME.c: 261:     if(message->message_type == 0x02)
  2504                           
  2505                           ;incstack = 0
  2506  001710  EE20 F001          	lfsr	2,1
  2507  001714  5028               	movf	FRAME_ExcitationMultiplier@message,w,c
  2508  001716  26D9               	addwf	fsr2l,f,c
  2509  001718  5029               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  2510  00171A  22DA               	addwfc	fsr2h,f,c
  2511  00171C  0E02               	movlw	2
  2512  00171E  18DE               	xorwf	postinc2,w,c
  2513  001720  A4D8               	btfss	status,2,c
  2514  001722  0012               	return	
  2515                           
  2516                           ;FRAME.c: 262:     {;FRAME.c: 263:         message->data_length = 1;
  2517  001724  EE20 F010          	lfsr	2,16
  2518  001728  5028               	movf	FRAME_ExcitationMultiplier@message,w,c
  2519  00172A  26D9               	addwf	fsr2l,f,c
  2520  00172C  5029               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  2521  00172E  22DA               	addwfc	fsr2h,f,c
  2522  001730  0E01               	movlw	1
  2523  001732  6EDF               	movwf	indf2,c
  2524                           
  2525                           ;FRAME.c: 264:         for(i=0; i<3; i++)
  2526  001734  0E00               	movlw	0
  2527  001736  6E2C               	movwf	FRAME_ExcitationMultiplier@i+1,c
  2528  001738  0E00               	movlw	0
  2529  00173A  6E2B               	movwf	FRAME_ExcitationMultiplier@i,c
  2530  00173C                     l4439:
  2531                           
  2532                           ;FRAME.c: 265:         {;FRAME.c: 268:         }
  2533  00173C  4A2B               	infsnz	FRAME_ExcitationMultiplier@i,f,c
  2534  00173E  2A2C               	incf	FRAME_ExcitationMultiplier@i+1,f,c
  2535  001740  502C               	movf	FRAME_ExcitationMultiplier@i+1,w,c
  2536  001742  E104               	bnz	u2690
  2537  001744  0E03               	movlw	3
  2538  001746  5C2B               	subwf	FRAME_ExcitationMultiplier@i,w,c
  2539  001748  A0D8               	btfss	status,0,c
  2540  00174A  D7F8               	goto	l4439
  2541  00174C                     u2690:
  2542                           
  2543                           ;FRAME.c: 269:         message->data[0] = 0xFF;
  2544  00174C  EE20 F008          	lfsr	2,8
  2545  001750  5028               	movf	FRAME_ExcitationMultiplier@message,w,c
  2546  001752  26D9               	addwf	fsr2l,f,c
  2547  001754  5029               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  2548  001756  22DA               	addwfc	fsr2h,f,c
  2549  001758  0EFF               	movlw	255
  2550  00175A  6EDF               	movwf	indf2,c
  2551                           
  2552                           ;FRAME.c: 270:     }
  2553  00175C  0012               	return		;funcret
  2554  00175E                     __end_of_FRAME_ExcitationMultiplier:
  2555                           	opt callstack 0
  2556                           
  2557 ;; *************** function _FRAME_DeviceReset *****************
  2558 ;; Defined at:
  2559 ;;		line 411 in file "FRAME.c"
  2560 ;; Parameters:    Size  Location     Type
  2561 ;;  message         2   14[COMRAM] PTR struct .
  2562 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2563 ;; Auto vars:     Size  Location     Type
  2564 ;;		None
  2565 ;; Return value:  Size  Location     Type
  2566 ;;                  1    wreg      void 
  2567 ;; Registers used:
  2568 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2569 ;; Tracked objects:
  2570 ;;		On entry : 0/0
  2571 ;;		On exit  : 0/0
  2572 ;;		Unchanged: 0/0
  2573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2574 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2576 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2577 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2578 ;;Total ram usage:        3 bytes
  2579 ;; Hardware stack levels used:    1
  2580 ;; Hardware stack levels required when called:    6
  2581 ;; This function calls:
  2582 ;;		_FRAME_DataUpdateAndChangeOption
  2583 ;;		_WriteDataToEEPROM
  2584 ;; This function is called by:
  2585 ;;		_FRAME_HandleCanFrame
  2586 ;; This function uses a non-reentrant model
  2587 ;;
  2588                           
  2589                           	psect	text18
  2590  000C02                     __ptext18:
  2591                           	opt callstack 0
  2592  000C02                     _FRAME_DeviceReset:
  2593                           	opt callstack 22
  2594                           
  2595                           ;FRAME.c: 411: static void FRAME_DeviceReset(mID *message);FRAME.c: 412: {;FRAME.c: 413:
      +                               if(message->message_type == 0x02)
  2596                           
  2597                           ;incstack = 0
  2598  000C02  EE20 F001          	lfsr	2,1
  2599  000C06  5031               	movf	FRAME_DeviceReset@message,w,c
  2600  000C08  26D9               	addwf	fsr2l,f,c
  2601  000C0A  5032               	movf	FRAME_DeviceReset@message+1,w,c
  2602  000C0C  22DA               	addwfc	fsr2h,f,c
  2603  000C0E  0E02               	movlw	2
  2604  000C10  18DE               	xorwf	postinc2,w,c
  2605  000C12  A4D8               	btfss	status,2,c
  2606  000C14  D057               	goto	l4461
  2607                           
  2608                           ;FRAME.c: 414:     {;FRAME.c: 415:         message->data_length = 1;
  2609  000C16  EE20 F010          	lfsr	2,16
  2610  000C1A  5031               	movf	FRAME_DeviceReset@message,w,c
  2611  000C1C  26D9               	addwf	fsr2l,f,c
  2612  000C1E  5032               	movf	FRAME_DeviceReset@message+1,w,c
  2613  000C20  22DA               	addwfc	fsr2h,f,c
  2614  000C22  0E01               	movlw	1
  2615  000C24  6EDF               	movwf	indf2,c
  2616                           
  2617                           ;FRAME.c: 417:         message->data[0] = (RCON>>6) & 0x01;
  2618  000C26  EE20 F008          	lfsr	2,8
  2619  000C2A  5031               	movf	FRAME_DeviceReset@message,w,c
  2620  000C2C  26D9               	addwf	fsr2l,f,c
  2621  000C2E  5032               	movf	FRAME_DeviceReset@message+1,w,c
  2622  000C30  22DA               	addwfc	fsr2h,f,c
  2623  000C32  44D0               	rlncf	4048,w,c	;volatile
  2624  000C34  46E8               	rlncf	wreg,f,c
  2625  000C36  0B03               	andlw	3
  2626  000C38  0B01               	andlw	1
  2627  000C3A  6EDF               	movwf	indf2,c
  2628                           
  2629                           ;FRAME.c: 418:         message->data[1] = Flagi.wykonanoZapisDoFlash;
  2630  000C3C  EE20 F009          	lfsr	2,9
  2631  000C40  5031               	movf	FRAME_DeviceReset@message,w,c
  2632  000C42  26D9               	addwf	fsr2l,f,c
  2633  000C44  5032               	movf	FRAME_DeviceReset@message+1,w,c
  2634  000C46  22DA               	addwfc	fsr2h,f,c
  2635  000C48  0100               	movlb	0	; () banked
  2636  000C4A  A9C6               	btfss	_Flagi& (0+255),4,b
  2637  000C4C  D002               	goto	u2730
  2638  000C4E  0E01               	movlw	1
  2639  000C50  D001               	goto	u2736
  2640  000C52                     u2730:
  2641  000C52  0E00               	movlw	0
  2642  000C54                     u2736:
  2643  000C54  6EDF               	movwf	indf2,c
  2644                           
  2645                           ;FRAME.c: 419:         message->data[2] = Flagi.pomiarTla;
  2646  000C56  EE20 F00A          	lfsr	2,10
  2647  000C5A  5031               	movf	FRAME_DeviceReset@message,w,c
  2648  000C5C  26D9               	addwf	fsr2l,f,c
  2649  000C5E  5032               	movf	FRAME_DeviceReset@message+1,w,c
  2650  000C60  22DA               	addwfc	fsr2h,f,c
  2651  000C62  A1C6               	btfss	_Flagi& (0+255),0,b
  2652  000C64  D002               	goto	u2740
  2653  000C66  0E01               	movlw	1
  2654  000C68  D001               	goto	u2746
  2655  000C6A                     u2740:
  2656  000C6A  0E00               	movlw	0
  2657  000C6C                     u2746:
  2658  000C6C  6EDF               	movwf	indf2,c
  2659                           
  2660                           ;FRAME.c: 420:         message->data[3] = 0;
  2661  000C6E  EE20 F00B          	lfsr	2,11
  2662  000C72  5031               	movf	FRAME_DeviceReset@message,w,c
  2663  000C74  26D9               	addwf	fsr2l,f,c
  2664  000C76  5032               	movf	FRAME_DeviceReset@message+1,w,c
  2665  000C78  22DA               	addwfc	fsr2h,f,c
  2666  000C7A  0E00               	movlw	0
  2667  000C7C  6EDF               	movwf	indf2,c
  2668                           
  2669                           ;FRAME.c: 421:         message->data[4] = Dane->rokU16;
  2670  000C7E  EE20 F00C          	lfsr	2,12
  2671  000C82  5031               	movf	FRAME_DeviceReset@message,w,c
  2672  000C84  26D9               	addwf	fsr2l,f,c
  2673  000C86  5032               	movf	FRAME_DeviceReset@message+1,w,c
  2674  000C88  22DA               	addwfc	fsr2h,f,c
  2675  000C8A  C036 FFDF          	movff	54,indf2
  2676                           
  2677                           ;FRAME.c: 422:         message->data[5] = Dane->miesiacU16;
  2678  000C8E  EE20 F00D          	lfsr	2,13
  2679  000C92  5031               	movf	FRAME_DeviceReset@message,w,c
  2680  000C94  26D9               	addwf	fsr2l,f,c
  2681  000C96  5032               	movf	FRAME_DeviceReset@message+1,w,c
  2682  000C98  22DA               	addwfc	fsr2h,f,c
  2683  000C9A  C038 FFDF          	movff	56,indf2
  2684                           
  2685                           ;FRAME.c: 423:         message->data[6] = Dane->dzienU16;
  2686  000C9E  EE20 F00E          	lfsr	2,14
  2687  000CA2  5031               	movf	FRAME_DeviceReset@message,w,c
  2688  000CA4  26D9               	addwf	fsr2l,f,c
  2689  000CA6  5032               	movf	FRAME_DeviceReset@message+1,w,c
  2690  000CA8  22DA               	addwfc	fsr2h,f,c
  2691  000CAA  C03A FFDF          	movff	58,indf2
  2692                           
  2693                           ;FRAME.c: 424:         message->data[7] = Dane->godzinaU16;
  2694  000CAE  EE20 F00F          	lfsr	2,15
  2695  000CB2  5031               	movf	FRAME_DeviceReset@message,w,c
  2696  000CB4  26D9               	addwf	fsr2l,f,c
  2697  000CB6  5032               	movf	FRAME_DeviceReset@message+1,w,c
  2698  000CB8  22DA               	addwfc	fsr2h,f,c
  2699  000CBA  C03C FFDF          	movff	60,indf2
  2700                           
  2701                           ; BSR set to: 0
  2702                           ;FRAME.c: 425:         RCON &= ~(1<<6);
  2703  000CBE  9CD0               	bcf	4048,6,c	;volatile
  2704                           
  2705                           ; BSR set to: 0
  2706                           ;FRAME.c: 426:         Flagi.wykonanoZapisDoFlash = 0;
  2707  000CC0  99C6               	bcf	_Flagi& (0+255),4,b
  2708                           
  2709                           ;FRAME.c: 440:     }
  2710  000CC2  0012               	return	
  2711  000CC4                     l4461:
  2712                           
  2713                           ;FRAME.c: 442:     {;FRAME.c: 443:         message->data_length = 1;
  2714  000CC4  EE20 F010          	lfsr	2,16
  2715  000CC8  5031               	movf	FRAME_DeviceReset@message,w,c
  2716  000CCA  26D9               	addwf	fsr2l,f,c
  2717  000CCC  5032               	movf	FRAME_DeviceReset@message+1,w,c
  2718  000CCE  22DA               	addwfc	fsr2h,f,c
  2719  000CD0  0E01               	movlw	1
  2720  000CD2  6EDF               	movwf	indf2,c
  2721                           
  2722                           ;FRAME.c: 445:         if(message->data[2])
  2723  000CD4  EE20 F00A          	lfsr	2,10
  2724  000CD8  5031               	movf	FRAME_DeviceReset@message,w,c
  2725  000CDA  26D9               	addwf	fsr2l,f,c
  2726  000CDC  5032               	movf	FRAME_DeviceReset@message+1,w,c
  2727  000CDE  22DA               	addwfc	fsr2h,f,c
  2728  000CE0  50DF               	movf	indf2,w,c
  2729  000CE2  B4D8               	btfsc	status,2,c
  2730  000CE4  D00F               	goto	l4471
  2731                           
  2732                           ;FRAME.c: 446:         {;FRAME.c: 447:             Flagi.pomiarTla = 1;
  2733  000CE6  0100               	movlb	0	; () banked
  2734  000CE8  81C6               	bsf	_Flagi& (0+255),0,b
  2735                           
  2736                           ; BSR set to: 0
  2737                           ;FRAME.c: 448:             if(message->data[1])
  2738  000CEA  EE20 F009          	lfsr	2,9
  2739  000CEE  5031               	movf	FRAME_DeviceReset@message,w,c
  2740  000CF0  26D9               	addwf	fsr2l,f,c
  2741  000CF2  5032               	movf	FRAME_DeviceReset@message+1,w,c
  2742  000CF4  22DA               	addwfc	fsr2h,f,c
  2743  000CF6  50DF               	movf	indf2,w,c
  2744  000CF8  B4D8               	btfsc	status,2,c
  2745  000CFA  D01E               	goto	l4479
  2746                           
  2747                           ; BSR set to: 0
  2748                           ;FRAME.c: 449:             {;FRAME.c: 450:                 Flagi.zapisDoFlash = 1;
  2749  000CFC  87C6               	bsf	_Flagi& (0+255),3,b
  2750                           
  2751                           ; BSR set to: 0
  2752                           ;FRAME.c: 451:                 WriteDataToEEPROM();
  2753  000CFE  EC37  F007         	call	_WriteDataToEEPROM	;wreg free
  2754  000D02  D01A               	goto	l4479
  2755  000D04                     l4471:
  2756                           
  2757                           ;FRAME.c: 455:         {;FRAME.c: 456:             if(message->data[1])
  2758  000D04  EE20 F009          	lfsr	2,9
  2759  000D08  5031               	movf	FRAME_DeviceReset@message,w,c
  2760  000D0A  26D9               	addwf	fsr2l,f,c
  2761  000D0C  5032               	movf	FRAME_DeviceReset@message+1,w,c
  2762  000D0E  22DA               	addwfc	fsr2h,f,c
  2763  000D10  50DF               	movf	indf2,w,c
  2764  000D12  B4D8               	btfsc	status,2,c
  2765  000D14  D008               	goto	l4475
  2766                           
  2767                           ;FRAME.c: 457:             {;FRAME.c: 458:                 FRAME_DataUpdateAndChangeOpti
      +                          on(message);
  2768  000D16  C031  F028         	movff	FRAME_DeviceReset@message,FRAME_DataUpdateAndChangeOption@message
  2769  000D1A  C032  F029         	movff	FRAME_DeviceReset@message+1,FRAME_DataUpdateAndChangeOption@message+1
  2770  000D1E  EC06  F00B         	call	_FRAME_DataUpdateAndChangeOption	;wreg free
  2771                           
  2772                           ;FRAME.c: 459:                 WriteDataToEEPROM();
  2773  000D22  EC37  F007         	call	_WriteDataToEEPROM	;wreg free
  2774  000D26                     l4475:
  2775                           
  2776                           ;FRAME.c: 462:             if(message->data[0])
  2777  000D26  EE20 F008          	lfsr	2,8
  2778  000D2A  5031               	movf	FRAME_DeviceReset@message,w,c
  2779  000D2C  26D9               	addwf	fsr2l,f,c
  2780  000D2E  5032               	movf	FRAME_DeviceReset@message+1,w,c
  2781  000D30  22DA               	addwfc	fsr2h,f,c
  2782  000D32  50DF               	movf	indf2,w,c
  2783  000D34  A4D8               	btfss	status,2,c
  2784  000D36  00FF               	reset		;# 
  2785  000D38                     l4479:
  2786                           
  2787                           ;FRAME.c: 467:         message->data[0] = 0xFF;
  2788  000D38  EE20 F008          	lfsr	2,8
  2789  000D3C  5031               	movf	FRAME_DeviceReset@message,w,c
  2790  000D3E  26D9               	addwf	fsr2l,f,c
  2791  000D40  5032               	movf	FRAME_DeviceReset@message+1,w,c
  2792  000D42  22DA               	addwfc	fsr2h,f,c
  2793  000D44  0EFF               	movlw	255
  2794  000D46  6EDF               	movwf	indf2,c
  2795  000D48  0012               	return		;funcret
  2796  000D4A                     __end_of_FRAME_DeviceReset:
  2797                           	opt callstack 0
  2798                           
  2799 ;; *************** function _WriteDataToEEPROM *****************
  2800 ;; Defined at:
  2801 ;;		line 539 in file "FRAME.c"
  2802 ;; Parameters:    Size  Location     Type
  2803 ;;		None
  2804 ;; Auto vars:     Size  Location     Type
  2805 ;;		None
  2806 ;; Return value:  Size  Location     Type
  2807 ;;                  1    wreg      void 
  2808 ;; Registers used:
  2809 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2810 ;; Tracked objects:
  2811 ;;		On entry : 0/0
  2812 ;;		On exit  : 0/0
  2813 ;;		Unchanged: 0/0
  2814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2818 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2819 ;;Total ram usage:        0 bytes
  2820 ;; Hardware stack levels used:    1
  2821 ;; Hardware stack levels required when called:    5
  2822 ;; This function calls:
  2823 ;;		_NVMWrite
  2824 ;; This function is called by:
  2825 ;;		_FRAME_DeviceReset
  2826 ;; This function uses a non-reentrant model
  2827 ;;
  2828                           
  2829                           	psect	text19
  2830  000E6E                     __ptext19:
  2831                           	opt callstack 0
  2832  000E6E                     _WriteDataToEEPROM:
  2833                           	opt callstack 22
  2834                           
  2835                           ;FRAME.c: 541:     NVMWrite(&Init_Data,10,2);
  2836                           
  2837                           ;incstack = 0
  2838  000E6E  0E48               	movlw	low _Init_Data
  2839  000E70  6E2B               	movwf	NVMWrite@source,c
  2840  000E72  0E00               	movlw	high _Init_Data
  2841  000E74  6E2C               	movwf	NVMWrite@source+1,c
  2842  000E76  0E00               	movlw	0
  2843  000E78  6E2E               	movwf	NVMWrite@addr+1,c
  2844  000E7A  0E0A               	movlw	10
  2845  000E7C  6E2D               	movwf	NVMWrite@addr,c
  2846  000E7E  0E00               	movlw	0
  2847  000E80  6E30               	movwf	NVMWrite@count+1,c
  2848  000E82  0E02               	movlw	2
  2849  000E84  6E2F               	movwf	NVMWrite@count,c
  2850  000E86  EC54  F00C         	call	_NVMWrite	;wreg free
  2851                           
  2852                           ;FRAME.c: 542:     NVMWrite(&NeightAdress1,13,2);
  2853  000E8A  0E21               	movlw	low _NeightAdress1
  2854  000E8C  6E2B               	movwf	NVMWrite@source,c
  2855  000E8E  0E00               	movlw	high _NeightAdress1
  2856  000E90  6E2C               	movwf	NVMWrite@source+1,c
  2857  000E92  0E00               	movlw	0
  2858  000E94  6E2E               	movwf	NVMWrite@addr+1,c
  2859  000E96  0E0D               	movlw	13
  2860  000E98  6E2D               	movwf	NVMWrite@addr,c
  2861  000E9A  0E00               	movlw	0
  2862  000E9C  6E30               	movwf	NVMWrite@count+1,c
  2863  000E9E  0E02               	movlw	2
  2864  000EA0  6E2F               	movwf	NVMWrite@count,c
  2865  000EA2  EC54  F00C         	call	_NVMWrite	;wreg free
  2866                           
  2867                           ;FRAME.c: 543:     NVMWrite(&NeightAdress2,16,2);
  2868  000EA6  0E4A               	movlw	low _NeightAdress2
  2869  000EA8  6E2B               	movwf	NVMWrite@source,c
  2870  000EAA  0E00               	movlw	high _NeightAdress2
  2871  000EAC  6E2C               	movwf	NVMWrite@source+1,c
  2872  000EAE  0E00               	movlw	0
  2873  000EB0  6E2E               	movwf	NVMWrite@addr+1,c
  2874  000EB2  0E10               	movlw	16
  2875  000EB4  6E2D               	movwf	NVMWrite@addr,c
  2876  000EB6  0E00               	movlw	0
  2877  000EB8  6E30               	movwf	NVMWrite@count+1,c
  2878  000EBA  0E02               	movlw	2
  2879  000EBC  6E2F               	movwf	NVMWrite@count,c
  2880  000EBE  EC54  F00C         	call	_NVMWrite	;wreg free
  2881                           
  2882                           ;FRAME.c: 544:     NVMWrite(&NeightAdress3,19,2);
  2883  000EC2  0E1F               	movlw	low _NeightAdress3
  2884  000EC4  6E2B               	movwf	NVMWrite@source,c
  2885  000EC6  0E00               	movlw	high _NeightAdress3
  2886  000EC8  6E2C               	movwf	NVMWrite@source+1,c
  2887  000ECA  0E00               	movlw	0
  2888  000ECC  6E2E               	movwf	NVMWrite@addr+1,c
  2889  000ECE  0E13               	movlw	19
  2890  000ED0  6E2D               	movwf	NVMWrite@addr,c
  2891  000ED2  0E00               	movlw	0
  2892  000ED4  6E30               	movwf	NVMWrite@count+1,c
  2893  000ED6  0E02               	movlw	2
  2894  000ED8  6E2F               	movwf	NVMWrite@count,c
  2895  000EDA  EC54  F00C         	call	_NVMWrite	;wreg free
  2896                           
  2897                           ;FRAME.c: 545:     NVMWrite(&NeightAdress4,22,2);
  2898  000EDE  0E1D               	movlw	low _NeightAdress4
  2899  000EE0  6E2B               	movwf	NVMWrite@source,c
  2900  000EE2  0E00               	movlw	high _NeightAdress4
  2901  000EE4  6E2C               	movwf	NVMWrite@source+1,c
  2902  000EE6  0E00               	movlw	0
  2903  000EE8  6E2E               	movwf	NVMWrite@addr+1,c
  2904  000EEA  0E16               	movlw	22
  2905  000EEC  6E2D               	movwf	NVMWrite@addr,c
  2906  000EEE  0E00               	movlw	0
  2907  000EF0  6E30               	movwf	NVMWrite@count+1,c
  2908  000EF2  0E02               	movlw	2
  2909  000EF4  6E2F               	movwf	NVMWrite@count,c
  2910  000EF6  EC54  F00C         	call	_NVMWrite	;wreg free
  2911                           
  2912                           ;FRAME.c: 546:     NVMWrite(&NeightAdress5,25,2);
  2913  000EFA  0E1B               	movlw	low _NeightAdress5
  2914  000EFC  6E2B               	movwf	NVMWrite@source,c
  2915  000EFE  0E00               	movlw	high _NeightAdress5
  2916  000F00  6E2C               	movwf	NVMWrite@source+1,c
  2917  000F02  0E00               	movlw	0
  2918  000F04  6E2E               	movwf	NVMWrite@addr+1,c
  2919  000F06  0E19               	movlw	25
  2920  000F08  6E2D               	movwf	NVMWrite@addr,c
  2921  000F0A  0E00               	movlw	0
  2922  000F0C  6E30               	movwf	NVMWrite@count+1,c
  2923  000F0E  0E02               	movlw	2
  2924  000F10  6E2F               	movwf	NVMWrite@count,c
  2925  000F12  EC54  F00C         	call	_NVMWrite	;wreg free
  2926                           
  2927                           ;FRAME.c: 547:     NVMWrite(&NeightAdress6,28,2);
  2928  000F16  0E19               	movlw	low _NeightAdress6
  2929  000F18  6E2B               	movwf	NVMWrite@source,c
  2930  000F1A  0E00               	movlw	high _NeightAdress6
  2931  000F1C  6E2C               	movwf	NVMWrite@source+1,c
  2932  000F1E  0E00               	movlw	0
  2933  000F20  6E2E               	movwf	NVMWrite@addr+1,c
  2934  000F22  0E1C               	movlw	28
  2935  000F24  6E2D               	movwf	NVMWrite@addr,c
  2936  000F26  0E00               	movlw	0
  2937  000F28  6E30               	movwf	NVMWrite@count+1,c
  2938  000F2A  0E02               	movlw	2
  2939  000F2C  6E2F               	movwf	NVMWrite@count,c
  2940  000F2E  EC54  F00C         	call	_NVMWrite	;wreg free
  2941                           
  2942                           ;FRAME.c: 548:     NVMWrite(&NeightAdress7,31,2);
  2943  000F32  0E17               	movlw	low _NeightAdress7
  2944  000F34  6E2B               	movwf	NVMWrite@source,c
  2945  000F36  0E00               	movlw	high _NeightAdress7
  2946  000F38  6E2C               	movwf	NVMWrite@source+1,c
  2947  000F3A  0E00               	movlw	0
  2948  000F3C  6E2E               	movwf	NVMWrite@addr+1,c
  2949  000F3E  0E1F               	movlw	31
  2950  000F40  6E2D               	movwf	NVMWrite@addr,c
  2951  000F42  0E00               	movlw	0
  2952  000F44  6E30               	movwf	NVMWrite@count+1,c
  2953  000F46  0E02               	movlw	2
  2954  000F48  6E2F               	movwf	NVMWrite@count,c
  2955  000F4A  EC54  F00C         	call	_NVMWrite	;wreg free
  2956                           
  2957                           ;FRAME.c: 549:     NVMWrite(&NeightAdress8,34,2);
  2958  000F4E  0E15               	movlw	low _NeightAdress8
  2959  000F50  6E2B               	movwf	NVMWrite@source,c
  2960  000F52  0E00               	movlw	high _NeightAdress8
  2961  000F54  6E2C               	movwf	NVMWrite@source+1,c
  2962  000F56  0E00               	movlw	0
  2963  000F58  6E2E               	movwf	NVMWrite@addr+1,c
  2964  000F5A  0E22               	movlw	34
  2965  000F5C  6E2D               	movwf	NVMWrite@addr,c
  2966  000F5E  0E00               	movlw	0
  2967  000F60  6E30               	movwf	NVMWrite@count+1,c
  2968  000F62  0E02               	movlw	2
  2969  000F64  6E2F               	movwf	NVMWrite@count,c
  2970  000F66  EC54  F00C         	call	_NVMWrite	;wreg free
  2971  000F6A  0012               	return		;funcret
  2972  000F6C                     __end_of_WriteDataToEEPROM:
  2973                           	opt callstack 0
  2974                           
  2975 ;; *************** function _NVMWrite *****************
  2976 ;; Defined at:
  2977 ;;		line 148 in file "EEPROM.c"
  2978 ;; Parameters:    Size  Location     Type
  2979 ;;  source          2    8[COMRAM] PTR unsigned char 
  2980 ;;		 -> Init_Data(2), NeightAdress8(2), NeightAdress7(2), NeightAdress6(2), 
  2981 ;;		 -> NeightAdress5(2), NeightAdress4(2), NeightAdress3(2), NeightAdress2(2), 
  2982 ;;		 -> NeightAdress1(2), 
  2983 ;;  addr            2   10[COMRAM] unsigned short 
  2984 ;;  count           2   12[COMRAM] unsigned short 
  2985 ;; Auto vars:     Size  Location     Type
  2986 ;;		None
  2987 ;; Return value:  Size  Location     Type
  2988 ;;                  1    wreg      void 
  2989 ;; Registers used:
  2990 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2991 ;; Tracked objects:
  2992 ;;		On entry : 0/0
  2993 ;;		On exit  : 0/0
  2994 ;;		Unchanged: 0/0
  2995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2996 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2999 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3000 ;;Total ram usage:        6 bytes
  3001 ;; Hardware stack levels used:    1
  3002 ;; Hardware stack levels required when called:    4
  3003 ;; This function calls:
  3004 ;;		_WritetoEEPROM
  3005 ;; This function is called by:
  3006 ;;		_WriteDataToEEPROM
  3007 ;; This function uses a non-reentrant model
  3008 ;;
  3009                           
  3010                           	psect	text20
  3011  0018A8                     __ptext20:
  3012                           	opt callstack 0
  3013  0018A8                     _NVMWrite:
  3014                           	opt callstack 22
  3015                           
  3016                           ;EEPROM.c: 148: void NVMWrite(BYTE *source, WORD addr, WORD count);EEPROM.c: 149: {;EEPR
      +                          OM.c: 150:     while(count > 0)
  3017                           
  3018                           ;incstack = 0
  3019  0018A8  D015               	goto	l3999
  3020  0018AA                     l951:
  3021  0018AA  B2A6               	btfsc	4006,1,c	;volsfr
  3022  0018AC  D7FE               	goto	l951
  3023                           
  3024                           ;EEPROM.c: 153:         WritetoEEPROM(addr++,*source);
  3025  0018AE  C02D  F028         	movff	NVMWrite@addr,WritetoEEPROM@Address
  3026  0018B2  C02E  F029         	movff	NVMWrite@addr+1,WritetoEEPROM@Address+1
  3027  0018B6  C02B  FFD9         	movff	NVMWrite@source,fsr2l
  3028  0018BA  C02C  FFDA         	movff	NVMWrite@source+1,fsr2h
  3029  0018BE  50DF               	movf	indf2,w,c
  3030  0018C0  6E2A               	movwf	WritetoEEPROM@Data,c
  3031  0018C2  ECC0  F00C         	call	_WritetoEEPROM	;wreg free
  3032  0018C6  4A2D               	infsnz	NVMWrite@addr,f,c
  3033  0018C8  2A2E               	incf	NVMWrite@addr+1,f,c
  3034                           
  3035                           ;EEPROM.c: 154:         count--;
  3036  0018CA  062F               	decf	NVMWrite@count,f,c
  3037  0018CC  A0D8               	btfss	status,0,c
  3038  0018CE  0630               	decf	NVMWrite@count+1,f,c
  3039                           
  3040                           ;EEPROM.c: 155:         source++;
  3041  0018D0  4A2B               	infsnz	NVMWrite@source,f,c
  3042  0018D2  2A2C               	incf	NVMWrite@source+1,f,c
  3043  0018D4                     l3999:
  3044                           
  3045                           ;EEPROM.c: 150:     while(count > 0)
  3046  0018D4  502F               	movf	NVMWrite@count,w,c
  3047  0018D6  1030               	iorwf	NVMWrite@count+1,w,c
  3048  0018D8  B4D8               	btfsc	status,2,c
  3049  0018DA  0012               	return	
  3050  0018DC  D7E6               	goto	l951
  3051  0018DE                     __end_of_NVMWrite:
  3052                           	opt callstack 0
  3053                           
  3054 ;; *************** function _WritetoEEPROM *****************
  3055 ;; Defined at:
  3056 ;;		line 95 in file "EEPROM.c"
  3057 ;; Parameters:    Size  Location     Type
  3058 ;;  Address         2    5[COMRAM] unsigned short 
  3059 ;;  Data            1    7[COMRAM] unsigned char 
  3060 ;; Auto vars:     Size  Location     Type
  3061 ;;		None
  3062 ;; Return value:  Size  Location     Type
  3063 ;;                  1    wreg      void 
  3064 ;; Registers used:
  3065 ;;		wreg, status,2
  3066 ;; Tracked objects:
  3067 ;;		On entry : 0/0
  3068 ;;		On exit  : 0/0
  3069 ;;		Unchanged: 0/0
  3070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3071 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3074 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3075 ;;Total ram usage:        3 bytes
  3076 ;; Hardware stack levels used:    1
  3077 ;; Hardware stack levels required when called:    3
  3078 ;; This function calls:
  3079 ;;		Nothing
  3080 ;; This function is called by:
  3081 ;;		_NVMWrite
  3082 ;; This function uses a non-reentrant model
  3083 ;;
  3084                           
  3085                           	psect	text21
  3086  001980                     __ptext21:
  3087                           	opt callstack 0
  3088  001980                     _WritetoEEPROM:
  3089                           	opt callstack 22
  3090                           
  3091                           ;EEPROM.c: 95: static void WritetoEEPROM(WORD Address, BYTE Data);EEPROM.c: 96: {;EEPROM
      +                          .c: 97:     static BYTE GIE_Status;;EEPROM.c: 99:     EEADRH = (BYTE)(Address>>8);
  3092                           
  3093                           ;incstack = 0
  3094  001980  5029               	movf	WritetoEEPROM@Address+1,w,c
  3095  001982  6EAA               	movwf	4010,c	;volatile
  3096                           
  3097                           ;EEPROM.c: 100:     EEADR = (BYTE)Address;
  3098  001984  C028  FFA9         	movff	WritetoEEPROM@Address,4009	;volatile
  3099                           
  3100                           ;EEPROM.c: 101:     EEDATA = Data;
  3101  001988  C02A  FFA8         	movff	WritetoEEPROM@Data,4008	;volatile
  3102                           
  3103                           ;EEPROM.c: 102:     EECON1bits.WREN = 1;
  3104  00198C  84A6               	bsf	4006,2,c	;volsfr
  3105                           
  3106                           ;EEPROM.c: 103:     GIE_Status = INTCONbits.GIE;
  3107  00198E  0E00               	movlw	0
  3108  001990  BEF2               	btfsc	4082,7,c	;volatile
  3109  001992  0E01               	movlw	1
  3110  001994  6E0B               	movwf	WritetoEEPROM@GIE_Status,c
  3111                           
  3112                           ;EEPROM.c: 104:     INTCONbits.GIE = 0;
  3113  001996  9EF2               	bcf	4082,7,c	;volatile
  3114                           
  3115                           ;EEPROM.c: 105:     EECON2 = 0x55;
  3116  001998  0E55               	movlw	85
  3117  00199A  6EA7               	movwf	4007,c	;volsfr
  3118                           
  3119                           ;EEPROM.c: 106:     EECON2 = 0xAA;
  3120  00199C  0EAA               	movlw	170
  3121  00199E  6EA7               	movwf	4007,c	;volsfr
  3122                           
  3123                           ;EEPROM.c: 107:     EECON1bits.WR = 1;
  3124  0019A0  82A6               	bsf	4006,1,c	;volsfr
  3125                           
  3126                           ;EEPROM.c: 108:     INTCONbits.GIE = GIE_Status;
  3127  0019A2  B00B               	btfsc	WritetoEEPROM@GIE_Status,0,c
  3128  0019A4  D002               	bra	u2175
  3129  0019A6  9EF2               	bcf	4082,7,c	;volatile
  3130  0019A8  D001               	bra	u2176
  3131  0019AA                     u2175:
  3132  0019AA  8EF2               	bsf	4082,7,c	;volatile
  3133  0019AC                     u2176:
  3134                           
  3135                           ;EEPROM.c: 109:     EECON1bits.WREN = 0;
  3136  0019AC  94A6               	bcf	4006,2,c	;volsfr
  3137  0019AE                     l934:
  3138  0019AE  B2A6               	btfsc	4006,1,c	;volsfr
  3139  0019B0  D7FE               	goto	l934
  3140  0019B2  0012               	return	
  3141  0019B4                     __end_of_WritetoEEPROM:
  3142                           	opt callstack 0
  3143                           
  3144 ;; *************** function _FRAME_DataUpdateAndChangeOption *****************
  3145 ;; Defined at:
  3146 ;;		line 390 in file "FRAME.c"
  3147 ;; Parameters:    Size  Location     Type
  3148 ;;  message         2    5[COMRAM] PTR struct .
  3149 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3150 ;; Auto vars:     Size  Location     Type
  3151 ;;		None
  3152 ;; Return value:  Size  Location     Type
  3153 ;;                  1    wreg      void 
  3154 ;; Registers used:
  3155 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3156 ;; Tracked objects:
  3157 ;;		On entry : 0/0
  3158 ;;		On exit  : 0/0
  3159 ;;		Unchanged: 0/0
  3160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3161 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3163 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3164 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3165 ;;Total ram usage:        3 bytes
  3166 ;; Hardware stack levels used:    1
  3167 ;; Hardware stack levels required when called:    3
  3168 ;; This function calls:
  3169 ;;		Nothing
  3170 ;; This function is called by:
  3171 ;;		_FRAME_DeviceReset
  3172 ;; This function uses a non-reentrant model
  3173 ;;
  3174                           
  3175                           	psect	text22
  3176  00160C                     __ptext22:
  3177                           	opt callstack 0
  3178  00160C                     _FRAME_DataUpdateAndChangeOption:
  3179                           	opt callstack 24
  3180                           
  3181                           ;FRAME.c: 390: static void FRAME_DataUpdateAndChangeOption(mID *message);FRAME.c: 391: {
      +                          ;FRAME.c: 393:     Dane->rokU16 = message->data[4];
  3182                           
  3183                           ;incstack = 0
  3184  00160C  EE20 F00C          	lfsr	2,12
  3185  001610  5028               	movf	FRAME_DataUpdateAndChangeOption@message,w,c
  3186  001612  26D9               	addwf	fsr2l,f,c
  3187  001614  5029               	movf	FRAME_DataUpdateAndChangeOption@message+1,w,c
  3188  001616  22DA               	addwfc	fsr2h,f,c
  3189  001618  50DF               	movf	indf2,w,c
  3190  00161A  6E2A               	movwf	??_FRAME_DataUpdateAndChangeOption& (0+255),c
  3191  00161C  502A               	movf	??_FRAME_DataUpdateAndChangeOption,w,c
  3192  00161E  6E36               	movwf	54,c
  3193  001620  6A37               	clrf	55,c
  3194                           
  3195                           ;FRAME.c: 394:     Dane->miesiacU16 = message->data[5];
  3196  001622  EE20 F00D          	lfsr	2,13
  3197  001626  5028               	movf	FRAME_DataUpdateAndChangeOption@message,w,c
  3198  001628  26D9               	addwf	fsr2l,f,c
  3199  00162A  5029               	movf	FRAME_DataUpdateAndChangeOption@message+1,w,c
  3200  00162C  22DA               	addwfc	fsr2h,f,c
  3201  00162E  50DF               	movf	indf2,w,c
  3202  001630  6E2A               	movwf	??_FRAME_DataUpdateAndChangeOption& (0+255),c
  3203  001632  502A               	movf	??_FRAME_DataUpdateAndChangeOption,w,c
  3204  001634  6E38               	movwf	56,c
  3205  001636  6A39               	clrf	57,c
  3206                           
  3207                           ;FRAME.c: 395:     Dane->dzienU16 = message->data[6];
  3208  001638  EE20 F00E          	lfsr	2,14
  3209  00163C  5028               	movf	FRAME_DataUpdateAndChangeOption@message,w,c
  3210  00163E  26D9               	addwf	fsr2l,f,c
  3211  001640  5029               	movf	FRAME_DataUpdateAndChangeOption@message+1,w,c
  3212  001642  22DA               	addwfc	fsr2h,f,c
  3213  001644  50DF               	movf	indf2,w,c
  3214  001646  6E2A               	movwf	??_FRAME_DataUpdateAndChangeOption& (0+255),c
  3215  001648  502A               	movf	??_FRAME_DataUpdateAndChangeOption,w,c
  3216  00164A  6E3A               	movwf	58,c
  3217  00164C  6A3B               	clrf	59,c
  3218                           
  3219                           ;FRAME.c: 396:     Dane->godzinaU16 = message->data[7];
  3220  00164E  EE20 F00F          	lfsr	2,15
  3221  001652  5028               	movf	FRAME_DataUpdateAndChangeOption@message,w,c
  3222  001654  26D9               	addwf	fsr2l,f,c
  3223  001656  5029               	movf	FRAME_DataUpdateAndChangeOption@message+1,w,c
  3224  001658  22DA               	addwfc	fsr2h,f,c
  3225  00165A  50DF               	movf	indf2,w,c
  3226  00165C  6E2A               	movwf	??_FRAME_DataUpdateAndChangeOption& (0+255),c
  3227  00165E  502A               	movf	??_FRAME_DataUpdateAndChangeOption,w,c
  3228  001660  6E3C               	movwf	60,c
  3229  001662  6A3D               	clrf	61,c
  3230  001664  0012               	return		;funcret
  3231  001666                     __end_of_FRAME_DataUpdateAndChangeOption:
  3232                           	opt callstack 0
  3233                           
  3234 ;; *************** function _FRAME_AxisStatus *****************
  3235 ;; Defined at:
  3236 ;;		line 354 in file "FRAME.c"
  3237 ;; Parameters:    Size  Location     Type
  3238 ;;  message         2    5[COMRAM] PTR struct .
  3239 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3240 ;; Auto vars:     Size  Location     Type
  3241 ;;  i               2    0        unsigned short 
  3242 ;; Return value:  Size  Location     Type
  3243 ;;                  1    wreg      void 
  3244 ;; Registers used:
  3245 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3246 ;; Tracked objects:
  3247 ;;		On entry : 0/0
  3248 ;;		On exit  : 0/0
  3249 ;;		Unchanged: 0/0
  3250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3251 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3253 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3254 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3255 ;;Total ram usage:        3 bytes
  3256 ;; Hardware stack levels used:    1
  3257 ;; Hardware stack levels required when called:    3
  3258 ;; This function calls:
  3259 ;;		Nothing
  3260 ;; This function is called by:
  3261 ;;		_FRAME_HandleCanFrame
  3262 ;; This function uses a non-reentrant model
  3263 ;;
  3264                           
  3265                           	psect	text23
  3266  0018DE                     __ptext23:
  3267                           	opt callstack 0
  3268  0018DE                     _FRAME_AxisStatus:
  3269                           	opt callstack 25
  3270                           
  3271                           ;FRAME.c: 354: static void FRAME_AxisStatus(mID *message);FRAME.c: 355: {;FRAME.c: 356: 
      +                              WORD i;;FRAME.c: 358:     if(message->message_type == 0x02)
  3272                           
  3273                           ;incstack = 0
  3274  0018DE  EE20 F001          	lfsr	2,1
  3275  0018E2  5028               	movf	FRAME_AxisStatus@message,w,c
  3276  0018E4  26D9               	addwf	fsr2l,f,c
  3277  0018E6  5029               	movf	FRAME_AxisStatus@message+1,w,c
  3278  0018E8  22DA               	addwfc	fsr2h,f,c
  3279  0018EA  0E02               	movlw	2
  3280  0018EC  18DE               	xorwf	postinc2,w,c
  3281  0018EE  A4D8               	btfss	status,2,c
  3282  0018F0  0012               	return	
  3283                           
  3284                           ;FRAME.c: 359:     {;FRAME.c: 360:         message->data_length = 1;
  3285  0018F2  EE20 F010          	lfsr	2,16
  3286  0018F6  5028               	movf	FRAME_AxisStatus@message,w,c
  3287  0018F8  26D9               	addwf	fsr2l,f,c
  3288  0018FA  5029               	movf	FRAME_AxisStatus@message+1,w,c
  3289  0018FC  22DA               	addwfc	fsr2h,f,c
  3290  0018FE  0E01               	movlw	1
  3291  001900  6EDF               	movwf	indf2,c
  3292                           
  3293                           ;FRAME.c: 371:         message->data[0] = 0xFF;
  3294  001902  EE20 F008          	lfsr	2,8
  3295  001906  5028               	movf	FRAME_AxisStatus@message,w,c
  3296  001908  26D9               	addwf	fsr2l,f,c
  3297  00190A  5029               	movf	FRAME_AxisStatus@message+1,w,c
  3298  00190C  22DA               	addwfc	fsr2h,f,c
  3299  00190E  0EFF               	movlw	255
  3300  001910  6EDF               	movwf	indf2,c
  3301                           
  3302                           ;FRAME.c: 372:     }
  3303  001912  0012               	return		;funcret
  3304  001914                     __end_of_FRAME_AxisStatus:
  3305                           	opt callstack 0
  3306                           
  3307 ;; *************** function _FRAME_AveragingTimes *****************
  3308 ;; Defined at:
  3309 ;;		line 290 in file "FRAME.c"
  3310 ;; Parameters:    Size  Location     Type
  3311 ;;  message         2    5[COMRAM] PTR struct .
  3312 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3313 ;; Auto vars:     Size  Location     Type
  3314 ;;		None
  3315 ;; Return value:  Size  Location     Type
  3316 ;;                  1    wreg      void 
  3317 ;; Registers used:
  3318 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3319 ;; Tracked objects:
  3320 ;;		On entry : 0/0
  3321 ;;		On exit  : 0/0
  3322 ;;		Unchanged: 0/0
  3323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3324 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3326 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3327 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3328 ;;Total ram usage:        3 bytes
  3329 ;; Hardware stack levels used:    1
  3330 ;; Hardware stack levels required when called:    3
  3331 ;; This function calls:
  3332 ;;		Nothing
  3333 ;; This function is called by:
  3334 ;;		_FRAME_HandleCanFrame
  3335 ;; This function uses a non-reentrant model
  3336 ;;
  3337                           
  3338                           	psect	text24
  3339  001914                     __ptext24:
  3340                           	opt callstack 0
  3341  001914                     _FRAME_AveragingTimes:
  3342                           	opt callstack 25
  3343                           
  3344                           ;FRAME.c: 290: static void FRAME_AveragingTimes(mID *message);FRAME.c: 291: {;FRAME.c: 2
      +                          92:     if(message->message_type == 0x02)
  3345                           
  3346                           ;incstack = 0
  3347  001914  EE20 F001          	lfsr	2,1
  3348  001918  5028               	movf	FRAME_AveragingTimes@message,w,c
  3349  00191A  26D9               	addwf	fsr2l,f,c
  3350  00191C  5029               	movf	FRAME_AveragingTimes@message+1,w,c
  3351  00191E  22DA               	addwfc	fsr2h,f,c
  3352  001920  0E02               	movlw	2
  3353  001922  18DE               	xorwf	postinc2,w,c
  3354  001924  A4D8               	btfss	status,2,c
  3355  001926  0012               	return	
  3356                           
  3357                           ;FRAME.c: 293:     {;FRAME.c: 294:         message->data_length = 1;
  3358  001928  EE20 F010          	lfsr	2,16
  3359  00192C  5028               	movf	FRAME_AveragingTimes@message,w,c
  3360  00192E  26D9               	addwf	fsr2l,f,c
  3361  001930  5029               	movf	FRAME_AveragingTimes@message+1,w,c
  3362  001932  22DA               	addwfc	fsr2h,f,c
  3363  001934  0E01               	movlw	1
  3364  001936  6EDF               	movwf	indf2,c
  3365                           
  3366                           ;FRAME.c: 302:         message->data[0] = 0xFF;
  3367  001938  EE20 F008          	lfsr	2,8
  3368  00193C  5028               	movf	FRAME_AveragingTimes@message,w,c
  3369  00193E  26D9               	addwf	fsr2l,f,c
  3370  001940  5029               	movf	FRAME_AveragingTimes@message+1,w,c
  3371  001942  22DA               	addwfc	fsr2h,f,c
  3372  001944  0EFF               	movlw	255
  3373  001946  6EDF               	movwf	indf2,c
  3374                           
  3375                           ;FRAME.c: 303:     }
  3376  001948  0012               	return		;funcret
  3377  00194A                     __end_of_FRAME_AveragingTimes:
  3378                           	opt callstack 0
  3379                           
  3380 ;; *************** function _FRAME_AnalogValue *****************
  3381 ;; Defined at:
  3382 ;;		line 648 in file "FRAME.c"
  3383 ;; Parameters:    Size  Location     Type
  3384 ;;  message         2    5[COMRAM] PTR struct .
  3385 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3386 ;;  set             2    7[COMRAM] unsigned short 
  3387 ;; Auto vars:     Size  Location     Type
  3388 ;;  i               2    0        unsigned short 
  3389 ;; Return value:  Size  Location     Type
  3390 ;;                  1    wreg      void 
  3391 ;; Registers used:
  3392 ;;		None
  3393 ;; Tracked objects:
  3394 ;;		On entry : 0/0
  3395 ;;		On exit  : 0/0
  3396 ;;		Unchanged: 0/0
  3397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3398 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3401 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3402 ;;Total ram usage:        4 bytes
  3403 ;; Hardware stack levels used:    1
  3404 ;; Hardware stack levels required when called:    3
  3405 ;; This function calls:
  3406 ;;		Nothing
  3407 ;; This function is called by:
  3408 ;;		_FRAME_HandleCanFrame
  3409 ;; This function uses a non-reentrant model
  3410 ;;
  3411                           
  3412                           	psect	text25
  3413  001BD2                     __ptext25:
  3414                           	opt callstack 0
  3415  001BD2                     _FRAME_AnalogValue:
  3416                           	opt callstack 25
  3417                           
  3418                           ;incstack = 0
  3419  001BD2  0012               	return		;funcret
  3420  001BD4                     __end_of_FRAME_AnalogValue:
  3421                           	opt callstack 0
  3422                           
  3423 ;; *************** function _FRAME_AdressOfNeighbors *****************
  3424 ;; Defined at:
  3425 ;;		line 706 in file "FRAME.c"
  3426 ;; Parameters:    Size  Location     Type
  3427 ;;  message         2    5[COMRAM] PTR struct .
  3428 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3429 ;;  nrRamki         2    7[COMRAM] unsigned short 
  3430 ;; Auto vars:     Size  Location     Type
  3431 ;;  kier            2   13[COMRAM] unsigned short 
  3432 ;;  it              2    0        unsigned short 
  3433 ;; Return value:  Size  Location     Type
  3434 ;;                  1    wreg      void 
  3435 ;; Registers used:
  3436 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3437 ;; Tracked objects:
  3438 ;;		On entry : 0/0
  3439 ;;		On exit  : 0/0
  3440 ;;		Unchanged: 0/0
  3441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3442 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3443 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3444 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3445 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3446 ;;Total ram usage:       10 bytes
  3447 ;; Hardware stack levels used:    1
  3448 ;; Hardware stack levels required when called:    4
  3449 ;; This function calls:
  3450 ;;		_CAN_SetupFilter_Ne
  3451 ;; This function is called by:
  3452 ;;		_FRAME_HandleCanFrame
  3453 ;; This function uses a non-reentrant model
  3454 ;;
  3455                           
  3456                           	psect	text26
  3457  000062                     __ptext26:
  3458                           	opt callstack 0
  3459  000062                     _FRAME_AdressOfNeighbors:
  3460                           	opt callstack 24
  3461                           
  3462                           ;FRAME.c: 706: static void FRAME_AdressOfNeighbors(mID *message, WORD nrRamki);FRAME.c: 
      +                          707: {;FRAME.c: 708:     WORD it;;FRAME.c: 711:     WORD kier = (nrRamki-0x10);
  3463                           
  3464                           ;incstack = 0
  3465  000062  0EF0               	movlw	240
  3466  000064  242A               	addwf	FRAME_AdressOfNeighbors@nrRamki,w,c
  3467  000066  6E30               	movwf	FRAME_AdressOfNeighbors@kier,c
  3468  000068  0EFF               	movlw	255
  3469  00006A  202B               	addwfc	FRAME_AdressOfNeighbors@nrRamki+1,w,c
  3470  00006C  6E31               	movwf	FRAME_AdressOfNeighbors@kier+1,c
  3471                           
  3472                           ;FRAME.c: 712:     if(message->message_type == 0x02)
  3473  00006E  EE20 F001          	lfsr	2,1
  3474  000072  5028               	movf	FRAME_AdressOfNeighbors@message,w,c
  3475  000074  26D9               	addwf	fsr2l,f,c
  3476  000076  5029               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3477  000078  22DA               	addwfc	fsr2h,f,c
  3478  00007A  0E02               	movlw	2
  3479  00007C  18DE               	xorwf	postinc2,w,c
  3480  00007E  A4D8               	btfss	status,2,c
  3481  000080  D08E               	goto	l4509
  3482                           
  3483                           ;FRAME.c: 713:     {;FRAME.c: 715:         message->data_length = 8;
  3484  000082  EE20 F010          	lfsr	2,16
  3485  000086  5028               	movf	FRAME_AdressOfNeighbors@message,w,c
  3486  000088  26D9               	addwf	fsr2l,f,c
  3487  00008A  5029               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3488  00008C  22DA               	addwfc	fsr2h,f,c
  3489  00008E  0E08               	movlw	8
  3490  000090  6EDF               	movwf	indf2,c
  3491                           
  3492                           ;FRAME.c: 717:         if(kier == 0)
  3493  000092  5030               	movf	FRAME_AdressOfNeighbors@kier,w,c
  3494  000094  1031               	iorwf	FRAME_AdressOfNeighbors@kier+1,w,c
  3495  000096  A4D8               	btfss	status,2,c
  3496  000098  D041               	goto	l4507
  3497                           
  3498                           ;FRAME.c: 718:         {;FRAME.c: 719:         message->data[0] = (NeightAdress1>> 8);
  3499  00009A  EE20 F008          	lfsr	2,8
  3500  00009E  5028               	movf	FRAME_AdressOfNeighbors@message,w,c
  3501  0000A0  26D9               	addwf	fsr2l,f,c
  3502  0000A2  5029               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3503  0000A4  22DA               	addwfc	fsr2h,f,c
  3504  0000A6  5022               	movf	_NeightAdress1+1,w,c	;volatile
  3505  0000A8  6EDF               	movwf	indf2,c
  3506                           
  3507                           ;FRAME.c: 720:         message->data[1] = NeightAdress1 & 0b11111111;
  3508  0000AA  EE20 F009          	lfsr	2,9
  3509  0000AE  5028               	movf	FRAME_AdressOfNeighbors@message,w,c
  3510  0000B0  26D9               	addwf	fsr2l,f,c
  3511  0000B2  5029               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3512  0000B4  22DA               	addwfc	fsr2h,f,c
  3513  0000B6  C021  FFDF         	movff	_NeightAdress1,indf2	;volatile
  3514                           
  3515                           ;FRAME.c: 721:         message->data[2] = (NeightAdress2>> 8);
  3516  0000BA  EE20 F00A          	lfsr	2,10
  3517  0000BE  5028               	movf	FRAME_AdressOfNeighbors@message,w,c
  3518  0000C0  26D9               	addwf	fsr2l,f,c
  3519  0000C2  5029               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3520  0000C4  22DA               	addwfc	fsr2h,f,c
  3521  0000C6  504B               	movf	_NeightAdress2+1,w,c	;volatile
  3522  0000C8  6EDF               	movwf	indf2,c
  3523                           
  3524                           ;FRAME.c: 722:         message->data[3] = NeightAdress2 & 0b11111111;
  3525  0000CA  EE20 F00B          	lfsr	2,11
  3526  0000CE  5028               	movf	FRAME_AdressOfNeighbors@message,w,c
  3527  0000D0  26D9               	addwf	fsr2l,f,c
  3528  0000D2  5029               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3529  0000D4  22DA               	addwfc	fsr2h,f,c
  3530  0000D6  C04A  FFDF         	movff	_NeightAdress2,indf2	;volatile
  3531                           
  3532                           ;FRAME.c: 723:         message->data[4] = (NeightAdress3>> 8);
  3533  0000DA  EE20 F00C          	lfsr	2,12
  3534  0000DE  5028               	movf	FRAME_AdressOfNeighbors@message,w,c
  3535  0000E0  26D9               	addwf	fsr2l,f,c
  3536  0000E2  5029               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3537  0000E4  22DA               	addwfc	fsr2h,f,c
  3538  0000E6  5020               	movf	_NeightAdress3+1,w,c	;volatile
  3539  0000E8  6EDF               	movwf	indf2,c
  3540                           
  3541                           ;FRAME.c: 724:         message->data[5] = NeightAdress3 & 0b11111111;
  3542  0000EA  EE20 F00D          	lfsr	2,13
  3543  0000EE  5028               	movf	FRAME_AdressOfNeighbors@message,w,c
  3544  0000F0  26D9               	addwf	fsr2l,f,c
  3545  0000F2  5029               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3546  0000F4  22DA               	addwfc	fsr2h,f,c
  3547  0000F6  C01F  FFDF         	movff	_NeightAdress3,indf2	;volatile
  3548                           
  3549                           ;FRAME.c: 725:         message->data[6] = (NeightAdress4>> 8);
  3550  0000FA  EE20 F00E          	lfsr	2,14
  3551  0000FE  5028               	movf	FRAME_AdressOfNeighbors@message,w,c
  3552  000100  26D9               	addwf	fsr2l,f,c
  3553  000102  5029               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3554  000104  22DA               	addwfc	fsr2h,f,c
  3555  000106  501E               	movf	_NeightAdress4+1,w,c	;volatile
  3556  000108  6EDF               	movwf	indf2,c
  3557                           
  3558                           ;FRAME.c: 726:         message->data[7] = NeightAdress4 & 0b11111111;
  3559  00010A  EE20 F00F          	lfsr	2,15
  3560  00010E  5028               	movf	FRAME_AdressOfNeighbors@message,w,c
  3561  000110  26D9               	addwf	fsr2l,f,c
  3562  000112  5029               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3563  000114  22DA               	addwfc	fsr2h,f,c
  3564  000116  C01D  FFDF         	movff	_NeightAdress4,indf2	;volatile
  3565                           
  3566                           ;FRAME.c: 727:         }
  3567  00011A  0012               	return	
  3568  00011C                     l4507:
  3569                           
  3570                           ;FRAME.c: 729:         {;FRAME.c: 730:         message->data[0] = (NeightAdress5>> 8);
  3571  00011C  EE20 F008          	lfsr	2,8
  3572  000120  5028               	movf	FRAME_AdressOfNeighbors@message,w,c
  3573  000122  26D9               	addwf	fsr2l,f,c
  3574  000124  5029               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3575  000126  22DA               	addwfc	fsr2h,f,c
  3576  000128  501C               	movf	_NeightAdress5+1,w,c	;volatile
  3577  00012A  6EDF               	movwf	indf2,c
  3578                           
  3579                           ;FRAME.c: 731:         message->data[1] = NeightAdress5 & 0b11111111;
  3580  00012C  EE20 F009          	lfsr	2,9
  3581  000130  5028               	movf	FRAME_AdressOfNeighbors@message,w,c
  3582  000132  26D9               	addwf	fsr2l,f,c
  3583  000134  5029               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3584  000136  22DA               	addwfc	fsr2h,f,c
  3585  000138  C01B  FFDF         	movff	_NeightAdress5,indf2	;volatile
  3586                           
  3587                           ;FRAME.c: 732:         message->data[2] = (NeightAdress6>> 8);
  3588  00013C  EE20 F00A          	lfsr	2,10
  3589  000140  5028               	movf	FRAME_AdressOfNeighbors@message,w,c
  3590  000142  26D9               	addwf	fsr2l,f,c
  3591  000144  5029               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3592  000146  22DA               	addwfc	fsr2h,f,c
  3593  000148  501A               	movf	_NeightAdress6+1,w,c	;volatile
  3594  00014A  6EDF               	movwf	indf2,c
  3595                           
  3596                           ;FRAME.c: 733:         message->data[3] = NeightAdress6 & 0b11111111;
  3597  00014C  EE20 F00B          	lfsr	2,11
  3598  000150  5028               	movf	FRAME_AdressOfNeighbors@message,w,c
  3599  000152  26D9               	addwf	fsr2l,f,c
  3600  000154  5029               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3601  000156  22DA               	addwfc	fsr2h,f,c
  3602  000158  C019  FFDF         	movff	_NeightAdress6,indf2	;volatile
  3603                           
  3604                           ;FRAME.c: 734:         message->data[4] = (NeightAdress7>> 8);
  3605  00015C  EE20 F00C          	lfsr	2,12
  3606  000160  5028               	movf	FRAME_AdressOfNeighbors@message,w,c
  3607  000162  26D9               	addwf	fsr2l,f,c
  3608  000164  5029               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3609  000166  22DA               	addwfc	fsr2h,f,c
  3610  000168  5018               	movf	_NeightAdress7+1,w,c	;volatile
  3611  00016A  6EDF               	movwf	indf2,c
  3612                           
  3613                           ;FRAME.c: 735:         message->data[5] = NeightAdress7 & 0b11111111;
  3614  00016C  EE20 F00D          	lfsr	2,13
  3615  000170  5028               	movf	FRAME_AdressOfNeighbors@message,w,c
  3616  000172  26D9               	addwf	fsr2l,f,c
  3617  000174  5029               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3618  000176  22DA               	addwfc	fsr2h,f,c
  3619  000178  C017  FFDF         	movff	_NeightAdress7,indf2	;volatile
  3620                           
  3621                           ;FRAME.c: 736:         message->data[6] = (NeightAdress8>> 8);
  3622  00017C  EE20 F00E          	lfsr	2,14
  3623  000180  5028               	movf	FRAME_AdressOfNeighbors@message,w,c
  3624  000182  26D9               	addwf	fsr2l,f,c
  3625  000184  5029               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3626  000186  22DA               	addwfc	fsr2h,f,c
  3627  000188  5016               	movf	_NeightAdress8+1,w,c	;volatile
  3628  00018A  6EDF               	movwf	indf2,c
  3629                           
  3630                           ;FRAME.c: 737:         message->data[7] = NeightAdress8 & 0b11111111;
  3631  00018C  EE20 F00F          	lfsr	2,15
  3632  000190  5028               	movf	FRAME_AdressOfNeighbors@message,w,c
  3633  000192  26D9               	addwf	fsr2l,f,c
  3634  000194  5029               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3635  000196  22DA               	addwfc	fsr2h,f,c
  3636  000198  C015  FFDF         	movff	_NeightAdress8,indf2	;volatile
  3637  00019C  0012               	return	
  3638  00019E                     l4509:
  3639                           
  3640                           ;FRAME.c: 744:     {;FRAME.c: 747:         if(kier == 0)
  3641  00019E  5030               	movf	FRAME_AdressOfNeighbors@kier,w,c
  3642  0001A0  1031               	iorwf	FRAME_AdressOfNeighbors@kier+1,w,c
  3643  0001A2  A4D8               	btfss	status,2,c
  3644  0001A4  D063               	goto	l4515
  3645                           
  3646                           ;FRAME.c: 748:         {;FRAME.c: 749:          NeightAdress1 = (message->data[0] << 8)|
      +                           message->data[1];
  3647  0001A6  EE20 F008          	lfsr	2,8
  3648  0001AA  5028               	movf	FRAME_AdressOfNeighbors@message,w,c
  3649  0001AC  26D9               	addwf	fsr2l,f,c
  3650  0001AE  5029               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3651  0001B0  22DA               	addwfc	fsr2h,f,c
  3652  0001B2  50DF               	movf	indf2,w,c
  3653  0001B4  6E2C               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3654  0001B6  502C               	movf	??_FRAME_AdressOfNeighbors,w,c
  3655  0001B8  6E2E               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3656  0001BA  6A2D               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3657  0001BC  EE20 F009          	lfsr	2,9
  3658  0001C0  5028               	movf	FRAME_AdressOfNeighbors@message,w,c
  3659  0001C2  26D9               	addwf	fsr2l,f,c
  3660  0001C4  5029               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3661  0001C6  22DA               	addwfc	fsr2h,f,c
  3662  0001C8  50DF               	movf	indf2,w,c
  3663  0001CA  6E2F               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3664  0001CC  502F               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3665  0001CE  102D               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3666  0001D0  6E21               	movwf	_NeightAdress1,c	;volatile
  3667  0001D2  502E               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3668  0001D4  6E22               	movwf	_NeightAdress1+1,c	;volatile
  3669                           
  3670                           ;FRAME.c: 750:          NeightAdress2 = (message->data[2] << 8)| message->data[3];
  3671  0001D6  EE20 F00A          	lfsr	2,10
  3672  0001DA  5028               	movf	FRAME_AdressOfNeighbors@message,w,c
  3673  0001DC  26D9               	addwf	fsr2l,f,c
  3674  0001DE  5029               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3675  0001E0  22DA               	addwfc	fsr2h,f,c
  3676  0001E2  50DF               	movf	indf2,w,c
  3677  0001E4  6E2C               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3678  0001E6  502C               	movf	??_FRAME_AdressOfNeighbors,w,c
  3679  0001E8  6E2E               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3680  0001EA  6A2D               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3681  0001EC  EE20 F00B          	lfsr	2,11
  3682  0001F0  5028               	movf	FRAME_AdressOfNeighbors@message,w,c
  3683  0001F2  26D9               	addwf	fsr2l,f,c
  3684  0001F4  5029               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3685  0001F6  22DA               	addwfc	fsr2h,f,c
  3686  0001F8  50DF               	movf	indf2,w,c
  3687  0001FA  6E2F               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3688  0001FC  502F               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3689  0001FE  102D               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3690  000200  6E4A               	movwf	_NeightAdress2,c	;volatile
  3691  000202  502E               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3692  000204  6E4B               	movwf	_NeightAdress2+1,c	;volatile
  3693                           
  3694                           ;FRAME.c: 751:          NeightAdress3 = (message->data[4] << 8)| message->data[5];
  3695  000206  EE20 F00C          	lfsr	2,12
  3696  00020A  5028               	movf	FRAME_AdressOfNeighbors@message,w,c
  3697  00020C  26D9               	addwf	fsr2l,f,c
  3698  00020E  5029               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3699  000210  22DA               	addwfc	fsr2h,f,c
  3700  000212  50DF               	movf	indf2,w,c
  3701  000214  6E2C               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3702  000216  502C               	movf	??_FRAME_AdressOfNeighbors,w,c
  3703  000218  6E2E               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3704  00021A  6A2D               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3705  00021C  EE20 F00D          	lfsr	2,13
  3706  000220  5028               	movf	FRAME_AdressOfNeighbors@message,w,c
  3707  000222  26D9               	addwf	fsr2l,f,c
  3708  000224  5029               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3709  000226  22DA               	addwfc	fsr2h,f,c
  3710  000228  50DF               	movf	indf2,w,c
  3711  00022A  6E2F               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3712  00022C  502F               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3713  00022E  102D               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3714  000230  6E1F               	movwf	_NeightAdress3,c	;volatile
  3715  000232  502E               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3716  000234  6E20               	movwf	_NeightAdress3+1,c	;volatile
  3717                           
  3718                           ;FRAME.c: 752:          NeightAdress4 = (message->data[6] << 8)| message->data[7];
  3719  000236  EE20 F00E          	lfsr	2,14
  3720  00023A  5028               	movf	FRAME_AdressOfNeighbors@message,w,c
  3721  00023C  26D9               	addwf	fsr2l,f,c
  3722  00023E  5029               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3723  000240  22DA               	addwfc	fsr2h,f,c
  3724  000242  50DF               	movf	indf2,w,c
  3725  000244  6E2C               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3726  000246  502C               	movf	??_FRAME_AdressOfNeighbors,w,c
  3727  000248  6E2E               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3728  00024A  6A2D               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3729  00024C  EE20 F00F          	lfsr	2,15
  3730  000250  5028               	movf	FRAME_AdressOfNeighbors@message,w,c
  3731  000252  26D9               	addwf	fsr2l,f,c
  3732  000254  5029               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3733  000256  22DA               	addwfc	fsr2h,f,c
  3734  000258  50DF               	movf	indf2,w,c
  3735  00025A  6E2F               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3736  00025C  502F               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3737  00025E  102D               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3738  000260  6E1D               	movwf	_NeightAdress4,c	;volatile
  3739  000262  502E               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3740  000264  6E1E               	movwf	_NeightAdress4+1,c	;volatile
  3741  000266                     l4513:
  3742                           
  3743                           ;FRAME.c: 753:          CAN_SetupFilter_Ne();
  3744  000266  ECC2  F008         	call	_CAN_SetupFilter_Ne	;wreg free
  3745                           
  3746                           ;FRAME.c: 756:         }
  3747  00026A  0012               	return	
  3748  00026C                     l4515:
  3749                           
  3750                           ;FRAME.c: 758:         {;FRAME.c: 759:          NeightAdress5 = (message->data[0] << 8)|
      +                           message->data[1];
  3751  00026C  EE20 F008          	lfsr	2,8
  3752  000270  5028               	movf	FRAME_AdressOfNeighbors@message,w,c
  3753  000272  26D9               	addwf	fsr2l,f,c
  3754  000274  5029               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3755  000276  22DA               	addwfc	fsr2h,f,c
  3756  000278  50DF               	movf	indf2,w,c
  3757  00027A  6E2C               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3758  00027C  502C               	movf	??_FRAME_AdressOfNeighbors,w,c
  3759  00027E  6E2E               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3760  000280  6A2D               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3761  000282  EE20 F009          	lfsr	2,9
  3762  000286  5028               	movf	FRAME_AdressOfNeighbors@message,w,c
  3763  000288  26D9               	addwf	fsr2l,f,c
  3764  00028A  5029               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3765  00028C  22DA               	addwfc	fsr2h,f,c
  3766  00028E  50DF               	movf	indf2,w,c
  3767  000290  6E2F               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3768  000292  502F               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3769  000294  102D               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3770  000296  6E1B               	movwf	_NeightAdress5,c	;volatile
  3771  000298  502E               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3772  00029A  6E1C               	movwf	_NeightAdress5+1,c	;volatile
  3773                           
  3774                           ;FRAME.c: 760:          NeightAdress6 = (message->data[2] << 8)| message->data[3];
  3775  00029C  EE20 F00A          	lfsr	2,10
  3776  0002A0  5028               	movf	FRAME_AdressOfNeighbors@message,w,c
  3777  0002A2  26D9               	addwf	fsr2l,f,c
  3778  0002A4  5029               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3779  0002A6  22DA               	addwfc	fsr2h,f,c
  3780  0002A8  50DF               	movf	indf2,w,c
  3781  0002AA  6E2C               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3782  0002AC  502C               	movf	??_FRAME_AdressOfNeighbors,w,c
  3783  0002AE  6E2E               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3784  0002B0  6A2D               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3785  0002B2  EE20 F00B          	lfsr	2,11
  3786  0002B6  5028               	movf	FRAME_AdressOfNeighbors@message,w,c
  3787  0002B8  26D9               	addwf	fsr2l,f,c
  3788  0002BA  5029               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3789  0002BC  22DA               	addwfc	fsr2h,f,c
  3790  0002BE  50DF               	movf	indf2,w,c
  3791  0002C0  6E2F               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3792  0002C2  502F               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3793  0002C4  102D               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3794  0002C6  6E19               	movwf	_NeightAdress6,c	;volatile
  3795  0002C8  502E               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3796  0002CA  6E1A               	movwf	_NeightAdress6+1,c	;volatile
  3797                           
  3798                           ;FRAME.c: 761:          NeightAdress7 = (message->data[4] << 8)| message->data[5];
  3799  0002CC  EE20 F00C          	lfsr	2,12
  3800  0002D0  5028               	movf	FRAME_AdressOfNeighbors@message,w,c
  3801  0002D2  26D9               	addwf	fsr2l,f,c
  3802  0002D4  5029               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3803  0002D6  22DA               	addwfc	fsr2h,f,c
  3804  0002D8  50DF               	movf	indf2,w,c
  3805  0002DA  6E2C               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3806  0002DC  502C               	movf	??_FRAME_AdressOfNeighbors,w,c
  3807  0002DE  6E2E               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3808  0002E0  6A2D               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3809  0002E2  EE20 F00D          	lfsr	2,13
  3810  0002E6  5028               	movf	FRAME_AdressOfNeighbors@message,w,c
  3811  0002E8  26D9               	addwf	fsr2l,f,c
  3812  0002EA  5029               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3813  0002EC  22DA               	addwfc	fsr2h,f,c
  3814  0002EE  50DF               	movf	indf2,w,c
  3815  0002F0  6E2F               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3816  0002F2  502F               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3817  0002F4  102D               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3818  0002F6  6E17               	movwf	_NeightAdress7,c	;volatile
  3819  0002F8  502E               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3820  0002FA  6E18               	movwf	_NeightAdress7+1,c	;volatile
  3821                           
  3822                           ;FRAME.c: 762:          NeightAdress8 = (message->data[6] << 8)| message->data[7];
  3823  0002FC  EE20 F00E          	lfsr	2,14
  3824  000300  5028               	movf	FRAME_AdressOfNeighbors@message,w,c
  3825  000302  26D9               	addwf	fsr2l,f,c
  3826  000304  5029               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3827  000306  22DA               	addwfc	fsr2h,f,c
  3828  000308  50DF               	movf	indf2,w,c
  3829  00030A  6E2C               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3830  00030C  502C               	movf	??_FRAME_AdressOfNeighbors,w,c
  3831  00030E  6E2E               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3832  000310  6A2D               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3833  000312  EE20 F00F          	lfsr	2,15
  3834  000316  5028               	movf	FRAME_AdressOfNeighbors@message,w,c
  3835  000318  26D9               	addwf	fsr2l,f,c
  3836  00031A  5029               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3837  00031C  22DA               	addwfc	fsr2h,f,c
  3838  00031E  50DF               	movf	indf2,w,c
  3839  000320  6E2F               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3840  000322  502F               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3841  000324  102D               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3842  000326  6E15               	movwf	_NeightAdress8,c	;volatile
  3843  000328  502E               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3844  00032A  6E16               	movwf	_NeightAdress8+1,c	;volatile
  3845  00032C  D79C               	goto	l4513
  3846  00032E                     __end_of_FRAME_AdressOfNeighbors:
  3847                           	opt callstack 0
  3848                           
  3849 ;; *************** function _FRAME_AccelerometerStatus *****************
  3850 ;; Defined at:
  3851 ;;		line 197 in file "FRAME.c"
  3852 ;; Parameters:    Size  Location     Type
  3853 ;;  message         2    7[COMRAM] PTR struct .
  3854 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3855 ;; Auto vars:     Size  Location     Type
  3856 ;;		None
  3857 ;; Return value:  Size  Location     Type
  3858 ;;                  1    wreg      void 
  3859 ;; Registers used:
  3860 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3861 ;; Tracked objects:
  3862 ;;		On entry : 0/0
  3863 ;;		On exit  : 0/0
  3864 ;;		Unchanged: 0/0
  3865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3866 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3868 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3869 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3870 ;;Total ram usage:        3 bytes
  3871 ;; Hardware stack levels used:    1
  3872 ;; Hardware stack levels required when called:    4
  3873 ;; This function calls:
  3874 ;;		_MOCK_Klikniecie_Spadek
  3875 ;;		_MOCK_PrzyspieszenieX
  3876 ;;		_MOCK_PrzyspieszenieY
  3877 ;;		_MOCK_PrzyspieszenieZ
  3878 ;; This function is called by:
  3879 ;;		_FRAME_HandleCanFrame
  3880 ;; This function uses a non-reentrant model
  3881 ;;
  3882                           
  3883                           	psect	text27
  3884  001406                     __ptext27:
  3885                           	opt callstack 0
  3886  001406                     _FRAME_AccelerometerStatus:
  3887                           	opt callstack 24
  3888                           
  3889                           ;FRAME.c: 197: static void FRAME_AccelerometerStatus(mID *message);FRAME.c: 198: {;FRAME
      +                          .c: 199:     if(message->message_type == 0x02)
  3890                           
  3891                           ;incstack = 0
  3892  001406  EE20 F001          	lfsr	2,1
  3893  00140A  502A               	movf	FRAME_AccelerometerStatus@message,w,c
  3894  00140C  26D9               	addwf	fsr2l,f,c
  3895  00140E  502B               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3896  001410  22DA               	addwfc	fsr2h,f,c
  3897  001412  0E02               	movlw	2
  3898  001414  18DE               	xorwf	postinc2,w,c
  3899  001416  A4D8               	btfss	status,2,c
  3900  001418  0012               	return	
  3901                           
  3902                           ;FRAME.c: 200:     {;FRAME.c: 201:         message->data_length = 4;
  3903  00141A  EE20 F010          	lfsr	2,16
  3904  00141E  502A               	movf	FRAME_AccelerometerStatus@message,w,c
  3905  001420  26D9               	addwf	fsr2l,f,c
  3906  001422  502B               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3907  001424  22DA               	addwfc	fsr2h,f,c
  3908  001426  0E04               	movlw	4
  3909  001428  6EDF               	movwf	indf2,c
  3910                           
  3911                           ;FRAME.c: 205:         message->data[0] = MOCK_PrzyspieszenieX();
  3912  00142A  EE20 F008          	lfsr	2,8
  3913  00142E  502A               	movf	FRAME_AccelerometerStatus@message,w,c
  3914  001430  26D9               	addwf	fsr2l,f,c
  3915  001432  502B               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3916  001434  22DA               	addwfc	fsr2h,f,c
  3917  001436  ECC2  F00D         	call	_MOCK_PrzyspieszenieX	;wreg free
  3918  00143A  5028               	movf	?_MOCK_PrzyspieszenieX,w,c
  3919  00143C  6EDF               	movwf	indf2,c
  3920                           
  3921                           ;FRAME.c: 206:         message->data[1] = MOCK_PrzyspieszenieY();
  3922  00143E  EE20 F009          	lfsr	2,9
  3923  001442  502A               	movf	FRAME_AccelerometerStatus@message,w,c
  3924  001444  26D9               	addwf	fsr2l,f,c
  3925  001446  502B               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3926  001448  22DA               	addwfc	fsr2h,f,c
  3927  00144A  ECBD  F00D         	call	_MOCK_PrzyspieszenieY	;wreg free
  3928  00144E  5028               	movf	?_MOCK_PrzyspieszenieY,w,c
  3929  001450  6EDF               	movwf	indf2,c
  3930                           
  3931                           ;FRAME.c: 207:         message->data[2] = MOCK_PrzyspieszenieZ();
  3932  001452  EE20 F00A          	lfsr	2,10
  3933  001456  502A               	movf	FRAME_AccelerometerStatus@message,w,c
  3934  001458  26D9               	addwf	fsr2l,f,c
  3935  00145A  502B               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3936  00145C  22DA               	addwfc	fsr2h,f,c
  3937  00145E  ECB8  F00D         	call	_MOCK_PrzyspieszenieZ	;wreg free
  3938  001462  5028               	movf	?_MOCK_PrzyspieszenieZ,w,c
  3939  001464  6EDF               	movwf	indf2,c
  3940                           
  3941                           ;FRAME.c: 208:         message->data[3] = MOCK_Klikniecie_Spadek();
  3942  001466  EE20 F00B          	lfsr	2,11
  3943  00146A  502A               	movf	FRAME_AccelerometerStatus@message,w,c
  3944  00146C  26D9               	addwf	fsr2l,f,c
  3945  00146E  502B               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3946  001470  22DA               	addwfc	fsr2h,f,c
  3947  001472  ECC7  F00D         	call	_MOCK_Klikniecie_Spadek	;wreg free
  3948  001476  5028               	movf	?_MOCK_Klikniecie_Spadek,w,c
  3949  001478  6EDF               	movwf	indf2,c
  3950                           
  3951                           ;FRAME.c: 209:     }
  3952  00147A  0012               	return		;funcret
  3953  00147C                     __end_of_FRAME_AccelerometerStatus:
  3954                           	opt callstack 0
  3955                           
  3956 ;; *************** function _MOCK_PrzyspieszenieZ *****************
  3957 ;; Defined at:
  3958 ;;		line 73 in file "MOC_Funct.c"
  3959 ;; Parameters:    Size  Location     Type
  3960 ;;		None
  3961 ;; Auto vars:     Size  Location     Type
  3962 ;;		None
  3963 ;; Return value:  Size  Location     Type
  3964 ;;                  2    5[COMRAM] unsigned int 
  3965 ;; Registers used:
  3966 ;;		wreg, status,2
  3967 ;; Tracked objects:
  3968 ;;		On entry : 0/0
  3969 ;;		On exit  : 0/0
  3970 ;;		Unchanged: 0/0
  3971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3972 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3975 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3976 ;;Total ram usage:        2 bytes
  3977 ;; Hardware stack levels used:    1
  3978 ;; Hardware stack levels required when called:    3
  3979 ;; This function calls:
  3980 ;;		Nothing
  3981 ;; This function is called by:
  3982 ;;		_FRAME_AccelerometerStatus
  3983 ;; This function uses a non-reentrant model
  3984 ;;
  3985                           
  3986                           	psect	text28
  3987  001B70                     __ptext28:
  3988                           	opt callstack 0
  3989  001B70                     _MOCK_PrzyspieszenieZ:
  3990                           	opt callstack 24
  3991                           
  3992                           ;MOC_Funct.c: 75:     return 0xFE;
  3993                           
  3994                           ;incstack = 0
  3995  001B70  0E00               	movlw	0
  3996  001B72  6E29               	movwf	?_MOCK_PrzyspieszenieZ+1,c
  3997  001B74  0EFE               	movlw	254
  3998  001B76  6E28               	movwf	?_MOCK_PrzyspieszenieZ,c
  3999  001B78  0012               	return		;funcret
  4000  001B7A                     __end_of_MOCK_PrzyspieszenieZ:
  4001                           	opt callstack 0
  4002                           
  4003 ;; *************** function _MOCK_PrzyspieszenieY *****************
  4004 ;; Defined at:
  4005 ;;		line 69 in file "MOC_Funct.c"
  4006 ;; Parameters:    Size  Location     Type
  4007 ;;		None
  4008 ;; Auto vars:     Size  Location     Type
  4009 ;;		None
  4010 ;; Return value:  Size  Location     Type
  4011 ;;                  2    5[COMRAM] unsigned int 
  4012 ;; Registers used:
  4013 ;;		wreg, status,2
  4014 ;; Tracked objects:
  4015 ;;		On entry : 0/0
  4016 ;;		On exit  : 0/0
  4017 ;;		Unchanged: 0/0
  4018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4019 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4022 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4023 ;;Total ram usage:        2 bytes
  4024 ;; Hardware stack levels used:    1
  4025 ;; Hardware stack levels required when called:    3
  4026 ;; This function calls:
  4027 ;;		Nothing
  4028 ;; This function is called by:
  4029 ;;		_FRAME_AccelerometerStatus
  4030 ;; This function uses a non-reentrant model
  4031 ;;
  4032                           
  4033                           	psect	text29
  4034  001B7A                     __ptext29:
  4035                           	opt callstack 0
  4036  001B7A                     _MOCK_PrzyspieszenieY:
  4037                           	opt callstack 24
  4038                           
  4039                           ;MOC_Funct.c: 71:     return 0xFE;
  4040                           
  4041                           ;incstack = 0
  4042  001B7A  0E00               	movlw	0
  4043  001B7C  6E29               	movwf	?_MOCK_PrzyspieszenieY+1,c
  4044  001B7E  0EFE               	movlw	254
  4045  001B80  6E28               	movwf	?_MOCK_PrzyspieszenieY,c
  4046  001B82  0012               	return		;funcret
  4047  001B84                     __end_of_MOCK_PrzyspieszenieY:
  4048                           	opt callstack 0
  4049                           
  4050 ;; *************** function _MOCK_PrzyspieszenieX *****************
  4051 ;; Defined at:
  4052 ;;		line 64 in file "MOC_Funct.c"
  4053 ;; Parameters:    Size  Location     Type
  4054 ;;		None
  4055 ;; Auto vars:     Size  Location     Type
  4056 ;;		None
  4057 ;; Return value:  Size  Location     Type
  4058 ;;                  2    5[COMRAM] unsigned int 
  4059 ;; Registers used:
  4060 ;;		wreg, status,2
  4061 ;; Tracked objects:
  4062 ;;		On entry : 0/0
  4063 ;;		On exit  : 0/0
  4064 ;;		Unchanged: 0/0
  4065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4066 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4069 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4070 ;;Total ram usage:        2 bytes
  4071 ;; Hardware stack levels used:    1
  4072 ;; Hardware stack levels required when called:    3
  4073 ;; This function calls:
  4074 ;;		Nothing
  4075 ;; This function is called by:
  4076 ;;		_FRAME_AccelerometerStatus
  4077 ;; This function uses a non-reentrant model
  4078 ;;
  4079                           
  4080                           	psect	text30
  4081  001B84                     __ptext30:
  4082                           	opt callstack 0
  4083  001B84                     _MOCK_PrzyspieszenieX:
  4084                           	opt callstack 24
  4085                           
  4086                           ;MOC_Funct.c: 66:     return 0xFE;
  4087                           
  4088                           ;incstack = 0
  4089  001B84  0E00               	movlw	0
  4090  001B86  6E29               	movwf	?_MOCK_PrzyspieszenieX+1,c
  4091  001B88  0EFE               	movlw	254
  4092  001B8A  6E28               	movwf	?_MOCK_PrzyspieszenieX,c
  4093  001B8C  0012               	return		;funcret
  4094  001B8E                     __end_of_MOCK_PrzyspieszenieX:
  4095                           	opt callstack 0
  4096                           
  4097 ;; *************** function _MOCK_Klikniecie_Spadek *****************
  4098 ;; Defined at:
  4099 ;;		line 77 in file "MOC_Funct.c"
  4100 ;; Parameters:    Size  Location     Type
  4101 ;;		None
  4102 ;; Auto vars:     Size  Location     Type
  4103 ;;		None
  4104 ;; Return value:  Size  Location     Type
  4105 ;;                  2    5[COMRAM] unsigned int 
  4106 ;; Registers used:
  4107 ;;		wreg, status,2
  4108 ;; Tracked objects:
  4109 ;;		On entry : 0/0
  4110 ;;		On exit  : 0/0
  4111 ;;		Unchanged: 0/0
  4112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4113 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4116 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4117 ;;Total ram usage:        2 bytes
  4118 ;; Hardware stack levels used:    1
  4119 ;; Hardware stack levels required when called:    3
  4120 ;; This function calls:
  4121 ;;		Nothing
  4122 ;; This function is called by:
  4123 ;;		_FRAME_AccelerometerStatus
  4124 ;; This function uses a non-reentrant model
  4125 ;;
  4126                           
  4127                           	psect	text31
  4128  001B8E                     __ptext31:
  4129                           	opt callstack 0
  4130  001B8E                     _MOCK_Klikniecie_Spadek:
  4131                           	opt callstack 24
  4132                           
  4133                           ;MOC_Funct.c: 79:     return 0b00000000;
  4134                           
  4135                           ;incstack = 0
  4136  001B8E  0E00               	movlw	0
  4137  001B90  6E29               	movwf	?_MOCK_Klikniecie_Spadek+1,c
  4138  001B92  0E00               	movlw	0
  4139  001B94  6E28               	movwf	?_MOCK_Klikniecie_Spadek,c
  4140  001B96  0012               	return		;funcret
  4141  001B98                     __end_of_MOCK_Klikniecie_Spadek:
  4142                           	opt callstack 0
  4143                           
  4144 ;; *************** function _CAN_SendFrame *****************
  4145 ;; Defined at:
  4146 ;;		line 247 in file "CAN.c"
  4147 ;; Parameters:    Size  Location     Type
  4148 ;;  message         2   10[COMRAM] PTR struct .
  4149 ;;		 -> TRM_DataTransmition@canMessage(17), 
  4150 ;; Auto vars:     Size  Location     Type
  4151 ;;		None
  4152 ;; Return value:  Size  Location     Type
  4153 ;;                  1    wreg      void 
  4154 ;; Registers used:
  4155 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4156 ;; Tracked objects:
  4157 ;;		On entry : 0/0
  4158 ;;		On exit  : 0/0
  4159 ;;		Unchanged: 0/0
  4160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4161 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4163 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4164 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4165 ;;Total ram usage:        5 bytes
  4166 ;; Hardware stack levels used:    1
  4167 ;; Hardware stack levels required when called:    4
  4168 ;; This function calls:
  4169 ;;		_CAN_MoveBuffIntoFrame
  4170 ;; This function is called by:
  4171 ;;		_FRAME_HandleCanFrame
  4172 ;; This function uses a non-reentrant model
  4173 ;;
  4174                           
  4175                           	psect	text32
  4176  00093E                     __ptext32:
  4177                           	opt callstack 0
  4178  00093E                     _CAN_SendFrame:
  4179                           	opt callstack 24
  4180                           
  4181                           ;CAN.c: 252:     {;CAN.c: 253:         ECANCON = 0x83;
  4182                           
  4183                           ;incstack = 0
  4184                           ;CAN.c: 247: void CAN_SendFrame(mID * message);CAN.c: 248: {;CAN.c: 251:     for(;;)
  4185  00093E  0E83               	movlw	131
  4186  000940  6E77               	movwf	3959,c	;volatile
  4187                           
  4188                           ;CAN.c: 254:         if(!RXB0CONbits.FILHIT3)
  4189  000942  A660               	btfss	3936,3,c	;volatile
  4190  000944  D00A               	goto	l288
  4191                           
  4192                           ;CAN.c: 259:         ECANCON = 0x84;
  4193  000946  0E84               	movlw	132
  4194  000948  6E77               	movwf	3959,c	;volatile
  4195                           
  4196                           ;CAN.c: 260:         if(!RXB0CONbits.FILHIT3)
  4197  00094A  A660               	btfss	3936,3,c	;volatile
  4198  00094C  D006               	goto	l288
  4199                           
  4200                           ;CAN.c: 265:         ECANCON = 0x85;
  4201  00094E  0E85               	movlw	133
  4202  000950  6E77               	movwf	3959,c	;volatile
  4203                           
  4204                           ;CAN.c: 266:         if(!RXB0CONbits.FILHIT3)
  4205  000952  A660               	btfss	3936,3,c	;volatile
  4206  000954  D002               	goto	l288
  4207  000956  D7F3               	goto	_CAN_SendFrame
  4208  000958                     l289:
  4209  000958  00FF               	reset		;# 
  4210  00095A                     l288:
  4211                           
  4212                           ;CAN.c: 273:     while(COMSTATbits.TXWARN)
  4213  00095A  B474               	btfsc	3956,2,c	;volatile
  4214  00095C  D7FD               	goto	l289
  4215                           
  4216                           ;CAN.c: 277:     DetectorLedRadar.timerRamkiTxCANU8 = 0;
  4217  00095E  0E00               	movlw	0
  4218  000960  0100               	movlb	0	; () banked
  4219  000962  6FCD               	movwf	(_DetectorLedRadar+2)& (0+255),b
  4220                           
  4221                           ; BSR set to: 0
  4222                           ;CAN.c: 278:     RXB0EIDL = message->id.v[0];
  4223  000964  EE20 F004          	lfsr	2,4
  4224  000968  502D               	movf	CAN_SendFrame@message,w,c
  4225  00096A  26D9               	addwf	fsr2l,f,c
  4226  00096C  502E               	movf	CAN_SendFrame@message+1,w,c
  4227  00096E  22DA               	addwfc	fsr2h,f,c
  4228  000970  50DF               	movf	indf2,w,c
  4229  000972  6E64               	movwf	3940,c	;volatile
  4230                           
  4231                           ; BSR set to: 0
  4232                           ;CAN.c: 279:     RXB0EIDH = message->id.v[1];
  4233  000974  EE20 F005          	lfsr	2,5
  4234  000978  502D               	movf	CAN_SendFrame@message,w,c
  4235  00097A  26D9               	addwf	fsr2l,f,c
  4236  00097C  502E               	movf	CAN_SendFrame@message+1,w,c
  4237  00097E  22DA               	addwfc	fsr2h,f,c
  4238  000980  50DF               	movf	indf2,w,c
  4239  000982  6E63               	movwf	3939,c	;volatile
  4240                           
  4241                           ; BSR set to: 0
  4242                           ;CAN.c: 280:     RXB0SIDL = ((message->id.v[2]&0xFC)*8) | (message->id.v[2] & (0x03));
  4243  000984  EE20 F006          	lfsr	2,6
  4244  000988  502D               	movf	CAN_SendFrame@message,w,c
  4245  00098A  26D9               	addwf	fsr2l,f,c
  4246  00098C  502E               	movf	CAN_SendFrame@message+1,w,c
  4247  00098E  22DA               	addwfc	fsr2h,f,c
  4248  000990  50DF               	movf	indf2,w,c
  4249  000992  6E2F               	movwf	??_CAN_SendFrame& (0+255),c
  4250  000994  0E03               	movlw	3
  4251  000996  162F               	andwf	??_CAN_SendFrame,f,c
  4252  000998  EE20 F006          	lfsr	2,6
  4253  00099C  502D               	movf	CAN_SendFrame@message,w,c
  4254  00099E  26D9               	addwf	fsr2l,f,c
  4255  0009A0  502E               	movf	CAN_SendFrame@message+1,w,c
  4256  0009A2  22DA               	addwfc	fsr2h,f,c
  4257  0009A4  50DF               	movf	indf2,w,c
  4258  0009A6  0BFC               	andlw	252
  4259  0009A8  0D08               	mullw	8
  4260  0009AA  50F3               	movf	prodl,w,c
  4261  0009AC  102F               	iorwf	??_CAN_SendFrame,w,c
  4262  0009AE  6E62               	movwf	3938,c	;volatile
  4263                           
  4264                           ; BSR set to: 0
  4265                           ;CAN.c: 281:     RXB0SIDLbits.EXID = 1;
  4266  0009B0  8662               	bsf	3938,3,c	;volatile
  4267                           
  4268                           ; BSR set to: 0
  4269                           ;CAN.c: 282:     RXB0SIDH = (BYTE)(message->id.w[1]/32);
  4270  0009B2  EE20 F006          	lfsr	2,6
  4271  0009B6  502D               	movf	CAN_SendFrame@message,w,c
  4272  0009B8  26D9               	addwf	fsr2l,f,c
  4273  0009BA  502E               	movf	CAN_SendFrame@message+1,w,c
  4274  0009BC  22DA               	addwfc	fsr2h,f,c
  4275  0009BE  CFDE F02F          	movff	postinc2,??_CAN_SendFrame
  4276  0009C2  CFDD F030          	movff	postdec2,??_CAN_SendFrame+1
  4277  0009C6  0E05               	movlw	5
  4278  0009C8  6E31               	movwf	(??_CAN_SendFrame+2)& (0+255),c
  4279  0009CA                     u2595:
  4280  0009CA  90D8               	bcf	status,0,c
  4281  0009CC  3230               	rrcf	??_CAN_SendFrame+1,f,c
  4282  0009CE  322F               	rrcf	??_CAN_SendFrame,f,c
  4283  0009D0  2E31               	decfsz	(??_CAN_SendFrame+2)& (0+255),f,c
  4284  0009D2  D7FB               	goto	u2595
  4285  0009D4  502F               	movf	??_CAN_SendFrame,w,c
  4286  0009D6  6E61               	movwf	3937,c	;volatile
  4287                           
  4288                           ; BSR set to: 0
  4289                           ;CAN.c: 284:     RXB0DLC = 0;
  4290  0009D8  0E00               	movlw	0
  4291  0009DA  6E65               	movwf	3941,c	;volatile
  4292                           
  4293                           ; BSR set to: 0
  4294                           ;CAN.c: 286:     if(message->message_type==0x02)
  4295  0009DC  EE20 F001          	lfsr	2,1
  4296  0009E0  502D               	movf	CAN_SendFrame@message,w,c
  4297  0009E2  26D9               	addwf	fsr2l,f,c
  4298  0009E4  502E               	movf	CAN_SendFrame@message+1,w,c
  4299  0009E6  22DA               	addwfc	fsr2h,f,c
  4300  0009E8  0E02               	movlw	2
  4301  0009EA  18DE               	xorwf	postinc2,w,c
  4302  0009EC  A4D8               	btfss	status,2,c
  4303  0009EE  D002               	goto	l4363
  4304                           
  4305                           ; BSR set to: 0
  4306                           ;CAN.c: 287:     {;CAN.c: 288:         RXB0DLCbits.RXRTR = 1;
  4307  0009F0  8C65               	bsf	3941,6,c	;volatile
  4308                           
  4309                           ;CAN.c: 289:     }
  4310  0009F2  D05A               	goto	l4367
  4311  0009F4                     l4363:
  4312                           
  4313                           ; BSR set to: 0
  4314                           ;CAN.c: 291:     {;CAN.c: 292:         RXB0DLCbits.DLC0 = (message->data_length & 0x0F);
  4315  0009F4  EE20 F010          	lfsr	2,16
  4316  0009F8  502D               	movf	CAN_SendFrame@message,w,c
  4317  0009FA  26D9               	addwf	fsr2l,f,c
  4318  0009FC  502E               	movf	CAN_SendFrame@message+1,w,c
  4319  0009FE  22DA               	addwfc	fsr2h,f,c
  4320  000A00  50DF               	movf	indf2,w,c
  4321  000A02  6E2F               	movwf	??_CAN_SendFrame& (0+255),c
  4322  000A04  0E0F               	movlw	15
  4323  000A06  162F               	andwf	??_CAN_SendFrame,f,c
  4324  000A08  5065               	movf	3941,w,c	;volatile
  4325  000A0A  182F               	xorwf	??_CAN_SendFrame,w,c
  4326  000A0C  0BFE               	andlw	-2
  4327  000A0E  182F               	xorwf	??_CAN_SendFrame,w,c
  4328  000A10  6E65               	movwf	3941,c	;volatile
  4329                           
  4330                           ;CAN.c: 293:         RXB0DLCbits.DLC1 = ((message->data_length & 0x0F)>> 1);
  4331  000A12  EE20 F010          	lfsr	2,16
  4332  000A16  502D               	movf	CAN_SendFrame@message,w,c
  4333  000A18  26D9               	addwf	fsr2l,f,c
  4334  000A1A  502E               	movf	CAN_SendFrame@message+1,w,c
  4335  000A1C  22DA               	addwfc	fsr2h,f,c
  4336  000A1E  50DF               	movf	indf2,w,c
  4337  000A20  6E2F               	movwf	??_CAN_SendFrame& (0+255),c
  4338  000A22  90D8               	bcf	status,0,c
  4339  000A24  322F               	rrcf	??_CAN_SendFrame,f,c
  4340  000A26  0E07               	movlw	7
  4341  000A28  162F               	andwf	??_CAN_SendFrame,f,c
  4342  000A2A  462F               	rlncf	??_CAN_SendFrame,f,c
  4343  000A2C  5065               	movf	3941,w,c	;volatile
  4344  000A2E  182F               	xorwf	??_CAN_SendFrame,w,c
  4345  000A30  0BFD               	andlw	-3
  4346  000A32  182F               	xorwf	??_CAN_SendFrame,w,c
  4347  000A34  6E65               	movwf	3941,c	;volatile
  4348                           
  4349                           ;CAN.c: 294:         RXB0DLCbits.DLC2 = ((message->data_length & 0x0F)>> 2);
  4350  000A36  EE20 F010          	lfsr	2,16
  4351  000A3A  502D               	movf	CAN_SendFrame@message,w,c
  4352  000A3C  26D9               	addwf	fsr2l,f,c
  4353  000A3E  502E               	movf	CAN_SendFrame@message+1,w,c
  4354  000A40  22DA               	addwfc	fsr2h,f,c
  4355  000A42  50DF               	movf	indf2,w,c
  4356  000A44  6E2F               	movwf	??_CAN_SendFrame& (0+255),c
  4357  000A46  90D8               	bcf	status,0,c
  4358  000A48  322F               	rrcf	??_CAN_SendFrame,f,c
  4359  000A4A  90D8               	bcf	status,0,c
  4360  000A4C  322F               	rrcf	??_CAN_SendFrame,f,c
  4361  000A4E  0E03               	movlw	3
  4362  000A50  162F               	andwf	??_CAN_SendFrame,f,c
  4363  000A52  462F               	rlncf	??_CAN_SendFrame,f,c
  4364  000A54  462F               	rlncf	??_CAN_SendFrame,f,c
  4365  000A56  5065               	movf	3941,w,c	;volatile
  4366  000A58  182F               	xorwf	??_CAN_SendFrame,w,c
  4367  000A5A  0BFB               	andlw	-5
  4368  000A5C  182F               	xorwf	??_CAN_SendFrame,w,c
  4369  000A5E  6E65               	movwf	3941,c	;volatile
  4370                           
  4371                           ;CAN.c: 295:         RXB0DLCbits.DLC3 = ((message->data_length & 0x0F)>> 3);
  4372  000A60  EE20 F010          	lfsr	2,16
  4373  000A64  502D               	movf	CAN_SendFrame@message,w,c
  4374  000A66  26D9               	addwf	fsr2l,f,c
  4375  000A68  502E               	movf	CAN_SendFrame@message+1,w,c
  4376  000A6A  22DA               	addwfc	fsr2h,f,c
  4377  000A6C  50DF               	movf	indf2,w,c
  4378  000A6E  6E2F               	movwf	??_CAN_SendFrame& (0+255),c
  4379  000A70  90D8               	bcf	status,0,c
  4380  000A72  322F               	rrcf	??_CAN_SendFrame,f,c
  4381  000A74  90D8               	bcf	status,0,c
  4382  000A76  322F               	rrcf	??_CAN_SendFrame,f,c
  4383  000A78  90D8               	bcf	status,0,c
  4384  000A7A  322F               	rrcf	??_CAN_SendFrame,f,c
  4385  000A7C  0E01               	movlw	1
  4386  000A7E  162F               	andwf	??_CAN_SendFrame,f,c
  4387  000A80  462F               	rlncf	??_CAN_SendFrame,f,c
  4388  000A82  462F               	rlncf	??_CAN_SendFrame,f,c
  4389  000A84  462F               	rlncf	??_CAN_SendFrame,f,c
  4390  000A86  5065               	movf	3941,w,c	;volatile
  4391  000A88  182F               	xorwf	??_CAN_SendFrame,w,c
  4392  000A8A  0BF7               	andlw	-9
  4393  000A8C  182F               	xorwf	??_CAN_SendFrame,w,c
  4394  000A8E  6E65               	movwf	3941,c	;volatile
  4395                           
  4396                           ; BSR set to: 0
  4397                           ;CAN.c: 297:         CAN_MoveBuffIntoFrame(&RXB0D0, message->data);
  4398  000A90  0E66               	movlw	102
  4399  000A92  6E28               	movwf	CAN_MoveBuffIntoFrame@Ram,c
  4400  000A94  0E0F               	movlw	15
  4401  000A96  6E29               	movwf	CAN_MoveBuffIntoFrame@Ram+1,c
  4402  000A98  0E08               	movlw	8
  4403  000A9A  242D               	addwf	CAN_SendFrame@message,w,c
  4404  000A9C  6E2A               	movwf	CAN_MoveBuffIntoFrame@Buf,c
  4405  000A9E  0E00               	movlw	0
  4406  000AA0  202E               	addwfc	CAN_SendFrame@message+1,w,c
  4407  000AA2  6E2B               	movwf	CAN_MoveBuffIntoFrame@Buf+1,c
  4408  000AA4  EC0E  F00D         	call	_CAN_MoveBuffIntoFrame	;wreg free
  4409  000AA8                     l4367:
  4410                           
  4411                           ;CAN.c: 300:     RXB0CONbits.FILHIT3 = 1;
  4412  000AA8  8660               	bsf	3936,3,c	;volatile
  4413                           
  4414                           ;CAN.c: 302:     DetectorLedRadar.Flags.ramkaTx = 1;
  4415  000AAA  0100               	movlb	0	; () banked
  4416  000AAC  89CB               	bsf	_DetectorLedRadar& (0+255),4,b
  4417                           
  4418                           ; BSR set to: 0
  4419  000AAE  0012               	return		;funcret
  4420  000AB0                     __end_of_CAN_SendFrame:
  4421                           	opt callstack 0
  4422                           
  4423 ;; *************** function _CAN_GenID *****************
  4424 ;; Defined at:
  4425 ;;		line 446 in file "CAN.c"
  4426 ;; Parameters:    Size  Location     Type
  4427 ;;  message         2    5[COMRAM] PTR struct .
  4428 ;;		 -> TRM_DataTransmition@canMessage(17), 
  4429 ;;  frameID         1    7[COMRAM] unsigned char 
  4430 ;; Auto vars:     Size  Location     Type
  4431 ;;		None
  4432 ;; Return value:  Size  Location     Type
  4433 ;;                  1    wreg      void 
  4434 ;; Registers used:
  4435 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4436 ;; Tracked objects:
  4437 ;;		On entry : 0/0
  4438 ;;		On exit  : 0/0
  4439 ;;		Unchanged: 0/0
  4440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4441 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4443 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4444 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4445 ;;Total ram usage:        5 bytes
  4446 ;; Hardware stack levels used:    1
  4447 ;; Hardware stack levels required when called:    3
  4448 ;; This function calls:
  4449 ;;		Nothing
  4450 ;; This function is called by:
  4451 ;;		_FRAME_HandleCanFrame
  4452 ;; This function uses a non-reentrant model
  4453 ;;
  4454                           
  4455                           	psect	text33
  4456  001318                     __ptext33:
  4457                           	opt callstack 0
  4458  001318                     _CAN_GenID:
  4459                           	opt callstack 25
  4460                           
  4461                           ;CAN.c: 446: void CAN_GenID(mID * message, BYTE frameID);CAN.c: 447: {;CAN.c: 449:     m
      +                          essage->frame_type = 0x03;
  4462                           
  4463                           ; BSR set to: 0
  4464                           ;incstack = 0
  4465  001318  EE20 F002          	lfsr	2,2
  4466  00131C  5028               	movf	CAN_GenID@message,w,c
  4467  00131E  26D9               	addwf	fsr2l,f,c
  4468  001320  5029               	movf	CAN_GenID@message+1,w,c
  4469  001322  22DA               	addwfc	fsr2h,f,c
  4470  001324  0E03               	movlw	3
  4471  001326  6EDF               	movwf	indf2,c
  4472                           
  4473                           ;CAN.c: 450:     message->message_type = 0x01;
  4474  001328  EE20 F001          	lfsr	2,1
  4475  00132C  5028               	movf	CAN_GenID@message,w,c
  4476  00132E  26D9               	addwf	fsr2l,f,c
  4477  001330  5029               	movf	CAN_GenID@message+1,w,c
  4478  001332  22DA               	addwfc	fsr2h,f,c
  4479  001334  0E01               	movlw	1
  4480  001336  6EDF               	movwf	indf2,c
  4481                           
  4482                           ;CAN.c: 451:     message->id.w[1] = (WORD)frameID * (WORD)4;
  4483  001338  502A               	movf	CAN_GenID@frameID,w,c
  4484  00133A  6E2B               	movwf	??_CAN_GenID& (0+255),c
  4485  00133C  6A2C               	clrf	(??_CAN_GenID+1)& (0+255),c
  4486  00133E  90D8               	bcf	status,0,c
  4487  001340  362B               	rlcf	??_CAN_GenID,f,c
  4488  001342  362C               	rlcf	??_CAN_GenID+1,f,c
  4489  001344  90D8               	bcf	status,0,c
  4490  001346  362B               	rlcf	??_CAN_GenID,f,c
  4491  001348  362C               	rlcf	??_CAN_GenID+1,f,c
  4492  00134A  EE20 F006          	lfsr	2,6
  4493  00134E  5028               	movf	CAN_GenID@message,w,c
  4494  001350  26D9               	addwf	fsr2l,f,c
  4495  001352  5029               	movf	CAN_GenID@message+1,w,c
  4496  001354  22DA               	addwfc	fsr2h,f,c
  4497  001356  C02B  FFDE         	movff	??_CAN_GenID,postinc2
  4498  00135A  C02C  FFDD         	movff	??_CAN_GenID+1,postdec2
  4499                           
  4500                           ;CAN.c: 452:     message->id.w[0] = DaneCan.adresCAN;
  4501  00135E  EE20 F004          	lfsr	2,4
  4502  001362  5028               	movf	CAN_GenID@message,w,c
  4503  001364  26D9               	addwf	fsr2l,f,c
  4504  001366  5029               	movf	CAN_GenID@message+1,w,c
  4505  001368  22DA               	addwfc	fsr2h,f,c
  4506  00136A  C003  FFDE         	movff	_DaneCan+2,postinc2
  4507  00136E  C004  FFDD         	movff	_DaneCan+3,postdec2
  4508                           
  4509                           ;CAN.c: 455:     message ->id.bits.b16 = 0;
  4510  001372  EE20 F006          	lfsr	2,6
  4511  001376  5028               	movf	CAN_GenID@message,w,c
  4512  001378  26D9               	addwf	fsr2l,f,c
  4513  00137A  5029               	movf	CAN_GenID@message+1,w,c
  4514  00137C  22DA               	addwfc	fsr2h,f,c
  4515  00137E  90DF               	bcf	indf2,0,c
  4516                           
  4517                           ;CAN.c: 456:     message ->id.bits.b17 = 0;
  4518  001380  EE20 F006          	lfsr	2,6
  4519  001384  5028               	movf	CAN_GenID@message,w,c
  4520  001386  26D9               	addwf	fsr2l,f,c
  4521  001388  5029               	movf	CAN_GenID@message+1,w,c
  4522  00138A  22DA               	addwfc	fsr2h,f,c
  4523  00138C  92DF               	bcf	indf2,1,c
  4524  00138E  0012               	return		;funcret
  4525  001390                     __end_of_CAN_GenID:
  4526                           	opt callstack 0
  4527                           
  4528 ;; *************** function _CAN_TakeFrame *****************
  4529 ;; Defined at:
  4530 ;;		line 311 in file "CAN.c"
  4531 ;; Parameters:    Size  Location     Type
  4532 ;;  message         2   13[COMRAM] PTR struct .
  4533 ;;		 -> TRM_DataTransmition@canMessage(17), 
  4534 ;; Auto vars:     Size  Location     Type
  4535 ;;  k               1   18[COMRAM] unsigned char 
  4536 ;;  tempCON         1   17[COMRAM] unsigned char 
  4537 ;; Return value:  Size  Location     Type
  4538 ;;                  1    wreg      enum E10433
  4539 ;; Registers used:
  4540 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4541 ;; Tracked objects:
  4542 ;;		On entry : 0/0
  4543 ;;		On exit  : 0/0
  4544 ;;		Unchanged: 0/0
  4545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4546 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4547 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4548 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4549 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4550 ;;Total ram usage:        6 bytes
  4551 ;; Hardware stack levels used:    1
  4552 ;; Hardware stack levels required when called:    4
  4553 ;; This function calls:
  4554 ;;		_CAN_MoveBuffIntoFrame
  4555 ;;		___awdiv
  4556 ;; This function is called by:
  4557 ;;		_TRM_DataTransmition
  4558 ;; This function uses a non-reentrant model
  4559 ;;
  4560                           
  4561                           	psect	text34
  4562  00032E                     __ptext34:
  4563                           	opt callstack 0
  4564  00032E                     _CAN_TakeFrame:
  4565                           	opt callstack 25
  4566                           
  4567                           ;CAN.c: 311: BOOL CAN_TakeFrame(mID * message);CAN.c: 312: {;CAN.c: 313:     BYTE k, tem
      +                          pCON;;CAN.c: 315:     k = CANCON&0x0F;
  4568                           
  4569                           ;incstack = 0
  4570  00032E  506F               	movf	3951,w,c	;volatile
  4571  000330  0B0F               	andlw	15
  4572  000332  6E35               	movwf	CAN_TakeFrame@k,c
  4573                           
  4574                           ;CAN.c: 317:     ECANCON = 0x90 | k;
  4575  000334  5035               	movf	CAN_TakeFrame@k,w,c
  4576  000336  0990               	iorlw	144
  4577  000338  6E77               	movwf	3959,c	;volatile
  4578                           
  4579                           ;CAN.c: 320:     switch(k)
  4580  00033A  D018               	goto	l4583
  4581  00033C                     l297:
  4582                           
  4583                           ;CAN.c: 323:             tempCON = RXB0CON;
  4584  00033C  CF60 F034          	movff	3936,CAN_TakeFrame@tempCON	;volatile
  4585                           
  4586                           ;CAN.c: 324:             break;
  4587  000340  D035               	goto	l298
  4588  000342                     l299:
  4589                           
  4590                           ;CAN.c: 326:             tempCON = RXB1CON;
  4591  000342  CF50 F034          	movff	3920,CAN_TakeFrame@tempCON	;volatile
  4592                           
  4593                           ;CAN.c: 327:             break;
  4594  000346  D032               	goto	l298
  4595  000348                     l300:
  4596                           
  4597                           ;CAN.c: 329:             tempCON = B0CON;
  4598  000348  CE20 F034          	movff	3616,CAN_TakeFrame@tempCON	;volatile
  4599                           
  4600                           ;CAN.c: 330:             break;
  4601  00034C  D02F               	goto	l298
  4602  00034E                     l301:
  4603                           
  4604                           ;CAN.c: 332:             tempCON = B1CON;
  4605  00034E  CE30 F034          	movff	3632,CAN_TakeFrame@tempCON	;volatile
  4606                           
  4607                           ;CAN.c: 333:             break;
  4608  000352  D02C               	goto	l298
  4609  000354                     l302:
  4610                           
  4611                           ;CAN.c: 335:             tempCON = B2CON;
  4612  000354  CE40 F034          	movff	3648,CAN_TakeFrame@tempCON	;volatile
  4613                           
  4614                           ;CAN.c: 336:             break;
  4615  000358  D029               	goto	l298
  4616  00035A                     l303:
  4617                           
  4618                           ;CAN.c: 338:             tempCON = B3CON;
  4619  00035A  CE50 F034          	movff	3664,CAN_TakeFrame@tempCON	;volatile
  4620                           
  4621                           ;CAN.c: 339:             break;
  4622  00035E  D026               	goto	l298
  4623  000360                     l304:
  4624                           
  4625                           ;CAN.c: 341:             tempCON = B4CON;
  4626  000360  CE60 F034          	movff	3680,CAN_TakeFrame@tempCON	;volatile
  4627                           
  4628                           ;CAN.c: 342:             break;
  4629  000364  D023               	goto	l298
  4630  000366                     l305:
  4631                           
  4632                           ;CAN.c: 344:             tempCON = B5CON;
  4633  000366  CE70 F034          	movff	3696,CAN_TakeFrame@tempCON	;volatile
  4634                           
  4635                           ;CAN.c: 345:             break;
  4636  00036A  D020               	goto	l298
  4637  00036C                     l4583:
  4638  00036C  5035               	movf	CAN_TakeFrame@k,w,c
  4639  00036E  6E32               	movwf	??_CAN_TakeFrame& (0+255),c
  4640  000370  6A33               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  4641                           
  4642                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4643                           ; Switch size 1, requested type "simple"
  4644                           ; Number of cases is 1, Range of values is 0 to 0
  4645                           ; switch strategies available:
  4646                           ; Name         Instructions Cycles
  4647                           ; simple_byte            4     3 (average)
  4648                           ;	Chosen strategy is simple_byte
  4649  000372  5033               	movf	??_CAN_TakeFrame+1,w,c
  4650  000374  0A00               	xorlw	0	; case 0
  4651  000376  A4D8               	btfss	status,2,c
  4652  000378  D019               	goto	l298
  4653                           
  4654                           ; Switch size 1, requested type "simple"
  4655                           ; Number of cases is 8, Range of values is 0 to 7
  4656                           ; switch strategies available:
  4657                           ; Name         Instructions Cycles
  4658                           ; simple_byte           25    13 (average)
  4659                           ;	Chosen strategy is simple_byte
  4660  00037A  5032               	movf	??_CAN_TakeFrame,w,c
  4661  00037C  0A00               	xorlw	0	; case 0
  4662  00037E  B4D8               	btfsc	status,2,c
  4663  000380  D7DD               	goto	l297
  4664  000382  0A01               	xorlw	1	; case 1
  4665  000384  B4D8               	btfsc	status,2,c
  4666  000386  D7DD               	goto	l299
  4667  000388  0A03               	xorlw	3	; case 2
  4668  00038A  B4D8               	btfsc	status,2,c
  4669  00038C  D7DD               	goto	l300
  4670  00038E  0A01               	xorlw	1	; case 3
  4671  000390  B4D8               	btfsc	status,2,c
  4672  000392  D7DD               	goto	l301
  4673  000394  0A07               	xorlw	7	; case 4
  4674  000396  B4D8               	btfsc	status,2,c
  4675  000398  D7DD               	goto	l302
  4676  00039A  0A01               	xorlw	1	; case 5
  4677  00039C  B4D8               	btfsc	status,2,c
  4678  00039E  D7DD               	goto	l303
  4679  0003A0  0A03               	xorlw	3	; case 6
  4680  0003A2  B4D8               	btfsc	status,2,c
  4681  0003A4  D7DD               	goto	l304
  4682  0003A6  0A01               	xorlw	1	; case 7
  4683  0003A8  B4D8               	btfsc	status,2,c
  4684  0003AA  D7DD               	goto	l305
  4685  0003AC                     l298:
  4686                           
  4687                           ;CAN.c: 349:     if((tempCON & 0x80) > 0)
  4688  0003AC  AE34               	btfss	CAN_TakeFrame@tempCON,7,c
  4689  0003AE  D0A5               	goto	l4619
  4690                           
  4691                           ;CAN.c: 350:     {;CAN.c: 351:         message->buffer = RXB0CON & 0x1F;
  4692  0003B0  EE20 F003          	lfsr	2,3
  4693  0003B4  5030               	movf	CAN_TakeFrame@message,w,c
  4694  0003B6  26D9               	addwf	fsr2l,f,c
  4695  0003B8  5031               	movf	CAN_TakeFrame@message+1,w,c
  4696  0003BA  22DA               	addwfc	fsr2h,f,c
  4697  0003BC  5060               	movf	3936,w,c	;volatile
  4698  0003BE  0B1F               	andlw	31
  4699  0003C0  6EDF               	movwf	indf2,c
  4700                           
  4701                           ;CAN.c: 352:         message->id.v[0] = RXB0EIDL;
  4702  0003C2  EE20 F004          	lfsr	2,4
  4703  0003C6  5030               	movf	CAN_TakeFrame@message,w,c
  4704  0003C8  26D9               	addwf	fsr2l,f,c
  4705  0003CA  5031               	movf	CAN_TakeFrame@message+1,w,c
  4706  0003CC  22DA               	addwfc	fsr2h,f,c
  4707  0003CE  CF64 FFDF          	movff	3940,indf2	;volatile
  4708                           
  4709                           ;CAN.c: 353:         message->id.v[1] = RXB0EIDH;
  4710  0003D2  EE20 F005          	lfsr	2,5
  4711  0003D6  5030               	movf	CAN_TakeFrame@message,w,c
  4712  0003D8  26D9               	addwf	fsr2l,f,c
  4713  0003DA  5031               	movf	CAN_TakeFrame@message+1,w,c
  4714  0003DC  22DA               	addwfc	fsr2h,f,c
  4715  0003DE  CF63 FFDF          	movff	3939,indf2	;volatile
  4716                           
  4717                           ;CAN.c: 354:         message->id.v[2] = (RXB0SIDL/8) | (RXB0SIDL&0x03);
  4718  0003E2  EE20 F006          	lfsr	2,6
  4719  0003E6  5030               	movf	CAN_TakeFrame@message,w,c
  4720  0003E8  26D9               	addwf	fsr2l,f,c
  4721  0003EA  5031               	movf	CAN_TakeFrame@message+1,w,c
  4722  0003EC  22DA               	addwfc	fsr2h,f,c
  4723  0003EE  CF62 F032          	movff	3938,??_CAN_TakeFrame	;volatile
  4724  0003F2  0E03               	movlw	3
  4725  0003F4  1632               	andwf	??_CAN_TakeFrame,f,c
  4726  0003F6  CF62 F028          	movff	3938,___awdiv@dividend	;volatile
  4727  0003FA  6A29               	clrf	___awdiv@dividend+1,c
  4728  0003FC  0E00               	movlw	0
  4729  0003FE  6E2B               	movwf	___awdiv@divisor+1,c
  4730  000400  0E08               	movlw	8
  4731  000402  6E2A               	movwf	___awdiv@divisor,c
  4732  000404  EC0D  F009         	call	___awdiv	;wreg free
  4733  000408  5028               	movf	?___awdiv,w,c
  4734  00040A  1032               	iorwf	??_CAN_TakeFrame,w,c
  4735  00040C  6EDF               	movwf	indf2,c
  4736                           
  4737                           ;CAN.c: 355:         message->id.w[1] |= (WORD)RXB0SIDH*32;
  4738  00040E  5061               	movf	3937,w,c	;volatile
  4739  000410  6E32               	movwf	??_CAN_TakeFrame& (0+255),c
  4740  000412  6A33               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  4741  000414  0E05               	movlw	5
  4742  000416                     u2945:
  4743  000416  90D8               	bcf	status,0,c
  4744  000418  3632               	rlcf	??_CAN_TakeFrame,f,c
  4745  00041A  3633               	rlcf	??_CAN_TakeFrame+1,f,c
  4746  00041C  2EE8               	decfsz	wreg,f,c
  4747  00041E  D7FB               	goto	u2945
  4748  000420  EE20 F006          	lfsr	2,6
  4749  000424  5030               	movf	CAN_TakeFrame@message,w,c
  4750  000426  26D9               	addwf	fsr2l,f,c
  4751  000428  5031               	movf	CAN_TakeFrame@message+1,w,c
  4752  00042A  22DA               	addwfc	fsr2h,f,c
  4753  00042C  5032               	movf	??_CAN_TakeFrame,w,c
  4754  00042E  12DE               	iorwf	postinc2,f,c
  4755  000430  5033               	movf	??_CAN_TakeFrame+1,w,c
  4756  000432  12DD               	iorwf	postdec2,f,c
  4757                           
  4758                           ;CAN.c: 356:         message->frame_type=0x03;
  4759  000434  EE20 F002          	lfsr	2,2
  4760  000438  5030               	movf	CAN_TakeFrame@message,w,c
  4761  00043A  26D9               	addwf	fsr2l,f,c
  4762  00043C  5031               	movf	CAN_TakeFrame@message+1,w,c
  4763  00043E  22DA               	addwfc	fsr2h,f,c
  4764  000440  0E03               	movlw	3
  4765  000442  6EDF               	movwf	indf2,c
  4766                           
  4767                           ;CAN.c: 360:         if(RXB0DLCbits.RXRTR == 0)
  4768  000444  BC65               	btfsc	3941,6,c	;volatile
  4769  000446  D068               	goto	l4625
  4770                           
  4771                           ;CAN.c: 361:         {;CAN.c: 362:             message->message_type = 0x01;
  4772  000448  EE20 F001          	lfsr	2,1
  4773  00044C  5030               	movf	CAN_TakeFrame@message,w,c
  4774  00044E  26D9               	addwf	fsr2l,f,c
  4775  000450  5031               	movf	CAN_TakeFrame@message+1,w,c
  4776  000452  22DA               	addwfc	fsr2h,f,c
  4777  000454  0E01               	movlw	1
  4778  000456  6EDF               	movwf	indf2,c
  4779                           
  4780                           ;CAN.c: 363:             message->data_length= RXB0DLC & 0x0F;
  4781  000458  EE20 F010          	lfsr	2,16
  4782  00045C  5030               	movf	CAN_TakeFrame@message,w,c
  4783  00045E  26D9               	addwf	fsr2l,f,c
  4784  000460  5031               	movf	CAN_TakeFrame@message+1,w,c
  4785  000462  22DA               	addwfc	fsr2h,f,c
  4786  000464  5065               	movf	3941,w,c	;volatile
  4787  000466  0B0F               	andlw	15
  4788  000468  6EDF               	movwf	indf2,c
  4789                           
  4790                           ;CAN.c: 364:             if(message->data_length > 8)
  4791  00046A  EE20 F010          	lfsr	2,16
  4792  00046E  5030               	movf	CAN_TakeFrame@message,w,c
  4793  000470  26D9               	addwf	fsr2l,f,c
  4794  000472  5031               	movf	CAN_TakeFrame@message+1,w,c
  4795  000474  22DA               	addwfc	fsr2h,f,c
  4796  000476  0E08               	movlw	8
  4797  000478  64DF               	cpfsgt	indf2,c
  4798  00047A  D041               	goto	l4623
  4799  00047C  D01E               	goto	l4617
  4800  00047E                     l4599:
  4801                           
  4802                           ;CAN.c: 370:                         RXB0CON = 0;
  4803  00047E  0E00               	movlw	0
  4804  000480  6E60               	movwf	3936,c	;volatile
  4805                           
  4806                           ;CAN.c: 371:                         break;
  4807  000482  D03B               	goto	l4619
  4808  000484                     l4601:
  4809                           
  4810                           ;CAN.c: 373:                         RXB1CON = 0;
  4811  000484  0E00               	movlw	0
  4812  000486  010F               	movlb	15	; () banked
  4813  000488  D00E               	goto	L2
  4814  00048A                     l4603:
  4815                           
  4816                           ;CAN.c: 376:                         B0CON = 0;
  4817  00048A  0E00               	movlw	0
  4818  00048C  010E               	movlb	14	; () banked
  4819  00048E  6F20               	movwf	32,b	;volatile
  4820                           
  4821                           ;CAN.c: 377:                         break;
  4822  000490  D034               	goto	l4619
  4823  000492                     l4605:
  4824                           
  4825                           ;CAN.c: 379:                         B1CON = 0;
  4826  000492  0E00               	movlw	0
  4827  000494  010E               	movlb	14	; () banked
  4828  000496  6F30               	movwf	48,b	;volatile
  4829                           
  4830                           ;CAN.c: 380:                         break;
  4831  000498  D030               	goto	l4619
  4832  00049A                     l4607:
  4833                           
  4834                           ;CAN.c: 382:                         B2CON = 0;
  4835  00049A  0E00               	movlw	0
  4836  00049C  010E               	movlb	14	; () banked
  4837  00049E  6F40               	movwf	64,b	;volatile
  4838                           
  4839                           ;CAN.c: 383:                         break;
  4840  0004A0  D02C               	goto	l4619
  4841  0004A2                     l4609:
  4842                           
  4843                           ;CAN.c: 385:                         B3CON = 0;
  4844  0004A2  0E00               	movlw	0
  4845  0004A4  010E               	movlb	14	; () banked
  4846  0004A6                     L2:
  4847  0004A6  6F50               	movwf	80,b	;volatile
  4848                           
  4849                           ;CAN.c: 386:                         break;
  4850  0004A8  D028               	goto	l4619
  4851  0004AA                     l4611:
  4852                           
  4853                           ;CAN.c: 388:                         B4CON = 0;
  4854  0004AA  0E00               	movlw	0
  4855  0004AC  010E               	movlb	14	; () banked
  4856  0004AE  6F60               	movwf	96,b	;volatile
  4857                           
  4858                           ;CAN.c: 389:                         break;
  4859  0004B0  D024               	goto	l4619
  4860  0004B2                     l4613:
  4861                           
  4862                           ;CAN.c: 391:                         B5CON = 0;
  4863  0004B2  0E00               	movlw	0
  4864  0004B4  010E               	movlb	14	; () banked
  4865  0004B6  6F70               	movwf	112,b	;volatile
  4866                           
  4867                           ;CAN.c: 392:                         break;
  4868  0004B8  D020               	goto	l4619
  4869  0004BA                     l4617:
  4870  0004BA  5035               	movf	CAN_TakeFrame@k,w,c
  4871  0004BC  6E32               	movwf	??_CAN_TakeFrame& (0+255),c
  4872  0004BE  6A33               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  4873                           
  4874                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4875                           ; Switch size 1, requested type "simple"
  4876                           ; Number of cases is 1, Range of values is 0 to 0
  4877                           ; switch strategies available:
  4878                           ; Name         Instructions Cycles
  4879                           ; simple_byte            4     3 (average)
  4880                           ;	Chosen strategy is simple_byte
  4881  0004C0  5033               	movf	??_CAN_TakeFrame+1,w,c
  4882  0004C2  0A00               	xorlw	0	; case 0
  4883  0004C4  A4D8               	btfss	status,2,c
  4884  0004C6  D019               	goto	l4619
  4885                           
  4886                           ; Switch size 1, requested type "simple"
  4887                           ; Number of cases is 8, Range of values is 0 to 7
  4888                           ; switch strategies available:
  4889                           ; Name         Instructions Cycles
  4890                           ; simple_byte           25    13 (average)
  4891                           ;	Chosen strategy is simple_byte
  4892  0004C8  5032               	movf	??_CAN_TakeFrame,w,c
  4893  0004CA  0A00               	xorlw	0	; case 0
  4894  0004CC  B4D8               	btfsc	status,2,c
  4895  0004CE  D7D7               	goto	l4599
  4896  0004D0  0A01               	xorlw	1	; case 1
  4897  0004D2  B4D8               	btfsc	status,2,c
  4898  0004D4  D7D7               	goto	l4601
  4899  0004D6  0A03               	xorlw	3	; case 2
  4900  0004D8  B4D8               	btfsc	status,2,c
  4901  0004DA  D7D7               	goto	l4603
  4902  0004DC  0A01               	xorlw	1	; case 3
  4903  0004DE  B4D8               	btfsc	status,2,c
  4904  0004E0  D7D8               	goto	l4605
  4905  0004E2  0A07               	xorlw	7	; case 4
  4906  0004E4  B4D8               	btfsc	status,2,c
  4907  0004E6  D7D9               	goto	l4607
  4908  0004E8  0A01               	xorlw	1	; case 5
  4909  0004EA  B4D8               	btfsc	status,2,c
  4910  0004EC  D7DA               	goto	l4609
  4911  0004EE  0A03               	xorlw	3	; case 6
  4912  0004F0  B4D8               	btfsc	status,2,c
  4913  0004F2  D7DB               	goto	l4611
  4914  0004F4  0A01               	xorlw	1	; case 7
  4915  0004F6  B4D8               	btfsc	status,2,c
  4916  0004F8  D7DC               	goto	l4613
  4917  0004FA                     l4619:
  4918                           
  4919                           ;CAN.c: 394:                 return FALSE;
  4920  0004FA  0E00               	movlw	0
  4921  0004FC  0012               	return	
  4922  0004FE                     l4623:
  4923                           
  4924                           ;CAN.c: 396:             CAN_MoveBuffIntoFrame(message->data, &RXB0D0);
  4925  0004FE  0E08               	movlw	8
  4926  000500  2430               	addwf	CAN_TakeFrame@message,w,c
  4927  000502  6E28               	movwf	CAN_MoveBuffIntoFrame@Ram,c
  4928  000504  0E00               	movlw	0
  4929  000506  2031               	addwfc	CAN_TakeFrame@message+1,w,c
  4930  000508  6E29               	movwf	CAN_MoveBuffIntoFrame@Ram+1,c
  4931  00050A  0E66               	movlw	102
  4932  00050C  6E2A               	movwf	CAN_MoveBuffIntoFrame@Buf,c
  4933  00050E  0E0F               	movlw	15
  4934  000510  6E2B               	movwf	CAN_MoveBuffIntoFrame@Buf+1,c
  4935  000512  EC0E  F00D         	call	_CAN_MoveBuffIntoFrame	;wreg free
  4936                           
  4937                           ;CAN.c: 397:         }
  4938  000516  D027               	goto	l4645
  4939  000518                     l4625:
  4940                           
  4941                           ;CAN.c: 400:         {;CAN.c: 401:             message->message_type=0x02;
  4942  000518  EE20 F001          	lfsr	2,1
  4943  00051C  5030               	movf	CAN_TakeFrame@message,w,c
  4944  00051E  26D9               	addwf	fsr2l,f,c
  4945  000520  5031               	movf	CAN_TakeFrame@message+1,w,c
  4946  000522  22DA               	addwfc	fsr2h,f,c
  4947  000524  0E02               	movlw	2
  4948  000526  6EDF               	movwf	indf2,c
  4949  000528  D01E               	goto	l4645
  4950  00052A                     l4627:
  4951                           
  4952                           ;CAN.c: 407:                 RXB0CON = 0;
  4953  00052A  0E00               	movlw	0
  4954  00052C  6E60               	movwf	3936,c	;volatile
  4955                           
  4956                           ;CAN.c: 408:                 break;
  4957  00052E  D03B               	goto	l4647
  4958  000530                     l4629:
  4959                           
  4960                           ;CAN.c: 410:                 RXB1CON = 0;
  4961  000530  0E00               	movlw	0
  4962  000532  010F               	movlb	15	; () banked
  4963  000534  D00E               	goto	L3
  4964  000536                     l4631:
  4965                           
  4966                           ;CAN.c: 413:                 B0CON = 0;
  4967  000536  0E00               	movlw	0
  4968  000538  010E               	movlb	14	; () banked
  4969  00053A  6F20               	movwf	32,b	;volatile
  4970                           
  4971                           ;CAN.c: 414:                 break;
  4972  00053C  D034               	goto	l4647
  4973  00053E                     l4633:
  4974                           
  4975                           ;CAN.c: 416:                 B1CON = 0;
  4976  00053E  0E00               	movlw	0
  4977  000540  010E               	movlb	14	; () banked
  4978  000542  6F30               	movwf	48,b	;volatile
  4979                           
  4980                           ;CAN.c: 417:                 break;
  4981  000544  D030               	goto	l4647
  4982  000546                     l4635:
  4983                           
  4984                           ;CAN.c: 419:                 B2CON = 0;
  4985  000546  0E00               	movlw	0
  4986  000548  010E               	movlb	14	; () banked
  4987  00054A  6F40               	movwf	64,b	;volatile
  4988                           
  4989                           ;CAN.c: 420:                 break;
  4990  00054C  D02C               	goto	l4647
  4991  00054E                     l4637:
  4992                           
  4993                           ;CAN.c: 422:                 B3CON = 0;
  4994  00054E  0E00               	movlw	0
  4995  000550  010E               	movlb	14	; () banked
  4996  000552                     L3:
  4997  000552  6F50               	movwf	80,b	;volatile
  4998                           
  4999                           ;CAN.c: 423:                 break;
  5000  000554  D028               	goto	l4647
  5001  000556                     l4639:
  5002                           
  5003                           ;CAN.c: 425:                 B4CON = 0;
  5004  000556  0E00               	movlw	0
  5005  000558  010E               	movlb	14	; () banked
  5006  00055A  6F60               	movwf	96,b	;volatile
  5007                           
  5008                           ;CAN.c: 426:                 break;
  5009  00055C  D024               	goto	l4647
  5010  00055E                     l4641:
  5011                           
  5012                           ;CAN.c: 428:                 B5CON = 0;
  5013  00055E  0E00               	movlw	0
  5014  000560  010E               	movlb	14	; () banked
  5015  000562  6F70               	movwf	112,b	;volatile
  5016                           
  5017                           ;CAN.c: 429:                 break;
  5018  000564  D020               	goto	l4647
  5019  000566                     l4645:
  5020  000566  5035               	movf	CAN_TakeFrame@k,w,c
  5021  000568  6E32               	movwf	??_CAN_TakeFrame& (0+255),c
  5022  00056A  6A33               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  5023                           
  5024                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5025                           ; Switch size 1, requested type "simple"
  5026                           ; Number of cases is 1, Range of values is 0 to 0
  5027                           ; switch strategies available:
  5028                           ; Name         Instructions Cycles
  5029                           ; simple_byte            4     3 (average)
  5030                           ;	Chosen strategy is simple_byte
  5031  00056C  5033               	movf	??_CAN_TakeFrame+1,w,c
  5032  00056E  0A00               	xorlw	0	; case 0
  5033  000570  A4D8               	btfss	status,2,c
  5034  000572  D019               	goto	l4647
  5035                           
  5036                           ; Switch size 1, requested type "simple"
  5037                           ; Number of cases is 8, Range of values is 0 to 7
  5038                           ; switch strategies available:
  5039                           ; Name         Instructions Cycles
  5040                           ; simple_byte           25    13 (average)
  5041                           ;	Chosen strategy is simple_byte
  5042  000574  5032               	movf	??_CAN_TakeFrame,w,c
  5043  000576  0A00               	xorlw	0	; case 0
  5044  000578  B4D8               	btfsc	status,2,c
  5045  00057A  D7D7               	goto	l4627
  5046  00057C  0A01               	xorlw	1	; case 1
  5047  00057E  B4D8               	btfsc	status,2,c
  5048  000580  D7D7               	goto	l4629
  5049  000582  0A03               	xorlw	3	; case 2
  5050  000584  B4D8               	btfsc	status,2,c
  5051  000586  D7D7               	goto	l4631
  5052  000588  0A01               	xorlw	1	; case 3
  5053  00058A  B4D8               	btfsc	status,2,c
  5054  00058C  D7D8               	goto	l4633
  5055  00058E  0A07               	xorlw	7	; case 4
  5056  000590  B4D8               	btfsc	status,2,c
  5057  000592  D7D9               	goto	l4635
  5058  000594  0A01               	xorlw	1	; case 5
  5059  000596  B4D8               	btfsc	status,2,c
  5060  000598  D7DA               	goto	l4637
  5061  00059A  0A03               	xorlw	3	; case 6
  5062  00059C  B4D8               	btfsc	status,2,c
  5063  00059E  D7DB               	goto	l4639
  5064  0005A0  0A01               	xorlw	1	; case 7
  5065  0005A2  B4D8               	btfsc	status,2,c
  5066  0005A4  D7DC               	goto	l4641
  5067  0005A6                     l4647:
  5068                           
  5069                           ;CAN.c: 431:         return TRUE;
  5070  0005A6  0E01               	movlw	1
  5071  0005A8  0012               	return		;funcret
  5072  0005AA                     __end_of_CAN_TakeFrame:
  5073                           	opt callstack 0
  5074                           
  5075 ;; *************** function ___awdiv *****************
  5076 ;; Defined at:
  5077 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  5078 ;; Parameters:    Size  Location     Type
  5079 ;;  dividend        2    5[COMRAM] int 
  5080 ;;  divisor         2    7[COMRAM] int 
  5081 ;; Auto vars:     Size  Location     Type
  5082 ;;  quotient        2   11[COMRAM] int 
  5083 ;;  sign            1   10[COMRAM] unsigned char 
  5084 ;;  counter         1    9[COMRAM] unsigned char 
  5085 ;; Return value:  Size  Location     Type
  5086 ;;                  2    5[COMRAM] int 
  5087 ;; Registers used:
  5088 ;;		wreg, status,2, status,0
  5089 ;; Tracked objects:
  5090 ;;		On entry : 0/0
  5091 ;;		On exit  : 0/0
  5092 ;;		Unchanged: 0/0
  5093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5094 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5095 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5097 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5098 ;;Total ram usage:        8 bytes
  5099 ;; Hardware stack levels used:    1
  5100 ;; Hardware stack levels required when called:    3
  5101 ;; This function calls:
  5102 ;;		Nothing
  5103 ;; This function is called by:
  5104 ;;		_CAN_TakeFrame
  5105 ;;		_FRAME_HandleCanFrame
  5106 ;; This function uses a non-reentrant model
  5107 ;;
  5108                           
  5109                           	psect	text35
  5110  00121A                     __ptext35:
  5111                           	opt callstack 0
  5112  00121A                     ___awdiv:
  5113                           	opt callstack 25
  5114                           
  5115                           ;incstack = 0
  5116  00121A  0E00               	movlw	0
  5117  00121C  6E2D               	movwf	___awdiv@sign,c
  5118  00121E  AE2B               	btfss	___awdiv@divisor+1,7,c
  5119  001220  D006               	goto	l4527
  5120  001222  6C2A               	negf	___awdiv@divisor,c
  5121  001224  1E2B               	comf	___awdiv@divisor+1,f,c
  5122  001226  B0D8               	btfsc	status,0,c
  5123  001228  2A2B               	incf	___awdiv@divisor+1,f,c
  5124  00122A  0E01               	movlw	1
  5125  00122C  6E2D               	movwf	___awdiv@sign,c
  5126  00122E                     l4527:
  5127  00122E  AE29               	btfss	___awdiv@dividend+1,7,c
  5128  001230  D006               	goto	l4533
  5129  001232  6C28               	negf	___awdiv@dividend,c
  5130  001234  1E29               	comf	___awdiv@dividend+1,f,c
  5131  001236  B0D8               	btfsc	status,0,c
  5132  001238  2A29               	incf	___awdiv@dividend+1,f,c
  5133  00123A  0E01               	movlw	1
  5134  00123C  1A2D               	xorwf	___awdiv@sign,f,c
  5135  00123E                     l4533:
  5136  00123E  0E00               	movlw	0
  5137  001240  6E2F               	movwf	___awdiv@quotient+1,c
  5138  001242  0E00               	movlw	0
  5139  001244  6E2E               	movwf	___awdiv@quotient,c
  5140  001246  502A               	movf	___awdiv@divisor,w,c
  5141  001248  102B               	iorwf	___awdiv@divisor+1,w,c
  5142  00124A  B4D8               	btfsc	status,2,c
  5143  00124C  D01C               	goto	l4555
  5144  00124E  0E01               	movlw	1
  5145  001250  6E2C               	movwf	___awdiv@counter,c
  5146  001252  D004               	goto	l4541
  5147  001254                     l4539:
  5148  001254  90D8               	bcf	status,0,c
  5149  001256  362A               	rlcf	___awdiv@divisor,f,c
  5150  001258  362B               	rlcf	___awdiv@divisor+1,f,c
  5151  00125A  2A2C               	incf	___awdiv@counter,f,c
  5152  00125C                     l4541:
  5153  00125C  AE2B               	btfss	___awdiv@divisor+1,7,c
  5154  00125E  D7FA               	goto	l4539
  5155  001260                     u2880:
  5156  001260  90D8               	bcf	status,0,c
  5157  001262  362E               	rlcf	___awdiv@quotient,f,c
  5158  001264  362F               	rlcf	___awdiv@quotient+1,f,c
  5159  001266  502A               	movf	___awdiv@divisor,w,c
  5160  001268  5C28               	subwf	___awdiv@dividend,w,c
  5161  00126A  502B               	movf	___awdiv@divisor+1,w,c
  5162  00126C  5829               	subwfb	___awdiv@dividend+1,w,c
  5163  00126E  A0D8               	btfss	status,0,c
  5164  001270  D005               	goto	l4551
  5165  001272  502A               	movf	___awdiv@divisor,w,c
  5166  001274  5E28               	subwf	___awdiv@dividend,f,c
  5167  001276  502B               	movf	___awdiv@divisor+1,w,c
  5168  001278  5A29               	subwfb	___awdiv@dividend+1,f,c
  5169  00127A  802E               	bsf	___awdiv@quotient,0,c
  5170  00127C                     l4551:
  5171  00127C  90D8               	bcf	status,0,c
  5172  00127E  322B               	rrcf	___awdiv@divisor+1,f,c
  5173  001280  322A               	rrcf	___awdiv@divisor,f,c
  5174  001282  2E2C               	decfsz	___awdiv@counter,f,c
  5175  001284  D7ED               	goto	u2880
  5176  001286                     l4555:
  5177  001286  502D               	movf	___awdiv@sign,w,c
  5178  001288  B4D8               	btfsc	status,2,c
  5179  00128A  D004               	goto	l4559
  5180  00128C  6C2E               	negf	___awdiv@quotient,c
  5181  00128E  1E2F               	comf	___awdiv@quotient+1,f,c
  5182  001290  B0D8               	btfsc	status,0,c
  5183  001292  2A2F               	incf	___awdiv@quotient+1,f,c
  5184  001294                     l4559:
  5185  001294  C02E  F028         	movff	___awdiv@quotient,?___awdiv
  5186  001298  C02F  F029         	movff	___awdiv@quotient+1,?___awdiv+1
  5187  00129C  0012               	return		;funcret
  5188  00129E                     __end_of___awdiv:
  5189                           	opt callstack 0
  5190                           
  5191 ;; *************** function _CAN_MoveBuffIntoFrame *****************
  5192 ;; Defined at:
  5193 ;;		line 233 in file "CAN.c"
  5194 ;; Parameters:    Size  Location     Type
  5195 ;;  Ram             2    5[COMRAM] PTR unsigned char 
  5196 ;;		 -> TRM_DataTransmition@canMessage(17), RXB0D0(1), 
  5197 ;;  Buf             2    7[COMRAM] PTR unsigned char 
  5198 ;;		 -> TRM_DataTransmition@canMessage(17), RXB0D0(1), 
  5199 ;; Auto vars:     Size  Location     Type
  5200 ;;  i               1    9[COMRAM] unsigned char 
  5201 ;; Return value:  Size  Location     Type
  5202 ;;                  1    wreg      void 
  5203 ;; Registers used:
  5204 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5205 ;; Tracked objects:
  5206 ;;		On entry : 0/0
  5207 ;;		On exit  : 0/0
  5208 ;;		Unchanged: 0/0
  5209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5210 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5211 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5213 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5214 ;;Total ram usage:        5 bytes
  5215 ;; Hardware stack levels used:    1
  5216 ;; Hardware stack levels required when called:    3
  5217 ;; This function calls:
  5218 ;;		Nothing
  5219 ;; This function is called by:
  5220 ;;		_CAN_SendFrame
  5221 ;;		_CAN_TakeFrame
  5222 ;; This function uses a non-reentrant model
  5223 ;;
  5224                           
  5225                           	psect	text36
  5226  001A1C                     __ptext36:
  5227                           	opt callstack 0
  5228  001A1C                     _CAN_MoveBuffIntoFrame:
  5229                           	opt callstack 24
  5230                           
  5231                           ;CAN.c: 233: static void CAN_MoveBuffIntoFrame(BYTE* Ram, BYTE* Buf);CAN.c: 234: {;CAN.c
      +                          : 235:     BYTE i;;CAN.c: 236:     for(i=0; i<8; ++i)
  5232                           
  5233                           ;incstack = 0
  5234  001A1C  0E00               	movlw	0
  5235  001A1E  6E2C               	movwf	CAN_MoveBuffIntoFrame@i,c
  5236  001A20                     l4041:
  5237                           
  5238                           ;CAN.c: 237:     {;CAN.c: 238:         Ram[i]=(*(Buf+i));
  5239  001A20  502C               	movf	CAN_MoveBuffIntoFrame@i,w,c
  5240  001A22  242A               	addwf	CAN_MoveBuffIntoFrame@Buf,w,c
  5241  001A24  6ED9               	movwf	fsr2l,c
  5242  001A26  0E00               	movlw	0
  5243  001A28  202B               	addwfc	CAN_MoveBuffIntoFrame@Buf+1,w,c
  5244  001A2A  6EDA               	movwf	fsr2h,c
  5245  001A2C  502C               	movf	CAN_MoveBuffIntoFrame@i,w,c
  5246  001A2E  2428               	addwf	CAN_MoveBuffIntoFrame@Ram,w,c
  5247  001A30  6EE1               	movwf	fsr1l,c
  5248  001A32  0E00               	movlw	0
  5249  001A34  2029               	addwfc	CAN_MoveBuffIntoFrame@Ram+1,w,c
  5250  001A36  6EE2               	movwf	fsr1h,c
  5251  001A38  CFDF FFE7          	movff	indf2,indf1
  5252                           
  5253                           ;CAN.c: 239:     }
  5254  001A3C  2A2C               	incf	CAN_MoveBuffIntoFrame@i,f,c
  5255  001A3E  0E07               	movlw	7
  5256  001A40  642C               	cpfsgt	CAN_MoveBuffIntoFrame@i,c
  5257  001A42  D7EE               	goto	l4041
  5258  001A44  0012               	return	
  5259  001A46                     __end_of_CAN_MoveBuffIntoFrame:
  5260                           	opt callstack 0
  5261                           
  5262 ;; *************** function _TMR1_Update_flag_Set *****************
  5263 ;; Defined at:
  5264 ;;		line 32 in file "TMR1.c"
  5265 ;; Parameters:    Size  Location     Type
  5266 ;;  a               2    5[COMRAM] unsigned int 
  5267 ;; Auto vars:     Size  Location     Type
  5268 ;;		None
  5269 ;; Return value:  Size  Location     Type
  5270 ;;                  1    wreg      void 
  5271 ;; Registers used:
  5272 ;;		None
  5273 ;; Tracked objects:
  5274 ;;		On entry : 0/0
  5275 ;;		On exit  : 0/0
  5276 ;;		Unchanged: 0/0
  5277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5278 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5281 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5282 ;;Total ram usage:        2 bytes
  5283 ;; Hardware stack levels used:    1
  5284 ;; Hardware stack levels required when called:    3
  5285 ;; This function calls:
  5286 ;;		Nothing
  5287 ;; This function is called by:
  5288 ;;		_main
  5289 ;; This function uses a non-reentrant model
  5290 ;;
  5291                           
  5292                           	psect	text37
  5293  001B98                     __ptext37:
  5294                           	opt callstack 0
  5295  001B98                     _TMR1_Update_flag_Set:
  5296                           	opt callstack 27
  5297                           
  5298                           ;TMR1.c: 32: void TMR1_Update_flag_Set(UINT a);TMR1.c: 33: {;TMR1.c: 34:     TMR1_Update
      +                          _flag = a;
  5299                           
  5300                           ;incstack = 0
  5301  001B98  C028  F009         	movff	TMR1_Update_flag_Set@a,_TMR1_Update_flag
  5302  001B9C  C029  F00A         	movff	TMR1_Update_flag_Set@a+1,_TMR1_Update_flag+1
  5303  001BA0  0012               	return		;funcret
  5304  001BA2                     __end_of_TMR1_Update_flag_Set:
  5305                           	opt callstack 0
  5306                           
  5307 ;; *************** function _TMR1_Update_flag_Get *****************
  5308 ;; Defined at:
  5309 ;;		line 47 in file "TMR1.c"
  5310 ;; Parameters:    Size  Location     Type
  5311 ;;		None
  5312 ;; Auto vars:     Size  Location     Type
  5313 ;;		None
  5314 ;; Return value:  Size  Location     Type
  5315 ;;                  2    5[COMRAM] unsigned int 
  5316 ;; Registers used:
  5317 ;;		None
  5318 ;; Tracked objects:
  5319 ;;		On entry : 0/0
  5320 ;;		On exit  : 0/0
  5321 ;;		Unchanged: 0/0
  5322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5323 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5326 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5327 ;;Total ram usage:        2 bytes
  5328 ;; Hardware stack levels used:    1
  5329 ;; Hardware stack levels required when called:    3
  5330 ;; This function calls:
  5331 ;;		Nothing
  5332 ;; This function is called by:
  5333 ;;		_main
  5334 ;; This function uses a non-reentrant model
  5335 ;;
  5336                           
  5337                           	psect	text38
  5338  001BA2                     __ptext38:
  5339                           	opt callstack 0
  5340  001BA2                     _TMR1_Update_flag_Get:
  5341                           	opt callstack 27
  5342                           
  5343                           ;TMR1.c: 49:     return TMR1_Update_flag;
  5344                           
  5345                           ;incstack = 0
  5346  001BA2  C009  F028         	movff	_TMR1_Update_flag,?_TMR1_Update_flag_Get
  5347  001BA6  C00A  F029         	movff	_TMR1_Update_flag+1,?_TMR1_Update_flag_Get+1
  5348  001BAA  0012               	return		;funcret
  5349  001BAC                     __end_of_TMR1_Update_flag_Get:
  5350                           	opt callstack 0
  5351                           
  5352 ;; *************** function _LED_Update *****************
  5353 ;; Defined at:
  5354 ;;		line 148 in file "LED.c"
  5355 ;; Parameters:    Size  Location     Type
  5356 ;;		None
  5357 ;; Auto vars:     Size  Location     Type
  5358 ;;		None
  5359 ;; Return value:  Size  Location     Type
  5360 ;;                  1    wreg      unsigned char 
  5361 ;; Registers used:
  5362 ;;		wreg, status,2, status,0, cstack
  5363 ;; Tracked objects:
  5364 ;;		On entry : 0/0
  5365 ;;		On exit  : 0/0
  5366 ;;		Unchanged: 0/0
  5367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5371 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5372 ;;Total ram usage:        0 bytes
  5373 ;; Hardware stack levels used:    1
  5374 ;; Hardware stack levels required when called:    5
  5375 ;; This function calls:
  5376 ;;		_LED_Control
  5377 ;;		_LED_Left
  5378 ;;		_LED_Light_Pos
  5379 ;;		_LED_Right
  5380 ;; This function is called by:
  5381 ;;		_main
  5382 ;; This function uses a non-reentrant model
  5383 ;;
  5384                           
  5385                           	psect	text39
  5386  00129E                     __ptext39:
  5387                           	opt callstack 0
  5388  00129E                     _LED_Update:
  5389                           	opt callstack 25
  5390                           
  5391                           ;LED.c: 150:     static LED_RGA_type Red = RED;;LED.c: 151:     static LED_RGA_type Gree
      +                          n = GREEN;;LED.c: 152:     static UINT pos1 = 0b0000000001;;LED.c: 153:     static UINT 
      +                          pos2 = 0b0000000001;;LED.c: 155:     if(LOCK == 0)
  5392                           
  5393                           ;incstack = 0
  5394  00129E  5010               	movf	_LOCK,w,c
  5395  0012A0  A4D8               	btfss	status,2,c
  5396  0012A2  D013               	goto	l4779
  5397                           
  5398                           ;LED.c: 156:     {;LED.c: 157:     LED_Control(RED,0b0000000000);
  5399  0012A4  0E00               	movlw	0
  5400  0012A6  6E29               	movwf	LED_Control@diode+1,c
  5401  0012A8  0E00               	movlw	0
  5402  0012AA  6E28               	movwf	LED_Control@diode,c
  5403  0012AC  0E00               	movlw	0
  5404  0012AE  EC58  F005         	call	_LED_Control
  5405                           
  5406                           ;LED.c: 158:     LED_Light_Pos(Green,pos2,Fulfillment_Lvl);
  5407  0012B2  C041  F02F         	movff	LED_Update@pos2,LED_Light_Pos@pos
  5408  0012B6  C042  F030         	movff	LED_Update@pos2+1,LED_Light_Pos@pos+1
  5409  0012BA  C045  F031         	movff	_Fulfillment_Lvl,LED_Light_Pos@fulfillment
  5410  0012BE  C046  F032         	movff	_Fulfillment_Lvl+1,LED_Light_Pos@fulfillment+1
  5411  0012C2  5047               	movf	LED_Update@Green,w,c
  5412  0012C4  EC1B  F008         	call	_LED_Light_Pos
  5413                           
  5414                           ;LED.c: 160:     }
  5415  0012C8  D012               	goto	l392
  5416  0012CA                     l4779:
  5417                           
  5418                           ;LED.c: 162:     {;LED.c: 163:     LED_Control(Green,0b0000000000);
  5419  0012CA  0E00               	movlw	0
  5420  0012CC  6E29               	movwf	LED_Control@diode+1,c
  5421  0012CE  0E00               	movlw	0
  5422  0012D0  6E28               	movwf	LED_Control@diode,c
  5423  0012D2  5047               	movf	LED_Update@Green,w,c
  5424  0012D4  EC58  F005         	call	_LED_Control
  5425                           
  5426                           ;LED.c: 164:     LED_Light_Pos(RED,pos1,Fulfillment_Lvl);
  5427  0012D8  C043  F02F         	movff	LED_Update@pos1,LED_Light_Pos@pos
  5428  0012DC  C044  F030         	movff	LED_Update@pos1+1,LED_Light_Pos@pos+1
  5429  0012E0  C045  F031         	movff	_Fulfillment_Lvl,LED_Light_Pos@fulfillment
  5430  0012E4  C046  F032         	movff	_Fulfillment_Lvl+1,LED_Light_Pos@fulfillment+1
  5431  0012E8  0E00               	movlw	0
  5432  0012EA  EC1B  F008         	call	_LED_Light_Pos
  5433  0012EE                     l392:
  5434                           
  5435                           ;LED.c: 166:     pos1 = LED_Right(pos1);
  5436  0012EE  C043  F028         	movff	LED_Update@pos1,LED_Right@a
  5437  0012F2  C044  F029         	movff	LED_Update@pos1+1,LED_Right@a+1
  5438  0012F6  ECD5  F00B         	call	_LED_Right	;wreg free
  5439  0012FA  C028  F043         	movff	?_LED_Right,LED_Update@pos1
  5440  0012FE  C029  F044         	movff	?_LED_Right+1,LED_Update@pos1+1
  5441                           
  5442                           ;LED.c: 167:     pos2 = LED_Left(pos2);
  5443  001302  C041  F028         	movff	LED_Update@pos2,LED_Left@a
  5444  001306  C042  F029         	movff	LED_Update@pos2+1,LED_Left@a+1
  5445  00130A  ECFB  F00B         	call	_LED_Left	;wreg free
  5446  00130E  C028  F041         	movff	?_LED_Left,LED_Update@pos2
  5447  001312  C029  F042         	movff	?_LED_Left+1,LED_Update@pos2+1
  5448  001316  0012               	return		;funcret
  5449  001318                     __end_of_LED_Update:
  5450                           	opt callstack 0
  5451                           
  5452 ;; *************** function _LED_Light_Pos *****************
  5453 ;; Defined at:
  5454 ;;		line 239 in file "LED.c"
  5455 ;; Parameters:    Size  Location     Type
  5456 ;;  color           1    wreg     enum E10644
  5457 ;;  pos             2   12[COMRAM] unsigned int 
  5458 ;;  fulfillment     2   14[COMRAM] unsigned int 
  5459 ;; Auto vars:     Size  Location     Type
  5460 ;;  color           1   16[COMRAM] enum E10644
  5461 ;;  flage           2   21[COMRAM] unsigned int 
  5462 ;;  pos2            2   19[COMRAM] unsigned int 
  5463 ;;  LED_array       2   17[COMRAM] unsigned int 
  5464 ;; Return value:  Size  Location     Type
  5465 ;;                  2   12[COMRAM] unsigned int 
  5466 ;; Registers used:
  5467 ;;		wreg, status,2, status,0, cstack
  5468 ;; Tracked objects:
  5469 ;;		On entry : 0/0
  5470 ;;		On exit  : 0/0
  5471 ;;		Unchanged: 0/0
  5472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5473 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5474 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5476 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5477 ;;Total ram usage:       11 bytes
  5478 ;; Hardware stack levels used:    1
  5479 ;; Hardware stack levels required when called:    4
  5480 ;; This function calls:
  5481 ;;		_LED_Control
  5482 ;;		_LED_Left
  5483 ;;		_LED_Right
  5484 ;;		___lwdiv
  5485 ;; This function is called by:
  5486 ;;		_LED_Update
  5487 ;; This function uses a non-reentrant model
  5488 ;;
  5489                           
  5490                           	psect	text40
  5491  001036                     __ptext40:
  5492                           	opt callstack 0
  5493  001036                     _LED_Light_Pos:
  5494                           	opt callstack 25
  5495                           
  5496                           ;incstack = 0
  5497                           ;LED_Light_Pos@color stored from wreg
  5498  001036  6E33               	movwf	LED_Light_Pos@color,c
  5499                           
  5500                           ;LED.c: 239: UINT LED_Light_Pos(LED_RGA_type color,UINT pos, UINT fulfillment);LED.c: 24
      +                          0: {;LED.c: 241:     UINT pos2 =pos;
  5501  001038  C02F  F036         	movff	LED_Light_Pos@pos,LED_Light_Pos@pos2
  5502  00103C  C030  F037         	movff	LED_Light_Pos@pos+1,LED_Light_Pos@pos2+1
  5503                           
  5504                           ;LED.c: 242:     UINT LED_array = 0b0000000000;
  5505  001040  0E00               	movlw	0
  5506  001042  6E35               	movwf	LED_Light_Pos@LED_array+1,c
  5507  001044  0E00               	movlw	0
  5508  001046  6E34               	movwf	LED_Light_Pos@LED_array,c
  5509                           
  5510                           ;LED.c: 243:     UINT flage = fulfillment/10;
  5511  001048  C031  F028         	movff	LED_Light_Pos@fulfillment,___lwdiv@dividend
  5512  00104C  C032  F029         	movff	LED_Light_Pos@fulfillment+1,___lwdiv@dividend+1
  5513  001050  0E00               	movlw	0
  5514  001052  6E2B               	movwf	___lwdiv@divisor+1,c
  5515  001054  0E0A               	movlw	10
  5516  001056  6E2A               	movwf	___lwdiv@divisor,c
  5517  001058  EC5F  F00B         	call	___lwdiv	;wreg free
  5518  00105C  C028  F038         	movff	?___lwdiv,LED_Light_Pos@flage
  5519  001060  C029  F039         	movff	?___lwdiv+1,LED_Light_Pos@flage+1
  5520                           
  5521                           ;LED.c: 244:     if(color == RED)
  5522  001064  5033               	movf	LED_Light_Pos@color,w,c
  5523  001066  B4D8               	btfsc	status,2,c
  5524  001068  D017               	goto	l4685
  5525  00106A  D031               	goto	l4693
  5526  00106C                     l4679:
  5527                           
  5528                           ;LED.c: 247:         {;LED.c: 248:             LED_array = pos2|LED_array;
  5529  00106C  5034               	movf	LED_Light_Pos@LED_array,w,c
  5530  00106E  1036               	iorwf	LED_Light_Pos@pos2,w,c
  5531  001070  6E34               	movwf	LED_Light_Pos@LED_array,c
  5532  001072  5035               	movf	LED_Light_Pos@LED_array+1,w,c
  5533  001074  1037               	iorwf	LED_Light_Pos@pos2+1,w,c
  5534  001076  6E35               	movwf	LED_Light_Pos@LED_array+1,c
  5535                           
  5536                           ;LED.c: 249:             pos2 = LED_Left(pos2);
  5537  001078  C036  F028         	movff	LED_Light_Pos@pos2,LED_Left@a
  5538  00107C  C037  F029         	movff	LED_Light_Pos@pos2+1,LED_Left@a+1
  5539  001080  ECFB  F00B         	call	_LED_Left	;wreg free
  5540  001084  C028  F036         	movff	?_LED_Left,LED_Light_Pos@pos2
  5541  001088  C029  F037         	movff	?_LED_Left+1,LED_Light_Pos@pos2+1
  5542                           
  5543                           ;LED.c: 250:             flage = flage - 1;
  5544  00108C  0EFF               	movlw	255
  5545  00108E  2438               	addwf	LED_Light_Pos@flage,w,c
  5546  001090  6E38               	movwf	LED_Light_Pos@flage,c
  5547  001092  0EFF               	movlw	255
  5548  001094  2039               	addwfc	LED_Light_Pos@flage+1,w,c
  5549  001096  6E39               	movwf	LED_Light_Pos@flage+1,c
  5550  001098                     l4685:
  5551                           
  5552                           ;LED.c: 246:         while(flage>0)
  5553  001098  5038               	movf	LED_Light_Pos@flage,w,c
  5554  00109A  1039               	iorwf	LED_Light_Pos@flage+1,w,c
  5555  00109C  B4D8               	btfsc	status,2,c
  5556  00109E  D01B               	goto	u2990
  5557  0010A0  D7E5               	goto	l4679
  5558  0010A2                     l4687:
  5559                           
  5560                           ;LED.c: 256:         {;LED.c: 257:             LED_array = pos2|LED_array;
  5561  0010A2  5034               	movf	LED_Light_Pos@LED_array,w,c
  5562  0010A4  1036               	iorwf	LED_Light_Pos@pos2,w,c
  5563  0010A6  6E34               	movwf	LED_Light_Pos@LED_array,c
  5564  0010A8  5035               	movf	LED_Light_Pos@LED_array+1,w,c
  5565  0010AA  1037               	iorwf	LED_Light_Pos@pos2+1,w,c
  5566  0010AC  6E35               	movwf	LED_Light_Pos@LED_array+1,c
  5567                           
  5568                           ;LED.c: 258:             pos2 = LED_Right(pos2);
  5569  0010AE  C036  F028         	movff	LED_Light_Pos@pos2,LED_Right@a
  5570  0010B2  C037  F029         	movff	LED_Light_Pos@pos2+1,LED_Right@a+1
  5571  0010B6  ECD5  F00B         	call	_LED_Right	;wreg free
  5572  0010BA  C028  F036         	movff	?_LED_Right,LED_Light_Pos@pos2
  5573  0010BE  C029  F037         	movff	?_LED_Right+1,LED_Light_Pos@pos2+1
  5574                           
  5575                           ;LED.c: 259:             flage = flage - 1;
  5576  0010C2  0EFF               	movlw	255
  5577  0010C4  2438               	addwf	LED_Light_Pos@flage,w,c
  5578  0010C6  6E38               	movwf	LED_Light_Pos@flage,c
  5579  0010C8  0EFF               	movlw	255
  5580  0010CA  2039               	addwfc	LED_Light_Pos@flage+1,w,c
  5581  0010CC  6E39               	movwf	LED_Light_Pos@flage+1,c
  5582  0010CE                     l4693:
  5583                           
  5584                           ;LED.c: 255:         while(flage>0)
  5585  0010CE  5038               	movf	LED_Light_Pos@flage,w,c
  5586  0010D0  1039               	iorwf	LED_Light_Pos@flage+1,w,c
  5587  0010D2  A4D8               	btfss	status,2,c
  5588  0010D4  D7E6               	goto	l4687
  5589  0010D6                     u2990:
  5590                           
  5591                           ;LED.c: 262:     LED_Control(color, LED_array);
  5592  0010D6  C034  F028         	movff	LED_Light_Pos@LED_array,LED_Control@diode
  5593  0010DA  C035  F029         	movff	LED_Light_Pos@LED_array+1,LED_Control@diode+1
  5594  0010DE  5033               	movf	LED_Light_Pos@color,w,c
  5595  0010E0  EC58  F005         	call	_LED_Control
  5596  0010E4  0012               	return		;funcret
  5597  0010E6                     __end_of_LED_Light_Pos:
  5598                           	opt callstack 0
  5599                           
  5600 ;; *************** function ___lwdiv *****************
  5601 ;; Defined at:
  5602 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwdiv.c"
  5603 ;; Parameters:    Size  Location     Type
  5604 ;;  dividend        2    5[COMRAM] unsigned int 
  5605 ;;  divisor         2    7[COMRAM] unsigned int 
  5606 ;; Auto vars:     Size  Location     Type
  5607 ;;  quotient        2   10[COMRAM] unsigned int 
  5608 ;;  counter         1    9[COMRAM] unsigned char 
  5609 ;; Return value:  Size  Location     Type
  5610 ;;                  2    5[COMRAM] unsigned int 
  5611 ;; Registers used:
  5612 ;;		wreg, status,2, status,0
  5613 ;; Tracked objects:
  5614 ;;		On entry : 0/0
  5615 ;;		On exit  : 0/0
  5616 ;;		Unchanged: 0/0
  5617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5618 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5619 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5621 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5622 ;;Total ram usage:        7 bytes
  5623 ;; Hardware stack levels used:    1
  5624 ;; Hardware stack levels required when called:    3
  5625 ;; This function calls:
  5626 ;;		Nothing
  5627 ;; This function is called by:
  5628 ;;		_LED_Light_Pos
  5629 ;;		_FRAME_Plot
  5630 ;; This function uses a non-reentrant model
  5631 ;;
  5632                           
  5633                           	psect	text41
  5634  0016BE                     __ptext41:
  5635                           	opt callstack 0
  5636  0016BE                     ___lwdiv:
  5637                           	opt callstack 24
  5638                           
  5639                           ;incstack = 0
  5640  0016BE  0E00               	movlw	0
  5641  0016C0  6E2E               	movwf	___lwdiv@quotient+1,c
  5642  0016C2  0E00               	movlw	0
  5643  0016C4  6E2D               	movwf	___lwdiv@quotient,c
  5644  0016C6  502A               	movf	___lwdiv@divisor,w,c
  5645  0016C8  102B               	iorwf	___lwdiv@divisor+1,w,c
  5646  0016CA  B4D8               	btfsc	status,2,c
  5647  0016CC  D01C               	goto	l1465
  5648  0016CE  0E01               	movlw	1
  5649  0016D0  6E2C               	movwf	___lwdiv@counter,c
  5650  0016D2  D004               	goto	l4275
  5651  0016D4                     l4273:
  5652  0016D4  90D8               	bcf	status,0,c
  5653  0016D6  362A               	rlcf	___lwdiv@divisor,f,c
  5654  0016D8  362B               	rlcf	___lwdiv@divisor+1,f,c
  5655  0016DA  2A2C               	incf	___lwdiv@counter,f,c
  5656  0016DC                     l4275:
  5657  0016DC  AE2B               	btfss	___lwdiv@divisor+1,7,c
  5658  0016DE  D7FA               	goto	l4273
  5659  0016E0                     u2530:
  5660  0016E0  90D8               	bcf	status,0,c
  5661  0016E2  362D               	rlcf	___lwdiv@quotient,f,c
  5662  0016E4  362E               	rlcf	___lwdiv@quotient+1,f,c
  5663  0016E6  502A               	movf	___lwdiv@divisor,w,c
  5664  0016E8  5C28               	subwf	___lwdiv@dividend,w,c
  5665  0016EA  502B               	movf	___lwdiv@divisor+1,w,c
  5666  0016EC  5829               	subwfb	___lwdiv@dividend+1,w,c
  5667  0016EE  A0D8               	btfss	status,0,c
  5668  0016F0  D005               	goto	l4285
  5669  0016F2  502A               	movf	___lwdiv@divisor,w,c
  5670  0016F4  5E28               	subwf	___lwdiv@dividend,f,c
  5671  0016F6  502B               	movf	___lwdiv@divisor+1,w,c
  5672  0016F8  5A29               	subwfb	___lwdiv@dividend+1,f,c
  5673  0016FA  802D               	bsf	___lwdiv@quotient,0,c
  5674  0016FC                     l4285:
  5675  0016FC  90D8               	bcf	status,0,c
  5676  0016FE  322B               	rrcf	___lwdiv@divisor+1,f,c
  5677  001700  322A               	rrcf	___lwdiv@divisor,f,c
  5678  001702  2E2C               	decfsz	___lwdiv@counter,f,c
  5679  001704  D7ED               	goto	u2530
  5680  001706                     l1465:
  5681  001706  C02D  F028         	movff	___lwdiv@quotient,?___lwdiv
  5682  00170A  C02E  F029         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5683  00170E  0012               	return		;funcret
  5684  001710                     __end_of___lwdiv:
  5685                           	opt callstack 0
  5686                           
  5687 ;; *************** function _LED_Right *****************
  5688 ;; Defined at:
  5689 ;;		line 183 in file "LED.c"
  5690 ;; Parameters:    Size  Location     Type
  5691 ;;  a               2    5[COMRAM] unsigned int 
  5692 ;; Auto vars:     Size  Location     Type
  5693 ;;  b               2    9[COMRAM] unsigned int 
  5694 ;; Return value:  Size  Location     Type
  5695 ;;                  2    5[COMRAM] unsigned int 
  5696 ;; Registers used:
  5697 ;;		wreg, status,2, status,0
  5698 ;; Tracked objects:
  5699 ;;		On entry : 0/0
  5700 ;;		On exit  : 0/0
  5701 ;;		Unchanged: 0/0
  5702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5703 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5704 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5705 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5706 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5707 ;;Total ram usage:        6 bytes
  5708 ;; Hardware stack levels used:    1
  5709 ;; Hardware stack levels required when called:    3
  5710 ;; This function calls:
  5711 ;;		Nothing
  5712 ;; This function is called by:
  5713 ;;		_LED_Update
  5714 ;;		_LED_Light_Pos
  5715 ;; This function uses a non-reentrant model
  5716 ;;
  5717                           
  5718                           	psect	text42
  5719  0017AA                     __ptext42:
  5720                           	opt callstack 0
  5721  0017AA                     _LED_Right:
  5722                           	opt callstack 26
  5723                           
  5724                           ;LED.c: 183: UINT LED_Right(UINT a);LED.c: 184: {;LED.c: 185:     if ((a & 0b0000000001)
      +                           == 0b0000000001)
  5725                           
  5726                           ;incstack = 0
  5727  0017AA  A028               	btfss	LED_Right@a,0,c
  5728  0017AC  D018               	goto	l3271
  5729                           
  5730                           ;LED.c: 186:     {;LED.c: 187:         UINT b = a & 0b1111111110;
  5731  0017AE  0EFE               	movlw	254
  5732  0017B0  1428               	andwf	LED_Right@a,w,c
  5733  0017B2  6E2C               	movwf	LED_Right@b,c
  5734  0017B4  0E03               	movlw	3
  5735  0017B6  1429               	andwf	LED_Right@a+1,w,c
  5736  0017B8  6E2D               	movwf	LED_Right@b+1,c
  5737                           
  5738                           ;LED.c: 188:         b = b >> 1;
  5739  0017BA  90D8               	bcf	status,0,c
  5740  0017BC  302D               	rrcf	LED_Right@b+1,w,c
  5741  0017BE  6E2A               	movwf	??_LED_Right& (0+255),c
  5742  0017C0  302C               	rrcf	LED_Right@b,w,c
  5743  0017C2  6E2C               	movwf	LED_Right@b,c
  5744  0017C4  C02A  F02D         	movff	??_LED_Right,LED_Right@b+1
  5745                           
  5746                           ;LED.c: 189:         b = b | 0b1000000000;
  5747  0017C8  0E00               	movlw	0
  5748  0017CA  102C               	iorwf	LED_Right@b,w,c
  5749  0017CC  6E2C               	movwf	LED_Right@b,c
  5750  0017CE  0E02               	movlw	2
  5751  0017D0  102D               	iorwf	LED_Right@b+1,w,c
  5752  0017D2  6E2D               	movwf	LED_Right@b+1,c
  5753                           
  5754                           ;LED.c: 190:         return b;
  5755  0017D4  C02C  F028         	movff	LED_Right@b,?_LED_Right
  5756  0017D8  C02D  F029         	movff	LED_Right@b+1,?_LED_Right+1
  5757  0017DC  0012               	return	
  5758  0017DE                     l3271:
  5759                           
  5760                           ;LED.c: 193:     {;LED.c: 194:         a =a >> 1;
  5761  0017DE  90D8               	bcf	status,0,c
  5762  0017E0  3029               	rrcf	LED_Right@a+1,w,c
  5763  0017E2  6E2A               	movwf	??_LED_Right& (0+255),c
  5764  0017E4  3028               	rrcf	LED_Right@a,w,c
  5765  0017E6  6E28               	movwf	LED_Right@a,c
  5766  0017E8  C02A  F029         	movff	??_LED_Right,LED_Right@a+1
  5767                           
  5768                           ;LED.c: 195:         return a;
  5769  0017EC  C028  F028         	movff	LED_Right@a,?_LED_Right
  5770  0017F0  C029  F029         	movff	LED_Right@a+1,?_LED_Right+1
  5771  0017F4  0012               	return		;funcret
  5772  0017F6                     __end_of_LED_Right:
  5773                           	opt callstack 0
  5774                           
  5775 ;; *************** function _LED_Left *****************
  5776 ;; Defined at:
  5777 ;;		line 210 in file "LED.c"
  5778 ;; Parameters:    Size  Location     Type
  5779 ;;  a               2    5[COMRAM] unsigned int 
  5780 ;; Auto vars:     Size  Location     Type
  5781 ;;  b               2    7[COMRAM] unsigned int 
  5782 ;; Return value:  Size  Location     Type
  5783 ;;                  2    5[COMRAM] unsigned int 
  5784 ;; Registers used:
  5785 ;;		wreg, status,2, status,0
  5786 ;; Tracked objects:
  5787 ;;		On entry : 0/0
  5788 ;;		On exit  : 0/0
  5789 ;;		Unchanged: 0/0
  5790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5791 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5792 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5794 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5795 ;;Total ram usage:        4 bytes
  5796 ;; Hardware stack levels used:    1
  5797 ;; Hardware stack levels required when called:    3
  5798 ;; This function calls:
  5799 ;;		Nothing
  5800 ;; This function is called by:
  5801 ;;		_LED_Update
  5802 ;;		_LED_Light_Pos
  5803 ;; This function uses a non-reentrant model
  5804 ;;
  5805                           
  5806                           	psect	text43
  5807  0017F6                     __ptext43:
  5808                           	opt callstack 0
  5809  0017F6                     _LED_Left:
  5810                           	opt callstack 25
  5811                           
  5812                           ;LED.c: 210: UINT LED_Left(UINT a);LED.c: 211: {;LED.c: 212:     if ((a & 0b1000000000) 
      +                          == 0b1000000000)
  5813                           
  5814                           ;incstack = 0
  5815  0017F6  A229               	btfss	LED_Left@a+1,1,c
  5816  0017F8  D015               	goto	l3287
  5817                           
  5818                           ;LED.c: 213:     {;LED.c: 214:         UINT b = a & 0b0111111111;
  5819  0017FA  0EFF               	movlw	255
  5820  0017FC  1428               	andwf	LED_Left@a,w,c
  5821  0017FE  6E2A               	movwf	LED_Left@b,c
  5822  001800  0E01               	movlw	1
  5823  001802  1429               	andwf	LED_Left@a+1,w,c
  5824  001804  6E2B               	movwf	LED_Left@b+1,c
  5825                           
  5826                           ;LED.c: 215:         b = b << 1;
  5827  001806  90D8               	bcf	status,0,c
  5828  001808  342A               	rlcf	LED_Left@b,w,c
  5829  00180A  6E2A               	movwf	LED_Left@b,c
  5830  00180C  342B               	rlcf	LED_Left@b+1,w,c
  5831  00180E  6E2B               	movwf	LED_Left@b+1,c
  5832                           
  5833                           ;LED.c: 216:         b = b | 0b0000000001;
  5834  001810  0E01               	movlw	1
  5835  001812  102A               	iorwf	LED_Left@b,w,c
  5836  001814  6E2A               	movwf	LED_Left@b,c
  5837  001816  502B               	movf	LED_Left@b+1,w,c
  5838  001818  6E2B               	movwf	LED_Left@b+1,c
  5839                           
  5840                           ;LED.c: 217:         return b;
  5841  00181A  C02A  F028         	movff	LED_Left@b,?_LED_Left
  5842  00181E  C02B  F029         	movff	LED_Left@b+1,?_LED_Left+1
  5843  001822  0012               	return	
  5844  001824                     l3287:
  5845                           
  5846                           ;LED.c: 220:     {;LED.c: 221:         a = a << 1;
  5847  001824  90D8               	bcf	status,0,c
  5848  001826  3428               	rlcf	LED_Left@a,w,c
  5849  001828  6E28               	movwf	LED_Left@a,c
  5850  00182A  3429               	rlcf	LED_Left@a+1,w,c
  5851  00182C  6E29               	movwf	LED_Left@a+1,c
  5852                           
  5853                           ;LED.c: 222:         return a;
  5854  00182E  C028  F028         	movff	LED_Left@a,?_LED_Left
  5855  001832  C029  F029         	movff	LED_Left@a+1,?_LED_Left+1
  5856  001836  0012               	return		;funcret
  5857  001838                     __end_of_LED_Left:
  5858                           	opt callstack 0
  5859                           
  5860 ;; *************** function _INI_All *****************
  5861 ;; Defined at:
  5862 ;;		line 54 in file "INI.c"
  5863 ;; Parameters:    Size  Location     Type
  5864 ;;		None
  5865 ;; Auto vars:     Size  Location     Type
  5866 ;;		None
  5867 ;; Return value:  Size  Location     Type
  5868 ;;                  1    wreg      void 
  5869 ;; Registers used:
  5870 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5871 ;; Tracked objects:
  5872 ;;		On entry : 0/0
  5873 ;;		On exit  : 0/0
  5874 ;;		Unchanged: 0/0
  5875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5880 ;;Total ram usage:        0 bytes
  5881 ;; Hardware stack levels used:    1
  5882 ;; Hardware stack levels required when called:    6
  5883 ;; This function calls:
  5884 ;;		_CAN_Setup
  5885 ;;		_INI_GlobalInterrupt
  5886 ;;		_INI_LED_Start
  5887 ;;		_INI_OUTPUT
  5888 ;;		_INI_Timer
  5889 ;;		_NVMInit
  5890 ;;		_ReadDataToEEPROM
  5891 ;; This function is called by:
  5892 ;;		_main
  5893 ;; This function uses a non-reentrant model
  5894 ;;
  5895                           
  5896                           	psect	text44
  5897  001A92                     __ptext44:
  5898                           	opt callstack 0
  5899  001A92                     _INI_All:
  5900                           	opt callstack 24
  5901                           
  5902                           ;INI.c: 57:     WDTCONbits.SWDTEN = 1;
  5903                           
  5904                           ;incstack = 0
  5905  001A92  80D1               	bsf	4049,0,c	;volatile
  5906                           
  5907                           ;INI.c: 60:     NVMInit();
  5908  001A94  EC1C  F00C         	call	_NVMInit	;wreg free
  5909                           
  5910                           ;INI.c: 62:     ReadDataToEEPROM();
  5911  001A98  ECD8  F003         	call	_ReadDataToEEPROM	;wreg free
  5912  001A9C  0004               	clrwdt		;# 
  5913                           
  5914                           ;INI.c: 66:     INI_OUTPUT();
  5915  001A9E  EC5A  F00D         	call	_INI_OUTPUT	;wreg free
  5916                           
  5917                           ;INI.c: 68:     CAN_Setup();
  5918  001AA2  ECAB  F00A         	call	_CAN_Setup	;wreg free
  5919                           
  5920                           ;INI.c: 69:     INI_GlobalInterrupt();
  5921  001AA6  ECA0  F00D         	call	_INI_GlobalInterrupt	;wreg free
  5922                           
  5923                           ;INI.c: 71:     INI_Timer();
  5924  001AAA  EC79  F00D         	call	_INI_Timer	;wreg free
  5925                           
  5926                           ;INI.c: 73:     INI_LED_Start();
  5927  001AAE  ECF4  F00C         	call	_INI_LED_Start	;wreg free
  5928  001AB2  0012               	return		;funcret
  5929  001AB4                     __end_of_INI_All:
  5930                           	opt callstack 0
  5931                           
  5932 ;; *************** function _ReadDataToEEPROM *****************
  5933 ;; Defined at:
  5934 ;;		line 481 in file "FRAME.c"
  5935 ;; Parameters:    Size  Location     Type
  5936 ;;		None
  5937 ;; Auto vars:     Size  Location     Type
  5938 ;;		None
  5939 ;; Return value:  Size  Location     Type
  5940 ;;                  1    wreg      void 
  5941 ;; Registers used:
  5942 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5943 ;; Tracked objects:
  5944 ;;		On entry : 0/0
  5945 ;;		On exit  : 0/0
  5946 ;;		Unchanged: 0/0
  5947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5951 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5952 ;;Total ram usage:        0 bytes
  5953 ;; Hardware stack levels used:    1
  5954 ;; Hardware stack levels required when called:    5
  5955 ;; This function calls:
  5956 ;;		_NVMRead
  5957 ;; This function is called by:
  5958 ;;		_INI_All
  5959 ;; This function uses a non-reentrant model
  5960 ;;
  5961                           
  5962                           	psect	text45
  5963  0007B0                     __ptext45:
  5964                           	opt callstack 0
  5965  0007B0                     _ReadDataToEEPROM:
  5966                           	opt callstack 24
  5967                           
  5968                           ;FRAME.c: 484:     NVMRead(&Init_Data,10,2);
  5969                           
  5970                           ;incstack = 0
  5971  0007B0  0E48               	movlw	low _Init_Data
  5972  0007B2  6E2A               	movwf	NVMRead@dest,c
  5973  0007B4  0E00               	movlw	high _Init_Data
  5974  0007B6  6E2B               	movwf	NVMRead@dest+1,c
  5975  0007B8  0E00               	movlw	0
  5976  0007BA  6E2D               	movwf	NVMRead@addr+1,c
  5977  0007BC  0E0A               	movlw	10
  5978  0007BE  6E2C               	movwf	NVMRead@addr,c
  5979  0007C0  0E00               	movlw	0
  5980  0007C2  6E2F               	movwf	NVMRead@count+1,c
  5981  0007C4  0E02               	movlw	2
  5982  0007C6  6E2E               	movwf	NVMRead@count,c
  5983  0007C8  ECDA  F00C         	call	_NVMRead	;wreg free
  5984                           
  5985                           ;FRAME.c: 485:     NVMRead(&NeightAdress1,13,2);
  5986  0007CC  0E21               	movlw	low _NeightAdress1
  5987  0007CE  6E2A               	movwf	NVMRead@dest,c
  5988  0007D0  0E00               	movlw	high _NeightAdress1
  5989  0007D2  6E2B               	movwf	NVMRead@dest+1,c
  5990  0007D4  0E00               	movlw	0
  5991  0007D6  6E2D               	movwf	NVMRead@addr+1,c
  5992  0007D8  0E0D               	movlw	13
  5993  0007DA  6E2C               	movwf	NVMRead@addr,c
  5994  0007DC  0E00               	movlw	0
  5995  0007DE  6E2F               	movwf	NVMRead@count+1,c
  5996  0007E0  0E02               	movlw	2
  5997  0007E2  6E2E               	movwf	NVMRead@count,c
  5998  0007E4  ECDA  F00C         	call	_NVMRead	;wreg free
  5999                           
  6000                           ;FRAME.c: 486:     if(NeightAdress1==0xFFFF)
  6001  0007E8  2821               	incf	_NeightAdress1,w,c	;volatile
  6002  0007EA  E107               	bnz	l3665
  6003  0007EC  2822               	incf	_NeightAdress1+1,w,c	;volatile
  6004  0007EE  A4D8               	btfss	status,2,c
  6005  0007F0  D004               	goto	l3665
  6006                           
  6007                           ;FRAME.c: 487:     {;FRAME.c: 488:         NeightAdress1=0x0000;
  6008  0007F2  0E00               	movlw	0
  6009  0007F4  6E22               	movwf	_NeightAdress1+1,c	;volatile
  6010  0007F6  0E00               	movlw	0
  6011  0007F8  6E21               	movwf	_NeightAdress1,c	;volatile
  6012  0007FA                     l3665:
  6013                           
  6014                           ;FRAME.c: 490:     NVMRead(&NeightAdress2,16,2);
  6015  0007FA  0E4A               	movlw	low _NeightAdress2
  6016  0007FC  6E2A               	movwf	NVMRead@dest,c
  6017  0007FE  0E00               	movlw	high _NeightAdress2
  6018  000800  6E2B               	movwf	NVMRead@dest+1,c
  6019  000802  0E00               	movlw	0
  6020  000804  6E2D               	movwf	NVMRead@addr+1,c
  6021  000806  0E10               	movlw	16
  6022  000808  6E2C               	movwf	NVMRead@addr,c
  6023  00080A  0E00               	movlw	0
  6024  00080C  6E2F               	movwf	NVMRead@count+1,c
  6025  00080E  0E02               	movlw	2
  6026  000810  6E2E               	movwf	NVMRead@count,c
  6027  000812  ECDA  F00C         	call	_NVMRead	;wreg free
  6028                           
  6029                           ;FRAME.c: 491:     if(NeightAdress2==0xFFFF)
  6030  000816  284A               	incf	_NeightAdress2,w,c	;volatile
  6031  000818  E107               	bnz	l3671
  6032  00081A  284B               	incf	_NeightAdress2+1,w,c	;volatile
  6033  00081C  A4D8               	btfss	status,2,c
  6034  00081E  D004               	goto	l3671
  6035                           
  6036                           ;FRAME.c: 492:     {;FRAME.c: 493:         NeightAdress2=0x0000;
  6037  000820  0E00               	movlw	0
  6038  000822  6E4B               	movwf	_NeightAdress2+1,c	;volatile
  6039  000824  0E00               	movlw	0
  6040  000826  6E4A               	movwf	_NeightAdress2,c	;volatile
  6041  000828                     l3671:
  6042                           
  6043                           ;FRAME.c: 495:     NVMRead(&NeightAdress3,19,2);
  6044  000828  0E1F               	movlw	low _NeightAdress3
  6045  00082A  6E2A               	movwf	NVMRead@dest,c
  6046  00082C  0E00               	movlw	high _NeightAdress3
  6047  00082E  6E2B               	movwf	NVMRead@dest+1,c
  6048  000830  0E00               	movlw	0
  6049  000832  6E2D               	movwf	NVMRead@addr+1,c
  6050  000834  0E13               	movlw	19
  6051  000836  6E2C               	movwf	NVMRead@addr,c
  6052  000838  0E00               	movlw	0
  6053  00083A  6E2F               	movwf	NVMRead@count+1,c
  6054  00083C  0E02               	movlw	2
  6055  00083E  6E2E               	movwf	NVMRead@count,c
  6056  000840  ECDA  F00C         	call	_NVMRead	;wreg free
  6057                           
  6058                           ;FRAME.c: 496:     if(NeightAdress3==0xFFFF)
  6059  000844  281F               	incf	_NeightAdress3,w,c	;volatile
  6060  000846  E107               	bnz	l3677
  6061  000848  2820               	incf	_NeightAdress3+1,w,c	;volatile
  6062  00084A  A4D8               	btfss	status,2,c
  6063  00084C  D004               	goto	l3677
  6064                           
  6065                           ;FRAME.c: 497:     {;FRAME.c: 498:         NeightAdress3=0x0000;
  6066  00084E  0E00               	movlw	0
  6067  000850  6E20               	movwf	_NeightAdress3+1,c	;volatile
  6068  000852  0E00               	movlw	0
  6069  000854  6E1F               	movwf	_NeightAdress3,c	;volatile
  6070  000856                     l3677:
  6071                           
  6072                           ;FRAME.c: 500:     NVMRead(&NeightAdress4,22,2);
  6073  000856  0E1D               	movlw	low _NeightAdress4
  6074  000858  6E2A               	movwf	NVMRead@dest,c
  6075  00085A  0E00               	movlw	high _NeightAdress4
  6076  00085C  6E2B               	movwf	NVMRead@dest+1,c
  6077  00085E  0E00               	movlw	0
  6078  000860  6E2D               	movwf	NVMRead@addr+1,c
  6079  000862  0E16               	movlw	22
  6080  000864  6E2C               	movwf	NVMRead@addr,c
  6081  000866  0E00               	movlw	0
  6082  000868  6E2F               	movwf	NVMRead@count+1,c
  6083  00086A  0E02               	movlw	2
  6084  00086C  6E2E               	movwf	NVMRead@count,c
  6085  00086E  ECDA  F00C         	call	_NVMRead	;wreg free
  6086                           
  6087                           ;FRAME.c: 501:     if(NeightAdress4==0xFFFF)
  6088  000872  281D               	incf	_NeightAdress4,w,c	;volatile
  6089  000874  E107               	bnz	l3683
  6090  000876  281E               	incf	_NeightAdress4+1,w,c	;volatile
  6091  000878  A4D8               	btfss	status,2,c
  6092  00087A  D004               	goto	l3683
  6093                           
  6094                           ;FRAME.c: 502:     {;FRAME.c: 503:         NeightAdress4=0x0000;
  6095  00087C  0E00               	movlw	0
  6096  00087E  6E1E               	movwf	_NeightAdress4+1,c	;volatile
  6097  000880  0E00               	movlw	0
  6098  000882  6E1D               	movwf	_NeightAdress4,c	;volatile
  6099  000884                     l3683:
  6100                           
  6101                           ;FRAME.c: 505:     NVMRead(&NeightAdress5,25,2);
  6102  000884  0E1B               	movlw	low _NeightAdress5
  6103  000886  6E2A               	movwf	NVMRead@dest,c
  6104  000888  0E00               	movlw	high _NeightAdress5
  6105  00088A  6E2B               	movwf	NVMRead@dest+1,c
  6106  00088C  0E00               	movlw	0
  6107  00088E  6E2D               	movwf	NVMRead@addr+1,c
  6108  000890  0E19               	movlw	25
  6109  000892  6E2C               	movwf	NVMRead@addr,c
  6110  000894  0E00               	movlw	0
  6111  000896  6E2F               	movwf	NVMRead@count+1,c
  6112  000898  0E02               	movlw	2
  6113  00089A  6E2E               	movwf	NVMRead@count,c
  6114  00089C  ECDA  F00C         	call	_NVMRead	;wreg free
  6115                           
  6116                           ;FRAME.c: 506:     if(NeightAdress5==0xFFFF)
  6117  0008A0  281B               	incf	_NeightAdress5,w,c	;volatile
  6118  0008A2  E107               	bnz	l3689
  6119  0008A4  281C               	incf	_NeightAdress5+1,w,c	;volatile
  6120  0008A6  A4D8               	btfss	status,2,c
  6121  0008A8  D004               	goto	l3689
  6122                           
  6123                           ;FRAME.c: 507:     {;FRAME.c: 508:         NeightAdress5=0x0000;
  6124  0008AA  0E00               	movlw	0
  6125  0008AC  6E1C               	movwf	_NeightAdress5+1,c	;volatile
  6126  0008AE  0E00               	movlw	0
  6127  0008B0  6E1B               	movwf	_NeightAdress5,c	;volatile
  6128  0008B2                     l3689:
  6129                           
  6130                           ;FRAME.c: 510:     NVMRead(&NeightAdress6,28,2);
  6131  0008B2  0E19               	movlw	low _NeightAdress6
  6132  0008B4  6E2A               	movwf	NVMRead@dest,c
  6133  0008B6  0E00               	movlw	high _NeightAdress6
  6134  0008B8  6E2B               	movwf	NVMRead@dest+1,c
  6135  0008BA  0E00               	movlw	0
  6136  0008BC  6E2D               	movwf	NVMRead@addr+1,c
  6137  0008BE  0E1C               	movlw	28
  6138  0008C0  6E2C               	movwf	NVMRead@addr,c
  6139  0008C2  0E00               	movlw	0
  6140  0008C4  6E2F               	movwf	NVMRead@count+1,c
  6141  0008C6  0E02               	movlw	2
  6142  0008C8  6E2E               	movwf	NVMRead@count,c
  6143  0008CA  ECDA  F00C         	call	_NVMRead	;wreg free
  6144                           
  6145                           ;FRAME.c: 511:     if(NeightAdress6==0xFFFF)
  6146  0008CE  2819               	incf	_NeightAdress6,w,c	;volatile
  6147  0008D0  E107               	bnz	l3695
  6148  0008D2  281A               	incf	_NeightAdress6+1,w,c	;volatile
  6149  0008D4  A4D8               	btfss	status,2,c
  6150  0008D6  D004               	goto	l3695
  6151                           
  6152                           ;FRAME.c: 512:     {;FRAME.c: 513:         NeightAdress6=0x0000;
  6153  0008D8  0E00               	movlw	0
  6154  0008DA  6E1A               	movwf	_NeightAdress6+1,c	;volatile
  6155  0008DC  0E00               	movlw	0
  6156  0008DE  6E19               	movwf	_NeightAdress6,c	;volatile
  6157  0008E0                     l3695:
  6158                           
  6159                           ;FRAME.c: 515:     NVMRead(&NeightAdress7,31,2);
  6160  0008E0  0E17               	movlw	low _NeightAdress7
  6161  0008E2  6E2A               	movwf	NVMRead@dest,c
  6162  0008E4  0E00               	movlw	high _NeightAdress7
  6163  0008E6  6E2B               	movwf	NVMRead@dest+1,c
  6164  0008E8  0E00               	movlw	0
  6165  0008EA  6E2D               	movwf	NVMRead@addr+1,c
  6166  0008EC  0E1F               	movlw	31
  6167  0008EE  6E2C               	movwf	NVMRead@addr,c
  6168  0008F0  0E00               	movlw	0
  6169  0008F2  6E2F               	movwf	NVMRead@count+1,c
  6170  0008F4  0E02               	movlw	2
  6171  0008F6  6E2E               	movwf	NVMRead@count,c
  6172  0008F8  ECDA  F00C         	call	_NVMRead	;wreg free
  6173                           
  6174                           ;FRAME.c: 516:     if(NeightAdress7==0xFFFF)
  6175  0008FC  2817               	incf	_NeightAdress7,w,c	;volatile
  6176  0008FE  E107               	bnz	l3701
  6177  000900  2818               	incf	_NeightAdress7+1,w,c	;volatile
  6178  000902  A4D8               	btfss	status,2,c
  6179  000904  D004               	goto	l3701
  6180                           
  6181                           ;FRAME.c: 517:     {;FRAME.c: 518:         NeightAdress7=0x0000;
  6182  000906  0E00               	movlw	0
  6183  000908  6E18               	movwf	_NeightAdress7+1,c	;volatile
  6184  00090A  0E00               	movlw	0
  6185  00090C  6E17               	movwf	_NeightAdress7,c	;volatile
  6186  00090E                     l3701:
  6187                           
  6188                           ;FRAME.c: 520:     NVMRead(&NeightAdress8,34,2);
  6189  00090E  0E15               	movlw	low _NeightAdress8
  6190  000910  6E2A               	movwf	NVMRead@dest,c
  6191  000912  0E00               	movlw	high _NeightAdress8
  6192  000914  6E2B               	movwf	NVMRead@dest+1,c
  6193  000916  0E00               	movlw	0
  6194  000918  6E2D               	movwf	NVMRead@addr+1,c
  6195  00091A  0E22               	movlw	34
  6196  00091C  6E2C               	movwf	NVMRead@addr,c
  6197  00091E  0E00               	movlw	0
  6198  000920  6E2F               	movwf	NVMRead@count+1,c
  6199  000922  0E02               	movlw	2
  6200  000924  6E2E               	movwf	NVMRead@count,c
  6201  000926  ECDA  F00C         	call	_NVMRead	;wreg free
  6202                           
  6203                           ;FRAME.c: 521:     if(NeightAdress8==0xFFFF)
  6204  00092A  2815               	incf	_NeightAdress8,w,c	;volatile
  6205  00092C  E107               	bnz	l655
  6206  00092E  2816               	incf	_NeightAdress8+1,w,c	;volatile
  6207  000930  A4D8               	btfss	status,2,c
  6208  000932  0012               	return	
  6209                           
  6210                           ;FRAME.c: 522:     {;FRAME.c: 523:         NeightAdress8=0x0000;
  6211  000934  0E00               	movlw	0
  6212  000936  6E16               	movwf	_NeightAdress8+1,c	;volatile
  6213  000938  0E00               	movlw	0
  6214  00093A  6E15               	movwf	_NeightAdress8,c	;volatile
  6215  00093C                     l655:
  6216  00093C  0012               	return		;funcret
  6217  00093E                     __end_of_ReadDataToEEPROM:
  6218                           	opt callstack 0
  6219                           
  6220 ;; *************** function _NVMRead *****************
  6221 ;; Defined at:
  6222 ;;		line 125 in file "EEPROM.c"
  6223 ;; Parameters:    Size  Location     Type
  6224 ;;  dest            2    7[COMRAM] PTR unsigned char 
  6225 ;;		 -> Init_Data(2), NeightAdress8(2), NeightAdress7(2), NeightAdress6(2), 
  6226 ;;		 -> NeightAdress5(2), NeightAdress4(2), NeightAdress3(2), NeightAdress2(2), 
  6227 ;;		 -> NeightAdress1(2), 
  6228 ;;  addr            2    9[COMRAM] unsigned short 
  6229 ;;  count           2   11[COMRAM] unsigned short 
  6230 ;; Auto vars:     Size  Location     Type
  6231 ;;		None
  6232 ;; Return value:  Size  Location     Type
  6233 ;;                  1    wreg      void 
  6234 ;; Registers used:
  6235 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6236 ;; Tracked objects:
  6237 ;;		On entry : 0/0
  6238 ;;		On exit  : 0/0
  6239 ;;		Unchanged: 0/0
  6240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6241 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6244 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6245 ;;Total ram usage:        6 bytes
  6246 ;; Hardware stack levels used:    1
  6247 ;; Hardware stack levels required when called:    4
  6248 ;; This function calls:
  6249 ;;		_ReadfromEEPROM
  6250 ;; This function is called by:
  6251 ;;		_ReadDataToEEPROM
  6252 ;; This function uses a non-reentrant model
  6253 ;;
  6254                           
  6255                           	psect	text46
  6256  0019B4                     __ptext46:
  6257                           	opt callstack 0
  6258  0019B4                     _NVMRead:
  6259                           	opt callstack 24
  6260                           
  6261                           ;EEPROM.c: 125: void NVMRead(BYTE *dest, WORD addr, WORD count);EEPROM.c: 126: {;EEPROM.
      +                          c: 127:     while( count > 0 )
  6262                           
  6263                           ;incstack = 0
  6264  0019B4  D014               	goto	l3407
  6265  0019B6                     l942:
  6266  0019B6  B2A6               	btfsc	4006,1,c	;volsfr
  6267  0019B8  D7FE               	goto	l942
  6268                           
  6269                           ;EEPROM.c: 130:         *dest++ = ReadfromEEPROM(addr++);
  6270  0019BA  C02C  F028         	movff	NVMRead@addr,ReadfromEEPROM@Address
  6271  0019BE  C02D  F029         	movff	NVMRead@addr+1,ReadfromEEPROM@Address+1
  6272  0019C2  EC90  F00D         	call	_ReadfromEEPROM	;wreg free
  6273  0019C6  C02A  FFD9         	movff	NVMRead@dest,fsr2l
  6274  0019CA  C02B  FFDA         	movff	NVMRead@dest+1,fsr2h
  6275  0019CE  6EDF               	movwf	indf2,c
  6276  0019D0  4A2C               	infsnz	NVMRead@addr,f,c
  6277  0019D2  2A2D               	incf	NVMRead@addr+1,f,c
  6278  0019D4  4A2A               	infsnz	NVMRead@dest,f,c
  6279  0019D6  2A2B               	incf	NVMRead@dest+1,f,c
  6280                           
  6281                           ;EEPROM.c: 131:         count--;
  6282  0019D8  062E               	decf	NVMRead@count,f,c
  6283  0019DA  A0D8               	btfss	status,0,c
  6284  0019DC  062F               	decf	NVMRead@count+1,f,c
  6285  0019DE                     l3407:
  6286                           
  6287                           ;EEPROM.c: 127:     while( count > 0 )
  6288  0019DE  502E               	movf	NVMRead@count,w,c
  6289  0019E0  102F               	iorwf	NVMRead@count+1,w,c
  6290  0019E2  B4D8               	btfsc	status,2,c
  6291  0019E4  0012               	return	
  6292  0019E6  D7E7               	goto	l942
  6293  0019E8                     __end_of_NVMRead:
  6294                           	opt callstack 0
  6295                           
  6296 ;; *************** function _ReadfromEEPROM *****************
  6297 ;; Defined at:
  6298 ;;		line 73 in file "EEPROM.c"
  6299 ;; Parameters:    Size  Location     Type
  6300 ;;  Address         2    5[COMRAM] unsigned short 
  6301 ;; Auto vars:     Size  Location     Type
  6302 ;;		None
  6303 ;; Return value:  Size  Location     Type
  6304 ;;                  1    wreg      unsigned char 
  6305 ;; Registers used:
  6306 ;;		wreg, status,2
  6307 ;; Tracked objects:
  6308 ;;		On entry : 0/0
  6309 ;;		On exit  : 0/0
  6310 ;;		Unchanged: 0/0
  6311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6312 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6315 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6316 ;;Total ram usage:        2 bytes
  6317 ;; Hardware stack levels used:    1
  6318 ;; Hardware stack levels required when called:    3
  6319 ;; This function calls:
  6320 ;;		Nothing
  6321 ;; This function is called by:
  6322 ;;		_NVMRead
  6323 ;; This function uses a non-reentrant model
  6324 ;;
  6325                           
  6326                           	psect	text47
  6327  001B20                     __ptext47:
  6328                           	opt callstack 0
  6329  001B20                     _ReadfromEEPROM:
  6330                           	opt callstack 24
  6331                           
  6332                           ;EEPROM.c: 73: static BYTE ReadfromEEPROM(WORD Address);EEPROM.c: 74: {;EEPROM.c: 75:   
      +                            EEADRH = (BYTE)(Address>>8);
  6333                           
  6334                           ;incstack = 0
  6335  001B20  5029               	movf	ReadfromEEPROM@Address+1,w,c
  6336  001B22  6EAA               	movwf	4010,c	;volatile
  6337                           
  6338                           ;EEPROM.c: 76:     EEADR = (BYTE)Address;
  6339  001B24  C028  FFA9         	movff	ReadfromEEPROM@Address,4009	;volatile
  6340                           
  6341                           ;EEPROM.c: 77:     EECON1bits.RD = 1;
  6342  001B28  80A6               	bsf	4006,0,c	;volsfr
  6343                           
  6344                           ;EEPROM.c: 78:     EECON1bits.EEPGD = 0;
  6345  001B2A  9EA6               	bcf	4006,7,c	;volsfr
  6346                           
  6347                           ;EEPROM.c: 79:     EECON1bits.CFGS = 0;
  6348  001B2C  9CA6               	bcf	4006,6,c	;volsfr
  6349                           
  6350                           ;EEPROM.c: 80:     return EEDATA;
  6351  001B2E  50A8               	movf	4008,w,c	;volatile
  6352  001B30  0012               	return		;funcret
  6353  001B32                     __end_of_ReadfromEEPROM:
  6354                           	opt callstack 0
  6355                           
  6356 ;; *************** function _NVMInit *****************
  6357 ;; Defined at:
  6358 ;;		line 49 in file "EEPROM.c"
  6359 ;; Parameters:    Size  Location     Type
  6360 ;;		None
  6361 ;; Auto vars:     Size  Location     Type
  6362 ;;  NeightAdress    2    0        unsigned int 
  6363 ;;  result          1   13[COMRAM] enum E10433
  6364 ;; Return value:  Size  Location     Type
  6365 ;;                  1    wreg      enum E10433
  6366 ;; Registers used:
  6367 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6368 ;; Tracked objects:
  6369 ;;		On entry : 0/0
  6370 ;;		On exit  : 0/0
  6371 ;;		Unchanged: 0/0
  6372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6374 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6376 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6377 ;;Total ram usage:        3 bytes
  6378 ;; Hardware stack levels used:    1
  6379 ;; Hardware stack levels required when called:    4
  6380 ;; This function calls:
  6381 ;;		_NVMalloc
  6382 ;; This function is called by:
  6383 ;;		_INI_All
  6384 ;; This function uses a non-reentrant model
  6385 ;;
  6386                           
  6387                           	psect	text48
  6388  001838                     __ptext48:
  6389                           	opt callstack 0
  6390  001838                     _NVMInit:
  6391                           	opt callstack 25
  6392                           
  6393                           ;EEPROM.c: 51:     BOOL result = TRUE;
  6394                           
  6395                           ;incstack = 0
  6396  001838  0E01               	movlw	1
  6397  00183A  6E30               	movwf	NVMInit@result,c
  6398                           
  6399                           ;EEPROM.c: 53:     nextEEPosition = 0;
  6400  00183C  0E00               	movlw	0
  6401  00183E  6E06               	movwf	_nextEEPosition+1,c
  6402  001840  0E00               	movlw	0
  6403  001842  6E05               	movwf	_nextEEPosition,c
  6404                           
  6405                           ;EEPROM.c: 55:     result &= NVMalloc(sizeof(KartaStruct), &ustawieniaKarty);
  6406  001844  0E00               	movlw	0
  6407  001846  6E29               	movwf	NVMalloc@size+1,c
  6408  001848  0E03               	movlw	3
  6409  00184A  6E28               	movwf	NVMalloc@size,c
  6410  00184C  0E13               	movlw	low _ustawieniaKarty
  6411  00184E  6E2A               	movwf	NVMalloc@location,c
  6412  001850  0E00               	movlw	high _ustawieniaKarty
  6413  001852  6E2B               	movwf	NVMalloc@location+1,c
  6414  001854  ECA5  F00C         	call	_NVMalloc	;wreg free
  6415  001858  1630               	andwf	NVMInit@result,f,c
  6416                           
  6417                           ;EEPROM.c: 56:     result &= NVMalloc(8*sizeof(NeightAdress_Example), &neighborsAdress);
  6418  00185A  0E00               	movlw	0
  6419  00185C  6E29               	movwf	NVMalloc@size+1,c
  6420  00185E  0E10               	movlw	16
  6421  001860  6E28               	movwf	NVMalloc@size,c
  6422  001862  0E11               	movlw	low _neighborsAdress
  6423  001864  6E2A               	movwf	NVMalloc@location,c
  6424  001866  0E00               	movlw	high _neighborsAdress
  6425  001868  6E2B               	movwf	NVMalloc@location+1,c
  6426  00186A  ECA5  F00C         	call	_NVMalloc	;wreg free
  6427  00186E  1630               	andwf	NVMInit@result,f,c
  6428  001870  0012               	return		;funcret
  6429  001872                     __end_of_NVMInit:
  6430                           	opt callstack 0
  6431                           
  6432 ;; *************** function _NVMalloc *****************
  6433 ;; Defined at:
  6434 ;;		line 24 in file "EEPROM.c"
  6435 ;; Parameters:    Size  Location     Type
  6436 ;;  size            2    5[COMRAM] unsigned short 
  6437 ;;  location        2    7[COMRAM] PTR unsigned short 
  6438 ;;		 -> neighborsAdress(2), ustawieniaKarty(2), 
  6439 ;; Auto vars:     Size  Location     Type
  6440 ;;		None
  6441 ;; Return value:  Size  Location     Type
  6442 ;;                  1    wreg      enum E10433
  6443 ;; Registers used:
  6444 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6445 ;; Tracked objects:
  6446 ;;		On entry : 0/0
  6447 ;;		On exit  : 0/0
  6448 ;;		Unchanged: 0/0
  6449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6450 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6452 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6453 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6454 ;;Total ram usage:        6 bytes
  6455 ;; Hardware stack levels used:    1
  6456 ;; Hardware stack levels required when called:    3
  6457 ;; This function calls:
  6458 ;;		Nothing
  6459 ;; This function is called by:
  6460 ;;		_NVMInit
  6461 ;; This function uses a non-reentrant model
  6462 ;;
  6463                           
  6464                           	psect	text49
  6465  00194A                     __ptext49:
  6466                           	opt callstack 0
  6467  00194A                     _NVMalloc:
  6468                           	opt callstack 25
  6469                           
  6470                           ;EEPROM.c: 24: BOOL NVMalloc(WORD size, WORD *location);EEPROM.c: 25: {;EEPROM.c: 28:   
      +                            if ((nextEEPosition + (WORD)size) > (WORD)0x400)
  6471                           
  6472                           ;incstack = 0
  6473  00194A  5028               	movf	NVMalloc@size,w,c
  6474  00194C  2405               	addwf	_nextEEPosition,w,c
  6475  00194E  6E2C               	movwf	??_NVMalloc& (0+255),c
  6476  001950  5029               	movf	NVMalloc@size+1,w,c
  6477  001952  2006               	addwfc	_nextEEPosition+1,w,c
  6478  001954  6E2D               	movwf	(??_NVMalloc+1)& (0+255),c
  6479  001956  042C               	decf	??_NVMalloc,w,c
  6480  001958  0E04               	movlw	4
  6481  00195A  582D               	subwfb	??_NVMalloc+1,w,c
  6482  00195C  A0D8               	btfss	status,0,c
  6483  00195E  D002               	goto	l3453
  6484                           
  6485                           ;EEPROM.c: 29:     {;EEPROM.c: 30:         return FALSE;
  6486  001960  0E00               	movlw	0
  6487  001962  0012               	return	
  6488  001964                     l3453:
  6489                           
  6490                           ;EEPROM.c: 33:     *location = nextEEPosition;
  6491  001964  C02A  FFD9         	movff	NVMalloc@location,fsr2l
  6492  001968  C02B  FFDA         	movff	NVMalloc@location+1,fsr2h
  6493  00196C  C005  FFDE         	movff	_nextEEPosition,postinc2
  6494  001970  C006  FFDD         	movff	_nextEEPosition+1,postdec2
  6495                           
  6496                           ;EEPROM.c: 34:     nextEEPosition += size;
  6497  001974  5028               	movf	NVMalloc@size,w,c
  6498  001976  2605               	addwf	_nextEEPosition,f,c
  6499  001978  5029               	movf	NVMalloc@size+1,w,c
  6500  00197A  2206               	addwfc	_nextEEPosition+1,f,c
  6501                           
  6502                           ;EEPROM.c: 35:     return TRUE;
  6503  00197C  0E01               	movlw	1
  6504  00197E  0012               	return		;funcret
  6505  001980                     __end_of_NVMalloc:
  6506                           	opt callstack 0
  6507                           
  6508 ;; *************** function _INI_Timer *****************
  6509 ;; Defined at:
  6510 ;;		line 92 in file "TMR1.c"
  6511 ;; Parameters:    Size  Location     Type
  6512 ;;		None
  6513 ;; Auto vars:     Size  Location     Type
  6514 ;;		None
  6515 ;; Return value:  Size  Location     Type
  6516 ;;                  1    wreg      unsigned char 
  6517 ;; Registers used:
  6518 ;;		wreg, status,2
  6519 ;; Tracked objects:
  6520 ;;		On entry : 0/0
  6521 ;;		On exit  : 0/0
  6522 ;;		Unchanged: 0/0
  6523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6528 ;;Total ram usage:        0 bytes
  6529 ;; Hardware stack levels used:    1
  6530 ;; Hardware stack levels required when called:    3
  6531 ;; This function calls:
  6532 ;;		Nothing
  6533 ;; This function is called by:
  6534 ;;		_INI_All
  6535 ;; This function uses a non-reentrant model
  6536 ;;
  6537                           
  6538                           	psect	text50
  6539  001AF2                     __ptext50:
  6540                           	opt callstack 0
  6541  001AF2                     _INI_Timer:
  6542                           	opt callstack 26
  6543                           
  6544                           ;TMR1.c: 96:     IRCF2 = 1;
  6545                           
  6546                           ;incstack = 0
  6547  001AF2  8CD3               	bsf	4051,6,c	;volatile
  6548                           
  6549                           ;TMR1.c: 97:     IRCF1 = 1;
  6550  001AF4  8AD3               	bsf	4051,5,c	;volatile
  6551                           
  6552                           ;TMR1.c: 98:     IRCF0 = 1;
  6553  001AF6  88D3               	bsf	4051,4,c	;volatile
  6554                           
  6555                           ;TMR1.c: 99:     T1CON = 0b00111101;
  6556  001AF8  0E3D               	movlw	61
  6557  001AFA  6ECD               	movwf	4045,c	;volatile
  6558                           
  6559                           ;TMR1.c: 100:     TMR1H= (UINT8)((0xFFFF - (((8000000/8)/4)/10)) >> 8);
  6560  001AFC  0E9E               	movlw	158
  6561  001AFE  6ECF               	movwf	4047,c	;volatile
  6562                           
  6563                           ;TMR1.c: 101:     TMR1L=(UINT8)((0xFFFF - (((8000000/8)/4)/10)) & 0xFF);
  6564  001B00  0E57               	movlw	87
  6565  001B02  6ECE               	movwf	4046,c	;volatile
  6566                           
  6567                           ;TMR1.c: 102:     TMR1IE=1;
  6568  001B04  809D               	bsf	3997,0,c	;volatile
  6569                           
  6570                           ;TMR1.c: 103:     TMR1ON = 1;
  6571  001B06  80CD               	bsf	4045,0,c	;volatile
  6572  001B08  0012               	return		;funcret
  6573  001B0A                     __end_of_INI_Timer:
  6574                           	opt callstack 0
  6575                           
  6576 ;; *************** function _INI_OUTPUT *****************
  6577 ;; Defined at:
  6578 ;;		line 29 in file "INI.c"
  6579 ;; Parameters:    Size  Location     Type
  6580 ;;		None
  6581 ;; Auto vars:     Size  Location     Type
  6582 ;;		None
  6583 ;; Return value:  Size  Location     Type
  6584 ;;                  1    wreg      void 
  6585 ;; Registers used:
  6586 ;;		wreg, status,2
  6587 ;; Tracked objects:
  6588 ;;		On entry : 0/0
  6589 ;;		On exit  : 0/0
  6590 ;;		Unchanged: 0/0
  6591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6596 ;;Total ram usage:        0 bytes
  6597 ;; Hardware stack levels used:    1
  6598 ;; Hardware stack levels required when called:    3
  6599 ;; This function calls:
  6600 ;;		Nothing
  6601 ;; This function is called by:
  6602 ;;		_INI_All
  6603 ;; This function uses a non-reentrant model
  6604 ;;
  6605                           
  6606                           	psect	text51
  6607  001AB4                     __ptext51:
  6608                           	opt callstack 0
  6609  001AB4                     _INI_OUTPUT:
  6610                           	opt callstack 26
  6611                           
  6612                           ;INI.c: 33:     LATA = 0;
  6613                           
  6614                           ;incstack = 0
  6615  001AB4  0E00               	movlw	0
  6616  001AB6  6E89               	movwf	3977,c	;volatile
  6617                           
  6618                           ;INI.c: 34:     LATB = 0;
  6619  001AB8  0E00               	movlw	0
  6620  001ABA  6E8A               	movwf	3978,c	;volatile
  6621                           
  6622                           ;INI.c: 35:     LATC = 0;
  6623  001ABC  0E00               	movlw	0
  6624  001ABE  6E8B               	movwf	3979,c	;volatile
  6625                           
  6626                           ;INI.c: 36:     TRISA = 0x0C;
  6627  001AC0  0E0C               	movlw	12
  6628  001AC2  6E92               	movwf	3986,c	;volatile
  6629                           
  6630                           ;INI.c: 37:     TRISB = 0b10001000;
  6631  001AC4  0E88               	movlw	136
  6632  001AC6  6E93               	movwf	3987,c	;volatile
  6633                           
  6634                           ;INI.c: 38:     TRISC = 0xBF;
  6635  001AC8  0EBF               	movlw	191
  6636  001ACA  6E94               	movwf	3988,c	;volatile
  6637                           
  6638                           ;INI.c: 39:     RCONbits.IPEN = 1;
  6639  001ACC  8ED0               	bsf	4048,7,c	;volatile
  6640                           
  6641                           ;INI.c: 42:     DetectorLedRadar.Flags.inicjalizacja = 1;
  6642  001ACE  0100               	movlb	0	; () banked
  6643  001AD0  87CB               	bsf	_DetectorLedRadar& (0+255),3,b
  6644                           
  6645                           ; BSR set to: 0
  6646  001AD2  0012               	return		;funcret
  6647  001AD4                     __end_of_INI_OUTPUT:
  6648                           	opt callstack 0
  6649                           
  6650 ;; *************** function _INI_LED_Start *****************
  6651 ;; Defined at:
  6652 ;;		line 274 in file "LED.c"
  6653 ;; Parameters:    Size  Location     Type
  6654 ;;		None
  6655 ;; Auto vars:     Size  Location     Type
  6656 ;;		None
  6657 ;; Return value:  Size  Location     Type
  6658 ;;                  1    wreg      void 
  6659 ;; Registers used:
  6660 ;;		wreg, status,2, status,0, cstack
  6661 ;; Tracked objects:
  6662 ;;		On entry : 0/0
  6663 ;;		On exit  : 0/0
  6664 ;;		Unchanged: 0/0
  6665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6669 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6670 ;;Total ram usage:        0 bytes
  6671 ;; Hardware stack levels used:    1
  6672 ;; Hardware stack levels required when called:    4
  6673 ;; This function calls:
  6674 ;;		_LED_Control
  6675 ;; This function is called by:
  6676 ;;		_INI_All
  6677 ;; This function uses a non-reentrant model
  6678 ;;
  6679                           
  6680                           	psect	text52
  6681  0019E8                     __ptext52:
  6682                           	opt callstack 0
  6683  0019E8                     _INI_LED_Start:
  6684                           	opt callstack 25
  6685                           
  6686                           ;LED.c: 276:     TRISA = TRISA & 0b00000001;
  6687                           
  6688                           ; BSR set to: 0
  6689                           ;incstack = 0
  6690  0019E8  5092               	movf	3986,w,c	;volatile
  6691  0019EA  0B01               	andlw	1
  6692  0019EC  6E92               	movwf	3986,c	;volatile
  6693                           
  6694                           ;LED.c: 277:     TRISB = TRISB & 0b11111100;
  6695  0019EE  5093               	movf	3987,w,c	;volatile
  6696  0019F0  0BFC               	andlw	252
  6697  0019F2  6E93               	movwf	3987,c	;volatile
  6698                           
  6699                           ;LED.c: 278:     TRISE = TRISE & 0b11111000;
  6700  0019F4  5096               	movf	3990,w,c	;volatile
  6701  0019F6  0BF8               	andlw	248
  6702  0019F8  6E96               	movwf	3990,c	;volatile
  6703                           
  6704                           ;LED.c: 279:     TRISD = TRISD & 0b00000000;
  6705  0019FA  0E00               	movlw	0
  6706  0019FC  6E95               	movwf	3989,c	;volatile
  6707                           
  6708                           ;LED.c: 280:     LED_Control(RED,0b0000000000);
  6709  0019FE  0E00               	movlw	0
  6710  001A00  6E29               	movwf	LED_Control@diode+1,c
  6711  001A02  0E00               	movlw	0
  6712  001A04  6E28               	movwf	LED_Control@diode,c
  6713  001A06  0E00               	movlw	0
  6714  001A08  EC58  F005         	call	_LED_Control
  6715                           
  6716                           ;LED.c: 281:     LED_Control(GREEN,0b0000000000);
  6717  001A0C  0E00               	movlw	0
  6718  001A0E  6E29               	movwf	LED_Control@diode+1,c
  6719  001A10  0E00               	movlw	0
  6720  001A12  6E28               	movwf	LED_Control@diode,c
  6721  001A14  0E01               	movlw	1
  6722  001A16  EC58  F005         	call	_LED_Control
  6723  001A1A  0012               	return		;funcret
  6724  001A1C                     __end_of_INI_LED_Start:
  6725                           	opt callstack 0
  6726                           
  6727 ;; *************** function _LED_Control *****************
  6728 ;; Defined at:
  6729 ;;		line 299 in file "LED.c"
  6730 ;; Parameters:    Size  Location     Type
  6731 ;;  color           1    wreg     enum E10644
  6732 ;;  diode           2    5[COMRAM] unsigned int 
  6733 ;; Auto vars:     Size  Location     Type
  6734 ;;  color           1    9[COMRAM] enum E10644
  6735 ;;  cos             2    0        unsigned int 
  6736 ;; Return value:  Size  Location     Type
  6737 ;;                  1    wreg      unsigned char 
  6738 ;; Registers used:
  6739 ;;		wreg, status,2, status,0
  6740 ;; Tracked objects:
  6741 ;;		On entry : 0/0
  6742 ;;		On exit  : 0/0
  6743 ;;		Unchanged: 0/0
  6744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6745 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6746 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6748 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6749 ;;Total ram usage:        5 bytes
  6750 ;; Hardware stack levels used:    1
  6751 ;; Hardware stack levels required when called:    3
  6752 ;; This function calls:
  6753 ;;		Nothing
  6754 ;; This function is called by:
  6755 ;;		_LED_Error
  6756 ;;		_LED_Update
  6757 ;;		_LED_Light_Pos
  6758 ;;		_INI_LED_Start
  6759 ;;		_LED_Clear
  6760 ;; This function uses a non-reentrant model
  6761 ;;
  6762                           
  6763                           	psect	text53
  6764  000AB0                     __ptext53:
  6765                           	opt callstack 0
  6766  000AB0                     _LED_Control:
  6767                           	opt callstack 24
  6768                           
  6769                           ;incstack = 0
  6770                           ;LED_Control@color stored from wreg
  6771  000AB0  6E2C               	movwf	LED_Control@color,c
  6772                           
  6773                           ;LED.c: 302:     if(color == RED)
  6774  000AB2  502C               	movf	LED_Control@color,w,c
  6775  000AB4  A4D8               	btfss	status,2,c
  6776  000AB6  D050               	goto	l420
  6777                           
  6778                           ;LED.c: 303:     {;LED.c: 305:         if((diode & 0b0000000001)== 0b0000000001)
  6779  000AB8  A028               	btfss	LED_Control@diode,0,c
  6780  000ABA  D003               	goto	l4055
  6781                           
  6782                           ;LED.c: 306:         {;LED.c: 307:             LATD = LATD | ~0b11101111;
  6783  000ABC  508C               	movf	3980,w,c	;volatile
  6784  000ABE  0910               	iorlw	16
  6785  000AC0  D002               	goto	L4
  6786  000AC2                     l4055:
  6787                           
  6788                           ;LED.c: 310:         {;LED.c: 311:             LATD = LATD &0b11101111;
  6789  000AC2  508C               	movf	3980,w,c	;volatile
  6790  000AC4  0BEF               	andlw	239
  6791  000AC6                     L4:
  6792  000AC6  6E8C               	movwf	3980,c	;volatile
  6793                           
  6794                           ;LED.c: 314:         if((diode & 0b0000000010) == 0b0000000010)
  6795  000AC8  A228               	btfss	LED_Control@diode,1,c
  6796  000ACA  D003               	goto	l4061
  6797                           
  6798                           ;LED.c: 315:         {;LED.c: 316:             LATD = LATD | ~0b10111111;
  6799  000ACC  508C               	movf	3980,w,c	;volatile
  6800  000ACE  0940               	iorlw	64
  6801  000AD0  D002               	goto	L5
  6802  000AD2                     l4061:
  6803                           
  6804                           ;LED.c: 319:         {;LED.c: 320:             LATD = LATD & 0b10111111;
  6805  000AD2  508C               	movf	3980,w,c	;volatile
  6806  000AD4  0BBF               	andlw	191
  6807  000AD6                     L5:
  6808  000AD6  6E8C               	movwf	3980,c	;volatile
  6809                           
  6810                           ;LED.c: 323:         if((diode & 0b0000000100) == 0b0000000100)
  6811  000AD8  A428               	btfss	LED_Control@diode,2,c
  6812  000ADA  D003               	goto	l4067
  6813                           
  6814                           ;LED.c: 324:         {;LED.c: 325:             LATB = LATB | ~0b11111110;
  6815  000ADC  508A               	movf	3978,w,c	;volatile
  6816  000ADE  0901               	iorlw	1
  6817  000AE0  D002               	goto	L6
  6818  000AE2                     l4067:
  6819                           
  6820                           ;LED.c: 328:         {;LED.c: 329:             LATB = LATB & 0b11111110;
  6821  000AE2  508A               	movf	3978,w,c	;volatile
  6822  000AE4  0BFE               	andlw	254
  6823  000AE6                     L6:
  6824  000AE6  6E8A               	movwf	3978,c	;volatile
  6825                           
  6826                           ;LED.c: 333:         if((diode & 0b0000001000) == 0b0000001000)
  6827  000AE8  A628               	btfss	LED_Control@diode,3,c
  6828  000AEA  D003               	goto	l4073
  6829                           
  6830                           ;LED.c: 334:         {;LED.c: 335:             LATA = LATA | ~0b11111101;
  6831  000AEC  5089               	movf	3977,w,c	;volatile
  6832  000AEE  0902               	iorlw	2
  6833  000AF0  D002               	goto	L7
  6834  000AF2                     l4073:
  6835                           
  6836                           ;LED.c: 338:         {;LED.c: 339:             LATA = LATA & 0b11111101;
  6837  000AF2  5089               	movf	3977,w,c	;volatile
  6838  000AF4  0BFD               	andlw	253
  6839  000AF6                     L7:
  6840  000AF6  6E89               	movwf	3977,c	;volatile
  6841                           
  6842                           ;LED.c: 343:         if((diode & 0b0000010000) == 0b0000010000)
  6843  000AF8  A828               	btfss	LED_Control@diode,4,c
  6844  000AFA  D003               	goto	l4079
  6845                           
  6846                           ;LED.c: 344:         {;LED.c: 345:             LATA = LATA | ~0b11110111;
  6847  000AFC  5089               	movf	3977,w,c	;volatile
  6848  000AFE  0908               	iorlw	8
  6849  000B00  D002               	goto	L8
  6850  000B02                     l4079:
  6851                           
  6852                           ;LED.c: 348:         {;LED.c: 349:             LATA = LATA & 0b11110111;
  6853  000B02  5089               	movf	3977,w,c	;volatile
  6854  000B04  0BF7               	andlw	247
  6855  000B06                     L8:
  6856  000B06  6E89               	movwf	3977,c	;volatile
  6857                           
  6858                           ;LED.c: 353:         if((diode & 0b0000100000) == 0b0000100000)
  6859  000B08  AA28               	btfss	LED_Control@diode,5,c
  6860  000B0A  D003               	goto	l4085
  6861                           
  6862                           ;LED.c: 354:         {;LED.c: 355:             LATA = LATA | ~0b11011111;
  6863  000B0C  5089               	movf	3977,w,c	;volatile
  6864  000B0E  0920               	iorlw	32
  6865  000B10  D002               	goto	L9
  6866  000B12                     l4085:
  6867                           
  6868                           ;LED.c: 358:         {;LED.c: 359:             LATA = LATA & 0b11011111;
  6869  000B12  5089               	movf	3977,w,c	;volatile
  6870  000B14  0BDF               	andlw	223
  6871  000B16                     L9:
  6872  000B16  6E89               	movwf	3977,c	;volatile
  6873                           
  6874                           ;LED.c: 362:         if((diode & 0b0001000000) == 0b0001000000)
  6875  000B18  AC28               	btfss	LED_Control@diode,6,c
  6876  000B1A  D003               	goto	l4091
  6877                           
  6878                           ;LED.c: 363:         {;LED.c: 364:             LATE = LATE | ~0b11111101;
  6879  000B1C  508D               	movf	3981,w,c	;volatile
  6880  000B1E  0902               	iorlw	2
  6881  000B20  D002               	goto	L10
  6882  000B22                     l4091:
  6883                           
  6884                           ;LED.c: 367:         {;LED.c: 368:             LATE = LATE & 0b11111101;
  6885  000B22  508D               	movf	3981,w,c	;volatile
  6886  000B24  0BFD               	andlw	253
  6887  000B26                     L10:
  6888  000B26  6E8D               	movwf	3981,c	;volatile
  6889                           
  6890                           ;LED.c: 371:         if((diode & 0b0010000000) == 0b0010000000)
  6891  000B28  AE28               	btfss	LED_Control@diode,7,c
  6892  000B2A  D003               	goto	l4097
  6893                           
  6894                           ;LED.c: 372:         {;LED.c: 373:             LATA = LATA | ~0b01111111;
  6895  000B2C  5089               	movf	3977,w,c	;volatile
  6896  000B2E  0980               	iorlw	128
  6897  000B30  D002               	goto	L11
  6898  000B32                     l4097:
  6899                           
  6900                           ;LED.c: 376:         {;LED.c: 377:             LATA = LATA & 0b01111111;
  6901  000B32  5089               	movf	3977,w,c	;volatile
  6902  000B34  0B7F               	andlw	127
  6903  000B36                     L11:
  6904  000B36  6E89               	movwf	3977,c	;volatile
  6905                           
  6906                           ;LED.c: 381:         if((diode & 0b0100000000) == 0b0100000000)
  6907  000B38  A029               	btfss	LED_Control@diode+1,0,c
  6908  000B3A  D003               	goto	l4103
  6909                           
  6910                           ;LED.c: 382:         {;LED.c: 383:             LATD = LATD | ~0b11111110;
  6911  000B3C  508C               	movf	3980,w,c	;volatile
  6912  000B3E  0901               	iorlw	1
  6913  000B40  D002               	goto	L12
  6914  000B42                     l4103:
  6915                           
  6916                           ;LED.c: 386:         {;LED.c: 387:             LATD = LATD & 0b11111110;
  6917  000B42  508C               	movf	3980,w,c	;volatile
  6918  000B44  0BFE               	andlw	254
  6919  000B46                     L12:
  6920  000B46  6E8C               	movwf	3980,c	;volatile
  6921                           
  6922                           ;LED.c: 390:         if((diode & 0b1000000000) == 0b1000000000)
  6923  000B48  A229               	btfss	LED_Control@diode+1,1,c
  6924  000B4A  D003               	goto	l4109
  6925                           
  6926                           ;LED.c: 391:         {;LED.c: 392:             LATD = LATD | ~0b11111011;
  6927  000B4C  508C               	movf	3980,w,c	;volatile
  6928  000B4E  0904               	iorlw	4
  6929  000B50  D002               	goto	L13
  6930  000B52                     l4109:
  6931                           
  6932                           ;LED.c: 395:         {;LED.c: 396:             LATD = LATD & 0b11111011;
  6933  000B52  508C               	movf	3980,w,c	;volatile
  6934  000B54  0BFB               	andlw	251
  6935  000B56                     L13:
  6936  000B56  6E8C               	movwf	3980,c	;volatile
  6937  000B58                     l420:
  6938                           
  6939                           ;LED.c: 401:     if(color == GREEN)
  6940  000B58  042C               	decf	LED_Control@color,w,c
  6941  000B5A  A4D8               	btfss	status,2,c
  6942  000B5C  0012               	return	
  6943                           
  6944                           ;LED.c: 402:     {;LED.c: 404:         if((diode & 0b0000000001) == 0b0000000001)
  6945  000B5E  A028               	btfss	LED_Control@diode,0,c
  6946  000B60  D003               	goto	l4115
  6947                           
  6948                           ;LED.c: 405:         {;LED.c: 406:             LATD = LATD | ~0b11011111;
  6949  000B62  508C               	movf	3980,w,c	;volatile
  6950  000B64  0920               	iorlw	32
  6951  000B66  D002               	goto	L14
  6952  000B68                     l4115:
  6953                           
  6954                           ;LED.c: 409:         {;LED.c: 410:             LATD = LATD & 0b11011111;
  6955  000B68  508C               	movf	3980,w,c	;volatile
  6956  000B6A  0BDF               	andlw	223
  6957  000B6C                     L14:
  6958  000B6C  6E8C               	movwf	3980,c	;volatile
  6959                           
  6960                           ;LED.c: 414:         if((diode & 0b0000000010) == 0b0000000010)
  6961  000B6E  A228               	btfss	LED_Control@diode,1,c
  6962  000B70  D003               	goto	l4121
  6963                           
  6964                           ;LED.c: 415:         {;LED.c: 416:             LATD = LATD | ~0b01111111;
  6965  000B72  508C               	movf	3980,w,c	;volatile
  6966  000B74  0980               	iorlw	128
  6967  000B76  D002               	goto	L15
  6968  000B78                     l4121:
  6969                           
  6970                           ;LED.c: 419:         {;LED.c: 420:             LATD = LATD & 0b01111111;
  6971  000B78  508C               	movf	3980,w,c	;volatile
  6972  000B7A  0B7F               	andlw	127
  6973  000B7C                     L15:
  6974  000B7C  6E8C               	movwf	3980,c	;volatile
  6975                           
  6976                           ;LED.c: 424:         if((diode & 0b0000000100) == 0b0000000100)
  6977  000B7E  A428               	btfss	LED_Control@diode,2,c
  6978  000B80  D003               	goto	l4127
  6979                           
  6980                           ;LED.c: 425:         {;LED.c: 426:             LATB = LATB | ~0b11111101;
  6981  000B82  508A               	movf	3978,w,c	;volatile
  6982  000B84  0902               	iorlw	2
  6983  000B86  D002               	goto	L16
  6984  000B88                     l4127:
  6985                           
  6986                           ;LED.c: 429:         {;LED.c: 430:             LATB = LATB & 0b11111101;
  6987  000B88  508A               	movf	3978,w,c	;volatile
  6988  000B8A  0BFD               	andlw	253
  6989  000B8C                     L16:
  6990  000B8C  6E8A               	movwf	3978,c	;volatile
  6991                           
  6992                           ;LED.c: 433:         if((diode & 0b0000001000) == 0b0000001000)
  6993  000B8E  A628               	btfss	LED_Control@diode,3,c
  6994  000B90  D003               	goto	l4133
  6995                           
  6996                           ;LED.c: 434:         {;LED.c: 435:             LATA = LATA | ~0b11111011;
  6997  000B92  5089               	movf	3977,w,c	;volatile
  6998  000B94  0904               	iorlw	4
  6999  000B96  D002               	goto	L17
  7000  000B98                     l4133:
  7001                           
  7002                           ;LED.c: 438:         {;LED.c: 439:             LATA = LATA & 0b11111011;
  7003  000B98  5089               	movf	3977,w,c	;volatile
  7004  000B9A  0BFB               	andlw	251
  7005  000B9C                     L17:
  7006  000B9C  6E89               	movwf	3977,c	;volatile
  7007                           
  7008                           ;LED.c: 443:         if((diode & 0b0000010000) == 0b0000010000)
  7009  000B9E  A828               	btfss	LED_Control@diode,4,c
  7010  000BA0  D003               	goto	l4139
  7011                           
  7012                           ;LED.c: 444:         {;LED.c: 445:             LATA = LATA | ~0b11101111;
  7013  000BA2  5089               	movf	3977,w,c	;volatile
  7014  000BA4  0910               	iorlw	16
  7015  000BA6  D002               	goto	L18
  7016  000BA8                     l4139:
  7017                           
  7018                           ;LED.c: 448:         {;LED.c: 449:             LATA = LATA & 0b11101111;
  7019  000BA8  5089               	movf	3977,w,c	;volatile
  7020  000BAA  0BEF               	andlw	239
  7021  000BAC                     L18:
  7022  000BAC  6E89               	movwf	3977,c	;volatile
  7023                           
  7024                           ;LED.c: 453:         if((diode & 0b0000100000) == 0b0000100000)
  7025  000BAE  AA28               	btfss	LED_Control@diode,5,c
  7026  000BB0  D003               	goto	l4145
  7027                           
  7028                           ;LED.c: 454:         {;LED.c: 455:             LATE = LATE | ~0b11111110;
  7029  000BB2  508D               	movf	3981,w,c	;volatile
  7030  000BB4  0901               	iorlw	1
  7031  000BB6  D002               	goto	L19
  7032  000BB8                     l4145:
  7033                           
  7034                           ;LED.c: 458:         {;LED.c: 459:             LATE = LATE & 0b11111110;
  7035  000BB8  508D               	movf	3981,w,c	;volatile
  7036  000BBA  0BFE               	andlw	254
  7037  000BBC                     L19:
  7038  000BBC  6E8D               	movwf	3981,c	;volatile
  7039                           
  7040                           ;LED.c: 463:         if((diode & 0b0001000000) == 0b0001000000)
  7041  000BBE  AC28               	btfss	LED_Control@diode,6,c
  7042  000BC0  D003               	goto	l4151
  7043                           
  7044                           ;LED.c: 464:         {;LED.c: 465:             LATE = LATE | ~0b11111011;
  7045  000BC2  508D               	movf	3981,w,c	;volatile
  7046  000BC4  0904               	iorlw	4
  7047  000BC6  D002               	goto	L20
  7048  000BC8                     l4151:
  7049                           
  7050                           ;LED.c: 468:         {;LED.c: 469:             LATE = LATE & 0b11111011;
  7051  000BC8  508D               	movf	3981,w,c	;volatile
  7052  000BCA  0BFB               	andlw	251
  7053  000BCC                     L20:
  7054  000BCC  6E8D               	movwf	3981,c	;volatile
  7055                           
  7056                           ;LED.c: 472:         if((diode & 0b0010000000) == 0b0010000000)
  7057  000BCE  AE28               	btfss	LED_Control@diode,7,c
  7058  000BD0  D003               	goto	l4157
  7059                           
  7060                           ;LED.c: 473:         {;LED.c: 474:             LATA = LATA | ~0b10111111;
  7061  000BD2  5089               	movf	3977,w,c	;volatile
  7062  000BD4  0940               	iorlw	64
  7063  000BD6  D002               	goto	L21
  7064  000BD8                     l4157:
  7065                           
  7066                           ;LED.c: 477:         {;LED.c: 478:             LATA = LATA & 0b10111111;
  7067  000BD8  5089               	movf	3977,w,c	;volatile
  7068  000BDA  0BBF               	andlw	191
  7069  000BDC                     L21:
  7070  000BDC  6E89               	movwf	3977,c	;volatile
  7071                           
  7072                           ;LED.c: 481:         if((diode & 0b0100000000) == 0b0100000000)
  7073  000BDE  A029               	btfss	LED_Control@diode+1,0,c
  7074  000BE0  D003               	goto	l4163
  7075                           
  7076                           ;LED.c: 482:         {;LED.c: 483:             LATD = LATD | ~0b11111101;
  7077  000BE2  508C               	movf	3980,w,c	;volatile
  7078  000BE4  0902               	iorlw	2
  7079  000BE6  D002               	goto	L22
  7080  000BE8                     l4163:
  7081                           
  7082                           ;LED.c: 486:         {;LED.c: 487:             LATD = LATD & 0b11111101;
  7083  000BE8  508C               	movf	3980,w,c	;volatile
  7084  000BEA  0BFD               	andlw	253
  7085  000BEC                     L22:
  7086  000BEC  6E8C               	movwf	3980,c	;volatile
  7087                           
  7088                           ;LED.c: 490:         if((diode & 0b1000000000) == 0b1000000000)
  7089  000BEE  A229               	btfss	LED_Control@diode+1,1,c
  7090  000BF0  D004               	goto	l4169
  7091                           
  7092                           ;LED.c: 491:         {;LED.c: 492:             LATD = LATD | ~0b11110111;
  7093  000BF2  508C               	movf	3980,w,c	;volatile
  7094  000BF4  0908               	iorlw	8
  7095  000BF6  6E8C               	movwf	3980,c	;volatile
  7096                           
  7097                           ;LED.c: 493:         }
  7098  000BF8  0012               	return	
  7099  000BFA                     l4169:
  7100                           
  7101                           ;LED.c: 495:         {;LED.c: 496:             LATD = LATD &0b11110111;
  7102  000BFA  508C               	movf	3980,w,c	;volatile
  7103  000BFC  0BF7               	andlw	247
  7104  000BFE  6E8C               	movwf	3980,c	;volatile
  7105  000C00  0012               	return		;funcret
  7106  000C02                     __end_of_LED_Control:
  7107                           	opt callstack 0
  7108                           
  7109 ;; *************** function _INI_GlobalInterrupt *****************
  7110 ;; Defined at:
  7111 ;;		line 78 in file "INI.c"
  7112 ;; Parameters:    Size  Location     Type
  7113 ;;		None
  7114 ;; Auto vars:     Size  Location     Type
  7115 ;;		None
  7116 ;; Return value:  Size  Location     Type
  7117 ;;                  1    wreg      void 
  7118 ;; Registers used:
  7119 ;;		None
  7120 ;; Tracked objects:
  7121 ;;		On entry : 0/0
  7122 ;;		On exit  : 0/0
  7123 ;;		Unchanged: 0/0
  7124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7128 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7129 ;;Total ram usage:        0 bytes
  7130 ;; Hardware stack levels used:    1
  7131 ;; Hardware stack levels required when called:    3
  7132 ;; This function calls:
  7133 ;;		Nothing
  7134 ;; This function is called by:
  7135 ;;		_INI_All
  7136 ;; This function uses a non-reentrant model
  7137 ;;
  7138                           
  7139                           	psect	text54
  7140  001B40                     __ptext54:
  7141                           	opt callstack 0
  7142  001B40                     _INI_GlobalInterrupt:
  7143                           	opt callstack 26
  7144                           
  7145                           ;INI.c: 80: INTCONbits.GIEH=1;
  7146                           
  7147                           ;incstack = 0
  7148  001B40  8EF2               	bsf	4082,7,c	;volatile
  7149                           
  7150                           ;INI.c: 81: INTCONbits.GIEL=1;
  7151  001B42  8CF2               	bsf	4082,6,c	;volatile
  7152                           
  7153                           ;INI.c: 82: RCONbits.IPEN=1;
  7154  001B44  8ED0               	bsf	4048,7,c	;volatile
  7155                           
  7156                           ;INI.c: 83: IPEN =1;
  7157  001B46  8ED0               	bsf	4048,7,c	;volatile
  7158                           
  7159                           ;INI.c: 85: PEIE=1;
  7160  001B48  8CF2               	bsf	4082,6,c	;volatile
  7161                           
  7162                           ;INI.c: 86: TMR1IP = 0;
  7163  001B4A  909F               	bcf	3999,0,c	;volatile
  7164  001B4C  0012               	return		;funcret
  7165  001B4E                     __end_of_INI_GlobalInterrupt:
  7166                           	opt callstack 0
  7167                           
  7168 ;; *************** function _CAN_Setup *****************
  7169 ;; Defined at:
  7170 ;;		line 24 in file "CAN.c"
  7171 ;; Parameters:    Size  Location     Type
  7172 ;;		None
  7173 ;; Auto vars:     Size  Location     Type
  7174 ;;		None
  7175 ;; Return value:  Size  Location     Type
  7176 ;;                  1    wreg      void 
  7177 ;; Registers used:
  7178 ;;		wreg, status,2, status,0, cstack
  7179 ;; Tracked objects:
  7180 ;;		On entry : 0/0
  7181 ;;		On exit  : 0/0
  7182 ;;		Unchanged: 0/0
  7183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7186 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7187 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7188 ;;Total ram usage:        1 bytes
  7189 ;; Hardware stack levels used:    1
  7190 ;; Hardware stack levels required when called:    5
  7191 ;; This function calls:
  7192 ;;		_CAN_SetupClock
  7193 ;;		_CAN_SetupMask
  7194 ;; This function is called by:
  7195 ;;		_INI_All
  7196 ;; This function uses a non-reentrant model
  7197 ;;
  7198                           
  7199                           	psect	text55
  7200  001556                     __ptext55:
  7201                           	opt callstack 0
  7202  001556                     _CAN_Setup:
  7203                           	opt callstack 24
  7204                           
  7205                           ;CAN.c: 29:     CANCON = 0x80;
  7206                           
  7207                           ;incstack = 0
  7208  001556  0E80               	movlw	128
  7209  001558  6E6F               	movwf	3951,c	;volatile
  7210  00155A                     l4565:
  7211                           
  7212                           ;CAN.c: 30:     while((CANSTAT & 0xE0)!=0x80)
  7213  00155A  506E               	movf	3950,w,c	;volatile
  7214  00155C  0BE0               	andlw	224
  7215  00155E  0A80               	xorlw	128
  7216  001560  A4D8               	btfss	status,2,c
  7217  001562  D7FB               	goto	l4565
  7218                           
  7219                           ;CAN.c: 35:     BSEL0 = 0;
  7220  001564  0E00               	movlw	0
  7221  001566  010D               	movlb	13	; () banked
  7222  001568  6FF8               	movwf	248,b	;volatile
  7223                           
  7224                           ;CAN.c: 36:     TXB0CON = 0;
  7225  00156A  0E00               	movlw	0
  7226  00156C  010F               	movlb	15	; () banked
  7227  00156E  6F40               	movwf	64,b	;volatile
  7228                           
  7229                           ;CAN.c: 37:     RXB0CON = 0;
  7230  001570  0E00               	movlw	0
  7231  001572  6E60               	movwf	3936,c	;volatile
  7232                           
  7233                           ;CAN.c: 38:     RXB1CON = 0;
  7234  001574  0E00               	movlw	0
  7235  001576  6F50               	movwf	80,b	;volatile
  7236                           
  7237                           ;CAN.c: 39:     B0CON = 0;
  7238  001578  0E00               	movlw	0
  7239  00157A  010E               	movlb	14	; () banked
  7240  00157C  6F20               	movwf	32,b	;volatile
  7241                           
  7242                           ;CAN.c: 40:     B1CON = 0;
  7243  00157E  0E00               	movlw	0
  7244  001580  6F30               	movwf	48,b	;volatile
  7245                           
  7246                           ;CAN.c: 41:     PIE3 = 0;
  7247  001582  0E00               	movlw	0
  7248  001584  6EA3               	movwf	4003,c	;volatile
  7249                           
  7250                           ; BSR set to: 14
  7251                           ;CAN.c: 42:     IPR3 = 0xFF;
  7252  001586  68A5               	setf	4005,c	;volatile
  7253                           
  7254                           ;CAN.c: 43:     PIR3 = 0x00;
  7255  001588  0E00               	movlw	0
  7256  00158A  6EA4               	movwf	4004,c	;volatile
  7257                           
  7258                           ;CAN.c: 44:     BIE0 = 0;
  7259  00158C  0E00               	movlw	0
  7260  00158E  010D               	movlb	13	; () banked
  7261  001590  6FFA               	movwf	250,b	;volatile
  7262                           
  7263                           ;CAN.c: 48:     ECANCON = 0x90;
  7264  001592  0E90               	movlw	144
  7265  001594  6E77               	movwf	3959,c	;volatile
  7266                           
  7267                           ; BSR set to: 13
  7268                           ;CAN.c: 51:     CAN_SetupClock();
  7269  001596  EC23  F00D         	call	_CAN_SetupClock	;wreg free
  7270                           
  7271                           ;CAN.c: 54:     CAN_SetupMask();
  7272  00159A  EC3E  F00A         	call	_CAN_SetupMask	;wreg free
  7273                           
  7274                           ;CAN.c: 56:     CIOCON = 0xff;
  7275  00159E  6873               	setf	3955,c	;volatile
  7276                           
  7277                           ;CAN.c: 62:     CANCON = 0x00;
  7278  0015A0  0E00               	movlw	0
  7279  0015A2  6E6F               	movwf	3951,c	;volatile
  7280  0015A4                     l4577:
  7281                           
  7282                           ;CAN.c: 63:     while((CANSTAT & 0xE0) != 0x00)
  7283  0015A4  CF6E F028          	movff	3950,??_CAN_Setup	;volatile
  7284  0015A8  0EE0               	movlw	224
  7285  0015AA  1628               	andwf	??_CAN_Setup,f,c
  7286  0015AC  B4D8               	btfsc	status,2,c
  7287  0015AE  0012               	return	
  7288  0015B0  D7F9               	goto	l4577
  7289  0015B2                     __end_of_CAN_Setup:
  7290                           	opt callstack 0
  7291                           
  7292 ;; *************** function _CAN_SetupMask *****************
  7293 ;; Defined at:
  7294 ;;		line 84 in file "CAN.c"
  7295 ;; Parameters:    Size  Location     Type
  7296 ;;		None
  7297 ;; Auto vars:     Size  Location     Type
  7298 ;;		None
  7299 ;; Return value:  Size  Location     Type
  7300 ;;                  1    wreg      void 
  7301 ;; Registers used:
  7302 ;;		wreg, status,2, cstack
  7303 ;; Tracked objects:
  7304 ;;		On entry : 0/0
  7305 ;;		On exit  : 0/0
  7306 ;;		Unchanged: 0/0
  7307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7312 ;;Total ram usage:        0 bytes
  7313 ;; Hardware stack levels used:    1
  7314 ;; Hardware stack levels required when called:    4
  7315 ;; This function calls:
  7316 ;;		_CAN_SetupFilter_Ne
  7317 ;; This function is called by:
  7318 ;;		_CAN_Setup
  7319 ;; This function uses a non-reentrant model
  7320 ;;
  7321                           
  7322                           	psect	text56
  7323  00147C                     __ptext56:
  7324                           	opt callstack 0
  7325  00147C                     _CAN_SetupMask:
  7326                           	opt callstack 24
  7327                           
  7328                           ;CAN.c: 86:     MSEL0 = 0x50;
  7329                           
  7330                           ;incstack = 0
  7331  00147C  0E50               	movlw	80
  7332  00147E  010D               	movlb	13	; () banked
  7333  001480  6FF0               	movwf	240,b	;volatile
  7334                           
  7335                           ;CAN.c: 87:     MSEL1 = 0x55;
  7336  001482  0E55               	movlw	85
  7337  001484  6FF1               	movwf	241,b	;volatile
  7338                           
  7339                           ;CAN.c: 88:     MSEL2 = 0x55;
  7340  001486  0E55               	movlw	85
  7341  001488  6FF2               	movwf	242,b	;volatile
  7342                           
  7343                           ;CAN.c: 89:     MSEL3 = 0x55;
  7344  00148A  0E55               	movlw	85
  7345  00148C  6FF3               	movwf	243,b	;volatile
  7346                           
  7347                           ;CAN.c: 92:     RXM0SIDH = 0b00000000;
  7348  00148E  0E00               	movlw	0
  7349  001490  010F               	movlb	15	; () banked
  7350  001492  6F18               	movwf	24,b	;volatile
  7351                           
  7352                           ;CAN.c: 93:     RXM0SIDL = 0b00001011;
  7353  001494  0E0B               	movlw	11
  7354  001496  6F19               	movwf	25,b	;volatile
  7355                           
  7356                           ; BSR set to: 15
  7357                           ;CAN.c: 94:     RXM0EIDH = 0xFF;
  7358  001498  691A               	setf	26,b	;volatile
  7359                           
  7360                           ; BSR set to: 15
  7361                           ;CAN.c: 95:     RXM0EIDL = 0xFF;
  7362  00149A  691B               	setf	27,b	;volatile
  7363                           
  7364                           ; BSR set to: 15
  7365                           ;CAN.c: 98:     RXM1SIDH = 0xFF;
  7366  00149C  691C               	setf	28,b	;volatile
  7367                           
  7368                           ; BSR set to: 15
  7369                           ;CAN.c: 99:     RXM1SIDL = 0xFF;
  7370  00149E  691D               	setf	29,b	;volatile
  7371                           
  7372                           ; BSR set to: 15
  7373                           ;CAN.c: 100:     RXM1EIDH = 0xFF;
  7374  0014A0  691E               	setf	30,b	;volatile
  7375                           
  7376                           ; BSR set to: 15
  7377                           ;CAN.c: 101:     RXM1EIDL = 0xFF;
  7378  0014A2  691F               	setf	31,b	;volatile
  7379                           
  7380                           ;CAN.c: 104:     RXM0SIDH = 0x00;
  7381  0014A4  0E00               	movlw	0
  7382  0014A6  6F18               	movwf	24,b	;volatile
  7383                           
  7384                           ;CAN.c: 105:     RXM0SIDL = 0x00;
  7385  0014A8  0E00               	movlw	0
  7386  0014AA  6F19               	movwf	25,b	;volatile
  7387                           
  7388                           ;CAN.c: 110:     RXF0SIDH = 0x00;
  7389  0014AC  0E00               	movlw	0
  7390  0014AE  6F00               	movwf	0,b	;volatile
  7391                           
  7392                           ;CAN.c: 111:     RXF0SIDL = 0x01;
  7393  0014B0  0E01               	movlw	1
  7394  0014B2  6F01               	movwf	1,b	;volatile
  7395                           
  7396                           ; BSR set to: 15
  7397                           ;CAN.c: 112:     RXF0SIDLbits.EXIDEN = 1;
  7398  0014B4  8701               	bsf	1,3,b	;volatile
  7399                           
  7400                           ;CAN.c: 113:     RXF0EIDH = (BYTE)(DaneCan.adresCAN>>8);
  7401  0014B6  5004               	movf	_DaneCan+3,w,c
  7402  0014B8  6F02               	movwf	2,b	;volatile
  7403                           
  7404                           ; BSR set to: 15
  7405                           ;CAN.c: 115:     RXF0EIDL = (BYTE)DaneCan.adresCAN;
  7406  0014BA  C003  FF03         	movff	_DaneCan+2,3843	;volatile
  7407                           
  7408                           ;CAN.c: 117:     RXF1SIDH = 0x00;
  7409  0014BE  0E00               	movlw	0
  7410  0014C0  6F04               	movwf	4,b	;volatile
  7411                           
  7412                           ;CAN.c: 118:     RXF1SIDL = 0x01;
  7413  0014C2  0E01               	movlw	1
  7414  0014C4  6F05               	movwf	5,b	;volatile
  7415                           
  7416                           ; BSR set to: 15
  7417                           ;CAN.c: 119:     RXF1SIDLbits.EXIDEN = 1;
  7418  0014C6  8705               	bsf	5,3,b	;volatile
  7419                           
  7420                           ;CAN.c: 120:     RXF1EIDH = 0x7F;
  7421  0014C8  0E7F               	movlw	127
  7422  0014CA  6F06               	movwf	6,b	;volatile
  7423                           
  7424                           ; BSR set to: 15
  7425                           ;CAN.c: 121:     RXF1EIDL = 0xFF;
  7426  0014CC  6907               	setf	7,b	;volatile
  7427                           
  7428                           ; BSR set to: 15
  7429                           ;CAN.c: 123:     CAN_SetupFilter_Ne();
  7430  0014CE  ECC2  F008         	call	_CAN_SetupFilter_Ne	;wreg free
  7431                           
  7432                           ;CAN.c: 126:     RXFBCON0 = 0b00000000;
  7433  0014D2  0E00               	movlw	0
  7434  0014D4  010D               	movlb	13	; () banked
  7435  0014D6  6FE0               	movwf	224,b	;volatile
  7436                           
  7437                           ; BSR set to: 13
  7438                           ;CAN.c: 128:     RXFBCON1 = 0b00010001;
  7439  0014D8  0E11               	movlw	17
  7440  0014DA  6FE1               	movwf	225,b	;volatile
  7441                           
  7442                           ; BSR set to: 13
  7443                           ;CAN.c: 130:     RXFBCON2 = 0b00010001;
  7444  0014DC  0E11               	movlw	17
  7445  0014DE  6FE2               	movwf	226,b	;volatile
  7446                           
  7447                           ; BSR set to: 13
  7448                           ;CAN.c: 132:     RXFBCON3 = 0b00010001;
  7449  0014E0  0E11               	movlw	17
  7450  0014E2  6FE3               	movwf	227,b	;volatile
  7451                           
  7452                           ; BSR set to: 13
  7453                           ;CAN.c: 134:     RXFBCON4 = 0b00010001;
  7454  0014E4  0E11               	movlw	17
  7455  0014E6  6FE4               	movwf	228,b	;volatile
  7456                           
  7457                           ; BSR set to: 13
  7458                           ;CAN.c: 136:     RXFCON0 = 0b11111111;
  7459  0014E8  69D4               	setf	212,b	;volatile
  7460                           
  7461                           ; BSR set to: 13
  7462                           ;CAN.c: 137:     RXFCON1 = 0b00000011;
  7463  0014EA  0E03               	movlw	3
  7464  0014EC  6FD5               	movwf	213,b	;volatile
  7465                           
  7466                           ; BSR set to: 13
  7467  0014EE  0012               	return		;funcret
  7468  0014F0                     __end_of_CAN_SetupMask:
  7469                           	opt callstack 0
  7470                           
  7471 ;; *************** function _CAN_SetupFilter_Ne *****************
  7472 ;; Defined at:
  7473 ;;		line 141 in file "CAN.c"
  7474 ;; Parameters:    Size  Location     Type
  7475 ;;		None
  7476 ;; Auto vars:     Size  Location     Type
  7477 ;;		None
  7478 ;; Return value:  Size  Location     Type
  7479 ;;                  1    wreg      void 
  7480 ;; Registers used:
  7481 ;;		wreg, status,2
  7482 ;; Tracked objects:
  7483 ;;		On entry : 0/0
  7484 ;;		On exit  : 0/0
  7485 ;;		Unchanged: 0/0
  7486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7491 ;;Total ram usage:        0 bytes
  7492 ;; Hardware stack levels used:    1
  7493 ;; Hardware stack levels required when called:    3
  7494 ;; This function calls:
  7495 ;;		Nothing
  7496 ;; This function is called by:
  7497 ;;		_CAN_SetupMask
  7498 ;;		_FRAME_AdressOfNeighbors
  7499 ;; This function uses a non-reentrant model
  7500 ;;
  7501                           
  7502                           	psect	text57
  7503  001184                     __ptext57:
  7504                           	opt callstack 0
  7505  001184                     _CAN_SetupFilter_Ne:
  7506                           	opt callstack 24
  7507                           
  7508                           ;CAN.c: 145:     RXF2SIDH = 0;
  7509                           
  7510                           ; BSR set to: 13
  7511                           ;incstack = 0
  7512  001184  0E00               	movlw	0
  7513  001186  010F               	movlb	15	; () banked
  7514  001188  6F08               	movwf	8,b	;volatile
  7515                           
  7516                           ;CAN.c: 146:     RXF2SIDL = 0x20;
  7517  00118A  0E20               	movlw	32
  7518  00118C  6F09               	movwf	9,b	;volatile
  7519                           
  7520                           ; BSR set to: 15
  7521                           ;CAN.c: 147:     RXF2SIDLbits.EXIDEN = 1;
  7522  00118E  8709               	bsf	9,3,b	;volatile
  7523                           
  7524                           ;CAN.c: 148:     RXF2EIDH = (BYTE)(NeightAdress1>>8);
  7525  001190  5022               	movf	_NeightAdress1+1,w,c	;volatile
  7526  001192  6F0A               	movwf	10,b	;volatile
  7527                           
  7528                           ; BSR set to: 15
  7529                           ;CAN.c: 149:     RXF2EIDL = (BYTE)(NeightAdress1 & 0xFF);
  7530  001194  C021  FF0B         	movff	_NeightAdress1,3851	;volatile
  7531                           
  7532                           ;CAN.c: 152:     RXF3SIDH = 0;
  7533  001198  0E00               	movlw	0
  7534  00119A  6F0C               	movwf	12,b	;volatile
  7535                           
  7536                           ;CAN.c: 153:     RXF3SIDL = 0x20;
  7537  00119C  0E20               	movlw	32
  7538  00119E  6F0D               	movwf	13,b	;volatile
  7539                           
  7540                           ; BSR set to: 15
  7541                           ;CAN.c: 154:     RXF3SIDLbits.EXIDEN = 1;
  7542  0011A0  870D               	bsf	13,3,b	;volatile
  7543                           
  7544                           ;CAN.c: 155:     RXF3EIDH = (BYTE)(NeightAdress2>>8);
  7545  0011A2  504B               	movf	_NeightAdress2+1,w,c	;volatile
  7546  0011A4  6F0E               	movwf	14,b	;volatile
  7547                           
  7548                           ; BSR set to: 15
  7549                           ;CAN.c: 156:     RXF3EIDL = (BYTE)(NeightAdress2 & 0xFF);
  7550  0011A6  C04A  FF0F         	movff	_NeightAdress2,3855	;volatile
  7551                           
  7552                           ;CAN.c: 158:     RXF4SIDH = 0;
  7553  0011AA  0E00               	movlw	0
  7554  0011AC  6F10               	movwf	16,b	;volatile
  7555                           
  7556                           ;CAN.c: 159:     RXF4SIDL = 0x20;
  7557  0011AE  0E20               	movlw	32
  7558  0011B0  6F11               	movwf	17,b	;volatile
  7559                           
  7560                           ; BSR set to: 15
  7561                           ;CAN.c: 160:     RXF4SIDLbits.EXIDEN = 1;
  7562  0011B2  8711               	bsf	17,3,b	;volatile
  7563                           
  7564                           ;CAN.c: 161:     RXF4EIDH = (BYTE)(NeightAdress3>>8);
  7565  0011B4  5020               	movf	_NeightAdress3+1,w,c	;volatile
  7566  0011B6  6F12               	movwf	18,b	;volatile
  7567                           
  7568                           ; BSR set to: 15
  7569                           ;CAN.c: 162:     RXF4EIDL = (BYTE)(NeightAdress3 & 0xFF);
  7570  0011B8  C01F  FF13         	movff	_NeightAdress3,3859	;volatile
  7571                           
  7572                           ;CAN.c: 164:     RXF5SIDH = 0;
  7573  0011BC  0E00               	movlw	0
  7574  0011BE  6F14               	movwf	20,b	;volatile
  7575                           
  7576                           ;CAN.c: 165:     RXF5SIDL = 0x20;
  7577  0011C0  0E20               	movlw	32
  7578  0011C2  6F15               	movwf	21,b	;volatile
  7579                           
  7580                           ; BSR set to: 15
  7581                           ;CAN.c: 166:     RXF5SIDLbits.EXIDEN = 1;
  7582  0011C4  8715               	bsf	21,3,b	;volatile
  7583                           
  7584                           ;CAN.c: 167:     RXF5EIDH = (BYTE)(NeightAdress4>>8);
  7585  0011C6  501E               	movf	_NeightAdress4+1,w,c	;volatile
  7586  0011C8  6F16               	movwf	22,b	;volatile
  7587                           
  7588                           ; BSR set to: 15
  7589                           ;CAN.c: 168:     RXF5EIDL = (BYTE)(NeightAdress4 & 0xFF);
  7590  0011CA  C01D  FF17         	movff	_NeightAdress4,3863	;volatile
  7591                           
  7592                           ;CAN.c: 170:     RXF6SIDH = 0;
  7593  0011CE  0E00               	movlw	0
  7594  0011D0  010D               	movlb	13	; () banked
  7595  0011D2  6F60               	movwf	96,b	;volatile
  7596                           
  7597                           ;CAN.c: 171:     RXF6SIDL = 0x20;
  7598  0011D4  0E20               	movlw	32
  7599  0011D6  6F61               	movwf	97,b	;volatile
  7600                           
  7601                           ; BSR set to: 13
  7602                           ;CAN.c: 172:     RXF6SIDLbits.EXIDEN = 1;
  7603  0011D8  8761               	bsf	97,3,b	;volatile
  7604                           
  7605                           ;CAN.c: 173:     RXF6EIDH = (BYTE)(NeightAdress5>>8);
  7606  0011DA  501C               	movf	_NeightAdress5+1,w,c	;volatile
  7607  0011DC  6F62               	movwf	98,b	;volatile
  7608                           
  7609                           ; BSR set to: 13
  7610                           ;CAN.c: 174:     RXF6EIDL = (BYTE)(NeightAdress5 & 0xFF);
  7611  0011DE  C01B  FD63         	movff	_NeightAdress5,3427	;volatile
  7612                           
  7613                           ;CAN.c: 176:     RXF7SIDH = 0;
  7614  0011E2  0E00               	movlw	0
  7615  0011E4  6F64               	movwf	100,b	;volatile
  7616                           
  7617                           ;CAN.c: 177:     RXF7SIDL = 0x20;
  7618  0011E6  0E20               	movlw	32
  7619  0011E8  6F65               	movwf	101,b	;volatile
  7620                           
  7621                           ; BSR set to: 13
  7622                           ;CAN.c: 178:     RXF7SIDLbits.EXIDEN = 1;
  7623  0011EA  8765               	bsf	101,3,b	;volatile
  7624                           
  7625                           ;CAN.c: 179:     RXF7EIDH = (BYTE)(NeightAdress6>>8);
  7626  0011EC  501A               	movf	_NeightAdress6+1,w,c	;volatile
  7627  0011EE  6F66               	movwf	102,b	;volatile
  7628                           
  7629                           ; BSR set to: 13
  7630                           ;CAN.c: 180:     RXF7EIDL = (BYTE)(NeightAdress6 & 0xFF);
  7631  0011F0  C019  FD67         	movff	_NeightAdress6,3431	;volatile
  7632                           
  7633                           ;CAN.c: 182:     RXF8SIDH = 0;
  7634  0011F4  0E00               	movlw	0
  7635  0011F6  6F68               	movwf	104,b	;volatile
  7636                           
  7637                           ;CAN.c: 183:     RXF8SIDL = 0x20;
  7638  0011F8  0E20               	movlw	32
  7639  0011FA  6F69               	movwf	105,b	;volatile
  7640                           
  7641                           ; BSR set to: 13
  7642                           ;CAN.c: 184:     RXF8SIDLbits.EXIDEN = 1;
  7643  0011FC  8769               	bsf	105,3,b	;volatile
  7644                           
  7645                           ;CAN.c: 185:     RXF8EIDH = (BYTE)(NeightAdress7>>8);
  7646  0011FE  5018               	movf	_NeightAdress7+1,w,c	;volatile
  7647  001200  6F6A               	movwf	106,b	;volatile
  7648                           
  7649                           ; BSR set to: 13
  7650                           ;CAN.c: 186:     RXF8EIDL = (BYTE)(NeightAdress7 & 0xFF);
  7651  001202  C017  FD6B         	movff	_NeightAdress7,3435	;volatile
  7652                           
  7653                           ;CAN.c: 188:     RXF9SIDH = 0;
  7654  001206  0E00               	movlw	0
  7655  001208  6F70               	movwf	112,b	;volatile
  7656                           
  7657                           ;CAN.c: 189:     RXF9SIDL = 0x20;
  7658  00120A  0E20               	movlw	32
  7659  00120C  6F71               	movwf	113,b	;volatile
  7660                           
  7661                           ; BSR set to: 13
  7662                           ;CAN.c: 190:     RXF9SIDLbits.EXIDEN = 1;
  7663  00120E  8771               	bsf	113,3,b	;volatile
  7664                           
  7665                           ;CAN.c: 191:     RXF9EIDH = (BYTE)(NeightAdress8>>8);
  7666  001210  5016               	movf	_NeightAdress8+1,w,c	;volatile
  7667  001212  6F72               	movwf	114,b	;volatile
  7668                           
  7669                           ; BSR set to: 13
  7670                           ;CAN.c: 192:     RXF9EIDL = (BYTE)(NeightAdress8 & 0xFF);
  7671  001214  C015  FD73         	movff	_NeightAdress8,3443	;volatile
  7672                           
  7673                           ; BSR set to: 13
  7674  001218  0012               	return		;funcret
  7675  00121A                     __end_of_CAN_SetupFilter_Ne:
  7676                           	opt callstack 0
  7677                           
  7678 ;; *************** function _CAN_SetupClock *****************
  7679 ;; Defined at:
  7680 ;;		line 200 in file "CAN.c"
  7681 ;; Parameters:    Size  Location     Type
  7682 ;;		None
  7683 ;; Auto vars:     Size  Location     Type
  7684 ;;		None
  7685 ;; Return value:  Size  Location     Type
  7686 ;;                  1    wreg      void 
  7687 ;; Registers used:
  7688 ;;		None
  7689 ;; Tracked objects:
  7690 ;;		On entry : 0/0
  7691 ;;		On exit  : 0/0
  7692 ;;		Unchanged: 0/0
  7693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7698 ;;Total ram usage:        0 bytes
  7699 ;; Hardware stack levels used:    1
  7700 ;; Hardware stack levels required when called:    3
  7701 ;; This function calls:
  7702 ;;		Nothing
  7703 ;; This function is called by:
  7704 ;;		_CAN_Setup
  7705 ;; This function uses a non-reentrant model
  7706 ;;
  7707                           
  7708                           	psect	text58
  7709  001A46                     __ptext58:
  7710                           	opt callstack 0
  7711  001A46                     _CAN_SetupClock:
  7712                           	opt callstack 25
  7713                           
  7714                           ;CAN.c: 202:     BRGCON1bits.BRP0 = (((32000000/4)/(2*20*50000))-1) & 0b000001;
  7715                           
  7716                           ; BSR set to: 13
  7717                           ;incstack = 0
  7718  001A46  8070               	bsf	3952,0,c	;volatile
  7719                           
  7720                           ;CAN.c: 203:     BRGCON1bits.BRP1 = ((((32000000/4)/(2*20*50000))-1) >> 1) & 0b000001;
  7721  001A48  8270               	bsf	3952,1,c	;volatile
  7722                           
  7723                           ;CAN.c: 204:     BRGCON1bits.BRP2 = ((((32000000/4)/(2*20*50000))-1) >> 2) & 0b000001;
  7724  001A4A  9470               	bcf	3952,2,c	;volatile
  7725                           
  7726                           ;CAN.c: 205:     BRGCON1bits.BRP3 = ((((32000000/4)/(2*20*50000))-1) >> 3) & 0b000001;
  7727  001A4C  9670               	bcf	3952,3,c	;volatile
  7728                           
  7729                           ;CAN.c: 206:     BRGCON1bits.BRP4 = ((((32000000/4)/(2*20*50000))-1) >> 4) & 0b000001;
  7730  001A4E  9870               	bcf	3952,4,c	;volatile
  7731                           
  7732                           ;CAN.c: 207:     BRGCON1bits.BRP5 = ((((32000000/4)/(2*20*50000))-1) >> 5) & 0b000001;
  7733  001A50  9A70               	bcf	3952,5,c	;volatile
  7734                           
  7735                           ;CAN.c: 209:     BRGCON1bits.SJW0 = 1;
  7736  001A52  8C70               	bsf	3952,6,c	;volatile
  7737                           
  7738                           ;CAN.c: 210:     BRGCON1bits.SJW1 = 1;
  7739  001A54  8E70               	bsf	3952,7,c	;volatile
  7740                           
  7741                           ;CAN.c: 212:     BRGCON2bits.SEG1PH0 = 1;
  7742  001A56  8671               	bsf	3953,3,c	;volatile
  7743                           
  7744                           ;CAN.c: 213:     BRGCON2bits.SEG1PH1 = 1;
  7745  001A58  8871               	bsf	3953,4,c	;volatile
  7746                           
  7747                           ;CAN.c: 214:     BRGCON2bits.SEG1PH2 = 1;
  7748  001A5A  8A71               	bsf	3953,5,c	;volatile
  7749                           
  7750                           ;CAN.c: 216:     BRGCON2bits.PRSEG2 = 1;
  7751  001A5C  8471               	bsf	3953,2,c	;volatile
  7752                           
  7753                           ;CAN.c: 217:     BRGCON2bits.PRSEG1 = 0;
  7754  001A5E  9271               	bcf	3953,1,c	;volatile
  7755                           
  7756                           ;CAN.c: 218:     BRGCON2bits.PRSEG0 = 0;
  7757  001A60  9071               	bcf	3953,0,c	;volatile
  7758                           
  7759                           ;CAN.c: 220:     BRGCON3bits.SEG2PH0 = 1;
  7760  001A62  8072               	bsf	3954,0,c	;volatile
  7761                           
  7762                           ;CAN.c: 221:     BRGCON3bits.SEG2PH1 = 0;
  7763  001A64  9272               	bcf	3954,1,c	;volatile
  7764                           
  7765                           ;CAN.c: 222:     BRGCON3bits.SEG2PH2 = 1;
  7766  001A66  8472               	bsf	3954,2,c	;volatile
  7767                           
  7768                           ;CAN.c: 224:     BRGCON2bits.SAM = 1;
  7769  001A68  8C71               	bsf	3953,6,c	;volatile
  7770                           
  7771                           ;CAN.c: 225:     BRGCON2bits.SEG2PHTS = 1;
  7772  001A6A  8E71               	bsf	3953,7,c	;volatile
  7773  001A6C  0012               	return		;funcret
  7774  001A6E                     __end_of_CAN_SetupClock:
  7775                           	opt callstack 0
  7776                           
  7777 ;; *************** function _FLASH_Read *****************
  7778 ;; Defined at:
  7779 ;;		line 28 in file "FLASH.c"
  7780 ;; Parameters:    Size  Location     Type
  7781 ;;  addr            4    5[COMRAM] long 
  7782 ;; Auto vars:     Size  Location     Type
  7783 ;;		None
  7784 ;; Return value:  Size  Location     Type
  7785 ;;                  2    5[COMRAM] unsigned int 
  7786 ;; Registers used:
  7787 ;;		None
  7788 ;; Tracked objects:
  7789 ;;		On entry : 0/0
  7790 ;;		On exit  : 0/0
  7791 ;;		Unchanged: 0/0
  7792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7793 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7796 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7797 ;;Total ram usage:        4 bytes
  7798 ;; Hardware stack levels used:    1
  7799 ;; Hardware stack levels required when called:    3
  7800 ;; This function calls:
  7801 ;;		Nothing
  7802 ;; This function is called by:
  7803 ;;		_main
  7804 ;; This function uses a non-reentrant model
  7805 ;;
  7806                           
  7807                           	psect	text59
  7808  001B0A                     __ptext59:
  7809                           	opt callstack 0
  7810  001B0A                     _FLASH_Read:
  7811                           	opt callstack 27
  7812                           
  7813                           ;FLASH.c: 28: UINT FLASH_Read(long int addr);FLASH.c: 29: {;FLASH.c: 30:     TBLPTR = ad
      +                          dr;
  7814                           
  7815                           ;incstack = 0
  7816  001B0A  C028  FFF6         	movff	FLASH_Read@addr,tblptrl	;volatile
  7817  001B0E  C029  FFF7         	movff	FLASH_Read@addr+1,tblptrh	;volatile
  7818  001B12  C02A  FFF8         	movff	FLASH_Read@addr+2,tblptru	;volatile
  7819  001B16  0008               	tblrd		*	; ;# 
  7820                           
  7821                           ;FLASH.c: 32:     return TABLAT;
  7822  001B18  CFF5 F028          	movff	tablat,?_FLASH_Read	;volatile
  7823  001B1C  6A29               	clrf	?_FLASH_Read+1,c
  7824  001B1E  0012               	return		;funcret
  7825  001B20                     __end_of_FLASH_Read:
  7826                           	opt callstack 0
  7827                           
  7828 ;; *************** function _ISR_low *****************
  7829 ;; Defined at:
  7830 ;;		line 16 in file "ISR.c"
  7831 ;; Parameters:    Size  Location     Type
  7832 ;;		None
  7833 ;; Auto vars:     Size  Location     Type
  7834 ;;		None
  7835 ;; Return value:  Size  Location     Type
  7836 ;;                  1    wreg      void 
  7837 ;; Registers used:
  7838 ;;		wreg, status,2, status,0, cstack
  7839 ;; Tracked objects:
  7840 ;;		On entry : 0/0
  7841 ;;		On exit  : 0/0
  7842 ;;		Unchanged: 0/0
  7843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7846 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7847 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7848 ;;Total ram usage:        3 bytes
  7849 ;; Hardware stack levels used:    1
  7850 ;; Hardware stack levels required when called:    2
  7851 ;; This function calls:
  7852 ;;		_TMR1_Timer_reset
  7853 ;;		i1_TMR1_Update_flag_Set
  7854 ;; This function is called by:
  7855 ;;		Interrupt level 1
  7856 ;; This function uses a non-reentrant model
  7857 ;;
  7858                           
  7859                           	psect	intcodelo
  7860  000018                     __pintcodelo:
  7861                           	opt callstack 0
  7862  000018                     _ISR_low:
  7863                           	opt callstack 22
  7864                           
  7865                           ;incstack = 0
  7866  000018  804C               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  7867  00001A  CFD8 F025          	movff	status,??_ISR_low
  7868  00001E  CFE8 F026          	movff	wreg,??_ISR_low+1
  7869  000022  CFE0 F027          	movff	bsr,??_ISR_low+2
  7870                           
  7871                           ;ISR.c: 21:     if(TMR1IF==1)
  7872  000026  A09E               	btfss	3998,0,c	;volatile
  7873  000028  D012               	goto	i1l797
  7874                           
  7875                           ;ISR.c: 22:         {;ISR.c: 23:             TMR1_Timer_reset();
  7876  00002A  EC37  F00D         	call	_TMR1_Timer_reset	;wreg free
  7877                           
  7878                           ;ISR.c: 26:             static BYTE ramkaStanuU8=0;;ISR.c: 29:             TMR1_Update_f
      +                          lag_Set(1);
  7879  00002E  0E00               	movlw	0
  7880  000030  6E24               	movwf	i1TMR1_Update_flag_Set@a+1,c
  7881  000032  0E01               	movlw	1
  7882  000034  6E23               	movwf	i1TMR1_Update_flag_Set@a,c
  7883  000036  ECD6  F00D         	call	i1_TMR1_Update_flag_Set	;wreg free
  7884                           
  7885                           ;ISR.c: 31:             DetectorLedRadar.Flags.obsluzWeWy = 1;
  7886  00003A  0100               	movlb	0	; () banked
  7887  00003C  81CB               	bsf	_DetectorLedRadar& (0+255),0,b
  7888                           
  7889                           ; BSR set to: 0
  7890                           ;ISR.c: 33:             if(++ramkaStanuU8 > (2*10))
  7891  00003E  2A0E               	incf	ISR_low@ramkaStanuU8,f,c
  7892  000040  0E14               	movlw	20
  7893  000042  640E               	cpfsgt	ISR_low@ramkaStanuU8,c
  7894  000044  D003               	goto	i1l3885
  7895                           
  7896                           ; BSR set to: 0
  7897                           ;ISR.c: 34:                 {;ISR.c: 35:                     ramkaStanuU8 = 0;
  7898  000046  0E00               	movlw	0
  7899  000048  6E0E               	movwf	ISR_low@ramkaStanuU8,c
  7900                           
  7901                           ; BSR set to: 0
  7902                           ;ISR.c: 36:                     DaneCan.Flags.wyslijRamkeStanu = 1;
  7903  00004A  8001               	bsf	_DaneCan,0,c
  7904  00004C                     i1l3885:
  7905                           
  7906                           ; BSR set to: 0
  7907                           ;ISR.c: 41:             TMR1IF=0;
  7908  00004C  909E               	bcf	3998,0,c	;volatile
  7909  00004E                     i1l797:
  7910  00004E  C027  FFE0         	movff	??_ISR_low+2,bsr
  7911  000052  C026  FFE8         	movff	??_ISR_low+1,wreg
  7912  000056  C025  FFD8         	movff	??_ISR_low,status
  7913  00005A  904C               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  7914  00005C  0010               	retfie	
  7915  00005E                     __end_of_ISR_low:
  7916                           	opt callstack 0
  7917                           
  7918 ;; *************** function i1_TMR1_Update_flag_Set *****************
  7919 ;; Defined at:
  7920 ;;		line 32 in file "TMR1.c"
  7921 ;; Parameters:    Size  Location     Type
  7922 ;;  a               2    0[COMRAM] unsigned int 
  7923 ;; Auto vars:     Size  Location     Type
  7924 ;;		None
  7925 ;; Return value:  Size  Location     Type
  7926 ;;                  1    wreg      void 
  7927 ;; Registers used:
  7928 ;;		None
  7929 ;; Tracked objects:
  7930 ;;		On entry : 0/0
  7931 ;;		On exit  : 0/0
  7932 ;;		Unchanged: 0/0
  7933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7934 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7937 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7938 ;;Total ram usage:        2 bytes
  7939 ;; Hardware stack levels used:    1
  7940 ;; Hardware stack levels required when called:    1
  7941 ;; This function calls:
  7942 ;;		Nothing
  7943 ;; This function is called by:
  7944 ;;		_ISR_low
  7945 ;; This function uses a non-reentrant model
  7946 ;;
  7947                           
  7948                           	psect	text61
  7949  001BAC                     __ptext61:
  7950                           	opt callstack 0
  7951  001BAC                     i1_TMR1_Update_flag_Set:
  7952                           	opt callstack 22
  7953                           
  7954                           ;TMR1.c: 32: void TMR1_Update_flag_Set(UINT a);TMR1.c: 33: {;TMR1.c: 34:     TMR1_Update
      +                          _flag = a;
  7955                           
  7956                           ;incstack = 0
  7957  001BAC  C023  F009         	movff	i1TMR1_Update_flag_Set@a,_TMR1_Update_flag
  7958  001BB0  C024  F00A         	movff	i1TMR1_Update_flag_Set@a+1,_TMR1_Update_flag+1
  7959  001BB4  0012               	return		;funcret
  7960  001BB6                     __end_ofi1_TMR1_Update_flag_Set:
  7961                           	opt callstack 0
  7962                           
  7963 ;; *************** function _TMR1_Timer_reset *****************
  7964 ;; Defined at:
  7965 ;;		line 63 in file "TMR1.c"
  7966 ;; Parameters:    Size  Location     Type
  7967 ;;		None
  7968 ;; Auto vars:     Size  Location     Type
  7969 ;;  t1H             1    1[COMRAM] volatile unsigned char 
  7970 ;;  t1L             1    0[COMRAM] volatile unsigned char 
  7971 ;; Return value:  Size  Location     Type
  7972 ;;                  1    wreg      unsigned char 
  7973 ;; Registers used:
  7974 ;;		wreg, status,2, status,0
  7975 ;; Tracked objects:
  7976 ;;		On entry : 0/0
  7977 ;;		On exit  : 0/0
  7978 ;;		Unchanged: 0/0
  7979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7981 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7983 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7984 ;;Total ram usage:        2 bytes
  7985 ;; Hardware stack levels used:    1
  7986 ;; Hardware stack levels required when called:    1
  7987 ;; This function calls:
  7988 ;;		Nothing
  7989 ;; This function is called by:
  7990 ;;		_ISR_low
  7991 ;; This function uses a non-reentrant model
  7992 ;;
  7993                           
  7994                           	psect	text62
  7995  001A6E                     __ptext62:
  7996                           	opt callstack 0
  7997  001A6E                     _TMR1_Timer_reset:
  7998                           	opt callstack 22
  7999                           
  8000                           ;TMR1.c: 69:     volatile BYTE t1L = 0, t1H = 0;
  8001                           
  8002                           ;incstack = 0
  8003  001A6E  0E00               	movlw	0
  8004  001A70  6E23               	movwf	TMR1_Timer_reset@t1L,c	;volatile
  8005  001A72  0E00               	movlw	0
  8006  001A74  6E24               	movwf	TMR1_Timer_reset@t1H,c	;volatile
  8007                           
  8008                           ;TMR1.c: 70:     t1L = TMR1L;
  8009  001A76  CFCE F023          	movff	4046,TMR1_Timer_reset@t1L	;volatile
  8010                           
  8011                           ;TMR1.c: 71:     t1H = TMR1H;
  8012  001A7A  CFCF F024          	movff	4047,TMR1_Timer_reset@t1H	;volatile
  8013                           
  8014                           ;TMR1.c: 72:     __nop();
  8015  001A7E  F000               	nop	
  8016                           
  8017                           ;TMR1.c: 73:     t1H += (UINT8)((0xFFFF - (((8000000/8)/4)/10)) >> 8);
  8018  001A80  0E9E               	movlw	158
  8019  001A82  2624               	addwf	TMR1_Timer_reset@t1H,f,c	;volatile
  8020                           
  8021                           ;TMR1.c: 74:     t1L += (UINT8)((0xFFFF - (((8000000/8)/4)/10)) & 0xFF);
  8022  001A84  0E57               	movlw	87
  8023  001A86  2623               	addwf	TMR1_Timer_reset@t1L,f,c	;volatile
  8024                           
  8025                           ;TMR1.c: 75:     TMR1H = t1H;
  8026  001A88  C024  FFCF         	movff	TMR1_Timer_reset@t1H,4047	;volatile
  8027                           
  8028                           ;TMR1.c: 76:     TMR1L = 0x5B;
  8029  001A8C  0E5B               	movlw	91
  8030  001A8E  6ECE               	movwf	4046,c	;volatile
  8031  001A90  0012               	return		;funcret
  8032  001A92                     __end_of_TMR1_Timer_reset:
  8033                           	opt callstack 0
  8034                           
  8035 ;; *************** function _ISR_high *****************
  8036 ;; Defined at:
  8037 ;;		line 53 in file "ISR.c"
  8038 ;; Parameters:    Size  Location     Type
  8039 ;;		None
  8040 ;; Auto vars:     Size  Location     Type
  8041 ;;		None
  8042 ;; Return value:  Size  Location     Type
  8043 ;;                  1    wreg      void 
  8044 ;; Registers used:
  8045 ;;		None
  8046 ;; Tracked objects:
  8047 ;;		On entry : 0/0
  8048 ;;		On exit  : 0/0
  8049 ;;		Unchanged: 0/0
  8050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8054 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8055 ;;Total ram usage:        0 bytes
  8056 ;; Hardware stack levels used:    1
  8057 ;; This function calls:
  8058 ;;		Nothing
  8059 ;; This function is called by:
  8060 ;;		Interrupt level 2
  8061 ;; This function uses a non-reentrant model
  8062 ;;
  8063                           
  8064                           	psect	intcode
  8065  000008                     __pintcode:
  8066                           	opt callstack 0
  8067  000008                     _ISR_high:
  8068                           	opt callstack 22
  8069                           
  8070                           ;incstack = 0
  8071  000008  824C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  8072  00000A  EDE3  F00D         	call	int_func,f	;refresh shadow registers
  8073                           
  8074                           	psect	intcode_body
  8075  001BC6                     __pintcode_body:
  8076                           	opt callstack 22
  8077  001BC6                     int_func:
  8078                           	opt callstack 22
  8079  001BC6  0006               	pop		; remove dummy address from shadow register refresh
  8080  001BC8  924C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  8081  001BCA  0011               	retfie		f
  8082  001BCC                     __end_of_ISR_high:
  8083                           	opt callstack 0
  8084  0000                     
  8085                           	psect	rparam
  8086  0000                     
  8087                           	psect	temp
  8088  00004C                     btemp:
  8089                           	opt callstack 0
  8090  00004C                     	ds	1
  8091  0000                     int$flags	set	btemp
  8092  0000                     wtemp8	set	btemp+1
  8093  0000                     ttemp5	set	btemp+1
  8094  0000                     ttemp6	set	btemp+4
  8095  0000                     ttemp7	set	btemp+8
  8096                           tosu	equ	0xFFF
  8097                           tosh	equ	0xFFE
  8098                           tosl	equ	0xFFD
  8099                           stkptr	equ	0xFFC
  8100                           pclatu	equ	0xFFB
  8101                           pclath	equ	0xFFA
  8102                           pcl	equ	0xFF9
  8103                           tblptru	equ	0xFF8
  8104                           tblptrh	equ	0xFF7
  8105                           tblptrl	equ	0xFF6
  8106                           tablat	equ	0xFF5
  8107                           prodh	equ	0xFF4
  8108                           prodl	equ	0xFF3
  8109                           indf0	equ	0xFEF
  8110                           postinc0	equ	0xFEE
  8111                           postdec0	equ	0xFED
  8112                           preinc0	equ	0xFEC
  8113                           plusw0	equ	0xFEB
  8114                           fsr0h	equ	0xFEA
  8115                           fsr0l	equ	0xFE9
  8116                           wreg	equ	0xFE8
  8117                           indf1	equ	0xFE7
  8118                           postinc1	equ	0xFE6
  8119                           postdec1	equ	0xFE5
  8120                           preinc1	equ	0xFE4
  8121                           plusw1	equ	0xFE3
  8122                           fsr1h	equ	0xFE2
  8123                           fsr1l	equ	0xFE1
  8124                           bsr	equ	0xFE0
  8125                           indf2	equ	0xFDF
  8126                           postinc2	equ	0xFDE
  8127                           postdec2	equ	0xFDD
  8128                           preinc2	equ	0xFDC
  8129                           plusw2	equ	0xFDB
  8130                           fsr2h	equ	0xFDA
  8131                           fsr2l	equ	0xFD9
  8132                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        13
    BSS         692
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     28      75
    BANK0           160     17     131
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    FRAME_AnalogValue@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_MapPosition@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    NVMWrite@source	PTR unsigned char  size(2) Largest target is 2
		 -> Init_Data(COMRAM[2]), NeightAdress8(COMRAM[2]), NeightAdress7(COMRAM[2]), NeightAdress6(COMRAM[2]), 
		 -> NeightAdress5(COMRAM[2]), NeightAdress4(COMRAM[2]), NeightAdress3(COMRAM[2]), NeightAdress2(COMRAM[2]), 
		 -> NeightAdress1(COMRAM[2]), 

    NVMRead@dest	PTR unsigned char  size(2) Largest target is 2
		 -> Init_Data(COMRAM[2]), NeightAdress8(COMRAM[2]), NeightAdress7(COMRAM[2]), NeightAdress6(COMRAM[2]), 
		 -> NeightAdress5(COMRAM[2]), NeightAdress4(COMRAM[2]), NeightAdress3(COMRAM[2]), NeightAdress2(COMRAM[2]), 
		 -> NeightAdress1(COMRAM[2]), 

    NVMalloc@location	PTR unsigned short  size(2) Largest target is 2
		 -> neighborsAdress(COMRAM[2]), ustawieniaKarty(COMRAM[2]), 

    FRAME_HandleCanFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_AdressOfNeighbors@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_PrzypisanieDokarty@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_SoftwareVersion@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_Plot@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_DeviceReset@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_DataUpdateAndChangeOption@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    Dane	PTR struct DaneStruct size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    FRAME_AxisStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_AveragingTimes@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_ExcitationMultiplier@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_ExcitationValue@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_AccelerometerStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_SensorExcitationStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    CAN_GenID@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    CAN_TakeFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    CAN_SendFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    CAN_MoveBuffIntoFrame@Buf	PTR unsigned char  size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), RXB0D0(SFR_3[1]), 

    CAN_MoveBuffIntoFrame@Ram	PTR unsigned char  size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), RXB0D0(SFR_3[1]), 


Critical Paths under _main in COMRAM

    _TRM_DataTransmition->_FRAME_HandleCanFrame
    _FRAME_HandleCanFrame->_FRAME_DeviceReset
    _LED_Error->_LED_Control
    _FRAME_SensorExcitationStatus->_IsInNeighbors
    _FRAME_SensorExcitationStatus->_MOC_Aktualna_Temperatura
    _FRAME_SensorExcitationStatus->_MOC_Frame_Counter
    _FRAME_SensorExcitationStatus->_MOC_NOTWORK
    _FRAME_SensorExcitationStatus->_MOC_Wynikowa_wartosc_roznicowa
    _FRAME_Plot->___lwdiv
    _WriteDataToEEPROM->_NVMWrite
    _NVMWrite->_WritetoEEPROM
    _FRAME_AccelerometerStatus->_MOCK_Klikniecie_Spadek
    _FRAME_AccelerometerStatus->_MOCK_PrzyspieszenieX
    _FRAME_AccelerometerStatus->_MOCK_PrzyspieszenieY
    _FRAME_AccelerometerStatus->_MOCK_PrzyspieszenieZ
    _CAN_SendFrame->_CAN_MoveBuffIntoFrame
    _CAN_TakeFrame->___awdiv
    _LED_Update->_LED_Light_Pos
    _LED_Light_Pos->___lwdiv
    _INI_All->_NVMInit
    _ReadDataToEEPROM->_NVMRead
    _NVMRead->_ReadfromEEPROM
    _NVMInit->_NVMalloc
    _INI_LED_Start->_LED_Control

Critical Paths under _ISR_low in COMRAM

    _ISR_low->_TMR1_Timer_reset
    _ISR_low->i1_TMR1_Update_flag_Set

Critical Paths under _ISR_high in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_TRM_DataTransmition

Critical Paths under _ISR_low in BANK0

    None.

Critical Paths under _ISR_high in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_low in BANK1

    None.

Critical Paths under _ISR_high in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_low in BANK2

    None.

Critical Paths under _ISR_high in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_low in BANK3

    None.

Critical Paths under _ISR_high in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_low in BANK4

    None.

Critical Paths under _ISR_high in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_low in BANK5

    None.

Critical Paths under _ISR_high in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_low in BANK6

    None.

Critical Paths under _ISR_high in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_low in BANK7

    None.

Critical Paths under _ISR_high in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_low in BANK8

    None.

Critical Paths under _ISR_high in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_low in BANK9

    None.

Critical Paths under _ISR_high in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_low in BANK10

    None.

Critical Paths under _ISR_high in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_low in BANK11

    None.

Critical Paths under _ISR_high in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_low in BANK12

    None.

Critical Paths under _ISR_high in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   31066
                                             26 COMRAM     2     2      0
                         _FLASH_Read
                            _INI_All
                         _LED_Update
               _TMR1_Update_flag_Get
               _TMR1_Update_flag_Set
                _TRM_DataTransmition
 ---------------------------------------------------------------------------------
 (1) _TRM_DataTransmition                                 18    18      0   18698
                                              0 BANK0     17    17      0
                      _CAN_TakeFrame
               _FRAME_HandleCanFrame
 ---------------------------------------------------------------------------------
 (2) _FRAME_HandleCanFrame                                 9     7      2   15647
                                             17 COMRAM     9     7      2
                          _CAN_GenID
                      _CAN_SendFrame
          _FRAME_AccelerometerStatus
            _FRAME_AdressOfNeighbors
                  _FRAME_AnalogValue
               _FRAME_AveragingTimes
                   _FRAME_AxisStatus
                  _FRAME_DeviceReset
         _FRAME_ExcitationMultiplier
              _FRAME_ExcitationValue
                  _FRAME_MapPosition
                         _FRAME_Plot
           _FRAME_PrzypisanieDokarty
       _FRAME_SensorExcitationStatus
              _FRAME_SoftwareVersion
                          _LED_Error
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) _LED_Error                                            0     0      0    1756
                        _LED_Control
 ---------------------------------------------------------------------------------
 (3) _FRAME_SoftwareVersion                                3     1      2     305
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_SensorExcitationStatus                         6     4      2     892
                                              7 COMRAM     6     4      2
                      _IsInNeighbors
                           _LOCK_Get
                           _LOCK_Set
           _MOC_Aktualna_Temperatura
                  _MOC_Frame_Counter
                        _MOC_NOTWORK
     _MOC_Wynikowa_wartosc_roznicowa
 ---------------------------------------------------------------------------------
 (4) _MOC_Wynikowa_wartosc_roznicowa                       2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_NOTWORK                                          2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_Frame_Counter                                    2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_Aktualna_Temperatura                             2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _LOCK_Set                                             1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _LOCK_Get                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _IsInNeighbors                                        4     2      2     367
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_PrzypisanieDokarty                             6     4      2     367
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_Plot                                           3     1      2     929
                                             12 COMRAM     3     1      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) _FRAME_MapPosition                                    2     0      2     119
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_ExcitationValue                                3     1      2     212
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_ExcitationMultiplier                           5     3      2     280
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_DeviceReset                                    3     1      2    4535
                                             14 COMRAM     3     1      2
    _FRAME_DataUpdateAndChangeOption
                  _WriteDataToEEPROM
 ---------------------------------------------------------------------------------
 (4) _WriteDataToEEPROM                                    0     0      0    3646
                           _NVMWrite
 ---------------------------------------------------------------------------------
 (5) _NVMWrite                                             6     0      6    3646
                                              8 COMRAM     6     0      6
                      _WritetoEEPROM
 ---------------------------------------------------------------------------------
 (6) _WritetoEEPROM                                        3     0      3     331
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (4) _FRAME_DataUpdateAndChangeOption                      3     1      2     243
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AxisStatus                                     5     3      2     212
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AveragingTimes                                 3     1      2     212
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AnalogValue                                    6     2      4     238
                                              5 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _FRAME_AdressOfNeighbors                             12     8      4    1626
                                              5 COMRAM    10     6      4
                 _CAN_SetupFilter_Ne
 ---------------------------------------------------------------------------------
 (3) _FRAME_AccelerometerStatus                            3     1      2     305
                                              7 COMRAM     3     1      2
             _MOCK_Klikniecie_Spadek
               _MOCK_PrzyspieszenieX
               _MOCK_PrzyspieszenieY
               _MOCK_PrzyspieszenieZ
 ---------------------------------------------------------------------------------
 (4) _MOCK_PrzyspieszenieZ                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOCK_PrzyspieszenieY                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOCK_PrzyspieszenieX                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOCK_Klikniecie_Spadek                               2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _CAN_SendFrame                                        5     3      2    1128
                                             10 COMRAM     5     3      2
              _CAN_MoveBuffIntoFrame
 ---------------------------------------------------------------------------------
 (3) _CAN_GenID                                            5     2      3     455
                                              5 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (2) _CAN_TakeFrame                                        6     4      2    2121
                                             13 COMRAM     6     4      2
              _CAN_MoveBuffIntoFrame
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     811
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _CAN_MoveBuffIntoFrame                                5     1      4     668
                                              5 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) _TMR1_Update_flag_Set                                 2     0      2     202
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR1_Update_flag_Get                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _LED_Update                                           0     0      0    6660
                        _LED_Control
                           _LED_Left
                      _LED_Light_Pos
                          _LED_Right
 ---------------------------------------------------------------------------------
 (2) _LED_Light_Pos                                       11     7      4    4176
                                             12 COMRAM    11     7      4
                        _LED_Control
                           _LED_Left
                          _LED_Right
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     717
                                              5 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _LED_Right                                            6     4      2     364
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _LED_Left                                             4     2      2     364
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _INI_All                                              0     0      0    5241
                          _CAN_Setup
                _INI_GlobalInterrupt
                      _INI_LED_Start
                         _INI_OUTPUT
                          _INI_Timer
                            _NVMInit
                   _ReadDataToEEPROM
 ---------------------------------------------------------------------------------
 (2) _ReadDataToEEPROM                                     0     0      0    2997
                            _NVMRead
 ---------------------------------------------------------------------------------
 (3) _NVMRead                                              6     0      6    2997
                                              7 COMRAM     6     0      6
                     _ReadfromEEPROM
 ---------------------------------------------------------------------------------
 (4) _ReadfromEEPROM                                       2     0      2     147
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _NVMInit                                              3     3      0     488
                                             11 COMRAM     3     3      0
                           _NVMalloc
 ---------------------------------------------------------------------------------
 (3) _NVMalloc                                             6     2      4     478
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _INI_Timer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INI_OUTPUT                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INI_LED_Start                                        0     0      0    1756
                        _LED_Control
 ---------------------------------------------------------------------------------
 (4) _LED_Control                                          5     3      2    1756
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _INI_GlobalInterrupt                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CAN_Setup                                            1     1      0       0
                                              5 COMRAM     1     1      0
                     _CAN_SetupClock
                      _CAN_SetupMask
 ---------------------------------------------------------------------------------
 (3) _CAN_SetupMask                                        0     0      0       0
                 _CAN_SetupFilter_Ne
 ---------------------------------------------------------------------------------
 (4) _CAN_SetupFilter_Ne                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CAN_SetupClock                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _FLASH_Read                                           4     0      4     228
                                              5 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR_low                                              3     3      0      76
                                              2 COMRAM     3     3      0
                   _TMR1_Timer_reset
             i1_TMR1_Update_flag_Set
 ---------------------------------------------------------------------------------
 (8) i1_TMR1_Update_flag_Set                               2     0      2      48
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (8) _TMR1_Timer_reset                                     2     2      0      28
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_high                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FLASH_Read
   _INI_All
     _CAN_Setup
       _CAN_SetupClock
       _CAN_SetupMask
         _CAN_SetupFilter_Ne
     _INI_GlobalInterrupt
     _INI_LED_Start
       _LED_Control
     _INI_OUTPUT
     _INI_Timer
     _NVMInit
       _NVMalloc
     _ReadDataToEEPROM
       _NVMRead
         _ReadfromEEPROM
   _LED_Update
     _LED_Control
     _LED_Left
     _LED_Light_Pos
       _LED_Control
       _LED_Left
       _LED_Right
       ___lwdiv
     _LED_Right
   _TMR1_Update_flag_Get
   _TMR1_Update_flag_Set
   _TRM_DataTransmition
     _CAN_TakeFrame
       _CAN_MoveBuffIntoFrame
       ___awdiv
     _FRAME_HandleCanFrame
       _CAN_GenID
       _CAN_SendFrame
         _CAN_MoveBuffIntoFrame
       _FRAME_AccelerometerStatus
         _MOCK_Klikniecie_Spadek
         _MOCK_PrzyspieszenieX
         _MOCK_PrzyspieszenieY
         _MOCK_PrzyspieszenieZ
       _FRAME_AdressOfNeighbors
         _CAN_SetupFilter_Ne
       _FRAME_AnalogValue
       _FRAME_AveragingTimes
       _FRAME_AxisStatus
       _FRAME_DeviceReset
         _FRAME_DataUpdateAndChangeOption
         _WriteDataToEEPROM
           _NVMWrite
             _WritetoEEPROM
       _FRAME_ExcitationMultiplier
       _FRAME_ExcitationValue
       _FRAME_MapPosition
       _FRAME_Plot
         ___lwdiv
       _FRAME_PrzypisanieDokarty
       _FRAME_SensorExcitationStatus
         _IsInNeighbors
         _LOCK_Get
         _LOCK_Set
         _MOC_Aktualna_Temperatura
         _MOC_Frame_Counter
         _MOC_NOTWORK
         _MOC_Wynikowa_wartosc_roznicowa
       _FRAME_SoftwareVersion
       _LED_Error
         _LED_Control
       ___awdiv

 _ISR_low (ROOT)
   _TMR1_Timer_reset
   i1_TMR1_Update_flag_Set

 _ISR_high (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0     220      31       16.4%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     11      83       5       81.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1C      4B       1       79.8%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      CE      20        0.0%
DATA                 0      0     2EE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Jul 31 08:52:32 2019

               __end_of_FRAME_DeviceReset 0D4A                     ?_FRAME_AveragingTimes 0028  
                            ___awdiv@sign 002D                                        bsr 000FE0  
                             __CFG_BORV$3 000000                         ?_FRAME_AxisStatus 0028  
                       _FRAME_MapPosition 1BD0                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            NVMRead@count 002E                              __CFG_CP3$OFF 000000  
                       WritetoEEPROM@Data 002A                        __size_of_CAN_GenID 0078  
                                     l300 0348                                       l301 034E  
                                     l302 0354                                       l303 035A  
                                     l304 0360                                       l305 0366  
                                     l420 0B58                                       l710 07AA  
                                     l711 07A2                                       l392 12EE  
                                     l288 095A                               ?_LED_Update 0023  
                                     l297 033C                                       l289 0958  
                                     l298 03AC                                       l299 0342  
                                     l655 093C                                       l942 19B6  
                                     l934 19AE                                       l951 18AA  
                            __CFG_CPB$OFF 000000                        ??_FRAME_AxisStatus 002A  
                            __CFG_CPD$OFF 000000                        ?_FRAME_MapPosition 0028  
                      __size_of_CAN_Setup 005C                              ?_LED_Control 0028  
                                     wreg 000FE8                     __end_of_CAN_TakeFrame 05AA  
                             ?_INI_OUTPUT 0023                    __size_of_INI_LED_Start 0034  
                           NVMInit@result 0030                  ??_MOCK_Klikniecie_Spadek 002A  
                   __end_of_CAN_SendFrame 0AB0                              __CFG_LVP$OFF 000000  
                         _neighborsAdress 0011                 TRM_DataTransmition@weWyU8 000D  
            __size_of_INI_GlobalInterrupt 000E                       ??_FRAME_MapPosition 002A  
                            __CFG_WDT$OFF 000000                                      l4103 0B42  
                                    l4121 0B78                                      l1465 1706  
                                    l4041 1A20                                      l4201 0F84  
                                    l4115 0B68                           __end_of_INI_All 1AB4  
                                    l4133 0B98                                      l4109 0B52  
                                    l4061 0AD2                                      l4213 0FB4  
                                    l4151 0BC8                                      l4127 0B88  
                                    l4055 0AC2                                      l3407 19DE  
                                    l3271 17DE                                      l4231 0FFC  
                                    l4207 0F9C                                      l4145 0BB8  
                                    l4073 0AF2                                      l4225 0FE4  
                                    l4163 0BE8                                      l4139 0BA8  
                                    l4091 0B22                                      l4067 0AE2  
                                    l4243 102C                                      l4219 0FCC  
                                    l4157 0BD8                                      l4085 0B12  
                                    l3453 1964                                      l3701 090E  
                                    l4237 1014                                      l4079 0B02  
                                    l3287 1824                                      l4407 0E5A  
                                    l4169 0BFA                                      l4097 0B32  
                                    l4273 16D4                                      l4601 0484  
                                    l4513 0266                                      l4275 16DC  
                                    l4611 04AA                                      l4603 048A  
                                    l4363 09F4                                      l4515 026C  
                                    l4507 011C                                      l4285 16FC  
                                    l4541 125C                                      l4533 123E  
                                    l4613 04B2                                      l4605 0492  
                                    l4509 019E                                      l4461 0CC4  
                                    l3671 0828                                      l4551 127C  
                                    l4527 122E                                      l4631 0536  
                                    l4607 049A                                      l4623 04FE  
                                    l4367 0AA8                                      l4471 0D04  
                                    l4439 173C                                      l3665 07FA  
                                    l4641 055E                                      l4633 053E  
                                    l4609 04A2                                      l4617 04BA  
                                    l4625 0518                                      l4393 0DEC  
                                    l4721 0616                                      l4713 05DE  
                                    l3683 0884                                      l4539 1254  
                                    l4555 1286                                      l4635 0546  
                                    l4627 052A                                      l4619 04FA  
                                    l4475 0D26                                      l4731 065C  
                                    l4723 0624                                      l4715 05EC  
                                    l4565 155A                                      l3677 0856  
                                    l4637 054E                                      l4629 0530  
                                    l4645 0566                                      l4485 16A0  
                                    l4733 066A                                      l4725 0632  
                                    l4717 05FA                                      l4813 13DC  
                                    l3695 08E0                                      l4559 1294  
                                    l4639 0556                                      l4647 05A6  
                                    l4583 036C                                      l4479 0D38  
                                    l4495 113C                                      l4399 0E32  
                                    l4735 0684                                      l4727 0640  
                                    l4719 0608                                      l4743 06BE  
                                    l4823 13FE                                      l4577 15A4  
                                    l3689 08B2                                      l4737 0692  
                                    l4729 064E                                      l4745 0728  
                                    l4739 06A8                                      l4685 1098  
                                    l4693 10CE                                      _BIE0 000DFA  
                                    l4687 10A2                                      l4679 106C  
                                    l4599 047E                                      l4793 178A  
                                    l4779 12CA                                      l3999 18D4  
                       _MOC_Frame_Counter 1B32                                      _LATA 000F89  
                                    _LATB 000F8A                                      _LATC 000F8B  
                                    _LATD 000F8C                                      _LATE 000F8D  
                                    u2175 19AA                                      u2176 19AC  
                                    u2530 16E0                                      _IPR3 000FA5  
                                    _IPEN 007E87                                      _PIE3 000FA3  
                                    u2730 0C52                                      u2740 0C6A  
                                    u2736 0C54                                      u2746 0C6C  
                                    u2690 174C                                      u2595 09CA  
                                    _PEIE 007F96                                      _LOCK 0010  
                                    u2880 1260                                      u2945 0416  
                                    u2990 10D6                                      _PIR3 000FA4  
                                    _RCON 000FD0               ??_FRAME_AccelerometerStatus 002C  
                                    _Dane 00D0                           __end_of_ISR_low 005E  
                        LED_Control@diode 0028                      FRAME_AnalogValue@set 002A  
                      ?_MOC_Frame_Counter 0028                                      _main 1390  
                        LED_Control@color 002C                           __end_of_NVMInit 1872  
                         __end_of_NVMRead 19E8                                      fsr1h 000FE2  
                                    fsr2h 000FDA                                      indf1 000FE7  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    fsr2l 000FD9                                      btemp 004C  
                          _CAN_SetupClock 1A46                                      prodh 000FF4  
                                    prodl 000FF3                     __end_of_CAN_SetupMask 14F0  
           __size_of_TMR1_Update_flag_Get 000A                                      start 005E  
           __size_of_TMR1_Update_flag_Set 000A                        __size_of_LED_Error 001E  
                           __CFG_IESO$OFF 000000                        __size_of_LED_Right 004C  
           __size_of_FRAME_HandleCanFrame 0206                             _LED_Light_Pos 1036  
                           __CFG_MCLRE$ON 000000                              ___param_bank 000000  
                     ??_MOC_Frame_Counter 002A                ??_MOC_Aktualna_Temperatura 002A  
       FRAME_HandleCanFrame@identyfikator 003C                       __size_of_FLASH_Read 0016  
                      __size_of_INI_Timer 0018                 __end_of_FRAME_MapPosition 1BD2  
                           _NeightAdress1 0021                             _NeightAdress2 004A  
                           _NeightAdress3 001F                             _NeightAdress4 001D  
                           _NeightAdress5 001B                             _NeightAdress6 0019  
                           _NeightAdress7 0017                             _NeightAdress8 0015  
                        __end_of_LED_Left 1838             __size_of_MOCK_PrzyspieszenieX 000A  
           __size_of_MOCK_PrzyspieszenieY 000A             __size_of_MOCK_PrzyspieszenieZ 000A  
                   ReadfromEEPROM@Address 0028                                     _B0CON 000E20  
                                   _B1CON 000E30                                     _B2CON 000E40  
                                   _B3CON 000E50                                     _B4CON 000E60  
                                   _B5CON 000E70                          __end_of_LOCK_Get 1BD0  
                                   ?_main 0023                          __end_of_LOCK_Set 1BC6  
                         __end_of___awdiv 129E                                     _EEADR 000FA9  
                                   _BSEL0 000DF8                           ___awdiv@divisor 002A  
                                   _T1CON 000FCD                                     _IRCF0 007E9C  
                                   _IRCF1 007E9D         FRAME_ExcitationMultiplier@message 0028  
                                   _IRCF2 007E9E                           __end_of___lwdiv 1710  
                     __size_of_FRAME_Plot 0058                                     i1l797 004E  
                         ___awdiv@counter 002C                                     _MSEL0 000DF0  
                                   _MSEL1 000DF1                                     _MSEL2 000DF2  
                                   _MSEL3 000DF3                                     _TMR1H 000FCF  
                                   _TMR1L 000FCE                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
                                   _TRISD 000F95                                     _TRISE 000F96  
                           __CFG_PWRT$OFF 000000                                     _Flagi 00C6  
                  ?_CAN_MoveBuffIntoFrame 0028                             __CFG_WRT0$OFF 000000  
              __size_of_FRAME_AnalogValue 0002                             __CFG_WRT1$OFF 000000  
                           __CFG_WRT2$OFF 000000                             __CFG_WRT3$OFF 000000  
                          __CFG_EBTR0$OFF 000000                            __CFG_FCMEN$OFF 000000  
                          __CFG_EBTR1$OFF 000000                            __CFG_EBTR2$OFF 000000  
                          __CFG_EBTR3$OFF 000000                          __end_of_ISR_high 1BCC  
                           __CFG_WRTB$OFF 000000                             __CFG_WRTC$OFF 000000  
                           __CFG_WRTD$OFF 000000                 __end_of_MOC_Frame_Counter 1B40  
                          __CFG_EBTRB$OFF 000000                   i1TMR1_Update_flag_Set@a 0023  
                            ?_MOC_NOTWORK 0028                 __size_of_ReadDataToEEPROM 018E  
                        __end_of_NVMWrite 18DE                          __end_of_NVMalloc 1980  
                                   tablat 000FF5                    __end_of_CAN_SetupClock 1A6E  
                                   ttemp5 004D                                     ttemp6 0050  
                                   ttemp7 0054                                     status 000FD8  
                                   wtemp8 004D                         __end_of_CAN_GenID 1390  
                          __CFG_PBADEN$ON 000000                       __size_of_LED_Update 007A  
                          ?_LED_Light_Pos 002F                          _TMR1_Timer_reset 1A6E  
                       __end_of_CAN_Setup 15B2                             _INI_LED_Start 19E8  
                   _FRAME_ExcitationValue 1872          FRAME_AccelerometerStatus@message 002A  
                         __initialization 15B2                       __size_of_INI_OUTPUT 0020  
                        CAN_GenID@frameID 002A                              __end_of_main 1406  
                  ??_FRAME_AveragingTimes 002A                __size_of_FRAME_DeviceReset 0148  
                ?_FRAME_AdressOfNeighbors 0028                    __size_of_WritetoEEPROM 0034  
                        CAN_GenID@message 0028                 _FRAME_AccelerometerStatus 1406  
                                  ??_main 003D                    CAN_MoveBuffIntoFrame@i 002C  
                           __activetblptr 000002                              NVMWrite@addr 002D  
                        _TMR1_Update_flag 0009                   WritetoEEPROM@GIE_Status 000B  
                   __end_of_IsInNeighbors 1036                           _wartosciSasiada 00E3  
                               ??_INI_All 0031                         __end_of_LED_Error 1AF2  
                       __end_of_LED_Right 17F6                      WritetoEEPROM@Address 0028  
         __size_of_MOCK_Klikniecie_Spadek 000A                                 ??_ISR_low 0025  
                               ??_NVMInit 002E                                 ??_NVMRead 0030  
                                  _CANCON 000F6F                                    _EEADRH 000FAA  
                                  _EEDATA 000FA8                                    _EECON2 000FA7  
                        ___awdiv@dividend 0028               FRAME_ExcitationMultiplier@i 002B  
                                  _CIOCON 000F73                           __CFG_BBSIZ$1024 000000  
                       __end_of_INI_Timer 1B0A                                    i1l3885 004C  
                                  _TABLAT 000FF5                           ?_CAN_SetupClock 0023  
                                  _TBLPTR 000FF6                                    _RXB0D0 000F66  
                                  _TMR1IE 007CE8                                    _TMR1IF 007CF0  
                                  _TMR1IP 007CF8                                    _TMR1ON 007E68  
            ??_FRAME_ExcitationMultiplier 002A                            ?_INI_LED_Start 0023  
                          __CFG_XINST$OFF 000000                                 ??___awdiv 002C  
                          __CFG_STVREN$ON 000000                          LED_Light_Pos@pos 002F  
              __size_of_FRAME_MapPosition 0002                                 ??___lwdiv 002C  
                                  clear_0 15DA                                    clear_1 15EC  
                                  clear_2 15F8                          ___awdiv@quotient 002E  
                            NVMalloc@size 0028                ??_FRAME_PrzypisanieDokarty 002A  
                ??i1_TMR1_Update_flag_Set 0025                           __CFG_BOREN$BOHW 000000  
                 __size_of_ReadfromEEPROM 0012                              __pdataCOMRAM 003F  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8                              ??_FLASH_Read 002C  
     __size_of_FRAME_ExcitationMultiplier 004E                __size_of_MOC_Frame_Counter 000E  
                    __size_of_LED_Control 0152                             _WritetoEEPROM 1980  
                FRAME_MapPosition@message 0028                            FLASH_Read@addr 0028  
                   TMR1_Update_flag_Set@a 0028                                __accesstop 0060  
                 __end_of__initialization 15FE                              ??_FRAME_Plot 0031  
                     ISR_low@ramkaStanuU8 000E                                 ?_LED_Left 0028  
                         ??_LED_Light_Pos 0033                             ___rparam_used 000001  
                  ?_FRAME_ExcitationValue 0028                                 ?_LOCK_Get 0023  
                               ?_LOCK_Set 0023           __end_of_FRAME_AdressOfNeighbors 032E  
                  _MOCK_Klikniecie_Spadek 1B8E                            __pcstackCOMRAM 0023  
                               LED_Left@a 0028                                 LED_Left@b 002A  
                     _INI_GlobalInterrupt 1B40                                 ?_ISR_high 0023  
                      __end_of_FLASH_Read 1B20                                 ?_NVMWrite 002B  
                               ?_NVMalloc 0028                              ??_LED_Update 003A  
             __end_of_TRM_DataTransmition 17AA                     _FRAME_SoftwareVersion 14F0  
                      __end_of_FRAME_Plot 16BE                              ??_INI_OUTPUT 0028  
                               LOCK_Set@k 0028                   FRAME_AxisStatus@message 0028  
             IsInNeighbors@message_adress 0028                            ?_WritetoEEPROM 0028  
                    ?_INI_GlobalInterrupt 0023                          _ReadDataToEEPROM 07B0  
               __size_of_FRAME_AxisStatus 0036                                __pbssBANK0 0060  
             __size_of_CAN_SetupFilter_Ne 0096                             NVMWrite@count 002F  
                    __size_of_MOC_NOTWORK 0008                           ??_INI_LED_Start 002D  
                              ??_LED_Left 002A                                ??_LOCK_Get 0028  
                              ??_LOCK_Set 0028                        __end_of_LED_Update 1318  
                      __end_of_INI_OUTPUT 1AD4                                ??_ISR_high 0023  
                     TMR1_Timer_reset@t1H 0024                       TMR1_Timer_reset@t1L 0023  
                                 _ECANCON 000F77                                   _CANSTAT 000F6E  
                              ??_NVMWrite 0031                   ??_CAN_MoveBuffIntoFrame 002C  
                              ??_NVMalloc 002C              __end_of_TMR1_Update_flag_Get 1BAC  
            __end_of_TMR1_Update_flag_Set 1BA2           __size_ofi1_TMR1_Update_flag_Set 000A  
            __end_of_FRAME_HandleCanFrame 07B0                                   _INI_All 1A92  
                __end_of_TMR1_Timer_reset 1A92                                   _RXB0DLC 000F65  
                                 _RXB0CON 000F60                                   _RXB1CON 000F50  
                   ??_INI_GlobalInterrupt 0028                                   _TXB0CON 000F40  
                                 _ISR_low 0018                                   _RXFCON0 000DD4  
                                 _RXFCON1 000DD5                                   _NVMInit 1838  
                                 _NVMRead 19B4                                   _DaneCan 0001  
            __end_of_MOCK_PrzyspieszenieX 1B8E              __end_of_MOCK_PrzyspieszenieY 1B84  
            __end_of_MOCK_PrzyspieszenieZ 1B7A        __end_of_FRAME_ExcitationMultiplier 175E  
              _FRAME_ExcitationMultiplier 1710               FRAME_HandleCanFrame@message 0034  
                                 __Hparam 0000          ??_MOC_Wynikowa_wartosc_roznicowa 002A  
         ?_MOC_Wynikowa_wartosc_roznicowa 0028                                   __Lparam 0000  
                  __size_of_CAN_TakeFrame 027C                                 _CAN_GenID 1318  
                                 ___awdiv 121A                                 _CAN_Setup 1556  
                  __size_of_CAN_SendFrame 0172                                   ___lwdiv 16BE  
                       LED_Light_Pos@pos2 0036                                   __pcinit 15B2  
                                 __ramtop 0D00    FRAME_DataUpdateAndChangeOption@message 0028  
                                 __ptext0 1390                                   __ptext1 175E  
                                 __ptext2 05AA                                   __ptext3 1AD4  
                                 __ptext4 14F0                                   __ptext5 0D4A  
                                 __ptext6 1B5C                                   __ptext7 1BB6  
                                 __ptext8 1B32                                   __ptext9 1B66  
                  ?_FRAME_SoftwareVersion 0028                            _ReadfromEEPROM 1B20  
                         ??_WritetoEEPROM 002B                    __size_of_CAN_SetupMask 0074  
       __size_of_MOC_Aktualna_Temperatura 000A            FRAME_AdressOfNeighbors@nrRamki 002A  
               ?_MOC_Aktualna_Temperatura 0028          __size_of_FRAME_AdressOfNeighbors 02CC  
                        ??_CAN_SetupClock 0028            FRAME_AdressOfNeighbors@message 0028  
                                 main@adr 003D                                 _LED_Error 1AD4  
                          __pintcode_body 1BC6                                 _LED_Right 17AA  
                    end_of_initialization 15FE      FRAME_SensorExcitationStatus@statwect 0007  
                           __Lmediumconst 0000                                   int_func 1BC6  
                               _INI_Timer 1AF2                    i1_TMR1_Update_flag_Set 1BAC  
        TRM_DataTransmition@czujnikWeWyU8 000C                                ?_CAN_GenID 0028  
                                 postdec1 000FE5                                   postdec2 000FDD  
                                 postinc0 000FEE                                   postinc2 000FDE  
                              ?_CAN_Setup 0023             __size_of_FRAME_AveragingTimes 0036  
                  __end_of_ReadfromEEPROM 1B32                      CAN_SendFrame@message 002D  
                        NVMalloc@location 002A                             LED_Update@Red 000F  
                           _CAN_TakeFrame 032E                               NVMRead@addr 002C  
                           _CAN_SendFrame 093E                                ?_LED_Error 0023  
                             NVMRead@dest 002A               FRAME_AdressOfNeighbors@kier 0030  
                              ?_LED_Right 0028                          _FRAME_AxisStatus 18DE  
                 ??_FRAME_ExcitationValue 002A                                ?_INI_Timer 0023  
                 ?_MOCK_Klikniecie_Spadek 0028                           _ramkaCanRxKarty 0060  
                    _TMR1_Update_flag_Get 1BA2                           _ramkaCanTxKarty 00B5  
                    _TMR1_Update_flag_Set 1B98                             _CAN_SetupMask 147C  
                       __size_of_LED_Left 0042                      _FRAME_HandleCanFrame 05AA  
                  __size_of_IsInNeighbors 00CA                         __size_of_LOCK_Get 0004  
                       __size_of_LOCK_Set 0008                         _WriteDataToEEPROM 0E6E  
                __end_of_ReadDataToEEPROM 093E                            CAN_TakeFrame@k 0035  
                      ?_WriteDataToEEPROM 0023                           ?_ReadfromEEPROM 0028  
                           __pidataCOMRAM 1B4E                         __size_of_ISR_high 1BC4  
                    _MOCK_PrzyspieszenieX 1B84                      _MOCK_PrzyspieszenieY 1B7A  
                    _MOCK_PrzyspieszenieZ 1B70                                LED_Right@a 0028  
                              LED_Right@b 002C                     MOC_Frame_Counter@zeta 003F  
                       __size_of_NVMWrite 0036                             ??_LED_Control 002A  
                     ??_WriteDataToEEPROM 0031                         __size_of_NVMalloc 0036  
                     start_initialization 15B2                            ?_CAN_TakeFrame 0030  
                               _Init_Data 0048                            ?_CAN_SendFrame 002D  
         FRAME_SensorExcitationStatus@tru 002E            __end_of_MOCK_Klikniecie_Spadek 1B98  
                        __CFG_OSC$IRCIO67 000000         __size_of_FRAME_PrzypisanieDokarty 009E  
               ?_FRAME_PrzypisanieDokarty 0028                     ?_TMR1_Update_flag_Get 0028  
                   ?_TMR1_Update_flag_Set 0028                            ?_CAN_SetupMask 0023  
                   __end_of_LED_Light_Pos 10E6                     ?_FRAME_HandleCanFrame 0034  
               __end_of_WriteDataToEEPROM 0F6C                               ??_CAN_GenID 002B  
                             ??_CAN_Setup 0028                          __CFG_LPT1OSC$OFF 000000  
                   ?_MOCK_PrzyspieszenieX 0028                     ?_MOCK_PrzyspieszenieY 0028  
                   ?_MOCK_PrzyspieszenieZ 0028                  CAN_MoveBuffIntoFrame@Buf 002A  
    __end_of_FRAME_SensorExcitationStatus 0E6E     __size_of_FRAME_SensorExcitationStatus 0124  
                CAN_MoveBuffIntoFrame@Ram 0028              _FRAME_SensorExcitationStatus 0D4A  
          __size_of_CAN_MoveBuffIntoFrame 002A                               __pbssBIGRAM 00E3  
           __end_of_CAN_MoveBuffIntoFrame 1A46                           _Fulfillment_Lvl 0045  
                             __pbssCOMRAM 0001                                  ?_INI_All 0023  
                 _FRAME_AdressOfNeighbors 0062                             __pcstackBANK0 00D2  
                           _IsInNeighbors 0F6C                         ?_TMR1_Timer_reset 0023  
                         _ustawieniaKarty 0013                               _BRGCON1bits 000F70  
                             _BRGCON2bits 000F71                               _BRGCON3bits 000F72  
                                ?_ISR_low 0023   __end_of_FRAME_DataUpdateAndChangeOption 1666  
__size_of_FRAME_DataUpdateAndChangeOption 005A         ??_FRAME_DataUpdateAndChangeOption 002A  
        ?_FRAME_DataUpdateAndChangeOption 0028           _FRAME_DataUpdateAndChangeOption 160C  
                           ??_MOC_NOTWORK 002A                __end_of_CAN_SetupFilter_Ne 121A  
                                ?_NVMInit 0023                                  ?_NVMRead 002A  
                      ??_TMR1_Timer_reset 0023                               ??_LED_Error 002D  
                          NVMWrite@source 002B                               ??_LED_Right 002A  
            __size_of_TRM_DataTransmition 004C                       __end_of_LED_Control 0C02  
             ?_FRAME_ExcitationMultiplier 0028                               ??_INI_Timer 0028  
                   __end_of_INI_LED_Start 1A1C                          ___lwdiv@dividend 0028  
                               __pintcode 0008                                  ?___awdiv 0028  
                 ??_FRAME_SoftwareVersion 002A          __end_of_MOC_Aktualna_Temperatura 1B70  
                                ?___lwdiv 0028                         FRAME_Plot@message 002F  
                             __pintcodelo 0018               __end_of_INI_GlobalInterrupt 1B4E  
                         ??_CAN_TakeFrame 0032             ?_FRAME_SensorExcitationStatus 002A  
  __end_of_MOC_Wynikowa_wartosc_roznicowa 1B66   __size_of_MOC_Wynikowa_wartosc_roznicowa 000A  
          _MOC_Wynikowa_wartosc_roznicowa 1B5C                               _COMSTATbits 000F74  
                          ?_IsInNeighbors 0028                           ??_CAN_SendFrame 002F  
                        ___lwdiv@quotient 002D                   ?i1_TMR1_Update_flag_Set 0023  
             FRAME_AveragingTimes@message 0028                    ??_TMR1_Update_flag_Get 002A  
                  ??_TMR1_Update_flag_Set 002A                           ??_CAN_SetupMask 0028  
                                _LED_Left 17F6                    ??_FRAME_HandleCanFrame 0036  
                    CAN_TakeFrame@message 0030                       __end_of_MOC_NOTWORK 1BBE  
                                _LOCK_Get 1BCC                      CAN_TakeFrame@tempCON 0034  
                                _LOCK_Set 1BBE                __size_of_WriteDataToEEPROM 00FE  
                                _RXB0EIDH 000F63                                  _RXB0EIDL 000F64  
                                _RCONbits 000FD0                          __CFG_WDTPS$32768 000000  
                                _RXB0SIDH 000F61                                  _RXB0SIDL 000F62  
                                _RXF0EIDH 000F02                                  _RXF0EIDL 000F03  
                                _RXF1EIDH 000F06                                  _RXF1EIDL 000F07  
                                _RXF2EIDH 000F0A                                  _RXF2EIDL 000F0B  
                                _RXF3EIDH 000F0E                                  _RXF3EIDL 000F0F  
                                _RXF4EIDH 000F12                                  _RXF4EIDL 000F13  
                                _RXF5EIDH 000F16                                  _RXF5EIDL 000F17  
                                _RXF6EIDH 000D62                                  _RXF6EIDL 000D63  
                                _RXF0SIDH 000F00                                  _RXF7EIDH 000D66  
                                _RXF0SIDL 000F01                                  _RXF7EIDL 000D67  
                                _RXF1SIDH 000F04                                  _RXF8EIDH 000D6A  
                                _RXF1SIDL 000F05                                  _RXF8EIDL 000D6B  
                                _RXF2SIDH 000F08                                  _RXF9EIDH 000D72  
                                _RXF2SIDL 000F09                                  _RXF9EIDL 000D73  
                                _RXF3SIDH 000F0C                                  _RXF3SIDL 000F0D  
                                _ISR_high 0008                                  _RXF4SIDH 000F10  
                                _RXF4SIDL 000F11                                  _RXF5SIDH 000F14  
                                _RXF5SIDL 000F15                                  _RXF6SIDH 000D60  
                                _RXF6SIDL 000D61                                  _RXM0EIDH 000F1A  
                                _RXF7SIDH 000D64                                  _RXM0EIDL 000F1B  
                                _RXF7SIDL 000D65                                  _RXM1EIDH 000F1E  
                                _RXF8SIDH 000D68                                  _RXM1EIDL 000F1F  
                                _RXF8SIDL 000D69                                  _RXF9SIDH 000D70  
                  ??_MOCK_PrzyspieszenieX 002A                    ??_MOCK_PrzyspieszenieY 002A  
                                _RXF9SIDL 000D71                    ??_MOCK_PrzyspieszenieZ 002A  
                                _RXFBCON0 000DE0                                  _RXFBCON1 000DE1  
                                _RXFBCON2 000DE2                                  _RXFBCON3 000DE3  
                                _RXFBCON4 000DE4                                  _RXM0SIDH 000F18  
                                _RXM0SIDL 000F19                                  _RXM1SIDH 000F1C  
                                _RXM1SIDL 000F1D                  __end_of_FRAME_AxisStatus 1914  
                                _NVMWrite 18A8                                  _NVMalloc 194A  
               ??_FRAME_AdressOfNeighbors 002C                          _DetectorLedRadar 00CB  
                             _LED_Control 0AB0                          __size_of_INI_All 0022  
            FRAME_ExcitationValue@message 0028                     __end_of_WritetoEEPROM 19B4  
          __end_ofi1_TMR1_Update_flag_Set 1BB6                            _nextEEPosition 0005  
                               copy_data0 15C6                          __size_of_ISR_low 0046  
      __size_of_FRAME_AccelerometerStatus 0076              __end_of_FRAME_AveragingTimes 194A  
                        __size_of_NVMInit 003A                          __size_of_NVMRead 0034  
              ?_FRAME_AccelerometerStatus 002A            __size_of_FRAME_ExcitationValue 0036  
           __end_of_FRAME_ExcitationValue 18A8                                _EECON1bits 000FA6  
                                __Hrparam 0000                              _RXB0SIDLbits 000F62  
                        ??_ReadfromEEPROM 002A                                  __Lrparam 0000  
                       ?_ReadDataToEEPROM 0023                          __size_of___awdiv 0084  
                        __size_of___lwdiv 0052                        ??_ReadDataToEEPROM 0030  
                         ??_IsInNeighbors 002A                  _MOC_Aktualna_Temperatura 1B66  
         FRAME_PrzypisanieDokarty@message 0028                        LED_Light_Pos@flage 0038  
                      LED_Light_Pos@color 0033          __end_of_FRAME_PrzypisanieDokarty 1184  
                            _RXF0SIDLbits 000F01                  FRAME_AnalogValue@message 0028  
                         ___lwdiv@divisor 002A                              _RXF1SIDLbits 000F05  
                              _FLASH_Read 1B0A                           ___lwdiv@counter 002C  
                                __ptext10 1BBE                                  __ptext11 1BCC  
                                __ptext20 18A8                                  __ptext12 0F6C  
                                __ptext21 1980                                  __ptext13 10E6  
                                __ptext30 1B84                                  __ptext22 160C  
                                __ptext14 1666                                  __ptext31 1B8E  
                                __ptext23 18DE                                  __ptext15 1BD0  
                                __ptext40 1036                                  __ptext32 093E  
                                __ptext24 1914                                  __ptext16 1872  
                                __ptext41 16BE                                  __ptext33 1318  
                                __ptext25 1BD2                                  __ptext17 1710  
                                __ptext50 1AF2                                  __ptext42 17AA  
                                __ptext34 032E                                  __ptext26 0062  
                                __ptext18 0C02                                  __ptext51 1AB4  
                                __ptext43 17F6                                  __ptext35 121A  
                                __ptext27 1406                                  __ptext19 0E6E  
                                __ptext52 19E8                                  __ptext44 1A92  
                                __ptext36 1A1C                                  __ptext28 1B70  
          ??_FRAME_SensorExcitationStatus 002C                                  __ptext61 1BAC  
                                __ptext53 0AB0                                  __ptext45 07B0  
                                __ptext37 1B98                                  __ptext29 1B7A  
                                __ptext62 1A6E                                  __ptext54 1B40  
                                __ptext46 19B4                                  __ptext38 1BA2  
                                __ptext55 1556                                  __ptext47 1B20  
                                __ptext39 129E                                  __ptext56 147C  
                                __ptext48 1838                                  __ptext57 1184  
                                __ptext49 194A                                  __ptext58 1A46  
                                __ptext59 1B0A             TRM_DataTransmition@canMessage 00D2  
                            _RXF2SIDLbits 000F09                               _MOC_NOTWORK 1BB6  
                            _RXF3SIDLbits 000F0D                 FRAME_HandleCanFrame@ident 003A  
                            _RXF4SIDLbits 000F11                  FRAME_DeviceReset@message 0031  
       __end_of_FRAME_AccelerometerStatus 147C                              _RXF5SIDLbits 000F15  
                              _FRAME_Plot 1666                             __size_of_main 0076  
                            _RXF6SIDLbits 000D61                              _RXF7SIDLbits 000D65  
                 __size_of_CAN_SetupClock 0028                              _RXF8SIDLbits 000D69  
                            _RXF9SIDLbits 000D71                                  int$flags 004C  
                     _TRM_DataTransmition 175E                               _RXB0DLCbits 000F65  
                              _LED_Update 129E                               _RXB0CONbits 000F60  
                              _INTCONbits 000FF2                                _INI_OUTPUT 1AB4  
                       _FRAME_AnalogValue 1BD2                      ?_TRM_DataTransmition 0023  
            FRAME_SoftwareVersion@message 0028                                  intlevel1 0000  
                                intlevel2 0000                           _czujnikiNaMapie 00CE  
                      ?_FRAME_AnalogValue 0028       FRAME_SensorExcitationStatus@message 002A  
                             _TXB0CONbits 000F40                       ??_FRAME_AnalogValue 002C  
               __size_of_TMR1_Timer_reset 0024                        _CAN_SetupFilter_Ne 1184  
                LED_Light_Pos@fulfillment 0031                      _FRAME_AveragingTimes 1914  
                     ?_CAN_SetupFilter_Ne 0023            __size_of_FRAME_SoftwareVersion 0066  
                       _FRAME_DeviceReset 0C02             __end_of_FRAME_SoftwareVersion 1556  
                      ?_FRAME_DeviceReset 0031                           LED_Update@Green 0047  
               __end_of_FRAME_AnalogValue 1BD4                    __size_of_LED_Light_Pos 00B0  
                             ?_FLASH_Read 0028                     _CAN_MoveBuffIntoFrame 1A1C  
                              _WDTCONbits 000FD1                       ??_FRAME_DeviceReset 0033  
                   ??_TRM_DataTransmition 003D                  _FRAME_PrzypisanieDokarty 10E6  
                  LED_Light_Pos@LED_array 0034                      ??_CAN_SetupFilter_Ne 0028  
                          LED_Update@pos1 0043                            LED_Update@pos2 0041  
                             ?_FRAME_Plot 002F  
