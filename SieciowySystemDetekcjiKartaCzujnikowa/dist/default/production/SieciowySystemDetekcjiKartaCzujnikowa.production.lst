

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Jul 15 18:43:06 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4680
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	text40,global,reloc=2,class=CODE,delta=1
    52                           	psect	text41,global,reloc=2,class=CODE,delta=1
    53                           	psect	text42,global,reloc=2,class=CODE,delta=1
    54                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    55                           	psect	text44,global,reloc=2,class=CODE,delta=1
    56                           	psect	text45,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    59                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    60                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    61                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    62  0000                     
    63                           ; Version 2.05
    64                           ; Generated 20/12/2018 GMT
    65                           ; 
    66                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    67                           ; All rights reserved.
    68                           ; 
    69                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    70                           ; 
    71                           ; Redistribution and use in source and binary forms, with or without modification, are
    72                           ; permitted provided that the following conditions are met:
    73                           ; 
    74                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    75                           ;        conditions and the following disclaimer.
    76                           ; 
    77                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    78                           ;        of conditions and the following disclaimer in the documentation and/or other
    79                           ;        materials provided with the distribution.
    80                           ; 
    81                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    82                           ;        software without specific prior written permission.
    83                           ; 
    84                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    85                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    86                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    87                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    88                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    89                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    90                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    91                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    92                           ; 
    93                           ; 
    94                           ; Code-generator required, PIC18F4680 Definitions
    95                           ; 
    96                           ; SFR Addresses
    97  0000                     
    98                           	psect	idataCOMRAM
    99  000FCC                     __pidataCOMRAM:
   100                           	opt callstack 0
   101                           
   102                           ;initializer for LED_Update@pos2
   103  000FCC  0001               	dw	1
   104                           
   105                           ;initializer for LED_Update@pos1
   106  000FCE  0001               	dw	1
   107                           
   108                           ;initializer for _Fulfillment_Lvl
   109  000FD0  0014               	dw	20
   110                           
   111                           ;initializer for LED_Update@Green
   112  000FD2  01                 	db	1
   113  0000                     _RXFCON0	set	3540
   114  0000                     _MSEL3	set	3571
   115  0000                     _MSEL2	set	3570
   116  0000                     _MSEL1	set	3569
   117  0000                     _MSEL0	set	3568
   118  0000                     _BIE0	set	3578
   119  0000                     _BSEL0	set	3576
   120  0000                     _B5CON	set	3696
   121  0000                     _B4CON	set	3680
   122  0000                     _B3CON	set	3664
   123  0000                     _B2CON	set	3648
   124  0000                     _B1CON	set	3632
   125  0000                     _B0CON	set	3616
   126  0000                     _TXB0CONbits	set	3904
   127  0000                     _RXF2EIDL	set	3851
   128  0000                     _RXF2EIDH	set	3850
   129  0000                     _RXF2SIDLbits	set	3849
   130  0000                     _RXF2SIDL	set	3849
   131  0000                     _RXF2SIDH	set	3848
   132  0000                     _RXF1EIDL	set	3847
   133  0000                     _RXF1EIDH	set	3846
   134  0000                     _RXF1SIDLbits	set	3845
   135  0000                     _RXF1SIDL	set	3845
   136  0000                     _RXF1SIDH	set	3844
   137  0000                     _RXF0EIDL	set	3843
   138  0000                     _RXF0EIDH	set	3842
   139  0000                     _RXF0SIDLbits	set	3841
   140  0000                     _RXF0SIDL	set	3841
   141  0000                     _RXF0SIDH	set	3840
   142  0000                     _RXM1EIDL	set	3871
   143  0000                     _RXM1EIDH	set	3870
   144  0000                     _RXM1SIDL	set	3869
   145  0000                     _RXM1SIDH	set	3868
   146  0000                     _RXM0EIDL	set	3867
   147  0000                     _RXM0EIDH	set	3866
   148  0000                     _RXM0SIDL	set	3865
   149  0000                     _RXM0SIDH	set	3864
   150  0000                     _RXB1CON	set	3920
   151  0000                     _TXB0CON	set	3904
   152  0000                     _INTCONbits	set	4082
   153  0000                     _WDTCONbits	set	4049
   154  0000                     _RCONbits	set	4048
   155  0000                     _TRISC	set	3988
   156  0000                     _LATC	set	3979
   157  0000                     _T1CON	set	4045
   158  0000                     _TMR1H	set	4047
   159  0000                     _TMR1L	set	4046
   160  0000                     _LATE	set	3981
   161  0000                     _LATA	set	3977
   162  0000                     _LATB	set	3978
   163  0000                     _LATD	set	3980
   164  0000                     _TRISD	set	3989
   165  0000                     _TRISE	set	3990
   166  0000                     _TRISB	set	3987
   167  0000                     _TRISA	set	3986
   168  0000                     _RXB0DLCbits	set	3941
   169  0000                     _RXB0DLC	set	3941
   170  0000                     _RXB0SIDH	set	3937
   171  0000                     _RXB0SIDLbits	set	3938
   172  0000                     _RXB0SIDL	set	3938
   173  0000                     _RXB0EIDH	set	3939
   174  0000                     _RXB0EIDL	set	3940
   175  0000                     _COMSTATbits	set	3956
   176  0000                     _RXB0CONbits	set	3936
   177  0000                     _BRGCON3bits	set	3954
   178  0000                     _BRGCON2bits	set	3953
   179  0000                     _BRGCON1bits	set	3952
   180  0000                     _CIOCON	set	3955
   181  0000                     _ECANCON	set	3959
   182  0000                     _PIR3	set	4004
   183  0000                     _IPR3	set	4005
   184  0000                     _PIE3	set	4003
   185  0000                     _RXB0CON	set	3936
   186  0000                     _CANSTAT	set	3950
   187  0000                     _CANCON	set	3951
   188  0000                     _RCON	set	4048
   189  0000                     _RXB0D0	set	3942
   190  0000                     _TMR1IF	set	31984
   191  0000                     _TMR1IP	set	31992
   192  0000                     _PEIE	set	32662
   193  0000                     _IPEN	set	32391
   194  0000                     _TMR1ON	set	32360
   195  0000                     _TMR1IE	set	31976
   196  0000                     _IRCF0	set	32412
   197  0000                     _IRCF1	set	32413
   198  0000                     _IRCF2	set	32414
   199                           
   200                           ; #config settings
   201  0000                     
   202                           	psect	cinit
   203  000C8A                     __pcinit:
   204                           	opt callstack 0
   205  000C8A                     start_initialization:
   206                           	opt callstack 0
   207  000C8A                     __initialization:
   208                           	opt callstack 0
   209                           
   210                           ; Initialize objects allocated to COMRAM (7 bytes)
   211                           ; load TBLPTR registers with __pidataCOMRAM
   212  000C8A  0ECC               	movlw	low __pidataCOMRAM
   213  000C8C  6EF6               	movwf	tblptrl,c
   214  000C8E  0E0F               	movlw	high __pidataCOMRAM
   215  000C90  6EF7               	movwf	tblptrh,c
   216  000C92  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   217  000C94  6EF8               	movwf	tblptru,c
   218  000C96  EE00  F043         	lfsr	0,__pdataCOMRAM
   219  000C9A  EE10 F007          	lfsr	1,7
   220  000C9E                     copy_data0:
   221  000C9E  0009               	tblrd		*+
   222  000CA0  CFF5 FFEE          	movff	tablat,postinc0
   223  000CA4  50E5               	movf	postdec1,w,c
   224  000CA6  50E1               	movf	fsr1l,w,c
   225  000CA8  E1FA               	bnz	copy_data0
   226                           
   227                           ; Clear objects allocated to BANK0 (85 bytes)
   228  000CAA  EE00  F060         	lfsr	0,__pbssBANK0
   229  000CAE  0E55               	movlw	85
   230  000CB0                     clear_0:
   231  000CB0  6AEE               	clrf	postinc0,c
   232  000CB2  06E8               	decf	wreg,f,c
   233  000CB4  E1FD               	bnz	clear_0
   234                           
   235                           ; Clear objects allocated to COMRAM (29 bytes)
   236  000CB6  EE00  F026         	lfsr	0,__pbssCOMRAM
   237  000CBA  0E1D               	movlw	29
   238  000CBC                     clear_1:
   239  000CBC  6AEE               	clrf	postinc0,c
   240  000CBE  06E8               	decf	wreg,f,c
   241  000CC0  E1FD               	bnz	clear_1
   242  000CC2                     end_of_initialization:
   243                           	opt callstack 0
   244  000CC2                     __end_of__initialization:
   245                           	opt callstack 0
   246  000CC2  904A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   247  000CC4  924A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   248  000CC6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   249  000CC8  6EF8               	movwf	tblptru,c
   250  000CCA  0100               	movlb	0
   251  000CCC  EF0F  F007         	goto	_main	;jump to C main() function
   252                           
   253                           	psect	bssCOMRAM
   254  000026                     __pbssCOMRAM:
   255                           	opt callstack 0
   256  000026                     _ramkaCanTxKarty:
   257                           	opt callstack 0
   258  000026                     	ds	17
   259  000037                     _DaneCan:
   260                           	opt callstack 0
   261  000037                     	ds	4
   262  00003B                     _TMR1_Update_flag:
   263                           	opt callstack 0
   264  00003B                     	ds	2
   265  00003D                     _DetectorLedRadar:
   266                           	opt callstack 0
   267  00003D                     	ds	2
   268  00003F                     	ds	1
   269  000040                     	ds	1
   270  000041                     ISR_low@ramkaStanuU8:
   271                           	opt callstack 0
   272  000041                     	ds	1
   273  000042                     	ds	1
   274                           
   275                           	psect	dataCOMRAM
   276  000043                     __pdataCOMRAM:
   277                           	opt callstack 0
   278  000043                     LED_Update@pos2:
   279                           	opt callstack 0
   280  000043                     	ds	2
   281  000045                     LED_Update@pos1:
   282                           	opt callstack 0
   283  000045                     	ds	2
   284  000047                     _Fulfillment_Lvl:
   285                           	opt callstack 0
   286  000047                     	ds	2
   287  000049                     LED_Update@Green:
   288                           	opt callstack 0
   289  000049                     	ds	1
   290                           
   291                           	psect	bssBANK0
   292  000060                     __pbssBANK0:
   293                           	opt callstack 0
   294  000060                     _ramkaCanRxKarty:
   295                           	opt callstack 0
   296  000060                     	ds	85
   297                           
   298                           	psect	cstackCOMRAM
   299  000001                     __pcstackCOMRAM:
   300                           	opt callstack 0
   301  000001                     TMR1_Timer_reset@t1L:
   302                           	opt callstack 0
   303  000001                     i1TMR1_Update_flag_Set@a:
   304                           	opt callstack 0
   305                           
   306                           ; 2 bytes @ 0x0
   307  000001                     	ds	1
   308  000002                     TMR1_Timer_reset@t1H:
   309                           	opt callstack 0
   310                           
   311                           ; 1 bytes @ 0x1
   312  000002                     	ds	1
   313  000003                     ??_ISR_low:
   314  000003                     
   315                           ; 1 bytes @ 0x2
   316  000003                     	ds	3
   317  000006                     ??_CAN_Setup:
   318  000006                     ?_TMR1_Update_flag_Get:
   319                           	opt callstack 0
   320  000006                     ?_LED_Right:
   321                           	opt callstack 0
   322  000006                     ?_LED_Left:
   323                           	opt callstack 0
   324  000006                     ?_MOC_StanWzbudzenia:
   325                           	opt callstack 0
   326  000006                     ?_MOC_Wynikowa_wartosc_roznicowa:
   327                           	opt callstack 0
   328  000006                     ?_MOC_Frame_Counter:
   329                           	opt callstack 0
   330  000006                     ?_MOC_Aktualna_Temperatura:
   331                           	opt callstack 0
   332  000006                     ?_MOC_NOTWORK:
   333                           	opt callstack 0
   334  000006                     ?___awdiv:
   335                           	opt callstack 0
   336  000006                     ?___lwdiv:
   337                           	opt callstack 0
   338  000006                     CAN_MoveBuffIntoFrame@Ram:
   339                           	opt callstack 0
   340  000006                     CAN_GenID@message:
   341                           	opt callstack 0
   342  000006                     LED_Right@a:
   343                           	opt callstack 0
   344  000006                     LED_Left@a:
   345                           	opt callstack 0
   346  000006                     LED_Control@diode:
   347                           	opt callstack 0
   348  000006                     TMR1_Update_flag_Set@a:
   349                           	opt callstack 0
   350  000006                     FRAME_AccelerometerStatus@message:
   351                           	opt callstack 0
   352  000006                     FRAME_ExcitationValue@message:
   353                           	opt callstack 0
   354  000006                     FRAME_ExcitationMultiplier@message:
   355                           	opt callstack 0
   356  000006                     FRAME_AveragingTimes@message:
   357                           	opt callstack 0
   358  000006                     FRAME_AxisStatus@message:
   359                           	opt callstack 0
   360  000006                     FRAME_DeviceReset@message:
   361                           	opt callstack 0
   362  000006                     FRAME_Plot@message:
   363                           	opt callstack 0
   364  000006                     FRAME_MapPosition@message:
   365                           	opt callstack 0
   366  000006                     FRAME_SoftwareVersion@message:
   367                           	opt callstack 0
   368  000006                     FRAME_AnalogValue@message:
   369                           	opt callstack 0
   370  000006                     FRAME_AdressOfNeighbors@message:
   371                           	opt callstack 0
   372  000006                     ___awdiv@dividend:
   373                           	opt callstack 0
   374  000006                     ___lwdiv@dividend:
   375                           	opt callstack 0
   376                           
   377                           ; 2 bytes @ 0x5
   378  000006                     	ds	2
   379  000008                     ??_LED_Right:
   380  000008                     CAN_GenID@frameID:
   381                           	opt callstack 0
   382  000008                     CAN_MoveBuffIntoFrame@Buf:
   383                           	opt callstack 0
   384  000008                     LED_Left@b:
   385                           	opt callstack 0
   386  000008                     FRAME_SensorExcitationStatus@message:
   387                           	opt callstack 0
   388  000008                     FRAME_AnalogValue@set:
   389                           	opt callstack 0
   390  000008                     FRAME_AdressOfNeighbors@nrRamki:
   391                           	opt callstack 0
   392  000008                     ___awdiv@divisor:
   393                           	opt callstack 0
   394  000008                     ___lwdiv@divisor:
   395                           	opt callstack 0
   396                           
   397                           ; 2 bytes @ 0x7
   398  000008                     	ds	1
   399  000009                     ??_CAN_GenID:
   400  000009                     FRAME_ExcitationMultiplier@i:
   401                           	opt callstack 0
   402                           
   403                           ; 2 bytes @ 0x8
   404  000009                     	ds	1
   405  00000A                     CAN_MoveBuffIntoFrame@i:
   406                           	opt callstack 0
   407  00000A                     LED_Control@color:
   408                           	opt callstack 0
   409  00000A                     ___awdiv@counter:
   410                           	opt callstack 0
   411  00000A                     LED_Right@b:
   412                           	opt callstack 0
   413  00000A                     ___lwdiv@quotient:
   414                           	opt callstack 0
   415                           
   416                           ; 2 bytes @ 0x9
   417  00000A                     	ds	1
   418  00000B                     ___awdiv@sign:
   419                           	opt callstack 0
   420  00000B                     CAN_SendFrame@message:
   421                           	opt callstack 0
   422                           
   423                           ; 2 bytes @ 0xA
   424  00000B                     	ds	1
   425  00000C                     ___lwdiv@counter:
   426                           	opt callstack 0
   427  00000C                     ___awdiv@quotient:
   428                           	opt callstack 0
   429                           
   430                           ; 2 bytes @ 0xB
   431  00000C                     	ds	1
   432  00000D                     ??_CAN_SendFrame:
   433  00000D                     LED_Light_Pos@pos:
   434                           	opt callstack 0
   435                           
   436                           ; 2 bytes @ 0xC
   437  00000D                     	ds	1
   438  00000E                     CAN_TakeFrame@message:
   439                           	opt callstack 0
   440                           
   441                           ; 2 bytes @ 0xD
   442  00000E                     	ds	1
   443  00000F                     LED_Light_Pos@fulfillment:
   444                           	opt callstack 0
   445                           
   446                           ; 2 bytes @ 0xE
   447  00000F                     	ds	1
   448  000010                     ??_CAN_TakeFrame:
   449  000010                     FRAME_HandleCanFrame@message:
   450                           	opt callstack 0
   451                           
   452                           ; 2 bytes @ 0xF
   453  000010                     	ds	1
   454  000011                     LED_Light_Pos@color:
   455                           	opt callstack 0
   456                           
   457                           ; 1 bytes @ 0x10
   458  000011                     	ds	1
   459  000012                     ??_FRAME_HandleCanFrame:
   460  000012                     CAN_TakeFrame@tempCON:
   461                           	opt callstack 0
   462  000012                     LED_Light_Pos@LED_array:
   463                           	opt callstack 0
   464                           
   465                           ; 2 bytes @ 0x11
   466  000012                     	ds	1
   467  000013                     CAN_TakeFrame@k:
   468                           	opt callstack 0
   469                           
   470                           ; 1 bytes @ 0x12
   471  000013                     	ds	1
   472  000014                     FRAME_HandleCanFrame@identyfikator:
   473                           	opt callstack 0
   474  000014                     LED_Light_Pos@pos2:
   475                           	opt callstack 0
   476                           
   477                           ; 2 bytes @ 0x13
   478  000014                     	ds	1
   479  000015                     TRM_DataTransmition@canMessage:
   480                           	opt callstack 0
   481                           
   482                           ; 17 bytes @ 0x14
   483  000015                     	ds	1
   484  000016                     LED_Light_Pos@flage:
   485                           	opt callstack 0
   486                           
   487                           ; 2 bytes @ 0x15
   488  000016                     	ds	2
   489  000018                     
   490                           ; 1 bytes @ 0x17
   491  000018                     	ds	14
   492  000026                     
   493                           ; 1 bytes @ 0x25
   494 ;;
   495 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   496 ;;
   497 ;; *************** function _main *****************
   498 ;; Defined at:
   499 ;;		line 89 in file "main.c"
   500 ;; Parameters:    Size  Location     Type
   501 ;;		None
   502 ;; Auto vars:     Size  Location     Type
   503 ;;		None
   504 ;; Return value:  Size  Location     Type
   505 ;;                  1    wreg      void 
   506 ;; Registers used:
   507 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   508 ;; Tracked objects:
   509 ;;		On entry : 0/0
   510 ;;		On exit  : 0/0
   511 ;;		Unchanged: 0/0
   512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   517 ;;Total ram usage:        0 bytes
   518 ;; Hardware stack levels required when called:    7
   519 ;; This function calls:
   520 ;;		_INI_All
   521 ;;		_LED_Update
   522 ;;		_TMR1_Update_flag_Get
   523 ;;		_TMR1_Update_flag_Set
   524 ;;		_TRM_DataTransmition
   525 ;; This function is called by:
   526 ;;		Startup code after reset
   527 ;; This function uses a non-reentrant model
   528 ;;
   529                           
   530                           	psect	text0
   531  000E1E                     __ptext0:
   532                           	opt callstack 0
   533  000E1E                     _main:
   534                           	opt callstack 24
   535                           
   536                           ;main.c: 91:     INI_All();
   537                           
   538                           ;incstack = 0
   539  000E1E  EC9F  F007         	call	_INI_All	;wreg free
   540                           
   541                           ;main.c: 93:     RCON = 0xFF;
   542  000E22  68D0               	setf	4048,c	;volatile
   543  000E24                     l2721:
   544                           
   545                           ;main.c: 96:     {;main.c: 97:         if(DetectorLedRadar.Flags.obsluzWeWy == 1)
   546  000E24  B03D               	btfsc	_DetectorLedRadar,0,c
   547                           
   548                           ;main.c: 98:         {;main.c: 99:             DetectorLedRadar.Flags.obsluzWeWy = 0;
   549  000E26  903D               	bcf	_DetectorLedRadar,0,c
   550                           
   551                           ;main.c: 103:         if(TMR1_Update_flag_Get()==1)
   552  000E28  ECD8  F007         	call	_TMR1_Update_flag_Get	;wreg free
   553  000E2C  0406               	decf	?_TMR1_Update_flag_Get,w,c
   554  000E2E  1007               	iorwf	?_TMR1_Update_flag_Get+1,w,c
   555  000E30  A4D8               	btfss	status,2,c
   556  000E32  D008               	goto	l2731
   557                           
   558                           ;main.c: 104:         {;main.c: 105:             LED_Update();
   559  000E34  ECA4  F005         	call	_LED_Update	;wreg free
   560                           
   561                           ;main.c: 106:             TMR1_Update_flag_Set(0);
   562  000E38  0E00               	movlw	0
   563  000E3A  6E07               	movwf	TMR1_Update_flag_Set@a+1,c
   564  000E3C  0E00               	movlw	0
   565  000E3E  6E06               	movwf	TMR1_Update_flag_Set@a,c
   566  000E40  ECD3  F007         	call	_TMR1_Update_flag_Set	;wreg free
   567  000E44                     l2731:
   568                           
   569                           ;main.c: 110:         TRM_DataTransmition();
   570  000E44  EC79  F005         	call	_TRM_DataTransmition	;wreg free
   571  000E48  0004               	clrwdt		;# 
   572                           
   573                           ;main.c: 112:     }
   574  000E4A  D7EC               	goto	l2721
   575  000E4C                     __end_of_main:
   576                           	opt callstack 0
   577                           
   578 ;; *************** function _TRM_DataTransmition *****************
   579 ;; Defined at:
   580 ;;		line 16 in file "TRM.c"
   581 ;; Parameters:    Size  Location     Type
   582 ;;		None
   583 ;; Auto vars:     Size  Location     Type
   584 ;;  canMessage     17   20[COMRAM] struct .
   585 ;;  i               1    0        unsigned char 
   586 ;; Return value:  Size  Location     Type
   587 ;;                  1    wreg      void 
   588 ;; Registers used:
   589 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   590 ;; Tracked objects:
   591 ;;		On entry : 0/0
   592 ;;		On exit  : 0/0
   593 ;;		Unchanged: 0/0
   594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   596 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   598 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   599 ;;Total ram usage:       17 bytes
   600 ;; Hardware stack levels used:    1
   601 ;; Hardware stack levels required when called:    6
   602 ;; This function calls:
   603 ;;		_CAN_TakeFrame
   604 ;;		_FRAME_HandleCanFrame
   605 ;; This function is called by:
   606 ;;		_main
   607 ;; This function uses a non-reentrant model
   608 ;;
   609                           
   610                           	psect	text1
   611  000AF2                     __ptext1:
   612                           	opt callstack 0
   613  000AF2                     _TRM_DataTransmition:
   614                           	opt callstack 24
   615                           
   616                           ;TRM.c: 18:     static BYTE weWyU8 = 0, czujnikWeWyU8 = 0;;TRM.c: 19:     BYTE i;;TRM.c:
      +                           20:     mID canMessage;;TRM.c: 23:     if(DaneCan.Flags.wyslijRamkeStanu)
   617                           
   618                           ;incstack = 0
   619  000AF2  A037               	btfss	_DaneCan,0,c
   620  000AF4  D013               	goto	l2691
   621                           
   622                           ;TRM.c: 24:     {;TRM.c: 26:         canMessage.message_type = 0x02;
   623  000AF6  0E02               	movlw	2
   624  000AF8  6E16               	movwf	TRM_DataTransmition@canMessage+1,c
   625                           
   626                           ;TRM.c: 27:         canMessage.id.Val = 0;
   627  000AFA  0E00               	movlw	0
   628  000AFC  6E19               	movwf	TRM_DataTransmition@canMessage+4,c
   629  000AFE  0E00               	movlw	0
   630  000B00  6E1A               	movwf	TRM_DataTransmition@canMessage+5,c
   631  000B02  0E00               	movlw	0
   632  000B04  6E1B               	movwf	TRM_DataTransmition@canMessage+6,c
   633  000B06  0E00               	movlw	0
   634  000B08  6E1C               	movwf	TRM_DataTransmition@canMessage+7,c
   635                           
   636                           ;TRM.c: 28:         canMessage.id.v[2] = 0x01 *4;
   637  000B0A  0E04               	movlw	4
   638  000B0C  6E1B               	movwf	TRM_DataTransmition@canMessage+6,c
   639                           
   640                           ;TRM.c: 29:         FRAME_HandleCanFrame(&canMessage);
   641  000B0E  0E15               	movlw	low TRM_DataTransmition@canMessage
   642  000B10  6E10               	movwf	FRAME_HandleCanFrame@message,c
   643  000B12  0E00               	movlw	high TRM_DataTransmition@canMessage
   644  000B14  6E11               	movwf	FRAME_HandleCanFrame@message+1,c
   645  000B16  EC6E  F001         	call	_FRAME_HandleCanFrame	;wreg free
   646                           
   647                           ;TRM.c: 46:         DaneCan.Flags.wyslijRamkeStanu = 0;
   648  000B1A  9037               	bcf	_DaneCan,0,c
   649  000B1C                     l2691:
   650                           
   651                           ;TRM.c: 56:     if(CAN_TakeFrame(&canMessage))
   652  000B1C  0E15               	movlw	low TRM_DataTransmition@canMessage
   653  000B1E  6E0E               	movwf	CAN_TakeFrame@message,c
   654  000B20  0E00               	movlw	high TRM_DataTransmition@canMessage
   655  000B22  6E0F               	movwf	CAN_TakeFrame@message+1,c
   656  000B24  EC30  F000         	call	_CAN_TakeFrame	;wreg free
   657  000B28  0900               	iorlw	0
   658  000B2A  B4D8               	btfsc	status,2,c
   659  000B2C  0012               	return	
   660                           
   661                           ;TRM.c: 57:     {;TRM.c: 58:         if((canMessage.buffer == 0) || (canMessage.buffer =
      +                          = 1))
   662  000B2E  5018               	movf	TRM_DataTransmition@canMessage+3,w,c
   663  000B30  B4D8               	btfsc	status,2,c
   664  000B32  D003               	goto	u1320
   665  000B34  0418               	decf	TRM_DataTransmition@canMessage+3,w,c
   666  000B36  A4D8               	btfss	status,2,c
   667  000B38  0012               	return	
   668  000B3A                     u1320:
   669                           
   670                           ;TRM.c: 59:         {;TRM.c: 60:             FRAME_HandleCanFrame(&canMessage);
   671  000B3A  0E15               	movlw	low TRM_DataTransmition@canMessage
   672  000B3C  6E10               	movwf	FRAME_HandleCanFrame@message,c
   673  000B3E  0E00               	movlw	high TRM_DataTransmition@canMessage
   674  000B40  6E11               	movwf	FRAME_HandleCanFrame@message+1,c
   675  000B42  EC6E  F001         	call	_FRAME_HandleCanFrame	;wreg free
   676                           
   677                           ;TRM.c: 61:         }
   678  000B46  0012               	return		;funcret
   679  000B48                     __end_of_TRM_DataTransmition:
   680                           	opt callstack 0
   681                           
   682 ;; *************** function _FRAME_HandleCanFrame *****************
   683 ;; Defined at:
   684 ;;		line 445 in file "FRAME.c"
   685 ;; Parameters:    Size  Location     Type
   686 ;;  message         2   15[COMRAM] PTR struct .
   687 ;;		 -> TRM_DataTransmition@canMessage(17), 
   688 ;; Auto vars:     Size  Location     Type
   689 ;;  identyfikato    1   19[COMRAM] unsigned char 
   690 ;; Return value:  Size  Location     Type
   691 ;;                  1    wreg      void 
   692 ;; Registers used:
   693 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   694 ;; Tracked objects:
   695 ;;		On entry : 0/0
   696 ;;		On exit  : 0/0
   697 ;;		Unchanged: 0/0
   698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   699 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   700 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   701 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   702 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   703 ;;Total ram usage:        5 bytes
   704 ;; Hardware stack levels used:    1
   705 ;; Hardware stack levels required when called:    5
   706 ;; This function calls:
   707 ;;		_CAN_GenID
   708 ;;		_CAN_SendFrame
   709 ;;		_FRAME_AccelerometerStatus
   710 ;;		_FRAME_AdressOfNeighbors
   711 ;;		_FRAME_AnalogValue
   712 ;;		_FRAME_AveragingTimes
   713 ;;		_FRAME_AxisStatus
   714 ;;		_FRAME_DeviceReset
   715 ;;		_FRAME_ExcitationMultiplier
   716 ;;		_FRAME_ExcitationValue
   717 ;;		_FRAME_MapPosition
   718 ;;		_FRAME_Plot
   719 ;;		_FRAME_SensorExcitationStatus
   720 ;;		_FRAME_SoftwareVersion
   721 ;;		_LED_Clear
   722 ;;		_LED_Error
   723 ;;		___awdiv
   724 ;; This function is called by:
   725 ;;		_TRM_DataTransmition
   726 ;; This function uses a non-reentrant model
   727 ;;
   728                           
   729                           	psect	text2
   730  0002DC                     __ptext2:
   731                           	opt callstack 0
   732  0002DC                     _FRAME_HandleCanFrame:
   733                           	opt callstack 24
   734                           
   735                           ;FRAME.c: 445: void FRAME_HandleCanFrame(mID * message);FRAME.c: 446: {;FRAME.c: 447:   
      +                            BYTE identyfikator = (BYTE) message->id.v[2]/4;
   736                           
   737                           ;incstack = 0
   738  0002DC  EE20 F006          	lfsr	2,6
   739  0002E0  5010               	movf	FRAME_HandleCanFrame@message,w,c
   740  0002E2  26D9               	addwf	fsr2l,f,c
   741  0002E4  5011               	movf	FRAME_HandleCanFrame@message+1,w,c
   742  0002E6  22DA               	addwfc	fsr2h,f,c
   743  0002E8  50DF               	movf	indf2,w,c
   744  0002EA  6E12               	movwf	??_FRAME_HandleCanFrame& (0+255),c
   745  0002EC  5012               	movf	??_FRAME_HandleCanFrame,w,c
   746  0002EE  6E06               	movwf	___awdiv@dividend,c
   747  0002F0  6A07               	clrf	___awdiv@dividend+1,c
   748  0002F2  0E00               	movlw	0
   749  0002F4  6E09               	movwf	___awdiv@divisor+1,c
   750  0002F6  0E04               	movlw	4
   751  0002F8  6E08               	movwf	___awdiv@divisor,c
   752  0002FA  ECA8  F004         	call	___awdiv	;wreg free
   753  0002FE  5006               	movf	?___awdiv,w,c
   754  000300  6E14               	movwf	FRAME_HandleCanFrame@identyfikator,c
   755                           
   756                           ;FRAME.c: 449:     switch(identyfikator)
   757  000302  D060               	goto	l2639
   758  000304                     l2613:
   759                           
   760                           ;FRAME.c: 452:             FRAME_SensorExcitationStatus(message);
   761  000304  C010  F008         	movff	FRAME_HandleCanFrame@message,FRAME_SensorExcitationStatus@message
   762  000308  C011  F009         	movff	FRAME_HandleCanFrame@message+1,FRAME_SensorExcitationStatus@message+1
   763  00030C  EC14  F004         	call	_FRAME_SensorExcitationStatus	;wreg free
   764                           
   765                           ;FRAME.c: 453:             break;
   766  000310  D08B               	goto	l2641
   767  000312                     l2615:
   768                           
   769                           ;FRAME.c: 455:             FRAME_AccelerometerStatus(message);
   770  000312  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AccelerometerStatus@message
   771  000316  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AccelerometerStatus@message+1
   772  00031A  ECDA  F006         	call	_FRAME_AccelerometerStatus	;wreg free
   773                           
   774                           ;FRAME.c: 456:             break;
   775  00031E  D084               	goto	l2641
   776  000320                     l2617:
   777                           
   778                           ;FRAME.c: 458:             FRAME_ExcitationValue(message);
   779  000320  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_ExcitationValue@message
   780  000324  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_ExcitationValue@message+1
   781  000328  EC89  F006         	call	_FRAME_ExcitationValue	;wreg free
   782                           
   783                           ;FRAME.c: 459:             break;
   784  00032C  D07D               	goto	l2641
   785  00032E                     l2619:
   786                           
   787                           ;FRAME.c: 461:             FRAME_ExcitationMultiplier(message);
   788  00032E  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_ExcitationMultiplier@message
   789  000332  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_ExcitationMultiplier@message+1
   790  000336  ECF8  F005         	call	_FRAME_ExcitationMultiplier	;wreg free
   791                           
   792                           ;FRAME.c: 462:             break;
   793  00033A  D076               	goto	l2641
   794  00033C                     l2621:
   795                           
   796                           ;FRAME.c: 464:             FRAME_AveragingTimes(message);
   797  00033C  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AveragingTimes@message
   798  000340  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AveragingTimes@message+1
   799  000344  ECBF  F006         	call	_FRAME_AveragingTimes	;wreg free
   800                           
   801                           ;FRAME.c: 465:             break;
   802  000348  D06F               	goto	l2641
   803  00034A                     l2623:
   804                           
   805                           ;FRAME.c: 467:             FRAME_AxisStatus(message);
   806  00034A  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AxisStatus@message
   807  00034E  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AxisStatus@message+1
   808  000352  ECA4  F006         	call	_FRAME_AxisStatus	;wreg free
   809                           
   810                           ;FRAME.c: 468:             break;
   811  000356  D068               	goto	l2641
   812  000358                     l2625:
   813                           
   814                           ;FRAME.c: 470:             FRAME_DeviceReset(message);
   815  000358  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_DeviceReset@message
   816  00035C  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_DeviceReset@message+1
   817  000360  EC4D  F005         	call	_FRAME_DeviceReset	;wreg free
   818                           
   819                           ;FRAME.c: 471:             break;
   820  000364  D061               	goto	l2641
   821  000366                     l2627:
   822                           
   823                           ;FRAME.c: 473:             FRAME_Plot(message);
   824  000366  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_Plot@message
   825  00036A  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_Plot@message+1
   826  00036E  EC61  F007         	call	_FRAME_Plot	;wreg free
   827                           
   828                           ;FRAME.c: 474:             break;
   829  000372  D05A               	goto	l2641
   830  000374                     l2629:
   831                           
   832                           ;FRAME.c: 476:             FRAME_MapPosition(message);
   833  000374  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_MapPosition@message
   834  000378  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_MapPosition@message+1
   835  00037C  ECEE  F007         	call	_FRAME_MapPosition	;wreg free
   836                           
   837                           ;FRAME.c: 477:             break;
   838  000380  D053               	goto	l2641
   839  000382                     l2631:
   840                           
   841                           ;FRAME.c: 479:             FRAME_SoftwareVersion(message);
   842  000382  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_SoftwareVersion@message
   843  000386  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_SoftwareVersion@message+1
   844  00038A  ECED  F007         	call	_FRAME_SoftwareVersion	;wreg free
   845                           
   846                           ;FRAME.c: 480:             break;
   847  00038E  D04C               	goto	l2641
   848  000390                     l2633:
   849                           
   850                           ;FRAME.c: 483:             FRAME_AnalogValue(message, identyfikator - 0x0C);
   851  000390  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AnalogValue@message
   852  000394  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AnalogValue@message+1
   853  000398  0EF4               	movlw	244
   854  00039A  2414               	addwf	FRAME_HandleCanFrame@identyfikator,w,c
   855  00039C  6E08               	movwf	FRAME_AnalogValue@set,c
   856  00039E  6A09               	clrf	FRAME_AnalogValue@set+1,c
   857  0003A0  0EFF               	movlw	255
   858  0003A2  2209               	addwfc	FRAME_AnalogValue@set+1,f,c
   859  0003A4  ECEF  F007         	call	_FRAME_AnalogValue	;wreg free
   860                           
   861                           ;FRAME.c: 484:             break;
   862  0003A8  D03F               	goto	l2641
   863  0003AA                     l2635:
   864                           
   865                           ;FRAME.c: 487:             FRAME_AdressOfNeighbors(message, identyfikator - 0x10);
   866  0003AA  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AdressOfNeighbors@message
   867  0003AE  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AdressOfNeighbors@message+1
   868  0003B2  0EF0               	movlw	240
   869  0003B4  2414               	addwf	FRAME_HandleCanFrame@identyfikator,w,c
   870  0003B6  6E08               	movwf	FRAME_AdressOfNeighbors@nrRamki,c
   871  0003B8  6A09               	clrf	FRAME_AdressOfNeighbors@nrRamki+1,c
   872  0003BA  0EFF               	movlw	255
   873  0003BC  2209               	addwfc	FRAME_AdressOfNeighbors@nrRamki+1,f,c
   874  0003BE  ECF0  F007         	call	_FRAME_AdressOfNeighbors	;wreg free
   875                           
   876                           ;FRAME.c: 488:             break;
   877  0003C2  D032               	goto	l2641
   878  0003C4                     l2639:
   879  0003C4  5014               	movf	FRAME_HandleCanFrame@identyfikator,w,c
   880  0003C6  6E12               	movwf	??_FRAME_HandleCanFrame& (0+255),c
   881  0003C8  6A13               	clrf	(??_FRAME_HandleCanFrame+1)& (0+255),c
   882                           
   883                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   884                           ; Switch size 1, requested type "simple"
   885                           ; Number of cases is 1, Range of values is 0 to 0
   886                           ; switch strategies available:
   887                           ; Name         Instructions Cycles
   888                           ; simple_byte            4     3 (average)
   889                           ;	Chosen strategy is simple_byte
   890  0003CA  5013               	movf	??_FRAME_HandleCanFrame+1,w,c
   891  0003CC  0A00               	xorlw	0	; case 0
   892  0003CE  A4D8               	btfss	status,2,c
   893  0003D0  D02B               	goto	l2641
   894                           
   895                           ; Switch size 1, requested type "simple"
   896                           ; Number of cases is 14, Range of values is 1 to 17
   897                           ; switch strategies available:
   898                           ; Name         Instructions Cycles
   899                           ; simple_byte           43    22 (average)
   900                           ;	Chosen strategy is simple_byte
   901  0003D2  5012               	movf	??_FRAME_HandleCanFrame,w,c
   902  0003D4  0A01               	xorlw	1	; case 1
   903  0003D6  B4D8               	btfsc	status,2,c
   904  0003D8  D795               	goto	l2613
   905  0003DA  0A03               	xorlw	3	; case 2
   906  0003DC  B4D8               	btfsc	status,2,c
   907  0003DE  D799               	goto	l2615
   908  0003E0  0A01               	xorlw	1	; case 3
   909  0003E2  B4D8               	btfsc	status,2,c
   910  0003E4  D79D               	goto	l2617
   911  0003E6  0A07               	xorlw	7	; case 4
   912  0003E8  B4D8               	btfsc	status,2,c
   913  0003EA  D7A1               	goto	l2619
   914  0003EC  0A01               	xorlw	1	; case 5
   915  0003EE  B4D8               	btfsc	status,2,c
   916  0003F0  D7A5               	goto	l2621
   917  0003F2  0A03               	xorlw	3	; case 6
   918  0003F4  B4D8               	btfsc	status,2,c
   919  0003F6  D7A9               	goto	l2623
   920  0003F8  0A01               	xorlw	1	; case 7
   921  0003FA  B4D8               	btfsc	status,2,c
   922  0003FC  D7AD               	goto	l2625
   923  0003FE  0A0E               	xorlw	14	; case 9
   924  000400  B4D8               	btfsc	status,2,c
   925  000402  D7B1               	goto	l2627
   926  000404  0A03               	xorlw	3	; case 10
   927  000406  B4D8               	btfsc	status,2,c
   928  000408  D7B5               	goto	l2629
   929  00040A  0A01               	xorlw	1	; case 11
   930  00040C  B4D8               	btfsc	status,2,c
   931  00040E  D7B9               	goto	l2631
   932  000410  0A07               	xorlw	7	; case 12
   933  000412  B4D8               	btfsc	status,2,c
   934  000414  D7BD               	goto	l2633
   935  000416  0A01               	xorlw	1	; case 13
   936  000418  B4D8               	btfsc	status,2,c
   937  00041A  D7BA               	goto	l2633
   938  00041C  0A1D               	xorlw	29	; case 16
   939  00041E  B4D8               	btfsc	status,2,c
   940  000420  D7C4               	goto	l2635
   941  000422  0A01               	xorlw	1	; case 17
   942  000424  B4D8               	btfsc	status,2,c
   943  000426  D7C1               	goto	l2635
   944  000428                     l2641:
   945                           
   946                           ;FRAME.c: 490:     if(message->message_type == 0x02)
   947  000428  EE20 F001          	lfsr	2,1
   948  00042C  5010               	movf	FRAME_HandleCanFrame@message,w,c
   949  00042E  26D9               	addwf	fsr2l,f,c
   950  000430  5011               	movf	FRAME_HandleCanFrame@message+1,w,c
   951  000432  22DA               	addwfc	fsr2h,f,c
   952  000434  0E02               	movlw	2
   953  000436  18DE               	xorwf	postinc2,w,c
   954  000438  A4D8               	btfss	status,2,c
   955  00043A  0012               	return	
   956                           
   957                           ;FRAME.c: 491:     {;FRAME.c: 493:         message->frame_type = 0x03;
   958  00043C  EE20 F002          	lfsr	2,2
   959  000440  5010               	movf	FRAME_HandleCanFrame@message,w,c
   960  000442  26D9               	addwf	fsr2l,f,c
   961  000444  5011               	movf	FRAME_HandleCanFrame@message+1,w,c
   962  000446  22DA               	addwfc	fsr2h,f,c
   963  000448  0E03               	movlw	3
   964  00044A  6EDF               	movwf	indf2,c
   965                           
   966                           ;FRAME.c: 494:         message->message_type = 0x01;
   967  00044C  EE20 F001          	lfsr	2,1
   968  000450  5010               	movf	FRAME_HandleCanFrame@message,w,c
   969  000452  26D9               	addwf	fsr2l,f,c
   970  000454  5011               	movf	FRAME_HandleCanFrame@message+1,w,c
   971  000456  22DA               	addwfc	fsr2h,f,c
   972  000458  0E01               	movlw	1
   973  00045A  6EDF               	movwf	indf2,c
   974                           
   975                           ;FRAME.c: 495:         message->id.Val = 0;
   976  00045C  EE20 F004          	lfsr	2,4
   977  000460  5010               	movf	FRAME_HandleCanFrame@message,w,c
   978  000462  26D9               	addwf	fsr2l,f,c
   979  000464  5011               	movf	FRAME_HandleCanFrame@message+1,w,c
   980  000466  22DA               	addwfc	fsr2h,f,c
   981  000468  6ADE               	clrf	postinc2,c
   982  00046A  6ADE               	clrf	postinc2,c
   983  00046C  6ADE               	clrf	postinc2,c
   984  00046E  6ADD               	clrf	postdec2,c
   985                           
   986                           ;FRAME.c: 497:         message->id.v[2] = identyfikator*4;
   987  000470  5014               	movf	FRAME_HandleCanFrame@identyfikator,w,c
   988  000472  0D04               	mullw	4
   989  000474  EE20 F006          	lfsr	2,6
   990  000478  5010               	movf	FRAME_HandleCanFrame@message,w,c
   991  00047A  26D9               	addwf	fsr2l,f,c
   992  00047C  5011               	movf	FRAME_HandleCanFrame@message+1,w,c
   993  00047E  22DA               	addwfc	fsr2h,f,c
   994  000480  CFF3 FFDF          	movff	prodl,indf2
   995                           
   996                           ;FRAME.c: 498:         CAN_GenID(message,identyfikator);
   997  000484  C010  F006         	movff	FRAME_HandleCanFrame@message,CAN_GenID@message
   998  000488  C011  F007         	movff	FRAME_HandleCanFrame@message+1,CAN_GenID@message+1
   999  00048C  C014  F008         	movff	FRAME_HandleCanFrame@identyfikator,CAN_GenID@frameID
  1000  000490  EC66  F004         	call	_CAN_GenID	;wreg free
  1001                           
  1002                           ;FRAME.c: 499:         CAN_SendFrame(message);
  1003  000494  C010  F00B         	movff	FRAME_HandleCanFrame@message,CAN_SendFrame@message
  1004  000498  C011  F00C         	movff	FRAME_HandleCanFrame@message+1,CAN_SendFrame@message+1
  1005  00049C  EC5C  F002         	call	_CAN_SendFrame	;wreg free
  1006                           
  1007                           ;FRAME.c: 510:        while(RXB0CONbits.FILHIT3)
  1008  0004A0  D008               	goto	l2655
  1009  0004A2                     l475:
  1010                           
  1011                           ;FRAME.c: 511:        {;FRAME.c: 512:            if(TXB0CONbits.TXERR == 1){
  1012  0004A2  010F               	movlb	15	; () banked
  1013  0004A4  A940               	btfss	64,4,b	;volatile
  1014  0004A6  D003               	goto	l2653
  1015                           
  1016                           ; BSR set to: 15
  1017                           ;FRAME.c: 513:                LED_Error();
  1018  0004A8  EC72  F007         	call	_LED_Error	;wreg free
  1019                           
  1020                           ;FRAME.c: 514:            }
  1021  0004AC  D002               	goto	l2655
  1022  0004AE                     l2653:
  1023                           
  1024                           ; BSR set to: 15
  1025                           ;FRAME.c: 516:            {;FRAME.c: 517:                LED_Clear();
  1026  0004AE  EC81  F007         	call	_LED_Clear	;wreg free
  1027  0004B2                     l2655:
  1028                           
  1029                           ;FRAME.c: 510:        while(RXB0CONbits.FILHIT3)
  1030  0004B2  A660               	btfss	3936,3,c	;volatile
  1031  0004B4  0012               	return	
  1032  0004B6  D7F5               	goto	l475
  1033  0004B8                     __end_of_FRAME_HandleCanFrame:
  1034                           	opt callstack 0
  1035                           
  1036 ;; *************** function _LED_Error *****************
  1037 ;; Defined at:
  1038 ;;		line 32 in file "LED.c"
  1039 ;; Parameters:    Size  Location     Type
  1040 ;;		None
  1041 ;; Auto vars:     Size  Location     Type
  1042 ;;		None
  1043 ;; Return value:  Size  Location     Type
  1044 ;;                  2  251[None  ] unsigned int 
  1045 ;; Registers used:
  1046 ;;		wreg, status,2, status,0, cstack
  1047 ;; Tracked objects:
  1048 ;;		On entry : 0/0
  1049 ;;		On exit  : 0/0
  1050 ;;		Unchanged: 0/0
  1051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1055 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1056 ;;Total ram usage:        0 bytes
  1057 ;; Hardware stack levels used:    1
  1058 ;; Hardware stack levels required when called:    4
  1059 ;; This function calls:
  1060 ;;		_LED_Control
  1061 ;; This function is called by:
  1062 ;;		_FRAME_HandleCanFrame
  1063 ;; This function uses a non-reentrant model
  1064 ;;
  1065                           
  1066                           	psect	text3
  1067  000EE4                     __ptext3:
  1068                           	opt callstack 0
  1069  000EE4                     _LED_Error:
  1070                           	opt callstack 24
  1071                           
  1072                           ;LED.c: 34:     LED_Control(RED,0b1010101010);
  1073                           
  1074                           ;incstack = 0
  1075  000EE4  0E02               	movlw	2
  1076  000EE6  6E07               	movwf	LED_Control@diode+1,c
  1077  000EE8  0EAA               	movlw	170
  1078  000EEA  6E06               	movwf	LED_Control@diode,c
  1079  000EEC  0E00               	movlw	0
  1080  000EEE  EC13  F003         	call	_LED_Control
  1081                           
  1082                           ;LED.c: 35:     LED_Control(GREEN,0b0000000000);
  1083  000EF2  0E00               	movlw	0
  1084  000EF4  6E07               	movwf	LED_Control@diode+1,c
  1085  000EF6  0E00               	movlw	0
  1086  000EF8  6E06               	movwf	LED_Control@diode,c
  1087  000EFA  0E01               	movlw	1
  1088  000EFC  EC13  F003         	call	_LED_Control
  1089  000F00  0012               	return		;funcret
  1090  000F02                     __end_of_LED_Error:
  1091                           	opt callstack 0
  1092                           
  1093 ;; *************** function _LED_Clear *****************
  1094 ;; Defined at:
  1095 ;;		line 39 in file "LED.c"
  1096 ;; Parameters:    Size  Location     Type
  1097 ;;		None
  1098 ;; Auto vars:     Size  Location     Type
  1099 ;;		None
  1100 ;; Return value:  Size  Location     Type
  1101 ;;                  2  254[None  ] unsigned int 
  1102 ;; Registers used:
  1103 ;;		wreg, status,2, status,0, cstack
  1104 ;; Tracked objects:
  1105 ;;		On entry : 0/0
  1106 ;;		On exit  : 0/0
  1107 ;;		Unchanged: 0/0
  1108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1113 ;;Total ram usage:        0 bytes
  1114 ;; Hardware stack levels used:    1
  1115 ;; Hardware stack levels required when called:    4
  1116 ;; This function calls:
  1117 ;;		_LED_Control
  1118 ;; This function is called by:
  1119 ;;		_FRAME_HandleCanFrame
  1120 ;; This function uses a non-reentrant model
  1121 ;;
  1122                           
  1123                           	psect	text4
  1124  000F02                     __ptext4:
  1125                           	opt callstack 0
  1126  000F02                     _LED_Clear:
  1127                           	opt callstack 24
  1128                           
  1129                           ;LED.c: 41:     LED_Control(RED,0b0000000000);
  1130                           
  1131                           ;incstack = 0
  1132  000F02  0E00               	movlw	0
  1133  000F04  6E07               	movwf	LED_Control@diode+1,c
  1134  000F06  0E00               	movlw	0
  1135  000F08  6E06               	movwf	LED_Control@diode,c
  1136  000F0A  0E00               	movlw	0
  1137  000F0C  EC13  F003         	call	_LED_Control
  1138                           
  1139                           ;LED.c: 42:     LED_Control(GREEN,0b1010101010);
  1140  000F10  0E02               	movlw	2
  1141  000F12  6E07               	movwf	LED_Control@diode+1,c
  1142  000F14  0EAA               	movlw	170
  1143  000F16  6E06               	movwf	LED_Control@diode,c
  1144  000F18  0E01               	movlw	1
  1145  000F1A  EC13  F003         	call	_LED_Control
  1146  000F1E  0012               	return		;funcret
  1147  000F20                     __end_of_LED_Clear:
  1148                           	opt callstack 0
  1149                           
  1150 ;; *************** function _FRAME_SoftwareVersion *****************
  1151 ;; Defined at:
  1152 ;;		line 349 in file "FRAME.c"
  1153 ;; Parameters:    Size  Location     Type
  1154 ;;  message         2    5[COMRAM] PTR struct .
  1155 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1156 ;; Auto vars:     Size  Location     Type
  1157 ;;		None
  1158 ;; Return value:  Size  Location     Type
  1159 ;;                  1    wreg      void 
  1160 ;; Registers used:
  1161 ;;		None
  1162 ;; Tracked objects:
  1163 ;;		On entry : 0/0
  1164 ;;		On exit  : 0/0
  1165 ;;		Unchanged: 0/0
  1166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1167 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1170 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1171 ;;Total ram usage:        2 bytes
  1172 ;; Hardware stack levels used:    1
  1173 ;; Hardware stack levels required when called:    3
  1174 ;; This function calls:
  1175 ;;		Nothing
  1176 ;; This function is called by:
  1177 ;;		_FRAME_HandleCanFrame
  1178 ;; This function uses a non-reentrant model
  1179 ;;
  1180                           
  1181                           	psect	text5
  1182  000FDA                     __ptext5:
  1183                           	opt callstack 0
  1184  000FDA                     _FRAME_SoftwareVersion:
  1185                           	opt callstack 25
  1186                           
  1187                           ;incstack = 0
  1188  000FDA  0012               	return		;funcret
  1189  000FDC                     __end_of_FRAME_SoftwareVersion:
  1190                           	opt callstack 0
  1191                           
  1192 ;; *************** function _FRAME_SensorExcitationStatus *****************
  1193 ;; Defined at:
  1194 ;;		line 31 in file "FRAME.c"
  1195 ;; Parameters:    Size  Location     Type
  1196 ;;  message         2    7[COMRAM] PTR struct .
  1197 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1198 ;; Auto vars:     Size  Location     Type
  1199 ;;		None
  1200 ;; Return value:  Size  Location     Type
  1201 ;;                  1    wreg      void 
  1202 ;; Registers used:
  1203 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1204 ;; Tracked objects:
  1205 ;;		On entry : 0/0
  1206 ;;		On exit  : 0/0
  1207 ;;		Unchanged: 0/0
  1208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1209 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1211 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1212 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1213 ;;Total ram usage:        3 bytes
  1214 ;; Hardware stack levels used:    1
  1215 ;; Hardware stack levels required when called:    4
  1216 ;; This function calls:
  1217 ;;		_MOC_Aktualna_Temperatura
  1218 ;;		_MOC_Frame_Counter
  1219 ;;		_MOC_NOTWORK
  1220 ;;		_MOC_StanWzbudzenia
  1221 ;;		_MOC_Wynikowa_wartosc_roznicowa
  1222 ;; This function is called by:
  1223 ;;		_FRAME_HandleCanFrame
  1224 ;; This function uses a non-reentrant model
  1225 ;;
  1226                           
  1227                           	psect	text6
  1228  000828                     __ptext6:
  1229                           	opt callstack 0
  1230  000828                     _FRAME_SensorExcitationStatus:
  1231                           	opt callstack 24
  1232                           
  1233                           ;FRAME.c: 31: static void FRAME_SensorExcitationStatus(mID *message);FRAME.c: 32: {;FRAM
      +                          E.c: 33:     if(message->message_type == 0x02)
  1234                           
  1235                           ;incstack = 0
  1236  000828  EE20 F001          	lfsr	2,1
  1237  00082C  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1238  00082E  26D9               	addwf	fsr2l,f,c
  1239  000830  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1240  000832  22DA               	addwfc	fsr2h,f,c
  1241  000834  0E02               	movlw	2
  1242  000836  18DE               	xorwf	postinc2,w,c
  1243  000838  A4D8               	btfss	status,2,c
  1244  00083A  0012               	return	
  1245                           
  1246                           ;FRAME.c: 34:     {;FRAME.c: 35:         message->data_length = 6;
  1247  00083C  EE20 F010          	lfsr	2,16
  1248  000840  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1249  000842  26D9               	addwf	fsr2l,f,c
  1250  000844  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1251  000846  22DA               	addwfc	fsr2h,f,c
  1252  000848  0E06               	movlw	6
  1253  00084A  6EDF               	movwf	indf2,c
  1254                           
  1255                           ;FRAME.c: 41:         message->data[0] = MOC_StanWzbudzenia();
  1256  00084C  EE20 F008          	lfsr	2,8
  1257  000850  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1258  000852  26D9               	addwf	fsr2l,f,c
  1259  000854  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1260  000856  22DA               	addwfc	fsr2h,f,c
  1261  000858  ECC4  F007         	call	_MOC_StanWzbudzenia	;wreg free
  1262  00085C  5006               	movf	?_MOC_StanWzbudzenia,w,c
  1263  00085E  6EDF               	movwf	indf2,c
  1264                           
  1265                           ;FRAME.c: 42:         message->data[1] = MOC_Wynikowa_wartosc_roznicowa() >> 8 ;
  1266  000860  EE20 F009          	lfsr	2,9
  1267  000864  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1268  000866  26D9               	addwf	fsr2l,f,c
  1269  000868  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1270  00086A  22DA               	addwfc	fsr2h,f,c
  1271  00086C  ECBF  F007         	call	_MOC_Wynikowa_wartosc_roznicowa	;wreg free
  1272  000870  C007  F006         	movff	?_MOC_Wynikowa_wartosc_roznicowa+1,?_MOC_Wynikowa_wartosc_roznicowa
  1273  000874  6A07               	clrf	?_MOC_Wynikowa_wartosc_roznicowa+1,c
  1274  000876  5006               	movf	?_MOC_Wynikowa_wartosc_roznicowa,w,c
  1275  000878  6EDF               	movwf	indf2,c
  1276                           
  1277                           ;FRAME.c: 43:         message->data[2] = MOC_Wynikowa_wartosc_roznicowa() & 0x00FF;
  1278  00087A  EE20 F00A          	lfsr	2,10
  1279  00087E  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1280  000880  26D9               	addwf	fsr2l,f,c
  1281  000882  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1282  000884  22DA               	addwfc	fsr2h,f,c
  1283  000886  ECBF  F007         	call	_MOC_Wynikowa_wartosc_roznicowa	;wreg free
  1284  00088A  5006               	movf	?_MOC_Wynikowa_wartosc_roznicowa,w,c
  1285  00088C  6EDF               	movwf	indf2,c
  1286                           
  1287                           ;FRAME.c: 44:         message->data[3] = MOC_Frame_Counter();
  1288  00088E  EE20 F00B          	lfsr	2,11
  1289  000892  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1290  000894  26D9               	addwf	fsr2l,f,c
  1291  000896  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1292  000898  22DA               	addwfc	fsr2h,f,c
  1293  00089A  ECC9  F007         	call	_MOC_Frame_Counter	;wreg free
  1294  00089E  5006               	movf	?_MOC_Frame_Counter,w,c
  1295  0008A0  6EDF               	movwf	indf2,c
  1296                           
  1297                           ;FRAME.c: 45:         message->data[4] = MOC_Aktualna_Temperatura();
  1298  0008A2  EE20 F00C          	lfsr	2,12
  1299  0008A6  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1300  0008A8  26D9               	addwf	fsr2l,f,c
  1301  0008AA  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1302  0008AC  22DA               	addwfc	fsr2h,f,c
  1303  0008AE  ECCE  F007         	call	_MOC_Aktualna_Temperatura	;wreg free
  1304  0008B2  5006               	movf	?_MOC_Aktualna_Temperatura,w,c
  1305  0008B4  6EDF               	movwf	indf2,c
  1306                           
  1307                           ;FRAME.c: 46:         message->data[5] = MOC_NOTWORK();
  1308  0008B6  EE20 F00D          	lfsr	2,13
  1309  0008BA  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1310  0008BC  26D9               	addwf	fsr2l,f,c
  1311  0008BE  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1312  0008C0  22DA               	addwfc	fsr2h,f,c
  1313  0008C2  ECE2  F007         	call	_MOC_NOTWORK	;wreg free
  1314  0008C6  5006               	movf	?_MOC_NOTWORK,w,c
  1315  0008C8  6EDF               	movwf	indf2,c
  1316                           
  1317                           ;FRAME.c: 56:     }
  1318  0008CA  0012               	return		;funcret
  1319  0008CC                     __end_of_FRAME_SensorExcitationStatus:
  1320                           	opt callstack 0
  1321                           
  1322 ;; *************** function _MOC_Wynikowa_wartosc_roznicowa *****************
  1323 ;; Defined at:
  1324 ;;		line 28 in file "MOC_Funct.c"
  1325 ;; Parameters:    Size  Location     Type
  1326 ;;		None
  1327 ;; Auto vars:     Size  Location     Type
  1328 ;;		None
  1329 ;; Return value:  Size  Location     Type
  1330 ;;                  2    5[COMRAM] unsigned int 
  1331 ;; Registers used:
  1332 ;;		wreg, status,2
  1333 ;; Tracked objects:
  1334 ;;		On entry : 0/0
  1335 ;;		On exit  : 0/0
  1336 ;;		Unchanged: 0/0
  1337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1338 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1341 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1342 ;;Total ram usage:        2 bytes
  1343 ;; Hardware stack levels used:    1
  1344 ;; Hardware stack levels required when called:    3
  1345 ;; This function calls:
  1346 ;;		Nothing
  1347 ;; This function is called by:
  1348 ;;		_FRAME_SensorExcitationStatus
  1349 ;; This function uses a non-reentrant model
  1350 ;;
  1351                           
  1352                           	psect	text7
  1353  000F7E                     __ptext7:
  1354                           	opt callstack 0
  1355  000F7E                     _MOC_Wynikowa_wartosc_roznicowa:
  1356                           	opt callstack 24
  1357                           
  1358                           ;MOC_Funct.c: 30:     return 0x0220;
  1359                           
  1360                           ;incstack = 0
  1361  000F7E  0E02               	movlw	2
  1362  000F80  6E07               	movwf	?_MOC_Wynikowa_wartosc_roznicowa+1,c
  1363  000F82  0E20               	movlw	32
  1364  000F84  6E06               	movwf	?_MOC_Wynikowa_wartosc_roznicowa,c
  1365  000F86  0012               	return		;funcret
  1366  000F88                     __end_of_MOC_Wynikowa_wartosc_roznicowa:
  1367                           	opt callstack 0
  1368                           
  1369 ;; *************** function _MOC_StanWzbudzenia *****************
  1370 ;; Defined at:
  1371 ;;		line 23 in file "MOC_Funct.c"
  1372 ;; Parameters:    Size  Location     Type
  1373 ;;		None
  1374 ;; Auto vars:     Size  Location     Type
  1375 ;;		None
  1376 ;; Return value:  Size  Location     Type
  1377 ;;                  2    5[COMRAM] unsigned int 
  1378 ;; Registers used:
  1379 ;;		wreg, status,2
  1380 ;; Tracked objects:
  1381 ;;		On entry : 0/0
  1382 ;;		On exit  : 0/0
  1383 ;;		Unchanged: 0/0
  1384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1385 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1388 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1389 ;;Total ram usage:        2 bytes
  1390 ;; Hardware stack levels used:    1
  1391 ;; Hardware stack levels required when called:    3
  1392 ;; This function calls:
  1393 ;;		Nothing
  1394 ;; This function is called by:
  1395 ;;		_FRAME_SensorExcitationStatus
  1396 ;; This function uses a non-reentrant model
  1397 ;;
  1398                           
  1399                           	psect	text8
  1400  000F88                     __ptext8:
  1401                           	opt callstack 0
  1402  000F88                     _MOC_StanWzbudzenia:
  1403                           	opt callstack 24
  1404                           
  1405                           ;MOC_Funct.c: 25:     return 1;
  1406                           
  1407                           ;incstack = 0
  1408  000F88  0E00               	movlw	0
  1409  000F8A  6E07               	movwf	?_MOC_StanWzbudzenia+1,c
  1410  000F8C  0E01               	movlw	1
  1411  000F8E  6E06               	movwf	?_MOC_StanWzbudzenia,c
  1412  000F90  0012               	return		;funcret
  1413  000F92                     __end_of_MOC_StanWzbudzenia:
  1414                           	opt callstack 0
  1415                           
  1416 ;; *************** function _MOC_NOTWORK *****************
  1417 ;; Defined at:
  1418 ;;		line 41 in file "MOC_Funct.c"
  1419 ;; Parameters:    Size  Location     Type
  1420 ;;		None
  1421 ;; Auto vars:     Size  Location     Type
  1422 ;;		None
  1423 ;; Return value:  Size  Location     Type
  1424 ;;                  2    5[COMRAM] unsigned int 
  1425 ;; Registers used:
  1426 ;;		wreg, status,2
  1427 ;; Tracked objects:
  1428 ;;		On entry : 0/0
  1429 ;;		On exit  : 0/0
  1430 ;;		Unchanged: 0/0
  1431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1432 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1435 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1436 ;;Total ram usage:        2 bytes
  1437 ;; Hardware stack levels used:    1
  1438 ;; Hardware stack levels required when called:    3
  1439 ;; This function calls:
  1440 ;;		Nothing
  1441 ;; This function is called by:
  1442 ;;		_FRAME_SensorExcitationStatus
  1443 ;; This function uses a non-reentrant model
  1444 ;;
  1445                           
  1446                           	psect	text9
  1447  000FC4                     __ptext9:
  1448                           	opt callstack 0
  1449  000FC4                     _MOC_NOTWORK:
  1450                           	opt callstack 24
  1451                           
  1452                           ;MOC_Funct.c: 43:     return 0xFF;
  1453                           
  1454                           ;incstack = 0
  1455  000FC4  0E00               	movlw	0
  1456  000FC6  6E07               	movwf	?_MOC_NOTWORK+1,c
  1457  000FC8  6806               	setf	?_MOC_NOTWORK,c
  1458  000FCA  0012               	return		;funcret
  1459  000FCC                     __end_of_MOC_NOTWORK:
  1460                           	opt callstack 0
  1461                           
  1462 ;; *************** function _MOC_Frame_Counter *****************
  1463 ;; Defined at:
  1464 ;;		line 33 in file "MOC_Funct.c"
  1465 ;; Parameters:    Size  Location     Type
  1466 ;;		None
  1467 ;; Auto vars:     Size  Location     Type
  1468 ;;		None
  1469 ;; Return value:  Size  Location     Type
  1470 ;;                  2    5[COMRAM] unsigned int 
  1471 ;; Registers used:
  1472 ;;		wreg, status,2
  1473 ;; Tracked objects:
  1474 ;;		On entry : 0/0
  1475 ;;		On exit  : 0/0
  1476 ;;		Unchanged: 0/0
  1477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1478 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1481 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1482 ;;Total ram usage:        2 bytes
  1483 ;; Hardware stack levels used:    1
  1484 ;; Hardware stack levels required when called:    3
  1485 ;; This function calls:
  1486 ;;		Nothing
  1487 ;; This function is called by:
  1488 ;;		_FRAME_SensorExcitationStatus
  1489 ;; This function uses a non-reentrant model
  1490 ;;
  1491                           
  1492                           	psect	text10
  1493  000F92                     __ptext10:
  1494                           	opt callstack 0
  1495  000F92                     _MOC_Frame_Counter:
  1496                           	opt callstack 24
  1497                           
  1498                           ;MOC_Funct.c: 35:     return 0x47;
  1499                           
  1500                           ;incstack = 0
  1501  000F92  0E00               	movlw	0
  1502  000F94  6E07               	movwf	?_MOC_Frame_Counter+1,c
  1503  000F96  0E47               	movlw	71
  1504  000F98  6E06               	movwf	?_MOC_Frame_Counter,c
  1505  000F9A  0012               	return		;funcret
  1506  000F9C                     __end_of_MOC_Frame_Counter:
  1507                           	opt callstack 0
  1508                           
  1509 ;; *************** function _MOC_Aktualna_Temperatura *****************
  1510 ;; Defined at:
  1511 ;;		line 37 in file "MOC_Funct.c"
  1512 ;; Parameters:    Size  Location     Type
  1513 ;;		None
  1514 ;; Auto vars:     Size  Location     Type
  1515 ;;		None
  1516 ;; Return value:  Size  Location     Type
  1517 ;;                  2    5[COMRAM] unsigned int 
  1518 ;; Registers used:
  1519 ;;		wreg, status,2
  1520 ;; Tracked objects:
  1521 ;;		On entry : 0/0
  1522 ;;		On exit  : 0/0
  1523 ;;		Unchanged: 0/0
  1524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1525 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1528 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1529 ;;Total ram usage:        2 bytes
  1530 ;; Hardware stack levels used:    1
  1531 ;; Hardware stack levels required when called:    3
  1532 ;; This function calls:
  1533 ;;		Nothing
  1534 ;; This function is called by:
  1535 ;;		_FRAME_SensorExcitationStatus
  1536 ;; This function uses a non-reentrant model
  1537 ;;
  1538                           
  1539                           	psect	text11
  1540  000F9C                     __ptext11:
  1541                           	opt callstack 0
  1542  000F9C                     _MOC_Aktualna_Temperatura:
  1543                           	opt callstack 24
  1544                           
  1545                           ;MOC_Funct.c: 39:     return 0x1B;
  1546                           
  1547                           ;incstack = 0
  1548  000F9C  0E00               	movlw	0
  1549  000F9E  6E07               	movwf	?_MOC_Aktualna_Temperatura+1,c
  1550  000FA0  0E1B               	movlw	27
  1551  000FA2  6E06               	movwf	?_MOC_Aktualna_Temperatura,c
  1552  000FA4  0012               	return		;funcret
  1553  000FA6                     __end_of_MOC_Aktualna_Temperatura:
  1554                           	opt callstack 0
  1555                           
  1556 ;; *************** function _FRAME_Plot *****************
  1557 ;; Defined at:
  1558 ;;		line 302 in file "FRAME.c"
  1559 ;; Parameters:    Size  Location     Type
  1560 ;;  message         2    5[COMRAM] PTR struct .
  1561 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1562 ;; Auto vars:     Size  Location     Type
  1563 ;;		None
  1564 ;; Return value:  Size  Location     Type
  1565 ;;                  1    wreg      void 
  1566 ;; Registers used:
  1567 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1568 ;; Tracked objects:
  1569 ;;		On entry : 0/0
  1570 ;;		On exit  : 0/0
  1571 ;;		Unchanged: 0/0
  1572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1573 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1576 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1577 ;;Total ram usage:        2 bytes
  1578 ;; Hardware stack levels used:    1
  1579 ;; Hardware stack levels required when called:    3
  1580 ;; This function calls:
  1581 ;;		Nothing
  1582 ;; This function is called by:
  1583 ;;		_FRAME_HandleCanFrame
  1584 ;; This function uses a non-reentrant model
  1585 ;;
  1586                           
  1587                           	psect	text12
  1588  000EC2                     __ptext12:
  1589                           	opt callstack 0
  1590  000EC2                     _FRAME_Plot:
  1591                           	opt callstack 25
  1592                           
  1593                           ;FRAME.c: 302: static void FRAME_Plot(mID *message);FRAME.c: 303: {;FRAME.c: 314:     me
      +                          ssage->data_length = 1;
  1594                           
  1595                           ;incstack = 0
  1596  000EC2  EE20 F010          	lfsr	2,16
  1597  000EC6  5006               	movf	FRAME_Plot@message,w,c
  1598  000EC8  26D9               	addwf	fsr2l,f,c
  1599  000ECA  5007               	movf	FRAME_Plot@message+1,w,c
  1600  000ECC  22DA               	addwfc	fsr2h,f,c
  1601  000ECE  0E01               	movlw	1
  1602  000ED0  6EDF               	movwf	indf2,c
  1603                           
  1604                           ;FRAME.c: 315:     message->data[0] = 0xFF;
  1605  000ED2  EE20 F008          	lfsr	2,8
  1606  000ED6  5006               	movf	FRAME_Plot@message,w,c
  1607  000ED8  26D9               	addwf	fsr2l,f,c
  1608  000EDA  5007               	movf	FRAME_Plot@message+1,w,c
  1609  000EDC  22DA               	addwfc	fsr2h,f,c
  1610  000EDE  0EFF               	movlw	255
  1611  000EE0  6EDF               	movwf	indf2,c
  1612  000EE2  0012               	return		;funcret
  1613  000EE4                     __end_of_FRAME_Plot:
  1614                           	opt callstack 0
  1615                           
  1616 ;; *************** function _FRAME_MapPosition *****************
  1617 ;; Defined at:
  1618 ;;		line 324 in file "FRAME.c"
  1619 ;; Parameters:    Size  Location     Type
  1620 ;;  message         2    5[COMRAM] PTR struct .
  1621 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1622 ;; Auto vars:     Size  Location     Type
  1623 ;;		None
  1624 ;; Return value:  Size  Location     Type
  1625 ;;                  1    wreg      void 
  1626 ;; Registers used:
  1627 ;;		None
  1628 ;; Tracked objects:
  1629 ;;		On entry : 0/0
  1630 ;;		On exit  : 0/0
  1631 ;;		Unchanged: 0/0
  1632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1633 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1636 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1637 ;;Total ram usage:        2 bytes
  1638 ;; Hardware stack levels used:    1
  1639 ;; Hardware stack levels required when called:    3
  1640 ;; This function calls:
  1641 ;;		Nothing
  1642 ;; This function is called by:
  1643 ;;		_FRAME_HandleCanFrame
  1644 ;; This function uses a non-reentrant model
  1645 ;;
  1646                           
  1647                           	psect	text13
  1648  000FDC                     __ptext13:
  1649                           	opt callstack 0
  1650  000FDC                     _FRAME_MapPosition:
  1651                           	opt callstack 25
  1652                           
  1653                           ;incstack = 0
  1654  000FDC  0012               	return		;funcret
  1655  000FDE                     __end_of_FRAME_MapPosition:
  1656                           	opt callstack 0
  1657                           
  1658 ;; *************** function _FRAME_ExcitationValue *****************
  1659 ;; Defined at:
  1660 ;;		line 91 in file "FRAME.c"
  1661 ;; Parameters:    Size  Location     Type
  1662 ;;  message         2    5[COMRAM] PTR struct .
  1663 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1664 ;; Auto vars:     Size  Location     Type
  1665 ;;		None
  1666 ;; Return value:  Size  Location     Type
  1667 ;;                  1    wreg      void 
  1668 ;; Registers used:
  1669 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1670 ;; Tracked objects:
  1671 ;;		On entry : 0/0
  1672 ;;		On exit  : 0/0
  1673 ;;		Unchanged: 0/0
  1674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1675 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1677 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1678 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1679 ;;Total ram usage:        3 bytes
  1680 ;; Hardware stack levels used:    1
  1681 ;; Hardware stack levels required when called:    3
  1682 ;; This function calls:
  1683 ;;		Nothing
  1684 ;; This function is called by:
  1685 ;;		_FRAME_HandleCanFrame
  1686 ;; This function uses a non-reentrant model
  1687 ;;
  1688                           
  1689                           	psect	text14
  1690  000D12                     __ptext14:
  1691                           	opt callstack 0
  1692  000D12                     _FRAME_ExcitationValue:
  1693                           	opt callstack 25
  1694                           
  1695                           ;FRAME.c: 91: static void FRAME_ExcitationValue(mID *message);FRAME.c: 92: {;FRAME.c: 93
      +                          :     if(message->message_type == 0x02)
  1696                           
  1697                           ;incstack = 0
  1698  000D12  EE20 F001          	lfsr	2,1
  1699  000D16  5006               	movf	FRAME_ExcitationValue@message,w,c
  1700  000D18  26D9               	addwf	fsr2l,f,c
  1701  000D1A  5007               	movf	FRAME_ExcitationValue@message+1,w,c
  1702  000D1C  22DA               	addwfc	fsr2h,f,c
  1703  000D1E  0E02               	movlw	2
  1704  000D20  18DE               	xorwf	postinc2,w,c
  1705  000D22  A4D8               	btfss	status,2,c
  1706  000D24  0012               	return	
  1707                           
  1708                           ;FRAME.c: 94:     {;FRAME.c: 95:         message->data_length = 1;
  1709  000D26  EE20 F010          	lfsr	2,16
  1710  000D2A  5006               	movf	FRAME_ExcitationValue@message,w,c
  1711  000D2C  26D9               	addwf	fsr2l,f,c
  1712  000D2E  5007               	movf	FRAME_ExcitationValue@message+1,w,c
  1713  000D30  22DA               	addwfc	fsr2h,f,c
  1714  000D32  0E01               	movlw	1
  1715  000D34  6EDF               	movwf	indf2,c
  1716                           
  1717                           ;FRAME.c: 100:         message->data[0] = 0xFF;
  1718  000D36  EE20 F008          	lfsr	2,8
  1719  000D3A  5006               	movf	FRAME_ExcitationValue@message,w,c
  1720  000D3C  26D9               	addwf	fsr2l,f,c
  1721  000D3E  5007               	movf	FRAME_ExcitationValue@message+1,w,c
  1722  000D40  22DA               	addwfc	fsr2h,f,c
  1723  000D42  0EFF               	movlw	255
  1724  000D44  6EDF               	movwf	indf2,c
  1725                           
  1726                           ;FRAME.c: 101:     }
  1727  000D46  0012               	return		;funcret
  1728  000D48                     __end_of_FRAME_ExcitationValue:
  1729                           	opt callstack 0
  1730                           
  1731 ;; *************** function _FRAME_ExcitationMultiplier *****************
  1732 ;; Defined at:
  1733 ;;		line 115 in file "FRAME.c"
  1734 ;; Parameters:    Size  Location     Type
  1735 ;;  message         2    5[COMRAM] PTR struct .
  1736 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1737 ;; Auto vars:     Size  Location     Type
  1738 ;;  i               2    8[COMRAM] unsigned short 
  1739 ;; Return value:  Size  Location     Type
  1740 ;;                  1    wreg      void 
  1741 ;; Registers used:
  1742 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1743 ;; Tracked objects:
  1744 ;;		On entry : 0/0
  1745 ;;		On exit  : 0/0
  1746 ;;		Unchanged: 0/0
  1747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1748 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1749 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1750 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1751 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1752 ;;Total ram usage:        5 bytes
  1753 ;; Hardware stack levels used:    1
  1754 ;; Hardware stack levels required when called:    3
  1755 ;; This function calls:
  1756 ;;		Nothing
  1757 ;; This function is called by:
  1758 ;;		_FRAME_HandleCanFrame
  1759 ;; This function uses a non-reentrant model
  1760 ;;
  1761                           
  1762                           	psect	text15
  1763  000BF0                     __ptext15:
  1764                           	opt callstack 0
  1765  000BF0                     _FRAME_ExcitationMultiplier:
  1766                           	opt callstack 25
  1767                           
  1768                           ;FRAME.c: 115: static void FRAME_ExcitationMultiplier(mID *message);FRAME.c: 116: {;FRAM
      +                          E.c: 117:     WORD i;;FRAME.c: 119:     if(message->message_type == 0x02)
  1769                           
  1770                           ;incstack = 0
  1771  000BF0  EE20 F001          	lfsr	2,1
  1772  000BF4  5006               	movf	FRAME_ExcitationMultiplier@message,w,c
  1773  000BF6  26D9               	addwf	fsr2l,f,c
  1774  000BF8  5007               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  1775  000BFA  22DA               	addwfc	fsr2h,f,c
  1776  000BFC  0E02               	movlw	2
  1777  000BFE  18DE               	xorwf	postinc2,w,c
  1778  000C00  A4D8               	btfss	status,2,c
  1779  000C02  0012               	return	
  1780                           
  1781                           ;FRAME.c: 120:     {;FRAME.c: 121:         message->data_length = 1;
  1782  000C04  EE20 F010          	lfsr	2,16
  1783  000C08  5006               	movf	FRAME_ExcitationMultiplier@message,w,c
  1784  000C0A  26D9               	addwf	fsr2l,f,c
  1785  000C0C  5007               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  1786  000C0E  22DA               	addwfc	fsr2h,f,c
  1787  000C10  0E01               	movlw	1
  1788  000C12  6EDF               	movwf	indf2,c
  1789                           
  1790                           ;FRAME.c: 122:         for(i=0; i<3; i++)
  1791  000C14  0E00               	movlw	0
  1792  000C16  6E0A               	movwf	FRAME_ExcitationMultiplier@i+1,c
  1793  000C18  0E00               	movlw	0
  1794  000C1A  6E09               	movwf	FRAME_ExcitationMultiplier@i,c
  1795  000C1C                     l2377:
  1796                           
  1797                           ;FRAME.c: 123:         {;FRAME.c: 126:         }
  1798  000C1C  4A09               	infsnz	FRAME_ExcitationMultiplier@i,f,c
  1799  000C1E  2A0A               	incf	FRAME_ExcitationMultiplier@i+1,f,c
  1800  000C20  500A               	movf	FRAME_ExcitationMultiplier@i+1,w,c
  1801  000C22  E104               	bnz	u1040
  1802  000C24  0E03               	movlw	3
  1803  000C26  5C09               	subwf	FRAME_ExcitationMultiplier@i,w,c
  1804  000C28  A0D8               	btfss	status,0,c
  1805  000C2A  D7F8               	goto	l2377
  1806  000C2C                     u1040:
  1807                           
  1808                           ;FRAME.c: 127:         message->data[0] = 0xFF;
  1809  000C2C  EE20 F008          	lfsr	2,8
  1810  000C30  5006               	movf	FRAME_ExcitationMultiplier@message,w,c
  1811  000C32  26D9               	addwf	fsr2l,f,c
  1812  000C34  5007               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  1813  000C36  22DA               	addwfc	fsr2h,f,c
  1814  000C38  0EFF               	movlw	255
  1815  000C3A  6EDF               	movwf	indf2,c
  1816                           
  1817                           ;FRAME.c: 128:     }
  1818  000C3C  0012               	return		;funcret
  1819  000C3E                     __end_of_FRAME_ExcitationMultiplier:
  1820                           	opt callstack 0
  1821                           
  1822 ;; *************** function _FRAME_DeviceReset *****************
  1823 ;; Defined at:
  1824 ;;		line 249 in file "FRAME.c"
  1825 ;; Parameters:    Size  Location     Type
  1826 ;;  message         2    5[COMRAM] PTR struct .
  1827 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1828 ;; Auto vars:     Size  Location     Type
  1829 ;;		None
  1830 ;; Return value:  Size  Location     Type
  1831 ;;                  1    wreg      void 
  1832 ;; Registers used:
  1833 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1834 ;; Tracked objects:
  1835 ;;		On entry : 0/0
  1836 ;;		On exit  : 0/0
  1837 ;;		Unchanged: 0/0
  1838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1839 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1841 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1842 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1843 ;;Total ram usage:        3 bytes
  1844 ;; Hardware stack levels used:    1
  1845 ;; Hardware stack levels required when called:    3
  1846 ;; This function calls:
  1847 ;;		Nothing
  1848 ;; This function is called by:
  1849 ;;		_FRAME_HandleCanFrame
  1850 ;; This function uses a non-reentrant model
  1851 ;;
  1852                           
  1853                           	psect	text16
  1854  000A9A                     __ptext16:
  1855                           	opt callstack 0
  1856  000A9A                     _FRAME_DeviceReset:
  1857                           	opt callstack 25
  1858                           
  1859                           ;FRAME.c: 249: static void FRAME_DeviceReset(mID *message);FRAME.c: 250: {;FRAME.c: 251:
      +                               if(message->message_type == 0x02)
  1860                           
  1861                           ;incstack = 0
  1862  000A9A  EE20 F001          	lfsr	2,1
  1863  000A9E  5006               	movf	FRAME_DeviceReset@message,w,c
  1864  000AA0  26D9               	addwf	fsr2l,f,c
  1865  000AA2  5007               	movf	FRAME_DeviceReset@message+1,w,c
  1866  000AA4  22DA               	addwfc	fsr2h,f,c
  1867  000AA6  0E02               	movlw	2
  1868  000AA8  18DE               	xorwf	postinc2,w,c
  1869  000AAA  A4D8               	btfss	status,2,c
  1870  000AAC  D011               	goto	l2395
  1871                           
  1872                           ;FRAME.c: 252:     {;FRAME.c: 253:         message->data_length = 1;
  1873  000AAE  EE20 F010          	lfsr	2,16
  1874  000AB2  5006               	movf	FRAME_DeviceReset@message,w,c
  1875  000AB4  26D9               	addwf	fsr2l,f,c
  1876  000AB6  5007               	movf	FRAME_DeviceReset@message+1,w,c
  1877  000AB8  22DA               	addwfc	fsr2h,f,c
  1878  000ABA  0E01               	movlw	1
  1879  000ABC  6EDF               	movwf	indf2,c
  1880                           
  1881                           ;FRAME.c: 266:         message->data[0] = 0xFF;
  1882  000ABE  EE20 F008          	lfsr	2,8
  1883  000AC2  5006               	movf	FRAME_DeviceReset@message,w,c
  1884  000AC4  26D9               	addwf	fsr2l,f,c
  1885  000AC6  5007               	movf	FRAME_DeviceReset@message+1,w,c
  1886  000AC8  22DA               	addwfc	fsr2h,f,c
  1887  000ACA  0EFF               	movlw	255
  1888  000ACC  6EDF               	movwf	indf2,c
  1889                           
  1890                           ;FRAME.c: 267:     }
  1891  000ACE  0012               	return	
  1892  000AD0                     l2395:
  1893                           
  1894                           ;FRAME.c: 269:     {;FRAME.c: 270:         message->data_length = 1;
  1895  000AD0  EE20 F010          	lfsr	2,16
  1896  000AD4  5006               	movf	FRAME_DeviceReset@message,w,c
  1897  000AD6  26D9               	addwf	fsr2l,f,c
  1898  000AD8  5007               	movf	FRAME_DeviceReset@message+1,w,c
  1899  000ADA  22DA               	addwfc	fsr2h,f,c
  1900  000ADC  0E01               	movlw	1
  1901  000ADE  6EDF               	movwf	indf2,c
  1902                           
  1903                           ;FRAME.c: 292:         message->data[0] = 0xFF;
  1904  000AE0  EE20 F008          	lfsr	2,8
  1905  000AE4  5006               	movf	FRAME_DeviceReset@message,w,c
  1906  000AE6  26D9               	addwf	fsr2l,f,c
  1907  000AE8  5007               	movf	FRAME_DeviceReset@message+1,w,c
  1908  000AEA  22DA               	addwfc	fsr2h,f,c
  1909  000AEC  0EFF               	movlw	255
  1910  000AEE  6EDF               	movwf	indf2,c
  1911  000AF0  0012               	return		;funcret
  1912  000AF2                     __end_of_FRAME_DeviceReset:
  1913                           	opt callstack 0
  1914                           
  1915 ;; *************** function _FRAME_AxisStatus *****************
  1916 ;; Defined at:
  1917 ;;		line 202 in file "FRAME.c"
  1918 ;; Parameters:    Size  Location     Type
  1919 ;;  message         2    5[COMRAM] PTR struct .
  1920 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1921 ;; Auto vars:     Size  Location     Type
  1922 ;;  i               2    0        unsigned short 
  1923 ;; Return value:  Size  Location     Type
  1924 ;;                  1    wreg      void 
  1925 ;; Registers used:
  1926 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1927 ;; Tracked objects:
  1928 ;;		On entry : 0/0
  1929 ;;		On exit  : 0/0
  1930 ;;		Unchanged: 0/0
  1931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1932 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1934 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1935 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1936 ;;Total ram usage:        3 bytes
  1937 ;; Hardware stack levels used:    1
  1938 ;; Hardware stack levels required when called:    3
  1939 ;; This function calls:
  1940 ;;		Nothing
  1941 ;; This function is called by:
  1942 ;;		_FRAME_HandleCanFrame
  1943 ;; This function uses a non-reentrant model
  1944 ;;
  1945                           
  1946                           	psect	text17
  1947  000D48                     __ptext17:
  1948                           	opt callstack 0
  1949  000D48                     _FRAME_AxisStatus:
  1950                           	opt callstack 25
  1951                           
  1952                           ;FRAME.c: 202: static void FRAME_AxisStatus(mID *message);FRAME.c: 203: {;FRAME.c: 204: 
      +                              WORD i;;FRAME.c: 206:     if(message->message_type == 0x02)
  1953                           
  1954                           ;incstack = 0
  1955  000D48  EE20 F001          	lfsr	2,1
  1956  000D4C  5006               	movf	FRAME_AxisStatus@message,w,c
  1957  000D4E  26D9               	addwf	fsr2l,f,c
  1958  000D50  5007               	movf	FRAME_AxisStatus@message+1,w,c
  1959  000D52  22DA               	addwfc	fsr2h,f,c
  1960  000D54  0E02               	movlw	2
  1961  000D56  18DE               	xorwf	postinc2,w,c
  1962  000D58  A4D8               	btfss	status,2,c
  1963  000D5A  0012               	return	
  1964                           
  1965                           ;FRAME.c: 207:     {;FRAME.c: 208:         message->data_length = 1;
  1966  000D5C  EE20 F010          	lfsr	2,16
  1967  000D60  5006               	movf	FRAME_AxisStatus@message,w,c
  1968  000D62  26D9               	addwf	fsr2l,f,c
  1969  000D64  5007               	movf	FRAME_AxisStatus@message+1,w,c
  1970  000D66  22DA               	addwfc	fsr2h,f,c
  1971  000D68  0E01               	movlw	1
  1972  000D6A  6EDF               	movwf	indf2,c
  1973                           
  1974                           ;FRAME.c: 219:         message->data[0] = 0xFF;
  1975  000D6C  EE20 F008          	lfsr	2,8
  1976  000D70  5006               	movf	FRAME_AxisStatus@message,w,c
  1977  000D72  26D9               	addwf	fsr2l,f,c
  1978  000D74  5007               	movf	FRAME_AxisStatus@message+1,w,c
  1979  000D76  22DA               	addwfc	fsr2h,f,c
  1980  000D78  0EFF               	movlw	255
  1981  000D7A  6EDF               	movwf	indf2,c
  1982                           
  1983                           ;FRAME.c: 220:     }
  1984  000D7C  0012               	return		;funcret
  1985  000D7E                     __end_of_FRAME_AxisStatus:
  1986                           	opt callstack 0
  1987                           
  1988 ;; *************** function _FRAME_AveragingTimes *****************
  1989 ;; Defined at:
  1990 ;;		line 143 in file "FRAME.c"
  1991 ;; Parameters:    Size  Location     Type
  1992 ;;  message         2    5[COMRAM] PTR struct .
  1993 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1994 ;; Auto vars:     Size  Location     Type
  1995 ;;		None
  1996 ;; Return value:  Size  Location     Type
  1997 ;;                  1    wreg      void 
  1998 ;; Registers used:
  1999 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2000 ;; Tracked objects:
  2001 ;;		On entry : 0/0
  2002 ;;		On exit  : 0/0
  2003 ;;		Unchanged: 0/0
  2004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2005 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2007 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2008 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2009 ;;Total ram usage:        3 bytes
  2010 ;; Hardware stack levels used:    1
  2011 ;; Hardware stack levels required when called:    3
  2012 ;; This function calls:
  2013 ;;		Nothing
  2014 ;; This function is called by:
  2015 ;;		_FRAME_HandleCanFrame
  2016 ;; This function uses a non-reentrant model
  2017 ;;
  2018                           
  2019                           	psect	text18
  2020  000D7E                     __ptext18:
  2021                           	opt callstack 0
  2022  000D7E                     _FRAME_AveragingTimes:
  2023                           	opt callstack 25
  2024                           
  2025                           ;FRAME.c: 143: static void FRAME_AveragingTimes(mID *message);FRAME.c: 144: {;FRAME.c: 1
      +                          45:     if(message->message_type == 0x02)
  2026                           
  2027                           ;incstack = 0
  2028  000D7E  EE20 F001          	lfsr	2,1
  2029  000D82  5006               	movf	FRAME_AveragingTimes@message,w,c
  2030  000D84  26D9               	addwf	fsr2l,f,c
  2031  000D86  5007               	movf	FRAME_AveragingTimes@message+1,w,c
  2032  000D88  22DA               	addwfc	fsr2h,f,c
  2033  000D8A  0E02               	movlw	2
  2034  000D8C  18DE               	xorwf	postinc2,w,c
  2035  000D8E  A4D8               	btfss	status,2,c
  2036  000D90  0012               	return	
  2037                           
  2038                           ;FRAME.c: 146:     {;FRAME.c: 147:         message->data_length = 1;
  2039  000D92  EE20 F010          	lfsr	2,16
  2040  000D96  5006               	movf	FRAME_AveragingTimes@message,w,c
  2041  000D98  26D9               	addwf	fsr2l,f,c
  2042  000D9A  5007               	movf	FRAME_AveragingTimes@message+1,w,c
  2043  000D9C  22DA               	addwfc	fsr2h,f,c
  2044  000D9E  0E01               	movlw	1
  2045  000DA0  6EDF               	movwf	indf2,c
  2046                           
  2047                           ;FRAME.c: 155:         message->data[0] = 0xFF;
  2048  000DA2  EE20 F008          	lfsr	2,8
  2049  000DA6  5006               	movf	FRAME_AveragingTimes@message,w,c
  2050  000DA8  26D9               	addwf	fsr2l,f,c
  2051  000DAA  5007               	movf	FRAME_AveragingTimes@message+1,w,c
  2052  000DAC  22DA               	addwfc	fsr2h,f,c
  2053  000DAE  0EFF               	movlw	255
  2054  000DB0  6EDF               	movwf	indf2,c
  2055                           
  2056                           ;FRAME.c: 156:     }
  2057  000DB2  0012               	return		;funcret
  2058  000DB4                     __end_of_FRAME_AveragingTimes:
  2059                           	opt callstack 0
  2060                           
  2061 ;; *************** function _FRAME_AnalogValue *****************
  2062 ;; Defined at:
  2063 ;;		line 372 in file "FRAME.c"
  2064 ;; Parameters:    Size  Location     Type
  2065 ;;  message         2    5[COMRAM] PTR struct .
  2066 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2067 ;;  set             2    7[COMRAM] unsigned short 
  2068 ;; Auto vars:     Size  Location     Type
  2069 ;;  i               2    0        unsigned short 
  2070 ;; Return value:  Size  Location     Type
  2071 ;;                  1    wreg      void 
  2072 ;; Registers used:
  2073 ;;		None
  2074 ;; Tracked objects:
  2075 ;;		On entry : 0/0
  2076 ;;		On exit  : 0/0
  2077 ;;		Unchanged: 0/0
  2078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2079 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2082 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2083 ;;Total ram usage:        4 bytes
  2084 ;; Hardware stack levels used:    1
  2085 ;; Hardware stack levels required when called:    3
  2086 ;; This function calls:
  2087 ;;		Nothing
  2088 ;; This function is called by:
  2089 ;;		_FRAME_HandleCanFrame
  2090 ;; This function uses a non-reentrant model
  2091 ;;
  2092                           
  2093                           	psect	text19
  2094  000FDE                     __ptext19:
  2095                           	opt callstack 0
  2096  000FDE                     _FRAME_AnalogValue:
  2097                           	opt callstack 25
  2098                           
  2099                           ;incstack = 0
  2100  000FDE  0012               	return		;funcret
  2101  000FE0                     __end_of_FRAME_AnalogValue:
  2102                           	opt callstack 0
  2103                           
  2104 ;; *************** function _FRAME_AdressOfNeighbors *****************
  2105 ;; Defined at:
  2106 ;;		line 415 in file "FRAME.c"
  2107 ;; Parameters:    Size  Location     Type
  2108 ;;  message         2    5[COMRAM] PTR struct .
  2109 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2110 ;;  nrRamki         2    7[COMRAM] unsigned short 
  2111 ;; Auto vars:     Size  Location     Type
  2112 ;;  i               2    0        unsigned short 
  2113 ;; Return value:  Size  Location     Type
  2114 ;;                  1    wreg      void 
  2115 ;; Registers used:
  2116 ;;		None
  2117 ;; Tracked objects:
  2118 ;;		On entry : 0/0
  2119 ;;		On exit  : 0/0
  2120 ;;		Unchanged: 0/0
  2121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2122 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2125 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2126 ;;Total ram usage:        4 bytes
  2127 ;; Hardware stack levels used:    1
  2128 ;; Hardware stack levels required when called:    3
  2129 ;; This function calls:
  2130 ;;		Nothing
  2131 ;; This function is called by:
  2132 ;;		_FRAME_HandleCanFrame
  2133 ;; This function uses a non-reentrant model
  2134 ;;
  2135                           
  2136                           	psect	text20
  2137  000FE0                     __ptext20:
  2138                           	opt callstack 0
  2139  000FE0                     _FRAME_AdressOfNeighbors:
  2140                           	opt callstack 25
  2141                           
  2142                           ;incstack = 0
  2143  000FE0  0012               	return		;funcret
  2144  000FE2                     __end_of_FRAME_AdressOfNeighbors:
  2145                           	opt callstack 0
  2146                           
  2147 ;; *************** function _FRAME_AccelerometerStatus *****************
  2148 ;; Defined at:
  2149 ;;		line 69 in file "FRAME.c"
  2150 ;; Parameters:    Size  Location     Type
  2151 ;;  message         2    5[COMRAM] PTR struct .
  2152 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2153 ;; Auto vars:     Size  Location     Type
  2154 ;;		None
  2155 ;; Return value:  Size  Location     Type
  2156 ;;                  1    wreg      void 
  2157 ;; Registers used:
  2158 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2159 ;; Tracked objects:
  2160 ;;		On entry : 0/0
  2161 ;;		On exit  : 0/0
  2162 ;;		Unchanged: 0/0
  2163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2164 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2166 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2167 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2168 ;;Total ram usage:        3 bytes
  2169 ;; Hardware stack levels used:    1
  2170 ;; Hardware stack levels required when called:    3
  2171 ;; This function calls:
  2172 ;;		Nothing
  2173 ;; This function is called by:
  2174 ;;		_FRAME_HandleCanFrame
  2175 ;; This function uses a non-reentrant model
  2176 ;;
  2177                           
  2178                           	psect	text21
  2179  000DB4                     __ptext21:
  2180                           	opt callstack 0
  2181  000DB4                     _FRAME_AccelerometerStatus:
  2182                           	opt callstack 25
  2183                           
  2184                           ;FRAME.c: 69: static void FRAME_AccelerometerStatus(mID *message);FRAME.c: 70: {;FRAME.c
      +                          : 71:     if(message->message_type == 0x02)
  2185                           
  2186                           ;incstack = 0
  2187  000DB4  EE20 F001          	lfsr	2,1
  2188  000DB8  5006               	movf	FRAME_AccelerometerStatus@message,w,c
  2189  000DBA  26D9               	addwf	fsr2l,f,c
  2190  000DBC  5007               	movf	FRAME_AccelerometerStatus@message+1,w,c
  2191  000DBE  22DA               	addwfc	fsr2h,f,c
  2192  000DC0  0E02               	movlw	2
  2193  000DC2  18DE               	xorwf	postinc2,w,c
  2194  000DC4  A4D8               	btfss	status,2,c
  2195  000DC6  0012               	return	
  2196                           
  2197                           ;FRAME.c: 72:     {;FRAME.c: 73:         message->data_length = 1;
  2198  000DC8  EE20 F010          	lfsr	2,16
  2199  000DCC  5006               	movf	FRAME_AccelerometerStatus@message,w,c
  2200  000DCE  26D9               	addwf	fsr2l,f,c
  2201  000DD0  5007               	movf	FRAME_AccelerometerStatus@message+1,w,c
  2202  000DD2  22DA               	addwfc	fsr2h,f,c
  2203  000DD4  0E01               	movlw	1
  2204  000DD6  6EDF               	movwf	indf2,c
  2205                           
  2206                           ;FRAME.c: 77:         message->data[0] = 0xFF;
  2207  000DD8  EE20 F008          	lfsr	2,8
  2208  000DDC  5006               	movf	FRAME_AccelerometerStatus@message,w,c
  2209  000DDE  26D9               	addwf	fsr2l,f,c
  2210  000DE0  5007               	movf	FRAME_AccelerometerStatus@message+1,w,c
  2211  000DE2  22DA               	addwfc	fsr2h,f,c
  2212  000DE4  0EFF               	movlw	255
  2213  000DE6  6EDF               	movwf	indf2,c
  2214                           
  2215                           ;FRAME.c: 78:     }
  2216  000DE8  0012               	return		;funcret
  2217  000DEA                     __end_of_FRAME_AccelerometerStatus:
  2218                           	opt callstack 0
  2219                           
  2220 ;; *************** function _CAN_SendFrame *****************
  2221 ;; Defined at:
  2222 ;;		line 183 in file "CAN.c"
  2223 ;; Parameters:    Size  Location     Type
  2224 ;;  message         2   10[COMRAM] PTR struct .
  2225 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2226 ;; Auto vars:     Size  Location     Type
  2227 ;;		None
  2228 ;; Return value:  Size  Location     Type
  2229 ;;                  1    wreg      void 
  2230 ;; Registers used:
  2231 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2232 ;; Tracked objects:
  2233 ;;		On entry : 0/0
  2234 ;;		On exit  : 0/0
  2235 ;;		Unchanged: 0/0
  2236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2237 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2239 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2240 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2241 ;;Total ram usage:        5 bytes
  2242 ;; Hardware stack levels used:    1
  2243 ;; Hardware stack levels required when called:    4
  2244 ;; This function calls:
  2245 ;;		_CAN_MoveBuffIntoFrame
  2246 ;; This function is called by:
  2247 ;;		_FRAME_HandleCanFrame
  2248 ;; This function uses a non-reentrant model
  2249 ;;
  2250                           
  2251                           	psect	text22
  2252  0004B8                     __ptext22:
  2253                           	opt callstack 0
  2254  0004B8                     _CAN_SendFrame:
  2255                           	opt callstack 24
  2256                           
  2257                           ;CAN.c: 188:     {;CAN.c: 189:         ECANCON = 0x83;
  2258                           
  2259                           ;incstack = 0
  2260                           ;CAN.c: 183: void CAN_SendFrame(mID * message);CAN.c: 184: {;CAN.c: 187:     for(;;)
  2261  0004B8  0E83               	movlw	131
  2262  0004BA  6E77               	movwf	3959,c	;volatile
  2263                           
  2264                           ;CAN.c: 190:         if(!RXB0CONbits.FILHIT3)
  2265  0004BC  A660               	btfss	3936,3,c	;volatile
  2266  0004BE  D00A               	goto	l177
  2267                           
  2268                           ;CAN.c: 195:         ECANCON = 0x84;
  2269  0004C0  0E84               	movlw	132
  2270  0004C2  6E77               	movwf	3959,c	;volatile
  2271                           
  2272                           ;CAN.c: 196:         if(!RXB0CONbits.FILHIT3)
  2273  0004C4  A660               	btfss	3936,3,c	;volatile
  2274  0004C6  D006               	goto	l177
  2275                           
  2276                           ;CAN.c: 201:         ECANCON = 0x85;
  2277  0004C8  0E85               	movlw	133
  2278  0004CA  6E77               	movwf	3959,c	;volatile
  2279                           
  2280                           ;CAN.c: 202:         if(!RXB0CONbits.FILHIT3)
  2281  0004CC  A660               	btfss	3936,3,c	;volatile
  2282  0004CE  D002               	goto	l177
  2283  0004D0  D7F3               	goto	_CAN_SendFrame
  2284  0004D2                     l178:
  2285  0004D2  00FF               	reset		;# 
  2286  0004D4                     l177:
  2287                           
  2288                           ;CAN.c: 209:     while(COMSTATbits.TXWARN)
  2289  0004D4  B474               	btfsc	3956,2,c	;volatile
  2290  0004D6  D7FD               	goto	l178
  2291                           
  2292                           ;CAN.c: 213:     DetectorLedRadar.timerRamkiTxCANU8 = 0;
  2293  0004D8  0E00               	movlw	0
  2294  0004DA  6E3E               	movwf	_DetectorLedRadar+1,c
  2295                           
  2296                           ;CAN.c: 214:     RXB0EIDL = message->id.v[0];
  2297  0004DC  EE20 F004          	lfsr	2,4
  2298  0004E0  500B               	movf	CAN_SendFrame@message,w,c
  2299  0004E2  26D9               	addwf	fsr2l,f,c
  2300  0004E4  500C               	movf	CAN_SendFrame@message+1,w,c
  2301  0004E6  22DA               	addwfc	fsr2h,f,c
  2302  0004E8  50DF               	movf	indf2,w,c
  2303  0004EA  6E64               	movwf	3940,c	;volatile
  2304                           
  2305                           ;CAN.c: 215:     RXB0EIDH = message->id.v[1];
  2306  0004EC  EE20 F005          	lfsr	2,5
  2307  0004F0  500B               	movf	CAN_SendFrame@message,w,c
  2308  0004F2  26D9               	addwf	fsr2l,f,c
  2309  0004F4  500C               	movf	CAN_SendFrame@message+1,w,c
  2310  0004F6  22DA               	addwfc	fsr2h,f,c
  2311  0004F8  50DF               	movf	indf2,w,c
  2312  0004FA  6E63               	movwf	3939,c	;volatile
  2313                           
  2314                           ;CAN.c: 216:     RXB0SIDL = ((message->id.v[2]&0xFC)*8) | (message->id.v[2] & (0x03));
  2315  0004FC  EE20 F006          	lfsr	2,6
  2316  000500  500B               	movf	CAN_SendFrame@message,w,c
  2317  000502  26D9               	addwf	fsr2l,f,c
  2318  000504  500C               	movf	CAN_SendFrame@message+1,w,c
  2319  000506  22DA               	addwfc	fsr2h,f,c
  2320  000508  50DF               	movf	indf2,w,c
  2321  00050A  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  2322  00050C  0E03               	movlw	3
  2323  00050E  160D               	andwf	??_CAN_SendFrame,f,c
  2324  000510  EE20 F006          	lfsr	2,6
  2325  000514  500B               	movf	CAN_SendFrame@message,w,c
  2326  000516  26D9               	addwf	fsr2l,f,c
  2327  000518  500C               	movf	CAN_SendFrame@message+1,w,c
  2328  00051A  22DA               	addwfc	fsr2h,f,c
  2329  00051C  50DF               	movf	indf2,w,c
  2330  00051E  0BFC               	andlw	252
  2331  000520  0D08               	mullw	8
  2332  000522  50F3               	movf	prodl,w,c
  2333  000524  100D               	iorwf	??_CAN_SendFrame,w,c
  2334  000526  6E62               	movwf	3938,c	;volatile
  2335                           
  2336                           ;CAN.c: 217:     RXB0SIDLbits.EXID = 1;
  2337  000528  8662               	bsf	3938,3,c	;volatile
  2338                           
  2339                           ;CAN.c: 218:     RXB0SIDH = (BYTE)(message->id.w[1]/32);
  2340  00052A  EE20 F006          	lfsr	2,6
  2341  00052E  500B               	movf	CAN_SendFrame@message,w,c
  2342  000530  26D9               	addwf	fsr2l,f,c
  2343  000532  500C               	movf	CAN_SendFrame@message+1,w,c
  2344  000534  22DA               	addwfc	fsr2h,f,c
  2345  000536  CFDE F00D          	movff	postinc2,??_CAN_SendFrame
  2346  00053A  CFDD F00E          	movff	postdec2,??_CAN_SendFrame+1
  2347  00053E  0E05               	movlw	5
  2348  000540  6E0F               	movwf	(??_CAN_SendFrame+2)& (0+255),c
  2349  000542                     u965:
  2350  000542  90D8               	bcf	status,0,c
  2351  000544  320E               	rrcf	??_CAN_SendFrame+1,f,c
  2352  000546  320D               	rrcf	??_CAN_SendFrame,f,c
  2353  000548  2E0F               	decfsz	(??_CAN_SendFrame+2)& (0+255),f,c
  2354  00054A  D7FB               	goto	u965
  2355  00054C  500D               	movf	??_CAN_SendFrame,w,c
  2356  00054E  6E61               	movwf	3937,c	;volatile
  2357                           
  2358                           ;CAN.c: 220:     RXB0DLC = 0;
  2359  000550  0E00               	movlw	0
  2360  000552  6E65               	movwf	3941,c	;volatile
  2361                           
  2362                           ;CAN.c: 222:     if(message->message_type==0x02)
  2363  000554  EE20 F001          	lfsr	2,1
  2364  000558  500B               	movf	CAN_SendFrame@message,w,c
  2365  00055A  26D9               	addwf	fsr2l,f,c
  2366  00055C  500C               	movf	CAN_SendFrame@message+1,w,c
  2367  00055E  22DA               	addwfc	fsr2h,f,c
  2368  000560  0E02               	movlw	2
  2369  000562  18DE               	xorwf	postinc2,w,c
  2370  000564  A4D8               	btfss	status,2,c
  2371  000566  D002               	goto	l2293
  2372                           
  2373                           ;CAN.c: 223:     {;CAN.c: 224:         RXB0DLCbits.RXRTR = 1;
  2374  000568  8C65               	bsf	3941,6,c	;volatile
  2375                           
  2376                           ;CAN.c: 225:     }
  2377  00056A  D05A               	goto	l2297
  2378  00056C                     l2293:
  2379                           
  2380                           ;CAN.c: 227:     {;CAN.c: 228:         RXB0DLCbits.DLC0 = (message->data_length & 0x0F);
  2381  00056C  EE20 F010          	lfsr	2,16
  2382  000570  500B               	movf	CAN_SendFrame@message,w,c
  2383  000572  26D9               	addwf	fsr2l,f,c
  2384  000574  500C               	movf	CAN_SendFrame@message+1,w,c
  2385  000576  22DA               	addwfc	fsr2h,f,c
  2386  000578  50DF               	movf	indf2,w,c
  2387  00057A  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  2388  00057C  0E0F               	movlw	15
  2389  00057E  160D               	andwf	??_CAN_SendFrame,f,c
  2390  000580  5065               	movf	3941,w,c	;volatile
  2391  000582  180D               	xorwf	??_CAN_SendFrame,w,c
  2392  000584  0BFE               	andlw	-2
  2393  000586  180D               	xorwf	??_CAN_SendFrame,w,c
  2394  000588  6E65               	movwf	3941,c	;volatile
  2395                           
  2396                           ;CAN.c: 229:         RXB0DLCbits.DLC1 = ((message->data_length & 0x0F)>> 1);
  2397  00058A  EE20 F010          	lfsr	2,16
  2398  00058E  500B               	movf	CAN_SendFrame@message,w,c
  2399  000590  26D9               	addwf	fsr2l,f,c
  2400  000592  500C               	movf	CAN_SendFrame@message+1,w,c
  2401  000594  22DA               	addwfc	fsr2h,f,c
  2402  000596  50DF               	movf	indf2,w,c
  2403  000598  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  2404  00059A  90D8               	bcf	status,0,c
  2405  00059C  320D               	rrcf	??_CAN_SendFrame,f,c
  2406  00059E  0E07               	movlw	7
  2407  0005A0  160D               	andwf	??_CAN_SendFrame,f,c
  2408  0005A2  460D               	rlncf	??_CAN_SendFrame,f,c
  2409  0005A4  5065               	movf	3941,w,c	;volatile
  2410  0005A6  180D               	xorwf	??_CAN_SendFrame,w,c
  2411  0005A8  0BFD               	andlw	-3
  2412  0005AA  180D               	xorwf	??_CAN_SendFrame,w,c
  2413  0005AC  6E65               	movwf	3941,c	;volatile
  2414                           
  2415                           ;CAN.c: 230:         RXB0DLCbits.DLC2 = ((message->data_length & 0x0F)>> 2);
  2416  0005AE  EE20 F010          	lfsr	2,16
  2417  0005B2  500B               	movf	CAN_SendFrame@message,w,c
  2418  0005B4  26D9               	addwf	fsr2l,f,c
  2419  0005B6  500C               	movf	CAN_SendFrame@message+1,w,c
  2420  0005B8  22DA               	addwfc	fsr2h,f,c
  2421  0005BA  50DF               	movf	indf2,w,c
  2422  0005BC  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  2423  0005BE  90D8               	bcf	status,0,c
  2424  0005C0  320D               	rrcf	??_CAN_SendFrame,f,c
  2425  0005C2  90D8               	bcf	status,0,c
  2426  0005C4  320D               	rrcf	??_CAN_SendFrame,f,c
  2427  0005C6  0E03               	movlw	3
  2428  0005C8  160D               	andwf	??_CAN_SendFrame,f,c
  2429  0005CA  460D               	rlncf	??_CAN_SendFrame,f,c
  2430  0005CC  460D               	rlncf	??_CAN_SendFrame,f,c
  2431  0005CE  5065               	movf	3941,w,c	;volatile
  2432  0005D0  180D               	xorwf	??_CAN_SendFrame,w,c
  2433  0005D2  0BFB               	andlw	-5
  2434  0005D4  180D               	xorwf	??_CAN_SendFrame,w,c
  2435  0005D6  6E65               	movwf	3941,c	;volatile
  2436                           
  2437                           ;CAN.c: 231:         RXB0DLCbits.DLC3 = ((message->data_length & 0x0F)>> 3);
  2438  0005D8  EE20 F010          	lfsr	2,16
  2439  0005DC  500B               	movf	CAN_SendFrame@message,w,c
  2440  0005DE  26D9               	addwf	fsr2l,f,c
  2441  0005E0  500C               	movf	CAN_SendFrame@message+1,w,c
  2442  0005E2  22DA               	addwfc	fsr2h,f,c
  2443  0005E4  50DF               	movf	indf2,w,c
  2444  0005E6  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  2445  0005E8  90D8               	bcf	status,0,c
  2446  0005EA  320D               	rrcf	??_CAN_SendFrame,f,c
  2447  0005EC  90D8               	bcf	status,0,c
  2448  0005EE  320D               	rrcf	??_CAN_SendFrame,f,c
  2449  0005F0  90D8               	bcf	status,0,c
  2450  0005F2  320D               	rrcf	??_CAN_SendFrame,f,c
  2451  0005F4  0E01               	movlw	1
  2452  0005F6  160D               	andwf	??_CAN_SendFrame,f,c
  2453  0005F8  460D               	rlncf	??_CAN_SendFrame,f,c
  2454  0005FA  460D               	rlncf	??_CAN_SendFrame,f,c
  2455  0005FC  460D               	rlncf	??_CAN_SendFrame,f,c
  2456  0005FE  5065               	movf	3941,w,c	;volatile
  2457  000600  180D               	xorwf	??_CAN_SendFrame,w,c
  2458  000602  0BF7               	andlw	-9
  2459  000604  180D               	xorwf	??_CAN_SendFrame,w,c
  2460  000606  6E65               	movwf	3941,c	;volatile
  2461                           
  2462                           ;CAN.c: 233:         CAN_MoveBuffIntoFrame(&RXB0D0, message->data);
  2463  000608  0E66               	movlw	102
  2464  00060A  6E06               	movwf	CAN_MoveBuffIntoFrame@Ram,c
  2465  00060C  0E0F               	movlw	15
  2466  00060E  6E07               	movwf	CAN_MoveBuffIntoFrame@Ram+1,c
  2467  000610  0E08               	movlw	8
  2468  000612  240B               	addwf	CAN_SendFrame@message,w,c
  2469  000614  6E08               	movwf	CAN_MoveBuffIntoFrame@Buf,c
  2470  000616  0E00               	movlw	0
  2471  000618  200C               	addwfc	CAN_SendFrame@message+1,w,c
  2472  00061A  6E09               	movwf	CAN_MoveBuffIntoFrame@Buf+1,c
  2473  00061C  EC26  F007         	call	_CAN_MoveBuffIntoFrame	;wreg free
  2474  000620                     l2297:
  2475                           
  2476                           ;CAN.c: 236:     RXB0CONbits.FILHIT3 = 1;
  2477  000620  8660               	bsf	3936,3,c	;volatile
  2478                           
  2479                           ;CAN.c: 238:     DetectorLedRadar.Flags.ramkaTx = 1;
  2480  000622  883D               	bsf	_DetectorLedRadar,4,c
  2481  000624  0012               	return		;funcret
  2482  000626                     __end_of_CAN_SendFrame:
  2483                           	opt callstack 0
  2484                           
  2485 ;; *************** function _CAN_GenID *****************
  2486 ;; Defined at:
  2487 ;;		line 382 in file "CAN.c"
  2488 ;; Parameters:    Size  Location     Type
  2489 ;;  message         2    5[COMRAM] PTR struct .
  2490 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2491 ;;  frameID         1    7[COMRAM] unsigned char 
  2492 ;; Auto vars:     Size  Location     Type
  2493 ;;		None
  2494 ;; Return value:  Size  Location     Type
  2495 ;;                  1    wreg      void 
  2496 ;; Registers used:
  2497 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2498 ;; Tracked objects:
  2499 ;;		On entry : 0/0
  2500 ;;		On exit  : 0/0
  2501 ;;		Unchanged: 0/0
  2502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2503 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2505 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2506 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2507 ;;Total ram usage:        5 bytes
  2508 ;; Hardware stack levels used:    1
  2509 ;; Hardware stack levels required when called:    3
  2510 ;; This function calls:
  2511 ;;		Nothing
  2512 ;; This function is called by:
  2513 ;;		_FRAME_HandleCanFrame
  2514 ;; This function uses a non-reentrant model
  2515 ;;
  2516                           
  2517                           	psect	text23
  2518  0008CC                     __ptext23:
  2519                           	opt callstack 0
  2520  0008CC                     _CAN_GenID:
  2521                           	opt callstack 25
  2522                           
  2523                           ;CAN.c: 382: void CAN_GenID(mID * message, BYTE frameID);CAN.c: 383: {;CAN.c: 385:     m
      +                          essage->frame_type = 0x03;
  2524                           
  2525                           ;incstack = 0
  2526  0008CC  EE20 F002          	lfsr	2,2
  2527  0008D0  5006               	movf	CAN_GenID@message,w,c
  2528  0008D2  26D9               	addwf	fsr2l,f,c
  2529  0008D4  5007               	movf	CAN_GenID@message+1,w,c
  2530  0008D6  22DA               	addwfc	fsr2h,f,c
  2531  0008D8  0E03               	movlw	3
  2532  0008DA  6EDF               	movwf	indf2,c
  2533                           
  2534                           ;CAN.c: 386:     message->message_type = 0x01;
  2535  0008DC  EE20 F001          	lfsr	2,1
  2536  0008E0  5006               	movf	CAN_GenID@message,w,c
  2537  0008E2  26D9               	addwf	fsr2l,f,c
  2538  0008E4  5007               	movf	CAN_GenID@message+1,w,c
  2539  0008E6  22DA               	addwfc	fsr2h,f,c
  2540  0008E8  0E01               	movlw	1
  2541  0008EA  6EDF               	movwf	indf2,c
  2542                           
  2543                           ;CAN.c: 387:     message->id.w[1] = (WORD)frameID * (WORD)4;
  2544  0008EC  5008               	movf	CAN_GenID@frameID,w,c
  2545  0008EE  6E09               	movwf	??_CAN_GenID& (0+255),c
  2546  0008F0  6A0A               	clrf	(??_CAN_GenID+1)& (0+255),c
  2547  0008F2  90D8               	bcf	status,0,c
  2548  0008F4  3609               	rlcf	??_CAN_GenID,f,c
  2549  0008F6  360A               	rlcf	??_CAN_GenID+1,f,c
  2550  0008F8  90D8               	bcf	status,0,c
  2551  0008FA  3609               	rlcf	??_CAN_GenID,f,c
  2552  0008FC  360A               	rlcf	??_CAN_GenID+1,f,c
  2553  0008FE  EE20 F006          	lfsr	2,6
  2554  000902  5006               	movf	CAN_GenID@message,w,c
  2555  000904  26D9               	addwf	fsr2l,f,c
  2556  000906  5007               	movf	CAN_GenID@message+1,w,c
  2557  000908  22DA               	addwfc	fsr2h,f,c
  2558  00090A  C009  FFDE         	movff	??_CAN_GenID,postinc2
  2559  00090E  C00A  FFDD         	movff	??_CAN_GenID+1,postdec2
  2560                           
  2561                           ;CAN.c: 388:     message->id.w[0] = DaneCan.adresCAN + 0x0010;
  2562  000912  0E10               	movlw	16
  2563  000914  2439               	addwf	_DaneCan+2,w,c
  2564  000916  6E09               	movwf	??_CAN_GenID& (0+255),c
  2565  000918  0E00               	movlw	0
  2566  00091A  203A               	addwfc	_DaneCan+3,w,c
  2567  00091C  6E0A               	movwf	(??_CAN_GenID+1)& (0+255),c
  2568  00091E  EE20 F004          	lfsr	2,4
  2569  000922  5006               	movf	CAN_GenID@message,w,c
  2570  000924  26D9               	addwf	fsr2l,f,c
  2571  000926  5007               	movf	CAN_GenID@message+1,w,c
  2572  000928  22DA               	addwfc	fsr2h,f,c
  2573  00092A  C009  FFDE         	movff	??_CAN_GenID,postinc2
  2574  00092E  C00A  FFDD         	movff	??_CAN_GenID+1,postdec2
  2575                           
  2576                           ;CAN.c: 391:     message ->id.bits.b16 = 0;
  2577  000932  EE20 F006          	lfsr	2,6
  2578  000936  5006               	movf	CAN_GenID@message,w,c
  2579  000938  26D9               	addwf	fsr2l,f,c
  2580  00093A  5007               	movf	CAN_GenID@message+1,w,c
  2581  00093C  22DA               	addwfc	fsr2h,f,c
  2582  00093E  90DF               	bcf	indf2,0,c
  2583                           
  2584                           ;CAN.c: 392:     message ->id.bits.b17 = 0;
  2585  000940  EE20 F006          	lfsr	2,6
  2586  000944  5006               	movf	CAN_GenID@message,w,c
  2587  000946  26D9               	addwf	fsr2l,f,c
  2588  000948  5007               	movf	CAN_GenID@message+1,w,c
  2589  00094A  22DA               	addwfc	fsr2h,f,c
  2590  00094C  92DF               	bcf	indf2,1,c
  2591  00094E  0012               	return		;funcret
  2592  000950                     __end_of_CAN_GenID:
  2593                           	opt callstack 0
  2594                           
  2595 ;; *************** function _CAN_TakeFrame *****************
  2596 ;; Defined at:
  2597 ;;		line 247 in file "CAN.c"
  2598 ;; Parameters:    Size  Location     Type
  2599 ;;  message         2   13[COMRAM] PTR struct .
  2600 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2601 ;; Auto vars:     Size  Location     Type
  2602 ;;  k               1   18[COMRAM] unsigned char 
  2603 ;;  tempCON         1   17[COMRAM] unsigned char 
  2604 ;; Return value:  Size  Location     Type
  2605 ;;                  1    wreg      enum E10433
  2606 ;; Registers used:
  2607 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2608 ;; Tracked objects:
  2609 ;;		On entry : 0/0
  2610 ;;		On exit  : 0/0
  2611 ;;		Unchanged: 0/0
  2612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2613 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2614 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2615 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2616 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2617 ;;Total ram usage:        6 bytes
  2618 ;; Hardware stack levels used:    1
  2619 ;; Hardware stack levels required when called:    4
  2620 ;; This function calls:
  2621 ;;		_CAN_MoveBuffIntoFrame
  2622 ;;		___awdiv
  2623 ;; This function is called by:
  2624 ;;		_TRM_DataTransmition
  2625 ;; This function uses a non-reentrant model
  2626 ;;
  2627                           
  2628                           	psect	text24
  2629  000060                     __ptext24:
  2630                           	opt callstack 0
  2631  000060                     _CAN_TakeFrame:
  2632                           	opt callstack 25
  2633                           
  2634                           ;CAN.c: 247: BOOL CAN_TakeFrame(mID * message);CAN.c: 248: {;CAN.c: 249:     BYTE k, tem
      +                          pCON;;CAN.c: 251:     k = CANCON&0x0F;
  2635                           
  2636                           ;incstack = 0
  2637  000060  506F               	movf	3951,w,c	;volatile
  2638  000062  0B0F               	andlw	15
  2639  000064  6E13               	movwf	CAN_TakeFrame@k,c
  2640                           
  2641                           ;CAN.c: 253:     ECANCON = 0x90 | k;
  2642  000066  5013               	movf	CAN_TakeFrame@k,w,c
  2643  000068  0990               	iorlw	144
  2644  00006A  6E77               	movwf	3959,c	;volatile
  2645                           
  2646                           ;CAN.c: 256:     switch(k)
  2647  00006C  D018               	goto	l2487
  2648  00006E                     l186:
  2649                           
  2650                           ;CAN.c: 259:             tempCON = RXB0CON;
  2651  00006E  CF60 F012          	movff	3936,CAN_TakeFrame@tempCON	;volatile
  2652                           
  2653                           ;CAN.c: 260:             break;
  2654  000072  D035               	goto	l187
  2655  000074                     l188:
  2656                           
  2657                           ;CAN.c: 262:             tempCON = RXB1CON;
  2658  000074  CF50 F012          	movff	3920,CAN_TakeFrame@tempCON	;volatile
  2659                           
  2660                           ;CAN.c: 263:             break;
  2661  000078  D032               	goto	l187
  2662  00007A                     l189:
  2663                           
  2664                           ;CAN.c: 265:             tempCON = B0CON;
  2665  00007A  CE20 F012          	movff	3616,CAN_TakeFrame@tempCON	;volatile
  2666                           
  2667                           ;CAN.c: 266:             break;
  2668  00007E  D02F               	goto	l187
  2669  000080                     l190:
  2670                           
  2671                           ;CAN.c: 268:             tempCON = B1CON;
  2672  000080  CE30 F012          	movff	3632,CAN_TakeFrame@tempCON	;volatile
  2673                           
  2674                           ;CAN.c: 269:             break;
  2675  000084  D02C               	goto	l187
  2676  000086                     l191:
  2677                           
  2678                           ;CAN.c: 271:             tempCON = B2CON;
  2679  000086  CE40 F012          	movff	3648,CAN_TakeFrame@tempCON	;volatile
  2680                           
  2681                           ;CAN.c: 272:             break;
  2682  00008A  D029               	goto	l187
  2683  00008C                     l192:
  2684                           
  2685                           ;CAN.c: 274:             tempCON = B3CON;
  2686  00008C  CE50 F012          	movff	3664,CAN_TakeFrame@tempCON	;volatile
  2687                           
  2688                           ;CAN.c: 275:             break;
  2689  000090  D026               	goto	l187
  2690  000092                     l193:
  2691                           
  2692                           ;CAN.c: 277:             tempCON = B4CON;
  2693  000092  CE60 F012          	movff	3680,CAN_TakeFrame@tempCON	;volatile
  2694                           
  2695                           ;CAN.c: 278:             break;
  2696  000096  D023               	goto	l187
  2697  000098                     l194:
  2698                           
  2699                           ;CAN.c: 280:             tempCON = B5CON;
  2700  000098  CE70 F012          	movff	3696,CAN_TakeFrame@tempCON	;volatile
  2701                           
  2702                           ;CAN.c: 281:             break;
  2703  00009C  D020               	goto	l187
  2704  00009E                     l2487:
  2705  00009E  5013               	movf	CAN_TakeFrame@k,w,c
  2706  0000A0  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  2707  0000A2  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  2708                           
  2709                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2710                           ; Switch size 1, requested type "simple"
  2711                           ; Number of cases is 1, Range of values is 0 to 0
  2712                           ; switch strategies available:
  2713                           ; Name         Instructions Cycles
  2714                           ; simple_byte            4     3 (average)
  2715                           ;	Chosen strategy is simple_byte
  2716  0000A4  5011               	movf	??_CAN_TakeFrame+1,w,c
  2717  0000A6  0A00               	xorlw	0	; case 0
  2718  0000A8  A4D8               	btfss	status,2,c
  2719  0000AA  D019               	goto	l187
  2720                           
  2721                           ; Switch size 1, requested type "simple"
  2722                           ; Number of cases is 8, Range of values is 0 to 7
  2723                           ; switch strategies available:
  2724                           ; Name         Instructions Cycles
  2725                           ; simple_byte           25    13 (average)
  2726                           ;	Chosen strategy is simple_byte
  2727  0000AC  5010               	movf	??_CAN_TakeFrame,w,c
  2728  0000AE  0A00               	xorlw	0	; case 0
  2729  0000B0  B4D8               	btfsc	status,2,c
  2730  0000B2  D7DD               	goto	l186
  2731  0000B4  0A01               	xorlw	1	; case 1
  2732  0000B6  B4D8               	btfsc	status,2,c
  2733  0000B8  D7DD               	goto	l188
  2734  0000BA  0A03               	xorlw	3	; case 2
  2735  0000BC  B4D8               	btfsc	status,2,c
  2736  0000BE  D7DD               	goto	l189
  2737  0000C0  0A01               	xorlw	1	; case 3
  2738  0000C2  B4D8               	btfsc	status,2,c
  2739  0000C4  D7DD               	goto	l190
  2740  0000C6  0A07               	xorlw	7	; case 4
  2741  0000C8  B4D8               	btfsc	status,2,c
  2742  0000CA  D7DD               	goto	l191
  2743  0000CC  0A01               	xorlw	1	; case 5
  2744  0000CE  B4D8               	btfsc	status,2,c
  2745  0000D0  D7DD               	goto	l192
  2746  0000D2  0A03               	xorlw	3	; case 6
  2747  0000D4  B4D8               	btfsc	status,2,c
  2748  0000D6  D7DD               	goto	l193
  2749  0000D8  0A01               	xorlw	1	; case 7
  2750  0000DA  B4D8               	btfsc	status,2,c
  2751  0000DC  D7DD               	goto	l194
  2752  0000DE                     l187:
  2753                           
  2754                           ;CAN.c: 285:     if((tempCON & 0x80) > 0)
  2755  0000DE  AE12               	btfss	CAN_TakeFrame@tempCON,7,c
  2756  0000E0  D0A5               	goto	l2523
  2757                           
  2758                           ;CAN.c: 286:     {;CAN.c: 287:         message->buffer = RXB0CON & 0x1F;
  2759  0000E2  EE20 F003          	lfsr	2,3
  2760  0000E6  500E               	movf	CAN_TakeFrame@message,w,c
  2761  0000E8  26D9               	addwf	fsr2l,f,c
  2762  0000EA  500F               	movf	CAN_TakeFrame@message+1,w,c
  2763  0000EC  22DA               	addwfc	fsr2h,f,c
  2764  0000EE  5060               	movf	3936,w,c	;volatile
  2765  0000F0  0B1F               	andlw	31
  2766  0000F2  6EDF               	movwf	indf2,c
  2767                           
  2768                           ;CAN.c: 288:         message->id.v[0] = RXB0EIDL;
  2769  0000F4  EE20 F004          	lfsr	2,4
  2770  0000F8  500E               	movf	CAN_TakeFrame@message,w,c
  2771  0000FA  26D9               	addwf	fsr2l,f,c
  2772  0000FC  500F               	movf	CAN_TakeFrame@message+1,w,c
  2773  0000FE  22DA               	addwfc	fsr2h,f,c
  2774  000100  CF64 FFDF          	movff	3940,indf2	;volatile
  2775                           
  2776                           ;CAN.c: 289:         message->id.v[1] = RXB0EIDH;
  2777  000104  EE20 F005          	lfsr	2,5
  2778  000108  500E               	movf	CAN_TakeFrame@message,w,c
  2779  00010A  26D9               	addwf	fsr2l,f,c
  2780  00010C  500F               	movf	CAN_TakeFrame@message+1,w,c
  2781  00010E  22DA               	addwfc	fsr2h,f,c
  2782  000110  CF63 FFDF          	movff	3939,indf2	;volatile
  2783                           
  2784                           ;CAN.c: 290:         message->id.v[2] = (RXB0SIDL/8) | (RXB0SIDL&0x03);
  2785  000114  EE20 F006          	lfsr	2,6
  2786  000118  500E               	movf	CAN_TakeFrame@message,w,c
  2787  00011A  26D9               	addwf	fsr2l,f,c
  2788  00011C  500F               	movf	CAN_TakeFrame@message+1,w,c
  2789  00011E  22DA               	addwfc	fsr2h,f,c
  2790  000120  CF62 F010          	movff	3938,??_CAN_TakeFrame	;volatile
  2791  000124  0E03               	movlw	3
  2792  000126  1610               	andwf	??_CAN_TakeFrame,f,c
  2793  000128  CF62 F006          	movff	3938,___awdiv@dividend	;volatile
  2794  00012C  6A07               	clrf	___awdiv@dividend+1,c
  2795  00012E  0E00               	movlw	0
  2796  000130  6E09               	movwf	___awdiv@divisor+1,c
  2797  000132  0E08               	movlw	8
  2798  000134  6E08               	movwf	___awdiv@divisor,c
  2799  000136  ECA8  F004         	call	___awdiv	;wreg free
  2800  00013A  5006               	movf	?___awdiv,w,c
  2801  00013C  1010               	iorwf	??_CAN_TakeFrame,w,c
  2802  00013E  6EDF               	movwf	indf2,c
  2803                           
  2804                           ;CAN.c: 291:         message->id.w[1] |= (WORD)RXB0SIDH*32;
  2805  000140  5061               	movf	3937,w,c	;volatile
  2806  000142  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  2807  000144  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  2808  000146  0E05               	movlw	5
  2809  000148                     u1205:
  2810  000148  90D8               	bcf	status,0,c
  2811  00014A  3610               	rlcf	??_CAN_TakeFrame,f,c
  2812  00014C  3611               	rlcf	??_CAN_TakeFrame+1,f,c
  2813  00014E  2EE8               	decfsz	wreg,f,c
  2814  000150  D7FB               	goto	u1205
  2815  000152  EE20 F006          	lfsr	2,6
  2816  000156  500E               	movf	CAN_TakeFrame@message,w,c
  2817  000158  26D9               	addwf	fsr2l,f,c
  2818  00015A  500F               	movf	CAN_TakeFrame@message+1,w,c
  2819  00015C  22DA               	addwfc	fsr2h,f,c
  2820  00015E  5010               	movf	??_CAN_TakeFrame,w,c
  2821  000160  12DE               	iorwf	postinc2,f,c
  2822  000162  5011               	movf	??_CAN_TakeFrame+1,w,c
  2823  000164  12DD               	iorwf	postdec2,f,c
  2824                           
  2825                           ;CAN.c: 292:         message->frame_type=0x03;
  2826  000166  EE20 F002          	lfsr	2,2
  2827  00016A  500E               	movf	CAN_TakeFrame@message,w,c
  2828  00016C  26D9               	addwf	fsr2l,f,c
  2829  00016E  500F               	movf	CAN_TakeFrame@message+1,w,c
  2830  000170  22DA               	addwfc	fsr2h,f,c
  2831  000172  0E03               	movlw	3
  2832  000174  6EDF               	movwf	indf2,c
  2833                           
  2834                           ;CAN.c: 296:         if(RXB0DLCbits.RXRTR == 0)
  2835  000176  BC65               	btfsc	3941,6,c	;volatile
  2836  000178  D068               	goto	l2529
  2837                           
  2838                           ;CAN.c: 297:         {;CAN.c: 298:             message->message_type = 0x01;
  2839  00017A  EE20 F001          	lfsr	2,1
  2840  00017E  500E               	movf	CAN_TakeFrame@message,w,c
  2841  000180  26D9               	addwf	fsr2l,f,c
  2842  000182  500F               	movf	CAN_TakeFrame@message+1,w,c
  2843  000184  22DA               	addwfc	fsr2h,f,c
  2844  000186  0E01               	movlw	1
  2845  000188  6EDF               	movwf	indf2,c
  2846                           
  2847                           ;CAN.c: 299:             message->data_length= RXB0DLC & 0x0F;
  2848  00018A  EE20 F010          	lfsr	2,16
  2849  00018E  500E               	movf	CAN_TakeFrame@message,w,c
  2850  000190  26D9               	addwf	fsr2l,f,c
  2851  000192  500F               	movf	CAN_TakeFrame@message+1,w,c
  2852  000194  22DA               	addwfc	fsr2h,f,c
  2853  000196  5065               	movf	3941,w,c	;volatile
  2854  000198  0B0F               	andlw	15
  2855  00019A  6EDF               	movwf	indf2,c
  2856                           
  2857                           ;CAN.c: 300:             if(message->data_length > 8)
  2858  00019C  EE20 F010          	lfsr	2,16
  2859  0001A0  500E               	movf	CAN_TakeFrame@message,w,c
  2860  0001A2  26D9               	addwf	fsr2l,f,c
  2861  0001A4  500F               	movf	CAN_TakeFrame@message+1,w,c
  2862  0001A6  22DA               	addwfc	fsr2h,f,c
  2863  0001A8  0E08               	movlw	8
  2864  0001AA  64DF               	cpfsgt	indf2,c
  2865  0001AC  D041               	goto	l2527
  2866  0001AE  D01E               	goto	l2521
  2867  0001B0                     l2503:
  2868                           
  2869                           ;CAN.c: 306:                         RXB0CON = 0;
  2870  0001B0  0E00               	movlw	0
  2871  0001B2  6E60               	movwf	3936,c	;volatile
  2872                           
  2873                           ;CAN.c: 307:                         break;
  2874  0001B4  D03B               	goto	l2523
  2875  0001B6                     l2505:
  2876                           
  2877                           ;CAN.c: 309:                         RXB1CON = 0;
  2878  0001B6  0E00               	movlw	0
  2879  0001B8  010F               	movlb	15	; () banked
  2880  0001BA  D00E               	goto	L1
  2881  0001BC                     l2507:
  2882                           
  2883                           ;CAN.c: 312:                         B0CON = 0;
  2884  0001BC  0E00               	movlw	0
  2885  0001BE  010E               	movlb	14	; () banked
  2886  0001C0  6F20               	movwf	32,b	;volatile
  2887                           
  2888                           ;CAN.c: 313:                         break;
  2889  0001C2  D034               	goto	l2523
  2890  0001C4                     l2509:
  2891                           
  2892                           ;CAN.c: 315:                         B1CON = 0;
  2893  0001C4  0E00               	movlw	0
  2894  0001C6  010E               	movlb	14	; () banked
  2895  0001C8  6F30               	movwf	48,b	;volatile
  2896                           
  2897                           ;CAN.c: 316:                         break;
  2898  0001CA  D030               	goto	l2523
  2899  0001CC                     l2511:
  2900                           
  2901                           ;CAN.c: 318:                         B2CON = 0;
  2902  0001CC  0E00               	movlw	0
  2903  0001CE  010E               	movlb	14	; () banked
  2904  0001D0  6F40               	movwf	64,b	;volatile
  2905                           
  2906                           ;CAN.c: 319:                         break;
  2907  0001D2  D02C               	goto	l2523
  2908  0001D4                     l2513:
  2909                           
  2910                           ;CAN.c: 321:                         B3CON = 0;
  2911  0001D4  0E00               	movlw	0
  2912  0001D6  010E               	movlb	14	; () banked
  2913  0001D8                     L1:
  2914  0001D8  6F50               	movwf	80,b	;volatile
  2915                           
  2916                           ;CAN.c: 322:                         break;
  2917  0001DA  D028               	goto	l2523
  2918  0001DC                     l2515:
  2919                           
  2920                           ;CAN.c: 324:                         B4CON = 0;
  2921  0001DC  0E00               	movlw	0
  2922  0001DE  010E               	movlb	14	; () banked
  2923  0001E0  6F60               	movwf	96,b	;volatile
  2924                           
  2925                           ;CAN.c: 325:                         break;
  2926  0001E2  D024               	goto	l2523
  2927  0001E4                     l2517:
  2928                           
  2929                           ;CAN.c: 327:                         B5CON = 0;
  2930  0001E4  0E00               	movlw	0
  2931  0001E6  010E               	movlb	14	; () banked
  2932  0001E8  6F70               	movwf	112,b	;volatile
  2933                           
  2934                           ;CAN.c: 328:                         break;
  2935  0001EA  D020               	goto	l2523
  2936  0001EC                     l2521:
  2937  0001EC  5013               	movf	CAN_TakeFrame@k,w,c
  2938  0001EE  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  2939  0001F0  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  2940                           
  2941                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2942                           ; Switch size 1, requested type "simple"
  2943                           ; Number of cases is 1, Range of values is 0 to 0
  2944                           ; switch strategies available:
  2945                           ; Name         Instructions Cycles
  2946                           ; simple_byte            4     3 (average)
  2947                           ;	Chosen strategy is simple_byte
  2948  0001F2  5011               	movf	??_CAN_TakeFrame+1,w,c
  2949  0001F4  0A00               	xorlw	0	; case 0
  2950  0001F6  A4D8               	btfss	status,2,c
  2951  0001F8  D019               	goto	l2523
  2952                           
  2953                           ; Switch size 1, requested type "simple"
  2954                           ; Number of cases is 8, Range of values is 0 to 7
  2955                           ; switch strategies available:
  2956                           ; Name         Instructions Cycles
  2957                           ; simple_byte           25    13 (average)
  2958                           ;	Chosen strategy is simple_byte
  2959  0001FA  5010               	movf	??_CAN_TakeFrame,w,c
  2960  0001FC  0A00               	xorlw	0	; case 0
  2961  0001FE  B4D8               	btfsc	status,2,c
  2962  000200  D7D7               	goto	l2503
  2963  000202  0A01               	xorlw	1	; case 1
  2964  000204  B4D8               	btfsc	status,2,c
  2965  000206  D7D7               	goto	l2505
  2966  000208  0A03               	xorlw	3	; case 2
  2967  00020A  B4D8               	btfsc	status,2,c
  2968  00020C  D7D7               	goto	l2507
  2969  00020E  0A01               	xorlw	1	; case 3
  2970  000210  B4D8               	btfsc	status,2,c
  2971  000212  D7D8               	goto	l2509
  2972  000214  0A07               	xorlw	7	; case 4
  2973  000216  B4D8               	btfsc	status,2,c
  2974  000218  D7D9               	goto	l2511
  2975  00021A  0A01               	xorlw	1	; case 5
  2976  00021C  B4D8               	btfsc	status,2,c
  2977  00021E  D7DA               	goto	l2513
  2978  000220  0A03               	xorlw	3	; case 6
  2979  000222  B4D8               	btfsc	status,2,c
  2980  000224  D7DB               	goto	l2515
  2981  000226  0A01               	xorlw	1	; case 7
  2982  000228  B4D8               	btfsc	status,2,c
  2983  00022A  D7DC               	goto	l2517
  2984  00022C                     l2523:
  2985                           
  2986                           ;CAN.c: 330:                 return FALSE;
  2987  00022C  0E00               	movlw	0
  2988  00022E  0012               	return	
  2989  000230                     l2527:
  2990                           
  2991                           ;CAN.c: 332:             CAN_MoveBuffIntoFrame(message->data, &RXB0D0);
  2992  000230  0E08               	movlw	8
  2993  000232  240E               	addwf	CAN_TakeFrame@message,w,c
  2994  000234  6E06               	movwf	CAN_MoveBuffIntoFrame@Ram,c
  2995  000236  0E00               	movlw	0
  2996  000238  200F               	addwfc	CAN_TakeFrame@message+1,w,c
  2997  00023A  6E07               	movwf	CAN_MoveBuffIntoFrame@Ram+1,c
  2998  00023C  0E66               	movlw	102
  2999  00023E  6E08               	movwf	CAN_MoveBuffIntoFrame@Buf,c
  3000  000240  0E0F               	movlw	15
  3001  000242  6E09               	movwf	CAN_MoveBuffIntoFrame@Buf+1,c
  3002  000244  EC26  F007         	call	_CAN_MoveBuffIntoFrame	;wreg free
  3003                           
  3004                           ;CAN.c: 333:         }
  3005  000248  D027               	goto	l2549
  3006  00024A                     l2529:
  3007                           
  3008                           ;CAN.c: 336:         {;CAN.c: 337:             message->message_type=0x02;
  3009  00024A  EE20 F001          	lfsr	2,1
  3010  00024E  500E               	movf	CAN_TakeFrame@message,w,c
  3011  000250  26D9               	addwf	fsr2l,f,c
  3012  000252  500F               	movf	CAN_TakeFrame@message+1,w,c
  3013  000254  22DA               	addwfc	fsr2h,f,c
  3014  000256  0E02               	movlw	2
  3015  000258  6EDF               	movwf	indf2,c
  3016  00025A  D01E               	goto	l2549
  3017  00025C                     l2531:
  3018                           
  3019                           ;CAN.c: 343:                 RXB0CON = 0;
  3020  00025C  0E00               	movlw	0
  3021  00025E  6E60               	movwf	3936,c	;volatile
  3022                           
  3023                           ;CAN.c: 344:                 break;
  3024  000260  D03B               	goto	l2551
  3025  000262                     l2533:
  3026                           
  3027                           ;CAN.c: 346:                 RXB1CON = 0;
  3028  000262  0E00               	movlw	0
  3029  000264  010F               	movlb	15	; () banked
  3030  000266  D00E               	goto	L2
  3031  000268                     l2535:
  3032                           
  3033                           ;CAN.c: 349:                 B0CON = 0;
  3034  000268  0E00               	movlw	0
  3035  00026A  010E               	movlb	14	; () banked
  3036  00026C  6F20               	movwf	32,b	;volatile
  3037                           
  3038                           ;CAN.c: 350:                 break;
  3039  00026E  D034               	goto	l2551
  3040  000270                     l2537:
  3041                           
  3042                           ;CAN.c: 352:                 B1CON = 0;
  3043  000270  0E00               	movlw	0
  3044  000272  010E               	movlb	14	; () banked
  3045  000274  6F30               	movwf	48,b	;volatile
  3046                           
  3047                           ;CAN.c: 353:                 break;
  3048  000276  D030               	goto	l2551
  3049  000278                     l2539:
  3050                           
  3051                           ;CAN.c: 355:                 B2CON = 0;
  3052  000278  0E00               	movlw	0
  3053  00027A  010E               	movlb	14	; () banked
  3054  00027C  6F40               	movwf	64,b	;volatile
  3055                           
  3056                           ;CAN.c: 356:                 break;
  3057  00027E  D02C               	goto	l2551
  3058  000280                     l2541:
  3059                           
  3060                           ;CAN.c: 358:                 B3CON = 0;
  3061  000280  0E00               	movlw	0
  3062  000282  010E               	movlb	14	; () banked
  3063  000284                     L2:
  3064  000284  6F50               	movwf	80,b	;volatile
  3065                           
  3066                           ;CAN.c: 359:                 break;
  3067  000286  D028               	goto	l2551
  3068  000288                     l2543:
  3069                           
  3070                           ;CAN.c: 361:                 B4CON = 0;
  3071  000288  0E00               	movlw	0
  3072  00028A  010E               	movlb	14	; () banked
  3073  00028C  6F60               	movwf	96,b	;volatile
  3074                           
  3075                           ;CAN.c: 362:                 break;
  3076  00028E  D024               	goto	l2551
  3077  000290                     l2545:
  3078                           
  3079                           ;CAN.c: 364:                 B5CON = 0;
  3080  000290  0E00               	movlw	0
  3081  000292  010E               	movlb	14	; () banked
  3082  000294  6F70               	movwf	112,b	;volatile
  3083                           
  3084                           ;CAN.c: 365:                 break;
  3085  000296  D020               	goto	l2551
  3086  000298                     l2549:
  3087  000298  5013               	movf	CAN_TakeFrame@k,w,c
  3088  00029A  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  3089  00029C  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  3090                           
  3091                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3092                           ; Switch size 1, requested type "simple"
  3093                           ; Number of cases is 1, Range of values is 0 to 0
  3094                           ; switch strategies available:
  3095                           ; Name         Instructions Cycles
  3096                           ; simple_byte            4     3 (average)
  3097                           ;	Chosen strategy is simple_byte
  3098  00029E  5011               	movf	??_CAN_TakeFrame+1,w,c
  3099  0002A0  0A00               	xorlw	0	; case 0
  3100  0002A2  A4D8               	btfss	status,2,c
  3101  0002A4  D019               	goto	l2551
  3102                           
  3103                           ; Switch size 1, requested type "simple"
  3104                           ; Number of cases is 8, Range of values is 0 to 7
  3105                           ; switch strategies available:
  3106                           ; Name         Instructions Cycles
  3107                           ; simple_byte           25    13 (average)
  3108                           ;	Chosen strategy is simple_byte
  3109  0002A6  5010               	movf	??_CAN_TakeFrame,w,c
  3110  0002A8  0A00               	xorlw	0	; case 0
  3111  0002AA  B4D8               	btfsc	status,2,c
  3112  0002AC  D7D7               	goto	l2531
  3113  0002AE  0A01               	xorlw	1	; case 1
  3114  0002B0  B4D8               	btfsc	status,2,c
  3115  0002B2  D7D7               	goto	l2533
  3116  0002B4  0A03               	xorlw	3	; case 2
  3117  0002B6  B4D8               	btfsc	status,2,c
  3118  0002B8  D7D7               	goto	l2535
  3119  0002BA  0A01               	xorlw	1	; case 3
  3120  0002BC  B4D8               	btfsc	status,2,c
  3121  0002BE  D7D8               	goto	l2537
  3122  0002C0  0A07               	xorlw	7	; case 4
  3123  0002C2  B4D8               	btfsc	status,2,c
  3124  0002C4  D7D9               	goto	l2539
  3125  0002C6  0A01               	xorlw	1	; case 5
  3126  0002C8  B4D8               	btfsc	status,2,c
  3127  0002CA  D7DA               	goto	l2541
  3128  0002CC  0A03               	xorlw	3	; case 6
  3129  0002CE  B4D8               	btfsc	status,2,c
  3130  0002D0  D7DB               	goto	l2543
  3131  0002D2  0A01               	xorlw	1	; case 7
  3132  0002D4  B4D8               	btfsc	status,2,c
  3133  0002D6  D7DC               	goto	l2545
  3134  0002D8                     l2551:
  3135                           
  3136                           ;CAN.c: 367:         return TRUE;
  3137  0002D8  0E01               	movlw	1
  3138  0002DA  0012               	return		;funcret
  3139  0002DC                     __end_of_CAN_TakeFrame:
  3140                           	opt callstack 0
  3141                           
  3142 ;; *************** function ___awdiv *****************
  3143 ;; Defined at:
  3144 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  3145 ;; Parameters:    Size  Location     Type
  3146 ;;  dividend        2    5[COMRAM] int 
  3147 ;;  divisor         2    7[COMRAM] int 
  3148 ;; Auto vars:     Size  Location     Type
  3149 ;;  quotient        2   11[COMRAM] int 
  3150 ;;  sign            1   10[COMRAM] unsigned char 
  3151 ;;  counter         1    9[COMRAM] unsigned char 
  3152 ;; Return value:  Size  Location     Type
  3153 ;;                  2    5[COMRAM] int 
  3154 ;; Registers used:
  3155 ;;		wreg, status,2, status,0
  3156 ;; Tracked objects:
  3157 ;;		On entry : 0/0
  3158 ;;		On exit  : 0/0
  3159 ;;		Unchanged: 0/0
  3160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3161 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3162 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3164 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3165 ;;Total ram usage:        8 bytes
  3166 ;; Hardware stack levels used:    1
  3167 ;; Hardware stack levels required when called:    3
  3168 ;; This function calls:
  3169 ;;		Nothing
  3170 ;; This function is called by:
  3171 ;;		_CAN_TakeFrame
  3172 ;;		_FRAME_HandleCanFrame
  3173 ;; This function uses a non-reentrant model
  3174 ;;
  3175                           
  3176                           	psect	text25
  3177  000950                     __ptext25:
  3178                           	opt callstack 0
  3179  000950                     ___awdiv:
  3180                           	opt callstack 25
  3181                           
  3182                           ;incstack = 0
  3183  000950  0E00               	movlw	0
  3184  000952  6E0B               	movwf	___awdiv@sign,c
  3185  000954  AE09               	btfss	___awdiv@divisor+1,7,c
  3186  000956  D006               	goto	l2407
  3187  000958  6C08               	negf	___awdiv@divisor,c
  3188  00095A  1E09               	comf	___awdiv@divisor+1,f,c
  3189  00095C  B0D8               	btfsc	status,0,c
  3190  00095E  2A09               	incf	___awdiv@divisor+1,f,c
  3191  000960  0E01               	movlw	1
  3192  000962  6E0B               	movwf	___awdiv@sign,c
  3193  000964                     l2407:
  3194  000964  AE07               	btfss	___awdiv@dividend+1,7,c
  3195  000966  D006               	goto	l2413
  3196  000968  6C06               	negf	___awdiv@dividend,c
  3197  00096A  1E07               	comf	___awdiv@dividend+1,f,c
  3198  00096C  B0D8               	btfsc	status,0,c
  3199  00096E  2A07               	incf	___awdiv@dividend+1,f,c
  3200  000970  0E01               	movlw	1
  3201  000972  1A0B               	xorwf	___awdiv@sign,f,c
  3202  000974                     l2413:
  3203  000974  0E00               	movlw	0
  3204  000976  6E0D               	movwf	___awdiv@quotient+1,c
  3205  000978  0E00               	movlw	0
  3206  00097A  6E0C               	movwf	___awdiv@quotient,c
  3207  00097C  5008               	movf	___awdiv@divisor,w,c
  3208  00097E  1009               	iorwf	___awdiv@divisor+1,w,c
  3209  000980  B4D8               	btfsc	status,2,c
  3210  000982  D01C               	goto	l2435
  3211  000984  0E01               	movlw	1
  3212  000986  6E0A               	movwf	___awdiv@counter,c
  3213  000988  D004               	goto	l2421
  3214  00098A                     l2419:
  3215  00098A  90D8               	bcf	status,0,c
  3216  00098C  3608               	rlcf	___awdiv@divisor,f,c
  3217  00098E  3609               	rlcf	___awdiv@divisor+1,f,c
  3218  000990  2A0A               	incf	___awdiv@counter,f,c
  3219  000992                     l2421:
  3220  000992  AE09               	btfss	___awdiv@divisor+1,7,c
  3221  000994  D7FA               	goto	l2419
  3222  000996                     u1110:
  3223  000996  90D8               	bcf	status,0,c
  3224  000998  360C               	rlcf	___awdiv@quotient,f,c
  3225  00099A  360D               	rlcf	___awdiv@quotient+1,f,c
  3226  00099C  5008               	movf	___awdiv@divisor,w,c
  3227  00099E  5C06               	subwf	___awdiv@dividend,w,c
  3228  0009A0  5009               	movf	___awdiv@divisor+1,w,c
  3229  0009A2  5807               	subwfb	___awdiv@dividend+1,w,c
  3230  0009A4  A0D8               	btfss	status,0,c
  3231  0009A6  D005               	goto	l2431
  3232  0009A8  5008               	movf	___awdiv@divisor,w,c
  3233  0009AA  5E06               	subwf	___awdiv@dividend,f,c
  3234  0009AC  5009               	movf	___awdiv@divisor+1,w,c
  3235  0009AE  5A07               	subwfb	___awdiv@dividend+1,f,c
  3236  0009B0  800C               	bsf	___awdiv@quotient,0,c
  3237  0009B2                     l2431:
  3238  0009B2  90D8               	bcf	status,0,c
  3239  0009B4  3209               	rrcf	___awdiv@divisor+1,f,c
  3240  0009B6  3208               	rrcf	___awdiv@divisor,f,c
  3241  0009B8  2E0A               	decfsz	___awdiv@counter,f,c
  3242  0009BA  D7ED               	goto	u1110
  3243  0009BC                     l2435:
  3244  0009BC  500B               	movf	___awdiv@sign,w,c
  3245  0009BE  B4D8               	btfsc	status,2,c
  3246  0009C0  D004               	goto	l2439
  3247  0009C2  6C0C               	negf	___awdiv@quotient,c
  3248  0009C4  1E0D               	comf	___awdiv@quotient+1,f,c
  3249  0009C6  B0D8               	btfsc	status,0,c
  3250  0009C8  2A0D               	incf	___awdiv@quotient+1,f,c
  3251  0009CA                     l2439:
  3252  0009CA  C00C  F006         	movff	___awdiv@quotient,?___awdiv
  3253  0009CE  C00D  F007         	movff	___awdiv@quotient+1,?___awdiv+1
  3254  0009D2  0012               	return		;funcret
  3255  0009D4                     __end_of___awdiv:
  3256                           	opt callstack 0
  3257                           
  3258 ;; *************** function _CAN_MoveBuffIntoFrame *****************
  3259 ;; Defined at:
  3260 ;;		line 169 in file "CAN.c"
  3261 ;; Parameters:    Size  Location     Type
  3262 ;;  Ram             2    5[COMRAM] PTR unsigned char 
  3263 ;;		 -> TRM_DataTransmition@canMessage(17), RXB0D0(1), 
  3264 ;;  Buf             2    7[COMRAM] PTR unsigned char 
  3265 ;;		 -> TRM_DataTransmition@canMessage(17), RXB0D0(1), 
  3266 ;; Auto vars:     Size  Location     Type
  3267 ;;  i               1    9[COMRAM] unsigned char 
  3268 ;; Return value:  Size  Location     Type
  3269 ;;                  1    wreg      void 
  3270 ;; Registers used:
  3271 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3272 ;; Tracked objects:
  3273 ;;		On entry : 0/0
  3274 ;;		On exit  : 0/0
  3275 ;;		Unchanged: 0/0
  3276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3277 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3278 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3280 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3281 ;;Total ram usage:        5 bytes
  3282 ;; Hardware stack levels used:    1
  3283 ;; Hardware stack levels required when called:    3
  3284 ;; This function calls:
  3285 ;;		Nothing
  3286 ;; This function is called by:
  3287 ;;		_CAN_SendFrame
  3288 ;;		_CAN_TakeFrame
  3289 ;; This function uses a non-reentrant model
  3290 ;;
  3291                           
  3292                           	psect	text26
  3293  000E4C                     __ptext26:
  3294                           	opt callstack 0
  3295  000E4C                     _CAN_MoveBuffIntoFrame:
  3296                           	opt callstack 24
  3297                           
  3298                           ;CAN.c: 169: static void CAN_MoveBuffIntoFrame(BYTE* Ram, BYTE* Buf);CAN.c: 170: {;CAN.c
      +                          : 171:     BYTE i;;CAN.c: 172:     for(i=0; i<8; ++i)
  3299                           
  3300                           ;incstack = 0
  3301  000E4C  0E00               	movlw	0
  3302  000E4E  6E0A               	movwf	CAN_MoveBuffIntoFrame@i,c
  3303  000E50                     l2067:
  3304                           
  3305                           ;CAN.c: 173:     {;CAN.c: 174:         Ram[i]=(*(Buf+i));
  3306  000E50  500A               	movf	CAN_MoveBuffIntoFrame@i,w,c
  3307  000E52  2408               	addwf	CAN_MoveBuffIntoFrame@Buf,w,c
  3308  000E54  6ED9               	movwf	fsr2l,c
  3309  000E56  0E00               	movlw	0
  3310  000E58  2009               	addwfc	CAN_MoveBuffIntoFrame@Buf+1,w,c
  3311  000E5A  6EDA               	movwf	fsr2h,c
  3312  000E5C  500A               	movf	CAN_MoveBuffIntoFrame@i,w,c
  3313  000E5E  2406               	addwf	CAN_MoveBuffIntoFrame@Ram,w,c
  3314  000E60  6EE1               	movwf	fsr1l,c
  3315  000E62  0E00               	movlw	0
  3316  000E64  2007               	addwfc	CAN_MoveBuffIntoFrame@Ram+1,w,c
  3317  000E66  6EE2               	movwf	fsr1h,c
  3318  000E68  CFDF FFE7          	movff	indf2,indf1
  3319                           
  3320                           ;CAN.c: 175:     }
  3321  000E6C  2A0A               	incf	CAN_MoveBuffIntoFrame@i,f,c
  3322  000E6E  0E07               	movlw	7
  3323  000E70  640A               	cpfsgt	CAN_MoveBuffIntoFrame@i,c
  3324  000E72  D7EE               	goto	l2067
  3325  000E74  0012               	return	
  3326  000E76                     __end_of_CAN_MoveBuffIntoFrame:
  3327                           	opt callstack 0
  3328                           
  3329 ;; *************** function _TMR1_Update_flag_Set *****************
  3330 ;; Defined at:
  3331 ;;		line 32 in file "TMR1.c"
  3332 ;; Parameters:    Size  Location     Type
  3333 ;;  a               2    5[COMRAM] unsigned int 
  3334 ;; Auto vars:     Size  Location     Type
  3335 ;;		None
  3336 ;; Return value:  Size  Location     Type
  3337 ;;                  1    wreg      void 
  3338 ;; Registers used:
  3339 ;;		None
  3340 ;; Tracked objects:
  3341 ;;		On entry : 0/0
  3342 ;;		On exit  : 0/0
  3343 ;;		Unchanged: 0/0
  3344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3345 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3348 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3349 ;;Total ram usage:        2 bytes
  3350 ;; Hardware stack levels used:    1
  3351 ;; Hardware stack levels required when called:    3
  3352 ;; This function calls:
  3353 ;;		Nothing
  3354 ;; This function is called by:
  3355 ;;		_main
  3356 ;; This function uses a non-reentrant model
  3357 ;;
  3358                           
  3359                           	psect	text27
  3360  000FA6                     __ptext27:
  3361                           	opt callstack 0
  3362  000FA6                     _TMR1_Update_flag_Set:
  3363                           	opt callstack 27
  3364                           
  3365                           ;TMR1.c: 32: void TMR1_Update_flag_Set(UINT a);TMR1.c: 33: {;TMR1.c: 34:     TMR1_Update
      +                          _flag = a;
  3366                           
  3367                           ;incstack = 0
  3368  000FA6  C006  F03B         	movff	TMR1_Update_flag_Set@a,_TMR1_Update_flag
  3369  000FAA  C007  F03C         	movff	TMR1_Update_flag_Set@a+1,_TMR1_Update_flag+1
  3370  000FAE  0012               	return		;funcret
  3371  000FB0                     __end_of_TMR1_Update_flag_Set:
  3372                           	opt callstack 0
  3373                           
  3374 ;; *************** function _TMR1_Update_flag_Get *****************
  3375 ;; Defined at:
  3376 ;;		line 47 in file "TMR1.c"
  3377 ;; Parameters:    Size  Location     Type
  3378 ;;		None
  3379 ;; Auto vars:     Size  Location     Type
  3380 ;;		None
  3381 ;; Return value:  Size  Location     Type
  3382 ;;                  2    5[COMRAM] unsigned int 
  3383 ;; Registers used:
  3384 ;;		None
  3385 ;; Tracked objects:
  3386 ;;		On entry : 0/0
  3387 ;;		On exit  : 0/0
  3388 ;;		Unchanged: 0/0
  3389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3390 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3393 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3394 ;;Total ram usage:        2 bytes
  3395 ;; Hardware stack levels used:    1
  3396 ;; Hardware stack levels required when called:    3
  3397 ;; This function calls:
  3398 ;;		Nothing
  3399 ;; This function is called by:
  3400 ;;		_main
  3401 ;; This function uses a non-reentrant model
  3402 ;;
  3403                           
  3404                           	psect	text28
  3405  000FB0                     __ptext28:
  3406                           	opt callstack 0
  3407  000FB0                     _TMR1_Update_flag_Get:
  3408                           	opt callstack 27
  3409                           
  3410                           ;TMR1.c: 49:     return TMR1_Update_flag;
  3411                           
  3412                           ;incstack = 0
  3413  000FB0  C03B  F006         	movff	_TMR1_Update_flag,?_TMR1_Update_flag_Get
  3414  000FB4  C03C  F007         	movff	_TMR1_Update_flag+1,?_TMR1_Update_flag_Get+1
  3415  000FB8  0012               	return		;funcret
  3416  000FBA                     __end_of_TMR1_Update_flag_Get:
  3417                           	opt callstack 0
  3418                           
  3419 ;; *************** function _LED_Update *****************
  3420 ;; Defined at:
  3421 ;;		line 89 in file "LED.c"
  3422 ;; Parameters:    Size  Location     Type
  3423 ;;		None
  3424 ;; Auto vars:     Size  Location     Type
  3425 ;;		None
  3426 ;; Return value:  Size  Location     Type
  3427 ;;                  1    wreg      unsigned char 
  3428 ;; Registers used:
  3429 ;;		wreg, status,2, status,0, cstack
  3430 ;; Tracked objects:
  3431 ;;		On entry : 0/0
  3432 ;;		On exit  : 0/0
  3433 ;;		Unchanged: 0/0
  3434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3438 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3439 ;;Total ram usage:        0 bytes
  3440 ;; Hardware stack levels used:    1
  3441 ;; Hardware stack levels required when called:    5
  3442 ;; This function calls:
  3443 ;;		_LED_Left
  3444 ;;		_LED_Light_Pos
  3445 ;;		_LED_Right
  3446 ;; This function is called by:
  3447 ;;		_main
  3448 ;; This function uses a non-reentrant model
  3449 ;;
  3450                           
  3451                           	psect	text29
  3452  000B48                     __ptext29:
  3453                           	opt callstack 0
  3454  000B48                     _LED_Update:
  3455                           	opt callstack 25
  3456                           
  3457                           ;LED.c: 91:     static LED_RGA_type Red = RED;;LED.c: 92:     static LED_RGA_type Green 
      +                          = GREEN;;LED.c: 93:     static UINT pos1 = 0b0000000001;;LED.c: 94:     static UINT pos2
      +                           = 0b0000000001;;LED.c: 97:     LED_Light_Pos(Green,pos2,Fulfillment_Lvl);
  3458                           
  3459                           ;incstack = 0
  3460  000B48  C043  F00D         	movff	LED_Update@pos2,LED_Light_Pos@pos
  3461  000B4C  C044  F00E         	movff	LED_Update@pos2+1,LED_Light_Pos@pos+1
  3462  000B50  C047  F00F         	movff	_Fulfillment_Lvl,LED_Light_Pos@fulfillment
  3463  000B54  C048  F010         	movff	_Fulfillment_Lvl+1,LED_Light_Pos@fulfillment+1
  3464  000B58  5049               	movf	LED_Update@Green,w,c
  3465  000B5A  ECBC  F003         	call	_LED_Light_Pos
  3466                           
  3467                           ;LED.c: 98:     LED_Light_Pos(RED,pos1,Fulfillment_Lvl);
  3468  000B5E  C045  F00D         	movff	LED_Update@pos1,LED_Light_Pos@pos
  3469  000B62  C046  F00E         	movff	LED_Update@pos1+1,LED_Light_Pos@pos+1
  3470  000B66  C047  F00F         	movff	_Fulfillment_Lvl,LED_Light_Pos@fulfillment
  3471  000B6A  C048  F010         	movff	_Fulfillment_Lvl+1,LED_Light_Pos@fulfillment+1
  3472  000B6E  0E00               	movlw	0
  3473  000B70  ECBC  F003         	call	_LED_Light_Pos
  3474                           
  3475                           ;LED.c: 99:     pos1 = LED_Right(pos1);
  3476  000B74  C045  F006         	movff	LED_Update@pos1,LED_Right@a
  3477  000B78  C046  F007         	movff	LED_Update@pos1+1,LED_Right@a+1
  3478  000B7C  EC1F  F006         	call	_LED_Right	;wreg free
  3479  000B80  C006  F045         	movff	?_LED_Right,LED_Update@pos1
  3480  000B84  C007  F046         	movff	?_LED_Right+1,LED_Update@pos1+1
  3481                           
  3482                           ;LED.c: 100:     pos2 = LED_Left(pos2);
  3483  000B88  C043  F006         	movff	LED_Update@pos2,LED_Left@a
  3484  000B8C  C044  F007         	movff	LED_Update@pos2+1,LED_Left@a+1
  3485  000B90  EC68  F006         	call	_LED_Left	;wreg free
  3486  000B94  C006  F043         	movff	?_LED_Left,LED_Update@pos2
  3487  000B98  C007  F044         	movff	?_LED_Left+1,LED_Update@pos2+1
  3488  000B9C  0012               	return		;funcret
  3489  000B9E                     __end_of_LED_Update:
  3490                           	opt callstack 0
  3491                           
  3492 ;; *************** function _LED_Light_Pos *****************
  3493 ;; Defined at:
  3494 ;;		line 172 in file "LED.c"
  3495 ;; Parameters:    Size  Location     Type
  3496 ;;  color           1    wreg     enum E10641
  3497 ;;  pos             2   12[COMRAM] unsigned int 
  3498 ;;  fulfillment     2   14[COMRAM] unsigned int 
  3499 ;; Auto vars:     Size  Location     Type
  3500 ;;  color           1   16[COMRAM] enum E10641
  3501 ;;  flage           2   21[COMRAM] unsigned int 
  3502 ;;  pos2            2   19[COMRAM] unsigned int 
  3503 ;;  LED_array       2   17[COMRAM] unsigned int 
  3504 ;; Return value:  Size  Location     Type
  3505 ;;                  2   12[COMRAM] unsigned int 
  3506 ;; Registers used:
  3507 ;;		wreg, status,2, status,0, cstack
  3508 ;; Tracked objects:
  3509 ;;		On entry : 0/0
  3510 ;;		On exit  : 0/0
  3511 ;;		Unchanged: 0/0
  3512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3513 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3514 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3516 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3517 ;;Total ram usage:       11 bytes
  3518 ;; Hardware stack levels used:    1
  3519 ;; Hardware stack levels required when called:    4
  3520 ;; This function calls:
  3521 ;;		_LED_Control
  3522 ;;		_LED_Left
  3523 ;;		_LED_Right
  3524 ;;		___lwdiv
  3525 ;; This function is called by:
  3526 ;;		_LED_Update
  3527 ;; This function uses a non-reentrant model
  3528 ;;
  3529                           
  3530                           	psect	text30
  3531  000778                     __ptext30:
  3532                           	opt callstack 0
  3533  000778                     _LED_Light_Pos:
  3534                           	opt callstack 25
  3535                           
  3536                           ;incstack = 0
  3537                           ;LED_Light_Pos@color stored from wreg
  3538  000778  6E11               	movwf	LED_Light_Pos@color,c
  3539                           
  3540                           ;LED.c: 172: UINT LED_Light_Pos(LED_RGA_type color,UINT pos, UINT fulfillment);LED.c: 17
      +                          3: {;LED.c: 174:     UINT pos2 =pos;
  3541  00077A  C00D  F014         	movff	LED_Light_Pos@pos,LED_Light_Pos@pos2
  3542  00077E  C00E  F015         	movff	LED_Light_Pos@pos+1,LED_Light_Pos@pos2+1
  3543                           
  3544                           ;LED.c: 175:     UINT LED_array = 0b0000000000;
  3545  000782  0E00               	movlw	0
  3546  000784  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  3547  000786  0E00               	movlw	0
  3548  000788  6E12               	movwf	LED_Light_Pos@LED_array,c
  3549                           
  3550                           ;LED.c: 176:     UINT flage = fulfillment/10;
  3551  00078A  C00F  F006         	movff	LED_Light_Pos@fulfillment,___lwdiv@dividend
  3552  00078E  C010  F007         	movff	LED_Light_Pos@fulfillment+1,___lwdiv@dividend+1
  3553  000792  0E00               	movlw	0
  3554  000794  6E09               	movwf	___lwdiv@divisor+1,c
  3555  000796  0E0A               	movlw	10
  3556  000798  6E08               	movwf	___lwdiv@divisor,c
  3557  00079A  ECCF  F005         	call	___lwdiv	;wreg free
  3558  00079E  C006  F016         	movff	?___lwdiv,LED_Light_Pos@flage
  3559  0007A2  C007  F017         	movff	?___lwdiv+1,LED_Light_Pos@flage+1
  3560                           
  3561                           ;LED.c: 177:     if(color == RED)
  3562  0007A6  5011               	movf	LED_Light_Pos@color,w,c
  3563  0007A8  B4D8               	btfsc	status,2,c
  3564  0007AA  D017               	goto	l2589
  3565  0007AC  D031               	goto	l2597
  3566  0007AE                     l2583:
  3567                           
  3568                           ;LED.c: 180:         {;LED.c: 181:             LED_array = pos2|LED_array;
  3569  0007AE  5012               	movf	LED_Light_Pos@LED_array,w,c
  3570  0007B0  1014               	iorwf	LED_Light_Pos@pos2,w,c
  3571  0007B2  6E12               	movwf	LED_Light_Pos@LED_array,c
  3572  0007B4  5013               	movf	LED_Light_Pos@LED_array+1,w,c
  3573  0007B6  1015               	iorwf	LED_Light_Pos@pos2+1,w,c
  3574  0007B8  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  3575                           
  3576                           ;LED.c: 182:             pos2 = LED_Left(pos2);
  3577  0007BA  C014  F006         	movff	LED_Light_Pos@pos2,LED_Left@a
  3578  0007BE  C015  F007         	movff	LED_Light_Pos@pos2+1,LED_Left@a+1
  3579  0007C2  EC68  F006         	call	_LED_Left	;wreg free
  3580  0007C6  C006  F014         	movff	?_LED_Left,LED_Light_Pos@pos2
  3581  0007CA  C007  F015         	movff	?_LED_Left+1,LED_Light_Pos@pos2+1
  3582                           
  3583                           ;LED.c: 183:             flage = flage - 1;
  3584  0007CE  0EFF               	movlw	255
  3585  0007D0  2416               	addwf	LED_Light_Pos@flage,w,c
  3586  0007D2  6E16               	movwf	LED_Light_Pos@flage,c
  3587  0007D4  0EFF               	movlw	255
  3588  0007D6  2017               	addwfc	LED_Light_Pos@flage+1,w,c
  3589  0007D8  6E17               	movwf	LED_Light_Pos@flage+1,c
  3590  0007DA                     l2589:
  3591                           
  3592                           ;LED.c: 179:         while(flage>0)
  3593  0007DA  5016               	movf	LED_Light_Pos@flage,w,c
  3594  0007DC  1017               	iorwf	LED_Light_Pos@flage+1,w,c
  3595  0007DE  B4D8               	btfsc	status,2,c
  3596  0007E0  D01B               	goto	u1250
  3597  0007E2  D7E5               	goto	l2583
  3598  0007E4                     l2591:
  3599                           
  3600                           ;LED.c: 189:         {;LED.c: 190:             LED_array = pos2|LED_array;
  3601  0007E4  5012               	movf	LED_Light_Pos@LED_array,w,c
  3602  0007E6  1014               	iorwf	LED_Light_Pos@pos2,w,c
  3603  0007E8  6E12               	movwf	LED_Light_Pos@LED_array,c
  3604  0007EA  5013               	movf	LED_Light_Pos@LED_array+1,w,c
  3605  0007EC  1015               	iorwf	LED_Light_Pos@pos2+1,w,c
  3606  0007EE  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  3607                           
  3608                           ;LED.c: 191:             pos2 = LED_Right(pos2);
  3609  0007F0  C014  F006         	movff	LED_Light_Pos@pos2,LED_Right@a
  3610  0007F4  C015  F007         	movff	LED_Light_Pos@pos2+1,LED_Right@a+1
  3611  0007F8  EC1F  F006         	call	_LED_Right	;wreg free
  3612  0007FC  C006  F014         	movff	?_LED_Right,LED_Light_Pos@pos2
  3613  000800  C007  F015         	movff	?_LED_Right+1,LED_Light_Pos@pos2+1
  3614                           
  3615                           ;LED.c: 192:             flage = flage - 1;
  3616  000804  0EFF               	movlw	255
  3617  000806  2416               	addwf	LED_Light_Pos@flage,w,c
  3618  000808  6E16               	movwf	LED_Light_Pos@flage,c
  3619  00080A  0EFF               	movlw	255
  3620  00080C  2017               	addwfc	LED_Light_Pos@flage+1,w,c
  3621  00080E  6E17               	movwf	LED_Light_Pos@flage+1,c
  3622  000810                     l2597:
  3623                           
  3624                           ;LED.c: 188:         while(flage>0)
  3625  000810  5016               	movf	LED_Light_Pos@flage,w,c
  3626  000812  1017               	iorwf	LED_Light_Pos@flage+1,w,c
  3627  000814  A4D8               	btfss	status,2,c
  3628  000816  D7E6               	goto	l2591
  3629  000818                     u1250:
  3630                           
  3631                           ;LED.c: 195:     LED_Control(color, LED_array);
  3632  000818  C012  F006         	movff	LED_Light_Pos@LED_array,LED_Control@diode
  3633  00081C  C013  F007         	movff	LED_Light_Pos@LED_array+1,LED_Control@diode+1
  3634  000820  5011               	movf	LED_Light_Pos@color,w,c
  3635  000822  EC13  F003         	call	_LED_Control
  3636  000826  0012               	return		;funcret
  3637  000828                     __end_of_LED_Light_Pos:
  3638                           	opt callstack 0
  3639                           
  3640 ;; *************** function ___lwdiv *****************
  3641 ;; Defined at:
  3642 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwdiv.c"
  3643 ;; Parameters:    Size  Location     Type
  3644 ;;  dividend        2    5[COMRAM] unsigned int 
  3645 ;;  divisor         2    7[COMRAM] unsigned int 
  3646 ;; Auto vars:     Size  Location     Type
  3647 ;;  quotient        2    9[COMRAM] unsigned int 
  3648 ;;  counter         1   11[COMRAM] unsigned char 
  3649 ;; Return value:  Size  Location     Type
  3650 ;;                  2    5[COMRAM] unsigned int 
  3651 ;; Registers used:
  3652 ;;		wreg, status,2, status,0
  3653 ;; Tracked objects:
  3654 ;;		On entry : 0/0
  3655 ;;		On exit  : 0/0
  3656 ;;		Unchanged: 0/0
  3657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3658 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3659 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3661 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3662 ;;Total ram usage:        7 bytes
  3663 ;; Hardware stack levels used:    1
  3664 ;; Hardware stack levels required when called:    3
  3665 ;; This function calls:
  3666 ;;		Nothing
  3667 ;; This function is called by:
  3668 ;;		_LED_Light_Pos
  3669 ;; This function uses a non-reentrant model
  3670 ;;
  3671                           
  3672                           	psect	text31
  3673  000B9E                     __ptext31:
  3674                           	opt callstack 0
  3675  000B9E                     ___lwdiv:
  3676                           	opt callstack 25
  3677                           
  3678                           ;incstack = 0
  3679  000B9E  0E00               	movlw	0
  3680  000BA0  6E0B               	movwf	___lwdiv@quotient+1,c
  3681  000BA2  0E00               	movlw	0
  3682  000BA4  6E0A               	movwf	___lwdiv@quotient,c
  3683  000BA6  5008               	movf	___lwdiv@divisor,w,c
  3684  000BA8  1009               	iorwf	___lwdiv@divisor+1,w,c
  3685  000BAA  B4D8               	btfsc	status,2,c
  3686  000BAC  D01C               	goto	l1081
  3687  000BAE  0E01               	movlw	1
  3688  000BB0  6E0C               	movwf	___lwdiv@counter,c
  3689  000BB2  D004               	goto	l2451
  3690  000BB4                     l2449:
  3691  000BB4  90D8               	bcf	status,0,c
  3692  000BB6  3608               	rlcf	___lwdiv@divisor,f,c
  3693  000BB8  3609               	rlcf	___lwdiv@divisor+1,f,c
  3694  000BBA  2A0C               	incf	___lwdiv@counter,f,c
  3695  000BBC                     l2451:
  3696  000BBC  AE09               	btfss	___lwdiv@divisor+1,7,c
  3697  000BBE  D7FA               	goto	l2449
  3698  000BC0                     u1150:
  3699  000BC0  90D8               	bcf	status,0,c
  3700  000BC2  360A               	rlcf	___lwdiv@quotient,f,c
  3701  000BC4  360B               	rlcf	___lwdiv@quotient+1,f,c
  3702  000BC6  5008               	movf	___lwdiv@divisor,w,c
  3703  000BC8  5C06               	subwf	___lwdiv@dividend,w,c
  3704  000BCA  5009               	movf	___lwdiv@divisor+1,w,c
  3705  000BCC  5807               	subwfb	___lwdiv@dividend+1,w,c
  3706  000BCE  A0D8               	btfss	status,0,c
  3707  000BD0  D005               	goto	l2461
  3708  000BD2  5008               	movf	___lwdiv@divisor,w,c
  3709  000BD4  5E06               	subwf	___lwdiv@dividend,f,c
  3710  000BD6  5009               	movf	___lwdiv@divisor+1,w,c
  3711  000BD8  5A07               	subwfb	___lwdiv@dividend+1,f,c
  3712  000BDA  800A               	bsf	___lwdiv@quotient,0,c
  3713  000BDC                     l2461:
  3714  000BDC  90D8               	bcf	status,0,c
  3715  000BDE  3209               	rrcf	___lwdiv@divisor+1,f,c
  3716  000BE0  3208               	rrcf	___lwdiv@divisor,f,c
  3717  000BE2  2E0C               	decfsz	___lwdiv@counter,f,c
  3718  000BE4  D7ED               	goto	u1150
  3719  000BE6                     l1081:
  3720  000BE6  C00A  F006         	movff	___lwdiv@quotient,?___lwdiv
  3721  000BEA  C00B  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3722  000BEE  0012               	return		;funcret
  3723  000BF0                     __end_of___lwdiv:
  3724                           	opt callstack 0
  3725                           
  3726 ;; *************** function _LED_Right *****************
  3727 ;; Defined at:
  3728 ;;		line 116 in file "LED.c"
  3729 ;; Parameters:    Size  Location     Type
  3730 ;;  a               2    5[COMRAM] unsigned int 
  3731 ;; Auto vars:     Size  Location     Type
  3732 ;;  b               2    9[COMRAM] unsigned int 
  3733 ;; Return value:  Size  Location     Type
  3734 ;;                  2    5[COMRAM] unsigned int 
  3735 ;; Registers used:
  3736 ;;		wreg, status,2, status,0
  3737 ;; Tracked objects:
  3738 ;;		On entry : 0/0
  3739 ;;		On exit  : 0/0
  3740 ;;		Unchanged: 0/0
  3741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3742 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3743 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3744 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3745 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3746 ;;Total ram usage:        6 bytes
  3747 ;; Hardware stack levels used:    1
  3748 ;; Hardware stack levels required when called:    3
  3749 ;; This function calls:
  3750 ;;		Nothing
  3751 ;; This function is called by:
  3752 ;;		_LED_Update
  3753 ;;		_LED_Light_Pos
  3754 ;; This function uses a non-reentrant model
  3755 ;;
  3756                           
  3757                           	psect	text32
  3758  000C3E                     __ptext32:
  3759                           	opt callstack 0
  3760  000C3E                     _LED_Right:
  3761                           	opt callstack 26
  3762                           
  3763                           ;LED.c: 116: UINT LED_Right(UINT a);LED.c: 117: {;LED.c: 118:     if ((a & 0b0000000001)
      +                           == 0b0000000001)
  3764                           
  3765                           ;incstack = 0
  3766  000C3E  A006               	btfss	LED_Right@a,0,c
  3767  000C40  D018               	goto	l2321
  3768                           
  3769                           ;LED.c: 119:     {;LED.c: 120:         UINT b = a & 0b1111111110;
  3770  000C42  0EFE               	movlw	254
  3771  000C44  1406               	andwf	LED_Right@a,w,c
  3772  000C46  6E0A               	movwf	LED_Right@b,c
  3773  000C48  0E03               	movlw	3
  3774  000C4A  1407               	andwf	LED_Right@a+1,w,c
  3775  000C4C  6E0B               	movwf	LED_Right@b+1,c
  3776                           
  3777                           ;LED.c: 121:         b = b >> 1;
  3778  000C4E  90D8               	bcf	status,0,c
  3779  000C50  300B               	rrcf	LED_Right@b+1,w,c
  3780  000C52  6E08               	movwf	??_LED_Right& (0+255),c
  3781  000C54  300A               	rrcf	LED_Right@b,w,c
  3782  000C56  6E0A               	movwf	LED_Right@b,c
  3783  000C58  C008  F00B         	movff	??_LED_Right,LED_Right@b+1
  3784                           
  3785                           ;LED.c: 122:         b = b | 0b1000000000;
  3786  000C5C  0E00               	movlw	0
  3787  000C5E  100A               	iorwf	LED_Right@b,w,c
  3788  000C60  6E0A               	movwf	LED_Right@b,c
  3789  000C62  0E02               	movlw	2
  3790  000C64  100B               	iorwf	LED_Right@b+1,w,c
  3791  000C66  6E0B               	movwf	LED_Right@b+1,c
  3792                           
  3793                           ;LED.c: 123:         return b;
  3794  000C68  C00A  F006         	movff	LED_Right@b,?_LED_Right
  3795  000C6C  C00B  F007         	movff	LED_Right@b+1,?_LED_Right+1
  3796  000C70  0012               	return	
  3797  000C72                     l2321:
  3798                           
  3799                           ;LED.c: 126:     {;LED.c: 127:         a =a >> 1;
  3800  000C72  90D8               	bcf	status,0,c
  3801  000C74  3007               	rrcf	LED_Right@a+1,w,c
  3802  000C76  6E08               	movwf	??_LED_Right& (0+255),c
  3803  000C78  3006               	rrcf	LED_Right@a,w,c
  3804  000C7A  6E06               	movwf	LED_Right@a,c
  3805  000C7C  C008  F007         	movff	??_LED_Right,LED_Right@a+1
  3806                           
  3807                           ;LED.c: 128:         return a;
  3808  000C80  C006  F006         	movff	LED_Right@a,?_LED_Right
  3809  000C84  C007  F007         	movff	LED_Right@a+1,?_LED_Right+1
  3810  000C88  0012               	return		;funcret
  3811  000C8A                     __end_of_LED_Right:
  3812                           	opt callstack 0
  3813                           
  3814 ;; *************** function _LED_Left *****************
  3815 ;; Defined at:
  3816 ;;		line 143 in file "LED.c"
  3817 ;; Parameters:    Size  Location     Type
  3818 ;;  a               2    5[COMRAM] unsigned int 
  3819 ;; Auto vars:     Size  Location     Type
  3820 ;;  b               2    7[COMRAM] unsigned int 
  3821 ;; Return value:  Size  Location     Type
  3822 ;;                  2    5[COMRAM] unsigned int 
  3823 ;; Registers used:
  3824 ;;		wreg, status,2, status,0
  3825 ;; Tracked objects:
  3826 ;;		On entry : 0/0
  3827 ;;		On exit  : 0/0
  3828 ;;		Unchanged: 0/0
  3829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3830 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3831 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3833 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3834 ;;Total ram usage:        4 bytes
  3835 ;; Hardware stack levels used:    1
  3836 ;; Hardware stack levels required when called:    3
  3837 ;; This function calls:
  3838 ;;		Nothing
  3839 ;; This function is called by:
  3840 ;;		_LED_Update
  3841 ;;		_LED_Light_Pos
  3842 ;; This function uses a non-reentrant model
  3843 ;;
  3844                           
  3845                           	psect	text33
  3846  000CD0                     __ptext33:
  3847                           	opt callstack 0
  3848  000CD0                     _LED_Left:
  3849                           	opt callstack 25
  3850                           
  3851                           ;LED.c: 143: UINT LED_Left(UINT a);LED.c: 144: {;LED.c: 145:     if ((a & 0b1000000000) 
      +                          == 0b1000000000)
  3852                           
  3853                           ;incstack = 0
  3854  000CD0  A207               	btfss	LED_Left@a+1,1,c
  3855  000CD2  D015               	goto	l2337
  3856                           
  3857                           ;LED.c: 146:     {;LED.c: 147:         UINT b = a & 0b0111111111;
  3858  000CD4  0EFF               	movlw	255
  3859  000CD6  1406               	andwf	LED_Left@a,w,c
  3860  000CD8  6E08               	movwf	LED_Left@b,c
  3861  000CDA  0E01               	movlw	1
  3862  000CDC  1407               	andwf	LED_Left@a+1,w,c
  3863  000CDE  6E09               	movwf	LED_Left@b+1,c
  3864                           
  3865                           ;LED.c: 148:         b = b << 1;
  3866  000CE0  90D8               	bcf	status,0,c
  3867  000CE2  3408               	rlcf	LED_Left@b,w,c
  3868  000CE4  6E08               	movwf	LED_Left@b,c
  3869  000CE6  3409               	rlcf	LED_Left@b+1,w,c
  3870  000CE8  6E09               	movwf	LED_Left@b+1,c
  3871                           
  3872                           ;LED.c: 149:         b = b | 0b0000000001;
  3873  000CEA  0E01               	movlw	1
  3874  000CEC  1008               	iorwf	LED_Left@b,w,c
  3875  000CEE  6E08               	movwf	LED_Left@b,c
  3876  000CF0  5009               	movf	LED_Left@b+1,w,c
  3877  000CF2  6E09               	movwf	LED_Left@b+1,c
  3878                           
  3879                           ;LED.c: 150:         return b;
  3880  000CF4  C008  F006         	movff	LED_Left@b,?_LED_Left
  3881  000CF8  C009  F007         	movff	LED_Left@b+1,?_LED_Left+1
  3882  000CFC  0012               	return	
  3883  000CFE                     l2337:
  3884                           
  3885                           ;LED.c: 153:     {;LED.c: 154:         a = a << 1;
  3886  000CFE  90D8               	bcf	status,0,c
  3887  000D00  3406               	rlcf	LED_Left@a,w,c
  3888  000D02  6E06               	movwf	LED_Left@a,c
  3889  000D04  3407               	rlcf	LED_Left@a+1,w,c
  3890  000D06  6E07               	movwf	LED_Left@a+1,c
  3891                           
  3892                           ;LED.c: 155:         return a;
  3893  000D08  C006  F006         	movff	LED_Left@a,?_LED_Left
  3894  000D0C  C007  F007         	movff	LED_Left@a+1,?_LED_Left+1
  3895  000D10  0012               	return		;funcret
  3896  000D12                     __end_of_LED_Left:
  3897                           	opt callstack 0
  3898                           
  3899 ;; *************** function _INI_All *****************
  3900 ;; Defined at:
  3901 ;;		line 52 in file "INI.c"
  3902 ;; Parameters:    Size  Location     Type
  3903 ;;		None
  3904 ;; Auto vars:     Size  Location     Type
  3905 ;;		None
  3906 ;; Return value:  Size  Location     Type
  3907 ;;                  1    wreg      void 
  3908 ;; Registers used:
  3909 ;;		wreg, status,2, status,0, cstack
  3910 ;; Tracked objects:
  3911 ;;		On entry : 0/0
  3912 ;;		On exit  : 0/0
  3913 ;;		Unchanged: 0/0
  3914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3919 ;;Total ram usage:        0 bytes
  3920 ;; Hardware stack levels used:    1
  3921 ;; Hardware stack levels required when called:    5
  3922 ;; This function calls:
  3923 ;;		_CAN_Setup
  3924 ;;		_INI_GlobalInterrupt
  3925 ;;		_INI_LED_Start
  3926 ;;		_INI_OUTPUT
  3927 ;;		_INI_Timer
  3928 ;; This function is called by:
  3929 ;;		_main
  3930 ;; This function uses a non-reentrant model
  3931 ;;
  3932                           
  3933                           	psect	text34
  3934  000F3E                     __ptext34:
  3935                           	opt callstack 0
  3936  000F3E                     _INI_All:
  3937                           	opt callstack 25
  3938                           
  3939                           ;INI.c: 55:     WDTCONbits.SWDTEN = 1;
  3940                           
  3941                           ;incstack = 0
  3942  000F3E  80D1               	bsf	4049,0,c	;volatile
  3943  000F40  0004               	clrwdt		;# 
  3944                           
  3945                           ;INI.c: 64:     INI_OUTPUT();
  3946  000F42  EC90  F007         	call	_INI_OUTPUT	;wreg free
  3947                           
  3948                           ;INI.c: 66:     CAN_Setup();
  3949  000F46  EC1F  F005         	call	_CAN_Setup	;wreg free
  3950                           
  3951                           ;INI.c: 67:     INI_GlobalInterrupt();
  3952  000F4A  ECB8  F007         	call	_INI_GlobalInterrupt	;wreg free
  3953                           
  3954                           ;INI.c: 69:     INI_Timer();
  3955  000F4E  ECAC  F007         	call	_INI_Timer	;wreg free
  3956                           
  3957                           ;INI.c: 71:     INI_LED_Start();
  3958  000F52  ECF5  F006         	call	_INI_LED_Start	;wreg free
  3959  000F56  0012               	return		;funcret
  3960  000F58                     __end_of_INI_All:
  3961                           	opt callstack 0
  3962                           
  3963 ;; *************** function _INI_Timer *****************
  3964 ;; Defined at:
  3965 ;;		line 92 in file "TMR1.c"
  3966 ;; Parameters:    Size  Location     Type
  3967 ;;		None
  3968 ;; Auto vars:     Size  Location     Type
  3969 ;;		None
  3970 ;; Return value:  Size  Location     Type
  3971 ;;                  1    wreg      unsigned char 
  3972 ;; Registers used:
  3973 ;;		wreg, status,2
  3974 ;; Tracked objects:
  3975 ;;		On entry : 0/0
  3976 ;;		On exit  : 0/0
  3977 ;;		Unchanged: 0/0
  3978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3982 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3983 ;;Total ram usage:        0 bytes
  3984 ;; Hardware stack levels used:    1
  3985 ;; Hardware stack levels required when called:    3
  3986 ;; This function calls:
  3987 ;;		Nothing
  3988 ;; This function is called by:
  3989 ;;		_INI_All
  3990 ;; This function uses a non-reentrant model
  3991 ;;
  3992                           
  3993                           	psect	text35
  3994  000F58                     __ptext35:
  3995                           	opt callstack 0
  3996  000F58                     _INI_Timer:
  3997                           	opt callstack 26
  3998                           
  3999                           ;TMR1.c: 96:     IRCF2 = 1;
  4000                           
  4001                           ;incstack = 0
  4002  000F58  8CD3               	bsf	4051,6,c	;volatile
  4003                           
  4004                           ;TMR1.c: 97:     IRCF1 = 1;
  4005  000F5A  8AD3               	bsf	4051,5,c	;volatile
  4006                           
  4007                           ;TMR1.c: 98:     IRCF0 = 1;
  4008  000F5C  88D3               	bsf	4051,4,c	;volatile
  4009                           
  4010                           ;TMR1.c: 99:     T1CON = 0b00111101;
  4011  000F5E  0E3D               	movlw	61
  4012  000F60  6ECD               	movwf	4045,c	;volatile
  4013                           
  4014                           ;TMR1.c: 100:     TMR1H= (UINT8)((0xFFFF - (((8000000/8)/4)/10)) >> 8);
  4015  000F62  0E9E               	movlw	158
  4016  000F64  6ECF               	movwf	4047,c	;volatile
  4017                           
  4018                           ;TMR1.c: 101:     TMR1L=(UINT8)((0xFFFF - (((8000000/8)/4)/10)) & 0xFF);
  4019  000F66  0E57               	movlw	87
  4020  000F68  6ECE               	movwf	4046,c	;volatile
  4021                           
  4022                           ;TMR1.c: 102:     TMR1IE=1;
  4023  000F6A  809D               	bsf	3997,0,c	;volatile
  4024                           
  4025                           ;TMR1.c: 103:     TMR1ON = 1;
  4026  000F6C  80CD               	bsf	4045,0,c	;volatile
  4027  000F6E  0012               	return		;funcret
  4028  000F70                     __end_of_INI_Timer:
  4029                           	opt callstack 0
  4030                           
  4031 ;; *************** function _INI_OUTPUT *****************
  4032 ;; Defined at:
  4033 ;;		line 27 in file "INI.c"
  4034 ;; Parameters:    Size  Location     Type
  4035 ;;		None
  4036 ;; Auto vars:     Size  Location     Type
  4037 ;;		None
  4038 ;; Return value:  Size  Location     Type
  4039 ;;                  1    wreg      void 
  4040 ;; Registers used:
  4041 ;;		wreg, status,2
  4042 ;; Tracked objects:
  4043 ;;		On entry : 0/0
  4044 ;;		On exit  : 0/0
  4045 ;;		Unchanged: 0/0
  4046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4051 ;;Total ram usage:        0 bytes
  4052 ;; Hardware stack levels used:    1
  4053 ;; Hardware stack levels required when called:    3
  4054 ;; This function calls:
  4055 ;;		Nothing
  4056 ;; This function is called by:
  4057 ;;		_INI_All
  4058 ;; This function uses a non-reentrant model
  4059 ;;
  4060                           
  4061                           	psect	text36
  4062  000F20                     __ptext36:
  4063                           	opt callstack 0
  4064  000F20                     _INI_OUTPUT:
  4065                           	opt callstack 26
  4066                           
  4067                           ;INI.c: 31:     LATA = 0;
  4068                           
  4069                           ;incstack = 0
  4070  000F20  0E00               	movlw	0
  4071  000F22  6E89               	movwf	3977,c	;volatile
  4072                           
  4073                           ;INI.c: 32:     LATB = 0;
  4074  000F24  0E00               	movlw	0
  4075  000F26  6E8A               	movwf	3978,c	;volatile
  4076                           
  4077                           ;INI.c: 33:     LATC = 0;
  4078  000F28  0E00               	movlw	0
  4079  000F2A  6E8B               	movwf	3979,c	;volatile
  4080                           
  4081                           ;INI.c: 34:     TRISA = 0x0C;
  4082  000F2C  0E0C               	movlw	12
  4083  000F2E  6E92               	movwf	3986,c	;volatile
  4084                           
  4085                           ;INI.c: 35:     TRISB = 0b10001000;
  4086  000F30  0E88               	movlw	136
  4087  000F32  6E93               	movwf	3987,c	;volatile
  4088                           
  4089                           ;INI.c: 36:     TRISC = 0xBF;
  4090  000F34  0EBF               	movlw	191
  4091  000F36  6E94               	movwf	3988,c	;volatile
  4092                           
  4093                           ;INI.c: 37:     RCONbits.IPEN = 1;
  4094  000F38  8ED0               	bsf	4048,7,c	;volatile
  4095                           
  4096                           ;INI.c: 40:     DetectorLedRadar.Flags.inicjalizacja = 1;
  4097  000F3A  863D               	bsf	_DetectorLedRadar,3,c
  4098  000F3C  0012               	return		;funcret
  4099  000F3E                     __end_of_INI_OUTPUT:
  4100                           	opt callstack 0
  4101                           
  4102 ;; *************** function _INI_LED_Start *****************
  4103 ;; Defined at:
  4104 ;;		line 207 in file "LED.c"
  4105 ;; Parameters:    Size  Location     Type
  4106 ;;		None
  4107 ;; Auto vars:     Size  Location     Type
  4108 ;;		None
  4109 ;; Return value:  Size  Location     Type
  4110 ;;                  1    wreg      void 
  4111 ;; Registers used:
  4112 ;;		wreg, status,2, status,0, cstack
  4113 ;; Tracked objects:
  4114 ;;		On entry : 0/0
  4115 ;;		On exit  : 0/0
  4116 ;;		Unchanged: 0/0
  4117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4122 ;;Total ram usage:        0 bytes
  4123 ;; Hardware stack levels used:    1
  4124 ;; Hardware stack levels required when called:    4
  4125 ;; This function calls:
  4126 ;;		_LED_Control
  4127 ;; This function is called by:
  4128 ;;		_INI_All
  4129 ;; This function uses a non-reentrant model
  4130 ;;
  4131                           
  4132                           	psect	text37
  4133  000DEA                     __ptext37:
  4134                           	opt callstack 0
  4135  000DEA                     _INI_LED_Start:
  4136                           	opt callstack 25
  4137                           
  4138                           ;LED.c: 209:     TRISA = TRISA & 0b00000001;
  4139                           
  4140                           ;incstack = 0
  4141  000DEA  5092               	movf	3986,w,c	;volatile
  4142  000DEC  0B01               	andlw	1
  4143  000DEE  6E92               	movwf	3986,c	;volatile
  4144                           
  4145                           ;LED.c: 210:     TRISB = TRISB & 0b11111100;
  4146  000DF0  5093               	movf	3987,w,c	;volatile
  4147  000DF2  0BFC               	andlw	252
  4148  000DF4  6E93               	movwf	3987,c	;volatile
  4149                           
  4150                           ;LED.c: 211:     TRISE = TRISE & 0b11111000;
  4151  000DF6  5096               	movf	3990,w,c	;volatile
  4152  000DF8  0BF8               	andlw	248
  4153  000DFA  6E96               	movwf	3990,c	;volatile
  4154                           
  4155                           ;LED.c: 212:     TRISD = TRISD & 0b00000000;
  4156  000DFC  0E00               	movlw	0
  4157  000DFE  6E95               	movwf	3989,c	;volatile
  4158                           
  4159                           ;LED.c: 213:     LED_Control(RED,0b0000000000);
  4160  000E00  0E00               	movlw	0
  4161  000E02  6E07               	movwf	LED_Control@diode+1,c
  4162  000E04  0E00               	movlw	0
  4163  000E06  6E06               	movwf	LED_Control@diode,c
  4164  000E08  0E00               	movlw	0
  4165  000E0A  EC13  F003         	call	_LED_Control
  4166                           
  4167                           ;LED.c: 214:     LED_Control(GREEN,0b0000000000);
  4168  000E0E  0E00               	movlw	0
  4169  000E10  6E07               	movwf	LED_Control@diode+1,c
  4170  000E12  0E00               	movlw	0
  4171  000E14  6E06               	movwf	LED_Control@diode,c
  4172  000E16  0E01               	movlw	1
  4173  000E18  EC13  F003         	call	_LED_Control
  4174  000E1C  0012               	return		;funcret
  4175  000E1E                     __end_of_INI_LED_Start:
  4176                           	opt callstack 0
  4177                           
  4178 ;; *************** function _LED_Control *****************
  4179 ;; Defined at:
  4180 ;;		line 232 in file "LED.c"
  4181 ;; Parameters:    Size  Location     Type
  4182 ;;  color           1    wreg     enum E10641
  4183 ;;  diode           2    5[COMRAM] unsigned int 
  4184 ;; Auto vars:     Size  Location     Type
  4185 ;;  color           1    9[COMRAM] enum E10641
  4186 ;;  cos             2    0        unsigned int 
  4187 ;; Return value:  Size  Location     Type
  4188 ;;                  1    wreg      unsigned char 
  4189 ;; Registers used:
  4190 ;;		wreg, status,2, status,0
  4191 ;; Tracked objects:
  4192 ;;		On entry : 0/0
  4193 ;;		On exit  : 0/0
  4194 ;;		Unchanged: 0/0
  4195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4196 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4197 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4199 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4200 ;;Total ram usage:        5 bytes
  4201 ;; Hardware stack levels used:    1
  4202 ;; Hardware stack levels required when called:    3
  4203 ;; This function calls:
  4204 ;;		Nothing
  4205 ;; This function is called by:
  4206 ;;		_LED_Error
  4207 ;;		_LED_Clear
  4208 ;;		_LED_Light_Pos
  4209 ;;		_INI_LED_Start
  4210 ;; This function uses a non-reentrant model
  4211 ;;
  4212                           
  4213                           	psect	text38
  4214  000626                     __ptext38:
  4215                           	opt callstack 0
  4216  000626                     _LED_Control:
  4217                           	opt callstack 24
  4218                           
  4219                           ;incstack = 0
  4220                           ;LED_Control@color stored from wreg
  4221  000626  6E0A               	movwf	LED_Control@color,c
  4222                           
  4223                           ;LED.c: 235:     if(color == RED)
  4224  000628  500A               	movf	LED_Control@color,w,c
  4225  00062A  A4D8               	btfss	status,2,c
  4226  00062C  D050               	goto	l299
  4227                           
  4228                           ;LED.c: 236:     {;LED.c: 238:         if((diode & 0b0000000001)== 0b0000000001)
  4229  00062E  A006               	btfss	LED_Control@diode,0,c
  4230  000630  D003               	goto	l2081
  4231                           
  4232                           ;LED.c: 239:         {;LED.c: 240:             LATD = LATD | ~0b11101111;
  4233  000632  508C               	movf	3980,w,c	;volatile
  4234  000634  0910               	iorlw	16
  4235  000636  D002               	goto	L3
  4236  000638                     l2081:
  4237                           
  4238                           ;LED.c: 243:         {;LED.c: 244:             LATD = LATD &0b11101111;
  4239  000638  508C               	movf	3980,w,c	;volatile
  4240  00063A  0BEF               	andlw	239
  4241  00063C                     L3:
  4242  00063C  6E8C               	movwf	3980,c	;volatile
  4243                           
  4244                           ;LED.c: 247:         if((diode & 0b0000000010) == 0b0000000010)
  4245  00063E  A206               	btfss	LED_Control@diode,1,c
  4246  000640  D003               	goto	l2087
  4247                           
  4248                           ;LED.c: 248:         {;LED.c: 249:             LATD = LATD | ~0b10111111;
  4249  000642  508C               	movf	3980,w,c	;volatile
  4250  000644  0940               	iorlw	64
  4251  000646  D002               	goto	L4
  4252  000648                     l2087:
  4253                           
  4254                           ;LED.c: 252:         {;LED.c: 253:             LATD = LATD & 0b10111111;
  4255  000648  508C               	movf	3980,w,c	;volatile
  4256  00064A  0BBF               	andlw	191
  4257  00064C                     L4:
  4258  00064C  6E8C               	movwf	3980,c	;volatile
  4259                           
  4260                           ;LED.c: 256:         if((diode & 0b0000000100) == 0b0000000100)
  4261  00064E  A406               	btfss	LED_Control@diode,2,c
  4262  000650  D003               	goto	l2093
  4263                           
  4264                           ;LED.c: 257:         {;LED.c: 258:             LATB = LATB | ~0b11111110;
  4265  000652  508A               	movf	3978,w,c	;volatile
  4266  000654  0901               	iorlw	1
  4267  000656  D002               	goto	L5
  4268  000658                     l2093:
  4269                           
  4270                           ;LED.c: 261:         {;LED.c: 262:             LATB = LATB & 0b11111110;
  4271  000658  508A               	movf	3978,w,c	;volatile
  4272  00065A  0BFE               	andlw	254
  4273  00065C                     L5:
  4274  00065C  6E8A               	movwf	3978,c	;volatile
  4275                           
  4276                           ;LED.c: 266:         if((diode & 0b0000001000) == 0b0000001000)
  4277  00065E  A606               	btfss	LED_Control@diode,3,c
  4278  000660  D003               	goto	l2099
  4279                           
  4280                           ;LED.c: 267:         {;LED.c: 268:             LATA = LATA | ~0b11111101;
  4281  000662  5089               	movf	3977,w,c	;volatile
  4282  000664  0902               	iorlw	2
  4283  000666  D002               	goto	L6
  4284  000668                     l2099:
  4285                           
  4286                           ;LED.c: 271:         {;LED.c: 272:             LATA = LATA & 0b11111101;
  4287  000668  5089               	movf	3977,w,c	;volatile
  4288  00066A  0BFD               	andlw	253
  4289  00066C                     L6:
  4290  00066C  6E89               	movwf	3977,c	;volatile
  4291                           
  4292                           ;LED.c: 276:         if((diode & 0b0000010000) == 0b0000010000)
  4293  00066E  A806               	btfss	LED_Control@diode,4,c
  4294  000670  D003               	goto	l2105
  4295                           
  4296                           ;LED.c: 277:         {;LED.c: 278:             LATA = LATA | ~0b11110111;
  4297  000672  5089               	movf	3977,w,c	;volatile
  4298  000674  0908               	iorlw	8
  4299  000676  D002               	goto	L7
  4300  000678                     l2105:
  4301                           
  4302                           ;LED.c: 281:         {;LED.c: 282:             LATA = LATA & 0b11110111;
  4303  000678  5089               	movf	3977,w,c	;volatile
  4304  00067A  0BF7               	andlw	247
  4305  00067C                     L7:
  4306  00067C  6E89               	movwf	3977,c	;volatile
  4307                           
  4308                           ;LED.c: 286:         if((diode & 0b0000100000) == 0b0000100000)
  4309  00067E  AA06               	btfss	LED_Control@diode,5,c
  4310  000680  D003               	goto	l2111
  4311                           
  4312                           ;LED.c: 287:         {;LED.c: 288:             LATA = LATA | ~0b11011111;
  4313  000682  5089               	movf	3977,w,c	;volatile
  4314  000684  0920               	iorlw	32
  4315  000686  D002               	goto	L8
  4316  000688                     l2111:
  4317                           
  4318                           ;LED.c: 291:         {;LED.c: 292:             LATA = LATA & 0b11011111;
  4319  000688  5089               	movf	3977,w,c	;volatile
  4320  00068A  0BDF               	andlw	223
  4321  00068C                     L8:
  4322  00068C  6E89               	movwf	3977,c	;volatile
  4323                           
  4324                           ;LED.c: 295:         if((diode & 0b0001000000) == 0b0001000000)
  4325  00068E  AC06               	btfss	LED_Control@diode,6,c
  4326  000690  D003               	goto	l2117
  4327                           
  4328                           ;LED.c: 296:         {;LED.c: 297:             LATE = LATE | ~0b11111101;
  4329  000692  508D               	movf	3981,w,c	;volatile
  4330  000694  0902               	iorlw	2
  4331  000696  D002               	goto	L9
  4332  000698                     l2117:
  4333                           
  4334                           ;LED.c: 300:         {;LED.c: 301:             LATE = LATE & 0b11111101;
  4335  000698  508D               	movf	3981,w,c	;volatile
  4336  00069A  0BFD               	andlw	253
  4337  00069C                     L9:
  4338  00069C  6E8D               	movwf	3981,c	;volatile
  4339                           
  4340                           ;LED.c: 304:         if((diode & 0b0010000000) == 0b0010000000)
  4341  00069E  AE06               	btfss	LED_Control@diode,7,c
  4342  0006A0  D003               	goto	l2123
  4343                           
  4344                           ;LED.c: 305:         {;LED.c: 306:             LATA = LATA | ~0b01111111;
  4345  0006A2  5089               	movf	3977,w,c	;volatile
  4346  0006A4  0980               	iorlw	128
  4347  0006A6  D002               	goto	L10
  4348  0006A8                     l2123:
  4349                           
  4350                           ;LED.c: 309:         {;LED.c: 310:             LATA = LATA & 0b01111111;
  4351  0006A8  5089               	movf	3977,w,c	;volatile
  4352  0006AA  0B7F               	andlw	127
  4353  0006AC                     L10:
  4354  0006AC  6E89               	movwf	3977,c	;volatile
  4355                           
  4356                           ;LED.c: 314:         if((diode & 0b0100000000) == 0b0100000000)
  4357  0006AE  A007               	btfss	LED_Control@diode+1,0,c
  4358  0006B0  D003               	goto	l2129
  4359                           
  4360                           ;LED.c: 315:         {;LED.c: 316:             LATD = LATD | ~0b11111110;
  4361  0006B2  508C               	movf	3980,w,c	;volatile
  4362  0006B4  0901               	iorlw	1
  4363  0006B6  D002               	goto	L11
  4364  0006B8                     l2129:
  4365                           
  4366                           ;LED.c: 319:         {;LED.c: 320:             LATD = LATD & 0b11111110;
  4367  0006B8  508C               	movf	3980,w,c	;volatile
  4368  0006BA  0BFE               	andlw	254
  4369  0006BC                     L11:
  4370  0006BC  6E8C               	movwf	3980,c	;volatile
  4371                           
  4372                           ;LED.c: 323:         if((diode & 0b1000000000) == 0b1000000000)
  4373  0006BE  A207               	btfss	LED_Control@diode+1,1,c
  4374  0006C0  D003               	goto	l2135
  4375                           
  4376                           ;LED.c: 324:         {;LED.c: 325:             LATD = LATD | ~0b11111011;
  4377  0006C2  508C               	movf	3980,w,c	;volatile
  4378  0006C4  0904               	iorlw	4
  4379  0006C6  D002               	goto	L12
  4380  0006C8                     l2135:
  4381                           
  4382                           ;LED.c: 328:         {;LED.c: 329:             LATD = LATD & 0b11111011;
  4383  0006C8  508C               	movf	3980,w,c	;volatile
  4384  0006CA  0BFB               	andlw	251
  4385  0006CC                     L12:
  4386  0006CC  6E8C               	movwf	3980,c	;volatile
  4387  0006CE                     l299:
  4388                           
  4389                           ;LED.c: 334:     if(color == GREEN)
  4390  0006CE  040A               	decf	LED_Control@color,w,c
  4391  0006D0  A4D8               	btfss	status,2,c
  4392  0006D2  0012               	return	
  4393                           
  4394                           ;LED.c: 335:     {;LED.c: 337:         if((diode & 0b0000000001) == 0b0000000001)
  4395  0006D4  A006               	btfss	LED_Control@diode,0,c
  4396  0006D6  D003               	goto	l2141
  4397                           
  4398                           ;LED.c: 338:         {;LED.c: 339:             LATD = LATD | ~0b11011111;
  4399  0006D8  508C               	movf	3980,w,c	;volatile
  4400  0006DA  0920               	iorlw	32
  4401  0006DC  D002               	goto	L13
  4402  0006DE                     l2141:
  4403                           
  4404                           ;LED.c: 342:         {;LED.c: 343:             LATD = LATD & 0b11011111;
  4405  0006DE  508C               	movf	3980,w,c	;volatile
  4406  0006E0  0BDF               	andlw	223
  4407  0006E2                     L13:
  4408  0006E2  6E8C               	movwf	3980,c	;volatile
  4409                           
  4410                           ;LED.c: 347:         if((diode & 0b0000000010) == 0b0000000010)
  4411  0006E4  A206               	btfss	LED_Control@diode,1,c
  4412  0006E6  D003               	goto	l2147
  4413                           
  4414                           ;LED.c: 348:         {;LED.c: 349:             LATD = LATD | ~0b01111111;
  4415  0006E8  508C               	movf	3980,w,c	;volatile
  4416  0006EA  0980               	iorlw	128
  4417  0006EC  D002               	goto	L14
  4418  0006EE                     l2147:
  4419                           
  4420                           ;LED.c: 352:         {;LED.c: 353:             LATD = LATD & 0b01111111;
  4421  0006EE  508C               	movf	3980,w,c	;volatile
  4422  0006F0  0B7F               	andlw	127
  4423  0006F2                     L14:
  4424  0006F2  6E8C               	movwf	3980,c	;volatile
  4425                           
  4426                           ;LED.c: 357:         if((diode & 0b0000000100) == 0b0000000100)
  4427  0006F4  A406               	btfss	LED_Control@diode,2,c
  4428  0006F6  D003               	goto	l2153
  4429                           
  4430                           ;LED.c: 358:         {;LED.c: 359:             LATB = LATB | ~0b11111101;
  4431  0006F8  508A               	movf	3978,w,c	;volatile
  4432  0006FA  0902               	iorlw	2
  4433  0006FC  D002               	goto	L15
  4434  0006FE                     l2153:
  4435                           
  4436                           ;LED.c: 362:         {;LED.c: 363:             LATB = LATB & 0b11111101;
  4437  0006FE  508A               	movf	3978,w,c	;volatile
  4438  000700  0BFD               	andlw	253
  4439  000702                     L15:
  4440  000702  6E8A               	movwf	3978,c	;volatile
  4441                           
  4442                           ;LED.c: 366:         if((diode & 0b0000001000) == 0b0000001000)
  4443  000704  A606               	btfss	LED_Control@diode,3,c
  4444  000706  D003               	goto	l2159
  4445                           
  4446                           ;LED.c: 367:         {;LED.c: 368:             LATA = LATA | ~0b11111011;
  4447  000708  5089               	movf	3977,w,c	;volatile
  4448  00070A  0904               	iorlw	4
  4449  00070C  D002               	goto	L16
  4450  00070E                     l2159:
  4451                           
  4452                           ;LED.c: 371:         {;LED.c: 372:             LATA = LATA & 0b11111011;
  4453  00070E  5089               	movf	3977,w,c	;volatile
  4454  000710  0BFB               	andlw	251
  4455  000712                     L16:
  4456  000712  6E89               	movwf	3977,c	;volatile
  4457                           
  4458                           ;LED.c: 376:         if((diode & 0b0000010000) == 0b0000010000)
  4459  000714  A806               	btfss	LED_Control@diode,4,c
  4460  000716  D003               	goto	l2165
  4461                           
  4462                           ;LED.c: 377:         {;LED.c: 378:             LATA = LATA | ~0b11101111;
  4463  000718  5089               	movf	3977,w,c	;volatile
  4464  00071A  0910               	iorlw	16
  4465  00071C  D002               	goto	L17
  4466  00071E                     l2165:
  4467                           
  4468                           ;LED.c: 381:         {;LED.c: 382:             LATA = LATA & 0b11101111;
  4469  00071E  5089               	movf	3977,w,c	;volatile
  4470  000720  0BEF               	andlw	239
  4471  000722                     L17:
  4472  000722  6E89               	movwf	3977,c	;volatile
  4473                           
  4474                           ;LED.c: 386:         if((diode & 0b0000100000) == 0b0000100000)
  4475  000724  AA06               	btfss	LED_Control@diode,5,c
  4476  000726  D003               	goto	l2171
  4477                           
  4478                           ;LED.c: 387:         {;LED.c: 388:             LATE = LATE | ~0b11111110;
  4479  000728  508D               	movf	3981,w,c	;volatile
  4480  00072A  0901               	iorlw	1
  4481  00072C  D002               	goto	L18
  4482  00072E                     l2171:
  4483                           
  4484                           ;LED.c: 391:         {;LED.c: 392:             LATE = LATE & 0b11111110;
  4485  00072E  508D               	movf	3981,w,c	;volatile
  4486  000730  0BFE               	andlw	254
  4487  000732                     L18:
  4488  000732  6E8D               	movwf	3981,c	;volatile
  4489                           
  4490                           ;LED.c: 396:         if((diode & 0b0001000000) == 0b0001000000)
  4491  000734  AC06               	btfss	LED_Control@diode,6,c
  4492  000736  D003               	goto	l2177
  4493                           
  4494                           ;LED.c: 397:         {;LED.c: 398:             LATE = LATE | ~0b11111011;
  4495  000738  508D               	movf	3981,w,c	;volatile
  4496  00073A  0904               	iorlw	4
  4497  00073C  D002               	goto	L19
  4498  00073E                     l2177:
  4499                           
  4500                           ;LED.c: 401:         {;LED.c: 402:             LATE = LATE & 0b11111011;
  4501  00073E  508D               	movf	3981,w,c	;volatile
  4502  000740  0BFB               	andlw	251
  4503  000742                     L19:
  4504  000742  6E8D               	movwf	3981,c	;volatile
  4505                           
  4506                           ;LED.c: 405:         if((diode & 0b0010000000) == 0b0010000000)
  4507  000744  AE06               	btfss	LED_Control@diode,7,c
  4508  000746  D003               	goto	l2183
  4509                           
  4510                           ;LED.c: 406:         {;LED.c: 407:             LATA = LATA | ~0b10111111;
  4511  000748  5089               	movf	3977,w,c	;volatile
  4512  00074A  0940               	iorlw	64
  4513  00074C  D002               	goto	L20
  4514  00074E                     l2183:
  4515                           
  4516                           ;LED.c: 410:         {;LED.c: 411:             LATA = LATA & 0b10111111;
  4517  00074E  5089               	movf	3977,w,c	;volatile
  4518  000750  0BBF               	andlw	191
  4519  000752                     L20:
  4520  000752  6E89               	movwf	3977,c	;volatile
  4521                           
  4522                           ;LED.c: 414:         if((diode & 0b0100000000) == 0b0100000000)
  4523  000754  A007               	btfss	LED_Control@diode+1,0,c
  4524  000756  D003               	goto	l2189
  4525                           
  4526                           ;LED.c: 415:         {;LED.c: 416:             LATD = LATD | ~0b11111101;
  4527  000758  508C               	movf	3980,w,c	;volatile
  4528  00075A  0902               	iorlw	2
  4529  00075C  D002               	goto	L21
  4530  00075E                     l2189:
  4531                           
  4532                           ;LED.c: 419:         {;LED.c: 420:             LATD = LATD & 0b11111101;
  4533  00075E  508C               	movf	3980,w,c	;volatile
  4534  000760  0BFD               	andlw	253
  4535  000762                     L21:
  4536  000762  6E8C               	movwf	3980,c	;volatile
  4537                           
  4538                           ;LED.c: 423:         if((diode & 0b1000000000) == 0b1000000000)
  4539  000764  A207               	btfss	LED_Control@diode+1,1,c
  4540  000766  D004               	goto	l2195
  4541                           
  4542                           ;LED.c: 424:         {;LED.c: 425:             LATD = LATD | ~0b11110111;
  4543  000768  508C               	movf	3980,w,c	;volatile
  4544  00076A  0908               	iorlw	8
  4545  00076C  6E8C               	movwf	3980,c	;volatile
  4546                           
  4547                           ;LED.c: 426:         }
  4548  00076E  0012               	return	
  4549  000770                     l2195:
  4550                           
  4551                           ;LED.c: 428:         {;LED.c: 429:             LATD = LATD &0b11110111;
  4552  000770  508C               	movf	3980,w,c	;volatile
  4553  000772  0BF7               	andlw	247
  4554  000774  6E8C               	movwf	3980,c	;volatile
  4555  000776  0012               	return		;funcret
  4556  000778                     __end_of_LED_Control:
  4557                           	opt callstack 0
  4558                           
  4559 ;; *************** function _INI_GlobalInterrupt *****************
  4560 ;; Defined at:
  4561 ;;		line 74 in file "INI.c"
  4562 ;; Parameters:    Size  Location     Type
  4563 ;;		None
  4564 ;; Auto vars:     Size  Location     Type
  4565 ;;		None
  4566 ;; Return value:  Size  Location     Type
  4567 ;;                  1    wreg      void 
  4568 ;; Registers used:
  4569 ;;		None
  4570 ;; Tracked objects:
  4571 ;;		On entry : 0/0
  4572 ;;		On exit  : 0/0
  4573 ;;		Unchanged: 0/0
  4574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4578 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4579 ;;Total ram usage:        0 bytes
  4580 ;; Hardware stack levels used:    1
  4581 ;; Hardware stack levels required when called:    3
  4582 ;; This function calls:
  4583 ;;		Nothing
  4584 ;; This function is called by:
  4585 ;;		_INI_All
  4586 ;; This function uses a non-reentrant model
  4587 ;;
  4588                           
  4589                           	psect	text39
  4590  000F70                     __ptext39:
  4591                           	opt callstack 0
  4592  000F70                     _INI_GlobalInterrupt:
  4593                           	opt callstack 26
  4594                           
  4595                           ;INI.c: 76: INTCONbits.GIEH=1;
  4596                           
  4597                           ;incstack = 0
  4598  000F70  8EF2               	bsf	4082,7,c	;volatile
  4599                           
  4600                           ;INI.c: 77: INTCONbits.GIEL=1;
  4601  000F72  8CF2               	bsf	4082,6,c	;volatile
  4602                           
  4603                           ;INI.c: 78: RCONbits.IPEN=1;
  4604  000F74  8ED0               	bsf	4048,7,c	;volatile
  4605                           
  4606                           ;INI.c: 79: IPEN =1;
  4607  000F76  8ED0               	bsf	4048,7,c	;volatile
  4608                           
  4609                           ;INI.c: 81: PEIE=1;
  4610  000F78  8CF2               	bsf	4082,6,c	;volatile
  4611                           
  4612                           ;INI.c: 82: TMR1IP = 0;
  4613  000F7A  909F               	bcf	3999,0,c	;volatile
  4614  000F7C  0012               	return		;funcret
  4615  000F7E                     __end_of_INI_GlobalInterrupt:
  4616                           	opt callstack 0
  4617                           
  4618 ;; *************** function _CAN_Setup *****************
  4619 ;; Defined at:
  4620 ;;		line 22 in file "CAN.c"
  4621 ;; Parameters:    Size  Location     Type
  4622 ;;		None
  4623 ;; Auto vars:     Size  Location     Type
  4624 ;;		None
  4625 ;; Return value:  Size  Location     Type
  4626 ;;                  1    wreg      void 
  4627 ;; Registers used:
  4628 ;;		wreg, status,2, status,0, cstack
  4629 ;; Tracked objects:
  4630 ;;		On entry : 0/0
  4631 ;;		On exit  : 0/0
  4632 ;;		Unchanged: 0/0
  4633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4636 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4637 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4638 ;;Total ram usage:        1 bytes
  4639 ;; Hardware stack levels used:    1
  4640 ;; Hardware stack levels required when called:    4
  4641 ;; This function calls:
  4642 ;;		_CAN_SetupClock
  4643 ;;		_CAN_SetupMask
  4644 ;; This function is called by:
  4645 ;;		_INI_All
  4646 ;; This function uses a non-reentrant model
  4647 ;;
  4648                           
  4649                           	psect	text40
  4650  000A3E                     __ptext40:
  4651                           	opt callstack 0
  4652  000A3E                     _CAN_Setup:
  4653                           	opt callstack 25
  4654                           
  4655                           ;CAN.c: 27:     CANCON = 0x80;
  4656                           
  4657                           ;incstack = 0
  4658  000A3E  0E80               	movlw	128
  4659  000A40  6E6F               	movwf	3951,c	;volatile
  4660  000A42                     l2467:
  4661                           
  4662                           ;CAN.c: 28:     while((CANSTAT & 0xE0)!=0x80)
  4663  000A42  506E               	movf	3950,w,c	;volatile
  4664  000A44  0BE0               	andlw	224
  4665  000A46  0A80               	xorlw	128
  4666  000A48  A4D8               	btfss	status,2,c
  4667  000A4A  D7FB               	goto	l2467
  4668                           
  4669                           ;CAN.c: 33:     BSEL0 = 0;
  4670  000A4C  0E00               	movlw	0
  4671  000A4E  010D               	movlb	13	; () banked
  4672  000A50  6FF8               	movwf	248,b	;volatile
  4673                           
  4674                           ;CAN.c: 34:     TXB0CON = 0;
  4675  000A52  0E00               	movlw	0
  4676  000A54  010F               	movlb	15	; () banked
  4677  000A56  6F40               	movwf	64,b	;volatile
  4678                           
  4679                           ;CAN.c: 35:     RXB0CON = 0;
  4680  000A58  0E00               	movlw	0
  4681  000A5A  6E60               	movwf	3936,c	;volatile
  4682                           
  4683                           ;CAN.c: 36:     RXB1CON = 0;
  4684  000A5C  0E00               	movlw	0
  4685  000A5E  6F50               	movwf	80,b	;volatile
  4686                           
  4687                           ;CAN.c: 37:     B0CON = 0;
  4688  000A60  0E00               	movlw	0
  4689  000A62  010E               	movlb	14	; () banked
  4690  000A64  6F20               	movwf	32,b	;volatile
  4691                           
  4692                           ;CAN.c: 38:     B1CON = 0;
  4693  000A66  0E00               	movlw	0
  4694  000A68  6F30               	movwf	48,b	;volatile
  4695                           
  4696                           ;CAN.c: 39:     PIE3 = 0;
  4697  000A6A  0E00               	movlw	0
  4698  000A6C  6EA3               	movwf	4003,c	;volatile
  4699                           
  4700                           ; BSR set to: 14
  4701                           ;CAN.c: 40:     IPR3 = 0xFF;
  4702  000A6E  68A5               	setf	4005,c	;volatile
  4703                           
  4704                           ;CAN.c: 41:     PIR3 = 0x00;
  4705  000A70  0E00               	movlw	0
  4706  000A72  6EA4               	movwf	4004,c	;volatile
  4707                           
  4708                           ;CAN.c: 42:     BIE0 = 0;
  4709  000A74  0E00               	movlw	0
  4710  000A76  010D               	movlb	13	; () banked
  4711  000A78  6FFA               	movwf	250,b	;volatile
  4712                           
  4713                           ;CAN.c: 45:     ECANCON = 0x90;
  4714  000A7A  0E90               	movlw	144
  4715  000A7C  6E77               	movwf	3959,c	;volatile
  4716                           
  4717                           ; BSR set to: 13
  4718                           ;CAN.c: 48:     CAN_SetupClock();
  4719  000A7E  EC3B  F007         	call	_CAN_SetupClock	;wreg free
  4720                           
  4721                           ;CAN.c: 51:     CAN_SetupMask();
  4722  000A82  ECEA  F004         	call	_CAN_SetupMask	;wreg free
  4723                           
  4724                           ;CAN.c: 53:     CIOCON = 0xff;
  4725  000A86  6873               	setf	3955,c	;volatile
  4726                           
  4727                           ;CAN.c: 59:     CANCON = 0x00;
  4728  000A88  0E00               	movlw	0
  4729  000A8A  6E6F               	movwf	3951,c	;volatile
  4730  000A8C                     l2481:
  4731                           
  4732                           ;CAN.c: 60:     while((CANSTAT & 0xE0) != 0x00)
  4733  000A8C  CF6E F006          	movff	3950,??_CAN_Setup	;volatile
  4734  000A90  0EE0               	movlw	224
  4735  000A92  1606               	andwf	??_CAN_Setup,f,c
  4736  000A94  B4D8               	btfsc	status,2,c
  4737  000A96  0012               	return	
  4738  000A98  D7F9               	goto	l2481
  4739  000A9A                     __end_of_CAN_Setup:
  4740                           	opt callstack 0
  4741                           
  4742 ;; *************** function _CAN_SetupMask *****************
  4743 ;; Defined at:
  4744 ;;		line 81 in file "CAN.c"
  4745 ;; Parameters:    Size  Location     Type
  4746 ;;		None
  4747 ;; Auto vars:     Size  Location     Type
  4748 ;;		None
  4749 ;; Return value:  Size  Location     Type
  4750 ;;                  1    wreg      void 
  4751 ;; Registers used:
  4752 ;;		wreg, status,2, status,0
  4753 ;; Tracked objects:
  4754 ;;		On entry : 0/0
  4755 ;;		On exit  : 0/0
  4756 ;;		Unchanged: 0/0
  4757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4762 ;;Total ram usage:        0 bytes
  4763 ;; Hardware stack levels used:    1
  4764 ;; Hardware stack levels required when called:    3
  4765 ;; This function calls:
  4766 ;;		Nothing
  4767 ;; This function is called by:
  4768 ;;		_CAN_Setup
  4769 ;; This function uses a non-reentrant model
  4770 ;;
  4771                           
  4772                           	psect	text41
  4773  0009D4                     __ptext41:
  4774                           	opt callstack 0
  4775  0009D4                     _CAN_SetupMask:
  4776                           	opt callstack 25
  4777                           
  4778                           ;CAN.c: 83:     MSEL0 = 0x50;
  4779                           
  4780                           ;incstack = 0
  4781  0009D4  0E50               	movlw	80
  4782  0009D6  010D               	movlb	13	; () banked
  4783  0009D8  6FF0               	movwf	240,b	;volatile
  4784                           
  4785                           ;CAN.c: 84:     MSEL1 = 0x55;
  4786  0009DA  0E55               	movlw	85
  4787  0009DC  6FF1               	movwf	241,b	;volatile
  4788                           
  4789                           ;CAN.c: 85:     MSEL2 = 0x55;
  4790  0009DE  0E55               	movlw	85
  4791  0009E0  6FF2               	movwf	242,b	;volatile
  4792                           
  4793                           ;CAN.c: 86:     MSEL3 = 0x55;
  4794  0009E2  0E55               	movlw	85
  4795  0009E4  6FF3               	movwf	243,b	;volatile
  4796                           
  4797                           ;CAN.c: 89:     RXM0SIDH = 0b00000000;
  4798  0009E6  0E00               	movlw	0
  4799  0009E8  010F               	movlb	15	; () banked
  4800  0009EA  6F18               	movwf	24,b	;volatile
  4801                           
  4802                           ;CAN.c: 90:     RXM0SIDL = 0b00001011;
  4803  0009EC  0E0B               	movlw	11
  4804  0009EE  6F19               	movwf	25,b	;volatile
  4805                           
  4806                           ; BSR set to: 15
  4807                           ;CAN.c: 91:     RXM0EIDH = 0xFF;
  4808  0009F0  691A               	setf	26,b	;volatile
  4809                           
  4810                           ; BSR set to: 15
  4811                           ;CAN.c: 92:     RXM0EIDL = 0xFF;
  4812  0009F2  691B               	setf	27,b	;volatile
  4813                           
  4814                           ; BSR set to: 15
  4815                           ;CAN.c: 95:     RXM1SIDH = 0xFF;
  4816  0009F4  691C               	setf	28,b	;volatile
  4817                           
  4818                           ; BSR set to: 15
  4819                           ;CAN.c: 96:     RXM1SIDL = 0xFF;
  4820  0009F6  691D               	setf	29,b	;volatile
  4821                           
  4822                           ;CAN.c: 97:     RXM1EIDH = 0;
  4823  0009F8  0E00               	movlw	0
  4824  0009FA  6F1E               	movwf	30,b	;volatile
  4825                           
  4826                           ;CAN.c: 98:     RXM1EIDL = 0;
  4827  0009FC  0E00               	movlw	0
  4828  0009FE  6F1F               	movwf	31,b	;volatile
  4829                           
  4830                           ;CAN.c: 101:     RXF0SIDH = 0x00;
  4831  000A00  0E00               	movlw	0
  4832  000A02  6F00               	movwf	0,b	;volatile
  4833                           
  4834                           ;CAN.c: 102:     RXF0SIDL = 0x01;
  4835  000A04  0E01               	movlw	1
  4836  000A06  6F01               	movwf	1,b	;volatile
  4837                           
  4838                           ; BSR set to: 15
  4839                           ;CAN.c: 103:     RXF0SIDLbits.EXIDEN = 1;
  4840  000A08  8701               	bsf	1,3,b	;volatile
  4841                           
  4842                           ;CAN.c: 104:     RXF0EIDH = (BYTE)(DaneCan.adresCAN>>8);
  4843  000A0A  503A               	movf	_DaneCan+3,w,c
  4844  000A0C  6F02               	movwf	2,b	;volatile
  4845                           
  4846                           ; BSR set to: 15
  4847                           ;CAN.c: 105:  RXF0EIDH |= 0x40;
  4848  000A0E  8D02               	bsf	2,6,b	;volatile
  4849                           
  4850                           ; BSR set to: 15
  4851                           ;CAN.c: 106:     RXF0EIDL = (BYTE)DaneCan.adresCAN;
  4852  000A10  C039  FF03         	movff	_DaneCan+2,3843	;volatile
  4853                           
  4854                           ; BSR set to: 15
  4855                           ;CAN.c: 108:     RXF1SIDH = 0x00;
  4856  000A14  0E00               	movlw	0
  4857  000A16  6F04               	movwf	4,b	;volatile
  4858                           
  4859                           ; BSR set to: 15
  4860                           ;CAN.c: 109:     RXF1SIDL = 0x01;
  4861  000A18  0E01               	movlw	1
  4862  000A1A  6F05               	movwf	5,b	;volatile
  4863                           
  4864                           ; BSR set to: 15
  4865                           ;CAN.c: 110:     RXF1SIDLbits.EXIDEN = 1;
  4866  000A1C  8705               	bsf	5,3,b	;volatile
  4867                           
  4868                           ; BSR set to: 15
  4869                           ;CAN.c: 111:     RXF1EIDH = 0x7F;
  4870  000A1E  0E7F               	movlw	127
  4871  000A20  6F06               	movwf	6,b	;volatile
  4872                           
  4873                           ; BSR set to: 15
  4874                           ;CAN.c: 112:     RXF1EIDL = 0xFF;
  4875  000A22  6907               	setf	7,b	;volatile
  4876                           
  4877                           ; BSR set to: 15
  4878                           ;CAN.c: 115:     RXF2SIDH = 0;
  4879  000A24  0E00               	movlw	0
  4880  000A26  6F08               	movwf	8,b	;volatile
  4881                           
  4882                           ; BSR set to: 15
  4883                           ;CAN.c: 116:     RXF2SIDL = 0x20;
  4884  000A28  0E20               	movlw	32
  4885  000A2A  6F09               	movwf	9,b	;volatile
  4886                           
  4887                           ; BSR set to: 15
  4888                           ;CAN.c: 117:     RXF2SIDLbits.EXIDEN = 1;
  4889  000A2C  8709               	bsf	9,3,b	;volatile
  4890                           
  4891                           ; BSR set to: 15
  4892                           ;CAN.c: 118:     RXF2EIDH = 0;
  4893  000A2E  0E00               	movlw	0
  4894  000A30  6F0A               	movwf	10,b	;volatile
  4895                           
  4896                           ; BSR set to: 15
  4897                           ;CAN.c: 119:     RXF2EIDL = 0;
  4898  000A32  0E00               	movlw	0
  4899  000A34  6F0B               	movwf	11,b	;volatile
  4900                           
  4901                           ; BSR set to: 15
  4902                           ;CAN.c: 127:     RXFCON0 = 0x07;
  4903  000A36  0E07               	movlw	7
  4904  000A38  010D               	movlb	13	; () banked
  4905  000A3A  6FD4               	movwf	212,b	;volatile
  4906                           
  4907                           ; BSR set to: 13
  4908  000A3C  0012               	return		;funcret
  4909  000A3E                     __end_of_CAN_SetupMask:
  4910                           	opt callstack 0
  4911                           
  4912 ;; *************** function _CAN_SetupClock *****************
  4913 ;; Defined at:
  4914 ;;		line 136 in file "CAN.c"
  4915 ;; Parameters:    Size  Location     Type
  4916 ;;		None
  4917 ;; Auto vars:     Size  Location     Type
  4918 ;;		None
  4919 ;; Return value:  Size  Location     Type
  4920 ;;                  1    wreg      void 
  4921 ;; Registers used:
  4922 ;;		None
  4923 ;; Tracked objects:
  4924 ;;		On entry : 0/0
  4925 ;;		On exit  : 0/0
  4926 ;;		Unchanged: 0/0
  4927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4932 ;;Total ram usage:        0 bytes
  4933 ;; Hardware stack levels used:    1
  4934 ;; Hardware stack levels required when called:    3
  4935 ;; This function calls:
  4936 ;;		Nothing
  4937 ;; This function is called by:
  4938 ;;		_CAN_Setup
  4939 ;; This function uses a non-reentrant model
  4940 ;;
  4941                           
  4942                           	psect	text42
  4943  000E76                     __ptext42:
  4944                           	opt callstack 0
  4945  000E76                     _CAN_SetupClock:
  4946                           	opt callstack 25
  4947                           
  4948                           ;CAN.c: 138:     BRGCON1bits.BRP0 = (((32000000/4)/(2*20*50000))-1) & 0b000001;
  4949                           
  4950                           ; BSR set to: 13
  4951                           ;incstack = 0
  4952  000E76  8070               	bsf	3952,0,c	;volatile
  4953                           
  4954                           ;CAN.c: 139:     BRGCON1bits.BRP1 = ((((32000000/4)/(2*20*50000))-1) >> 1) & 0b000001;
  4955  000E78  8270               	bsf	3952,1,c	;volatile
  4956                           
  4957                           ;CAN.c: 140:     BRGCON1bits.BRP2 = ((((32000000/4)/(2*20*50000))-1) >> 2) & 0b000001;
  4958  000E7A  9470               	bcf	3952,2,c	;volatile
  4959                           
  4960                           ;CAN.c: 141:     BRGCON1bits.BRP3 = ((((32000000/4)/(2*20*50000))-1) >> 3) & 0b000001;
  4961  000E7C  9670               	bcf	3952,3,c	;volatile
  4962                           
  4963                           ;CAN.c: 142:     BRGCON1bits.BRP4 = ((((32000000/4)/(2*20*50000))-1) >> 4) & 0b000001;
  4964  000E7E  9870               	bcf	3952,4,c	;volatile
  4965                           
  4966                           ;CAN.c: 143:     BRGCON1bits.BRP5 = ((((32000000/4)/(2*20*50000))-1) >> 5) & 0b000001;
  4967  000E80  9A70               	bcf	3952,5,c	;volatile
  4968                           
  4969                           ;CAN.c: 145:     BRGCON1bits.SJW0 = 1;
  4970  000E82  8C70               	bsf	3952,6,c	;volatile
  4971                           
  4972                           ;CAN.c: 146:     BRGCON1bits.SJW1 = 1;
  4973  000E84  8E70               	bsf	3952,7,c	;volatile
  4974                           
  4975                           ;CAN.c: 148:     BRGCON2bits.SEG1PH0 = 1;
  4976  000E86  8671               	bsf	3953,3,c	;volatile
  4977                           
  4978                           ;CAN.c: 149:     BRGCON2bits.SEG1PH1 = 1;
  4979  000E88  8871               	bsf	3953,4,c	;volatile
  4980                           
  4981                           ;CAN.c: 150:     BRGCON2bits.SEG1PH2 = 1;
  4982  000E8A  8A71               	bsf	3953,5,c	;volatile
  4983                           
  4984                           ;CAN.c: 152:     BRGCON2bits.PRSEG2 = 1;
  4985  000E8C  8471               	bsf	3953,2,c	;volatile
  4986                           
  4987                           ;CAN.c: 153:     BRGCON2bits.PRSEG1 = 0;
  4988  000E8E  9271               	bcf	3953,1,c	;volatile
  4989                           
  4990                           ;CAN.c: 154:     BRGCON2bits.PRSEG0 = 0;
  4991  000E90  9071               	bcf	3953,0,c	;volatile
  4992                           
  4993                           ;CAN.c: 156:     BRGCON3bits.SEG2PH0 = 1;
  4994  000E92  8072               	bsf	3954,0,c	;volatile
  4995                           
  4996                           ;CAN.c: 157:     BRGCON3bits.SEG2PH1 = 0;
  4997  000E94  9272               	bcf	3954,1,c	;volatile
  4998                           
  4999                           ;CAN.c: 158:     BRGCON3bits.SEG2PH2 = 1;
  5000  000E96  8472               	bsf	3954,2,c	;volatile
  5001                           
  5002                           ;CAN.c: 160:     BRGCON2bits.SAM = 1;
  5003  000E98  8C71               	bsf	3953,6,c	;volatile
  5004                           
  5005                           ;CAN.c: 161:     BRGCON2bits.SEG2PHTS = 1;
  5006  000E9A  8E71               	bsf	3953,7,c	;volatile
  5007  000E9C  0012               	return		;funcret
  5008  000E9E                     __end_of_CAN_SetupClock:
  5009                           	opt callstack 0
  5010                           
  5011 ;; *************** function _ISR_low *****************
  5012 ;; Defined at:
  5013 ;;		line 16 in file "ISR.c"
  5014 ;; Parameters:    Size  Location     Type
  5015 ;;		None
  5016 ;; Auto vars:     Size  Location     Type
  5017 ;;		None
  5018 ;; Return value:  Size  Location     Type
  5019 ;;                  1    wreg      void 
  5020 ;; Registers used:
  5021 ;;		wreg, status,2, status,0, cstack
  5022 ;; Tracked objects:
  5023 ;;		On entry : 0/0
  5024 ;;		On exit  : 0/0
  5025 ;;		Unchanged: 0/0
  5026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5029 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5030 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5031 ;;Total ram usage:        3 bytes
  5032 ;; Hardware stack levels used:    1
  5033 ;; Hardware stack levels required when called:    2
  5034 ;; This function calls:
  5035 ;;		_TMR1_Timer_reset
  5036 ;;		i1_TMR1_Update_flag_Set
  5037 ;; This function is called by:
  5038 ;;		Interrupt level 1
  5039 ;; This function uses a non-reentrant model
  5040 ;;
  5041                           
  5042                           	psect	intcodelo
  5043  000018                     __pintcodelo:
  5044                           	opt callstack 0
  5045  000018                     _ISR_low:
  5046                           	opt callstack 24
  5047                           
  5048                           ;incstack = 0
  5049  000018  804A               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  5050  00001A  CFD8 F003          	movff	status,??_ISR_low
  5051  00001E  CFE8 F004          	movff	wreg,??_ISR_low+1
  5052  000022  CFE0 F005          	movff	bsr,??_ISR_low+2
  5053                           
  5054                           ;ISR.c: 21:     if(TMR1IF==1)
  5055  000026  A09E               	btfss	3998,0,c	;volatile
  5056  000028  D011               	goto	i1l541
  5057                           
  5058                           ;ISR.c: 22:         {;ISR.c: 23:             TMR1_Timer_reset();
  5059  00002A  EC4F  F007         	call	_TMR1_Timer_reset	;wreg free
  5060                           
  5061                           ;ISR.c: 26:             static BYTE ramkaStanuU8=0;;ISR.c: 29:             TMR1_Update_f
      +                          lag_Set(1);
  5062  00002E  0E00               	movlw	0
  5063  000030  6E02               	movwf	i1TMR1_Update_flag_Set@a+1,c
  5064  000032  0E01               	movlw	1
  5065  000034  6E01               	movwf	i1TMR1_Update_flag_Set@a,c
  5066  000036  ECDD  F007         	call	i1_TMR1_Update_flag_Set	;wreg free
  5067                           
  5068                           ;ISR.c: 31:             DetectorLedRadar.Flags.obsluzWeWy = 1;
  5069  00003A  803D               	bsf	_DetectorLedRadar,0,c
  5070                           
  5071                           ;ISR.c: 33:             if(++ramkaStanuU8 > (5*10))
  5072  00003C  2A41               	incf	ISR_low@ramkaStanuU8,f,c
  5073  00003E  0E32               	movlw	50
  5074  000040  6441               	cpfsgt	ISR_low@ramkaStanuU8,c
  5075  000042  D003               	goto	i1l2747
  5076                           
  5077                           ;ISR.c: 34:                 {;ISR.c: 35:                     ramkaStanuU8 = 0;
  5078  000044  0E00               	movlw	0
  5079  000046  6E41               	movwf	ISR_low@ramkaStanuU8,c
  5080                           
  5081                           ;ISR.c: 36:                     DaneCan.Flags.wyslijRamkeStanu = 1;
  5082  000048  8037               	bsf	_DaneCan,0,c
  5083  00004A                     i1l2747:
  5084                           
  5085                           ;ISR.c: 41:             TMR1IF=0;
  5086  00004A  909E               	bcf	3998,0,c	;volatile
  5087  00004C                     i1l541:
  5088  00004C  C005  FFE0         	movff	??_ISR_low+2,bsr
  5089  000050  C004  FFE8         	movff	??_ISR_low+1,wreg
  5090  000054  C003  FFD8         	movff	??_ISR_low,status
  5091  000058  904A               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  5092  00005A  0010               	retfie	
  5093  00005C                     __end_of_ISR_low:
  5094                           	opt callstack 0
  5095                           
  5096 ;; *************** function i1_TMR1_Update_flag_Set *****************
  5097 ;; Defined at:
  5098 ;;		line 32 in file "TMR1.c"
  5099 ;; Parameters:    Size  Location     Type
  5100 ;;  a               2    0[COMRAM] unsigned int 
  5101 ;; Auto vars:     Size  Location     Type
  5102 ;;		None
  5103 ;; Return value:  Size  Location     Type
  5104 ;;                  1    wreg      void 
  5105 ;; Registers used:
  5106 ;;		None
  5107 ;; Tracked objects:
  5108 ;;		On entry : 0/0
  5109 ;;		On exit  : 0/0
  5110 ;;		Unchanged: 0/0
  5111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5112 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5115 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5116 ;;Total ram usage:        2 bytes
  5117 ;; Hardware stack levels used:    1
  5118 ;; Hardware stack levels required when called:    1
  5119 ;; This function calls:
  5120 ;;		Nothing
  5121 ;; This function is called by:
  5122 ;;		_ISR_low
  5123 ;; This function uses a non-reentrant model
  5124 ;;
  5125                           
  5126                           	psect	text44
  5127  000FBA                     __ptext44:
  5128                           	opt callstack 0
  5129  000FBA                     i1_TMR1_Update_flag_Set:
  5130                           	opt callstack 24
  5131                           
  5132                           ;TMR1.c: 32: void TMR1_Update_flag_Set(UINT a);TMR1.c: 33: {;TMR1.c: 34:     TMR1_Update
      +                          _flag = a;
  5133                           
  5134                           ;incstack = 0
  5135  000FBA  C001  F03B         	movff	i1TMR1_Update_flag_Set@a,_TMR1_Update_flag
  5136  000FBE  C002  F03C         	movff	i1TMR1_Update_flag_Set@a+1,_TMR1_Update_flag+1
  5137  000FC2  0012               	return		;funcret
  5138  000FC4                     __end_ofi1_TMR1_Update_flag_Set:
  5139                           	opt callstack 0
  5140                           
  5141 ;; *************** function _TMR1_Timer_reset *****************
  5142 ;; Defined at:
  5143 ;;		line 63 in file "TMR1.c"
  5144 ;; Parameters:    Size  Location     Type
  5145 ;;		None
  5146 ;; Auto vars:     Size  Location     Type
  5147 ;;  t1H             1    1[COMRAM] volatile unsigned char 
  5148 ;;  t1L             1    0[COMRAM] volatile unsigned char 
  5149 ;; Return value:  Size  Location     Type
  5150 ;;                  1    wreg      unsigned char 
  5151 ;; Registers used:
  5152 ;;		wreg, status,2, status,0
  5153 ;; Tracked objects:
  5154 ;;		On entry : 0/0
  5155 ;;		On exit  : 0/0
  5156 ;;		Unchanged: 0/0
  5157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5159 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5161 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5162 ;;Total ram usage:        2 bytes
  5163 ;; Hardware stack levels used:    1
  5164 ;; Hardware stack levels required when called:    1
  5165 ;; This function calls:
  5166 ;;		Nothing
  5167 ;; This function is called by:
  5168 ;;		_ISR_low
  5169 ;; This function uses a non-reentrant model
  5170 ;;
  5171                           
  5172                           	psect	text45
  5173  000E9E                     __ptext45:
  5174                           	opt callstack 0
  5175  000E9E                     _TMR1_Timer_reset:
  5176                           	opt callstack 24
  5177                           
  5178                           ;TMR1.c: 69:     volatile BYTE t1L = 0, t1H = 0;
  5179                           
  5180                           ;incstack = 0
  5181  000E9E  0E00               	movlw	0
  5182  000EA0  6E01               	movwf	TMR1_Timer_reset@t1L,c	;volatile
  5183  000EA2  0E00               	movlw	0
  5184  000EA4  6E02               	movwf	TMR1_Timer_reset@t1H,c	;volatile
  5185                           
  5186                           ;TMR1.c: 70:     t1L = TMR1L;
  5187  000EA6  CFCE F001          	movff	4046,TMR1_Timer_reset@t1L	;volatile
  5188                           
  5189                           ;TMR1.c: 71:     t1H = TMR1H;
  5190  000EAA  CFCF F002          	movff	4047,TMR1_Timer_reset@t1H	;volatile
  5191                           
  5192                           ;TMR1.c: 72:     __nop();
  5193  000EAE  F000               	nop	
  5194                           
  5195                           ;TMR1.c: 73:     t1H += (UINT8)((0xFFFF - (((8000000/8)/4)/10)) >> 8);
  5196  000EB0  0E9E               	movlw	158
  5197  000EB2  2602               	addwf	TMR1_Timer_reset@t1H,f,c	;volatile
  5198                           
  5199                           ;TMR1.c: 74:     t1L += (UINT8)((0xFFFF - (((8000000/8)/4)/10)) & 0xFF);
  5200  000EB4  0E57               	movlw	87
  5201  000EB6  2601               	addwf	TMR1_Timer_reset@t1L,f,c	;volatile
  5202                           
  5203                           ;TMR1.c: 75:     TMR1H = t1H;
  5204  000EB8  C002  FFCF         	movff	TMR1_Timer_reset@t1H,4047	;volatile
  5205                           
  5206                           ;TMR1.c: 76:     TMR1L = 0x5B;
  5207  000EBC  0E5B               	movlw	91
  5208  000EBE  6ECE               	movwf	4046,c	;volatile
  5209  000EC0  0012               	return		;funcret
  5210  000EC2                     __end_of_TMR1_Timer_reset:
  5211                           	opt callstack 0
  5212                           
  5213 ;; *************** function _ISR_high *****************
  5214 ;; Defined at:
  5215 ;;		line 53 in file "ISR.c"
  5216 ;; Parameters:    Size  Location     Type
  5217 ;;		None
  5218 ;; Auto vars:     Size  Location     Type
  5219 ;;		None
  5220 ;; Return value:  Size  Location     Type
  5221 ;;                  1    wreg      void 
  5222 ;; Registers used:
  5223 ;;		None
  5224 ;; Tracked objects:
  5225 ;;		On entry : 0/0
  5226 ;;		On exit  : 0/0
  5227 ;;		Unchanged: 0/0
  5228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5233 ;;Total ram usage:        0 bytes
  5234 ;; Hardware stack levels used:    1
  5235 ;; This function calls:
  5236 ;;		Nothing
  5237 ;; This function is called by:
  5238 ;;		Interrupt level 2
  5239 ;; This function uses a non-reentrant model
  5240 ;;
  5241                           
  5242                           	psect	intcode
  5243  000008                     __pintcode:
  5244                           	opt callstack 0
  5245  000008                     _ISR_high:
  5246                           	opt callstack 24
  5247                           
  5248                           ;incstack = 0
  5249  000008  824A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  5250  00000A  EDEA  F007         	call	int_func,f	;refresh shadow registers
  5251                           
  5252                           	psect	intcode_body
  5253  000FD4                     __pintcode_body:
  5254                           	opt callstack 24
  5255  000FD4                     int_func:
  5256                           	opt callstack 24
  5257  000FD4  0006               	pop		; remove dummy address from shadow register refresh
  5258  000FD6  924A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  5259  000FD8  0011               	retfie		f
  5260  000FDA                     __end_of_ISR_high:
  5261                           	opt callstack 0
  5262  0000                     
  5263                           	psect	rparam
  5264  0000                     
  5265                           	psect	temp
  5266  00004A                     btemp:
  5267                           	opt callstack 0
  5268  00004A                     	ds	1
  5269  0000                     int$flags	set	btemp
  5270  0000                     wtemp8	set	btemp+1
  5271  0000                     ttemp5	set	btemp+1
  5272  0000                     ttemp6	set	btemp+4
  5273  0000                     ttemp7	set	btemp+8
  5274                           tosu	equ	0xFFF
  5275                           tosh	equ	0xFFE
  5276                           tosl	equ	0xFFD
  5277                           stkptr	equ	0xFFC
  5278                           pclatu	equ	0xFFB
  5279                           pclath	equ	0xFFA
  5280                           pcl	equ	0xFF9
  5281                           tblptru	equ	0xFF8
  5282                           tblptrh	equ	0xFF7
  5283                           tblptrl	equ	0xFF6
  5284                           tablat	equ	0xFF5
  5285                           prodh	equ	0xFF4
  5286                           prodl	equ	0xFF3
  5287                           indf0	equ	0xFEF
  5288                           postinc0	equ	0xFEE
  5289                           postdec0	equ	0xFED
  5290                           preinc0	equ	0xFEC
  5291                           plusw0	equ	0xFEB
  5292                           fsr0h	equ	0xFEA
  5293                           fsr0l	equ	0xFE9
  5294                           wreg	equ	0xFE8
  5295                           indf1	equ	0xFE7
  5296                           postinc1	equ	0xFE6
  5297                           postdec1	equ	0xFE5
  5298                           preinc1	equ	0xFE4
  5299                           plusw1	equ	0xFE3
  5300                           fsr1h	equ	0xFE2
  5301                           fsr1l	equ	0xFE1
  5302                           bsr	equ	0xFE0
  5303                           indf2	equ	0xFDF
  5304                           postinc2	equ	0xFDE
  5305                           postdec2	equ	0xFDD
  5306                           preinc2	equ	0xFDC
  5307                           plusw2	equ	0xFDB
  5308                           fsr2h	equ	0xFDA
  5309                           fsr2l	equ	0xFD9
  5310                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        7
    BSS         114
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     37      73
    BANK0           160      0      85
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    FRAME_AdressOfNeighbors@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_AnalogValue@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_SoftwareVersion@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_MapPosition@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_HandleCanFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_Plot@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_DeviceReset@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_AxisStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_AveragingTimes@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_ExcitationMultiplier@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_ExcitationValue@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_AccelerometerStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_SensorExcitationStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_GenID@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_TakeFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_SendFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_MoveBuffIntoFrame@Buf	PTR unsigned char  size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), RXB0D0(SFR_3[1]), 

    CAN_MoveBuffIntoFrame@Ram	PTR unsigned char  size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), RXB0D0(SFR_3[1]), 


Critical Paths under _main in COMRAM

    _main->_TRM_DataTransmition
    _TRM_DataTransmition->_FRAME_HandleCanFrame
    _FRAME_HandleCanFrame->_CAN_SendFrame
    _LED_Error->_LED_Control
    _LED_Clear->_LED_Control
    _FRAME_SensorExcitationStatus->_MOC_Aktualna_Temperatura
    _FRAME_SensorExcitationStatus->_MOC_Frame_Counter
    _FRAME_SensorExcitationStatus->_MOC_NOTWORK
    _FRAME_SensorExcitationStatus->_MOC_StanWzbudzenia
    _FRAME_SensorExcitationStatus->_MOC_Wynikowa_wartosc_roznicowa
    _CAN_SendFrame->_CAN_MoveBuffIntoFrame
    _CAN_TakeFrame->___awdiv
    _LED_Update->_LED_Light_Pos
    _LED_Light_Pos->___lwdiv
    _INI_LED_Start->_LED_Control

Critical Paths under _ISR_low in COMRAM

    _ISR_low->_TMR1_Timer_reset
    _ISR_low->i1_TMR1_Update_flag_Set

Critical Paths under _ISR_high in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR_low in BANK0

    None.

Critical Paths under _ISR_high in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_low in BANK1

    None.

Critical Paths under _ISR_high in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_low in BANK2

    None.

Critical Paths under _ISR_high in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_low in BANK3

    None.

Critical Paths under _ISR_high in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_low in BANK4

    None.

Critical Paths under _ISR_high in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_low in BANK5

    None.

Critical Paths under _ISR_high in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_low in BANK6

    None.

Critical Paths under _ISR_high in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_low in BANK7

    None.

Critical Paths under _ISR_high in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_low in BANK8

    None.

Critical Paths under _ISR_high in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_low in BANK9

    None.

Critical Paths under _ISR_high in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_low in BANK10

    None.

Critical Paths under _ISR_high in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_low in BANK11

    None.

Critical Paths under _ISR_high in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_low in BANK12

    None.

Critical Paths under _ISR_high in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   14286
                            _INI_All
                         _LED_Update
               _TMR1_Update_flag_Get
               _TMR1_Update_flag_Set
                _TRM_DataTransmition
 ---------------------------------------------------------------------------------
 (1) _TRM_DataTransmition                                 18    18      0    9091
                                             20 COMRAM    17    17      0
                      _CAN_TakeFrame
               _FRAME_HandleCanFrame
 ---------------------------------------------------------------------------------
 (2) _FRAME_HandleCanFrame                                 5     3      2    7180
                                             15 COMRAM     5     3      2
                          _CAN_GenID
                      _CAN_SendFrame
          _FRAME_AccelerometerStatus
            _FRAME_AdressOfNeighbors
                  _FRAME_AnalogValue
               _FRAME_AveragingTimes
                   _FRAME_AxisStatus
                  _FRAME_DeviceReset
         _FRAME_ExcitationMultiplier
              _FRAME_ExcitationValue
                  _FRAME_MapPosition
                         _FRAME_Plot
       _FRAME_SensorExcitationStatus
              _FRAME_SoftwareVersion
                          _LED_Clear
                          _LED_Error
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) _LED_Error                                            0     0      0    1206
                        _LED_Control
 ---------------------------------------------------------------------------------
 (3) _LED_Clear                                            0     0      0    1206
                        _LED_Control
 ---------------------------------------------------------------------------------
 (3) _FRAME_SoftwareVersion                                2     0      2     103
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_SensorExcitationStatus                         3     1      2     279
                                              7 COMRAM     3     1      2
           _MOC_Aktualna_Temperatura
                  _MOC_Frame_Counter
                        _MOC_NOTWORK
                 _MOC_StanWzbudzenia
     _MOC_Wynikowa_wartosc_roznicowa
 ---------------------------------------------------------------------------------
 (4) _MOC_Wynikowa_wartosc_roznicowa                       2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_StanWzbudzenia                                   2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_NOTWORK                                          2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_Frame_Counter                                    2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_Aktualna_Temperatura                             2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_Plot                                           2     0      2     147
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_MapPosition                                    2     0      2     103
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_ExcitationValue                                3     1      2     169
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_ExcitationMultiplier                           5     3      2     215
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_DeviceReset                                    3     1      2     213
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AxisStatus                                     5     3      2     169
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AveragingTimes                                 3     1      2     169
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AnalogValue                                    6     2      4     206
                                              5 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _FRAME_AdressOfNeighbors                              6     2      4     206
                                              5 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _FRAME_AccelerometerStatus                            3     1      2     169
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _CAN_SendFrame                                        5     3      2     891
                                             10 COMRAM     5     3      2
              _CAN_MoveBuffIntoFrame
 ---------------------------------------------------------------------------------
 (3) _CAN_GenID                                            5     2      3     360
                                              5 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (2) _CAN_TakeFrame                                        6     4      2    1622
                                             13 COMRAM     6     4      2
              _CAN_MoveBuffIntoFrame
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     612
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _CAN_MoveBuffIntoFrame                                5     1      4     546
                                              5 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) _TMR1_Update_flag_Set                                 2     0      2     202
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR1_Update_flag_Get                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _LED_Update                                           0     0      0    3787
                           _LED_Left
                      _LED_Light_Pos
                          _LED_Right
 ---------------------------------------------------------------------------------
 (2) _LED_Light_Pos                                       11     7      4    3059
                                             12 COMRAM    11     7      4
                        _LED_Control
                           _LED_Left
                          _LED_Right
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     368
                                              5 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _LED_Right                                            6     4      2     364
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _LED_Left                                             4     2      2     364
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _INI_All                                              0     0      0    1206
                          _CAN_Setup
                _INI_GlobalInterrupt
                      _INI_LED_Start
                         _INI_OUTPUT
                          _INI_Timer
 ---------------------------------------------------------------------------------
 (2) _INI_Timer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INI_OUTPUT                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INI_LED_Start                                        0     0      0    1206
                        _LED_Control
 ---------------------------------------------------------------------------------
 (4) _LED_Control                                          5     3      2    1206
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _INI_GlobalInterrupt                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CAN_Setup                                            1     1      0       0
                                              5 COMRAM     1     1      0
                     _CAN_SetupClock
                      _CAN_SetupMask
 ---------------------------------------------------------------------------------
 (3) _CAN_SetupMask                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CAN_SetupClock                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR_low                                              3     3      0      76
                                              2 COMRAM     3     3      0
                   _TMR1_Timer_reset
             i1_TMR1_Update_flag_Set
 ---------------------------------------------------------------------------------
 (6) i1_TMR1_Update_flag_Set                               2     0      2      48
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_Timer_reset                                     2     2      0      28
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR_high                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _INI_All
     _CAN_Setup
       _CAN_SetupClock
       _CAN_SetupMask
     _INI_GlobalInterrupt
     _INI_LED_Start
       _LED_Control
     _INI_OUTPUT
     _INI_Timer
   _LED_Update
     _LED_Left
     _LED_Light_Pos
       _LED_Control
       _LED_Left
       _LED_Right
       ___lwdiv
     _LED_Right
   _TMR1_Update_flag_Get
   _TMR1_Update_flag_Set
   _TRM_DataTransmition
     _CAN_TakeFrame
       _CAN_MoveBuffIntoFrame
       ___awdiv
     _FRAME_HandleCanFrame
       _CAN_GenID
       _CAN_SendFrame
         _CAN_MoveBuffIntoFrame
       _FRAME_AccelerometerStatus
       _FRAME_AdressOfNeighbors
       _FRAME_AnalogValue
       _FRAME_AveragingTimes
       _FRAME_AxisStatus
       _FRAME_DeviceReset
       _FRAME_ExcitationMultiplier
       _FRAME_ExcitationValue
       _FRAME_MapPosition
       _FRAME_Plot
       _FRAME_SensorExcitationStatus
         _MOC_Aktualna_Temperatura
         _MOC_Frame_Counter
         _MOC_NOTWORK
         _MOC_StanWzbudzenia
         _MOC_Wynikowa_wartosc_roznicowa
       _FRAME_SoftwareVersion
       _LED_Clear
         _LED_Control
       _LED_Error
         _LED_Control
       ___awdiv

 _ISR_low (ROOT)
   _TMR1_Timer_reset
   i1_TMR1_Update_flag_Set

 _ISR_high (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      55       5       53.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     25      49       1       77.7%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      9E      20        0.0%
DATA                 0      0      9E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Jul 15 18:43:06 2019

              __end_of_FRAME_DeviceReset 0AF2                    ?_FRAME_AveragingTimes 0006  
                           ___awdiv@sign 000B                                       bsr 000FE0  
                            __CFG_BORV$3 000000                        ?_FRAME_AxisStatus 0006  
                      _FRAME_MapPosition 0FDC                             __CFG_CP0$OFF 000000  
                           __CFG_CP1$OFF 000000                             __CFG_CP2$OFF 000000  
                           __CFG_CP3$OFF 000000                       __size_of_CAN_GenID 0084  
                                    l190 0080                                      l191 0086  
                                    l192 008C                                      l193 0092  
                                    l177 04D4                                      l194 0098  
                                    l186 006E                                      l178 04D2  
                                    l187 00DE                                      l188 0074  
                                    l189 007A                              ?_LED_Update 0001  
                                    l299 06CE                                      l475 04A2  
                           __CFG_CPB$OFF 000000                       ??_FRAME_AxisStatus 0008  
                           __CFG_CPD$OFF 000000                                      u965 0542  
                     ?_FRAME_MapPosition 0006                       __size_of_CAN_Setup 005C  
                           ?_LED_Control 0006                                      wreg 000FE8  
                  __end_of_CAN_TakeFrame 02DC                              ?_INI_OUTPUT 0001  
                 __size_of_INI_LED_Start 0034                    __end_of_CAN_SendFrame 0626  
                           __CFG_LVP$OFF 000000                TRM_DataTransmition@weWyU8 0040  
           __size_of_INI_GlobalInterrupt 000E                      ??_FRAME_MapPosition 0008  
                           __CFG_WDT$OFF 000000                                     l2111 0688  
                                   l2105 0678                                     l1081 0BE6  
                                   l2123 06A8                                     l2141 06DE  
                                   l2117 0698                                     l2135 06C8  
                                   l2153 06FE                                     l2129 06B8  
                                   l2081 0638                                     l2321 0C72  
                                   l2171 072E                                     l2147 06EE  
                                   l2067 0E50                                     l2165 071E  
                                   l2093 0658                                     l2421 0992  
                                   l2413 0974                                     l2183 074E  
                                   l2159 070E                                     l2087 0648  
                                   l2431 09B2                                     l2407 0964  
                                   l2511 01CC                                     l2503 01B0  
                                   l2177 073E                                     l2337 0CFE  
                                   l2513 01D4                                     l2505 01B6  
                                   l2521 01EC                                     l2195 0770  
                                   l2099 0668                          __end_of_INI_All 0F58  
                                   l2451 0BBC                                     l2419 098A  
                                   l2435 09BC                                     l2531 025C  
                                   l2515 01DC                                     l2507 01BC  
                                   l2523 022C                                     l2189 075E  
                                   l2461 0BDC                                     l2541 0280  
                                   l2533 0262                                     l2517 01E4  
                                   l2509 01C4                                     l2293 056C  
                                   l2621 033C                                     l2613 0304  
                                   l2439 09CA                                     l2543 0288  
                                   l2535 0268                                     l2551 02D8  
                                   l2527 0230                                     l2631 0382  
                                   l2623 034A                                     l2615 0312  
                                   l2481 0A8C                                     l2449 0BB4  
                                   l2545 0290                                     l2537 0270  
                                   l2529 024A                                     l2297 0620  
                                   l2377 0C1C                                     l2633 0390  
                                   l2625 0358                                     l2617 0320  
                                   l2641 0428                                     l2721 0E24  
                                   l2467 0A42                                     l2539 0278  
                                   l2395 0AD0                                     l2635 03AA  
                                   l2627 0366                                     l2619 032E  
                                   l2731 0E44                                     l2549 0298  
                                   l2653 04AE                                     l2629 0374  
                                   l2591 07E4                                     l2583 07AE  
                                   l2487 009E                                     l2655 04B2  
                                   l2639 03C4                                     l2691 0B1C  
                                   l2589 07DA                                     l2597 0810  
                                   _BIE0 000DFA                        _MOC_Frame_Counter 0F92  
                                   u1110 0996                                     u1040 0C2C  
                                   u1205 0148                                     u1150 0BC0  
                                   u1320 0B3A                                     u1250 0818  
                                   _LATA 000F89                                     _LATB 000F8A  
                                   _LATC 000F8B                                     _LATD 000F8C  
                                   _LATE 000F8D                                     _IPR3 000FA5  
                                   _IPEN 007E87                                     _PIE3 000FA3  
                                   _PEIE 007F96                                     _PIR3 000FA4  
                                   _RCON 000FD0              ??_FRAME_AccelerometerStatus 0008  
                        __end_of_ISR_low 005C                         LED_Control@diode 0006  
                   FRAME_AnalogValue@set 0008                       ?_MOC_Frame_Counter 0006  
                                   _main 0E1E                         LED_Control@color 000A  
                                   fsr2h 000FDA                                     indf1 000FE7  
                                   indf2 000FDF                                     fsr1l 000FE1  
                                   fsr2l 000FD9                                     btemp 004A  
                         _CAN_SetupClock 0E76                       __size_of_LED_Clear 001E  
                                   prodl 000FF3                    __end_of_CAN_SetupMask 0A3E  
          __size_of_TMR1_Update_flag_Get 000A                                     start 005C  
          __size_of_TMR1_Update_flag_Set 000A                       __size_of_LED_Error 001E  
                          __CFG_IESO$OFF 000000                       _MOC_StanWzbudzenia 0F88  
                     __size_of_LED_Right 004C            __size_of_FRAME_HandleCanFrame 01DC  
                          _LED_Light_Pos 0778                            __CFG_MCLRE$ON 000000  
                           ___param_bank 000000                      ??_MOC_Frame_Counter 0008  
             ??_MOC_Aktualna_Temperatura 0008        FRAME_HandleCanFrame@identyfikator 0014  
                     __size_of_INI_Timer 0018                __end_of_FRAME_MapPosition 0FDE  
                    ?_MOC_StanWzbudzenia 0006                         __end_of_LED_Left 0D12  
                                  _B0CON 000E20                                    _B1CON 000E30  
                                  _B2CON 000E40                                    _B3CON 000E50  
                                  _B4CON 000E60                                    _B5CON 000E70  
                                  ?_main 0001                          __end_of___awdiv 09D4  
                                  _BSEL0 000DF8                          ___awdiv@divisor 0008  
                                  _T1CON 000FCD                                    _IRCF0 007E9C  
                                  _IRCF1 007E9D        FRAME_ExcitationMultiplier@message 0006  
                                  _IRCF2 007E9E                          __end_of___lwdiv 0BF0  
                                  i1l541 004C                      __size_of_FRAME_Plot 0022  
                        ___awdiv@counter 000A                                    _MSEL0 000DF0  
                                  _MSEL1 000DF1                                    _MSEL2 000DF2  
                                  _MSEL3 000DF3                                    _TMR1H 000FCF  
                                  _TMR1L 000FCE                                    _TRISA 000F92  
                                  _TRISB 000F93                                    _TRISC 000F94  
                                  _TRISD 000F95                                    _TRISE 000F96  
                          __CFG_PWRT$OFF 000000                   ?_CAN_MoveBuffIntoFrame 0006  
                          __CFG_WRT0$OFF 000000               __size_of_FRAME_AnalogValue 0002  
                          __CFG_WRT1$OFF 000000                            __CFG_WRT2$OFF 000000  
                          __CFG_WRT3$OFF 000000                           __CFG_EBTR0$OFF 000000  
                         __CFG_FCMEN$OFF 000000                           __CFG_EBTR1$OFF 000000  
                         __CFG_EBTR2$OFF 000000                           __CFG_EBTR3$OFF 000000  
                       __end_of_ISR_high 0FDA                            __CFG_WRTB$OFF 000000  
                          __CFG_WRTC$OFF 000000                            __CFG_WRTD$OFF 000000  
              __end_of_MOC_Frame_Counter 0F9C                           __CFG_EBTRB$OFF 000000  
                i1TMR1_Update_flag_Set@a 0001                             ?_MOC_NOTWORK 0006  
                   ??_MOC_StanWzbudzenia 0008                                    tablat 000FF5  
                 __end_of_CAN_SetupClock 0E9E                                    ttemp5 004B  
                                  ttemp6 004E                                    ttemp7 0052  
                                  status 000FD8                                    wtemp8 004B  
                      __end_of_CAN_GenID 0950                           __CFG_PBADEN$ON 000000  
                    __size_of_LED_Update 0056                           ?_LED_Light_Pos 000D  
                       _TMR1_Timer_reset 0E9E                        __end_of_CAN_Setup 0A9A  
                          _INI_LED_Start 0DEA                    _FRAME_ExcitationValue 0D12  
       FRAME_AccelerometerStatus@message 0006                          __initialization 0C8A  
                    __size_of_INI_OUTPUT 001E                         CAN_GenID@frameID 0008  
                           __end_of_main 0E4C                   ??_FRAME_AveragingTimes 0008  
             __size_of_FRAME_DeviceReset 0058                 ?_FRAME_AdressOfNeighbors 0006  
                       CAN_GenID@message 0006                _FRAME_AccelerometerStatus 0DB4  
                                 ??_main 0026                   CAN_MoveBuffIntoFrame@i 000A  
                          __activetblptr 000002                         _TMR1_Update_flag 003B  
                      __end_of_LED_Clear 0F20                                ??_INI_All 000B  
                      __end_of_LED_Error 0F02                        __end_of_LED_Right 0C8A  
                              ??_ISR_low 0003                                   _CANCON 000F6F  
                       ___awdiv@dividend 0006              FRAME_ExcitationMultiplier@i 0009  
                                 _CIOCON 000F73                          __CFG_BBSIZ$1024 000000  
                      __end_of_INI_Timer 0F70                                   i1l2747 004A  
                        ?_CAN_SetupClock 0001                                   _RXB0D0 000F66  
                                 _TMR1IE 007CE8                                   _TMR1IF 007CF0  
                                 _TMR1IP 007CF8                                   _TMR1ON 007E68  
           ??_FRAME_ExcitationMultiplier 0008                           ?_INI_LED_Start 0001  
                         __CFG_XINST$OFF 000000                                ??___awdiv 000A  
                         __CFG_STVREN$ON 000000                         LED_Light_Pos@pos 000D  
             __size_of_FRAME_MapPosition 0002                                ??___lwdiv 000A  
                                 clear_0 0CB0                                   clear_1 0CBC  
                       ___awdiv@quotient 000C                 ??i1_TMR1_Update_flag_Set 0003  
                        __CFG_BOREN$BOHW 000000                             __pdataCOMRAM 0043  
                                 tblptrh 000FF7                                   tblptrl 000FF6  
                                 tblptru 000FF8      __size_of_FRAME_ExcitationMultiplier 004E  
             __size_of_MOC_Frame_Counter 000A                     __size_of_LED_Control 0152  
               FRAME_MapPosition@message 0006                    TMR1_Update_flag_Set@a 0006  
                             __accesstop 0060                  __end_of__initialization 0CC2  
                           ??_FRAME_Plot 0008                      ISR_low@ramkaStanuU8 0041  
                              ?_LED_Left 0006                          ??_LED_Light_Pos 0011  
                          ___rparam_used 000001                   ?_FRAME_ExcitationValue 0006  
        __end_of_FRAME_AdressOfNeighbors 0FE2                           __pcstackCOMRAM 0001  
                              LED_Left@a 0006                                LED_Left@b 0008  
                    _INI_GlobalInterrupt 0F70                                ?_ISR_high 0001  
                           ??_LED_Update 0018              __end_of_TRM_DataTransmition 0B48  
                  _FRAME_SoftwareVersion 0FDA                       __end_of_FRAME_Plot 0EE4  
                           ??_INI_OUTPUT 0006                  FRAME_AxisStatus@message 0006  
                   ?_INI_GlobalInterrupt 0001                __size_of_FRAME_AxisStatus 0036  
                             __pbssBANK0 0060                     __size_of_MOC_NOTWORK 0008  
                        ??_INI_LED_Start 000B                               ??_LED_Left 0008  
                     __end_of_LED_Update 0B9E                       __end_of_INI_OUTPUT 0F3E  
                             ??_ISR_high 0001                      TMR1_Timer_reset@t1H 0002  
                    TMR1_Timer_reset@t1L 0001                                  _ECANCON 000F77  
                                _CANSTAT 000F6E                  ??_CAN_MoveBuffIntoFrame 000A  
           __end_of_TMR1_Update_flag_Get 0FBA             __end_of_TMR1_Update_flag_Set 0FB0  
        __size_ofi1_TMR1_Update_flag_Set 000A             __end_of_FRAME_HandleCanFrame 04B8  
                                _INI_All 0F3E                 __end_of_TMR1_Timer_reset 0EC2  
                                _RXB0DLC 000F65                                  _RXB0CON 000F60  
                                _RXB1CON 000F50                    ??_INI_GlobalInterrupt 0006  
                                _TXB0CON 000F40                                  _ISR_low 0018  
                                _RXFCON0 000DD4                                  _DaneCan 0037  
     __end_of_FRAME_ExcitationMultiplier 0C3E               _FRAME_ExcitationMultiplier 0BF0  
            FRAME_HandleCanFrame@message 0010                                  __Hparam 0000  
       ??_MOC_Wynikowa_wartosc_roznicowa 0008          ?_MOC_Wynikowa_wartosc_roznicowa 0006  
                                __Lparam 0000                   __size_of_CAN_TakeFrame 027C  
                              _CAN_GenID 08CC                                  ___awdiv 0950  
                              _CAN_Setup 0A3E                   __size_of_CAN_SendFrame 016E  
                                ___lwdiv 0B9E                        LED_Light_Pos@pos2 0014  
                                __pcinit 0C8A                                  __ramtop 0D00  
                                __ptext0 0E1E                                  __ptext1 0AF2  
                                __ptext2 02DC                                  __ptext3 0EE4  
                                __ptext4 0F02                                  __ptext5 0FDA  
                                __ptext6 0828                                  __ptext7 0F7E  
                                __ptext8 0F88                                  __ptext9 0FC4  
                 ?_FRAME_SoftwareVersion 0006                   __size_of_CAN_SetupMask 006A  
      __size_of_MOC_Aktualna_Temperatura 000A           FRAME_AdressOfNeighbors@nrRamki 0008  
              ?_MOC_Aktualna_Temperatura 0006         __size_of_FRAME_AdressOfNeighbors 0002  
                       ??_CAN_SetupClock 0006           FRAME_AdressOfNeighbors@message 0006  
                              _LED_Clear 0F02                                _LED_Error 0EE4  
                         __pintcode_body 0FD4                                _LED_Right 0C3E  
                   end_of_initialization 0CC2              __size_of_MOC_StanWzbudzenia 000A  
                          __Lmediumconst 0000                                  int_func 0FD4  
                              _INI_Timer 0F58                   i1_TMR1_Update_flag_Set 0FBA  
       TRM_DataTransmition@czujnikWeWyU8 003F                               ?_CAN_GenID 0006  
                                postdec1 000FE5                                  postdec2 000FDD  
                                postinc0 000FEE                                  postinc2 000FDE  
                             ?_CAN_Setup 0001            __size_of_FRAME_AveragingTimes 0036  
                   CAN_SendFrame@message 000B                            LED_Update@Red 0042  
                          _CAN_TakeFrame 0060                               ?_LED_Clear 0001  
                          _CAN_SendFrame 04B8                               ?_LED_Error 0001  
                             ?_LED_Right 0006                         _FRAME_AxisStatus 0D48  
                ??_FRAME_ExcitationValue 0008                               ?_INI_Timer 0001  
                        _ramkaCanRxKarty 0060                     _TMR1_Update_flag_Get 0FB0  
                        _ramkaCanTxKarty 0026                     _TMR1_Update_flag_Set 0FA6  
                          _CAN_SetupMask 09D4                        __size_of_LED_Left 0042  
                   _FRAME_HandleCanFrame 02DC                           CAN_TakeFrame@k 0013  
                          __pidataCOMRAM 0FCC                        __size_of_ISR_high 0FD2  
                             LED_Right@a 0006                               LED_Right@b 000A  
                          ??_LED_Control 0008                      start_initialization 0C8A  
                         ?_CAN_TakeFrame 000E                           ?_CAN_SendFrame 000B  
                       __CFG_OSC$IRCIO67 000000                    ?_TMR1_Update_flag_Get 0006  
                  ?_TMR1_Update_flag_Set 0006                           ?_CAN_SetupMask 0001  
                  __end_of_LED_Light_Pos 0828                    ?_FRAME_HandleCanFrame 0010  
                            ??_CAN_GenID 0009                              ??_CAN_Setup 0006  
                       __CFG_LPT1OSC$OFF 000000                 CAN_MoveBuffIntoFrame@Buf 0008  
   __end_of_FRAME_SensorExcitationStatus 08CC    __size_of_FRAME_SensorExcitationStatus 00A4  
               CAN_MoveBuffIntoFrame@Ram 0006             _FRAME_SensorExcitationStatus 0828  
         __size_of_CAN_MoveBuffIntoFrame 002A            __end_of_CAN_MoveBuffIntoFrame 0E76  
                        _Fulfillment_Lvl 0047                              __pbssCOMRAM 0026  
                               ?_INI_All 0001                  _FRAME_AdressOfNeighbors 0FE0  
                      ?_TMR1_Timer_reset 0001                              _BRGCON1bits 000F70  
                            _BRGCON2bits 000F71                              _BRGCON3bits 000F72  
                               ?_ISR_low 0001                              ??_LED_Clear 000B  
                          ??_MOC_NOTWORK 0008                       ??_TMR1_Timer_reset 0001  
                            ??_LED_Error 000B                              ??_LED_Right 0008  
           __size_of_TRM_DataTransmition 0056                      __end_of_LED_Control 0778  
            ?_FRAME_ExcitationMultiplier 0006                              ??_INI_Timer 0006  
                  __end_of_INI_LED_Start 0E1E                         ___lwdiv@dividend 0006  
                              __pintcode 0008                                 ?___awdiv 0006  
                ??_FRAME_SoftwareVersion 0008         __end_of_MOC_Aktualna_Temperatura 0FA6  
                               ?___lwdiv 0006                        FRAME_Plot@message 0006  
                            __pintcodelo 0018              __end_of_INI_GlobalInterrupt 0F7E  
                        ??_CAN_TakeFrame 0010            ?_FRAME_SensorExcitationStatus 0008  
 __end_of_MOC_Wynikowa_wartosc_roznicowa 0F88  __size_of_MOC_Wynikowa_wartosc_roznicowa 000A  
         _MOC_Wynikowa_wartosc_roznicowa 0F7E                              _COMSTATbits 000F74  
                        ??_CAN_SendFrame 000D                         ___lwdiv@quotient 000A  
                ?i1_TMR1_Update_flag_Set 0001              FRAME_AveragingTimes@message 0006  
                 ??_TMR1_Update_flag_Get 0008                   ??_TMR1_Update_flag_Set 0008  
                        ??_CAN_SetupMask 0006                                 _LED_Left 0CD0  
                 ??_FRAME_HandleCanFrame 0012                     CAN_TakeFrame@message 000E  
                    __end_of_MOC_NOTWORK 0FCC                     CAN_TakeFrame@tempCON 0012  
                               _RXB0EIDH 000F63                                 _RXB0EIDL 000F64  
                               _RCONbits 000FD0                         __CFG_WDTPS$32768 000000  
                               _RXB0SIDH 000F61                                 _RXB0SIDL 000F62  
                               _RXF0EIDH 000F02                                 _RXF0EIDL 000F03  
                               _RXF1EIDH 000F06                                 _RXF1EIDL 000F07  
                               _RXF2EIDH 000F0A                                 _RXF2EIDL 000F0B  
                               _RXF0SIDH 000F00                                 _RXF0SIDL 000F01  
                               _RXF1SIDH 000F04                                 _RXF1SIDL 000F05  
                               _RXF2SIDH 000F08                                 _RXF2SIDL 000F09  
                               _ISR_high 0008                                 _RXM0EIDH 000F1A  
                               _RXM0EIDL 000F1B                                 _RXM1EIDH 000F1E  
                               _RXM1EIDL 000F1F                                 _RXM0SIDH 000F18  
                               _RXM0SIDL 000F19                                 _RXM1SIDH 000F1C  
                               _RXM1SIDL 000F1D                 __end_of_FRAME_AxisStatus 0D7E  
              ??_FRAME_AdressOfNeighbors 000A                         _DetectorLedRadar 003D  
                            _LED_Control 0626                         __size_of_INI_All 001A  
           FRAME_ExcitationValue@message 0006               __end_of_MOC_StanWzbudzenia 0F92  
         __end_ofi1_TMR1_Update_flag_Set 0FC4                                copy_data0 0C9E  
                       __size_of_ISR_low 0044       __size_of_FRAME_AccelerometerStatus 0036  
           __end_of_FRAME_AveragingTimes 0DB4               ?_FRAME_AccelerometerStatus 0006  
         __size_of_FRAME_ExcitationValue 0036            __end_of_FRAME_ExcitationValue 0D48  
                               __Hrparam 0000                             _RXB0SIDLbits 000F62  
                               __Lrparam 0000                         __size_of___awdiv 0084  
                       __size_of___lwdiv 0052                 _MOC_Aktualna_Temperatura 0F9C  
                     LED_Light_Pos@flage 0016                       LED_Light_Pos@color 0011  
                           _RXF0SIDLbits 000F01                 FRAME_AnalogValue@message 0006  
                        ___lwdiv@divisor 0008                             _RXF1SIDLbits 000F05  
                        ___lwdiv@counter 000C                                 __ptext10 0F92  
                               __ptext11 0F9C                                 __ptext20 0FE0  
                               __ptext12 0EC2                                 __ptext21 0DB4  
                               __ptext13 0FDC                                 __ptext30 0778  
                               __ptext22 04B8                                 __ptext14 0D12  
                               __ptext31 0B9E                                 __ptext23 08CC  
                               __ptext15 0BF0                                 __ptext40 0A3E  
                               __ptext32 0C3E                                 __ptext24 0060  
                               __ptext16 0A9A                                 __ptext41 09D4  
                               __ptext33 0CD0                                 __ptext25 0950  
                               __ptext17 0D48                                 __ptext42 0E76  
                               __ptext34 0F3E                                 __ptext26 0E4C  
                               __ptext18 0D7E                                 __ptext35 0F58  
                               __ptext27 0FA6                                 __ptext19 0FDE  
                               __ptext44 0FBA                                 __ptext36 0F20  
                               __ptext28 0FB0           ??_FRAME_SensorExcitationStatus 000A  
                               __ptext45 0E9E                                 __ptext37 0DEA  
                               __ptext29 0B48                                 __ptext38 0626  
                               __ptext39 0F70            TRM_DataTransmition@canMessage 0015  
                           _RXF2SIDLbits 000F09                              _MOC_NOTWORK 0FC4  
               FRAME_DeviceReset@message 0006        __end_of_FRAME_AccelerometerStatus 0DEA  
                             _FRAME_Plot 0EC2                            __size_of_main 002E  
                __size_of_CAN_SetupClock 0028                                 int$flags 004A  
                    _TRM_DataTransmition 0AF2                              _RXB0DLCbits 000F65  
                             _LED_Update 0B48                              _RXB0CONbits 000F60  
                             _INTCONbits 000FF2                               _INI_OUTPUT 0F20  
                      _FRAME_AnalogValue 0FDE                     ?_TRM_DataTransmition 0001  
           FRAME_SoftwareVersion@message 0006                                 intlevel1 0000  
                               intlevel2 0000                       ?_FRAME_AnalogValue 0006  
    FRAME_SensorExcitationStatus@message 0008                              _TXB0CONbits 000F40  
                    ??_FRAME_AnalogValue 000A                __size_of_TMR1_Timer_reset 0024  
               LED_Light_Pos@fulfillment 000F                     _FRAME_AveragingTimes 0D7E  
         __size_of_FRAME_SoftwareVersion 0002                        _FRAME_DeviceReset 0A9A  
          __end_of_FRAME_SoftwareVersion 0FDC                       ?_FRAME_DeviceReset 0006  
                        LED_Update@Green 0049                __end_of_FRAME_AnalogValue 0FE0  
                 __size_of_LED_Light_Pos 00B0                    _CAN_MoveBuffIntoFrame 0E4C  
                             _WDTCONbits 000FD1                      ??_FRAME_DeviceReset 0008  
                  ??_TRM_DataTransmition 0015                   LED_Light_Pos@LED_array 0012  
                         LED_Update@pos1 0045                           LED_Update@pos2 0043  
                            ?_FRAME_Plot 0006  
