

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Jul 15 12:27:52 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4680
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    52                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    53                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    54                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    55                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    56  0000                     
    57                           ; Version 2.05
    58                           ; Generated 20/12/2018 GMT
    59                           ; 
    60                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    61                           ; All rights reserved.
    62                           ; 
    63                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    64                           ; 
    65                           ; Redistribution and use in source and binary forms, with or without modification, are
    66                           ; permitted provided that the following conditions are met:
    67                           ; 
    68                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    69                           ;        conditions and the following disclaimer.
    70                           ; 
    71                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    72                           ;        of conditions and the following disclaimer in the documentation and/or other
    73                           ;        materials provided with the distribution.
    74                           ; 
    75                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    76                           ;        software without specific prior written permission.
    77                           ; 
    78                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    79                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    80                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    81                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    82                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    83                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    84                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    85                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    86                           ; 
    87                           ; 
    88                           ; Code-generator required, PIC18F4680 Definitions
    89                           ; 
    90                           ; SFR Addresses
    91  0000                     
    92                           	psect	idataCOMRAM
    93  000F70                     __pidataCOMRAM:
    94                           	opt callstack 0
    95                           
    96                           ;initializer for LED_Update@pos2
    97  000F70  0001               	dw	1
    98                           
    99                           ;initializer for LED_Update@pos1
   100  000F72  0001               	dw	1
   101                           
   102                           ;initializer for _Fulfillment_Lvl
   103  000F74  0014               	dw	20
   104                           
   105                           ;initializer for LED_Update@Green
   106  000F76  01                 	db	1
   107  0000                     _RXFCON0	set	3540
   108  0000                     _MSEL3	set	3571
   109  0000                     _MSEL2	set	3570
   110  0000                     _MSEL1	set	3569
   111  0000                     _MSEL0	set	3568
   112  0000                     _BIE0	set	3578
   113  0000                     _BSEL0	set	3576
   114  0000                     _B5CON	set	3696
   115  0000                     _B4CON	set	3680
   116  0000                     _B3CON	set	3664
   117  0000                     _B2CON	set	3648
   118  0000                     _B1CON	set	3632
   119  0000                     _B0CON	set	3616
   120  0000                     _TXB0CONbits	set	3904
   121  0000                     _RXF2EIDL	set	3851
   122  0000                     _RXF2EIDH	set	3850
   123  0000                     _RXF2SIDLbits	set	3849
   124  0000                     _RXF2SIDL	set	3849
   125  0000                     _RXF2SIDH	set	3848
   126  0000                     _RXF1EIDL	set	3847
   127  0000                     _RXF1EIDH	set	3846
   128  0000                     _RXF1SIDLbits	set	3845
   129  0000                     _RXF1SIDL	set	3845
   130  0000                     _RXF1SIDH	set	3844
   131  0000                     _RXF0EIDL	set	3843
   132  0000                     _RXF0EIDH	set	3842
   133  0000                     _RXF0SIDLbits	set	3841
   134  0000                     _RXF0SIDL	set	3841
   135  0000                     _RXF0SIDH	set	3840
   136  0000                     _RXM1EIDL	set	3871
   137  0000                     _RXM1EIDH	set	3870
   138  0000                     _RXM1SIDL	set	3869
   139  0000                     _RXM1SIDH	set	3868
   140  0000                     _RXM0EIDL	set	3867
   141  0000                     _RXM0EIDH	set	3866
   142  0000                     _RXM0SIDL	set	3865
   143  0000                     _RXM0SIDH	set	3864
   144  0000                     _RXB1CON	set	3920
   145  0000                     _TXB0CON	set	3904
   146  0000                     _INTCONbits	set	4082
   147  0000                     _WDTCONbits	set	4049
   148  0000                     _RCONbits	set	4048
   149  0000                     _TRISC	set	3988
   150  0000                     _LATC	set	3979
   151  0000                     _T1CON	set	4045
   152  0000                     _TMR1H	set	4047
   153  0000                     _TMR1L	set	4046
   154  0000                     _LATE	set	3981
   155  0000                     _LATA	set	3977
   156  0000                     _LATB	set	3978
   157  0000                     _LATD	set	3980
   158  0000                     _TRISD	set	3989
   159  0000                     _TRISE	set	3990
   160  0000                     _TRISB	set	3987
   161  0000                     _TRISA	set	3986
   162  0000                     _RXB0DLCbits	set	3941
   163  0000                     _RXB0DLC	set	3941
   164  0000                     _RXB0SIDH	set	3937
   165  0000                     _RXB0SIDLbits	set	3938
   166  0000                     _RXB0SIDL	set	3938
   167  0000                     _RXB0EIDH	set	3939
   168  0000                     _RXB0EIDL	set	3940
   169  0000                     _COMSTATbits	set	3956
   170  0000                     _RXB0CONbits	set	3936
   171  0000                     _BRGCON3bits	set	3954
   172  0000                     _BRGCON2bits	set	3953
   173  0000                     _BRGCON1bits	set	3952
   174  0000                     _CIOCON	set	3955
   175  0000                     _ECANCON	set	3959
   176  0000                     _PIR3	set	4004
   177  0000                     _IPR3	set	4005
   178  0000                     _PIE3	set	4003
   179  0000                     _RXB0CON	set	3936
   180  0000                     _CANSTAT	set	3950
   181  0000                     _CANCON	set	3951
   182  0000                     _RCON	set	4048
   183  0000                     _RXB0D0	set	3942
   184  0000                     _TMR1IF	set	31984
   185  0000                     _TMR1IP	set	31992
   186  0000                     _PEIE	set	32662
   187  0000                     _IPEN	set	32391
   188  0000                     _TMR1ON	set	32360
   189  0000                     _TMR1IE	set	31976
   190  0000                     _IRCF0	set	32412
   191  0000                     _IRCF1	set	32413
   192  0000                     _IRCF2	set	32414
   193                           
   194                           ; #config settings
   195  0000                     
   196                           	psect	cinit
   197  000C7C                     __pcinit:
   198                           	opt callstack 0
   199  000C7C                     start_initialization:
   200                           	opt callstack 0
   201  000C7C                     __initialization:
   202                           	opt callstack 0
   203                           
   204                           ; Initialize objects allocated to COMRAM (7 bytes)
   205                           ; load TBLPTR registers with __pidataCOMRAM
   206  000C7C  0E70               	movlw	low __pidataCOMRAM
   207  000C7E  6EF6               	movwf	tblptrl,c
   208  000C80  0E0F               	movlw	high __pidataCOMRAM
   209  000C82  6EF7               	movwf	tblptrh,c
   210  000C84  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   211  000C86  6EF8               	movwf	tblptru,c
   212  000C88  EE00  F043         	lfsr	0,__pdataCOMRAM
   213  000C8C  EE10 F007          	lfsr	1,7
   214  000C90                     copy_data0:
   215  000C90  0009               	tblrd		*+
   216  000C92  CFF5 FFEE          	movff	tablat,postinc0
   217  000C96  50E5               	movf	postdec1,w,c
   218  000C98  50E1               	movf	fsr1l,w,c
   219  000C9A  E1FA               	bnz	copy_data0
   220                           
   221                           ; Clear objects allocated to BANK0 (85 bytes)
   222  000C9C  EE00  F060         	lfsr	0,__pbssBANK0
   223  000CA0  0E55               	movlw	85
   224  000CA2                     clear_0:
   225  000CA2  6AEE               	clrf	postinc0,c
   226  000CA4  06E8               	decf	wreg,f,c
   227  000CA6  E1FD               	bnz	clear_0
   228                           
   229                           ; Clear objects allocated to COMRAM (29 bytes)
   230  000CA8  EE00  F026         	lfsr	0,__pbssCOMRAM
   231  000CAC  0E1D               	movlw	29
   232  000CAE                     clear_1:
   233  000CAE  6AEE               	clrf	postinc0,c
   234  000CB0  06E8               	decf	wreg,f,c
   235  000CB2  E1FD               	bnz	clear_1
   236  000CB4                     end_of_initialization:
   237                           	opt callstack 0
   238  000CB4                     __end_of__initialization:
   239                           	opt callstack 0
   240  000CB4  904A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   241  000CB6  924A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   242  000CB8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   243  000CBA  6EF8               	movwf	tblptru,c
   244  000CBC  0100               	movlb	0
   245  000CBE  EF08  F007         	goto	_main	;jump to C main() function
   246                           
   247                           	psect	bssCOMRAM
   248  000026                     __pbssCOMRAM:
   249                           	opt callstack 0
   250  000026                     _ramkaCanTxKarty:
   251                           	opt callstack 0
   252  000026                     	ds	17
   253  000037                     _DaneCan:
   254                           	opt callstack 0
   255  000037                     	ds	4
   256  00003B                     _TMR1_Update_flag:
   257                           	opt callstack 0
   258  00003B                     	ds	2
   259  00003D                     _DetectorLedRadar:
   260                           	opt callstack 0
   261  00003D                     	ds	2
   262  00003F                     	ds	1
   263  000040                     	ds	1
   264  000041                     ISR_low@ramkaStanuU8:
   265                           	opt callstack 0
   266  000041                     	ds	1
   267  000042                     	ds	1
   268                           
   269                           	psect	dataCOMRAM
   270  000043                     __pdataCOMRAM:
   271                           	opt callstack 0
   272  000043                     LED_Update@pos2:
   273                           	opt callstack 0
   274  000043                     	ds	2
   275  000045                     LED_Update@pos1:
   276                           	opt callstack 0
   277  000045                     	ds	2
   278  000047                     _Fulfillment_Lvl:
   279                           	opt callstack 0
   280  000047                     	ds	2
   281  000049                     LED_Update@Green:
   282                           	opt callstack 0
   283  000049                     	ds	1
   284                           
   285                           	psect	bssBANK0
   286  000060                     __pbssBANK0:
   287                           	opt callstack 0
   288  000060                     _ramkaCanRxKarty:
   289                           	opt callstack 0
   290  000060                     	ds	85
   291                           
   292                           	psect	cstackCOMRAM
   293  000001                     __pcstackCOMRAM:
   294                           	opt callstack 0
   295  000001                     TMR1_Timer_reset@t1L:
   296                           	opt callstack 0
   297  000001                     i1TMR1_Update_flag_Set@a:
   298                           	opt callstack 0
   299                           
   300                           ; 2 bytes @ 0x0
   301  000001                     	ds	1
   302  000002                     TMR1_Timer_reset@t1H:
   303                           	opt callstack 0
   304                           
   305                           ; 1 bytes @ 0x1
   306  000002                     	ds	1
   307  000003                     ??_ISR_low:
   308  000003                     
   309                           ; 1 bytes @ 0x2
   310  000003                     	ds	3
   311  000006                     ??_CAN_Setup:
   312  000006                     ?_TMR1_Update_flag_Get:
   313                           	opt callstack 0
   314  000006                     ?_LED_Right:
   315                           	opt callstack 0
   316  000006                     ?_LED_Left:
   317                           	opt callstack 0
   318  000006                     ?___awdiv:
   319                           	opt callstack 0
   320  000006                     ?___lwdiv:
   321                           	opt callstack 0
   322  000006                     CAN_MoveBuffIntoFrame@Ram:
   323                           	opt callstack 0
   324  000006                     CAN_GenID@message:
   325                           	opt callstack 0
   326  000006                     LED_Right@a:
   327                           	opt callstack 0
   328  000006                     LED_Left@a:
   329                           	opt callstack 0
   330  000006                     LED_Control@diode:
   331                           	opt callstack 0
   332  000006                     TMR1_Update_flag_Set@a:
   333                           	opt callstack 0
   334  000006                     FRAME_SensorExcitationStatus@message:
   335                           	opt callstack 0
   336  000006                     FRAME_AccelerometerStatus@message:
   337                           	opt callstack 0
   338  000006                     FRAME_ExcitationValue@message:
   339                           	opt callstack 0
   340  000006                     FRAME_ExcitationMultiplier@message:
   341                           	opt callstack 0
   342  000006                     FRAME_AveragingTimes@message:
   343                           	opt callstack 0
   344  000006                     FRAME_AxisStatus@message:
   345                           	opt callstack 0
   346  000006                     FRAME_DeviceReset@message:
   347                           	opt callstack 0
   348  000006                     FRAME_Plot@message:
   349                           	opt callstack 0
   350  000006                     FRAME_MapPosition@message:
   351                           	opt callstack 0
   352  000006                     FRAME_SoftwareVersion@message:
   353                           	opt callstack 0
   354  000006                     FRAME_AnalogValue@message:
   355                           	opt callstack 0
   356  000006                     FRAME_AdressOfNeighbors@message:
   357                           	opt callstack 0
   358  000006                     ___awdiv@dividend:
   359                           	opt callstack 0
   360  000006                     ___lwdiv@dividend:
   361                           	opt callstack 0
   362                           
   363                           ; 2 bytes @ 0x5
   364  000006                     	ds	2
   365  000008                     ??_LED_Right:
   366  000008                     CAN_GenID@frameID:
   367                           	opt callstack 0
   368  000008                     CAN_MoveBuffIntoFrame@Buf:
   369                           	opt callstack 0
   370  000008                     LED_Left@b:
   371                           	opt callstack 0
   372  000008                     FRAME_AnalogValue@set:
   373                           	opt callstack 0
   374  000008                     FRAME_AdressOfNeighbors@nrRamki:
   375                           	opt callstack 0
   376  000008                     ___awdiv@divisor:
   377                           	opt callstack 0
   378  000008                     ___lwdiv@divisor:
   379                           	opt callstack 0
   380                           
   381                           ; 2 bytes @ 0x7
   382  000008                     	ds	1
   383  000009                     ??_CAN_GenID:
   384  000009                     FRAME_ExcitationMultiplier@i:
   385                           	opt callstack 0
   386                           
   387                           ; 2 bytes @ 0x8
   388  000009                     	ds	1
   389  00000A                     CAN_MoveBuffIntoFrame@i:
   390                           	opt callstack 0
   391  00000A                     LED_Control@color:
   392                           	opt callstack 0
   393  00000A                     ___awdiv@counter:
   394                           	opt callstack 0
   395  00000A                     LED_Right@b:
   396                           	opt callstack 0
   397  00000A                     ___lwdiv@quotient:
   398                           	opt callstack 0
   399                           
   400                           ; 2 bytes @ 0x9
   401  00000A                     	ds	1
   402  00000B                     ___awdiv@sign:
   403                           	opt callstack 0
   404  00000B                     CAN_SendFrame@message:
   405                           	opt callstack 0
   406                           
   407                           ; 2 bytes @ 0xA
   408  00000B                     	ds	1
   409  00000C                     ___lwdiv@counter:
   410                           	opt callstack 0
   411  00000C                     ___awdiv@quotient:
   412                           	opt callstack 0
   413                           
   414                           ; 2 bytes @ 0xB
   415  00000C                     	ds	1
   416  00000D                     ??_CAN_SendFrame:
   417  00000D                     LED_Light_Pos@pos:
   418                           	opt callstack 0
   419                           
   420                           ; 2 bytes @ 0xC
   421  00000D                     	ds	1
   422  00000E                     CAN_TakeFrame@message:
   423                           	opt callstack 0
   424                           
   425                           ; 2 bytes @ 0xD
   426  00000E                     	ds	1
   427  00000F                     LED_Light_Pos@fulfillment:
   428                           	opt callstack 0
   429                           
   430                           ; 2 bytes @ 0xE
   431  00000F                     	ds	1
   432  000010                     ??_CAN_TakeFrame:
   433  000010                     FRAME_HandleCanFrame@message:
   434                           	opt callstack 0
   435                           
   436                           ; 2 bytes @ 0xF
   437  000010                     	ds	1
   438  000011                     LED_Light_Pos@color:
   439                           	opt callstack 0
   440                           
   441                           ; 1 bytes @ 0x10
   442  000011                     	ds	1
   443  000012                     ??_FRAME_HandleCanFrame:
   444  000012                     CAN_TakeFrame@tempCON:
   445                           	opt callstack 0
   446  000012                     LED_Light_Pos@LED_array:
   447                           	opt callstack 0
   448                           
   449                           ; 2 bytes @ 0x11
   450  000012                     	ds	1
   451  000013                     CAN_TakeFrame@k:
   452                           	opt callstack 0
   453                           
   454                           ; 1 bytes @ 0x12
   455  000013                     	ds	1
   456  000014                     FRAME_HandleCanFrame@identyfikator:
   457                           	opt callstack 0
   458  000014                     LED_Light_Pos@pos2:
   459                           	opt callstack 0
   460                           
   461                           ; 2 bytes @ 0x13
   462  000014                     	ds	1
   463  000015                     TRM_DataTransmition@canMessage:
   464                           	opt callstack 0
   465                           
   466                           ; 17 bytes @ 0x14
   467  000015                     	ds	1
   468  000016                     LED_Light_Pos@flage:
   469                           	opt callstack 0
   470                           
   471                           ; 2 bytes @ 0x15
   472  000016                     	ds	2
   473  000018                     
   474                           ; 1 bytes @ 0x17
   475  000018                     	ds	14
   476  000026                     
   477                           ; 1 bytes @ 0x25
   478 ;;
   479 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   480 ;;
   481 ;; *************** function _main *****************
   482 ;; Defined at:
   483 ;;		line 89 in file "main.c"
   484 ;; Parameters:    Size  Location     Type
   485 ;;		None
   486 ;; Auto vars:     Size  Location     Type
   487 ;;		None
   488 ;; Return value:  Size  Location     Type
   489 ;;                  1    wreg      void 
   490 ;; Registers used:
   491 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   492 ;; Tracked objects:
   493 ;;		On entry : 0/0
   494 ;;		On exit  : 0/0
   495 ;;		Unchanged: 0/0
   496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   500 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   501 ;;Total ram usage:        0 bytes
   502 ;; Hardware stack levels required when called:    7
   503 ;; This function calls:
   504 ;;		_INI_All
   505 ;;		_LED_Update
   506 ;;		_TMR1_Update_flag_Get
   507 ;;		_TMR1_Update_flag_Set
   508 ;;		_TRM_DataTransmition
   509 ;; This function is called by:
   510 ;;		Startup code after reset
   511 ;; This function uses a non-reentrant model
   512 ;;
   513                           
   514                           	psect	text0
   515  000E10                     __ptext0:
   516                           	opt callstack 0
   517  000E10                     _main:
   518                           	opt callstack 24
   519                           
   520                           ;main.c: 91:     INI_All();
   521                           
   522                           ;incstack = 0
   523  000E10  EC89  F007         	call	_INI_All	;wreg free
   524                           
   525                           ;main.c: 93:     RCON = 0xFF;
   526  000E14  68D0               	setf	4048,c	;volatile
   527  000E16                     l2608:
   528                           
   529                           ;main.c: 96:     {;main.c: 97:         if(DetectorLedRadar.Flags.obsluzWeWy == 1)
   530  000E16  B03D               	btfsc	_DetectorLedRadar,0,c
   531                           
   532                           ;main.c: 98:         {;main.c: 99:             DetectorLedRadar.Flags.obsluzWeWy = 0;
   533  000E18  903D               	bcf	_DetectorLedRadar,0,c
   534                           
   535                           ;main.c: 103:         if(TMR1_Update_flag_Get()==1)
   536  000E1A  ECAE  F007         	call	_TMR1_Update_flag_Get	;wreg free
   537  000E1E  0406               	decf	?_TMR1_Update_flag_Get,w,c
   538  000E20  1007               	iorwf	?_TMR1_Update_flag_Get+1,w,c
   539  000E22  A4D8               	btfss	status,2,c
   540  000E24  D008               	goto	l2618
   541                           
   542                           ;main.c: 104:         {;main.c: 105:             LED_Update();
   543  000E26  EC9D  F005         	call	_LED_Update	;wreg free
   544                           
   545                           ;main.c: 106:             TMR1_Update_flag_Set(0);
   546  000E2A  0E00               	movlw	0
   547  000E2C  6E07               	movwf	TMR1_Update_flag_Set@a+1,c
   548  000E2E  0E00               	movlw	0
   549  000E30  6E06               	movwf	TMR1_Update_flag_Set@a,c
   550  000E32  ECA9  F007         	call	_TMR1_Update_flag_Set	;wreg free
   551  000E36                     l2618:
   552                           
   553                           ;main.c: 110:         TRM_DataTransmition();
   554  000E36  EC72  F005         	call	_TRM_DataTransmition	;wreg free
   555  000E3A  0004               	clrwdt		;# 
   556                           
   557                           ;main.c: 112:     }
   558  000E3C  D7EC               	goto	l2608
   559  000E3E                     __end_of_main:
   560                           	opt callstack 0
   561                           
   562 ;; *************** function _TRM_DataTransmition *****************
   563 ;; Defined at:
   564 ;;		line 16 in file "TRM.c"
   565 ;; Parameters:    Size  Location     Type
   566 ;;		None
   567 ;; Auto vars:     Size  Location     Type
   568 ;;  canMessage     17   20[COMRAM] struct .
   569 ;;  i               1    0        unsigned char 
   570 ;; Return value:  Size  Location     Type
   571 ;;                  1    wreg      void 
   572 ;; Registers used:
   573 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   574 ;; Tracked objects:
   575 ;;		On entry : 0/0
   576 ;;		On exit  : 0/0
   577 ;;		Unchanged: 0/0
   578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   580 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   582 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   583 ;;Total ram usage:       17 bytes
   584 ;; Hardware stack levels used:    1
   585 ;; Hardware stack levels required when called:    6
   586 ;; This function calls:
   587 ;;		_CAN_TakeFrame
   588 ;;		_FRAME_HandleCanFrame
   589 ;; This function is called by:
   590 ;;		_main
   591 ;; This function uses a non-reentrant model
   592 ;;
   593                           
   594                           	psect	text1
   595  000AE4                     __ptext1:
   596                           	opt callstack 0
   597  000AE4                     _TRM_DataTransmition:
   598                           	opt callstack 24
   599                           
   600                           ;TRM.c: 18:     static BYTE weWyU8 = 0, czujnikWeWyU8 = 0;;TRM.c: 19:     BYTE i;;TRM.c:
      +                           20:     mID canMessage;;TRM.c: 23:     if(DaneCan.Flags.wyslijRamkeStanu)
   601                           
   602                           ;incstack = 0
   603  000AE4  A037               	btfss	_DaneCan,0,c
   604  000AE6  D013               	goto	l2578
   605                           
   606                           ;TRM.c: 24:     {;TRM.c: 26:         canMessage.message_type = 0x02;
   607  000AE8  0E02               	movlw	2
   608  000AEA  6E16               	movwf	TRM_DataTransmition@canMessage+1,c
   609                           
   610                           ;TRM.c: 27:         canMessage.id.Val = 0;
   611  000AEC  0E00               	movlw	0
   612  000AEE  6E19               	movwf	TRM_DataTransmition@canMessage+4,c
   613  000AF0  0E00               	movlw	0
   614  000AF2  6E1A               	movwf	TRM_DataTransmition@canMessage+5,c
   615  000AF4  0E00               	movlw	0
   616  000AF6  6E1B               	movwf	TRM_DataTransmition@canMessage+6,c
   617  000AF8  0E00               	movlw	0
   618  000AFA  6E1C               	movwf	TRM_DataTransmition@canMessage+7,c
   619                           
   620                           ;TRM.c: 28:         canMessage.id.v[2] = 0x01 *4;
   621  000AFC  0E04               	movlw	4
   622  000AFE  6E1B               	movwf	TRM_DataTransmition@canMessage+6,c
   623                           
   624                           ;TRM.c: 29:         FRAME_HandleCanFrame(&canMessage);
   625  000B00  0E15               	movlw	low TRM_DataTransmition@canMessage
   626  000B02  6E10               	movwf	FRAME_HandleCanFrame@message,c
   627  000B04  0E00               	movlw	high TRM_DataTransmition@canMessage
   628  000B06  6E11               	movwf	FRAME_HandleCanFrame@message+1,c
   629  000B08  EC6E  F001         	call	_FRAME_HandleCanFrame	;wreg free
   630                           
   631                           ;TRM.c: 46:         DaneCan.Flags.wyslijRamkeStanu = 0;
   632  000B0C  9037               	bcf	_DaneCan,0,c
   633  000B0E                     l2578:
   634                           
   635                           ;TRM.c: 56:     if(CAN_TakeFrame(&canMessage))
   636  000B0E  0E15               	movlw	low TRM_DataTransmition@canMessage
   637  000B10  6E0E               	movwf	CAN_TakeFrame@message,c
   638  000B12  0E00               	movlw	high TRM_DataTransmition@canMessage
   639  000B14  6E0F               	movwf	CAN_TakeFrame@message+1,c
   640  000B16  EC30  F000         	call	_CAN_TakeFrame	;wreg free
   641  000B1A  0900               	iorlw	0
   642  000B1C  B4D8               	btfsc	status,2,c
   643  000B1E  0012               	return	
   644                           
   645                           ;TRM.c: 57:     {;TRM.c: 58:         if((canMessage.buffer == 0) || (canMessage.buffer =
      +                          = 1))
   646  000B20  5018               	movf	TRM_DataTransmition@canMessage+3,w,c
   647  000B22  B4D8               	btfsc	status,2,c
   648  000B24  D003               	goto	u1320
   649  000B26  0418               	decf	TRM_DataTransmition@canMessage+3,w,c
   650  000B28  A4D8               	btfss	status,2,c
   651  000B2A  0012               	return	
   652  000B2C                     u1320:
   653                           
   654                           ;TRM.c: 59:         {;TRM.c: 60:             FRAME_HandleCanFrame(&canMessage);
   655  000B2C  0E15               	movlw	low TRM_DataTransmition@canMessage
   656  000B2E  6E10               	movwf	FRAME_HandleCanFrame@message,c
   657  000B30  0E00               	movlw	high TRM_DataTransmition@canMessage
   658  000B32  6E11               	movwf	FRAME_HandleCanFrame@message+1,c
   659  000B34  EC6E  F001         	call	_FRAME_HandleCanFrame	;wreg free
   660                           
   661                           ;TRM.c: 61:         }
   662  000B38  0012               	return		;funcret
   663  000B3A                     __end_of_TRM_DataTransmition:
   664                           	opt callstack 0
   665                           
   666 ;; *************** function _FRAME_HandleCanFrame *****************
   667 ;; Defined at:
   668 ;;		line 439 in file "FRAME.c"
   669 ;; Parameters:    Size  Location     Type
   670 ;;  message         2   15[COMRAM] PTR struct .
   671 ;;		 -> TRM_DataTransmition@canMessage(17), 
   672 ;; Auto vars:     Size  Location     Type
   673 ;;  identyfikato    1   19[COMRAM] unsigned char 
   674 ;; Return value:  Size  Location     Type
   675 ;;                  1    wreg      void 
   676 ;; Registers used:
   677 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   678 ;; Tracked objects:
   679 ;;		On entry : 0/0
   680 ;;		On exit  : 0/0
   681 ;;		Unchanged: 0/0
   682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   683 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   684 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   685 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   686 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   687 ;;Total ram usage:        5 bytes
   688 ;; Hardware stack levels used:    1
   689 ;; Hardware stack levels required when called:    5
   690 ;; This function calls:
   691 ;;		_CAN_GenID
   692 ;;		_CAN_SendFrame
   693 ;;		_FRAME_AccelerometerStatus
   694 ;;		_FRAME_AdressOfNeighbors
   695 ;;		_FRAME_AnalogValue
   696 ;;		_FRAME_AveragingTimes
   697 ;;		_FRAME_AxisStatus
   698 ;;		_FRAME_DeviceReset
   699 ;;		_FRAME_ExcitationMultiplier
   700 ;;		_FRAME_ExcitationValue
   701 ;;		_FRAME_MapPosition
   702 ;;		_FRAME_Plot
   703 ;;		_FRAME_SensorExcitationStatus
   704 ;;		_FRAME_SoftwareVersion
   705 ;;		_LED_Error
   706 ;;		___awdiv
   707 ;; This function is called by:
   708 ;;		_TRM_DataTransmition
   709 ;; This function uses a non-reentrant model
   710 ;;
   711                           
   712                           	psect	text2
   713  0002DC                     __ptext2:
   714                           	opt callstack 0
   715  0002DC                     _FRAME_HandleCanFrame:
   716                           	opt callstack 24
   717                           
   718                           ;FRAME.c: 439: void FRAME_HandleCanFrame(mID * message);FRAME.c: 440: {;FRAME.c: 441:   
      +                            BYTE identyfikator = (BYTE) message->id.v[2]/4;
   719                           
   720                           ;incstack = 0
   721  0002DC  EE20 F006          	lfsr	2,6
   722  0002E0  5010               	movf	FRAME_HandleCanFrame@message,w,c
   723  0002E2  26D9               	addwf	fsr2l,f,c
   724  0002E4  5011               	movf	FRAME_HandleCanFrame@message+1,w,c
   725  0002E6  22DA               	addwfc	fsr2h,f,c
   726  0002E8  50DF               	movf	indf2,w,c
   727  0002EA  6E12               	movwf	??_FRAME_HandleCanFrame& (0+255),c
   728  0002EC  5012               	movf	??_FRAME_HandleCanFrame,w,c
   729  0002EE  6E06               	movwf	___awdiv@dividend,c
   730  0002F0  6A07               	clrf	___awdiv@dividend+1,c
   731  0002F2  0E00               	movlw	0
   732  0002F4  6E09               	movwf	___awdiv@divisor+1,c
   733  0002F6  0E04               	movlw	4
   734  0002F8  6E08               	movwf	___awdiv@divisor,c
   735  0002FA  EC63  F004         	call	___awdiv	;wreg free
   736  0002FE  5006               	movf	?___awdiv,w,c
   737  000300  6E14               	movwf	FRAME_HandleCanFrame@identyfikator,c
   738                           
   739                           ;FRAME.c: 443:     switch(identyfikator)
   740  000302  D060               	goto	l2528
   741  000304                     l2502:
   742                           
   743                           ;FRAME.c: 446:             FRAME_SensorExcitationStatus(message);
   744  000304  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_SensorExcitationStatus@message
   745  000308  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_SensorExcitationStatus@message+1
   746  00030C  EC10  F004         	call	_FRAME_SensorExcitationStatus	;wreg free
   747                           
   748                           ;FRAME.c: 447:             break;
   749  000310  D08B               	goto	l2530
   750  000312                     l2504:
   751                           
   752                           ;FRAME.c: 449:             FRAME_AccelerometerStatus(message);
   753  000312  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AccelerometerStatus@message
   754  000316  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AccelerometerStatus@message+1
   755  00031A  ECD3  F006         	call	_FRAME_AccelerometerStatus	;wreg free
   756                           
   757                           ;FRAME.c: 450:             break;
   758  00031E  D084               	goto	l2530
   759  000320                     l2506:
   760                           
   761                           ;FRAME.c: 452:             FRAME_ExcitationValue(message);
   762  000320  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_ExcitationValue@message
   763  000324  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_ExcitationValue@message+1
   764  000328  EC82  F006         	call	_FRAME_ExcitationValue	;wreg free
   765                           
   766                           ;FRAME.c: 453:             break;
   767  00032C  D07D               	goto	l2530
   768  00032E                     l2508:
   769                           
   770                           ;FRAME.c: 455:             FRAME_ExcitationMultiplier(message);
   771  00032E  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_ExcitationMultiplier@message
   772  000332  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_ExcitationMultiplier@message+1
   773  000336  ECF1  F005         	call	_FRAME_ExcitationMultiplier	;wreg free
   774                           
   775                           ;FRAME.c: 456:             break;
   776  00033A  D076               	goto	l2530
   777  00033C                     l2510:
   778                           
   779                           ;FRAME.c: 458:             FRAME_AveragingTimes(message);
   780  00033C  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AveragingTimes@message
   781  000340  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AveragingTimes@message+1
   782  000344  ECB8  F006         	call	_FRAME_AveragingTimes	;wreg free
   783                           
   784                           ;FRAME.c: 459:             break;
   785  000348  D06F               	goto	l2530
   786  00034A                     l2512:
   787                           
   788                           ;FRAME.c: 461:             FRAME_AxisStatus(message);
   789  00034A  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AxisStatus@message
   790  00034E  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AxisStatus@message+1
   791  000352  EC9D  F006         	call	_FRAME_AxisStatus	;wreg free
   792                           
   793                           ;FRAME.c: 462:             break;
   794  000356  D068               	goto	l2530
   795  000358                     l2514:
   796                           
   797                           ;FRAME.c: 464:             FRAME_DeviceReset(message);
   798  000358  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_DeviceReset@message
   799  00035C  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_DeviceReset@message+1
   800  000360  EC46  F005         	call	_FRAME_DeviceReset	;wreg free
   801                           
   802                           ;FRAME.c: 465:             break;
   803  000364  D061               	goto	l2530
   804  000366                     l2516:
   805                           
   806                           ;FRAME.c: 467:             FRAME_Plot(message);
   807  000366  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_Plot@message
   808  00036A  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_Plot@message+1
   809  00036E  EC5A  F007         	call	_FRAME_Plot	;wreg free
   810                           
   811                           ;FRAME.c: 468:             break;
   812  000372  D05A               	goto	l2530
   813  000374                     l2518:
   814                           
   815                           ;FRAME.c: 470:             FRAME_MapPosition(message);
   816  000374  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_MapPosition@message
   817  000378  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_MapPosition@message+1
   818  00037C  ECC0  F007         	call	_FRAME_MapPosition	;wreg free
   819                           
   820                           ;FRAME.c: 471:             break;
   821  000380  D053               	goto	l2530
   822  000382                     l2520:
   823                           
   824                           ;FRAME.c: 473:             FRAME_SoftwareVersion(message);
   825  000382  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_SoftwareVersion@message
   826  000386  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_SoftwareVersion@message+1
   827  00038A  ECBF  F007         	call	_FRAME_SoftwareVersion	;wreg free
   828                           
   829                           ;FRAME.c: 474:             break;
   830  00038E  D04C               	goto	l2530
   831  000390                     l2522:
   832                           
   833                           ;FRAME.c: 477:             FRAME_AnalogValue(message, identyfikator - 0x0C);
   834  000390  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AnalogValue@message
   835  000394  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AnalogValue@message+1
   836  000398  0EF4               	movlw	244
   837  00039A  2414               	addwf	FRAME_HandleCanFrame@identyfikator,w,c
   838  00039C  6E08               	movwf	FRAME_AnalogValue@set,c
   839  00039E  6A09               	clrf	FRAME_AnalogValue@set+1,c
   840  0003A0  0EFF               	movlw	255
   841  0003A2  2209               	addwfc	FRAME_AnalogValue@set+1,f,c
   842  0003A4  ECC1  F007         	call	_FRAME_AnalogValue	;wreg free
   843                           
   844                           ;FRAME.c: 478:             break;
   845  0003A8  D03F               	goto	l2530
   846  0003AA                     l2524:
   847                           
   848                           ;FRAME.c: 481:             FRAME_AdressOfNeighbors(message, identyfikator - 0x10);
   849  0003AA  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AdressOfNeighbors@message
   850  0003AE  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AdressOfNeighbors@message+1
   851  0003B2  0EF0               	movlw	240
   852  0003B4  2414               	addwf	FRAME_HandleCanFrame@identyfikator,w,c
   853  0003B6  6E08               	movwf	FRAME_AdressOfNeighbors@nrRamki,c
   854  0003B8  6A09               	clrf	FRAME_AdressOfNeighbors@nrRamki+1,c
   855  0003BA  0EFF               	movlw	255
   856  0003BC  2209               	addwfc	FRAME_AdressOfNeighbors@nrRamki+1,f,c
   857  0003BE  ECC2  F007         	call	_FRAME_AdressOfNeighbors	;wreg free
   858                           
   859                           ;FRAME.c: 482:             break;
   860  0003C2  D032               	goto	l2530
   861  0003C4                     l2528:
   862  0003C4  5014               	movf	FRAME_HandleCanFrame@identyfikator,w,c
   863  0003C6  6E12               	movwf	??_FRAME_HandleCanFrame& (0+255),c
   864  0003C8  6A13               	clrf	(??_FRAME_HandleCanFrame+1)& (0+255),c
   865                           
   866                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   867                           ; Switch size 1, requested type "simple"
   868                           ; Number of cases is 1, Range of values is 0 to 0
   869                           ; switch strategies available:
   870                           ; Name         Instructions Cycles
   871                           ; simple_byte            4     3 (average)
   872                           ;	Chosen strategy is simple_byte
   873  0003CA  5013               	movf	??_FRAME_HandleCanFrame+1,w,c
   874  0003CC  0A00               	xorlw	0	; case 0
   875  0003CE  A4D8               	btfss	status,2,c
   876  0003D0  D02B               	goto	l2530
   877                           
   878                           ; Switch size 1, requested type "simple"
   879                           ; Number of cases is 14, Range of values is 1 to 17
   880                           ; switch strategies available:
   881                           ; Name         Instructions Cycles
   882                           ; simple_byte           43    22 (average)
   883                           ;	Chosen strategy is simple_byte
   884  0003D2  5012               	movf	??_FRAME_HandleCanFrame,w,c
   885  0003D4  0A01               	xorlw	1	; case 1
   886  0003D6  B4D8               	btfsc	status,2,c
   887  0003D8  D795               	goto	l2502
   888  0003DA  0A03               	xorlw	3	; case 2
   889  0003DC  B4D8               	btfsc	status,2,c
   890  0003DE  D799               	goto	l2504
   891  0003E0  0A01               	xorlw	1	; case 3
   892  0003E2  B4D8               	btfsc	status,2,c
   893  0003E4  D79D               	goto	l2506
   894  0003E6  0A07               	xorlw	7	; case 4
   895  0003E8  B4D8               	btfsc	status,2,c
   896  0003EA  D7A1               	goto	l2508
   897  0003EC  0A01               	xorlw	1	; case 5
   898  0003EE  B4D8               	btfsc	status,2,c
   899  0003F0  D7A5               	goto	l2510
   900  0003F2  0A03               	xorlw	3	; case 6
   901  0003F4  B4D8               	btfsc	status,2,c
   902  0003F6  D7A9               	goto	l2512
   903  0003F8  0A01               	xorlw	1	; case 7
   904  0003FA  B4D8               	btfsc	status,2,c
   905  0003FC  D7AD               	goto	l2514
   906  0003FE  0A0E               	xorlw	14	; case 9
   907  000400  B4D8               	btfsc	status,2,c
   908  000402  D7B1               	goto	l2516
   909  000404  0A03               	xorlw	3	; case 10
   910  000406  B4D8               	btfsc	status,2,c
   911  000408  D7B5               	goto	l2518
   912  00040A  0A01               	xorlw	1	; case 11
   913  00040C  B4D8               	btfsc	status,2,c
   914  00040E  D7B9               	goto	l2520
   915  000410  0A07               	xorlw	7	; case 12
   916  000412  B4D8               	btfsc	status,2,c
   917  000414  D7BD               	goto	l2522
   918  000416  0A01               	xorlw	1	; case 13
   919  000418  B4D8               	btfsc	status,2,c
   920  00041A  D7BA               	goto	l2522
   921  00041C  0A1D               	xorlw	29	; case 16
   922  00041E  B4D8               	btfsc	status,2,c
   923  000420  D7C4               	goto	l2524
   924  000422  0A01               	xorlw	1	; case 17
   925  000424  B4D8               	btfsc	status,2,c
   926  000426  D7C1               	goto	l2524
   927  000428                     l2530:
   928                           
   929                           ;FRAME.c: 484:     if(message->message_type == 0x02)
   930  000428  EE20 F001          	lfsr	2,1
   931  00042C  5010               	movf	FRAME_HandleCanFrame@message,w,c
   932  00042E  26D9               	addwf	fsr2l,f,c
   933  000430  5011               	movf	FRAME_HandleCanFrame@message+1,w,c
   934  000432  22DA               	addwfc	fsr2h,f,c
   935  000434  0E02               	movlw	2
   936  000436  18DE               	xorwf	postinc2,w,c
   937  000438  A4D8               	btfss	status,2,c
   938  00043A  0012               	return	
   939                           
   940                           ;FRAME.c: 485:     {;FRAME.c: 487:         message->frame_type = 0x03;
   941  00043C  EE20 F002          	lfsr	2,2
   942  000440  5010               	movf	FRAME_HandleCanFrame@message,w,c
   943  000442  26D9               	addwf	fsr2l,f,c
   944  000444  5011               	movf	FRAME_HandleCanFrame@message+1,w,c
   945  000446  22DA               	addwfc	fsr2h,f,c
   946  000448  0E03               	movlw	3
   947  00044A  6EDF               	movwf	indf2,c
   948                           
   949                           ;FRAME.c: 488:         message->message_type = 0x01;
   950  00044C  EE20 F001          	lfsr	2,1
   951  000450  5010               	movf	FRAME_HandleCanFrame@message,w,c
   952  000452  26D9               	addwf	fsr2l,f,c
   953  000454  5011               	movf	FRAME_HandleCanFrame@message+1,w,c
   954  000456  22DA               	addwfc	fsr2h,f,c
   955  000458  0E01               	movlw	1
   956  00045A  6EDF               	movwf	indf2,c
   957                           
   958                           ;FRAME.c: 489:         message->id.Val = 0;
   959  00045C  EE20 F004          	lfsr	2,4
   960  000460  5010               	movf	FRAME_HandleCanFrame@message,w,c
   961  000462  26D9               	addwf	fsr2l,f,c
   962  000464  5011               	movf	FRAME_HandleCanFrame@message+1,w,c
   963  000466  22DA               	addwfc	fsr2h,f,c
   964  000468  6ADE               	clrf	postinc2,c
   965  00046A  6ADE               	clrf	postinc2,c
   966  00046C  6ADE               	clrf	postinc2,c
   967  00046E  6ADD               	clrf	postdec2,c
   968                           
   969                           ;FRAME.c: 491:         message->id.v[2] = identyfikator*4;
   970  000470  5014               	movf	FRAME_HandleCanFrame@identyfikator,w,c
   971  000472  0D04               	mullw	4
   972  000474  EE20 F006          	lfsr	2,6
   973  000478  5010               	movf	FRAME_HandleCanFrame@message,w,c
   974  00047A  26D9               	addwf	fsr2l,f,c
   975  00047C  5011               	movf	FRAME_HandleCanFrame@message+1,w,c
   976  00047E  22DA               	addwfc	fsr2h,f,c
   977  000480  CFF3 FFDF          	movff	prodl,indf2
   978                           
   979                           ;FRAME.c: 492:         CAN_GenID(message,identyfikator);
   980  000484  C010  F006         	movff	FRAME_HandleCanFrame@message,CAN_GenID@message
   981  000488  C011  F007         	movff	FRAME_HandleCanFrame@message+1,CAN_GenID@message+1
   982  00048C  C014  F008         	movff	FRAME_HandleCanFrame@identyfikator,CAN_GenID@frameID
   983  000490  ECA5  F004         	call	_CAN_GenID	;wreg free
   984                           
   985                           ;FRAME.c: 493:         CAN_SendFrame(message);
   986  000494  C010  F00B         	movff	FRAME_HandleCanFrame@message,CAN_SendFrame@message
   987  000498  C011  F00C         	movff	FRAME_HandleCanFrame@message+1,CAN_SendFrame@message+1
   988  00049C  EC58  F002         	call	_CAN_SendFrame	;wreg free
   989                           
   990                           ;FRAME.c: 502:        while(RXB0CONbits.FILHIT3)
   991  0004A0  D004               	goto	l2542
   992  0004A2                     l460:
   993                           
   994                           ;FRAME.c: 503:        {;FRAME.c: 504:            if(TXB0CONbits.TXERR == 1){
   995  0004A2  010F               	movlb	15	; () banked
   996  0004A4  B940               	btfsc	64,4,b	;volatile
   997                           
   998                           ; BSR set to: 15
   999                           ;FRAME.c: 505:                LED_Error();
  1000  0004A6  EC6B  F007         	call	_LED_Error	;wreg free
  1001  0004AA                     l2542:
  1002                           
  1003                           ;FRAME.c: 502:        while(RXB0CONbits.FILHIT3)
  1004  0004AA  A660               	btfss	3936,3,c	;volatile
  1005  0004AC  0012               	return	
  1006  0004AE  D7F9               	goto	l460
  1007  0004B0                     __end_of_FRAME_HandleCanFrame:
  1008                           	opt callstack 0
  1009                           
  1010 ;; *************** function _LED_Error *****************
  1011 ;; Defined at:
  1012 ;;		line 31 in file "LED.c"
  1013 ;; Parameters:    Size  Location     Type
  1014 ;;		None
  1015 ;; Auto vars:     Size  Location     Type
  1016 ;;		None
  1017 ;; Return value:  Size  Location     Type
  1018 ;;                  2  251[None  ] unsigned int 
  1019 ;; Registers used:
  1020 ;;		wreg, status,2, status,0, cstack
  1021 ;; Tracked objects:
  1022 ;;		On entry : 0/0
  1023 ;;		On exit  : 0/0
  1024 ;;		Unchanged: 0/0
  1025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1029 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1030 ;;Total ram usage:        0 bytes
  1031 ;; Hardware stack levels used:    1
  1032 ;; Hardware stack levels required when called:    4
  1033 ;; This function calls:
  1034 ;;		_LED_Control
  1035 ;; This function is called by:
  1036 ;;		_FRAME_HandleCanFrame
  1037 ;; This function uses a non-reentrant model
  1038 ;;
  1039                           
  1040                           	psect	text3
  1041  000ED6                     __ptext3:
  1042                           	opt callstack 0
  1043  000ED6                     _LED_Error:
  1044                           	opt callstack 24
  1045                           
  1046                           ;LED.c: 33:     LED_Control(RED,0b1010101010);
  1047                           
  1048                           ;incstack = 0
  1049  000ED6  0E02               	movlw	2
  1050  000ED8  6E07               	movwf	LED_Control@diode+1,c
  1051  000EDA  0EAA               	movlw	170
  1052  000EDC  6E06               	movwf	LED_Control@diode,c
  1053  000EDE  0E00               	movlw	0
  1054  000EE0  EC0F  F003         	call	_LED_Control
  1055                           
  1056                           ;LED.c: 34:     LED_Control(GREEN,0b0000000000);
  1057  000EE4  0E00               	movlw	0
  1058  000EE6  6E07               	movwf	LED_Control@diode+1,c
  1059  000EE8  0E00               	movlw	0
  1060  000EEA  6E06               	movwf	LED_Control@diode,c
  1061  000EEC  0E01               	movlw	1
  1062  000EEE  EC0F  F003         	call	_LED_Control
  1063  000EF2  0012               	return		;funcret
  1064  000EF4                     __end_of_LED_Error:
  1065                           	opt callstack 0
  1066                           
  1067 ;; *************** function _FRAME_SoftwareVersion *****************
  1068 ;; Defined at:
  1069 ;;		line 343 in file "FRAME.c"
  1070 ;; Parameters:    Size  Location     Type
  1071 ;;  message         2    5[COMRAM] PTR struct .
  1072 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1073 ;; Auto vars:     Size  Location     Type
  1074 ;;		None
  1075 ;; Return value:  Size  Location     Type
  1076 ;;                  1    wreg      void 
  1077 ;; Registers used:
  1078 ;;		None
  1079 ;; Tracked objects:
  1080 ;;		On entry : 0/0
  1081 ;;		On exit  : 0/0
  1082 ;;		Unchanged: 0/0
  1083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1084 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1087 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1088 ;;Total ram usage:        2 bytes
  1089 ;; Hardware stack levels used:    1
  1090 ;; Hardware stack levels required when called:    3
  1091 ;; This function calls:
  1092 ;;		Nothing
  1093 ;; This function is called by:
  1094 ;;		_FRAME_HandleCanFrame
  1095 ;; This function uses a non-reentrant model
  1096 ;;
  1097                           
  1098                           	psect	text4
  1099  000F7E                     __ptext4:
  1100                           	opt callstack 0
  1101  000F7E                     _FRAME_SoftwareVersion:
  1102                           	opt callstack 25
  1103                           
  1104                           ;incstack = 0
  1105  000F7E  0012               	return		;funcret
  1106  000F80                     __end_of_FRAME_SoftwareVersion:
  1107                           	opt callstack 0
  1108                           
  1109 ;; *************** function _FRAME_SensorExcitationStatus *****************
  1110 ;; Defined at:
  1111 ;;		line 29 in file "FRAME.c"
  1112 ;; Parameters:    Size  Location     Type
  1113 ;;  message         2    5[COMRAM] PTR struct .
  1114 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1115 ;; Auto vars:     Size  Location     Type
  1116 ;;		None
  1117 ;; Return value:  Size  Location     Type
  1118 ;;                  1    wreg      void 
  1119 ;; Registers used:
  1120 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1121 ;; Tracked objects:
  1122 ;;		On entry : 0/0
  1123 ;;		On exit  : 0/0
  1124 ;;		Unchanged: 0/0
  1125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1126 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1128 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1129 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1130 ;;Total ram usage:        3 bytes
  1131 ;; Hardware stack levels used:    1
  1132 ;; Hardware stack levels required when called:    3
  1133 ;; This function calls:
  1134 ;;		Nothing
  1135 ;; This function is called by:
  1136 ;;		_FRAME_HandleCanFrame
  1137 ;; This function uses a non-reentrant model
  1138 ;;
  1139                           
  1140                           	psect	text5
  1141  000820                     __ptext5:
  1142                           	opt callstack 0
  1143  000820                     _FRAME_SensorExcitationStatus:
  1144                           	opt callstack 25
  1145                           
  1146                           ;FRAME.c: 29: static void FRAME_SensorExcitationStatus(mID *message);FRAME.c: 30: {;FRAM
      +                          E.c: 31:     if(message->message_type == 0x02)
  1147                           
  1148                           ;incstack = 0
  1149  000820  EE20 F001          	lfsr	2,1
  1150  000824  5006               	movf	FRAME_SensorExcitationStatus@message,w,c
  1151  000826  26D9               	addwf	fsr2l,f,c
  1152  000828  5007               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1153  00082A  22DA               	addwfc	fsr2h,f,c
  1154  00082C  0E02               	movlw	2
  1155  00082E  18DE               	xorwf	postinc2,w,c
  1156  000830  A4D8               	btfss	status,2,c
  1157  000832  0012               	return	
  1158                           
  1159                           ;FRAME.c: 32:     {;FRAME.c: 33:         message->data_length = 8;
  1160  000834  EE20 F010          	lfsr	2,16
  1161  000838  5006               	movf	FRAME_SensorExcitationStatus@message,w,c
  1162  00083A  26D9               	addwf	fsr2l,f,c
  1163  00083C  5007               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1164  00083E  22DA               	addwfc	fsr2h,f,c
  1165  000840  0E08               	movlw	8
  1166  000842  6EDF               	movwf	indf2,c
  1167                           
  1168                           ;FRAME.c: 39:         message->data[0] = 0b01;
  1169  000844  EE20 F008          	lfsr	2,8
  1170  000848  5006               	movf	FRAME_SensorExcitationStatus@message,w,c
  1171  00084A  26D9               	addwf	fsr2l,f,c
  1172  00084C  5007               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1173  00084E  22DA               	addwfc	fsr2h,f,c
  1174  000850  0E01               	movlw	1
  1175  000852  6EDF               	movwf	indf2,c
  1176                           
  1177                           ;FRAME.c: 40:         message->data[1] = 0xFF;
  1178  000854  EE20 F009          	lfsr	2,9
  1179  000858  5006               	movf	FRAME_SensorExcitationStatus@message,w,c
  1180  00085A  26D9               	addwf	fsr2l,f,c
  1181  00085C  5007               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1182  00085E  22DA               	addwfc	fsr2h,f,c
  1183  000860  0EFF               	movlw	255
  1184  000862  6EDF               	movwf	indf2,c
  1185                           
  1186                           ;FRAME.c: 41:         message->data[2] = 0xFF;
  1187  000864  EE20 F00A          	lfsr	2,10
  1188  000868  5006               	movf	FRAME_SensorExcitationStatus@message,w,c
  1189  00086A  26D9               	addwf	fsr2l,f,c
  1190  00086C  5007               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1191  00086E  22DA               	addwfc	fsr2h,f,c
  1192  000870  0EFF               	movlw	255
  1193  000872  6EDF               	movwf	indf2,c
  1194                           
  1195                           ;FRAME.c: 42:         message->data[3] = 0x00;
  1196  000874  EE20 F00B          	lfsr	2,11
  1197  000878  5006               	movf	FRAME_SensorExcitationStatus@message,w,c
  1198  00087A  26D9               	addwf	fsr2l,f,c
  1199  00087C  5007               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1200  00087E  22DA               	addwfc	fsr2h,f,c
  1201  000880  0E00               	movlw	0
  1202  000882  6EDF               	movwf	indf2,c
  1203                           
  1204                           ;FRAME.c: 43:         message->data[4] = 18;
  1205  000884  EE20 F00C          	lfsr	2,12
  1206  000888  5006               	movf	FRAME_SensorExcitationStatus@message,w,c
  1207  00088A  26D9               	addwf	fsr2l,f,c
  1208  00088C  5007               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1209  00088E  22DA               	addwfc	fsr2h,f,c
  1210  000890  0E12               	movlw	18
  1211  000892  6EDF               	movwf	indf2,c
  1212                           
  1213                           ;FRAME.c: 44:         message->data[5] = 0x00;
  1214  000894  EE20 F00D          	lfsr	2,13
  1215  000898  5006               	movf	FRAME_SensorExcitationStatus@message,w,c
  1216  00089A  26D9               	addwf	fsr2l,f,c
  1217  00089C  5007               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1218  00089E  22DA               	addwfc	fsr2h,f,c
  1219  0008A0  0E00               	movlw	0
  1220  0008A2  6EDF               	movwf	indf2,c
  1221                           
  1222                           ;FRAME.c: 45:         message->data[6] = 0x00;
  1223  0008A4  EE20 F00E          	lfsr	2,14
  1224  0008A8  5006               	movf	FRAME_SensorExcitationStatus@message,w,c
  1225  0008AA  26D9               	addwf	fsr2l,f,c
  1226  0008AC  5007               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1227  0008AE  22DA               	addwfc	fsr2h,f,c
  1228  0008B0  0E00               	movlw	0
  1229  0008B2  6EDF               	movwf	indf2,c
  1230                           
  1231                           ;FRAME.c: 46:         message->data[7] = 0x00;
  1232  0008B4  EE20 F00F          	lfsr	2,15
  1233  0008B8  5006               	movf	FRAME_SensorExcitationStatus@message,w,c
  1234  0008BA  26D9               	addwf	fsr2l,f,c
  1235  0008BC  5007               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1236  0008BE  22DA               	addwfc	fsr2h,f,c
  1237  0008C0  0E00               	movlw	0
  1238  0008C2  6EDF               	movwf	indf2,c
  1239                           
  1240                           ;FRAME.c: 50:     }
  1241  0008C4  0012               	return		;funcret
  1242  0008C6                     __end_of_FRAME_SensorExcitationStatus:
  1243                           	opt callstack 0
  1244                           
  1245 ;; *************** function _FRAME_Plot *****************
  1246 ;; Defined at:
  1247 ;;		line 296 in file "FRAME.c"
  1248 ;; Parameters:    Size  Location     Type
  1249 ;;  message         2    5[COMRAM] PTR struct .
  1250 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1251 ;; Auto vars:     Size  Location     Type
  1252 ;;		None
  1253 ;; Return value:  Size  Location     Type
  1254 ;;                  1    wreg      void 
  1255 ;; Registers used:
  1256 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1257 ;; Tracked objects:
  1258 ;;		On entry : 0/0
  1259 ;;		On exit  : 0/0
  1260 ;;		Unchanged: 0/0
  1261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1262 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1265 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1266 ;;Total ram usage:        2 bytes
  1267 ;; Hardware stack levels used:    1
  1268 ;; Hardware stack levels required when called:    3
  1269 ;; This function calls:
  1270 ;;		Nothing
  1271 ;; This function is called by:
  1272 ;;		_FRAME_HandleCanFrame
  1273 ;; This function uses a non-reentrant model
  1274 ;;
  1275                           
  1276                           	psect	text6
  1277  000EB4                     __ptext6:
  1278                           	opt callstack 0
  1279  000EB4                     _FRAME_Plot:
  1280                           	opt callstack 25
  1281                           
  1282                           ;FRAME.c: 296: static void FRAME_Plot(mID *message);FRAME.c: 297: {;FRAME.c: 308:     me
      +                          ssage->data_length = 1;
  1283                           
  1284                           ;incstack = 0
  1285  000EB4  EE20 F010          	lfsr	2,16
  1286  000EB8  5006               	movf	FRAME_Plot@message,w,c
  1287  000EBA  26D9               	addwf	fsr2l,f,c
  1288  000EBC  5007               	movf	FRAME_Plot@message+1,w,c
  1289  000EBE  22DA               	addwfc	fsr2h,f,c
  1290  000EC0  0E01               	movlw	1
  1291  000EC2  6EDF               	movwf	indf2,c
  1292                           
  1293                           ;FRAME.c: 309:     message->data[0] = 0xFF;
  1294  000EC4  EE20 F008          	lfsr	2,8
  1295  000EC8  5006               	movf	FRAME_Plot@message,w,c
  1296  000ECA  26D9               	addwf	fsr2l,f,c
  1297  000ECC  5007               	movf	FRAME_Plot@message+1,w,c
  1298  000ECE  22DA               	addwfc	fsr2h,f,c
  1299  000ED0  0EFF               	movlw	255
  1300  000ED2  6EDF               	movwf	indf2,c
  1301  000ED4  0012               	return		;funcret
  1302  000ED6                     __end_of_FRAME_Plot:
  1303                           	opt callstack 0
  1304                           
  1305 ;; *************** function _FRAME_MapPosition *****************
  1306 ;; Defined at:
  1307 ;;		line 318 in file "FRAME.c"
  1308 ;; Parameters:    Size  Location     Type
  1309 ;;  message         2    5[COMRAM] PTR struct .
  1310 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1311 ;; Auto vars:     Size  Location     Type
  1312 ;;		None
  1313 ;; Return value:  Size  Location     Type
  1314 ;;                  1    wreg      void 
  1315 ;; Registers used:
  1316 ;;		None
  1317 ;; Tracked objects:
  1318 ;;		On entry : 0/0
  1319 ;;		On exit  : 0/0
  1320 ;;		Unchanged: 0/0
  1321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1322 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1325 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1326 ;;Total ram usage:        2 bytes
  1327 ;; Hardware stack levels used:    1
  1328 ;; Hardware stack levels required when called:    3
  1329 ;; This function calls:
  1330 ;;		Nothing
  1331 ;; This function is called by:
  1332 ;;		_FRAME_HandleCanFrame
  1333 ;; This function uses a non-reentrant model
  1334 ;;
  1335                           
  1336                           	psect	text7
  1337  000F80                     __ptext7:
  1338                           	opt callstack 0
  1339  000F80                     _FRAME_MapPosition:
  1340                           	opt callstack 25
  1341                           
  1342                           ;incstack = 0
  1343  000F80  0012               	return		;funcret
  1344  000F82                     __end_of_FRAME_MapPosition:
  1345                           	opt callstack 0
  1346                           
  1347 ;; *************** function _FRAME_ExcitationValue *****************
  1348 ;; Defined at:
  1349 ;;		line 85 in file "FRAME.c"
  1350 ;; Parameters:    Size  Location     Type
  1351 ;;  message         2    5[COMRAM] PTR struct .
  1352 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1353 ;; Auto vars:     Size  Location     Type
  1354 ;;		None
  1355 ;; Return value:  Size  Location     Type
  1356 ;;                  1    wreg      void 
  1357 ;; Registers used:
  1358 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1359 ;; Tracked objects:
  1360 ;;		On entry : 0/0
  1361 ;;		On exit  : 0/0
  1362 ;;		Unchanged: 0/0
  1363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1364 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1366 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1367 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1368 ;;Total ram usage:        3 bytes
  1369 ;; Hardware stack levels used:    1
  1370 ;; Hardware stack levels required when called:    3
  1371 ;; This function calls:
  1372 ;;		Nothing
  1373 ;; This function is called by:
  1374 ;;		_FRAME_HandleCanFrame
  1375 ;; This function uses a non-reentrant model
  1376 ;;
  1377                           
  1378                           	psect	text8
  1379  000D04                     __ptext8:
  1380                           	opt callstack 0
  1381  000D04                     _FRAME_ExcitationValue:
  1382                           	opt callstack 25
  1383                           
  1384                           ;FRAME.c: 85: static void FRAME_ExcitationValue(mID *message);FRAME.c: 86: {;FRAME.c: 87
      +                          :     if(message->message_type == 0x02)
  1385                           
  1386                           ;incstack = 0
  1387  000D04  EE20 F001          	lfsr	2,1
  1388  000D08  5006               	movf	FRAME_ExcitationValue@message,w,c
  1389  000D0A  26D9               	addwf	fsr2l,f,c
  1390  000D0C  5007               	movf	FRAME_ExcitationValue@message+1,w,c
  1391  000D0E  22DA               	addwfc	fsr2h,f,c
  1392  000D10  0E02               	movlw	2
  1393  000D12  18DE               	xorwf	postinc2,w,c
  1394  000D14  A4D8               	btfss	status,2,c
  1395  000D16  0012               	return	
  1396                           
  1397                           ;FRAME.c: 88:     {;FRAME.c: 89:         message->data_length = 1;
  1398  000D18  EE20 F010          	lfsr	2,16
  1399  000D1C  5006               	movf	FRAME_ExcitationValue@message,w,c
  1400  000D1E  26D9               	addwf	fsr2l,f,c
  1401  000D20  5007               	movf	FRAME_ExcitationValue@message+1,w,c
  1402  000D22  22DA               	addwfc	fsr2h,f,c
  1403  000D24  0E01               	movlw	1
  1404  000D26  6EDF               	movwf	indf2,c
  1405                           
  1406                           ;FRAME.c: 94:         message->data[0] = 0xFF;
  1407  000D28  EE20 F008          	lfsr	2,8
  1408  000D2C  5006               	movf	FRAME_ExcitationValue@message,w,c
  1409  000D2E  26D9               	addwf	fsr2l,f,c
  1410  000D30  5007               	movf	FRAME_ExcitationValue@message+1,w,c
  1411  000D32  22DA               	addwfc	fsr2h,f,c
  1412  000D34  0EFF               	movlw	255
  1413  000D36  6EDF               	movwf	indf2,c
  1414                           
  1415                           ;FRAME.c: 95:     }
  1416  000D38  0012               	return		;funcret
  1417  000D3A                     __end_of_FRAME_ExcitationValue:
  1418                           	opt callstack 0
  1419                           
  1420 ;; *************** function _FRAME_ExcitationMultiplier *****************
  1421 ;; Defined at:
  1422 ;;		line 109 in file "FRAME.c"
  1423 ;; Parameters:    Size  Location     Type
  1424 ;;  message         2    5[COMRAM] PTR struct .
  1425 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1426 ;; Auto vars:     Size  Location     Type
  1427 ;;  i               2    8[COMRAM] unsigned short 
  1428 ;; Return value:  Size  Location     Type
  1429 ;;                  1    wreg      void 
  1430 ;; Registers used:
  1431 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1432 ;; Tracked objects:
  1433 ;;		On entry : 0/0
  1434 ;;		On exit  : 0/0
  1435 ;;		Unchanged: 0/0
  1436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1437 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1438 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1439 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1440 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1441 ;;Total ram usage:        5 bytes
  1442 ;; Hardware stack levels used:    1
  1443 ;; Hardware stack levels required when called:    3
  1444 ;; This function calls:
  1445 ;;		Nothing
  1446 ;; This function is called by:
  1447 ;;		_FRAME_HandleCanFrame
  1448 ;; This function uses a non-reentrant model
  1449 ;;
  1450                           
  1451                           	psect	text9
  1452  000BE2                     __ptext9:
  1453                           	opt callstack 0
  1454  000BE2                     _FRAME_ExcitationMultiplier:
  1455                           	opt callstack 25
  1456                           
  1457                           ;FRAME.c: 109: static void FRAME_ExcitationMultiplier(mID *message);FRAME.c: 110: {;FRAM
      +                          E.c: 111:     WORD i;;FRAME.c: 113:     if(message->message_type == 0x02)
  1458                           
  1459                           ;incstack = 0
  1460  000BE2  EE20 F001          	lfsr	2,1
  1461  000BE6  5006               	movf	FRAME_ExcitationMultiplier@message,w,c
  1462  000BE8  26D9               	addwf	fsr2l,f,c
  1463  000BEA  5007               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  1464  000BEC  22DA               	addwfc	fsr2h,f,c
  1465  000BEE  0E02               	movlw	2
  1466  000BF0  18DE               	xorwf	postinc2,w,c
  1467  000BF2  A4D8               	btfss	status,2,c
  1468  000BF4  0012               	return	
  1469                           
  1470                           ;FRAME.c: 114:     {;FRAME.c: 115:         message->data_length = 1;
  1471  000BF6  EE20 F010          	lfsr	2,16
  1472  000BFA  5006               	movf	FRAME_ExcitationMultiplier@message,w,c
  1473  000BFC  26D9               	addwf	fsr2l,f,c
  1474  000BFE  5007               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  1475  000C00  22DA               	addwfc	fsr2h,f,c
  1476  000C02  0E01               	movlw	1
  1477  000C04  6EDF               	movwf	indf2,c
  1478                           
  1479                           ;FRAME.c: 116:         for(i=0; i<3; i++)
  1480  000C06  0E00               	movlw	0
  1481  000C08  6E0A               	movwf	FRAME_ExcitationMultiplier@i+1,c
  1482  000C0A  0E00               	movlw	0
  1483  000C0C  6E09               	movwf	FRAME_ExcitationMultiplier@i,c
  1484  000C0E                     l2266:
  1485                           
  1486                           ;FRAME.c: 117:         {;FRAME.c: 120:         }
  1487  000C0E  4A09               	infsnz	FRAME_ExcitationMultiplier@i,f,c
  1488  000C10  2A0A               	incf	FRAME_ExcitationMultiplier@i+1,f,c
  1489  000C12  500A               	movf	FRAME_ExcitationMultiplier@i+1,w,c
  1490  000C14  E104               	bnz	u1040
  1491  000C16  0E03               	movlw	3
  1492  000C18  5C09               	subwf	FRAME_ExcitationMultiplier@i,w,c
  1493  000C1A  A0D8               	btfss	status,0,c
  1494  000C1C  D7F8               	goto	l2266
  1495  000C1E                     u1040:
  1496                           
  1497                           ;FRAME.c: 121:         message->data[0] = 0xFF;
  1498  000C1E  EE20 F008          	lfsr	2,8
  1499  000C22  5006               	movf	FRAME_ExcitationMultiplier@message,w,c
  1500  000C24  26D9               	addwf	fsr2l,f,c
  1501  000C26  5007               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  1502  000C28  22DA               	addwfc	fsr2h,f,c
  1503  000C2A  0EFF               	movlw	255
  1504  000C2C  6EDF               	movwf	indf2,c
  1505                           
  1506                           ;FRAME.c: 122:     }
  1507  000C2E  0012               	return		;funcret
  1508  000C30                     __end_of_FRAME_ExcitationMultiplier:
  1509                           	opt callstack 0
  1510                           
  1511 ;; *************** function _FRAME_DeviceReset *****************
  1512 ;; Defined at:
  1513 ;;		line 243 in file "FRAME.c"
  1514 ;; Parameters:    Size  Location     Type
  1515 ;;  message         2    5[COMRAM] PTR struct .
  1516 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1517 ;; Auto vars:     Size  Location     Type
  1518 ;;		None
  1519 ;; Return value:  Size  Location     Type
  1520 ;;                  1    wreg      void 
  1521 ;; Registers used:
  1522 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1523 ;; Tracked objects:
  1524 ;;		On entry : 0/0
  1525 ;;		On exit  : 0/0
  1526 ;;		Unchanged: 0/0
  1527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1528 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1530 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1531 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1532 ;;Total ram usage:        3 bytes
  1533 ;; Hardware stack levels used:    1
  1534 ;; Hardware stack levels required when called:    3
  1535 ;; This function calls:
  1536 ;;		Nothing
  1537 ;; This function is called by:
  1538 ;;		_FRAME_HandleCanFrame
  1539 ;; This function uses a non-reentrant model
  1540 ;;
  1541                           
  1542                           	psect	text10
  1543  000A8C                     __ptext10:
  1544                           	opt callstack 0
  1545  000A8C                     _FRAME_DeviceReset:
  1546                           	opt callstack 25
  1547                           
  1548                           ;FRAME.c: 243: static void FRAME_DeviceReset(mID *message);FRAME.c: 244: {;FRAME.c: 245:
      +                               if(message->message_type == 0x02)
  1549                           
  1550                           ;incstack = 0
  1551  000A8C  EE20 F001          	lfsr	2,1
  1552  000A90  5006               	movf	FRAME_DeviceReset@message,w,c
  1553  000A92  26D9               	addwf	fsr2l,f,c
  1554  000A94  5007               	movf	FRAME_DeviceReset@message+1,w,c
  1555  000A96  22DA               	addwfc	fsr2h,f,c
  1556  000A98  0E02               	movlw	2
  1557  000A9A  18DE               	xorwf	postinc2,w,c
  1558  000A9C  A4D8               	btfss	status,2,c
  1559  000A9E  D011               	goto	l2284
  1560                           
  1561                           ;FRAME.c: 246:     {;FRAME.c: 247:         message->data_length = 1;
  1562  000AA0  EE20 F010          	lfsr	2,16
  1563  000AA4  5006               	movf	FRAME_DeviceReset@message,w,c
  1564  000AA6  26D9               	addwf	fsr2l,f,c
  1565  000AA8  5007               	movf	FRAME_DeviceReset@message+1,w,c
  1566  000AAA  22DA               	addwfc	fsr2h,f,c
  1567  000AAC  0E01               	movlw	1
  1568  000AAE  6EDF               	movwf	indf2,c
  1569                           
  1570                           ;FRAME.c: 260:         message->data[0] = 0xFF;
  1571  000AB0  EE20 F008          	lfsr	2,8
  1572  000AB4  5006               	movf	FRAME_DeviceReset@message,w,c
  1573  000AB6  26D9               	addwf	fsr2l,f,c
  1574  000AB8  5007               	movf	FRAME_DeviceReset@message+1,w,c
  1575  000ABA  22DA               	addwfc	fsr2h,f,c
  1576  000ABC  0EFF               	movlw	255
  1577  000ABE  6EDF               	movwf	indf2,c
  1578                           
  1579                           ;FRAME.c: 261:     }
  1580  000AC0  0012               	return	
  1581  000AC2                     l2284:
  1582                           
  1583                           ;FRAME.c: 263:     {;FRAME.c: 264:         message->data_length = 1;
  1584  000AC2  EE20 F010          	lfsr	2,16
  1585  000AC6  5006               	movf	FRAME_DeviceReset@message,w,c
  1586  000AC8  26D9               	addwf	fsr2l,f,c
  1587  000ACA  5007               	movf	FRAME_DeviceReset@message+1,w,c
  1588  000ACC  22DA               	addwfc	fsr2h,f,c
  1589  000ACE  0E01               	movlw	1
  1590  000AD0  6EDF               	movwf	indf2,c
  1591                           
  1592                           ;FRAME.c: 286:         message->data[0] = 0xFF;
  1593  000AD2  EE20 F008          	lfsr	2,8
  1594  000AD6  5006               	movf	FRAME_DeviceReset@message,w,c
  1595  000AD8  26D9               	addwf	fsr2l,f,c
  1596  000ADA  5007               	movf	FRAME_DeviceReset@message+1,w,c
  1597  000ADC  22DA               	addwfc	fsr2h,f,c
  1598  000ADE  0EFF               	movlw	255
  1599  000AE0  6EDF               	movwf	indf2,c
  1600  000AE2  0012               	return		;funcret
  1601  000AE4                     __end_of_FRAME_DeviceReset:
  1602                           	opt callstack 0
  1603                           
  1604 ;; *************** function _FRAME_AxisStatus *****************
  1605 ;; Defined at:
  1606 ;;		line 196 in file "FRAME.c"
  1607 ;; Parameters:    Size  Location     Type
  1608 ;;  message         2    5[COMRAM] PTR struct .
  1609 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1610 ;; Auto vars:     Size  Location     Type
  1611 ;;  i               2    0        unsigned short 
  1612 ;; Return value:  Size  Location     Type
  1613 ;;                  1    wreg      void 
  1614 ;; Registers used:
  1615 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1616 ;; Tracked objects:
  1617 ;;		On entry : 0/0
  1618 ;;		On exit  : 0/0
  1619 ;;		Unchanged: 0/0
  1620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1621 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1623 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1624 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1625 ;;Total ram usage:        3 bytes
  1626 ;; Hardware stack levels used:    1
  1627 ;; Hardware stack levels required when called:    3
  1628 ;; This function calls:
  1629 ;;		Nothing
  1630 ;; This function is called by:
  1631 ;;		_FRAME_HandleCanFrame
  1632 ;; This function uses a non-reentrant model
  1633 ;;
  1634                           
  1635                           	psect	text11
  1636  000D3A                     __ptext11:
  1637                           	opt callstack 0
  1638  000D3A                     _FRAME_AxisStatus:
  1639                           	opt callstack 25
  1640                           
  1641                           ;FRAME.c: 196: static void FRAME_AxisStatus(mID *message);FRAME.c: 197: {;FRAME.c: 198: 
      +                              WORD i;;FRAME.c: 200:     if(message->message_type == 0x02)
  1642                           
  1643                           ;incstack = 0
  1644  000D3A  EE20 F001          	lfsr	2,1
  1645  000D3E  5006               	movf	FRAME_AxisStatus@message,w,c
  1646  000D40  26D9               	addwf	fsr2l,f,c
  1647  000D42  5007               	movf	FRAME_AxisStatus@message+1,w,c
  1648  000D44  22DA               	addwfc	fsr2h,f,c
  1649  000D46  0E02               	movlw	2
  1650  000D48  18DE               	xorwf	postinc2,w,c
  1651  000D4A  A4D8               	btfss	status,2,c
  1652  000D4C  0012               	return	
  1653                           
  1654                           ;FRAME.c: 201:     {;FRAME.c: 202:         message->data_length = 1;
  1655  000D4E  EE20 F010          	lfsr	2,16
  1656  000D52  5006               	movf	FRAME_AxisStatus@message,w,c
  1657  000D54  26D9               	addwf	fsr2l,f,c
  1658  000D56  5007               	movf	FRAME_AxisStatus@message+1,w,c
  1659  000D58  22DA               	addwfc	fsr2h,f,c
  1660  000D5A  0E01               	movlw	1
  1661  000D5C  6EDF               	movwf	indf2,c
  1662                           
  1663                           ;FRAME.c: 213:         message->data[0] = 0xFF;
  1664  000D5E  EE20 F008          	lfsr	2,8
  1665  000D62  5006               	movf	FRAME_AxisStatus@message,w,c
  1666  000D64  26D9               	addwf	fsr2l,f,c
  1667  000D66  5007               	movf	FRAME_AxisStatus@message+1,w,c
  1668  000D68  22DA               	addwfc	fsr2h,f,c
  1669  000D6A  0EFF               	movlw	255
  1670  000D6C  6EDF               	movwf	indf2,c
  1671                           
  1672                           ;FRAME.c: 214:     }
  1673  000D6E  0012               	return		;funcret
  1674  000D70                     __end_of_FRAME_AxisStatus:
  1675                           	opt callstack 0
  1676                           
  1677 ;; *************** function _FRAME_AveragingTimes *****************
  1678 ;; Defined at:
  1679 ;;		line 137 in file "FRAME.c"
  1680 ;; Parameters:    Size  Location     Type
  1681 ;;  message         2    5[COMRAM] PTR struct .
  1682 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1683 ;; Auto vars:     Size  Location     Type
  1684 ;;		None
  1685 ;; Return value:  Size  Location     Type
  1686 ;;                  1    wreg      void 
  1687 ;; Registers used:
  1688 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1689 ;; Tracked objects:
  1690 ;;		On entry : 0/0
  1691 ;;		On exit  : 0/0
  1692 ;;		Unchanged: 0/0
  1693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1694 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1696 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1697 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1698 ;;Total ram usage:        3 bytes
  1699 ;; Hardware stack levels used:    1
  1700 ;; Hardware stack levels required when called:    3
  1701 ;; This function calls:
  1702 ;;		Nothing
  1703 ;; This function is called by:
  1704 ;;		_FRAME_HandleCanFrame
  1705 ;; This function uses a non-reentrant model
  1706 ;;
  1707                           
  1708                           	psect	text12
  1709  000D70                     __ptext12:
  1710                           	opt callstack 0
  1711  000D70                     _FRAME_AveragingTimes:
  1712                           	opt callstack 25
  1713                           
  1714                           ;FRAME.c: 137: static void FRAME_AveragingTimes(mID *message);FRAME.c: 138: {;FRAME.c: 1
      +                          39:     if(message->message_type == 0x02)
  1715                           
  1716                           ;incstack = 0
  1717  000D70  EE20 F001          	lfsr	2,1
  1718  000D74  5006               	movf	FRAME_AveragingTimes@message,w,c
  1719  000D76  26D9               	addwf	fsr2l,f,c
  1720  000D78  5007               	movf	FRAME_AveragingTimes@message+1,w,c
  1721  000D7A  22DA               	addwfc	fsr2h,f,c
  1722  000D7C  0E02               	movlw	2
  1723  000D7E  18DE               	xorwf	postinc2,w,c
  1724  000D80  A4D8               	btfss	status,2,c
  1725  000D82  0012               	return	
  1726                           
  1727                           ;FRAME.c: 140:     {;FRAME.c: 141:         message->data_length = 1;
  1728  000D84  EE20 F010          	lfsr	2,16
  1729  000D88  5006               	movf	FRAME_AveragingTimes@message,w,c
  1730  000D8A  26D9               	addwf	fsr2l,f,c
  1731  000D8C  5007               	movf	FRAME_AveragingTimes@message+1,w,c
  1732  000D8E  22DA               	addwfc	fsr2h,f,c
  1733  000D90  0E01               	movlw	1
  1734  000D92  6EDF               	movwf	indf2,c
  1735                           
  1736                           ;FRAME.c: 149:         message->data[0] = 0xFF;
  1737  000D94  EE20 F008          	lfsr	2,8
  1738  000D98  5006               	movf	FRAME_AveragingTimes@message,w,c
  1739  000D9A  26D9               	addwf	fsr2l,f,c
  1740  000D9C  5007               	movf	FRAME_AveragingTimes@message+1,w,c
  1741  000D9E  22DA               	addwfc	fsr2h,f,c
  1742  000DA0  0EFF               	movlw	255
  1743  000DA2  6EDF               	movwf	indf2,c
  1744                           
  1745                           ;FRAME.c: 150:     }
  1746  000DA4  0012               	return		;funcret
  1747  000DA6                     __end_of_FRAME_AveragingTimes:
  1748                           	opt callstack 0
  1749                           
  1750 ;; *************** function _FRAME_AnalogValue *****************
  1751 ;; Defined at:
  1752 ;;		line 366 in file "FRAME.c"
  1753 ;; Parameters:    Size  Location     Type
  1754 ;;  message         2    5[COMRAM] PTR struct .
  1755 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1756 ;;  set             2    7[COMRAM] unsigned short 
  1757 ;; Auto vars:     Size  Location     Type
  1758 ;;  i               2    0        unsigned short 
  1759 ;; Return value:  Size  Location     Type
  1760 ;;                  1    wreg      void 
  1761 ;; Registers used:
  1762 ;;		None
  1763 ;; Tracked objects:
  1764 ;;		On entry : 0/0
  1765 ;;		On exit  : 0/0
  1766 ;;		Unchanged: 0/0
  1767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1768 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1771 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1772 ;;Total ram usage:        4 bytes
  1773 ;; Hardware stack levels used:    1
  1774 ;; Hardware stack levels required when called:    3
  1775 ;; This function calls:
  1776 ;;		Nothing
  1777 ;; This function is called by:
  1778 ;;		_FRAME_HandleCanFrame
  1779 ;; This function uses a non-reentrant model
  1780 ;;
  1781                           
  1782                           	psect	text13
  1783  000F82                     __ptext13:
  1784                           	opt callstack 0
  1785  000F82                     _FRAME_AnalogValue:
  1786                           	opt callstack 25
  1787                           
  1788                           ;incstack = 0
  1789  000F82  0012               	return		;funcret
  1790  000F84                     __end_of_FRAME_AnalogValue:
  1791                           	opt callstack 0
  1792                           
  1793 ;; *************** function _FRAME_AdressOfNeighbors *****************
  1794 ;; Defined at:
  1795 ;;		line 409 in file "FRAME.c"
  1796 ;; Parameters:    Size  Location     Type
  1797 ;;  message         2    5[COMRAM] PTR struct .
  1798 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1799 ;;  nrRamki         2    7[COMRAM] unsigned short 
  1800 ;; Auto vars:     Size  Location     Type
  1801 ;;  i               2    0        unsigned short 
  1802 ;; Return value:  Size  Location     Type
  1803 ;;                  1    wreg      void 
  1804 ;; Registers used:
  1805 ;;		None
  1806 ;; Tracked objects:
  1807 ;;		On entry : 0/0
  1808 ;;		On exit  : 0/0
  1809 ;;		Unchanged: 0/0
  1810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1811 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1814 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1815 ;;Total ram usage:        4 bytes
  1816 ;; Hardware stack levels used:    1
  1817 ;; Hardware stack levels required when called:    3
  1818 ;; This function calls:
  1819 ;;		Nothing
  1820 ;; This function is called by:
  1821 ;;		_FRAME_HandleCanFrame
  1822 ;; This function uses a non-reentrant model
  1823 ;;
  1824                           
  1825                           	psect	text14
  1826  000F84                     __ptext14:
  1827                           	opt callstack 0
  1828  000F84                     _FRAME_AdressOfNeighbors:
  1829                           	opt callstack 25
  1830                           
  1831                           ;incstack = 0
  1832  000F84  0012               	return		;funcret
  1833  000F86                     __end_of_FRAME_AdressOfNeighbors:
  1834                           	opt callstack 0
  1835                           
  1836 ;; *************** function _FRAME_AccelerometerStatus *****************
  1837 ;; Defined at:
  1838 ;;		line 63 in file "FRAME.c"
  1839 ;; Parameters:    Size  Location     Type
  1840 ;;  message         2    5[COMRAM] PTR struct .
  1841 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1842 ;; Auto vars:     Size  Location     Type
  1843 ;;		None
  1844 ;; Return value:  Size  Location     Type
  1845 ;;                  1    wreg      void 
  1846 ;; Registers used:
  1847 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1848 ;; Tracked objects:
  1849 ;;		On entry : 0/0
  1850 ;;		On exit  : 0/0
  1851 ;;		Unchanged: 0/0
  1852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1853 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1855 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1856 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1857 ;;Total ram usage:        3 bytes
  1858 ;; Hardware stack levels used:    1
  1859 ;; Hardware stack levels required when called:    3
  1860 ;; This function calls:
  1861 ;;		Nothing
  1862 ;; This function is called by:
  1863 ;;		_FRAME_HandleCanFrame
  1864 ;; This function uses a non-reentrant model
  1865 ;;
  1866                           
  1867                           	psect	text15
  1868  000DA6                     __ptext15:
  1869                           	opt callstack 0
  1870  000DA6                     _FRAME_AccelerometerStatus:
  1871                           	opt callstack 25
  1872                           
  1873                           ;FRAME.c: 63: static void FRAME_AccelerometerStatus(mID *message);FRAME.c: 64: {;FRAME.c
      +                          : 65:     if(message->message_type == 0x02)
  1874                           
  1875                           ;incstack = 0
  1876  000DA6  EE20 F001          	lfsr	2,1
  1877  000DAA  5006               	movf	FRAME_AccelerometerStatus@message,w,c
  1878  000DAC  26D9               	addwf	fsr2l,f,c
  1879  000DAE  5007               	movf	FRAME_AccelerometerStatus@message+1,w,c
  1880  000DB0  22DA               	addwfc	fsr2h,f,c
  1881  000DB2  0E02               	movlw	2
  1882  000DB4  18DE               	xorwf	postinc2,w,c
  1883  000DB6  A4D8               	btfss	status,2,c
  1884  000DB8  0012               	return	
  1885                           
  1886                           ;FRAME.c: 66:     {;FRAME.c: 67:         message->data_length = 1;
  1887  000DBA  EE20 F010          	lfsr	2,16
  1888  000DBE  5006               	movf	FRAME_AccelerometerStatus@message,w,c
  1889  000DC0  26D9               	addwf	fsr2l,f,c
  1890  000DC2  5007               	movf	FRAME_AccelerometerStatus@message+1,w,c
  1891  000DC4  22DA               	addwfc	fsr2h,f,c
  1892  000DC6  0E01               	movlw	1
  1893  000DC8  6EDF               	movwf	indf2,c
  1894                           
  1895                           ;FRAME.c: 71:         message->data[0] = 0xFF;
  1896  000DCA  EE20 F008          	lfsr	2,8
  1897  000DCE  5006               	movf	FRAME_AccelerometerStatus@message,w,c
  1898  000DD0  26D9               	addwf	fsr2l,f,c
  1899  000DD2  5007               	movf	FRAME_AccelerometerStatus@message+1,w,c
  1900  000DD4  22DA               	addwfc	fsr2h,f,c
  1901  000DD6  0EFF               	movlw	255
  1902  000DD8  6EDF               	movwf	indf2,c
  1903                           
  1904                           ;FRAME.c: 72:     }
  1905  000DDA  0012               	return		;funcret
  1906  000DDC                     __end_of_FRAME_AccelerometerStatus:
  1907                           	opt callstack 0
  1908                           
  1909 ;; *************** function _CAN_SendFrame *****************
  1910 ;; Defined at:
  1911 ;;		line 183 in file "CAN.c"
  1912 ;; Parameters:    Size  Location     Type
  1913 ;;  message         2   10[COMRAM] PTR struct .
  1914 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1915 ;; Auto vars:     Size  Location     Type
  1916 ;;		None
  1917 ;; Return value:  Size  Location     Type
  1918 ;;                  1    wreg      void 
  1919 ;; Registers used:
  1920 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1921 ;; Tracked objects:
  1922 ;;		On entry : 0/0
  1923 ;;		On exit  : 0/0
  1924 ;;		Unchanged: 0/0
  1925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1926 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1928 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1929 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1930 ;;Total ram usage:        5 bytes
  1931 ;; Hardware stack levels used:    1
  1932 ;; Hardware stack levels required when called:    4
  1933 ;; This function calls:
  1934 ;;		_CAN_MoveBuffIntoFrame
  1935 ;; This function is called by:
  1936 ;;		_FRAME_HandleCanFrame
  1937 ;; This function uses a non-reentrant model
  1938 ;;
  1939                           
  1940                           	psect	text16
  1941  0004B0                     __ptext16:
  1942                           	opt callstack 0
  1943  0004B0                     _CAN_SendFrame:
  1944                           	opt callstack 24
  1945                           
  1946                           ;CAN.c: 188:     {;CAN.c: 189:         ECANCON = 0x83;
  1947                           
  1948                           ;incstack = 0
  1949                           ;CAN.c: 183: void CAN_SendFrame(mID * message);CAN.c: 184: {;CAN.c: 187:     for(;;)
  1950  0004B0  0E83               	movlw	131
  1951  0004B2  6E77               	movwf	3959,c	;volatile
  1952                           
  1953                           ;CAN.c: 190:         if(!RXB0CONbits.FILHIT3)
  1954  0004B4  A660               	btfss	3936,3,c	;volatile
  1955  0004B6  D00A               	goto	l177
  1956                           
  1957                           ;CAN.c: 195:         ECANCON = 0x84;
  1958  0004B8  0E84               	movlw	132
  1959  0004BA  6E77               	movwf	3959,c	;volatile
  1960                           
  1961                           ;CAN.c: 196:         if(!RXB0CONbits.FILHIT3)
  1962  0004BC  A660               	btfss	3936,3,c	;volatile
  1963  0004BE  D006               	goto	l177
  1964                           
  1965                           ;CAN.c: 201:         ECANCON = 0x85;
  1966  0004C0  0E85               	movlw	133
  1967  0004C2  6E77               	movwf	3959,c	;volatile
  1968                           
  1969                           ;CAN.c: 202:         if(!RXB0CONbits.FILHIT3)
  1970  0004C4  A660               	btfss	3936,3,c	;volatile
  1971  0004C6  D002               	goto	l177
  1972  0004C8  D7F3               	goto	_CAN_SendFrame
  1973  0004CA                     l178:
  1974  0004CA  00FF               	reset		;# 
  1975  0004CC                     l177:
  1976                           
  1977                           ;CAN.c: 209:     while(COMSTATbits.TXWARN)
  1978  0004CC  B474               	btfsc	3956,2,c	;volatile
  1979  0004CE  D7FD               	goto	l178
  1980                           
  1981                           ;CAN.c: 213:     DetectorLedRadar.timerRamkiTxCANU8 = 0;
  1982  0004D0  0E00               	movlw	0
  1983  0004D2  6E3E               	movwf	_DetectorLedRadar+1,c
  1984                           
  1985                           ;CAN.c: 214:     RXB0EIDL = message->id.v[0];
  1986  0004D4  EE20 F004          	lfsr	2,4
  1987  0004D8  500B               	movf	CAN_SendFrame@message,w,c
  1988  0004DA  26D9               	addwf	fsr2l,f,c
  1989  0004DC  500C               	movf	CAN_SendFrame@message+1,w,c
  1990  0004DE  22DA               	addwfc	fsr2h,f,c
  1991  0004E0  50DF               	movf	indf2,w,c
  1992  0004E2  6E64               	movwf	3940,c	;volatile
  1993                           
  1994                           ;CAN.c: 215:     RXB0EIDH = message->id.v[1];
  1995  0004E4  EE20 F005          	lfsr	2,5
  1996  0004E8  500B               	movf	CAN_SendFrame@message,w,c
  1997  0004EA  26D9               	addwf	fsr2l,f,c
  1998  0004EC  500C               	movf	CAN_SendFrame@message+1,w,c
  1999  0004EE  22DA               	addwfc	fsr2h,f,c
  2000  0004F0  50DF               	movf	indf2,w,c
  2001  0004F2  6E63               	movwf	3939,c	;volatile
  2002                           
  2003                           ;CAN.c: 216:     RXB0SIDL = ((message->id.v[2]&0xFC)*8) | (message->id.v[2] & (0x03));
  2004  0004F4  EE20 F006          	lfsr	2,6
  2005  0004F8  500B               	movf	CAN_SendFrame@message,w,c
  2006  0004FA  26D9               	addwf	fsr2l,f,c
  2007  0004FC  500C               	movf	CAN_SendFrame@message+1,w,c
  2008  0004FE  22DA               	addwfc	fsr2h,f,c
  2009  000500  50DF               	movf	indf2,w,c
  2010  000502  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  2011  000504  0E03               	movlw	3
  2012  000506  160D               	andwf	??_CAN_SendFrame,f,c
  2013  000508  EE20 F006          	lfsr	2,6
  2014  00050C  500B               	movf	CAN_SendFrame@message,w,c
  2015  00050E  26D9               	addwf	fsr2l,f,c
  2016  000510  500C               	movf	CAN_SendFrame@message+1,w,c
  2017  000512  22DA               	addwfc	fsr2h,f,c
  2018  000514  50DF               	movf	indf2,w,c
  2019  000516  0BFC               	andlw	252
  2020  000518  0D08               	mullw	8
  2021  00051A  50F3               	movf	prodl,w,c
  2022  00051C  100D               	iorwf	??_CAN_SendFrame,w,c
  2023  00051E  6E62               	movwf	3938,c	;volatile
  2024                           
  2025                           ;CAN.c: 217:     RXB0SIDLbits.EXID = 1;
  2026  000520  8662               	bsf	3938,3,c	;volatile
  2027                           
  2028                           ;CAN.c: 218:     RXB0SIDH = (BYTE)(message->id.w[1]/32);
  2029  000522  EE20 F006          	lfsr	2,6
  2030  000526  500B               	movf	CAN_SendFrame@message,w,c
  2031  000528  26D9               	addwf	fsr2l,f,c
  2032  00052A  500C               	movf	CAN_SendFrame@message+1,w,c
  2033  00052C  22DA               	addwfc	fsr2h,f,c
  2034  00052E  CFDE F00D          	movff	postinc2,??_CAN_SendFrame
  2035  000532  CFDD F00E          	movff	postdec2,??_CAN_SendFrame+1
  2036  000536  0E05               	movlw	5
  2037  000538  6E0F               	movwf	(??_CAN_SendFrame+2)& (0+255),c
  2038  00053A                     u965:
  2039  00053A  90D8               	bcf	status,0,c
  2040  00053C  320E               	rrcf	??_CAN_SendFrame+1,f,c
  2041  00053E  320D               	rrcf	??_CAN_SendFrame,f,c
  2042  000540  2E0F               	decfsz	(??_CAN_SendFrame+2)& (0+255),f,c
  2043  000542  D7FB               	goto	u965
  2044  000544  500D               	movf	??_CAN_SendFrame,w,c
  2045  000546  6E61               	movwf	3937,c	;volatile
  2046                           
  2047                           ;CAN.c: 220:     RXB0DLC = 0;
  2048  000548  0E00               	movlw	0
  2049  00054A  6E65               	movwf	3941,c	;volatile
  2050                           
  2051                           ;CAN.c: 222:     if(message->message_type==0x02)
  2052  00054C  EE20 F001          	lfsr	2,1
  2053  000550  500B               	movf	CAN_SendFrame@message,w,c
  2054  000552  26D9               	addwf	fsr2l,f,c
  2055  000554  500C               	movf	CAN_SendFrame@message+1,w,c
  2056  000556  22DA               	addwfc	fsr2h,f,c
  2057  000558  0E02               	movlw	2
  2058  00055A  18DE               	xorwf	postinc2,w,c
  2059  00055C  A4D8               	btfss	status,2,c
  2060  00055E  D002               	goto	l2198
  2061                           
  2062                           ;CAN.c: 223:     {;CAN.c: 224:         RXB0DLCbits.RXRTR = 1;
  2063  000560  8C65               	bsf	3941,6,c	;volatile
  2064                           
  2065                           ;CAN.c: 225:     }
  2066  000562  D05A               	goto	l2202
  2067  000564                     l2198:
  2068                           
  2069                           ;CAN.c: 227:     {;CAN.c: 228:         RXB0DLCbits.DLC0 = (message->data_length & 0x0F);
  2070  000564  EE20 F010          	lfsr	2,16
  2071  000568  500B               	movf	CAN_SendFrame@message,w,c
  2072  00056A  26D9               	addwf	fsr2l,f,c
  2073  00056C  500C               	movf	CAN_SendFrame@message+1,w,c
  2074  00056E  22DA               	addwfc	fsr2h,f,c
  2075  000570  50DF               	movf	indf2,w,c
  2076  000572  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  2077  000574  0E0F               	movlw	15
  2078  000576  160D               	andwf	??_CAN_SendFrame,f,c
  2079  000578  5065               	movf	3941,w,c	;volatile
  2080  00057A  180D               	xorwf	??_CAN_SendFrame,w,c
  2081  00057C  0BFE               	andlw	-2
  2082  00057E  180D               	xorwf	??_CAN_SendFrame,w,c
  2083  000580  6E65               	movwf	3941,c	;volatile
  2084                           
  2085                           ;CAN.c: 229:         RXB0DLCbits.DLC1 = ((message->data_length & 0x0F)>> 1);
  2086  000582  EE20 F010          	lfsr	2,16
  2087  000586  500B               	movf	CAN_SendFrame@message,w,c
  2088  000588  26D9               	addwf	fsr2l,f,c
  2089  00058A  500C               	movf	CAN_SendFrame@message+1,w,c
  2090  00058C  22DA               	addwfc	fsr2h,f,c
  2091  00058E  50DF               	movf	indf2,w,c
  2092  000590  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  2093  000592  90D8               	bcf	status,0,c
  2094  000594  320D               	rrcf	??_CAN_SendFrame,f,c
  2095  000596  0E07               	movlw	7
  2096  000598  160D               	andwf	??_CAN_SendFrame,f,c
  2097  00059A  460D               	rlncf	??_CAN_SendFrame,f,c
  2098  00059C  5065               	movf	3941,w,c	;volatile
  2099  00059E  180D               	xorwf	??_CAN_SendFrame,w,c
  2100  0005A0  0BFD               	andlw	-3
  2101  0005A2  180D               	xorwf	??_CAN_SendFrame,w,c
  2102  0005A4  6E65               	movwf	3941,c	;volatile
  2103                           
  2104                           ;CAN.c: 230:         RXB0DLCbits.DLC2 = ((message->data_length & 0x0F)>> 2);
  2105  0005A6  EE20 F010          	lfsr	2,16
  2106  0005AA  500B               	movf	CAN_SendFrame@message,w,c
  2107  0005AC  26D9               	addwf	fsr2l,f,c
  2108  0005AE  500C               	movf	CAN_SendFrame@message+1,w,c
  2109  0005B0  22DA               	addwfc	fsr2h,f,c
  2110  0005B2  50DF               	movf	indf2,w,c
  2111  0005B4  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  2112  0005B6  90D8               	bcf	status,0,c
  2113  0005B8  320D               	rrcf	??_CAN_SendFrame,f,c
  2114  0005BA  90D8               	bcf	status,0,c
  2115  0005BC  320D               	rrcf	??_CAN_SendFrame,f,c
  2116  0005BE  0E03               	movlw	3
  2117  0005C0  160D               	andwf	??_CAN_SendFrame,f,c
  2118  0005C2  460D               	rlncf	??_CAN_SendFrame,f,c
  2119  0005C4  460D               	rlncf	??_CAN_SendFrame,f,c
  2120  0005C6  5065               	movf	3941,w,c	;volatile
  2121  0005C8  180D               	xorwf	??_CAN_SendFrame,w,c
  2122  0005CA  0BFB               	andlw	-5
  2123  0005CC  180D               	xorwf	??_CAN_SendFrame,w,c
  2124  0005CE  6E65               	movwf	3941,c	;volatile
  2125                           
  2126                           ;CAN.c: 231:         RXB0DLCbits.DLC3 = ((message->data_length & 0x0F)>> 3);
  2127  0005D0  EE20 F010          	lfsr	2,16
  2128  0005D4  500B               	movf	CAN_SendFrame@message,w,c
  2129  0005D6  26D9               	addwf	fsr2l,f,c
  2130  0005D8  500C               	movf	CAN_SendFrame@message+1,w,c
  2131  0005DA  22DA               	addwfc	fsr2h,f,c
  2132  0005DC  50DF               	movf	indf2,w,c
  2133  0005DE  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  2134  0005E0  90D8               	bcf	status,0,c
  2135  0005E2  320D               	rrcf	??_CAN_SendFrame,f,c
  2136  0005E4  90D8               	bcf	status,0,c
  2137  0005E6  320D               	rrcf	??_CAN_SendFrame,f,c
  2138  0005E8  90D8               	bcf	status,0,c
  2139  0005EA  320D               	rrcf	??_CAN_SendFrame,f,c
  2140  0005EC  0E01               	movlw	1
  2141  0005EE  160D               	andwf	??_CAN_SendFrame,f,c
  2142  0005F0  460D               	rlncf	??_CAN_SendFrame,f,c
  2143  0005F2  460D               	rlncf	??_CAN_SendFrame,f,c
  2144  0005F4  460D               	rlncf	??_CAN_SendFrame,f,c
  2145  0005F6  5065               	movf	3941,w,c	;volatile
  2146  0005F8  180D               	xorwf	??_CAN_SendFrame,w,c
  2147  0005FA  0BF7               	andlw	-9
  2148  0005FC  180D               	xorwf	??_CAN_SendFrame,w,c
  2149  0005FE  6E65               	movwf	3941,c	;volatile
  2150                           
  2151                           ;CAN.c: 233:         CAN_MoveBuffIntoFrame(&RXB0D0, message->data);
  2152  000600  0E66               	movlw	102
  2153  000602  6E06               	movwf	CAN_MoveBuffIntoFrame@Ram,c
  2154  000604  0E0F               	movlw	15
  2155  000606  6E07               	movwf	CAN_MoveBuffIntoFrame@Ram+1,c
  2156  000608  0E08               	movlw	8
  2157  00060A  240B               	addwf	CAN_SendFrame@message,w,c
  2158  00060C  6E08               	movwf	CAN_MoveBuffIntoFrame@Buf,c
  2159  00060E  0E00               	movlw	0
  2160  000610  200C               	addwfc	CAN_SendFrame@message+1,w,c
  2161  000612  6E09               	movwf	CAN_MoveBuffIntoFrame@Buf+1,c
  2162  000614  EC1F  F007         	call	_CAN_MoveBuffIntoFrame	;wreg free
  2163  000618                     l2202:
  2164                           
  2165                           ;CAN.c: 236:     RXB0CONbits.FILHIT3 = 1;
  2166  000618  8660               	bsf	3936,3,c	;volatile
  2167                           
  2168                           ;CAN.c: 238:     DetectorLedRadar.Flags.ramkaTx = 1;
  2169  00061A  883D               	bsf	_DetectorLedRadar,4,c
  2170  00061C  0012               	return		;funcret
  2171  00061E                     __end_of_CAN_SendFrame:
  2172                           	opt callstack 0
  2173                           
  2174 ;; *************** function _CAN_GenID *****************
  2175 ;; Defined at:
  2176 ;;		line 382 in file "CAN.c"
  2177 ;; Parameters:    Size  Location     Type
  2178 ;;  message         2    5[COMRAM] PTR struct .
  2179 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2180 ;;  frameID         1    7[COMRAM] unsigned char 
  2181 ;; Auto vars:     Size  Location     Type
  2182 ;;		None
  2183 ;; Return value:  Size  Location     Type
  2184 ;;                  1    wreg      void 
  2185 ;; Registers used:
  2186 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2187 ;; Tracked objects:
  2188 ;;		On entry : 0/0
  2189 ;;		On exit  : 0/0
  2190 ;;		Unchanged: 0/0
  2191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2192 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2194 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2195 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2196 ;;Total ram usage:        5 bytes
  2197 ;; Hardware stack levels used:    1
  2198 ;; Hardware stack levels required when called:    3
  2199 ;; This function calls:
  2200 ;;		Nothing
  2201 ;; This function is called by:
  2202 ;;		_FRAME_HandleCanFrame
  2203 ;; This function uses a non-reentrant model
  2204 ;;
  2205                           
  2206                           	psect	text17
  2207  00094A                     __ptext17:
  2208                           	opt callstack 0
  2209  00094A                     _CAN_GenID:
  2210                           	opt callstack 25
  2211                           
  2212                           ;CAN.c: 382: void CAN_GenID(mID * message, BYTE frameID);CAN.c: 383: {;CAN.c: 385:     m
      +                          essage->frame_type = 0x03;
  2213                           
  2214                           ;incstack = 0
  2215  00094A  EE20 F002          	lfsr	2,2
  2216  00094E  5006               	movf	CAN_GenID@message,w,c
  2217  000950  26D9               	addwf	fsr2l,f,c
  2218  000952  5007               	movf	CAN_GenID@message+1,w,c
  2219  000954  22DA               	addwfc	fsr2h,f,c
  2220  000956  0E03               	movlw	3
  2221  000958  6EDF               	movwf	indf2,c
  2222                           
  2223                           ;CAN.c: 386:     message->message_type = 0x01;
  2224  00095A  EE20 F001          	lfsr	2,1
  2225  00095E  5006               	movf	CAN_GenID@message,w,c
  2226  000960  26D9               	addwf	fsr2l,f,c
  2227  000962  5007               	movf	CAN_GenID@message+1,w,c
  2228  000964  22DA               	addwfc	fsr2h,f,c
  2229  000966  0E01               	movlw	1
  2230  000968  6EDF               	movwf	indf2,c
  2231                           
  2232                           ;CAN.c: 387:     message->id.w[1] = (WORD)frameID * (WORD)4;
  2233  00096A  5008               	movf	CAN_GenID@frameID,w,c
  2234  00096C  6E09               	movwf	??_CAN_GenID& (0+255),c
  2235  00096E  6A0A               	clrf	(??_CAN_GenID+1)& (0+255),c
  2236  000970  90D8               	bcf	status,0,c
  2237  000972  3609               	rlcf	??_CAN_GenID,f,c
  2238  000974  360A               	rlcf	??_CAN_GenID+1,f,c
  2239  000976  90D8               	bcf	status,0,c
  2240  000978  3609               	rlcf	??_CAN_GenID,f,c
  2241  00097A  360A               	rlcf	??_CAN_GenID+1,f,c
  2242  00097C  EE20 F006          	lfsr	2,6
  2243  000980  5006               	movf	CAN_GenID@message,w,c
  2244  000982  26D9               	addwf	fsr2l,f,c
  2245  000984  5007               	movf	CAN_GenID@message+1,w,c
  2246  000986  22DA               	addwfc	fsr2h,f,c
  2247  000988  C009  FFDE         	movff	??_CAN_GenID,postinc2
  2248  00098C  C00A  FFDD         	movff	??_CAN_GenID+1,postdec2
  2249                           
  2250                           ;CAN.c: 388:     message->id.w[0] = DaneCan.adresCAN;
  2251  000990  EE20 F004          	lfsr	2,4
  2252  000994  5006               	movf	CAN_GenID@message,w,c
  2253  000996  26D9               	addwf	fsr2l,f,c
  2254  000998  5007               	movf	CAN_GenID@message+1,w,c
  2255  00099A  22DA               	addwfc	fsr2h,f,c
  2256  00099C  C039  FFDE         	movff	_DaneCan+2,postinc2
  2257  0009A0  C03A  FFDD         	movff	_DaneCan+3,postdec2
  2258                           
  2259                           ;CAN.c: 389:     message->id.v[2] |= 0x01;
  2260  0009A4  EE20 F006          	lfsr	2,6
  2261  0009A8  5006               	movf	CAN_GenID@message,w,c
  2262  0009AA  26D9               	addwf	fsr2l,f,c
  2263  0009AC  5007               	movf	CAN_GenID@message+1,w,c
  2264  0009AE  22DA               	addwfc	fsr2h,f,c
  2265  0009B0  0E00               	movlw	0
  2266  0009B2  80DB               	bsf	plusw2,0,c
  2267                           
  2268                           ;CAN.c: 390:     message->id.v[1] |= 0x40;
  2269  0009B4  EE20 F005          	lfsr	2,5
  2270  0009B8  5006               	movf	CAN_GenID@message,w,c
  2271  0009BA  26D9               	addwf	fsr2l,f,c
  2272  0009BC  5007               	movf	CAN_GenID@message+1,w,c
  2273  0009BE  22DA               	addwfc	fsr2h,f,c
  2274  0009C0  0E00               	movlw	0
  2275  0009C2  8CDB               	bsf	plusw2,6,c
  2276  0009C4  0012               	return		;funcret
  2277  0009C6                     __end_of_CAN_GenID:
  2278                           	opt callstack 0
  2279                           
  2280 ;; *************** function _CAN_TakeFrame *****************
  2281 ;; Defined at:
  2282 ;;		line 247 in file "CAN.c"
  2283 ;; Parameters:    Size  Location     Type
  2284 ;;  message         2   13[COMRAM] PTR struct .
  2285 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2286 ;; Auto vars:     Size  Location     Type
  2287 ;;  k               1   18[COMRAM] unsigned char 
  2288 ;;  tempCON         1   17[COMRAM] unsigned char 
  2289 ;; Return value:  Size  Location     Type
  2290 ;;                  1    wreg      enum E10433
  2291 ;; Registers used:
  2292 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2293 ;; Tracked objects:
  2294 ;;		On entry : 0/0
  2295 ;;		On exit  : 0/0
  2296 ;;		Unchanged: 0/0
  2297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2298 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2299 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2300 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2301 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2302 ;;Total ram usage:        6 bytes
  2303 ;; Hardware stack levels used:    1
  2304 ;; Hardware stack levels required when called:    4
  2305 ;; This function calls:
  2306 ;;		_CAN_MoveBuffIntoFrame
  2307 ;;		___awdiv
  2308 ;; This function is called by:
  2309 ;;		_TRM_DataTransmition
  2310 ;; This function uses a non-reentrant model
  2311 ;;
  2312                           
  2313                           	psect	text18
  2314  000060                     __ptext18:
  2315                           	opt callstack 0
  2316  000060                     _CAN_TakeFrame:
  2317                           	opt callstack 25
  2318                           
  2319                           ;CAN.c: 247: BOOL CAN_TakeFrame(mID * message);CAN.c: 248: {;CAN.c: 249:     BYTE k, tem
      +                          pCON;;CAN.c: 251:     k = CANCON&0x0F;
  2320                           
  2321                           ;incstack = 0
  2322  000060  506F               	movf	3951,w,c	;volatile
  2323  000062  0B0F               	andlw	15
  2324  000064  6E13               	movwf	CAN_TakeFrame@k,c
  2325                           
  2326                           ;CAN.c: 253:     ECANCON = 0x90 | k;
  2327  000066  5013               	movf	CAN_TakeFrame@k,w,c
  2328  000068  0990               	iorlw	144
  2329  00006A  6E77               	movwf	3959,c	;volatile
  2330                           
  2331                           ;CAN.c: 256:     switch(k)
  2332  00006C  D018               	goto	l2376
  2333  00006E                     l186:
  2334                           
  2335                           ;CAN.c: 259:             tempCON = RXB0CON;
  2336  00006E  CF60 F012          	movff	3936,CAN_TakeFrame@tempCON	;volatile
  2337                           
  2338                           ;CAN.c: 260:             break;
  2339  000072  D035               	goto	l187
  2340  000074                     l188:
  2341                           
  2342                           ;CAN.c: 262:             tempCON = RXB1CON;
  2343  000074  CF50 F012          	movff	3920,CAN_TakeFrame@tempCON	;volatile
  2344                           
  2345                           ;CAN.c: 263:             break;
  2346  000078  D032               	goto	l187
  2347  00007A                     l189:
  2348                           
  2349                           ;CAN.c: 265:             tempCON = B0CON;
  2350  00007A  CE20 F012          	movff	3616,CAN_TakeFrame@tempCON	;volatile
  2351                           
  2352                           ;CAN.c: 266:             break;
  2353  00007E  D02F               	goto	l187
  2354  000080                     l190:
  2355                           
  2356                           ;CAN.c: 268:             tempCON = B1CON;
  2357  000080  CE30 F012          	movff	3632,CAN_TakeFrame@tempCON	;volatile
  2358                           
  2359                           ;CAN.c: 269:             break;
  2360  000084  D02C               	goto	l187
  2361  000086                     l191:
  2362                           
  2363                           ;CAN.c: 271:             tempCON = B2CON;
  2364  000086  CE40 F012          	movff	3648,CAN_TakeFrame@tempCON	;volatile
  2365                           
  2366                           ;CAN.c: 272:             break;
  2367  00008A  D029               	goto	l187
  2368  00008C                     l192:
  2369                           
  2370                           ;CAN.c: 274:             tempCON = B3CON;
  2371  00008C  CE50 F012          	movff	3664,CAN_TakeFrame@tempCON	;volatile
  2372                           
  2373                           ;CAN.c: 275:             break;
  2374  000090  D026               	goto	l187
  2375  000092                     l193:
  2376                           
  2377                           ;CAN.c: 277:             tempCON = B4CON;
  2378  000092  CE60 F012          	movff	3680,CAN_TakeFrame@tempCON	;volatile
  2379                           
  2380                           ;CAN.c: 278:             break;
  2381  000096  D023               	goto	l187
  2382  000098                     l194:
  2383                           
  2384                           ;CAN.c: 280:             tempCON = B5CON;
  2385  000098  CE70 F012          	movff	3696,CAN_TakeFrame@tempCON	;volatile
  2386                           
  2387                           ;CAN.c: 281:             break;
  2388  00009C  D020               	goto	l187
  2389  00009E                     l2376:
  2390  00009E  5013               	movf	CAN_TakeFrame@k,w,c
  2391  0000A0  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  2392  0000A2  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  2393                           
  2394                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2395                           ; Switch size 1, requested type "simple"
  2396                           ; Number of cases is 1, Range of values is 0 to 0
  2397                           ; switch strategies available:
  2398                           ; Name         Instructions Cycles
  2399                           ; simple_byte            4     3 (average)
  2400                           ;	Chosen strategy is simple_byte
  2401  0000A4  5011               	movf	??_CAN_TakeFrame+1,w,c
  2402  0000A6  0A00               	xorlw	0	; case 0
  2403  0000A8  A4D8               	btfss	status,2,c
  2404  0000AA  D019               	goto	l187
  2405                           
  2406                           ; Switch size 1, requested type "simple"
  2407                           ; Number of cases is 8, Range of values is 0 to 7
  2408                           ; switch strategies available:
  2409                           ; Name         Instructions Cycles
  2410                           ; simple_byte           25    13 (average)
  2411                           ;	Chosen strategy is simple_byte
  2412  0000AC  5010               	movf	??_CAN_TakeFrame,w,c
  2413  0000AE  0A00               	xorlw	0	; case 0
  2414  0000B0  B4D8               	btfsc	status,2,c
  2415  0000B2  D7DD               	goto	l186
  2416  0000B4  0A01               	xorlw	1	; case 1
  2417  0000B6  B4D8               	btfsc	status,2,c
  2418  0000B8  D7DD               	goto	l188
  2419  0000BA  0A03               	xorlw	3	; case 2
  2420  0000BC  B4D8               	btfsc	status,2,c
  2421  0000BE  D7DD               	goto	l189
  2422  0000C0  0A01               	xorlw	1	; case 3
  2423  0000C2  B4D8               	btfsc	status,2,c
  2424  0000C4  D7DD               	goto	l190
  2425  0000C6  0A07               	xorlw	7	; case 4
  2426  0000C8  B4D8               	btfsc	status,2,c
  2427  0000CA  D7DD               	goto	l191
  2428  0000CC  0A01               	xorlw	1	; case 5
  2429  0000CE  B4D8               	btfsc	status,2,c
  2430  0000D0  D7DD               	goto	l192
  2431  0000D2  0A03               	xorlw	3	; case 6
  2432  0000D4  B4D8               	btfsc	status,2,c
  2433  0000D6  D7DD               	goto	l193
  2434  0000D8  0A01               	xorlw	1	; case 7
  2435  0000DA  B4D8               	btfsc	status,2,c
  2436  0000DC  D7DD               	goto	l194
  2437  0000DE                     l187:
  2438                           
  2439                           ;CAN.c: 285:     if((tempCON & 0x80) > 0)
  2440  0000DE  AE12               	btfss	CAN_TakeFrame@tempCON,7,c
  2441  0000E0  D0A5               	goto	l2412
  2442                           
  2443                           ;CAN.c: 286:     {;CAN.c: 287:         message->buffer = RXB0CON & 0x1F;
  2444  0000E2  EE20 F003          	lfsr	2,3
  2445  0000E6  500E               	movf	CAN_TakeFrame@message,w,c
  2446  0000E8  26D9               	addwf	fsr2l,f,c
  2447  0000EA  500F               	movf	CAN_TakeFrame@message+1,w,c
  2448  0000EC  22DA               	addwfc	fsr2h,f,c
  2449  0000EE  5060               	movf	3936,w,c	;volatile
  2450  0000F0  0B1F               	andlw	31
  2451  0000F2  6EDF               	movwf	indf2,c
  2452                           
  2453                           ;CAN.c: 288:         message->id.v[0] = RXB0EIDL;
  2454  0000F4  EE20 F004          	lfsr	2,4
  2455  0000F8  500E               	movf	CAN_TakeFrame@message,w,c
  2456  0000FA  26D9               	addwf	fsr2l,f,c
  2457  0000FC  500F               	movf	CAN_TakeFrame@message+1,w,c
  2458  0000FE  22DA               	addwfc	fsr2h,f,c
  2459  000100  CF64 FFDF          	movff	3940,indf2	;volatile
  2460                           
  2461                           ;CAN.c: 289:         message->id.v[1] = RXB0EIDH;
  2462  000104  EE20 F005          	lfsr	2,5
  2463  000108  500E               	movf	CAN_TakeFrame@message,w,c
  2464  00010A  26D9               	addwf	fsr2l,f,c
  2465  00010C  500F               	movf	CAN_TakeFrame@message+1,w,c
  2466  00010E  22DA               	addwfc	fsr2h,f,c
  2467  000110  CF63 FFDF          	movff	3939,indf2	;volatile
  2468                           
  2469                           ;CAN.c: 290:         message->id.v[2] = (RXB0SIDL/8) | (RXB0SIDL&0x03);
  2470  000114  EE20 F006          	lfsr	2,6
  2471  000118  500E               	movf	CAN_TakeFrame@message,w,c
  2472  00011A  26D9               	addwf	fsr2l,f,c
  2473  00011C  500F               	movf	CAN_TakeFrame@message+1,w,c
  2474  00011E  22DA               	addwfc	fsr2h,f,c
  2475  000120  CF62 F010          	movff	3938,??_CAN_TakeFrame	;volatile
  2476  000124  0E03               	movlw	3
  2477  000126  1610               	andwf	??_CAN_TakeFrame,f,c
  2478  000128  CF62 F006          	movff	3938,___awdiv@dividend	;volatile
  2479  00012C  6A07               	clrf	___awdiv@dividend+1,c
  2480  00012E  0E00               	movlw	0
  2481  000130  6E09               	movwf	___awdiv@divisor+1,c
  2482  000132  0E08               	movlw	8
  2483  000134  6E08               	movwf	___awdiv@divisor,c
  2484  000136  EC63  F004         	call	___awdiv	;wreg free
  2485  00013A  5006               	movf	?___awdiv,w,c
  2486  00013C  1010               	iorwf	??_CAN_TakeFrame,w,c
  2487  00013E  6EDF               	movwf	indf2,c
  2488                           
  2489                           ;CAN.c: 291:         message->id.w[1] |= (WORD)RXB0SIDH*32;
  2490  000140  5061               	movf	3937,w,c	;volatile
  2491  000142  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  2492  000144  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  2493  000146  0E05               	movlw	5
  2494  000148                     u1205:
  2495  000148  90D8               	bcf	status,0,c
  2496  00014A  3610               	rlcf	??_CAN_TakeFrame,f,c
  2497  00014C  3611               	rlcf	??_CAN_TakeFrame+1,f,c
  2498  00014E  2EE8               	decfsz	wreg,f,c
  2499  000150  D7FB               	goto	u1205
  2500  000152  EE20 F006          	lfsr	2,6
  2501  000156  500E               	movf	CAN_TakeFrame@message,w,c
  2502  000158  26D9               	addwf	fsr2l,f,c
  2503  00015A  500F               	movf	CAN_TakeFrame@message+1,w,c
  2504  00015C  22DA               	addwfc	fsr2h,f,c
  2505  00015E  5010               	movf	??_CAN_TakeFrame,w,c
  2506  000160  12DE               	iorwf	postinc2,f,c
  2507  000162  5011               	movf	??_CAN_TakeFrame+1,w,c
  2508  000164  12DD               	iorwf	postdec2,f,c
  2509                           
  2510                           ;CAN.c: 292:         message->frame_type=0x03;
  2511  000166  EE20 F002          	lfsr	2,2
  2512  00016A  500E               	movf	CAN_TakeFrame@message,w,c
  2513  00016C  26D9               	addwf	fsr2l,f,c
  2514  00016E  500F               	movf	CAN_TakeFrame@message+1,w,c
  2515  000170  22DA               	addwfc	fsr2h,f,c
  2516  000172  0E03               	movlw	3
  2517  000174  6EDF               	movwf	indf2,c
  2518                           
  2519                           ;CAN.c: 296:         if(RXB0DLCbits.RXRTR == 0)
  2520  000176  BC65               	btfsc	3941,6,c	;volatile
  2521  000178  D068               	goto	l2418
  2522                           
  2523                           ;CAN.c: 297:         {;CAN.c: 298:             message->message_type = 0x01;
  2524  00017A  EE20 F001          	lfsr	2,1
  2525  00017E  500E               	movf	CAN_TakeFrame@message,w,c
  2526  000180  26D9               	addwf	fsr2l,f,c
  2527  000182  500F               	movf	CAN_TakeFrame@message+1,w,c
  2528  000184  22DA               	addwfc	fsr2h,f,c
  2529  000186  0E01               	movlw	1
  2530  000188  6EDF               	movwf	indf2,c
  2531                           
  2532                           ;CAN.c: 299:             message->data_length= RXB0DLC & 0x0F;
  2533  00018A  EE20 F010          	lfsr	2,16
  2534  00018E  500E               	movf	CAN_TakeFrame@message,w,c
  2535  000190  26D9               	addwf	fsr2l,f,c
  2536  000192  500F               	movf	CAN_TakeFrame@message+1,w,c
  2537  000194  22DA               	addwfc	fsr2h,f,c
  2538  000196  5065               	movf	3941,w,c	;volatile
  2539  000198  0B0F               	andlw	15
  2540  00019A  6EDF               	movwf	indf2,c
  2541                           
  2542                           ;CAN.c: 300:             if(message->data_length > 8)
  2543  00019C  EE20 F010          	lfsr	2,16
  2544  0001A0  500E               	movf	CAN_TakeFrame@message,w,c
  2545  0001A2  26D9               	addwf	fsr2l,f,c
  2546  0001A4  500F               	movf	CAN_TakeFrame@message+1,w,c
  2547  0001A6  22DA               	addwfc	fsr2h,f,c
  2548  0001A8  0E08               	movlw	8
  2549  0001AA  64DF               	cpfsgt	indf2,c
  2550  0001AC  D041               	goto	l2416
  2551  0001AE  D01E               	goto	l2410
  2552  0001B0                     l2392:
  2553                           
  2554                           ;CAN.c: 306:                         RXB0CON = 0;
  2555  0001B0  0E00               	movlw	0
  2556  0001B2  6E60               	movwf	3936,c	;volatile
  2557                           
  2558                           ;CAN.c: 307:                         break;
  2559  0001B4  D03B               	goto	l2412
  2560  0001B6                     l2394:
  2561                           
  2562                           ;CAN.c: 309:                         RXB1CON = 0;
  2563  0001B6  0E00               	movlw	0
  2564  0001B8  010F               	movlb	15	; () banked
  2565  0001BA  D00E               	goto	L1
  2566  0001BC                     l2396:
  2567                           
  2568                           ;CAN.c: 312:                         B0CON = 0;
  2569  0001BC  0E00               	movlw	0
  2570  0001BE  010E               	movlb	14	; () banked
  2571  0001C0  6F20               	movwf	32,b	;volatile
  2572                           
  2573                           ;CAN.c: 313:                         break;
  2574  0001C2  D034               	goto	l2412
  2575  0001C4                     l2398:
  2576                           
  2577                           ;CAN.c: 315:                         B1CON = 0;
  2578  0001C4  0E00               	movlw	0
  2579  0001C6  010E               	movlb	14	; () banked
  2580  0001C8  6F30               	movwf	48,b	;volatile
  2581                           
  2582                           ;CAN.c: 316:                         break;
  2583  0001CA  D030               	goto	l2412
  2584  0001CC                     l2400:
  2585                           
  2586                           ;CAN.c: 318:                         B2CON = 0;
  2587  0001CC  0E00               	movlw	0
  2588  0001CE  010E               	movlb	14	; () banked
  2589  0001D0  6F40               	movwf	64,b	;volatile
  2590                           
  2591                           ;CAN.c: 319:                         break;
  2592  0001D2  D02C               	goto	l2412
  2593  0001D4                     l2402:
  2594                           
  2595                           ;CAN.c: 321:                         B3CON = 0;
  2596  0001D4  0E00               	movlw	0
  2597  0001D6  010E               	movlb	14	; () banked
  2598  0001D8                     L1:
  2599  0001D8  6F50               	movwf	80,b	;volatile
  2600                           
  2601                           ;CAN.c: 322:                         break;
  2602  0001DA  D028               	goto	l2412
  2603  0001DC                     l2404:
  2604                           
  2605                           ;CAN.c: 324:                         B4CON = 0;
  2606  0001DC  0E00               	movlw	0
  2607  0001DE  010E               	movlb	14	; () banked
  2608  0001E0  6F60               	movwf	96,b	;volatile
  2609                           
  2610                           ;CAN.c: 325:                         break;
  2611  0001E2  D024               	goto	l2412
  2612  0001E4                     l2406:
  2613                           
  2614                           ;CAN.c: 327:                         B5CON = 0;
  2615  0001E4  0E00               	movlw	0
  2616  0001E6  010E               	movlb	14	; () banked
  2617  0001E8  6F70               	movwf	112,b	;volatile
  2618                           
  2619                           ;CAN.c: 328:                         break;
  2620  0001EA  D020               	goto	l2412
  2621  0001EC                     l2410:
  2622  0001EC  5013               	movf	CAN_TakeFrame@k,w,c
  2623  0001EE  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  2624  0001F0  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  2625                           
  2626                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2627                           ; Switch size 1, requested type "simple"
  2628                           ; Number of cases is 1, Range of values is 0 to 0
  2629                           ; switch strategies available:
  2630                           ; Name         Instructions Cycles
  2631                           ; simple_byte            4     3 (average)
  2632                           ;	Chosen strategy is simple_byte
  2633  0001F2  5011               	movf	??_CAN_TakeFrame+1,w,c
  2634  0001F4  0A00               	xorlw	0	; case 0
  2635  0001F6  A4D8               	btfss	status,2,c
  2636  0001F8  D019               	goto	l2412
  2637                           
  2638                           ; Switch size 1, requested type "simple"
  2639                           ; Number of cases is 8, Range of values is 0 to 7
  2640                           ; switch strategies available:
  2641                           ; Name         Instructions Cycles
  2642                           ; simple_byte           25    13 (average)
  2643                           ;	Chosen strategy is simple_byte
  2644  0001FA  5010               	movf	??_CAN_TakeFrame,w,c
  2645  0001FC  0A00               	xorlw	0	; case 0
  2646  0001FE  B4D8               	btfsc	status,2,c
  2647  000200  D7D7               	goto	l2392
  2648  000202  0A01               	xorlw	1	; case 1
  2649  000204  B4D8               	btfsc	status,2,c
  2650  000206  D7D7               	goto	l2394
  2651  000208  0A03               	xorlw	3	; case 2
  2652  00020A  B4D8               	btfsc	status,2,c
  2653  00020C  D7D7               	goto	l2396
  2654  00020E  0A01               	xorlw	1	; case 3
  2655  000210  B4D8               	btfsc	status,2,c
  2656  000212  D7D8               	goto	l2398
  2657  000214  0A07               	xorlw	7	; case 4
  2658  000216  B4D8               	btfsc	status,2,c
  2659  000218  D7D9               	goto	l2400
  2660  00021A  0A01               	xorlw	1	; case 5
  2661  00021C  B4D8               	btfsc	status,2,c
  2662  00021E  D7DA               	goto	l2402
  2663  000220  0A03               	xorlw	3	; case 6
  2664  000222  B4D8               	btfsc	status,2,c
  2665  000224  D7DB               	goto	l2404
  2666  000226  0A01               	xorlw	1	; case 7
  2667  000228  B4D8               	btfsc	status,2,c
  2668  00022A  D7DC               	goto	l2406
  2669  00022C                     l2412:
  2670                           
  2671                           ;CAN.c: 330:                 return FALSE;
  2672  00022C  0E00               	movlw	0
  2673  00022E  0012               	return	
  2674  000230                     l2416:
  2675                           
  2676                           ;CAN.c: 332:             CAN_MoveBuffIntoFrame(message->data, &RXB0D0);
  2677  000230  0E08               	movlw	8
  2678  000232  240E               	addwf	CAN_TakeFrame@message,w,c
  2679  000234  6E06               	movwf	CAN_MoveBuffIntoFrame@Ram,c
  2680  000236  0E00               	movlw	0
  2681  000238  200F               	addwfc	CAN_TakeFrame@message+1,w,c
  2682  00023A  6E07               	movwf	CAN_MoveBuffIntoFrame@Ram+1,c
  2683  00023C  0E66               	movlw	102
  2684  00023E  6E08               	movwf	CAN_MoveBuffIntoFrame@Buf,c
  2685  000240  0E0F               	movlw	15
  2686  000242  6E09               	movwf	CAN_MoveBuffIntoFrame@Buf+1,c
  2687  000244  EC1F  F007         	call	_CAN_MoveBuffIntoFrame	;wreg free
  2688                           
  2689                           ;CAN.c: 333:         }
  2690  000248  D027               	goto	l2438
  2691  00024A                     l2418:
  2692                           
  2693                           ;CAN.c: 336:         {;CAN.c: 337:             message->message_type=0x02;
  2694  00024A  EE20 F001          	lfsr	2,1
  2695  00024E  500E               	movf	CAN_TakeFrame@message,w,c
  2696  000250  26D9               	addwf	fsr2l,f,c
  2697  000252  500F               	movf	CAN_TakeFrame@message+1,w,c
  2698  000254  22DA               	addwfc	fsr2h,f,c
  2699  000256  0E02               	movlw	2
  2700  000258  6EDF               	movwf	indf2,c
  2701  00025A  D01E               	goto	l2438
  2702  00025C                     l2420:
  2703                           
  2704                           ;CAN.c: 343:                 RXB0CON = 0;
  2705  00025C  0E00               	movlw	0
  2706  00025E  6E60               	movwf	3936,c	;volatile
  2707                           
  2708                           ;CAN.c: 344:                 break;
  2709  000260  D03B               	goto	l2440
  2710  000262                     l2422:
  2711                           
  2712                           ;CAN.c: 346:                 RXB1CON = 0;
  2713  000262  0E00               	movlw	0
  2714  000264  010F               	movlb	15	; () banked
  2715  000266  D00E               	goto	L2
  2716  000268                     l2424:
  2717                           
  2718                           ;CAN.c: 349:                 B0CON = 0;
  2719  000268  0E00               	movlw	0
  2720  00026A  010E               	movlb	14	; () banked
  2721  00026C  6F20               	movwf	32,b	;volatile
  2722                           
  2723                           ;CAN.c: 350:                 break;
  2724  00026E  D034               	goto	l2440
  2725  000270                     l2426:
  2726                           
  2727                           ;CAN.c: 352:                 B1CON = 0;
  2728  000270  0E00               	movlw	0
  2729  000272  010E               	movlb	14	; () banked
  2730  000274  6F30               	movwf	48,b	;volatile
  2731                           
  2732                           ;CAN.c: 353:                 break;
  2733  000276  D030               	goto	l2440
  2734  000278                     l2428:
  2735                           
  2736                           ;CAN.c: 355:                 B2CON = 0;
  2737  000278  0E00               	movlw	0
  2738  00027A  010E               	movlb	14	; () banked
  2739  00027C  6F40               	movwf	64,b	;volatile
  2740                           
  2741                           ;CAN.c: 356:                 break;
  2742  00027E  D02C               	goto	l2440
  2743  000280                     l2430:
  2744                           
  2745                           ;CAN.c: 358:                 B3CON = 0;
  2746  000280  0E00               	movlw	0
  2747  000282  010E               	movlb	14	; () banked
  2748  000284                     L2:
  2749  000284  6F50               	movwf	80,b	;volatile
  2750                           
  2751                           ;CAN.c: 359:                 break;
  2752  000286  D028               	goto	l2440
  2753  000288                     l2432:
  2754                           
  2755                           ;CAN.c: 361:                 B4CON = 0;
  2756  000288  0E00               	movlw	0
  2757  00028A  010E               	movlb	14	; () banked
  2758  00028C  6F60               	movwf	96,b	;volatile
  2759                           
  2760                           ;CAN.c: 362:                 break;
  2761  00028E  D024               	goto	l2440
  2762  000290                     l2434:
  2763                           
  2764                           ;CAN.c: 364:                 B5CON = 0;
  2765  000290  0E00               	movlw	0
  2766  000292  010E               	movlb	14	; () banked
  2767  000294  6F70               	movwf	112,b	;volatile
  2768                           
  2769                           ;CAN.c: 365:                 break;
  2770  000296  D020               	goto	l2440
  2771  000298                     l2438:
  2772  000298  5013               	movf	CAN_TakeFrame@k,w,c
  2773  00029A  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  2774  00029C  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  2775                           
  2776                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2777                           ; Switch size 1, requested type "simple"
  2778                           ; Number of cases is 1, Range of values is 0 to 0
  2779                           ; switch strategies available:
  2780                           ; Name         Instructions Cycles
  2781                           ; simple_byte            4     3 (average)
  2782                           ;	Chosen strategy is simple_byte
  2783  00029E  5011               	movf	??_CAN_TakeFrame+1,w,c
  2784  0002A0  0A00               	xorlw	0	; case 0
  2785  0002A2  A4D8               	btfss	status,2,c
  2786  0002A4  D019               	goto	l2440
  2787                           
  2788                           ; Switch size 1, requested type "simple"
  2789                           ; Number of cases is 8, Range of values is 0 to 7
  2790                           ; switch strategies available:
  2791                           ; Name         Instructions Cycles
  2792                           ; simple_byte           25    13 (average)
  2793                           ;	Chosen strategy is simple_byte
  2794  0002A6  5010               	movf	??_CAN_TakeFrame,w,c
  2795  0002A8  0A00               	xorlw	0	; case 0
  2796  0002AA  B4D8               	btfsc	status,2,c
  2797  0002AC  D7D7               	goto	l2420
  2798  0002AE  0A01               	xorlw	1	; case 1
  2799  0002B0  B4D8               	btfsc	status,2,c
  2800  0002B2  D7D7               	goto	l2422
  2801  0002B4  0A03               	xorlw	3	; case 2
  2802  0002B6  B4D8               	btfsc	status,2,c
  2803  0002B8  D7D7               	goto	l2424
  2804  0002BA  0A01               	xorlw	1	; case 3
  2805  0002BC  B4D8               	btfsc	status,2,c
  2806  0002BE  D7D8               	goto	l2426
  2807  0002C0  0A07               	xorlw	7	; case 4
  2808  0002C2  B4D8               	btfsc	status,2,c
  2809  0002C4  D7D9               	goto	l2428
  2810  0002C6  0A01               	xorlw	1	; case 5
  2811  0002C8  B4D8               	btfsc	status,2,c
  2812  0002CA  D7DA               	goto	l2430
  2813  0002CC  0A03               	xorlw	3	; case 6
  2814  0002CE  B4D8               	btfsc	status,2,c
  2815  0002D0  D7DB               	goto	l2432
  2816  0002D2  0A01               	xorlw	1	; case 7
  2817  0002D4  B4D8               	btfsc	status,2,c
  2818  0002D6  D7DC               	goto	l2434
  2819  0002D8                     l2440:
  2820                           
  2821                           ;CAN.c: 367:         return TRUE;
  2822  0002D8  0E01               	movlw	1
  2823  0002DA  0012               	return		;funcret
  2824  0002DC                     __end_of_CAN_TakeFrame:
  2825                           	opt callstack 0
  2826                           
  2827 ;; *************** function ___awdiv *****************
  2828 ;; Defined at:
  2829 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  2830 ;; Parameters:    Size  Location     Type
  2831 ;;  dividend        2    5[COMRAM] int 
  2832 ;;  divisor         2    7[COMRAM] int 
  2833 ;; Auto vars:     Size  Location     Type
  2834 ;;  quotient        2   11[COMRAM] int 
  2835 ;;  sign            1   10[COMRAM] unsigned char 
  2836 ;;  counter         1    9[COMRAM] unsigned char 
  2837 ;; Return value:  Size  Location     Type
  2838 ;;                  2    5[COMRAM] int 
  2839 ;; Registers used:
  2840 ;;		wreg, status,2, status,0
  2841 ;; Tracked objects:
  2842 ;;		On entry : 0/0
  2843 ;;		On exit  : 0/0
  2844 ;;		Unchanged: 0/0
  2845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2846 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2847 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2849 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2850 ;;Total ram usage:        8 bytes
  2851 ;; Hardware stack levels used:    1
  2852 ;; Hardware stack levels required when called:    3
  2853 ;; This function calls:
  2854 ;;		Nothing
  2855 ;; This function is called by:
  2856 ;;		_CAN_TakeFrame
  2857 ;;		_FRAME_HandleCanFrame
  2858 ;; This function uses a non-reentrant model
  2859 ;;
  2860                           
  2861                           	psect	text19
  2862  0008C6                     __ptext19:
  2863                           	opt callstack 0
  2864  0008C6                     ___awdiv:
  2865                           	opt callstack 25
  2866                           
  2867                           ;incstack = 0
  2868  0008C6  0E00               	movlw	0
  2869  0008C8  6E0B               	movwf	___awdiv@sign,c
  2870  0008CA  AE09               	btfss	___awdiv@divisor+1,7,c
  2871  0008CC  D006               	goto	l2296
  2872  0008CE  6C08               	negf	___awdiv@divisor,c
  2873  0008D0  1E09               	comf	___awdiv@divisor+1,f,c
  2874  0008D2  B0D8               	btfsc	status,0,c
  2875  0008D4  2A09               	incf	___awdiv@divisor+1,f,c
  2876  0008D6  0E01               	movlw	1
  2877  0008D8  6E0B               	movwf	___awdiv@sign,c
  2878  0008DA                     l2296:
  2879  0008DA  AE07               	btfss	___awdiv@dividend+1,7,c
  2880  0008DC  D006               	goto	l2302
  2881  0008DE  6C06               	negf	___awdiv@dividend,c
  2882  0008E0  1E07               	comf	___awdiv@dividend+1,f,c
  2883  0008E2  B0D8               	btfsc	status,0,c
  2884  0008E4  2A07               	incf	___awdiv@dividend+1,f,c
  2885  0008E6  0E01               	movlw	1
  2886  0008E8  1A0B               	xorwf	___awdiv@sign,f,c
  2887  0008EA                     l2302:
  2888  0008EA  0E00               	movlw	0
  2889  0008EC  6E0D               	movwf	___awdiv@quotient+1,c
  2890  0008EE  0E00               	movlw	0
  2891  0008F0  6E0C               	movwf	___awdiv@quotient,c
  2892  0008F2  5008               	movf	___awdiv@divisor,w,c
  2893  0008F4  1009               	iorwf	___awdiv@divisor+1,w,c
  2894  0008F6  B4D8               	btfsc	status,2,c
  2895  0008F8  D01C               	goto	l2324
  2896  0008FA  0E01               	movlw	1
  2897  0008FC  6E0A               	movwf	___awdiv@counter,c
  2898  0008FE  D004               	goto	l2310
  2899  000900                     l2308:
  2900  000900  90D8               	bcf	status,0,c
  2901  000902  3608               	rlcf	___awdiv@divisor,f,c
  2902  000904  3609               	rlcf	___awdiv@divisor+1,f,c
  2903  000906  2A0A               	incf	___awdiv@counter,f,c
  2904  000908                     l2310:
  2905  000908  AE09               	btfss	___awdiv@divisor+1,7,c
  2906  00090A  D7FA               	goto	l2308
  2907  00090C                     u1110:
  2908  00090C  90D8               	bcf	status,0,c
  2909  00090E  360C               	rlcf	___awdiv@quotient,f,c
  2910  000910  360D               	rlcf	___awdiv@quotient+1,f,c
  2911  000912  5008               	movf	___awdiv@divisor,w,c
  2912  000914  5C06               	subwf	___awdiv@dividend,w,c
  2913  000916  5009               	movf	___awdiv@divisor+1,w,c
  2914  000918  5807               	subwfb	___awdiv@dividend+1,w,c
  2915  00091A  A0D8               	btfss	status,0,c
  2916  00091C  D005               	goto	l2320
  2917  00091E  5008               	movf	___awdiv@divisor,w,c
  2918  000920  5E06               	subwf	___awdiv@dividend,f,c
  2919  000922  5009               	movf	___awdiv@divisor+1,w,c
  2920  000924  5A07               	subwfb	___awdiv@dividend+1,f,c
  2921  000926  800C               	bsf	___awdiv@quotient,0,c
  2922  000928                     l2320:
  2923  000928  90D8               	bcf	status,0,c
  2924  00092A  3209               	rrcf	___awdiv@divisor+1,f,c
  2925  00092C  3208               	rrcf	___awdiv@divisor,f,c
  2926  00092E  2E0A               	decfsz	___awdiv@counter,f,c
  2927  000930  D7ED               	goto	u1110
  2928  000932                     l2324:
  2929  000932  500B               	movf	___awdiv@sign,w,c
  2930  000934  B4D8               	btfsc	status,2,c
  2931  000936  D004               	goto	l2328
  2932  000938  6C0C               	negf	___awdiv@quotient,c
  2933  00093A  1E0D               	comf	___awdiv@quotient+1,f,c
  2934  00093C  B0D8               	btfsc	status,0,c
  2935  00093E  2A0D               	incf	___awdiv@quotient+1,f,c
  2936  000940                     l2328:
  2937  000940  C00C  F006         	movff	___awdiv@quotient,?___awdiv
  2938  000944  C00D  F007         	movff	___awdiv@quotient+1,?___awdiv+1
  2939  000948  0012               	return		;funcret
  2940  00094A                     __end_of___awdiv:
  2941                           	opt callstack 0
  2942                           
  2943 ;; *************** function _CAN_MoveBuffIntoFrame *****************
  2944 ;; Defined at:
  2945 ;;		line 169 in file "CAN.c"
  2946 ;; Parameters:    Size  Location     Type
  2947 ;;  Ram             2    5[COMRAM] PTR unsigned char 
  2948 ;;		 -> TRM_DataTransmition@canMessage(17), RXB0D0(1), 
  2949 ;;  Buf             2    7[COMRAM] PTR unsigned char 
  2950 ;;		 -> TRM_DataTransmition@canMessage(17), RXB0D0(1), 
  2951 ;; Auto vars:     Size  Location     Type
  2952 ;;  i               1    9[COMRAM] unsigned char 
  2953 ;; Return value:  Size  Location     Type
  2954 ;;                  1    wreg      void 
  2955 ;; Registers used:
  2956 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2957 ;; Tracked objects:
  2958 ;;		On entry : 0/0
  2959 ;;		On exit  : 0/0
  2960 ;;		Unchanged: 0/0
  2961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2962 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2963 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2965 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2966 ;;Total ram usage:        5 bytes
  2967 ;; Hardware stack levels used:    1
  2968 ;; Hardware stack levels required when called:    3
  2969 ;; This function calls:
  2970 ;;		Nothing
  2971 ;; This function is called by:
  2972 ;;		_CAN_SendFrame
  2973 ;;		_CAN_TakeFrame
  2974 ;; This function uses a non-reentrant model
  2975 ;;
  2976                           
  2977                           	psect	text20
  2978  000E3E                     __ptext20:
  2979                           	opt callstack 0
  2980  000E3E                     _CAN_MoveBuffIntoFrame:
  2981                           	opt callstack 24
  2982                           
  2983                           ;CAN.c: 169: static void CAN_MoveBuffIntoFrame(BYTE* Ram, BYTE* Buf);CAN.c: 170: {;CAN.c
      +                          : 171:     BYTE i;;CAN.c: 172:     for(i=0; i<8; ++i)
  2984                           
  2985                           ;incstack = 0
  2986  000E3E  0E00               	movlw	0
  2987  000E40  6E0A               	movwf	CAN_MoveBuffIntoFrame@i,c
  2988  000E42                     l1992:
  2989                           
  2990                           ;CAN.c: 173:     {;CAN.c: 174:         Ram[i]=(*(Buf+i));
  2991  000E42  500A               	movf	CAN_MoveBuffIntoFrame@i,w,c
  2992  000E44  2408               	addwf	CAN_MoveBuffIntoFrame@Buf,w,c
  2993  000E46  6ED9               	movwf	fsr2l,c
  2994  000E48  0E00               	movlw	0
  2995  000E4A  2009               	addwfc	CAN_MoveBuffIntoFrame@Buf+1,w,c
  2996  000E4C  6EDA               	movwf	fsr2h,c
  2997  000E4E  500A               	movf	CAN_MoveBuffIntoFrame@i,w,c
  2998  000E50  2406               	addwf	CAN_MoveBuffIntoFrame@Ram,w,c
  2999  000E52  6EE1               	movwf	fsr1l,c
  3000  000E54  0E00               	movlw	0
  3001  000E56  2007               	addwfc	CAN_MoveBuffIntoFrame@Ram+1,w,c
  3002  000E58  6EE2               	movwf	fsr1h,c
  3003  000E5A  CFDF FFE7          	movff	indf2,indf1
  3004                           
  3005                           ;CAN.c: 175:     }
  3006  000E5E  2A0A               	incf	CAN_MoveBuffIntoFrame@i,f,c
  3007  000E60  0E07               	movlw	7
  3008  000E62  640A               	cpfsgt	CAN_MoveBuffIntoFrame@i,c
  3009  000E64  D7EE               	goto	l1992
  3010  000E66  0012               	return	
  3011  000E68                     __end_of_CAN_MoveBuffIntoFrame:
  3012                           	opt callstack 0
  3013                           
  3014 ;; *************** function _TMR1_Update_flag_Set *****************
  3015 ;; Defined at:
  3016 ;;		line 32 in file "TMR1.c"
  3017 ;; Parameters:    Size  Location     Type
  3018 ;;  a               2    5[COMRAM] unsigned int 
  3019 ;; Auto vars:     Size  Location     Type
  3020 ;;		None
  3021 ;; Return value:  Size  Location     Type
  3022 ;;                  1    wreg      void 
  3023 ;; Registers used:
  3024 ;;		None
  3025 ;; Tracked objects:
  3026 ;;		On entry : 0/0
  3027 ;;		On exit  : 0/0
  3028 ;;		Unchanged: 0/0
  3029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3030 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3033 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3034 ;;Total ram usage:        2 bytes
  3035 ;; Hardware stack levels used:    1
  3036 ;; Hardware stack levels required when called:    3
  3037 ;; This function calls:
  3038 ;;		Nothing
  3039 ;; This function is called by:
  3040 ;;		_main
  3041 ;; This function uses a non-reentrant model
  3042 ;;
  3043                           
  3044                           	psect	text21
  3045  000F52                     __ptext21:
  3046                           	opt callstack 0
  3047  000F52                     _TMR1_Update_flag_Set:
  3048                           	opt callstack 27
  3049                           
  3050                           ;TMR1.c: 32: void TMR1_Update_flag_Set(UINT a);TMR1.c: 33: {;TMR1.c: 34:     TMR1_Update
      +                          _flag = a;
  3051                           
  3052                           ;incstack = 0
  3053  000F52  C006  F03B         	movff	TMR1_Update_flag_Set@a,_TMR1_Update_flag
  3054  000F56  C007  F03C         	movff	TMR1_Update_flag_Set@a+1,_TMR1_Update_flag+1
  3055  000F5A  0012               	return		;funcret
  3056  000F5C                     __end_of_TMR1_Update_flag_Set:
  3057                           	opt callstack 0
  3058                           
  3059 ;; *************** function _TMR1_Update_flag_Get *****************
  3060 ;; Defined at:
  3061 ;;		line 47 in file "TMR1.c"
  3062 ;; Parameters:    Size  Location     Type
  3063 ;;		None
  3064 ;; Auto vars:     Size  Location     Type
  3065 ;;		None
  3066 ;; Return value:  Size  Location     Type
  3067 ;;                  2    5[COMRAM] unsigned int 
  3068 ;; Registers used:
  3069 ;;		None
  3070 ;; Tracked objects:
  3071 ;;		On entry : 0/0
  3072 ;;		On exit  : 0/0
  3073 ;;		Unchanged: 0/0
  3074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3075 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3078 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3079 ;;Total ram usage:        2 bytes
  3080 ;; Hardware stack levels used:    1
  3081 ;; Hardware stack levels required when called:    3
  3082 ;; This function calls:
  3083 ;;		Nothing
  3084 ;; This function is called by:
  3085 ;;		_main
  3086 ;; This function uses a non-reentrant model
  3087 ;;
  3088                           
  3089                           	psect	text22
  3090  000F5C                     __ptext22:
  3091                           	opt callstack 0
  3092  000F5C                     _TMR1_Update_flag_Get:
  3093                           	opt callstack 27
  3094                           
  3095                           ;TMR1.c: 49:     return TMR1_Update_flag;
  3096                           
  3097                           ;incstack = 0
  3098  000F5C  C03B  F006         	movff	_TMR1_Update_flag,?_TMR1_Update_flag_Get
  3099  000F60  C03C  F007         	movff	_TMR1_Update_flag+1,?_TMR1_Update_flag_Get+1
  3100  000F64  0012               	return		;funcret
  3101  000F66                     __end_of_TMR1_Update_flag_Get:
  3102                           	opt callstack 0
  3103                           
  3104 ;; *************** function _LED_Update *****************
  3105 ;; Defined at:
  3106 ;;		line 81 in file "LED.c"
  3107 ;; Parameters:    Size  Location     Type
  3108 ;;		None
  3109 ;; Auto vars:     Size  Location     Type
  3110 ;;		None
  3111 ;; Return value:  Size  Location     Type
  3112 ;;                  1    wreg      unsigned char 
  3113 ;; Registers used:
  3114 ;;		wreg, status,2, status,0, cstack
  3115 ;; Tracked objects:
  3116 ;;		On entry : 0/0
  3117 ;;		On exit  : 0/0
  3118 ;;		Unchanged: 0/0
  3119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3123 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3124 ;;Total ram usage:        0 bytes
  3125 ;; Hardware stack levels used:    1
  3126 ;; Hardware stack levels required when called:    5
  3127 ;; This function calls:
  3128 ;;		_LED_Left
  3129 ;;		_LED_Light_Pos
  3130 ;;		_LED_Right
  3131 ;; This function is called by:
  3132 ;;		_main
  3133 ;; This function uses a non-reentrant model
  3134 ;;
  3135                           
  3136                           	psect	text23
  3137  000B3A                     __ptext23:
  3138                           	opt callstack 0
  3139  000B3A                     _LED_Update:
  3140                           	opt callstack 25
  3141                           
  3142                           ;LED.c: 83:     static LED_RGA_type Red = RED;;LED.c: 84:     static LED_RGA_type Green 
      +                          = GREEN;;LED.c: 85:     static UINT pos1 = 0b0000000001;;LED.c: 86:     static UINT pos2
      +                           = 0b0000000001;;LED.c: 89:     LED_Light_Pos(Green,pos2,Fulfillment_Lvl);
  3143                           
  3144                           ;incstack = 0
  3145  000B3A  C043  F00D         	movff	LED_Update@pos2,LED_Light_Pos@pos
  3146  000B3E  C044  F00E         	movff	LED_Update@pos2+1,LED_Light_Pos@pos+1
  3147  000B42  C047  F00F         	movff	_Fulfillment_Lvl,LED_Light_Pos@fulfillment
  3148  000B46  C048  F010         	movff	_Fulfillment_Lvl+1,LED_Light_Pos@fulfillment+1
  3149  000B4A  5049               	movf	LED_Update@Green,w,c
  3150  000B4C  ECB8  F003         	call	_LED_Light_Pos
  3151                           
  3152                           ;LED.c: 90:     LED_Light_Pos(RED,pos1,Fulfillment_Lvl);
  3153  000B50  C045  F00D         	movff	LED_Update@pos1,LED_Light_Pos@pos
  3154  000B54  C046  F00E         	movff	LED_Update@pos1+1,LED_Light_Pos@pos+1
  3155  000B58  C047  F00F         	movff	_Fulfillment_Lvl,LED_Light_Pos@fulfillment
  3156  000B5C  C048  F010         	movff	_Fulfillment_Lvl+1,LED_Light_Pos@fulfillment+1
  3157  000B60  0E00               	movlw	0
  3158  000B62  ECB8  F003         	call	_LED_Light_Pos
  3159                           
  3160                           ;LED.c: 91:     pos1 = LED_Right(pos1);
  3161  000B66  C045  F006         	movff	LED_Update@pos1,LED_Right@a
  3162  000B6A  C046  F007         	movff	LED_Update@pos1+1,LED_Right@a+1
  3163  000B6E  EC18  F006         	call	_LED_Right	;wreg free
  3164  000B72  C006  F045         	movff	?_LED_Right,LED_Update@pos1
  3165  000B76  C007  F046         	movff	?_LED_Right+1,LED_Update@pos1+1
  3166                           
  3167                           ;LED.c: 92:     pos2 = LED_Left(pos2);
  3168  000B7A  C043  F006         	movff	LED_Update@pos2,LED_Left@a
  3169  000B7E  C044  F007         	movff	LED_Update@pos2+1,LED_Left@a+1
  3170  000B82  EC61  F006         	call	_LED_Left	;wreg free
  3171  000B86  C006  F043         	movff	?_LED_Left,LED_Update@pos2
  3172  000B8A  C007  F044         	movff	?_LED_Left+1,LED_Update@pos2+1
  3173  000B8E  0012               	return		;funcret
  3174  000B90                     __end_of_LED_Update:
  3175                           	opt callstack 0
  3176                           
  3177 ;; *************** function _LED_Light_Pos *****************
  3178 ;; Defined at:
  3179 ;;		line 164 in file "LED.c"
  3180 ;; Parameters:    Size  Location     Type
  3181 ;;  color           1    wreg     enum E10640
  3182 ;;  pos             2   12[COMRAM] unsigned int 
  3183 ;;  fulfillment     2   14[COMRAM] unsigned int 
  3184 ;; Auto vars:     Size  Location     Type
  3185 ;;  color           1   16[COMRAM] enum E10640
  3186 ;;  flage           2   21[COMRAM] unsigned int 
  3187 ;;  pos2            2   19[COMRAM] unsigned int 
  3188 ;;  LED_array       2   17[COMRAM] unsigned int 
  3189 ;; Return value:  Size  Location     Type
  3190 ;;                  2   12[COMRAM] unsigned int 
  3191 ;; Registers used:
  3192 ;;		wreg, status,2, status,0, cstack
  3193 ;; Tracked objects:
  3194 ;;		On entry : 0/0
  3195 ;;		On exit  : 0/0
  3196 ;;		Unchanged: 0/0
  3197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3198 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3199 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3201 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3202 ;;Total ram usage:       11 bytes
  3203 ;; Hardware stack levels used:    1
  3204 ;; Hardware stack levels required when called:    4
  3205 ;; This function calls:
  3206 ;;		_LED_Control
  3207 ;;		_LED_Left
  3208 ;;		_LED_Right
  3209 ;;		___lwdiv
  3210 ;; This function is called by:
  3211 ;;		_LED_Update
  3212 ;; This function uses a non-reentrant model
  3213 ;;
  3214                           
  3215                           	psect	text24
  3216  000770                     __ptext24:
  3217                           	opt callstack 0
  3218  000770                     _LED_Light_Pos:
  3219                           	opt callstack 25
  3220                           
  3221                           ;incstack = 0
  3222                           ;LED_Light_Pos@color stored from wreg
  3223  000770  6E11               	movwf	LED_Light_Pos@color,c
  3224                           
  3225                           ;LED.c: 164: UINT LED_Light_Pos(LED_RGA_type color,UINT pos, UINT fulfillment);LED.c: 16
      +                          5: {;LED.c: 166:     UINT pos2 =pos;
  3226  000772  C00D  F014         	movff	LED_Light_Pos@pos,LED_Light_Pos@pos2
  3227  000776  C00E  F015         	movff	LED_Light_Pos@pos+1,LED_Light_Pos@pos2+1
  3228                           
  3229                           ;LED.c: 167:     UINT LED_array = 0b0000000000;
  3230  00077A  0E00               	movlw	0
  3231  00077C  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  3232  00077E  0E00               	movlw	0
  3233  000780  6E12               	movwf	LED_Light_Pos@LED_array,c
  3234                           
  3235                           ;LED.c: 168:     UINT flage = fulfillment/10;
  3236  000782  C00F  F006         	movff	LED_Light_Pos@fulfillment,___lwdiv@dividend
  3237  000786  C010  F007         	movff	LED_Light_Pos@fulfillment+1,___lwdiv@dividend+1
  3238  00078A  0E00               	movlw	0
  3239  00078C  6E09               	movwf	___lwdiv@divisor+1,c
  3240  00078E  0E0A               	movlw	10
  3241  000790  6E08               	movwf	___lwdiv@divisor,c
  3242  000792  ECC8  F005         	call	___lwdiv	;wreg free
  3243  000796  C006  F016         	movff	?___lwdiv,LED_Light_Pos@flage
  3244  00079A  C007  F017         	movff	?___lwdiv+1,LED_Light_Pos@flage+1
  3245                           
  3246                           ;LED.c: 169:     if(color == RED)
  3247  00079E  5011               	movf	LED_Light_Pos@color,w,c
  3248  0007A0  B4D8               	btfsc	status,2,c
  3249  0007A2  D017               	goto	l2478
  3250  0007A4  D031               	goto	l2486
  3251  0007A6                     l2472:
  3252                           
  3253                           ;LED.c: 172:         {;LED.c: 173:             LED_array = pos2|LED_array;
  3254  0007A6  5012               	movf	LED_Light_Pos@LED_array,w,c
  3255  0007A8  1014               	iorwf	LED_Light_Pos@pos2,w,c
  3256  0007AA  6E12               	movwf	LED_Light_Pos@LED_array,c
  3257  0007AC  5013               	movf	LED_Light_Pos@LED_array+1,w,c
  3258  0007AE  1015               	iorwf	LED_Light_Pos@pos2+1,w,c
  3259  0007B0  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  3260                           
  3261                           ;LED.c: 174:             pos2 = LED_Left(pos2);
  3262  0007B2  C014  F006         	movff	LED_Light_Pos@pos2,LED_Left@a
  3263  0007B6  C015  F007         	movff	LED_Light_Pos@pos2+1,LED_Left@a+1
  3264  0007BA  EC61  F006         	call	_LED_Left	;wreg free
  3265  0007BE  C006  F014         	movff	?_LED_Left,LED_Light_Pos@pos2
  3266  0007C2  C007  F015         	movff	?_LED_Left+1,LED_Light_Pos@pos2+1
  3267                           
  3268                           ;LED.c: 175:             flage = flage - 1;
  3269  0007C6  0EFF               	movlw	255
  3270  0007C8  2416               	addwf	LED_Light_Pos@flage,w,c
  3271  0007CA  6E16               	movwf	LED_Light_Pos@flage,c
  3272  0007CC  0EFF               	movlw	255
  3273  0007CE  2017               	addwfc	LED_Light_Pos@flage+1,w,c
  3274  0007D0  6E17               	movwf	LED_Light_Pos@flage+1,c
  3275  0007D2                     l2478:
  3276                           
  3277                           ;LED.c: 171:         while(flage>0)
  3278  0007D2  5016               	movf	LED_Light_Pos@flage,w,c
  3279  0007D4  1017               	iorwf	LED_Light_Pos@flage+1,w,c
  3280  0007D6  B4D8               	btfsc	status,2,c
  3281  0007D8  D01B               	goto	u1250
  3282  0007DA  D7E5               	goto	l2472
  3283  0007DC                     l2480:
  3284                           
  3285                           ;LED.c: 181:         {;LED.c: 182:             LED_array = pos2|LED_array;
  3286  0007DC  5012               	movf	LED_Light_Pos@LED_array,w,c
  3287  0007DE  1014               	iorwf	LED_Light_Pos@pos2,w,c
  3288  0007E0  6E12               	movwf	LED_Light_Pos@LED_array,c
  3289  0007E2  5013               	movf	LED_Light_Pos@LED_array+1,w,c
  3290  0007E4  1015               	iorwf	LED_Light_Pos@pos2+1,w,c
  3291  0007E6  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  3292                           
  3293                           ;LED.c: 183:             pos2 = LED_Right(pos2);
  3294  0007E8  C014  F006         	movff	LED_Light_Pos@pos2,LED_Right@a
  3295  0007EC  C015  F007         	movff	LED_Light_Pos@pos2+1,LED_Right@a+1
  3296  0007F0  EC18  F006         	call	_LED_Right	;wreg free
  3297  0007F4  C006  F014         	movff	?_LED_Right,LED_Light_Pos@pos2
  3298  0007F8  C007  F015         	movff	?_LED_Right+1,LED_Light_Pos@pos2+1
  3299                           
  3300                           ;LED.c: 184:             flage = flage - 1;
  3301  0007FC  0EFF               	movlw	255
  3302  0007FE  2416               	addwf	LED_Light_Pos@flage,w,c
  3303  000800  6E16               	movwf	LED_Light_Pos@flage,c
  3304  000802  0EFF               	movlw	255
  3305  000804  2017               	addwfc	LED_Light_Pos@flage+1,w,c
  3306  000806  6E17               	movwf	LED_Light_Pos@flage+1,c
  3307  000808                     l2486:
  3308                           
  3309                           ;LED.c: 180:         while(flage>0)
  3310  000808  5016               	movf	LED_Light_Pos@flage,w,c
  3311  00080A  1017               	iorwf	LED_Light_Pos@flage+1,w,c
  3312  00080C  A4D8               	btfss	status,2,c
  3313  00080E  D7E6               	goto	l2480
  3314  000810                     u1250:
  3315                           
  3316                           ;LED.c: 187:     LED_Control(color, LED_array);
  3317  000810  C012  F006         	movff	LED_Light_Pos@LED_array,LED_Control@diode
  3318  000814  C013  F007         	movff	LED_Light_Pos@LED_array+1,LED_Control@diode+1
  3319  000818  5011               	movf	LED_Light_Pos@color,w,c
  3320  00081A  EC0F  F003         	call	_LED_Control
  3321  00081E  0012               	return		;funcret
  3322  000820                     __end_of_LED_Light_Pos:
  3323                           	opt callstack 0
  3324                           
  3325 ;; *************** function ___lwdiv *****************
  3326 ;; Defined at:
  3327 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwdiv.c"
  3328 ;; Parameters:    Size  Location     Type
  3329 ;;  dividend        2    5[COMRAM] unsigned int 
  3330 ;;  divisor         2    7[COMRAM] unsigned int 
  3331 ;; Auto vars:     Size  Location     Type
  3332 ;;  quotient        2    9[COMRAM] unsigned int 
  3333 ;;  counter         1   11[COMRAM] unsigned char 
  3334 ;; Return value:  Size  Location     Type
  3335 ;;                  2    5[COMRAM] unsigned int 
  3336 ;; Registers used:
  3337 ;;		wreg, status,2, status,0
  3338 ;; Tracked objects:
  3339 ;;		On entry : 0/0
  3340 ;;		On exit  : 0/0
  3341 ;;		Unchanged: 0/0
  3342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3343 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3344 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3346 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3347 ;;Total ram usage:        7 bytes
  3348 ;; Hardware stack levels used:    1
  3349 ;; Hardware stack levels required when called:    3
  3350 ;; This function calls:
  3351 ;;		Nothing
  3352 ;; This function is called by:
  3353 ;;		_LED_Light_Pos
  3354 ;; This function uses a non-reentrant model
  3355 ;;
  3356                           
  3357                           	psect	text25
  3358  000B90                     __ptext25:
  3359                           	opt callstack 0
  3360  000B90                     ___lwdiv:
  3361                           	opt callstack 25
  3362                           
  3363                           ;incstack = 0
  3364  000B90  0E00               	movlw	0
  3365  000B92  6E0B               	movwf	___lwdiv@quotient+1,c
  3366  000B94  0E00               	movlw	0
  3367  000B96  6E0A               	movwf	___lwdiv@quotient,c
  3368  000B98  5008               	movf	___lwdiv@divisor,w,c
  3369  000B9A  1009               	iorwf	___lwdiv@divisor+1,w,c
  3370  000B9C  B4D8               	btfsc	status,2,c
  3371  000B9E  D01C               	goto	l1044
  3372  000BA0  0E01               	movlw	1
  3373  000BA2  6E0C               	movwf	___lwdiv@counter,c
  3374  000BA4  D004               	goto	l2340
  3375  000BA6                     l2338:
  3376  000BA6  90D8               	bcf	status,0,c
  3377  000BA8  3608               	rlcf	___lwdiv@divisor,f,c
  3378  000BAA  3609               	rlcf	___lwdiv@divisor+1,f,c
  3379  000BAC  2A0C               	incf	___lwdiv@counter,f,c
  3380  000BAE                     l2340:
  3381  000BAE  AE09               	btfss	___lwdiv@divisor+1,7,c
  3382  000BB0  D7FA               	goto	l2338
  3383  000BB2                     u1150:
  3384  000BB2  90D8               	bcf	status,0,c
  3385  000BB4  360A               	rlcf	___lwdiv@quotient,f,c
  3386  000BB6  360B               	rlcf	___lwdiv@quotient+1,f,c
  3387  000BB8  5008               	movf	___lwdiv@divisor,w,c
  3388  000BBA  5C06               	subwf	___lwdiv@dividend,w,c
  3389  000BBC  5009               	movf	___lwdiv@divisor+1,w,c
  3390  000BBE  5807               	subwfb	___lwdiv@dividend+1,w,c
  3391  000BC0  A0D8               	btfss	status,0,c
  3392  000BC2  D005               	goto	l2350
  3393  000BC4  5008               	movf	___lwdiv@divisor,w,c
  3394  000BC6  5E06               	subwf	___lwdiv@dividend,f,c
  3395  000BC8  5009               	movf	___lwdiv@divisor+1,w,c
  3396  000BCA  5A07               	subwfb	___lwdiv@dividend+1,f,c
  3397  000BCC  800A               	bsf	___lwdiv@quotient,0,c
  3398  000BCE                     l2350:
  3399  000BCE  90D8               	bcf	status,0,c
  3400  000BD0  3209               	rrcf	___lwdiv@divisor+1,f,c
  3401  000BD2  3208               	rrcf	___lwdiv@divisor,f,c
  3402  000BD4  2E0C               	decfsz	___lwdiv@counter,f,c
  3403  000BD6  D7ED               	goto	u1150
  3404  000BD8                     l1044:
  3405  000BD8  C00A  F006         	movff	___lwdiv@quotient,?___lwdiv
  3406  000BDC  C00B  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3407  000BE0  0012               	return		;funcret
  3408  000BE2                     __end_of___lwdiv:
  3409                           	opt callstack 0
  3410                           
  3411 ;; *************** function _LED_Right *****************
  3412 ;; Defined at:
  3413 ;;		line 108 in file "LED.c"
  3414 ;; Parameters:    Size  Location     Type
  3415 ;;  a               2    5[COMRAM] unsigned int 
  3416 ;; Auto vars:     Size  Location     Type
  3417 ;;  b               2    9[COMRAM] unsigned int 
  3418 ;; Return value:  Size  Location     Type
  3419 ;;                  2    5[COMRAM] unsigned int 
  3420 ;; Registers used:
  3421 ;;		wreg, status,2, status,0
  3422 ;; Tracked objects:
  3423 ;;		On entry : 0/0
  3424 ;;		On exit  : 0/0
  3425 ;;		Unchanged: 0/0
  3426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3427 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3428 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3429 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3430 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3431 ;;Total ram usage:        6 bytes
  3432 ;; Hardware stack levels used:    1
  3433 ;; Hardware stack levels required when called:    3
  3434 ;; This function calls:
  3435 ;;		Nothing
  3436 ;; This function is called by:
  3437 ;;		_LED_Update
  3438 ;;		_LED_Light_Pos
  3439 ;; This function uses a non-reentrant model
  3440 ;;
  3441                           
  3442                           	psect	text26
  3443  000C30                     __ptext26:
  3444                           	opt callstack 0
  3445  000C30                     _LED_Right:
  3446                           	opt callstack 26
  3447                           
  3448                           ;LED.c: 108: UINT LED_Right(UINT a);LED.c: 109: {;LED.c: 110:     if ((a & 0b0000000001)
      +                           == 0b0000000001)
  3449                           
  3450                           ;incstack = 0
  3451  000C30  A006               	btfss	LED_Right@a,0,c
  3452  000C32  D018               	goto	l2222
  3453                           
  3454                           ;LED.c: 111:     {;LED.c: 112:         UINT b = a & 0b1111111110;
  3455  000C34  0EFE               	movlw	254
  3456  000C36  1406               	andwf	LED_Right@a,w,c
  3457  000C38  6E0A               	movwf	LED_Right@b,c
  3458  000C3A  0E03               	movlw	3
  3459  000C3C  1407               	andwf	LED_Right@a+1,w,c
  3460  000C3E  6E0B               	movwf	LED_Right@b+1,c
  3461                           
  3462                           ;LED.c: 113:         b = b >> 1;
  3463  000C40  90D8               	bcf	status,0,c
  3464  000C42  300B               	rrcf	LED_Right@b+1,w,c
  3465  000C44  6E08               	movwf	??_LED_Right& (0+255),c
  3466  000C46  300A               	rrcf	LED_Right@b,w,c
  3467  000C48  6E0A               	movwf	LED_Right@b,c
  3468  000C4A  C008  F00B         	movff	??_LED_Right,LED_Right@b+1
  3469                           
  3470                           ;LED.c: 114:         b = b | 0b1000000000;
  3471  000C4E  0E00               	movlw	0
  3472  000C50  100A               	iorwf	LED_Right@b,w,c
  3473  000C52  6E0A               	movwf	LED_Right@b,c
  3474  000C54  0E02               	movlw	2
  3475  000C56  100B               	iorwf	LED_Right@b+1,w,c
  3476  000C58  6E0B               	movwf	LED_Right@b+1,c
  3477                           
  3478                           ;LED.c: 115:         return b;
  3479  000C5A  C00A  F006         	movff	LED_Right@b,?_LED_Right
  3480  000C5E  C00B  F007         	movff	LED_Right@b+1,?_LED_Right+1
  3481  000C62  0012               	return	
  3482  000C64                     l2222:
  3483                           
  3484                           ;LED.c: 118:     {;LED.c: 119:         a =a >> 1;
  3485  000C64  90D8               	bcf	status,0,c
  3486  000C66  3007               	rrcf	LED_Right@a+1,w,c
  3487  000C68  6E08               	movwf	??_LED_Right& (0+255),c
  3488  000C6A  3006               	rrcf	LED_Right@a,w,c
  3489  000C6C  6E06               	movwf	LED_Right@a,c
  3490  000C6E  C008  F007         	movff	??_LED_Right,LED_Right@a+1
  3491                           
  3492                           ;LED.c: 120:         return a;
  3493  000C72  C006  F006         	movff	LED_Right@a,?_LED_Right
  3494  000C76  C007  F007         	movff	LED_Right@a+1,?_LED_Right+1
  3495  000C7A  0012               	return		;funcret
  3496  000C7C                     __end_of_LED_Right:
  3497                           	opt callstack 0
  3498                           
  3499 ;; *************** function _LED_Left *****************
  3500 ;; Defined at:
  3501 ;;		line 135 in file "LED.c"
  3502 ;; Parameters:    Size  Location     Type
  3503 ;;  a               2    5[COMRAM] unsigned int 
  3504 ;; Auto vars:     Size  Location     Type
  3505 ;;  b               2    7[COMRAM] unsigned int 
  3506 ;; Return value:  Size  Location     Type
  3507 ;;                  2    5[COMRAM] unsigned int 
  3508 ;; Registers used:
  3509 ;;		wreg, status,2, status,0
  3510 ;; Tracked objects:
  3511 ;;		On entry : 0/0
  3512 ;;		On exit  : 0/0
  3513 ;;		Unchanged: 0/0
  3514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3515 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3516 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3518 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3519 ;;Total ram usage:        4 bytes
  3520 ;; Hardware stack levels used:    1
  3521 ;; Hardware stack levels required when called:    3
  3522 ;; This function calls:
  3523 ;;		Nothing
  3524 ;; This function is called by:
  3525 ;;		_LED_Update
  3526 ;;		_LED_Light_Pos
  3527 ;; This function uses a non-reentrant model
  3528 ;;
  3529                           
  3530                           	psect	text27
  3531  000CC2                     __ptext27:
  3532                           	opt callstack 0
  3533  000CC2                     _LED_Left:
  3534                           	opt callstack 25
  3535                           
  3536                           ;LED.c: 135: UINT LED_Left(UINT a);LED.c: 136: {;LED.c: 137:     if ((a & 0b1000000000) 
      +                          == 0b1000000000)
  3537                           
  3538                           ;incstack = 0
  3539  000CC2  A207               	btfss	LED_Left@a+1,1,c
  3540  000CC4  D015               	goto	l2238
  3541                           
  3542                           ;LED.c: 138:     {;LED.c: 139:         UINT b = a & 0b0111111111;
  3543  000CC6  0EFF               	movlw	255
  3544  000CC8  1406               	andwf	LED_Left@a,w,c
  3545  000CCA  6E08               	movwf	LED_Left@b,c
  3546  000CCC  0E01               	movlw	1
  3547  000CCE  1407               	andwf	LED_Left@a+1,w,c
  3548  000CD0  6E09               	movwf	LED_Left@b+1,c
  3549                           
  3550                           ;LED.c: 140:         b = b << 1;
  3551  000CD2  90D8               	bcf	status,0,c
  3552  000CD4  3408               	rlcf	LED_Left@b,w,c
  3553  000CD6  6E08               	movwf	LED_Left@b,c
  3554  000CD8  3409               	rlcf	LED_Left@b+1,w,c
  3555  000CDA  6E09               	movwf	LED_Left@b+1,c
  3556                           
  3557                           ;LED.c: 141:         b = b | 0b0000000001;
  3558  000CDC  0E01               	movlw	1
  3559  000CDE  1008               	iorwf	LED_Left@b,w,c
  3560  000CE0  6E08               	movwf	LED_Left@b,c
  3561  000CE2  5009               	movf	LED_Left@b+1,w,c
  3562  000CE4  6E09               	movwf	LED_Left@b+1,c
  3563                           
  3564                           ;LED.c: 142:         return b;
  3565  000CE6  C008  F006         	movff	LED_Left@b,?_LED_Left
  3566  000CEA  C009  F007         	movff	LED_Left@b+1,?_LED_Left+1
  3567  000CEE  0012               	return	
  3568  000CF0                     l2238:
  3569                           
  3570                           ;LED.c: 145:     {;LED.c: 146:         a = a << 1;
  3571  000CF0  90D8               	bcf	status,0,c
  3572  000CF2  3406               	rlcf	LED_Left@a,w,c
  3573  000CF4  6E06               	movwf	LED_Left@a,c
  3574  000CF6  3407               	rlcf	LED_Left@a+1,w,c
  3575  000CF8  6E07               	movwf	LED_Left@a+1,c
  3576                           
  3577                           ;LED.c: 147:         return a;
  3578  000CFA  C006  F006         	movff	LED_Left@a,?_LED_Left
  3579  000CFE  C007  F007         	movff	LED_Left@a+1,?_LED_Left+1
  3580  000D02  0012               	return		;funcret
  3581  000D04                     __end_of_LED_Left:
  3582                           	opt callstack 0
  3583                           
  3584 ;; *************** function _INI_All *****************
  3585 ;; Defined at:
  3586 ;;		line 52 in file "INI.c"
  3587 ;; Parameters:    Size  Location     Type
  3588 ;;		None
  3589 ;; Auto vars:     Size  Location     Type
  3590 ;;		None
  3591 ;; Return value:  Size  Location     Type
  3592 ;;                  1    wreg      void 
  3593 ;; Registers used:
  3594 ;;		wreg, status,2, status,0, cstack
  3595 ;; Tracked objects:
  3596 ;;		On entry : 0/0
  3597 ;;		On exit  : 0/0
  3598 ;;		Unchanged: 0/0
  3599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3603 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3604 ;;Total ram usage:        0 bytes
  3605 ;; Hardware stack levels used:    1
  3606 ;; Hardware stack levels required when called:    5
  3607 ;; This function calls:
  3608 ;;		_CAN_Setup
  3609 ;;		_INI_GlobalInterrupt
  3610 ;;		_INI_LED_Start
  3611 ;;		_INI_OUTPUT
  3612 ;;		_INI_Timer
  3613 ;; This function is called by:
  3614 ;;		_main
  3615 ;; This function uses a non-reentrant model
  3616 ;;
  3617                           
  3618                           	psect	text28
  3619  000F12                     __ptext28:
  3620                           	opt callstack 0
  3621  000F12                     _INI_All:
  3622                           	opt callstack 25
  3623                           
  3624                           ;INI.c: 55:     WDTCONbits.SWDTEN = 1;
  3625                           
  3626                           ;incstack = 0
  3627  000F12  80D1               	bsf	4049,0,c	;volatile
  3628  000F14  0004               	clrwdt		;# 
  3629                           
  3630                           ;INI.c: 64:     INI_OUTPUT();
  3631  000F16  EC7A  F007         	call	_INI_OUTPUT	;wreg free
  3632                           
  3633                           ;INI.c: 66:     CAN_Setup();
  3634  000F1A  EC18  F005         	call	_CAN_Setup	;wreg free
  3635                           
  3636                           ;INI.c: 67:     INI_GlobalInterrupt();
  3637  000F1E  ECA2  F007         	call	_INI_GlobalInterrupt	;wreg free
  3638                           
  3639                           ;INI.c: 69:     INI_Timer();
  3640  000F22  EC96  F007         	call	_INI_Timer	;wreg free
  3641                           
  3642                           ;INI.c: 71:     INI_LED_Start();
  3643  000F26  ECEE  F006         	call	_INI_LED_Start	;wreg free
  3644  000F2A  0012               	return		;funcret
  3645  000F2C                     __end_of_INI_All:
  3646                           	opt callstack 0
  3647                           
  3648 ;; *************** function _INI_Timer *****************
  3649 ;; Defined at:
  3650 ;;		line 92 in file "TMR1.c"
  3651 ;; Parameters:    Size  Location     Type
  3652 ;;		None
  3653 ;; Auto vars:     Size  Location     Type
  3654 ;;		None
  3655 ;; Return value:  Size  Location     Type
  3656 ;;                  1    wreg      unsigned char 
  3657 ;; Registers used:
  3658 ;;		wreg, status,2
  3659 ;; Tracked objects:
  3660 ;;		On entry : 0/0
  3661 ;;		On exit  : 0/0
  3662 ;;		Unchanged: 0/0
  3663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3668 ;;Total ram usage:        0 bytes
  3669 ;; Hardware stack levels used:    1
  3670 ;; Hardware stack levels required when called:    3
  3671 ;; This function calls:
  3672 ;;		Nothing
  3673 ;; This function is called by:
  3674 ;;		_INI_All
  3675 ;; This function uses a non-reentrant model
  3676 ;;
  3677                           
  3678                           	psect	text29
  3679  000F2C                     __ptext29:
  3680                           	opt callstack 0
  3681  000F2C                     _INI_Timer:
  3682                           	opt callstack 26
  3683                           
  3684                           ;TMR1.c: 96:     IRCF2 = 1;
  3685                           
  3686                           ;incstack = 0
  3687  000F2C  8CD3               	bsf	4051,6,c	;volatile
  3688                           
  3689                           ;TMR1.c: 97:     IRCF1 = 1;
  3690  000F2E  8AD3               	bsf	4051,5,c	;volatile
  3691                           
  3692                           ;TMR1.c: 98:     IRCF0 = 1;
  3693  000F30  88D3               	bsf	4051,4,c	;volatile
  3694                           
  3695                           ;TMR1.c: 99:     T1CON = 0b00111101;
  3696  000F32  0E3D               	movlw	61
  3697  000F34  6ECD               	movwf	4045,c	;volatile
  3698                           
  3699                           ;TMR1.c: 100:     TMR1H= (UINT8)((0xFFFF - (((8000000/8)/4)/10)) >> 8);
  3700  000F36  0E9E               	movlw	158
  3701  000F38  6ECF               	movwf	4047,c	;volatile
  3702                           
  3703                           ;TMR1.c: 101:     TMR1L=(UINT8)((0xFFFF - (((8000000/8)/4)/10)) & 0xFF);
  3704  000F3A  0E57               	movlw	87
  3705  000F3C  6ECE               	movwf	4046,c	;volatile
  3706                           
  3707                           ;TMR1.c: 102:     TMR1IE=1;
  3708  000F3E  809D               	bsf	3997,0,c	;volatile
  3709                           
  3710                           ;TMR1.c: 103:     TMR1ON = 1;
  3711  000F40  80CD               	bsf	4045,0,c	;volatile
  3712  000F42  0012               	return		;funcret
  3713  000F44                     __end_of_INI_Timer:
  3714                           	opt callstack 0
  3715                           
  3716 ;; *************** function _INI_OUTPUT *****************
  3717 ;; Defined at:
  3718 ;;		line 27 in file "INI.c"
  3719 ;; Parameters:    Size  Location     Type
  3720 ;;		None
  3721 ;; Auto vars:     Size  Location     Type
  3722 ;;		None
  3723 ;; Return value:  Size  Location     Type
  3724 ;;                  1    wreg      void 
  3725 ;; Registers used:
  3726 ;;		wreg, status,2
  3727 ;; Tracked objects:
  3728 ;;		On entry : 0/0
  3729 ;;		On exit  : 0/0
  3730 ;;		Unchanged: 0/0
  3731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3735 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3736 ;;Total ram usage:        0 bytes
  3737 ;; Hardware stack levels used:    1
  3738 ;; Hardware stack levels required when called:    3
  3739 ;; This function calls:
  3740 ;;		Nothing
  3741 ;; This function is called by:
  3742 ;;		_INI_All
  3743 ;; This function uses a non-reentrant model
  3744 ;;
  3745                           
  3746                           	psect	text30
  3747  000EF4                     __ptext30:
  3748                           	opt callstack 0
  3749  000EF4                     _INI_OUTPUT:
  3750                           	opt callstack 26
  3751                           
  3752                           ;INI.c: 31:     LATA = 0;
  3753                           
  3754                           ;incstack = 0
  3755  000EF4  0E00               	movlw	0
  3756  000EF6  6E89               	movwf	3977,c	;volatile
  3757                           
  3758                           ;INI.c: 32:     LATB = 0;
  3759  000EF8  0E00               	movlw	0
  3760  000EFA  6E8A               	movwf	3978,c	;volatile
  3761                           
  3762                           ;INI.c: 33:     LATC = 0;
  3763  000EFC  0E00               	movlw	0
  3764  000EFE  6E8B               	movwf	3979,c	;volatile
  3765                           
  3766                           ;INI.c: 34:     TRISA = 0x0C;
  3767  000F00  0E0C               	movlw	12
  3768  000F02  6E92               	movwf	3986,c	;volatile
  3769                           
  3770                           ;INI.c: 35:     TRISB = 0b10001000;
  3771  000F04  0E88               	movlw	136
  3772  000F06  6E93               	movwf	3987,c	;volatile
  3773                           
  3774                           ;INI.c: 36:     TRISC = 0xBF;
  3775  000F08  0EBF               	movlw	191
  3776  000F0A  6E94               	movwf	3988,c	;volatile
  3777                           
  3778                           ;INI.c: 37:     RCONbits.IPEN = 1;
  3779  000F0C  8ED0               	bsf	4048,7,c	;volatile
  3780                           
  3781                           ;INI.c: 40:     DetectorLedRadar.Flags.inicjalizacja = 1;
  3782  000F0E  863D               	bsf	_DetectorLedRadar,3,c
  3783  000F10  0012               	return		;funcret
  3784  000F12                     __end_of_INI_OUTPUT:
  3785                           	opt callstack 0
  3786                           
  3787 ;; *************** function _INI_LED_Start *****************
  3788 ;; Defined at:
  3789 ;;		line 199 in file "LED.c"
  3790 ;; Parameters:    Size  Location     Type
  3791 ;;		None
  3792 ;; Auto vars:     Size  Location     Type
  3793 ;;		None
  3794 ;; Return value:  Size  Location     Type
  3795 ;;                  1    wreg      void 
  3796 ;; Registers used:
  3797 ;;		wreg, status,2, status,0, cstack
  3798 ;; Tracked objects:
  3799 ;;		On entry : 0/0
  3800 ;;		On exit  : 0/0
  3801 ;;		Unchanged: 0/0
  3802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3807 ;;Total ram usage:        0 bytes
  3808 ;; Hardware stack levels used:    1
  3809 ;; Hardware stack levels required when called:    4
  3810 ;; This function calls:
  3811 ;;		_LED_Control
  3812 ;; This function is called by:
  3813 ;;		_INI_All
  3814 ;; This function uses a non-reentrant model
  3815 ;;
  3816                           
  3817                           	psect	text31
  3818  000DDC                     __ptext31:
  3819                           	opt callstack 0
  3820  000DDC                     _INI_LED_Start:
  3821                           	opt callstack 25
  3822                           
  3823                           ;LED.c: 201:     TRISA = TRISA & 0b00000001;
  3824                           
  3825                           ;incstack = 0
  3826  000DDC  5092               	movf	3986,w,c	;volatile
  3827  000DDE  0B01               	andlw	1
  3828  000DE0  6E92               	movwf	3986,c	;volatile
  3829                           
  3830                           ;LED.c: 202:     TRISB = TRISB & 0b11111100;
  3831  000DE2  5093               	movf	3987,w,c	;volatile
  3832  000DE4  0BFC               	andlw	252
  3833  000DE6  6E93               	movwf	3987,c	;volatile
  3834                           
  3835                           ;LED.c: 203:     TRISE = TRISE & 0b11111000;
  3836  000DE8  5096               	movf	3990,w,c	;volatile
  3837  000DEA  0BF8               	andlw	248
  3838  000DEC  6E96               	movwf	3990,c	;volatile
  3839                           
  3840                           ;LED.c: 204:     TRISD = TRISD & 0b00000000;
  3841  000DEE  0E00               	movlw	0
  3842  000DF0  6E95               	movwf	3989,c	;volatile
  3843                           
  3844                           ;LED.c: 205:     LED_Control(RED,0b0000000000);
  3845  000DF2  0E00               	movlw	0
  3846  000DF4  6E07               	movwf	LED_Control@diode+1,c
  3847  000DF6  0E00               	movlw	0
  3848  000DF8  6E06               	movwf	LED_Control@diode,c
  3849  000DFA  0E00               	movlw	0
  3850  000DFC  EC0F  F003         	call	_LED_Control
  3851                           
  3852                           ;LED.c: 206:     LED_Control(GREEN,0b0000000000);
  3853  000E00  0E00               	movlw	0
  3854  000E02  6E07               	movwf	LED_Control@diode+1,c
  3855  000E04  0E00               	movlw	0
  3856  000E06  6E06               	movwf	LED_Control@diode,c
  3857  000E08  0E01               	movlw	1
  3858  000E0A  EC0F  F003         	call	_LED_Control
  3859  000E0E  0012               	return		;funcret
  3860  000E10                     __end_of_INI_LED_Start:
  3861                           	opt callstack 0
  3862                           
  3863 ;; *************** function _LED_Control *****************
  3864 ;; Defined at:
  3865 ;;		line 224 in file "LED.c"
  3866 ;; Parameters:    Size  Location     Type
  3867 ;;  color           1    wreg     enum E10640
  3868 ;;  diode           2    5[COMRAM] unsigned int 
  3869 ;; Auto vars:     Size  Location     Type
  3870 ;;  color           1    9[COMRAM] enum E10640
  3871 ;;  cos             2    0        unsigned int 
  3872 ;; Return value:  Size  Location     Type
  3873 ;;                  1    wreg      unsigned char 
  3874 ;; Registers used:
  3875 ;;		wreg, status,2, status,0
  3876 ;; Tracked objects:
  3877 ;;		On entry : 0/0
  3878 ;;		On exit  : 0/0
  3879 ;;		Unchanged: 0/0
  3880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3881 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3882 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3884 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3885 ;;Total ram usage:        5 bytes
  3886 ;; Hardware stack levels used:    1
  3887 ;; Hardware stack levels required when called:    3
  3888 ;; This function calls:
  3889 ;;		Nothing
  3890 ;; This function is called by:
  3891 ;;		_LED_Error
  3892 ;;		_LED_Light_Pos
  3893 ;;		_INI_LED_Start
  3894 ;; This function uses a non-reentrant model
  3895 ;;
  3896                           
  3897                           	psect	text32
  3898  00061E                     __ptext32:
  3899                           	opt callstack 0
  3900  00061E                     _LED_Control:
  3901                           	opt callstack 24
  3902                           
  3903                           ;incstack = 0
  3904                           ;LED_Control@color stored from wreg
  3905  00061E  6E0A               	movwf	LED_Control@color,c
  3906                           
  3907                           ;LED.c: 227:     if(color == RED)
  3908  000620  500A               	movf	LED_Control@color,w,c
  3909  000622  A4D8               	btfss	status,2,c
  3910  000624  D050               	goto	l296
  3911                           
  3912                           ;LED.c: 228:     {;LED.c: 230:         if((diode & 0b0000000001)== 0b0000000001)
  3913  000626  A006               	btfss	LED_Control@diode,0,c
  3914  000628  D003               	goto	l2006
  3915                           
  3916                           ;LED.c: 231:         {;LED.c: 232:             LATD = LATD | ~0b11101111;
  3917  00062A  508C               	movf	3980,w,c	;volatile
  3918  00062C  0910               	iorlw	16
  3919  00062E  D002               	goto	L3
  3920  000630                     l2006:
  3921                           
  3922                           ;LED.c: 235:         {;LED.c: 236:             LATD = LATD &0b11101111;
  3923  000630  508C               	movf	3980,w,c	;volatile
  3924  000632  0BEF               	andlw	239
  3925  000634                     L3:
  3926  000634  6E8C               	movwf	3980,c	;volatile
  3927                           
  3928                           ;LED.c: 239:         if((diode & 0b0000000010) == 0b0000000010)
  3929  000636  A206               	btfss	LED_Control@diode,1,c
  3930  000638  D003               	goto	l2012
  3931                           
  3932                           ;LED.c: 240:         {;LED.c: 241:             LATD = LATD | ~0b10111111;
  3933  00063A  508C               	movf	3980,w,c	;volatile
  3934  00063C  0940               	iorlw	64
  3935  00063E  D002               	goto	L4
  3936  000640                     l2012:
  3937                           
  3938                           ;LED.c: 244:         {;LED.c: 245:             LATD = LATD & 0b10111111;
  3939  000640  508C               	movf	3980,w,c	;volatile
  3940  000642  0BBF               	andlw	191
  3941  000644                     L4:
  3942  000644  6E8C               	movwf	3980,c	;volatile
  3943                           
  3944                           ;LED.c: 248:         if((diode & 0b0000000100) == 0b0000000100)
  3945  000646  A406               	btfss	LED_Control@diode,2,c
  3946  000648  D003               	goto	l2018
  3947                           
  3948                           ;LED.c: 249:         {;LED.c: 250:             LATB = LATB | ~0b11111110;
  3949  00064A  508A               	movf	3978,w,c	;volatile
  3950  00064C  0901               	iorlw	1
  3951  00064E  D002               	goto	L5
  3952  000650                     l2018:
  3953                           
  3954                           ;LED.c: 253:         {;LED.c: 254:             LATB = LATB & 0b11111110;
  3955  000650  508A               	movf	3978,w,c	;volatile
  3956  000652  0BFE               	andlw	254
  3957  000654                     L5:
  3958  000654  6E8A               	movwf	3978,c	;volatile
  3959                           
  3960                           ;LED.c: 258:         if((diode & 0b0000001000) == 0b0000001000)
  3961  000656  A606               	btfss	LED_Control@diode,3,c
  3962  000658  D003               	goto	l2024
  3963                           
  3964                           ;LED.c: 259:         {;LED.c: 260:             LATA = LATA | ~0b11111101;
  3965  00065A  5089               	movf	3977,w,c	;volatile
  3966  00065C  0902               	iorlw	2
  3967  00065E  D002               	goto	L6
  3968  000660                     l2024:
  3969                           
  3970                           ;LED.c: 263:         {;LED.c: 264:             LATA = LATA & 0b11111101;
  3971  000660  5089               	movf	3977,w,c	;volatile
  3972  000662  0BFD               	andlw	253
  3973  000664                     L6:
  3974  000664  6E89               	movwf	3977,c	;volatile
  3975                           
  3976                           ;LED.c: 268:         if((diode & 0b0000010000) == 0b0000010000)
  3977  000666  A806               	btfss	LED_Control@diode,4,c
  3978  000668  D003               	goto	l2030
  3979                           
  3980                           ;LED.c: 269:         {;LED.c: 270:             LATA = LATA | ~0b11110111;
  3981  00066A  5089               	movf	3977,w,c	;volatile
  3982  00066C  0908               	iorlw	8
  3983  00066E  D002               	goto	L7
  3984  000670                     l2030:
  3985                           
  3986                           ;LED.c: 273:         {;LED.c: 274:             LATA = LATA & 0b11110111;
  3987  000670  5089               	movf	3977,w,c	;volatile
  3988  000672  0BF7               	andlw	247
  3989  000674                     L7:
  3990  000674  6E89               	movwf	3977,c	;volatile
  3991                           
  3992                           ;LED.c: 278:         if((diode & 0b0000100000) == 0b0000100000)
  3993  000676  AA06               	btfss	LED_Control@diode,5,c
  3994  000678  D003               	goto	l2036
  3995                           
  3996                           ;LED.c: 279:         {;LED.c: 280:             LATA = LATA | ~0b11011111;
  3997  00067A  5089               	movf	3977,w,c	;volatile
  3998  00067C  0920               	iorlw	32
  3999  00067E  D002               	goto	L8
  4000  000680                     l2036:
  4001                           
  4002                           ;LED.c: 283:         {;LED.c: 284:             LATA = LATA & 0b11011111;
  4003  000680  5089               	movf	3977,w,c	;volatile
  4004  000682  0BDF               	andlw	223
  4005  000684                     L8:
  4006  000684  6E89               	movwf	3977,c	;volatile
  4007                           
  4008                           ;LED.c: 287:         if((diode & 0b0001000000) == 0b0001000000)
  4009  000686  AC06               	btfss	LED_Control@diode,6,c
  4010  000688  D003               	goto	l2042
  4011                           
  4012                           ;LED.c: 288:         {;LED.c: 289:             LATE = LATE | ~0b11111101;
  4013  00068A  508D               	movf	3981,w,c	;volatile
  4014  00068C  0902               	iorlw	2
  4015  00068E  D002               	goto	L9
  4016  000690                     l2042:
  4017                           
  4018                           ;LED.c: 292:         {;LED.c: 293:             LATE = LATE & 0b11111101;
  4019  000690  508D               	movf	3981,w,c	;volatile
  4020  000692  0BFD               	andlw	253
  4021  000694                     L9:
  4022  000694  6E8D               	movwf	3981,c	;volatile
  4023                           
  4024                           ;LED.c: 296:         if((diode & 0b0010000000) == 0b0010000000)
  4025  000696  AE06               	btfss	LED_Control@diode,7,c
  4026  000698  D003               	goto	l2048
  4027                           
  4028                           ;LED.c: 297:         {;LED.c: 298:             LATA = LATA | ~0b01111111;
  4029  00069A  5089               	movf	3977,w,c	;volatile
  4030  00069C  0980               	iorlw	128
  4031  00069E  D002               	goto	L10
  4032  0006A0                     l2048:
  4033                           
  4034                           ;LED.c: 301:         {;LED.c: 302:             LATA = LATA & 0b01111111;
  4035  0006A0  5089               	movf	3977,w,c	;volatile
  4036  0006A2  0B7F               	andlw	127
  4037  0006A4                     L10:
  4038  0006A4  6E89               	movwf	3977,c	;volatile
  4039                           
  4040                           ;LED.c: 306:         if((diode & 0b0100000000) == 0b0100000000)
  4041  0006A6  A007               	btfss	LED_Control@diode+1,0,c
  4042  0006A8  D003               	goto	l2054
  4043                           
  4044                           ;LED.c: 307:         {;LED.c: 308:             LATD = LATD | ~0b11111110;
  4045  0006AA  508C               	movf	3980,w,c	;volatile
  4046  0006AC  0901               	iorlw	1
  4047  0006AE  D002               	goto	L11
  4048  0006B0                     l2054:
  4049                           
  4050                           ;LED.c: 311:         {;LED.c: 312:             LATD = LATD & 0b11111110;
  4051  0006B0  508C               	movf	3980,w,c	;volatile
  4052  0006B2  0BFE               	andlw	254
  4053  0006B4                     L11:
  4054  0006B4  6E8C               	movwf	3980,c	;volatile
  4055                           
  4056                           ;LED.c: 315:         if((diode & 0b1000000000) == 0b1000000000)
  4057  0006B6  A207               	btfss	LED_Control@diode+1,1,c
  4058  0006B8  D003               	goto	l2060
  4059                           
  4060                           ;LED.c: 316:         {;LED.c: 317:             LATD = LATD | ~0b11111011;
  4061  0006BA  508C               	movf	3980,w,c	;volatile
  4062  0006BC  0904               	iorlw	4
  4063  0006BE  D002               	goto	L12
  4064  0006C0                     l2060:
  4065                           
  4066                           ;LED.c: 320:         {;LED.c: 321:             LATD = LATD & 0b11111011;
  4067  0006C0  508C               	movf	3980,w,c	;volatile
  4068  0006C2  0BFB               	andlw	251
  4069  0006C4                     L12:
  4070  0006C4  6E8C               	movwf	3980,c	;volatile
  4071  0006C6                     l296:
  4072                           
  4073                           ;LED.c: 326:     if(color == GREEN)
  4074  0006C6  040A               	decf	LED_Control@color,w,c
  4075  0006C8  A4D8               	btfss	status,2,c
  4076  0006CA  0012               	return	
  4077                           
  4078                           ;LED.c: 327:     {;LED.c: 329:         if((diode & 0b0000000001) == 0b0000000001)
  4079  0006CC  A006               	btfss	LED_Control@diode,0,c
  4080  0006CE  D003               	goto	l2066
  4081                           
  4082                           ;LED.c: 330:         {;LED.c: 331:             LATD = LATD | ~0b11011111;
  4083  0006D0  508C               	movf	3980,w,c	;volatile
  4084  0006D2  0920               	iorlw	32
  4085  0006D4  D002               	goto	L13
  4086  0006D6                     l2066:
  4087                           
  4088                           ;LED.c: 334:         {;LED.c: 335:             LATD = LATD & 0b11011111;
  4089  0006D6  508C               	movf	3980,w,c	;volatile
  4090  0006D8  0BDF               	andlw	223
  4091  0006DA                     L13:
  4092  0006DA  6E8C               	movwf	3980,c	;volatile
  4093                           
  4094                           ;LED.c: 339:         if((diode & 0b0000000010) == 0b0000000010)
  4095  0006DC  A206               	btfss	LED_Control@diode,1,c
  4096  0006DE  D003               	goto	l2072
  4097                           
  4098                           ;LED.c: 340:         {;LED.c: 341:             LATD = LATD | ~0b01111111;
  4099  0006E0  508C               	movf	3980,w,c	;volatile
  4100  0006E2  0980               	iorlw	128
  4101  0006E4  D002               	goto	L14
  4102  0006E6                     l2072:
  4103                           
  4104                           ;LED.c: 344:         {;LED.c: 345:             LATD = LATD & 0b01111111;
  4105  0006E6  508C               	movf	3980,w,c	;volatile
  4106  0006E8  0B7F               	andlw	127
  4107  0006EA                     L14:
  4108  0006EA  6E8C               	movwf	3980,c	;volatile
  4109                           
  4110                           ;LED.c: 349:         if((diode & 0b0000000100) == 0b0000000100)
  4111  0006EC  A406               	btfss	LED_Control@diode,2,c
  4112  0006EE  D003               	goto	l2078
  4113                           
  4114                           ;LED.c: 350:         {;LED.c: 351:             LATB = LATB | ~0b11111101;
  4115  0006F0  508A               	movf	3978,w,c	;volatile
  4116  0006F2  0902               	iorlw	2
  4117  0006F4  D002               	goto	L15
  4118  0006F6                     l2078:
  4119                           
  4120                           ;LED.c: 354:         {;LED.c: 355:             LATB = LATB & 0b11111101;
  4121  0006F6  508A               	movf	3978,w,c	;volatile
  4122  0006F8  0BFD               	andlw	253
  4123  0006FA                     L15:
  4124  0006FA  6E8A               	movwf	3978,c	;volatile
  4125                           
  4126                           ;LED.c: 358:         if((diode & 0b0000001000) == 0b0000001000)
  4127  0006FC  A606               	btfss	LED_Control@diode,3,c
  4128  0006FE  D003               	goto	l2084
  4129                           
  4130                           ;LED.c: 359:         {;LED.c: 360:             LATA = LATA | ~0b11111011;
  4131  000700  5089               	movf	3977,w,c	;volatile
  4132  000702  0904               	iorlw	4
  4133  000704  D002               	goto	L16
  4134  000706                     l2084:
  4135                           
  4136                           ;LED.c: 363:         {;LED.c: 364:             LATA = LATA & 0b11111011;
  4137  000706  5089               	movf	3977,w,c	;volatile
  4138  000708  0BFB               	andlw	251
  4139  00070A                     L16:
  4140  00070A  6E89               	movwf	3977,c	;volatile
  4141                           
  4142                           ;LED.c: 368:         if((diode & 0b0000010000) == 0b0000010000)
  4143  00070C  A806               	btfss	LED_Control@diode,4,c
  4144  00070E  D003               	goto	l2090
  4145                           
  4146                           ;LED.c: 369:         {;LED.c: 370:             LATA = LATA | ~0b11101111;
  4147  000710  5089               	movf	3977,w,c	;volatile
  4148  000712  0910               	iorlw	16
  4149  000714  D002               	goto	L17
  4150  000716                     l2090:
  4151                           
  4152                           ;LED.c: 373:         {;LED.c: 374:             LATA = LATA & 0b11101111;
  4153  000716  5089               	movf	3977,w,c	;volatile
  4154  000718  0BEF               	andlw	239
  4155  00071A                     L17:
  4156  00071A  6E89               	movwf	3977,c	;volatile
  4157                           
  4158                           ;LED.c: 378:         if((diode & 0b0000100000) == 0b0000100000)
  4159  00071C  AA06               	btfss	LED_Control@diode,5,c
  4160  00071E  D003               	goto	l2096
  4161                           
  4162                           ;LED.c: 379:         {;LED.c: 380:             LATE = LATE | ~0b11111110;
  4163  000720  508D               	movf	3981,w,c	;volatile
  4164  000722  0901               	iorlw	1
  4165  000724  D002               	goto	L18
  4166  000726                     l2096:
  4167                           
  4168                           ;LED.c: 383:         {;LED.c: 384:             LATE = LATE & 0b11111110;
  4169  000726  508D               	movf	3981,w,c	;volatile
  4170  000728  0BFE               	andlw	254
  4171  00072A                     L18:
  4172  00072A  6E8D               	movwf	3981,c	;volatile
  4173                           
  4174                           ;LED.c: 388:         if((diode & 0b0001000000) == 0b0001000000)
  4175  00072C  AC06               	btfss	LED_Control@diode,6,c
  4176  00072E  D003               	goto	l2102
  4177                           
  4178                           ;LED.c: 389:         {;LED.c: 390:             LATE = LATE | ~0b11111011;
  4179  000730  508D               	movf	3981,w,c	;volatile
  4180  000732  0904               	iorlw	4
  4181  000734  D002               	goto	L19
  4182  000736                     l2102:
  4183                           
  4184                           ;LED.c: 393:         {;LED.c: 394:             LATE = LATE & 0b11111011;
  4185  000736  508D               	movf	3981,w,c	;volatile
  4186  000738  0BFB               	andlw	251
  4187  00073A                     L19:
  4188  00073A  6E8D               	movwf	3981,c	;volatile
  4189                           
  4190                           ;LED.c: 397:         if((diode & 0b0010000000) == 0b0010000000)
  4191  00073C  AE06               	btfss	LED_Control@diode,7,c
  4192  00073E  D003               	goto	l2108
  4193                           
  4194                           ;LED.c: 398:         {;LED.c: 399:             LATA = LATA | ~0b10111111;
  4195  000740  5089               	movf	3977,w,c	;volatile
  4196  000742  0940               	iorlw	64
  4197  000744  D002               	goto	L20
  4198  000746                     l2108:
  4199                           
  4200                           ;LED.c: 402:         {;LED.c: 403:             LATA = LATA & 0b10111111;
  4201  000746  5089               	movf	3977,w,c	;volatile
  4202  000748  0BBF               	andlw	191
  4203  00074A                     L20:
  4204  00074A  6E89               	movwf	3977,c	;volatile
  4205                           
  4206                           ;LED.c: 406:         if((diode & 0b0100000000) == 0b0100000000)
  4207  00074C  A007               	btfss	LED_Control@diode+1,0,c
  4208  00074E  D003               	goto	l2114
  4209                           
  4210                           ;LED.c: 407:         {;LED.c: 408:             LATD = LATD | ~0b11111101;
  4211  000750  508C               	movf	3980,w,c	;volatile
  4212  000752  0902               	iorlw	2
  4213  000754  D002               	goto	L21
  4214  000756                     l2114:
  4215                           
  4216                           ;LED.c: 411:         {;LED.c: 412:             LATD = LATD & 0b11111101;
  4217  000756  508C               	movf	3980,w,c	;volatile
  4218  000758  0BFD               	andlw	253
  4219  00075A                     L21:
  4220  00075A  6E8C               	movwf	3980,c	;volatile
  4221                           
  4222                           ;LED.c: 415:         if((diode & 0b1000000000) == 0b1000000000)
  4223  00075C  A207               	btfss	LED_Control@diode+1,1,c
  4224  00075E  D004               	goto	l2120
  4225                           
  4226                           ;LED.c: 416:         {;LED.c: 417:             LATD = LATD | ~0b11110111;
  4227  000760  508C               	movf	3980,w,c	;volatile
  4228  000762  0908               	iorlw	8
  4229  000764  6E8C               	movwf	3980,c	;volatile
  4230                           
  4231                           ;LED.c: 418:         }
  4232  000766  0012               	return	
  4233  000768                     l2120:
  4234                           
  4235                           ;LED.c: 420:         {;LED.c: 421:             LATD = LATD &0b11110111;
  4236  000768  508C               	movf	3980,w,c	;volatile
  4237  00076A  0BF7               	andlw	247
  4238  00076C  6E8C               	movwf	3980,c	;volatile
  4239  00076E  0012               	return		;funcret
  4240  000770                     __end_of_LED_Control:
  4241                           	opt callstack 0
  4242                           
  4243 ;; *************** function _INI_GlobalInterrupt *****************
  4244 ;; Defined at:
  4245 ;;		line 74 in file "INI.c"
  4246 ;; Parameters:    Size  Location     Type
  4247 ;;		None
  4248 ;; Auto vars:     Size  Location     Type
  4249 ;;		None
  4250 ;; Return value:  Size  Location     Type
  4251 ;;                  1    wreg      void 
  4252 ;; Registers used:
  4253 ;;		None
  4254 ;; Tracked objects:
  4255 ;;		On entry : 0/0
  4256 ;;		On exit  : 0/0
  4257 ;;		Unchanged: 0/0
  4258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4263 ;;Total ram usage:        0 bytes
  4264 ;; Hardware stack levels used:    1
  4265 ;; Hardware stack levels required when called:    3
  4266 ;; This function calls:
  4267 ;;		Nothing
  4268 ;; This function is called by:
  4269 ;;		_INI_All
  4270 ;; This function uses a non-reentrant model
  4271 ;;
  4272                           
  4273                           	psect	text33
  4274  000F44                     __ptext33:
  4275                           	opt callstack 0
  4276  000F44                     _INI_GlobalInterrupt:
  4277                           	opt callstack 26
  4278                           
  4279                           ;INI.c: 76: INTCONbits.GIEH=1;
  4280                           
  4281                           ;incstack = 0
  4282  000F44  8EF2               	bsf	4082,7,c	;volatile
  4283                           
  4284                           ;INI.c: 77: INTCONbits.GIEL=1;
  4285  000F46  8CF2               	bsf	4082,6,c	;volatile
  4286                           
  4287                           ;INI.c: 78: RCONbits.IPEN=1;
  4288  000F48  8ED0               	bsf	4048,7,c	;volatile
  4289                           
  4290                           ;INI.c: 79: IPEN =1;
  4291  000F4A  8ED0               	bsf	4048,7,c	;volatile
  4292                           
  4293                           ;INI.c: 81: PEIE=1;
  4294  000F4C  8CF2               	bsf	4082,6,c	;volatile
  4295                           
  4296                           ;INI.c: 82: TMR1IP = 0;
  4297  000F4E  909F               	bcf	3999,0,c	;volatile
  4298  000F50  0012               	return		;funcret
  4299  000F52                     __end_of_INI_GlobalInterrupt:
  4300                           	opt callstack 0
  4301                           
  4302 ;; *************** function _CAN_Setup *****************
  4303 ;; Defined at:
  4304 ;;		line 22 in file "CAN.c"
  4305 ;; Parameters:    Size  Location     Type
  4306 ;;		None
  4307 ;; Auto vars:     Size  Location     Type
  4308 ;;		None
  4309 ;; Return value:  Size  Location     Type
  4310 ;;                  1    wreg      void 
  4311 ;; Registers used:
  4312 ;;		wreg, status,2, status,0, cstack
  4313 ;; Tracked objects:
  4314 ;;		On entry : 0/0
  4315 ;;		On exit  : 0/0
  4316 ;;		Unchanged: 0/0
  4317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4320 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4321 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4322 ;;Total ram usage:        1 bytes
  4323 ;; Hardware stack levels used:    1
  4324 ;; Hardware stack levels required when called:    4
  4325 ;; This function calls:
  4326 ;;		_CAN_SetupClock
  4327 ;;		_CAN_SetupMask
  4328 ;; This function is called by:
  4329 ;;		_INI_All
  4330 ;; This function uses a non-reentrant model
  4331 ;;
  4332                           
  4333                           	psect	text34
  4334  000A30                     __ptext34:
  4335                           	opt callstack 0
  4336  000A30                     _CAN_Setup:
  4337                           	opt callstack 25
  4338                           
  4339                           ;CAN.c: 27:     CANCON = 0x80;
  4340                           
  4341                           ;incstack = 0
  4342  000A30  0E80               	movlw	128
  4343  000A32  6E6F               	movwf	3951,c	;volatile
  4344  000A34                     l2356:
  4345                           
  4346                           ;CAN.c: 28:     while((CANSTAT & 0xE0)!=0x80)
  4347  000A34  506E               	movf	3950,w,c	;volatile
  4348  000A36  0BE0               	andlw	224
  4349  000A38  0A80               	xorlw	128
  4350  000A3A  A4D8               	btfss	status,2,c
  4351  000A3C  D7FB               	goto	l2356
  4352                           
  4353                           ;CAN.c: 33:     BSEL0 = 0;
  4354  000A3E  0E00               	movlw	0
  4355  000A40  010D               	movlb	13	; () banked
  4356  000A42  6FF8               	movwf	248,b	;volatile
  4357                           
  4358                           ;CAN.c: 34:     TXB0CON = 0;
  4359  000A44  0E00               	movlw	0
  4360  000A46  010F               	movlb	15	; () banked
  4361  000A48  6F40               	movwf	64,b	;volatile
  4362                           
  4363                           ;CAN.c: 35:     RXB0CON = 0;
  4364  000A4A  0E00               	movlw	0
  4365  000A4C  6E60               	movwf	3936,c	;volatile
  4366                           
  4367                           ;CAN.c: 36:     RXB1CON = 0;
  4368  000A4E  0E00               	movlw	0
  4369  000A50  6F50               	movwf	80,b	;volatile
  4370                           
  4371                           ;CAN.c: 37:     B0CON = 0;
  4372  000A52  0E00               	movlw	0
  4373  000A54  010E               	movlb	14	; () banked
  4374  000A56  6F20               	movwf	32,b	;volatile
  4375                           
  4376                           ;CAN.c: 38:     B1CON = 0;
  4377  000A58  0E00               	movlw	0
  4378  000A5A  6F30               	movwf	48,b	;volatile
  4379                           
  4380                           ;CAN.c: 39:     PIE3 = 0;
  4381  000A5C  0E00               	movlw	0
  4382  000A5E  6EA3               	movwf	4003,c	;volatile
  4383                           
  4384                           ; BSR set to: 14
  4385                           ;CAN.c: 40:     IPR3 = 0xFF;
  4386  000A60  68A5               	setf	4005,c	;volatile
  4387                           
  4388                           ;CAN.c: 41:     PIR3 = 0x00;
  4389  000A62  0E00               	movlw	0
  4390  000A64  6EA4               	movwf	4004,c	;volatile
  4391                           
  4392                           ;CAN.c: 42:     BIE0 = 0;
  4393  000A66  0E00               	movlw	0
  4394  000A68  010D               	movlb	13	; () banked
  4395  000A6A  6FFA               	movwf	250,b	;volatile
  4396                           
  4397                           ;CAN.c: 45:     ECANCON = 0x90;
  4398  000A6C  0E90               	movlw	144
  4399  000A6E  6E77               	movwf	3959,c	;volatile
  4400                           
  4401                           ; BSR set to: 13
  4402                           ;CAN.c: 48:     CAN_SetupClock();
  4403  000A70  EC34  F007         	call	_CAN_SetupClock	;wreg free
  4404                           
  4405                           ;CAN.c: 51:     CAN_SetupMask();
  4406  000A74  ECE3  F004         	call	_CAN_SetupMask	;wreg free
  4407                           
  4408                           ;CAN.c: 53:     CIOCON = 0xff;
  4409  000A78  6873               	setf	3955,c	;volatile
  4410                           
  4411                           ;CAN.c: 59:     CANCON = 0x00;
  4412  000A7A  0E00               	movlw	0
  4413  000A7C  6E6F               	movwf	3951,c	;volatile
  4414  000A7E                     l2370:
  4415                           
  4416                           ;CAN.c: 60:     while((CANSTAT & 0xE0) != 0x00)
  4417  000A7E  CF6E F006          	movff	3950,??_CAN_Setup	;volatile
  4418  000A82  0EE0               	movlw	224
  4419  000A84  1606               	andwf	??_CAN_Setup,f,c
  4420  000A86  B4D8               	btfsc	status,2,c
  4421  000A88  0012               	return	
  4422  000A8A  D7F9               	goto	l2370
  4423  000A8C                     __end_of_CAN_Setup:
  4424                           	opt callstack 0
  4425                           
  4426 ;; *************** function _CAN_SetupMask *****************
  4427 ;; Defined at:
  4428 ;;		line 81 in file "CAN.c"
  4429 ;; Parameters:    Size  Location     Type
  4430 ;;		None
  4431 ;; Auto vars:     Size  Location     Type
  4432 ;;		None
  4433 ;; Return value:  Size  Location     Type
  4434 ;;                  1    wreg      void 
  4435 ;; Registers used:
  4436 ;;		wreg, status,2, status,0
  4437 ;; Tracked objects:
  4438 ;;		On entry : 0/0
  4439 ;;		On exit  : 0/0
  4440 ;;		Unchanged: 0/0
  4441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4445 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4446 ;;Total ram usage:        0 bytes
  4447 ;; Hardware stack levels used:    1
  4448 ;; Hardware stack levels required when called:    3
  4449 ;; This function calls:
  4450 ;;		Nothing
  4451 ;; This function is called by:
  4452 ;;		_CAN_Setup
  4453 ;; This function uses a non-reentrant model
  4454 ;;
  4455                           
  4456                           	psect	text35
  4457  0009C6                     __ptext35:
  4458                           	opt callstack 0
  4459  0009C6                     _CAN_SetupMask:
  4460                           	opt callstack 25
  4461                           
  4462                           ;CAN.c: 83:     MSEL0 = 0x50;
  4463                           
  4464                           ;incstack = 0
  4465  0009C6  0E50               	movlw	80
  4466  0009C8  010D               	movlb	13	; () banked
  4467  0009CA  6FF0               	movwf	240,b	;volatile
  4468                           
  4469                           ;CAN.c: 84:     MSEL1 = 0x55;
  4470  0009CC  0E55               	movlw	85
  4471  0009CE  6FF1               	movwf	241,b	;volatile
  4472                           
  4473                           ;CAN.c: 85:     MSEL2 = 0x55;
  4474  0009D0  0E55               	movlw	85
  4475  0009D2  6FF2               	movwf	242,b	;volatile
  4476                           
  4477                           ;CAN.c: 86:     MSEL3 = 0x55;
  4478  0009D4  0E55               	movlw	85
  4479  0009D6  6FF3               	movwf	243,b	;volatile
  4480                           
  4481                           ;CAN.c: 89:     RXM0SIDH = 0b00000000;
  4482  0009D8  0E00               	movlw	0
  4483  0009DA  010F               	movlb	15	; () banked
  4484  0009DC  6F18               	movwf	24,b	;volatile
  4485                           
  4486                           ;CAN.c: 90:     RXM0SIDL = 0b00001011;
  4487  0009DE  0E0B               	movlw	11
  4488  0009E0  6F19               	movwf	25,b	;volatile
  4489                           
  4490                           ; BSR set to: 15
  4491                           ;CAN.c: 91:     RXM0EIDH = 0xFF;
  4492  0009E2  691A               	setf	26,b	;volatile
  4493                           
  4494                           ; BSR set to: 15
  4495                           ;CAN.c: 92:     RXM0EIDL = 0xFF;
  4496  0009E4  691B               	setf	27,b	;volatile
  4497                           
  4498                           ; BSR set to: 15
  4499                           ;CAN.c: 95:     RXM1SIDH = 0xFF;
  4500  0009E6  691C               	setf	28,b	;volatile
  4501                           
  4502                           ; BSR set to: 15
  4503                           ;CAN.c: 96:     RXM1SIDL = 0xFF;
  4504  0009E8  691D               	setf	29,b	;volatile
  4505                           
  4506                           ;CAN.c: 97:     RXM1EIDH = 0;
  4507  0009EA  0E00               	movlw	0
  4508  0009EC  6F1E               	movwf	30,b	;volatile
  4509                           
  4510                           ;CAN.c: 98:     RXM1EIDL = 0;
  4511  0009EE  0E00               	movlw	0
  4512  0009F0  6F1F               	movwf	31,b	;volatile
  4513                           
  4514                           ;CAN.c: 101:     RXF0SIDH = 0x00;
  4515  0009F2  0E00               	movlw	0
  4516  0009F4  6F00               	movwf	0,b	;volatile
  4517                           
  4518                           ;CAN.c: 102:     RXF0SIDL = 0x01;
  4519  0009F6  0E01               	movlw	1
  4520  0009F8  6F01               	movwf	1,b	;volatile
  4521                           
  4522                           ; BSR set to: 15
  4523                           ;CAN.c: 103:     RXF0SIDLbits.EXIDEN = 1;
  4524  0009FA  8701               	bsf	1,3,b	;volatile
  4525                           
  4526                           ;CAN.c: 104:     RXF0EIDH = (BYTE)(DaneCan.adresCAN>>8);
  4527  0009FC  503A               	movf	_DaneCan+3,w,c
  4528  0009FE  6F02               	movwf	2,b	;volatile
  4529                           
  4530                           ; BSR set to: 15
  4531                           ;CAN.c: 105:  RXF0EIDH |= 0x40;
  4532  000A00  8D02               	bsf	2,6,b	;volatile
  4533                           
  4534                           ; BSR set to: 15
  4535                           ;CAN.c: 106:     RXF0EIDL = (BYTE)DaneCan.adresCAN;
  4536  000A02  C039  FF03         	movff	_DaneCan+2,3843	;volatile
  4537                           
  4538                           ; BSR set to: 15
  4539                           ;CAN.c: 108:     RXF1SIDH = 0x00;
  4540  000A06  0E00               	movlw	0
  4541  000A08  6F04               	movwf	4,b	;volatile
  4542                           
  4543                           ; BSR set to: 15
  4544                           ;CAN.c: 109:     RXF1SIDL = 0x01;
  4545  000A0A  0E01               	movlw	1
  4546  000A0C  6F05               	movwf	5,b	;volatile
  4547                           
  4548                           ; BSR set to: 15
  4549                           ;CAN.c: 110:     RXF1SIDLbits.EXIDEN = 1;
  4550  000A0E  8705               	bsf	5,3,b	;volatile
  4551                           
  4552                           ; BSR set to: 15
  4553                           ;CAN.c: 111:     RXF1EIDH = 0x7F;
  4554  000A10  0E7F               	movlw	127
  4555  000A12  6F06               	movwf	6,b	;volatile
  4556                           
  4557                           ; BSR set to: 15
  4558                           ;CAN.c: 112:     RXF1EIDL = 0xFF;
  4559  000A14  6907               	setf	7,b	;volatile
  4560                           
  4561                           ; BSR set to: 15
  4562                           ;CAN.c: 115:     RXF2SIDH = 0;
  4563  000A16  0E00               	movlw	0
  4564  000A18  6F08               	movwf	8,b	;volatile
  4565                           
  4566                           ; BSR set to: 15
  4567                           ;CAN.c: 116:     RXF2SIDL = 0x20;
  4568  000A1A  0E20               	movlw	32
  4569  000A1C  6F09               	movwf	9,b	;volatile
  4570                           
  4571                           ; BSR set to: 15
  4572                           ;CAN.c: 117:     RXF2SIDLbits.EXIDEN = 1;
  4573  000A1E  8709               	bsf	9,3,b	;volatile
  4574                           
  4575                           ; BSR set to: 15
  4576                           ;CAN.c: 118:     RXF2EIDH = 0;
  4577  000A20  0E00               	movlw	0
  4578  000A22  6F0A               	movwf	10,b	;volatile
  4579                           
  4580                           ; BSR set to: 15
  4581                           ;CAN.c: 119:     RXF2EIDL = 0;
  4582  000A24  0E00               	movlw	0
  4583  000A26  6F0B               	movwf	11,b	;volatile
  4584                           
  4585                           ; BSR set to: 15
  4586                           ;CAN.c: 127:     RXFCON0 = 0x07;
  4587  000A28  0E07               	movlw	7
  4588  000A2A  010D               	movlb	13	; () banked
  4589  000A2C  6FD4               	movwf	212,b	;volatile
  4590                           
  4591                           ; BSR set to: 13
  4592  000A2E  0012               	return		;funcret
  4593  000A30                     __end_of_CAN_SetupMask:
  4594                           	opt callstack 0
  4595                           
  4596 ;; *************** function _CAN_SetupClock *****************
  4597 ;; Defined at:
  4598 ;;		line 136 in file "CAN.c"
  4599 ;; Parameters:    Size  Location     Type
  4600 ;;		None
  4601 ;; Auto vars:     Size  Location     Type
  4602 ;;		None
  4603 ;; Return value:  Size  Location     Type
  4604 ;;                  1    wreg      void 
  4605 ;; Registers used:
  4606 ;;		None
  4607 ;; Tracked objects:
  4608 ;;		On entry : 0/0
  4609 ;;		On exit  : 0/0
  4610 ;;		Unchanged: 0/0
  4611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4616 ;;Total ram usage:        0 bytes
  4617 ;; Hardware stack levels used:    1
  4618 ;; Hardware stack levels required when called:    3
  4619 ;; This function calls:
  4620 ;;		Nothing
  4621 ;; This function is called by:
  4622 ;;		_CAN_Setup
  4623 ;; This function uses a non-reentrant model
  4624 ;;
  4625                           
  4626                           	psect	text36
  4627  000E68                     __ptext36:
  4628                           	opt callstack 0
  4629  000E68                     _CAN_SetupClock:
  4630                           	opt callstack 25
  4631                           
  4632                           ;CAN.c: 138:     BRGCON1bits.BRP0 = (((32000000/4)/(2*20*50000))-1) & 0b000001;
  4633                           
  4634                           ; BSR set to: 13
  4635                           ;incstack = 0
  4636  000E68  8070               	bsf	3952,0,c	;volatile
  4637                           
  4638                           ;CAN.c: 139:     BRGCON1bits.BRP1 = ((((32000000/4)/(2*20*50000))-1) >> 1) & 0b000001;
  4639  000E6A  8270               	bsf	3952,1,c	;volatile
  4640                           
  4641                           ;CAN.c: 140:     BRGCON1bits.BRP2 = ((((32000000/4)/(2*20*50000))-1) >> 2) & 0b000001;
  4642  000E6C  9470               	bcf	3952,2,c	;volatile
  4643                           
  4644                           ;CAN.c: 141:     BRGCON1bits.BRP3 = ((((32000000/4)/(2*20*50000))-1) >> 3) & 0b000001;
  4645  000E6E  9670               	bcf	3952,3,c	;volatile
  4646                           
  4647                           ;CAN.c: 142:     BRGCON1bits.BRP4 = ((((32000000/4)/(2*20*50000))-1) >> 4) & 0b000001;
  4648  000E70  9870               	bcf	3952,4,c	;volatile
  4649                           
  4650                           ;CAN.c: 143:     BRGCON1bits.BRP5 = ((((32000000/4)/(2*20*50000))-1) >> 5) & 0b000001;
  4651  000E72  9A70               	bcf	3952,5,c	;volatile
  4652                           
  4653                           ;CAN.c: 145:     BRGCON1bits.SJW0 = 1;
  4654  000E74  8C70               	bsf	3952,6,c	;volatile
  4655                           
  4656                           ;CAN.c: 146:     BRGCON1bits.SJW1 = 1;
  4657  000E76  8E70               	bsf	3952,7,c	;volatile
  4658                           
  4659                           ;CAN.c: 148:     BRGCON2bits.SEG1PH0 = 1;
  4660  000E78  8671               	bsf	3953,3,c	;volatile
  4661                           
  4662                           ;CAN.c: 149:     BRGCON2bits.SEG1PH1 = 1;
  4663  000E7A  8871               	bsf	3953,4,c	;volatile
  4664                           
  4665                           ;CAN.c: 150:     BRGCON2bits.SEG1PH2 = 1;
  4666  000E7C  8A71               	bsf	3953,5,c	;volatile
  4667                           
  4668                           ;CAN.c: 152:     BRGCON2bits.PRSEG2 = 1;
  4669  000E7E  8471               	bsf	3953,2,c	;volatile
  4670                           
  4671                           ;CAN.c: 153:     BRGCON2bits.PRSEG1 = 0;
  4672  000E80  9271               	bcf	3953,1,c	;volatile
  4673                           
  4674                           ;CAN.c: 154:     BRGCON2bits.PRSEG0 = 0;
  4675  000E82  9071               	bcf	3953,0,c	;volatile
  4676                           
  4677                           ;CAN.c: 156:     BRGCON3bits.SEG2PH0 = 1;
  4678  000E84  8072               	bsf	3954,0,c	;volatile
  4679                           
  4680                           ;CAN.c: 157:     BRGCON3bits.SEG2PH1 = 0;
  4681  000E86  9272               	bcf	3954,1,c	;volatile
  4682                           
  4683                           ;CAN.c: 158:     BRGCON3bits.SEG2PH2 = 1;
  4684  000E88  8472               	bsf	3954,2,c	;volatile
  4685                           
  4686                           ;CAN.c: 160:     BRGCON2bits.SAM = 1;
  4687  000E8A  8C71               	bsf	3953,6,c	;volatile
  4688                           
  4689                           ;CAN.c: 161:     BRGCON2bits.SEG2PHTS = 1;
  4690  000E8C  8E71               	bsf	3953,7,c	;volatile
  4691  000E8E  0012               	return		;funcret
  4692  000E90                     __end_of_CAN_SetupClock:
  4693                           	opt callstack 0
  4694                           
  4695 ;; *************** function _ISR_low *****************
  4696 ;; Defined at:
  4697 ;;		line 16 in file "ISR.c"
  4698 ;; Parameters:    Size  Location     Type
  4699 ;;		None
  4700 ;; Auto vars:     Size  Location     Type
  4701 ;;		None
  4702 ;; Return value:  Size  Location     Type
  4703 ;;                  1    wreg      void 
  4704 ;; Registers used:
  4705 ;;		wreg, status,2, status,0, cstack
  4706 ;; Tracked objects:
  4707 ;;		On entry : 0/0
  4708 ;;		On exit  : 0/0
  4709 ;;		Unchanged: 0/0
  4710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4713 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4714 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4715 ;;Total ram usage:        3 bytes
  4716 ;; Hardware stack levels used:    1
  4717 ;; Hardware stack levels required when called:    2
  4718 ;; This function calls:
  4719 ;;		_TMR1_Timer_reset
  4720 ;;		i1_TMR1_Update_flag_Set
  4721 ;; This function is called by:
  4722 ;;		Interrupt level 1
  4723 ;; This function uses a non-reentrant model
  4724 ;;
  4725                           
  4726                           	psect	intcodelo
  4727  000018                     __pintcodelo:
  4728                           	opt callstack 0
  4729  000018                     _ISR_low:
  4730                           	opt callstack 24
  4731                           
  4732                           ;incstack = 0
  4733  000018  804A               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  4734  00001A  CFD8 F003          	movff	status,??_ISR_low
  4735  00001E  CFE8 F004          	movff	wreg,??_ISR_low+1
  4736  000022  CFE0 F005          	movff	bsr,??_ISR_low+2
  4737                           
  4738                           ;ISR.c: 21:     if(TMR1IF==1)
  4739  000026  A09E               	btfss	3998,0,c	;volatile
  4740  000028  D011               	goto	i1l525
  4741                           
  4742                           ;ISR.c: 22:         {;ISR.c: 23:             TMR1_Timer_reset();
  4743  00002A  EC48  F007         	call	_TMR1_Timer_reset	;wreg free
  4744                           
  4745                           ;ISR.c: 26:             static BYTE ramkaStanuU8=0;;ISR.c: 29:             TMR1_Update_f
      +                          lag_Set(1);
  4746  00002E  0E00               	movlw	0
  4747  000030  6E02               	movwf	i1TMR1_Update_flag_Set@a+1,c
  4748  000032  0E01               	movlw	1
  4749  000034  6E01               	movwf	i1TMR1_Update_flag_Set@a,c
  4750  000036  ECB3  F007         	call	i1_TMR1_Update_flag_Set	;wreg free
  4751                           
  4752                           ;ISR.c: 31:             DetectorLedRadar.Flags.obsluzWeWy = 1;
  4753  00003A  803D               	bsf	_DetectorLedRadar,0,c
  4754                           
  4755                           ;ISR.c: 33:             if(++ramkaStanuU8 > (5*10))
  4756  00003C  2A41               	incf	ISR_low@ramkaStanuU8,f,c
  4757  00003E  0E32               	movlw	50
  4758  000040  6441               	cpfsgt	ISR_low@ramkaStanuU8,c
  4759  000042  D003               	goto	i1l2634
  4760                           
  4761                           ;ISR.c: 34:                 {;ISR.c: 35:                     ramkaStanuU8 = 0;
  4762  000044  0E00               	movlw	0
  4763  000046  6E41               	movwf	ISR_low@ramkaStanuU8,c
  4764                           
  4765                           ;ISR.c: 36:                     DaneCan.Flags.wyslijRamkeStanu = 1;
  4766  000048  8037               	bsf	_DaneCan,0,c
  4767  00004A                     i1l2634:
  4768                           
  4769                           ;ISR.c: 41:             TMR1IF=0;
  4770  00004A  909E               	bcf	3998,0,c	;volatile
  4771  00004C                     i1l525:
  4772  00004C  C005  FFE0         	movff	??_ISR_low+2,bsr
  4773  000050  C004  FFE8         	movff	??_ISR_low+1,wreg
  4774  000054  C003  FFD8         	movff	??_ISR_low,status
  4775  000058  904A               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  4776  00005A  0010               	retfie	
  4777  00005C                     __end_of_ISR_low:
  4778                           	opt callstack 0
  4779                           
  4780 ;; *************** function i1_TMR1_Update_flag_Set *****************
  4781 ;; Defined at:
  4782 ;;		line 32 in file "TMR1.c"
  4783 ;; Parameters:    Size  Location     Type
  4784 ;;  a               2    0[COMRAM] unsigned int 
  4785 ;; Auto vars:     Size  Location     Type
  4786 ;;		None
  4787 ;; Return value:  Size  Location     Type
  4788 ;;                  1    wreg      void 
  4789 ;; Registers used:
  4790 ;;		None
  4791 ;; Tracked objects:
  4792 ;;		On entry : 0/0
  4793 ;;		On exit  : 0/0
  4794 ;;		Unchanged: 0/0
  4795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4796 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4799 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4800 ;;Total ram usage:        2 bytes
  4801 ;; Hardware stack levels used:    1
  4802 ;; Hardware stack levels required when called:    1
  4803 ;; This function calls:
  4804 ;;		Nothing
  4805 ;; This function is called by:
  4806 ;;		_ISR_low
  4807 ;; This function uses a non-reentrant model
  4808 ;;
  4809                           
  4810                           	psect	text38
  4811  000F66                     __ptext38:
  4812                           	opt callstack 0
  4813  000F66                     i1_TMR1_Update_flag_Set:
  4814                           	opt callstack 24
  4815                           
  4816                           ;TMR1.c: 32: void TMR1_Update_flag_Set(UINT a);TMR1.c: 33: {;TMR1.c: 34:     TMR1_Update
      +                          _flag = a;
  4817                           
  4818                           ;incstack = 0
  4819  000F66  C001  F03B         	movff	i1TMR1_Update_flag_Set@a,_TMR1_Update_flag
  4820  000F6A  C002  F03C         	movff	i1TMR1_Update_flag_Set@a+1,_TMR1_Update_flag+1
  4821  000F6E  0012               	return		;funcret
  4822  000F70                     __end_ofi1_TMR1_Update_flag_Set:
  4823                           	opt callstack 0
  4824                           
  4825 ;; *************** function _TMR1_Timer_reset *****************
  4826 ;; Defined at:
  4827 ;;		line 63 in file "TMR1.c"
  4828 ;; Parameters:    Size  Location     Type
  4829 ;;		None
  4830 ;; Auto vars:     Size  Location     Type
  4831 ;;  t1H             1    1[COMRAM] volatile unsigned char 
  4832 ;;  t1L             1    0[COMRAM] volatile unsigned char 
  4833 ;; Return value:  Size  Location     Type
  4834 ;;                  1    wreg      unsigned char 
  4835 ;; Registers used:
  4836 ;;		wreg, status,2, status,0
  4837 ;; Tracked objects:
  4838 ;;		On entry : 0/0
  4839 ;;		On exit  : 0/0
  4840 ;;		Unchanged: 0/0
  4841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4843 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4845 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4846 ;;Total ram usage:        2 bytes
  4847 ;; Hardware stack levels used:    1
  4848 ;; Hardware stack levels required when called:    1
  4849 ;; This function calls:
  4850 ;;		Nothing
  4851 ;; This function is called by:
  4852 ;;		_ISR_low
  4853 ;; This function uses a non-reentrant model
  4854 ;;
  4855                           
  4856                           	psect	text39
  4857  000E90                     __ptext39:
  4858                           	opt callstack 0
  4859  000E90                     _TMR1_Timer_reset:
  4860                           	opt callstack 24
  4861                           
  4862                           ;TMR1.c: 69:     volatile BYTE t1L = 0, t1H = 0;
  4863                           
  4864                           ;incstack = 0
  4865  000E90  0E00               	movlw	0
  4866  000E92  6E01               	movwf	TMR1_Timer_reset@t1L,c	;volatile
  4867  000E94  0E00               	movlw	0
  4868  000E96  6E02               	movwf	TMR1_Timer_reset@t1H,c	;volatile
  4869                           
  4870                           ;TMR1.c: 70:     t1L = TMR1L;
  4871  000E98  CFCE F001          	movff	4046,TMR1_Timer_reset@t1L	;volatile
  4872                           
  4873                           ;TMR1.c: 71:     t1H = TMR1H;
  4874  000E9C  CFCF F002          	movff	4047,TMR1_Timer_reset@t1H	;volatile
  4875                           
  4876                           ;TMR1.c: 72:     __nop();
  4877  000EA0  F000               	nop	
  4878                           
  4879                           ;TMR1.c: 73:     t1H += (UINT8)((0xFFFF - (((8000000/8)/4)/10)) >> 8);
  4880  000EA2  0E9E               	movlw	158
  4881  000EA4  2602               	addwf	TMR1_Timer_reset@t1H,f,c	;volatile
  4882                           
  4883                           ;TMR1.c: 74:     t1L += (UINT8)((0xFFFF - (((8000000/8)/4)/10)) & 0xFF);
  4884  000EA6  0E57               	movlw	87
  4885  000EA8  2601               	addwf	TMR1_Timer_reset@t1L,f,c	;volatile
  4886                           
  4887                           ;TMR1.c: 75:     TMR1H = t1H;
  4888  000EAA  C002  FFCF         	movff	TMR1_Timer_reset@t1H,4047	;volatile
  4889                           
  4890                           ;TMR1.c: 76:     TMR1L = 0x5B;
  4891  000EAE  0E5B               	movlw	91
  4892  000EB0  6ECE               	movwf	4046,c	;volatile
  4893  000EB2  0012               	return		;funcret
  4894  000EB4                     __end_of_TMR1_Timer_reset:
  4895                           	opt callstack 0
  4896                           
  4897 ;; *************** function _ISR_high *****************
  4898 ;; Defined at:
  4899 ;;		line 53 in file "ISR.c"
  4900 ;; Parameters:    Size  Location     Type
  4901 ;;		None
  4902 ;; Auto vars:     Size  Location     Type
  4903 ;;		None
  4904 ;; Return value:  Size  Location     Type
  4905 ;;                  1    wreg      void 
  4906 ;; Registers used:
  4907 ;;		None
  4908 ;; Tracked objects:
  4909 ;;		On entry : 0/0
  4910 ;;		On exit  : 0/0
  4911 ;;		Unchanged: 0/0
  4912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4916 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4917 ;;Total ram usage:        0 bytes
  4918 ;; Hardware stack levels used:    1
  4919 ;; This function calls:
  4920 ;;		Nothing
  4921 ;; This function is called by:
  4922 ;;		Interrupt level 2
  4923 ;; This function uses a non-reentrant model
  4924 ;;
  4925                           
  4926                           	psect	intcode
  4927  000008                     __pintcode:
  4928                           	opt callstack 0
  4929  000008                     _ISR_high:
  4930                           	opt callstack 24
  4931                           
  4932                           ;incstack = 0
  4933  000008  824A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4934  00000A  EDBC  F007         	call	int_func,f	;refresh shadow registers
  4935                           
  4936                           	psect	intcode_body
  4937  000F78                     __pintcode_body:
  4938                           	opt callstack 24
  4939  000F78                     int_func:
  4940                           	opt callstack 24
  4941  000F78  0006               	pop		; remove dummy address from shadow register refresh
  4942  000F7A  924A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4943  000F7C  0011               	retfie		f
  4944  000F7E                     __end_of_ISR_high:
  4945                           	opt callstack 0
  4946  0000                     
  4947                           	psect	rparam
  4948  0000                     
  4949                           	psect	temp
  4950  00004A                     btemp:
  4951                           	opt callstack 0
  4952  00004A                     	ds	1
  4953  0000                     int$flags	set	btemp
  4954  0000                     wtemp8	set	btemp+1
  4955  0000                     ttemp5	set	btemp+1
  4956  0000                     ttemp6	set	btemp+4
  4957  0000                     ttemp7	set	btemp+8
  4958                           tosu	equ	0xFFF
  4959                           tosh	equ	0xFFE
  4960                           tosl	equ	0xFFD
  4961                           stkptr	equ	0xFFC
  4962                           pclatu	equ	0xFFB
  4963                           pclath	equ	0xFFA
  4964                           pcl	equ	0xFF9
  4965                           tblptru	equ	0xFF8
  4966                           tblptrh	equ	0xFF7
  4967                           tblptrl	equ	0xFF6
  4968                           tablat	equ	0xFF5
  4969                           prodh	equ	0xFF4
  4970                           prodl	equ	0xFF3
  4971                           indf0	equ	0xFEF
  4972                           postinc0	equ	0xFEE
  4973                           postdec0	equ	0xFED
  4974                           preinc0	equ	0xFEC
  4975                           plusw0	equ	0xFEB
  4976                           fsr0h	equ	0xFEA
  4977                           fsr0l	equ	0xFE9
  4978                           wreg	equ	0xFE8
  4979                           indf1	equ	0xFE7
  4980                           postinc1	equ	0xFE6
  4981                           postdec1	equ	0xFE5
  4982                           preinc1	equ	0xFE4
  4983                           plusw1	equ	0xFE3
  4984                           fsr1h	equ	0xFE2
  4985                           fsr1l	equ	0xFE1
  4986                           bsr	equ	0xFE0
  4987                           indf2	equ	0xFDF
  4988                           postinc2	equ	0xFDE
  4989                           postdec2	equ	0xFDD
  4990                           preinc2	equ	0xFDC
  4991                           plusw2	equ	0xFDB
  4992                           fsr2h	equ	0xFDA
  4993                           fsr2l	equ	0xFD9
  4994                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        7
    BSS         114
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     37      73
    BANK0           160      0      85
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    FRAME_AdressOfNeighbors@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_AnalogValue@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_SoftwareVersion@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_MapPosition@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_HandleCanFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_Plot@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_DeviceReset@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_AxisStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_AveragingTimes@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_ExcitationMultiplier@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_ExcitationValue@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_AccelerometerStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_SensorExcitationStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_GenID@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_TakeFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_SendFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_MoveBuffIntoFrame@Buf	PTR unsigned char  size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), RXB0D0(SFR_3[1]), 

    CAN_MoveBuffIntoFrame@Ram	PTR unsigned char  size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), RXB0D0(SFR_3[1]), 


Critical Paths under _main in COMRAM

    _main->_TRM_DataTransmition
    _TRM_DataTransmition->_FRAME_HandleCanFrame
    _FRAME_HandleCanFrame->_CAN_SendFrame
    _LED_Error->_LED_Control
    _CAN_SendFrame->_CAN_MoveBuffIntoFrame
    _CAN_TakeFrame->___awdiv
    _LED_Update->_LED_Light_Pos
    _LED_Light_Pos->___lwdiv
    _INI_LED_Start->_LED_Control

Critical Paths under _ISR_low in COMRAM

    _ISR_low->_TMR1_Timer_reset
    _ISR_low->i1_TMR1_Update_flag_Set

Critical Paths under _ISR_high in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR_low in BANK0

    None.

Critical Paths under _ISR_high in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_low in BANK1

    None.

Critical Paths under _ISR_high in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_low in BANK2

    None.

Critical Paths under _ISR_high in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_low in BANK3

    None.

Critical Paths under _ISR_high in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_low in BANK4

    None.

Critical Paths under _ISR_high in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_low in BANK5

    None.

Critical Paths under _ISR_high in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_low in BANK6

    None.

Critical Paths under _ISR_high in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_low in BANK7

    None.

Critical Paths under _ISR_high in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_low in BANK8

    None.

Critical Paths under _ISR_high in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_low in BANK9

    None.

Critical Paths under _ISR_high in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_low in BANK10

    None.

Critical Paths under _ISR_high in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_low in BANK11

    None.

Critical Paths under _ISR_high in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_low in BANK12

    None.

Critical Paths under _ISR_high in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   12512
                            _INI_All
                         _LED_Update
               _TMR1_Update_flag_Get
               _TMR1_Update_flag_Set
                _TRM_DataTransmition
 ---------------------------------------------------------------------------------
 (1) _TRM_DataTransmition                                 18    18      0    7729
                                             20 COMRAM    17    17      0
                      _CAN_TakeFrame
               _FRAME_HandleCanFrame
 ---------------------------------------------------------------------------------
 (2) _FRAME_HandleCanFrame                                 5     3      2    5812
                                             15 COMRAM     5     3      2
                          _CAN_GenID
                      _CAN_SendFrame
          _FRAME_AccelerometerStatus
            _FRAME_AdressOfNeighbors
                  _FRAME_AnalogValue
               _FRAME_AveragingTimes
                   _FRAME_AxisStatus
                  _FRAME_DeviceReset
         _FRAME_ExcitationMultiplier
              _FRAME_ExcitationValue
                  _FRAME_MapPosition
                         _FRAME_Plot
       _FRAME_SensorExcitationStatus
              _FRAME_SoftwareVersion
                          _LED_Error
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) _LED_Error                                            0     0      0    1000
                        _LED_Control
 ---------------------------------------------------------------------------------
 (3) _FRAME_SoftwareVersion                                2     0      2     103
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_SensorExcitationStatus                         3     1      2     323
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_Plot                                           2     0      2     147
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_MapPosition                                    2     0      2     103
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_ExcitationValue                                3     1      2     169
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_ExcitationMultiplier                           5     3      2     215
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_DeviceReset                                    3     1      2     213
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AxisStatus                                     5     3      2     169
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AveragingTimes                                 3     1      2     169
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AnalogValue                                    6     2      4     206
                                              5 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _FRAME_AdressOfNeighbors                              6     2      4     206
                                              5 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _FRAME_AccelerometerStatus                            3     1      2     169
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _CAN_SendFrame                                        5     3      2     891
                                             10 COMRAM     5     3      2
              _CAN_MoveBuffIntoFrame
 ---------------------------------------------------------------------------------
 (3) _CAN_GenID                                            5     2      3     360
                                              5 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (2) _CAN_TakeFrame                                        6     4      2    1622
                                             13 COMRAM     6     4      2
              _CAN_MoveBuffIntoFrame
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     612
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _CAN_MoveBuffIntoFrame                                5     1      4     546
                                              5 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) _TMR1_Update_flag_Set                                 2     0      2     202
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR1_Update_flag_Get                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _LED_Update                                           0     0      0    3581
                           _LED_Left
                      _LED_Light_Pos
                          _LED_Right
 ---------------------------------------------------------------------------------
 (2) _LED_Light_Pos                                       11     7      4    2853
                                             12 COMRAM    11     7      4
                        _LED_Control
                           _LED_Left
                          _LED_Right
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     368
                                              5 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _LED_Right                                            6     4      2     364
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _LED_Left                                             4     2      2     364
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _INI_All                                              0     0      0    1000
                          _CAN_Setup
                _INI_GlobalInterrupt
                      _INI_LED_Start
                         _INI_OUTPUT
                          _INI_Timer
 ---------------------------------------------------------------------------------
 (2) _INI_Timer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INI_OUTPUT                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INI_LED_Start                                        0     0      0    1000
                        _LED_Control
 ---------------------------------------------------------------------------------
 (4) _LED_Control                                          5     3      2    1000
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _INI_GlobalInterrupt                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CAN_Setup                                            1     1      0       0
                                              5 COMRAM     1     1      0
                     _CAN_SetupClock
                      _CAN_SetupMask
 ---------------------------------------------------------------------------------
 (3) _CAN_SetupMask                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CAN_SetupClock                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR_low                                              3     3      0      76
                                              2 COMRAM     3     3      0
                   _TMR1_Timer_reset
             i1_TMR1_Update_flag_Set
 ---------------------------------------------------------------------------------
 (6) i1_TMR1_Update_flag_Set                               2     0      2      48
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_Timer_reset                                     2     2      0      28
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR_high                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _INI_All
     _CAN_Setup
       _CAN_SetupClock
       _CAN_SetupMask
     _INI_GlobalInterrupt
     _INI_LED_Start
       _LED_Control
     _INI_OUTPUT
     _INI_Timer
   _LED_Update
     _LED_Left
     _LED_Light_Pos
       _LED_Control
       _LED_Left
       _LED_Right
       ___lwdiv
     _LED_Right
   _TMR1_Update_flag_Get
   _TMR1_Update_flag_Set
   _TRM_DataTransmition
     _CAN_TakeFrame
       _CAN_MoveBuffIntoFrame
       ___awdiv
     _FRAME_HandleCanFrame
       _CAN_GenID
       _CAN_SendFrame
         _CAN_MoveBuffIntoFrame
       _FRAME_AccelerometerStatus
       _FRAME_AdressOfNeighbors
       _FRAME_AnalogValue
       _FRAME_AveragingTimes
       _FRAME_AxisStatus
       _FRAME_DeviceReset
       _FRAME_ExcitationMultiplier
       _FRAME_ExcitationValue
       _FRAME_MapPosition
       _FRAME_Plot
       _FRAME_SensorExcitationStatus
       _FRAME_SoftwareVersion
       _LED_Error
         _LED_Control
       ___awdiv

 _ISR_low (ROOT)
   _TMR1_Timer_reset
   i1_TMR1_Update_flag_Set

 _ISR_high (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      55       5       53.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     25      49       1       77.7%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      9E      20        0.0%
DATA                 0      0      9E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Jul 15 12:27:52 2019

            __end_of_FRAME_DeviceReset 0AE4                  ?_FRAME_AveragingTimes 0006  
                         ___awdiv@sign 000B                                     bsr 000FE0  
                          __CFG_BORV$3 000000                      ?_FRAME_AxisStatus 0006  
                    _FRAME_MapPosition 0F80                           __CFG_CP0$OFF 000000  
                         __CFG_CP1$OFF 000000                           __CFG_CP2$OFF 000000  
                         __CFG_CP3$OFF 000000                     __size_of_CAN_GenID 007C  
                                  l190 0080                                    l191 0086  
                                  l192 008C                                    l193 0092  
                                  l177 04CC                                    l194 0098  
                                  l186 006E                                    l178 04CA  
                                  l187 00DE                                    l188 0074  
                                  l460 04A2                                    l189 007A  
                                  l296 06C6                            ?_LED_Update 0001  
                         __CFG_CPB$OFF 000000                     ??_FRAME_AxisStatus 0008  
                         __CFG_CPD$OFF 000000                                    u965 053A  
                   ?_FRAME_MapPosition 0006                     __size_of_CAN_Setup 005C  
                         ?_LED_Control 0006                                    wreg 000FE8  
                __end_of_CAN_TakeFrame 02DC                            ?_INI_OUTPUT 0001  
               __size_of_INI_LED_Start 0034                  __end_of_CAN_SendFrame 061E  
                         __CFG_LVP$OFF 000000              TRM_DataTransmition@weWyU8 0040  
         __size_of_INI_GlobalInterrupt 000E                    ??_FRAME_MapPosition 0008  
                         __CFG_WDT$OFF 000000                                   l2012 0640  
                                 l1044 0BD8                                   l2102 0736  
                                 l2030 0670                                   l2006 0630  
                                 l2120 0768                                   l2024 0660  
                                 l2114 0756                                   l2042 0690  
                                 l2018 0650                                   l2202 0618  
                                 l2108 0746                                   l2060 06C0  
                                 l2036 0680                                   l2054 06B0  
                                 l2222 0C64                                   l2310 0908  
                                 l2302 08EA                                   l2072 06E6  
                                 l2048 06A0                                   l2320 0928  
                                 l2400 01CC                                   l2090 0716  
                                 l2066 06D6                                   l2402 01D4  
                                 l2410 01EC                                   l2084 0706  
                                 l2340 0BAE                                   l2308 0900  
                                 l2324 0932                                   l2420 025C  
                                 l2404 01DC                                   l2412 022C  
                                 l2078 06F6                                   l2238 0CF0  
                                 l2350 0BCE                                   l2430 0280  
                                 l2422 0262                                   l2406 01E4  
                                 l2510 033C                                   l2502 0304  
                                 l2096 0726                                   l2328 0940  
                                 l2432 0288                                   l2424 0268  
                                 l2440 02D8                                   l2416 0230  
                                 l2520 0382                                   l2512 034A  
                                 l2504 0312                                   l2370 0A7E  
                                 l2338 0BA6                                   l2434 0290  
                                 l2426 0270                                   l2418 024A  
                                 l2266 0C0E                                   l2522 0390  
                                 l2514 0358                                   l2506 0320  
                                 l2530 0428                        __end_of_INI_All 0F2C  
                                 l2356 0A34                                   l2428 0278  
                                 l2284 0AC2                                   l2524 03AA  
                                 l2516 0366                                   l2508 032E  
                                 l2438 0298                                   l2198 0564  
                                 l2542 04AA                                   l2518 0374  
                                 l2480 07DC                                   l2472 07A6  
                                 l2296 08DA                                   l2392 01B0  
                                 l2376 009E                                   l2528 03C4  
                                 l2608 0E16                                   l2394 01B6  
                                 l2618 0E36                                   l2396 01BC  
                                 l2478 07D2                                   l2486 0808  
                                 l2398 01C4                                   l2578 0B0E  
                                 l1992 0E42                                   _BIE0 000DFA  
                                 u1110 090C                                   u1040 0C1E  
                                 u1205 0148                                   u1150 0BB2  
                                 u1320 0B2C                                   u1250 0810  
                                 _LATA 000F89                                   _LATB 000F8A  
                                 _LATC 000F8B                                   _LATD 000F8C  
                                 _LATE 000F8D                                   _IPR3 000FA5  
                                 _IPEN 007E87                                   _PIE3 000FA3  
                                 _PEIE 007F96                                   _PIR3 000FA4  
                                 _RCON 000FD0            ??_FRAME_AccelerometerStatus 0008  
                      __end_of_ISR_low 005C                       LED_Control@diode 0006  
                 FRAME_AnalogValue@set 0008                                   _main 0E10  
                     LED_Control@color 000A                                   fsr2h 000FDA  
                                 indf1 000FE7                                   indf2 000FDF  
                                 fsr1l 000FE1                                   fsr2l 000FD9  
                                 btemp 004A                         _CAN_SetupClock 0E68  
                                 prodl 000FF3                  __end_of_CAN_SetupMask 0A30  
        __size_of_TMR1_Update_flag_Get 000A                                   start 005C  
        __size_of_TMR1_Update_flag_Set 000A                     __size_of_LED_Error 001E  
                        __CFG_IESO$OFF 000000                     __size_of_LED_Right 004C  
        __size_of_FRAME_HandleCanFrame 01D4                          _LED_Light_Pos 0770  
                        __CFG_MCLRE$ON 000000                           ___param_bank 000000  
    FRAME_HandleCanFrame@identyfikator 0014                     __size_of_INI_Timer 0018  
            __end_of_FRAME_MapPosition 0F82                       __end_of_LED_Left 0D04  
                                _B0CON 000E20                                  _B1CON 000E30  
                                _B2CON 000E40                                  _B3CON 000E50  
                                _B4CON 000E60                                  _B5CON 000E70  
                                ?_main 0001                        __end_of___awdiv 094A  
                                _BSEL0 000DF8                        ___awdiv@divisor 0008  
                                _T1CON 000FCD                                  _IRCF0 007E9C  
                                _IRCF1 007E9D      FRAME_ExcitationMultiplier@message 0006  
                                _IRCF2 007E9E                        __end_of___lwdiv 0BE2  
                                i1l525 004C                    __size_of_FRAME_Plot 0022  
                      ___awdiv@counter 000A                                  _MSEL0 000DF0  
                                _MSEL1 000DF1                                  _MSEL2 000DF2  
                                _MSEL3 000DF3                                  _TMR1H 000FCF  
                                _TMR1L 000FCE                                  _TRISA 000F92  
                                _TRISB 000F93                                  _TRISC 000F94  
                                _TRISD 000F95                                  _TRISE 000F96  
                        __CFG_PWRT$OFF 000000                 ?_CAN_MoveBuffIntoFrame 0006  
                        __CFG_WRT0$OFF 000000             __size_of_FRAME_AnalogValue 0002  
                        __CFG_WRT1$OFF 000000                          __CFG_WRT2$OFF 000000  
                        __CFG_WRT3$OFF 000000                         __CFG_EBTR0$OFF 000000  
                       __CFG_FCMEN$OFF 000000                         __CFG_EBTR1$OFF 000000  
                       __CFG_EBTR2$OFF 000000                         __CFG_EBTR3$OFF 000000  
                     __end_of_ISR_high 0F7E                          __CFG_WRTB$OFF 000000  
                        __CFG_WRTC$OFF 000000                          __CFG_WRTD$OFF 000000  
                       __CFG_EBTRB$OFF 000000                i1TMR1_Update_flag_Set@a 0001  
                                tablat 000FF5                 __end_of_CAN_SetupClock 0E90  
                                plusw2 000FDB                                  ttemp5 004B  
                                ttemp6 004E                                  ttemp7 0052  
                                status 000FD8                                  wtemp8 004B  
                    __end_of_CAN_GenID 09C6                         __CFG_PBADEN$ON 000000  
                  __size_of_LED_Update 0056                         ?_LED_Light_Pos 000D  
                     _TMR1_Timer_reset 0E90                      __end_of_CAN_Setup 0A8C  
                        _INI_LED_Start 0DDC                  _FRAME_ExcitationValue 0D04  
     FRAME_AccelerometerStatus@message 0006                        __initialization 0C7C  
                  __size_of_INI_OUTPUT 001E                       CAN_GenID@frameID 0008  
                         __end_of_main 0E3E                 ??_FRAME_AveragingTimes 0008  
           __size_of_FRAME_DeviceReset 0058               ?_FRAME_AdressOfNeighbors 0006  
                     CAN_GenID@message 0006              _FRAME_AccelerometerStatus 0DA6  
                               ??_main 0026                 CAN_MoveBuffIntoFrame@i 000A  
                        __activetblptr 000002                       _TMR1_Update_flag 003B  
                            ??_INI_All 000B                      __end_of_LED_Error 0EF4  
                    __end_of_LED_Right 0C7C                              ??_ISR_low 0003  
                               _CANCON 000F6F                       ___awdiv@dividend 0006  
          FRAME_ExcitationMultiplier@i 0009                                 _CIOCON 000F73  
                      __CFG_BBSIZ$1024 000000                      __end_of_INI_Timer 0F44  
                               i1l2634 004A                        ?_CAN_SetupClock 0001  
                               _RXB0D0 000F66                                 _TMR1IE 007CE8  
                               _TMR1IF 007CF0                                 _TMR1IP 007CF8  
                               _TMR1ON 007E68           ??_FRAME_ExcitationMultiplier 0008  
                       ?_INI_LED_Start 0001                         __CFG_XINST$OFF 000000  
                            ??___awdiv 000A                         __CFG_STVREN$ON 000000  
                     LED_Light_Pos@pos 000D             __size_of_FRAME_MapPosition 0002  
                            ??___lwdiv 000A                                 clear_0 0CA2  
                               clear_1 0CAE                       ___awdiv@quotient 000C  
             ??i1_TMR1_Update_flag_Set 0003                        __CFG_BOREN$BOHW 000000  
                         __pdataCOMRAM 0043                                 tblptrh 000FF7  
                               tblptrl 000FF6                                 tblptru 000FF8  
  __size_of_FRAME_ExcitationMultiplier 004E                   __size_of_LED_Control 0152  
             FRAME_MapPosition@message 0006                  TMR1_Update_flag_Set@a 0006  
                           __accesstop 0060                __end_of__initialization 0CB4  
                         ??_FRAME_Plot 0008                    ISR_low@ramkaStanuU8 0041  
                            ?_LED_Left 0006                        ??_LED_Light_Pos 0011  
                        ___rparam_used 000001                 ?_FRAME_ExcitationValue 0006  
      __end_of_FRAME_AdressOfNeighbors 0F86                         __pcstackCOMRAM 0001  
                            LED_Left@a 0006                              LED_Left@b 0008  
                  _INI_GlobalInterrupt 0F44                              ?_ISR_high 0001  
                         ??_LED_Update 0018            __end_of_TRM_DataTransmition 0B3A  
                _FRAME_SoftwareVersion 0F7E                     __end_of_FRAME_Plot 0ED6  
                         ??_INI_OUTPUT 0006                FRAME_AxisStatus@message 0006  
                 ?_INI_GlobalInterrupt 0001              __size_of_FRAME_AxisStatus 0036  
                           __pbssBANK0 0060                        ??_INI_LED_Start 000B  
                           ??_LED_Left 0008                     __end_of_LED_Update 0B90  
                   __end_of_INI_OUTPUT 0F12                             ??_ISR_high 0001  
                  TMR1_Timer_reset@t1H 0002                    TMR1_Timer_reset@t1L 0001  
                              _ECANCON 000F77                                _CANSTAT 000F6E  
              ??_CAN_MoveBuffIntoFrame 000A           __end_of_TMR1_Update_flag_Get 0F66  
         __end_of_TMR1_Update_flag_Set 0F5C        __size_ofi1_TMR1_Update_flag_Set 000A  
         __end_of_FRAME_HandleCanFrame 04B0                                _INI_All 0F12  
             __end_of_TMR1_Timer_reset 0EB4                                _RXB0DLC 000F65  
                              _RXB0CON 000F60                                _RXB1CON 000F50  
                ??_INI_GlobalInterrupt 0006                                _TXB0CON 000F40  
                              _ISR_low 0018                                _RXFCON0 000DD4  
                              _DaneCan 0037     __end_of_FRAME_ExcitationMultiplier 0C30  
           _FRAME_ExcitationMultiplier 0BE2            FRAME_HandleCanFrame@message 0010  
                              __Hparam 0000                                __Lparam 0000  
               __size_of_CAN_TakeFrame 027C                              _CAN_GenID 094A  
                              ___awdiv 08C6                              _CAN_Setup 0A30  
               __size_of_CAN_SendFrame 016E                                ___lwdiv 0B90  
                    LED_Light_Pos@pos2 0014                                __pcinit 0C7C  
                              __ramtop 0D00                                __ptext0 0E10  
                              __ptext1 0AE4                                __ptext2 02DC  
                              __ptext3 0ED6                                __ptext4 0F7E  
                              __ptext5 0820                                __ptext6 0EB4  
                              __ptext7 0F80                                __ptext8 0D04  
                              __ptext9 0BE2                 ?_FRAME_SoftwareVersion 0006  
               __size_of_CAN_SetupMask 006A         FRAME_AdressOfNeighbors@nrRamki 0008  
     __size_of_FRAME_AdressOfNeighbors 0002                       ??_CAN_SetupClock 0006  
       FRAME_AdressOfNeighbors@message 0006                              _LED_Error 0ED6  
                       __pintcode_body 0F78                              _LED_Right 0C30  
                 end_of_initialization 0CB4                          __Lmediumconst 0000  
                              int_func 0F78                              _INI_Timer 0F2C  
               i1_TMR1_Update_flag_Set 0F66       TRM_DataTransmition@czujnikWeWyU8 003F  
                           ?_CAN_GenID 0006                                postdec1 000FE5  
                              postdec2 000FDD                                postinc0 000FEE  
                              postinc2 000FDE                             ?_CAN_Setup 0001  
        __size_of_FRAME_AveragingTimes 0036                   CAN_SendFrame@message 000B  
                        LED_Update@Red 0042                          _CAN_TakeFrame 0060  
                        _CAN_SendFrame 04B0                             ?_LED_Error 0001  
                           ?_LED_Right 0006                       _FRAME_AxisStatus 0D3A  
              ??_FRAME_ExcitationValue 0008                             ?_INI_Timer 0001  
                      _ramkaCanRxKarty 0060                   _TMR1_Update_flag_Get 0F5C  
                      _ramkaCanTxKarty 0026                   _TMR1_Update_flag_Set 0F52  
                        _CAN_SetupMask 09C6                      __size_of_LED_Left 0042  
                 _FRAME_HandleCanFrame 02DC                         CAN_TakeFrame@k 0013  
                        __pidataCOMRAM 0F70                      __size_of_ISR_high 0F76  
                           LED_Right@a 0006                             LED_Right@b 000A  
                        ??_LED_Control 0008                    start_initialization 0C7C  
                       ?_CAN_TakeFrame 000E                         ?_CAN_SendFrame 000B  
                     __CFG_OSC$IRCIO67 000000                  ?_TMR1_Update_flag_Get 0006  
                ?_TMR1_Update_flag_Set 0006                         ?_CAN_SetupMask 0001  
                __end_of_LED_Light_Pos 0820                  ?_FRAME_HandleCanFrame 0010  
                          ??_CAN_GenID 0009                            ??_CAN_Setup 0006  
                     __CFG_LPT1OSC$OFF 000000               CAN_MoveBuffIntoFrame@Buf 0008  
 __end_of_FRAME_SensorExcitationStatus 08C6  __size_of_FRAME_SensorExcitationStatus 00A6  
             CAN_MoveBuffIntoFrame@Ram 0006           _FRAME_SensorExcitationStatus 0820  
       __size_of_CAN_MoveBuffIntoFrame 002A          __end_of_CAN_MoveBuffIntoFrame 0E68  
                      _Fulfillment_Lvl 0047                            __pbssCOMRAM 0026  
                             ?_INI_All 0001                _FRAME_AdressOfNeighbors 0F84  
                    ?_TMR1_Timer_reset 0001                            _BRGCON1bits 000F70  
                          _BRGCON2bits 000F71                            _BRGCON3bits 000F72  
                             ?_ISR_low 0001                     ??_TMR1_Timer_reset 0001  
                          ??_LED_Error 000B                            ??_LED_Right 0008  
         __size_of_TRM_DataTransmition 0056                    __end_of_LED_Control 0770  
          ?_FRAME_ExcitationMultiplier 0006                            ??_INI_Timer 0006  
                __end_of_INI_LED_Start 0E10                       ___lwdiv@dividend 0006  
                            __pintcode 0008                               ?___awdiv 0006  
              ??_FRAME_SoftwareVersion 0008                               ?___lwdiv 0006  
                    FRAME_Plot@message 0006                            __pintcodelo 0018  
          __end_of_INI_GlobalInterrupt 0F52                        ??_CAN_TakeFrame 0010  
        ?_FRAME_SensorExcitationStatus 0006                            _COMSTATbits 000F74  
                      ??_CAN_SendFrame 000D                       ___lwdiv@quotient 000A  
              ?i1_TMR1_Update_flag_Set 0001            FRAME_AveragingTimes@message 0006  
               ??_TMR1_Update_flag_Get 0008                 ??_TMR1_Update_flag_Set 0008  
                      ??_CAN_SetupMask 0006                               _LED_Left 0CC2  
               ??_FRAME_HandleCanFrame 0012                   CAN_TakeFrame@message 000E  
                 CAN_TakeFrame@tempCON 0012                               _RXB0EIDH 000F63  
                             _RXB0EIDL 000F64                               _RCONbits 000FD0  
                     __CFG_WDTPS$32768 000000                               _RXB0SIDH 000F61  
                             _RXB0SIDL 000F62                               _RXF0EIDH 000F02  
                             _RXF0EIDL 000F03                               _RXF1EIDH 000F06  
                             _RXF1EIDL 000F07                               _RXF2EIDH 000F0A  
                             _RXF2EIDL 000F0B                               _RXF0SIDH 000F00  
                             _RXF0SIDL 000F01                               _RXF1SIDH 000F04  
                             _RXF1SIDL 000F05                               _RXF2SIDH 000F08  
                             _RXF2SIDL 000F09                               _ISR_high 0008  
                             _RXM0EIDH 000F1A                               _RXM0EIDL 000F1B  
                             _RXM1EIDH 000F1E                               _RXM1EIDL 000F1F  
                             _RXM0SIDH 000F18                               _RXM0SIDL 000F19  
                             _RXM1SIDH 000F1C                               _RXM1SIDL 000F1D  
             __end_of_FRAME_AxisStatus 0D70              ??_FRAME_AdressOfNeighbors 000A  
                     _DetectorLedRadar 003D                            _LED_Control 061E  
                     __size_of_INI_All 001A           FRAME_ExcitationValue@message 0006  
       __end_ofi1_TMR1_Update_flag_Set 0F70                              copy_data0 0C90  
                     __size_of_ISR_low 0044     __size_of_FRAME_AccelerometerStatus 0036  
         __end_of_FRAME_AveragingTimes 0DA6             ?_FRAME_AccelerometerStatus 0006  
       __size_of_FRAME_ExcitationValue 0036          __end_of_FRAME_ExcitationValue 0D3A  
                             __Hrparam 0000                           _RXB0SIDLbits 000F62  
                             __Lrparam 0000                       __size_of___awdiv 0084  
                     __size_of___lwdiv 0052                     LED_Light_Pos@flage 0016  
                   LED_Light_Pos@color 0011                           _RXF0SIDLbits 000F01  
             FRAME_AnalogValue@message 0006                        ___lwdiv@divisor 0008  
                         _RXF1SIDLbits 000F05                        ___lwdiv@counter 000C  
                             __ptext10 0A8C                               __ptext11 0D3A  
                             __ptext20 0E3E                               __ptext12 0D70  
                             __ptext21 0F52                               __ptext13 0F82  
                             __ptext30 0EF4                               __ptext22 0F5C  
                             __ptext14 0F84                               __ptext31 0DDC  
                             __ptext23 0B3A                               __ptext15 0DA6  
                             __ptext32 061E                               __ptext24 0770  
                             __ptext16 04B0                               __ptext33 0F44  
                             __ptext25 0B90                               __ptext17 094A  
                             __ptext34 0A30                               __ptext26 0C30  
                             __ptext18 0060                               __ptext35 09C6  
                             __ptext27 0CC2                               __ptext19 08C6  
                             __ptext36 0E68                               __ptext28 0F12  
       ??_FRAME_SensorExcitationStatus 0008                               __ptext29 0F2C  
                             __ptext38 0F66                               __ptext39 0E90  
        TRM_DataTransmition@canMessage 0015                           _RXF2SIDLbits 000F09  
             FRAME_DeviceReset@message 0006      __end_of_FRAME_AccelerometerStatus 0DDC  
                           _FRAME_Plot 0EB4                          __size_of_main 002E  
              __size_of_CAN_SetupClock 0028                               int$flags 004A  
                  _TRM_DataTransmition 0AE4                            _RXB0DLCbits 000F65  
                           _LED_Update 0B3A                            _RXB0CONbits 000F60  
                           _INTCONbits 000FF2                             _INI_OUTPUT 0EF4  
                    _FRAME_AnalogValue 0F82                   ?_TRM_DataTransmition 0001  
         FRAME_SoftwareVersion@message 0006                               intlevel1 0000  
                             intlevel2 0000                     ?_FRAME_AnalogValue 0006  
  FRAME_SensorExcitationStatus@message 0006                            _TXB0CONbits 000F40  
                  ??_FRAME_AnalogValue 000A              __size_of_TMR1_Timer_reset 0024  
             LED_Light_Pos@fulfillment 000F                   _FRAME_AveragingTimes 0D70  
       __size_of_FRAME_SoftwareVersion 0002                      _FRAME_DeviceReset 0A8C  
        __end_of_FRAME_SoftwareVersion 0F80                     ?_FRAME_DeviceReset 0006  
                      LED_Update@Green 0049              __end_of_FRAME_AnalogValue 0F84  
               __size_of_LED_Light_Pos 00B0                  _CAN_MoveBuffIntoFrame 0E3E  
                           _WDTCONbits 000FD1                    ??_FRAME_DeviceReset 0008  
                ??_TRM_DataTransmition 0015                 LED_Light_Pos@LED_array 0012  
                       LED_Update@pos1 0045                         LED_Update@pos2 0043  
                          ?_FRAME_Plot 0006  
