

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Jul 15 16:29:09 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4680
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	text40,global,reloc=2,class=CODE,delta=1
    52                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    53                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    54                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    55                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    56                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    57  0000                     
    58                           ; Version 2.05
    59                           ; Generated 20/12/2018 GMT
    60                           ; 
    61                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    62                           ; All rights reserved.
    63                           ; 
    64                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    65                           ; 
    66                           ; Redistribution and use in source and binary forms, with or without modification, are
    67                           ; permitted provided that the following conditions are met:
    68                           ; 
    69                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    70                           ;        conditions and the following disclaimer.
    71                           ; 
    72                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    73                           ;        of conditions and the following disclaimer in the documentation and/or other
    74                           ;        materials provided with the distribution.
    75                           ; 
    76                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    77                           ;        software without specific prior written permission.
    78                           ; 
    79                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    80                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    81                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    82                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    83                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    84                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    85                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    86                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    87                           ; 
    88                           ; 
    89                           ; Code-generator required, PIC18F4680 Definitions
    90                           ; 
    91                           ; SFR Addresses
    92  0000                     
    93                           	psect	idataCOMRAM
    94  000F44                     __pidataCOMRAM:
    95                           	opt callstack 0
    96                           
    97                           ;initializer for LED_Update@pos2
    98  000F44  0001               	dw	1
    99                           
   100                           ;initializer for LED_Update@pos1
   101  000F46  0001               	dw	1
   102                           
   103                           ;initializer for _Fulfillment_Lvl
   104  000F48  0014               	dw	20
   105                           
   106                           ;initializer for LED_Update@Green
   107  000F4A  01                 	db	1
   108  0000                     _RXFCON0	set	3540
   109  0000                     _MSEL3	set	3571
   110  0000                     _MSEL2	set	3570
   111  0000                     _MSEL1	set	3569
   112  0000                     _MSEL0	set	3568
   113  0000                     _BIE0	set	3578
   114  0000                     _BSEL0	set	3576
   115  0000                     _B5CON	set	3696
   116  0000                     _B4CON	set	3680
   117  0000                     _B3CON	set	3664
   118  0000                     _B2CON	set	3648
   119  0000                     _B1CON	set	3632
   120  0000                     _B0CON	set	3616
   121  0000                     _TXB0CONbits	set	3904
   122  0000                     _RXF2EIDL	set	3851
   123  0000                     _RXF2EIDH	set	3850
   124  0000                     _RXF2SIDLbits	set	3849
   125  0000                     _RXF2SIDL	set	3849
   126  0000                     _RXF2SIDH	set	3848
   127  0000                     _RXF1EIDL	set	3847
   128  0000                     _RXF1EIDH	set	3846
   129  0000                     _RXF1SIDLbits	set	3845
   130  0000                     _RXF1SIDL	set	3845
   131  0000                     _RXF1SIDH	set	3844
   132  0000                     _RXF0EIDL	set	3843
   133  0000                     _RXF0EIDH	set	3842
   134  0000                     _RXF0SIDLbits	set	3841
   135  0000                     _RXF0SIDL	set	3841
   136  0000                     _RXF0SIDH	set	3840
   137  0000                     _RXM1EIDL	set	3871
   138  0000                     _RXM1EIDH	set	3870
   139  0000                     _RXM1SIDL	set	3869
   140  0000                     _RXM1SIDH	set	3868
   141  0000                     _RXM0EIDL	set	3867
   142  0000                     _RXM0EIDH	set	3866
   143  0000                     _RXM0SIDL	set	3865
   144  0000                     _RXM0SIDH	set	3864
   145  0000                     _RXB1CON	set	3920
   146  0000                     _TXB0CON	set	3904
   147  0000                     _INTCONbits	set	4082
   148  0000                     _WDTCONbits	set	4049
   149  0000                     _RCONbits	set	4048
   150  0000                     _TRISC	set	3988
   151  0000                     _LATC	set	3979
   152  0000                     _T1CON	set	4045
   153  0000                     _TMR1H	set	4047
   154  0000                     _TMR1L	set	4046
   155  0000                     _LATE	set	3981
   156  0000                     _LATA	set	3977
   157  0000                     _LATB	set	3978
   158  0000                     _LATD	set	3980
   159  0000                     _TRISD	set	3989
   160  0000                     _TRISE	set	3990
   161  0000                     _TRISB	set	3987
   162  0000                     _TRISA	set	3986
   163  0000                     _RXB0DLCbits	set	3941
   164  0000                     _RXB0DLC	set	3941
   165  0000                     _RXB0SIDH	set	3937
   166  0000                     _RXB0SIDLbits	set	3938
   167  0000                     _RXB0SIDL	set	3938
   168  0000                     _RXB0EIDH	set	3939
   169  0000                     _RXB0EIDL	set	3940
   170  0000                     _COMSTATbits	set	3956
   171  0000                     _RXB0CONbits	set	3936
   172  0000                     _BRGCON3bits	set	3954
   173  0000                     _BRGCON2bits	set	3953
   174  0000                     _BRGCON1bits	set	3952
   175  0000                     _CIOCON	set	3955
   176  0000                     _ECANCON	set	3959
   177  0000                     _PIR3	set	4004
   178  0000                     _IPR3	set	4005
   179  0000                     _PIE3	set	4003
   180  0000                     _RXB0CON	set	3936
   181  0000                     _CANSTAT	set	3950
   182  0000                     _CANCON	set	3951
   183  0000                     _RCON	set	4048
   184  0000                     _RXB0D0	set	3942
   185  0000                     _TMR1IF	set	31984
   186  0000                     _TMR1IP	set	31992
   187  0000                     _PEIE	set	32662
   188  0000                     _IPEN	set	32391
   189  0000                     _TMR1ON	set	32360
   190  0000                     _TMR1IE	set	31976
   191  0000                     _IRCF0	set	32412
   192  0000                     _IRCF1	set	32413
   193  0000                     _IRCF2	set	32414
   194                           
   195                           ; #config settings
   196  0000                     
   197                           	psect	cinit
   198  000C32                     __pcinit:
   199                           	opt callstack 0
   200  000C32                     start_initialization:
   201                           	opt callstack 0
   202  000C32                     __initialization:
   203                           	opt callstack 0
   204                           
   205                           ; Initialize objects allocated to COMRAM (7 bytes)
   206                           ; load TBLPTR registers with __pidataCOMRAM
   207  000C32  0E44               	movlw	low __pidataCOMRAM
   208  000C34  6EF6               	movwf	tblptrl,c
   209  000C36  0E0F               	movlw	high __pidataCOMRAM
   210  000C38  6EF7               	movwf	tblptrh,c
   211  000C3A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   212  000C3C  6EF8               	movwf	tblptru,c
   213  000C3E  EE00  F043         	lfsr	0,__pdataCOMRAM
   214  000C42  EE10 F007          	lfsr	1,7
   215  000C46                     copy_data0:
   216  000C46  0009               	tblrd		*+
   217  000C48  CFF5 FFEE          	movff	tablat,postinc0
   218  000C4C  50E5               	movf	postdec1,w,c
   219  000C4E  50E1               	movf	fsr1l,w,c
   220  000C50  E1FA               	bnz	copy_data0
   221                           
   222                           ; Clear objects allocated to BANK0 (85 bytes)
   223  000C52  EE00  F060         	lfsr	0,__pbssBANK0
   224  000C56  0E55               	movlw	85
   225  000C58                     clear_0:
   226  000C58  6AEE               	clrf	postinc0,c
   227  000C5A  06E8               	decf	wreg,f,c
   228  000C5C  E1FD               	bnz	clear_0
   229                           
   230                           ; Clear objects allocated to COMRAM (29 bytes)
   231  000C5E  EE00  F026         	lfsr	0,__pbssCOMRAM
   232  000C62  0E1D               	movlw	29
   233  000C64                     clear_1:
   234  000C64  6AEE               	clrf	postinc0,c
   235  000C66  06E8               	decf	wreg,f,c
   236  000C68  E1FD               	bnz	clear_1
   237  000C6A                     end_of_initialization:
   238                           	opt callstack 0
   239  000C6A                     __end_of__initialization:
   240                           	opt callstack 0
   241  000C6A  904A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   242  000C6C  924A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   243  000C6E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   244  000C70  6EF8               	movwf	tblptru,c
   245  000C72  0100               	movlb	0
   246  000C74  EFE3  F006         	goto	_main	;jump to C main() function
   247                           
   248                           	psect	bssCOMRAM
   249  000026                     __pbssCOMRAM:
   250                           	opt callstack 0
   251  000026                     _ramkaCanTxKarty:
   252                           	opt callstack 0
   253  000026                     	ds	17
   254  000037                     _DaneCan:
   255                           	opt callstack 0
   256  000037                     	ds	4
   257  00003B                     _TMR1_Update_flag:
   258                           	opt callstack 0
   259  00003B                     	ds	2
   260  00003D                     _DetectorLedRadar:
   261                           	opt callstack 0
   262  00003D                     	ds	2
   263  00003F                     	ds	1
   264  000040                     	ds	1
   265  000041                     ISR_low@ramkaStanuU8:
   266                           	opt callstack 0
   267  000041                     	ds	1
   268  000042                     	ds	1
   269                           
   270                           	psect	dataCOMRAM
   271  000043                     __pdataCOMRAM:
   272                           	opt callstack 0
   273  000043                     LED_Update@pos2:
   274                           	opt callstack 0
   275  000043                     	ds	2
   276  000045                     LED_Update@pos1:
   277                           	opt callstack 0
   278  000045                     	ds	2
   279  000047                     _Fulfillment_Lvl:
   280                           	opt callstack 0
   281  000047                     	ds	2
   282  000049                     LED_Update@Green:
   283                           	opt callstack 0
   284  000049                     	ds	1
   285                           
   286                           	psect	bssBANK0
   287  000060                     __pbssBANK0:
   288                           	opt callstack 0
   289  000060                     _ramkaCanRxKarty:
   290                           	opt callstack 0
   291  000060                     	ds	85
   292                           
   293                           	psect	cstackCOMRAM
   294  000001                     __pcstackCOMRAM:
   295                           	opt callstack 0
   296  000001                     TMR1_Timer_reset@t1L:
   297                           	opt callstack 0
   298  000001                     i1TMR1_Update_flag_Set@a:
   299                           	opt callstack 0
   300                           
   301                           ; 2 bytes @ 0x0
   302  000001                     	ds	1
   303  000002                     TMR1_Timer_reset@t1H:
   304                           	opt callstack 0
   305                           
   306                           ; 1 bytes @ 0x1
   307  000002                     	ds	1
   308  000003                     ??_ISR_low:
   309  000003                     
   310                           ; 1 bytes @ 0x2
   311  000003                     	ds	3
   312  000006                     ??_CAN_Setup:
   313  000006                     ?_TMR1_Update_flag_Get:
   314                           	opt callstack 0
   315  000006                     ?_LED_Right:
   316                           	opt callstack 0
   317  000006                     ?_LED_Left:
   318                           	opt callstack 0
   319  000006                     ?___awdiv:
   320                           	opt callstack 0
   321  000006                     ?___lwdiv:
   322                           	opt callstack 0
   323  000006                     CAN_MoveBuffIntoFrame@Ram:
   324                           	opt callstack 0
   325  000006                     CAN_GenID@message:
   326                           	opt callstack 0
   327  000006                     LED_Right@a:
   328                           	opt callstack 0
   329  000006                     LED_Left@a:
   330                           	opt callstack 0
   331  000006                     LED_Control@diode:
   332                           	opt callstack 0
   333  000006                     TMR1_Update_flag_Set@a:
   334                           	opt callstack 0
   335  000006                     FRAME_SensorExcitationStatus@message:
   336                           	opt callstack 0
   337  000006                     FRAME_AccelerometerStatus@message:
   338                           	opt callstack 0
   339  000006                     FRAME_ExcitationValue@message:
   340                           	opt callstack 0
   341  000006                     FRAME_ExcitationMultiplier@message:
   342                           	opt callstack 0
   343  000006                     FRAME_AveragingTimes@message:
   344                           	opt callstack 0
   345  000006                     FRAME_AxisStatus@message:
   346                           	opt callstack 0
   347  000006                     FRAME_DeviceReset@message:
   348                           	opt callstack 0
   349  000006                     FRAME_Plot@message:
   350                           	opt callstack 0
   351  000006                     FRAME_MapPosition@message:
   352                           	opt callstack 0
   353  000006                     FRAME_SoftwareVersion@message:
   354                           	opt callstack 0
   355  000006                     FRAME_AnalogValue@message:
   356                           	opt callstack 0
   357  000006                     FRAME_AdressOfNeighbors@message:
   358                           	opt callstack 0
   359  000006                     ___awdiv@dividend:
   360                           	opt callstack 0
   361  000006                     ___lwdiv@dividend:
   362                           	opt callstack 0
   363                           
   364                           ; 2 bytes @ 0x5
   365  000006                     	ds	2
   366  000008                     ??_LED_Right:
   367  000008                     CAN_GenID@frameID:
   368                           	opt callstack 0
   369  000008                     CAN_MoveBuffIntoFrame@Buf:
   370                           	opt callstack 0
   371  000008                     LED_Left@b:
   372                           	opt callstack 0
   373  000008                     FRAME_AnalogValue@set:
   374                           	opt callstack 0
   375  000008                     FRAME_AdressOfNeighbors@nrRamki:
   376                           	opt callstack 0
   377  000008                     ___awdiv@divisor:
   378                           	opt callstack 0
   379  000008                     ___lwdiv@divisor:
   380                           	opt callstack 0
   381                           
   382                           ; 2 bytes @ 0x7
   383  000008                     	ds	1
   384  000009                     FRAME_ExcitationMultiplier@i:
   385                           	opt callstack 0
   386                           
   387                           ; 2 bytes @ 0x8
   388  000009                     	ds	1
   389  00000A                     CAN_MoveBuffIntoFrame@i:
   390                           	opt callstack 0
   391  00000A                     LED_Control@color:
   392                           	opt callstack 0
   393  00000A                     ___awdiv@counter:
   394                           	opt callstack 0
   395  00000A                     LED_Right@b:
   396                           	opt callstack 0
   397  00000A                     ___lwdiv@quotient:
   398                           	opt callstack 0
   399                           
   400                           ; 2 bytes @ 0x9
   401  00000A                     	ds	1
   402  00000B                     ___awdiv@sign:
   403                           	opt callstack 0
   404  00000B                     CAN_SendFrame@message:
   405                           	opt callstack 0
   406                           
   407                           ; 2 bytes @ 0xA
   408  00000B                     	ds	1
   409  00000C                     ___lwdiv@counter:
   410                           	opt callstack 0
   411  00000C                     ___awdiv@quotient:
   412                           	opt callstack 0
   413                           
   414                           ; 2 bytes @ 0xB
   415  00000C                     	ds	1
   416  00000D                     ??_CAN_SendFrame:
   417  00000D                     LED_Light_Pos@pos:
   418                           	opt callstack 0
   419                           
   420                           ; 2 bytes @ 0xC
   421  00000D                     	ds	1
   422  00000E                     CAN_TakeFrame@message:
   423                           	opt callstack 0
   424                           
   425                           ; 2 bytes @ 0xD
   426  00000E                     	ds	1
   427  00000F                     LED_Light_Pos@fulfillment:
   428                           	opt callstack 0
   429                           
   430                           ; 2 bytes @ 0xE
   431  00000F                     	ds	1
   432  000010                     ??_CAN_TakeFrame:
   433  000010                     FRAME_HandleCanFrame@message:
   434                           	opt callstack 0
   435                           
   436                           ; 2 bytes @ 0xF
   437  000010                     	ds	1
   438  000011                     LED_Light_Pos@color:
   439                           	opt callstack 0
   440                           
   441                           ; 1 bytes @ 0x10
   442  000011                     	ds	1
   443  000012                     ??_FRAME_HandleCanFrame:
   444  000012                     CAN_TakeFrame@tempCON:
   445                           	opt callstack 0
   446  000012                     LED_Light_Pos@LED_array:
   447                           	opt callstack 0
   448                           
   449                           ; 2 bytes @ 0x11
   450  000012                     	ds	1
   451  000013                     CAN_TakeFrame@k:
   452                           	opt callstack 0
   453                           
   454                           ; 1 bytes @ 0x12
   455  000013                     	ds	1
   456  000014                     FRAME_HandleCanFrame@identyfikator:
   457                           	opt callstack 0
   458  000014                     LED_Light_Pos@pos2:
   459                           	opt callstack 0
   460                           
   461                           ; 2 bytes @ 0x13
   462  000014                     	ds	1
   463  000015                     TRM_DataTransmition@canMessage:
   464                           	opt callstack 0
   465                           
   466                           ; 17 bytes @ 0x14
   467  000015                     	ds	1
   468  000016                     LED_Light_Pos@flage:
   469                           	opt callstack 0
   470                           
   471                           ; 2 bytes @ 0x15
   472  000016                     	ds	2
   473  000018                     
   474                           ; 1 bytes @ 0x17
   475  000018                     	ds	14
   476  000026                     
   477                           ; 1 bytes @ 0x25
   478 ;;
   479 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   480 ;;
   481 ;; *************** function _main *****************
   482 ;; Defined at:
   483 ;;		line 89 in file "main.c"
   484 ;; Parameters:    Size  Location     Type
   485 ;;		None
   486 ;; Auto vars:     Size  Location     Type
   487 ;;		None
   488 ;; Return value:  Size  Location     Type
   489 ;;                  1    wreg      void 
   490 ;; Registers used:
   491 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   492 ;; Tracked objects:
   493 ;;		On entry : 0/0
   494 ;;		On exit  : 0/0
   495 ;;		Unchanged: 0/0
   496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   500 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   501 ;;Total ram usage:        0 bytes
   502 ;; Hardware stack levels required when called:    7
   503 ;; This function calls:
   504 ;;		_INI_All
   505 ;;		_LED_Update
   506 ;;		_TMR1_Update_flag_Get
   507 ;;		_TMR1_Update_flag_Set
   508 ;;		_TRM_DataTransmition
   509 ;; This function is called by:
   510 ;;		Startup code after reset
   511 ;; This function uses a non-reentrant model
   512 ;;
   513                           
   514                           	psect	text0
   515  000DC6                     __ptext0:
   516                           	opt callstack 0
   517  000DC6                     _main:
   518                           	opt callstack 24
   519                           
   520                           ;main.c: 91:     INI_All();
   521                           
   522                           ;incstack = 0
   523  000DC6  EC73  F007         	call	_INI_All	;wreg free
   524                           
   525                           ;main.c: 93:     RCON = 0xFF;
   526  000DCA  68D0               	setf	4048,c	;volatile
   527  000DCC                     l2657:
   528                           
   529                           ;main.c: 96:     {;main.c: 97:         if(DetectorLedRadar.Flags.obsluzWeWy == 1)
   530  000DCC  B03D               	btfsc	_DetectorLedRadar,0,c
   531                           
   532                           ;main.c: 98:         {;main.c: 99:             DetectorLedRadar.Flags.obsluzWeWy = 0;
   533  000DCE  903D               	bcf	_DetectorLedRadar,0,c
   534                           
   535                           ;main.c: 103:         if(TMR1_Update_flag_Get()==1)
   536  000DD0  EC98  F007         	call	_TMR1_Update_flag_Get	;wreg free
   537  000DD4  0406               	decf	?_TMR1_Update_flag_Get,w,c
   538  000DD6  1007               	iorwf	?_TMR1_Update_flag_Get+1,w,c
   539  000DD8  A4D8               	btfss	status,2,c
   540  000DDA  D008               	goto	l2667
   541                           
   542                           ;main.c: 104:         {;main.c: 105:             LED_Update();
   543  000DDC  EC78  F005         	call	_LED_Update	;wreg free
   544                           
   545                           ;main.c: 106:             TMR1_Update_flag_Set(0);
   546  000DE0  0E00               	movlw	0
   547  000DE2  6E07               	movwf	TMR1_Update_flag_Set@a+1,c
   548  000DE4  0E00               	movlw	0
   549  000DE6  6E06               	movwf	TMR1_Update_flag_Set@a,c
   550  000DE8  EC93  F007         	call	_TMR1_Update_flag_Set	;wreg free
   551  000DEC                     l2667:
   552                           
   553                           ;main.c: 110:         TRM_DataTransmition();
   554  000DEC  EC4D  F005         	call	_TRM_DataTransmition	;wreg free
   555  000DF0  0004               	clrwdt		;# 
   556                           
   557                           ;main.c: 112:     }
   558  000DF2  D7EC               	goto	l2657
   559  000DF4                     __end_of_main:
   560                           	opt callstack 0
   561                           
   562 ;; *************** function _TRM_DataTransmition *****************
   563 ;; Defined at:
   564 ;;		line 16 in file "TRM.c"
   565 ;; Parameters:    Size  Location     Type
   566 ;;		None
   567 ;; Auto vars:     Size  Location     Type
   568 ;;  canMessage     17   20[COMRAM] struct .
   569 ;;  i               1    0        unsigned char 
   570 ;; Return value:  Size  Location     Type
   571 ;;                  1    wreg      void 
   572 ;; Registers used:
   573 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   574 ;; Tracked objects:
   575 ;;		On entry : 0/0
   576 ;;		On exit  : 0/0
   577 ;;		Unchanged: 0/0
   578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   580 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   582 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   583 ;;Total ram usage:       17 bytes
   584 ;; Hardware stack levels used:    1
   585 ;; Hardware stack levels required when called:    6
   586 ;; This function calls:
   587 ;;		_CAN_TakeFrame
   588 ;;		_FRAME_HandleCanFrame
   589 ;; This function is called by:
   590 ;;		_main
   591 ;; This function uses a non-reentrant model
   592 ;;
   593                           
   594                           	psect	text1
   595  000A9A                     __ptext1:
   596                           	opt callstack 0
   597  000A9A                     _TRM_DataTransmition:
   598                           	opt callstack 24
   599                           
   600                           ;TRM.c: 18:     static BYTE weWyU8 = 0, czujnikWeWyU8 = 0;;TRM.c: 19:     BYTE i;;TRM.c:
      +                           20:     mID canMessage;;TRM.c: 23:     if(DaneCan.Flags.wyslijRamkeStanu)
   601                           
   602                           ;incstack = 0
   603  000A9A  A037               	btfss	_DaneCan,0,c
   604  000A9C  D013               	goto	l2627
   605                           
   606                           ;TRM.c: 24:     {;TRM.c: 26:         canMessage.message_type = 0x02;
   607  000A9E  0E02               	movlw	2
   608  000AA0  6E16               	movwf	TRM_DataTransmition@canMessage+1,c
   609                           
   610                           ;TRM.c: 27:         canMessage.id.Val = 0;
   611  000AA2  0E00               	movlw	0
   612  000AA4  6E19               	movwf	TRM_DataTransmition@canMessage+4,c
   613  000AA6  0E00               	movlw	0
   614  000AA8  6E1A               	movwf	TRM_DataTransmition@canMessage+5,c
   615  000AAA  0E00               	movlw	0
   616  000AAC  6E1B               	movwf	TRM_DataTransmition@canMessage+6,c
   617  000AAE  0E00               	movlw	0
   618  000AB0  6E1C               	movwf	TRM_DataTransmition@canMessage+7,c
   619                           
   620                           ;TRM.c: 28:         canMessage.id.v[2] = 0x01 *4;
   621  000AB2  0E04               	movlw	4
   622  000AB4  6E1B               	movwf	TRM_DataTransmition@canMessage+6,c
   623                           
   624                           ;TRM.c: 29:         FRAME_HandleCanFrame(&canMessage);
   625  000AB6  0E15               	movlw	low TRM_DataTransmition@canMessage
   626  000AB8  6E10               	movwf	FRAME_HandleCanFrame@message,c
   627  000ABA  0E00               	movlw	high TRM_DataTransmition@canMessage
   628  000ABC  6E11               	movwf	FRAME_HandleCanFrame@message+1,c
   629  000ABE  EC6E  F001         	call	_FRAME_HandleCanFrame	;wreg free
   630                           
   631                           ;TRM.c: 46:         DaneCan.Flags.wyslijRamkeStanu = 0;
   632  000AC2  9037               	bcf	_DaneCan,0,c
   633  000AC4                     l2627:
   634                           
   635                           ;TRM.c: 56:     if(CAN_TakeFrame(&canMessage))
   636  000AC4  0E15               	movlw	low TRM_DataTransmition@canMessage
   637  000AC6  6E0E               	movwf	CAN_TakeFrame@message,c
   638  000AC8  0E00               	movlw	high TRM_DataTransmition@canMessage
   639  000ACA  6E0F               	movwf	CAN_TakeFrame@message+1,c
   640  000ACC  EC30  F000         	call	_CAN_TakeFrame	;wreg free
   641  000AD0  0900               	iorlw	0
   642  000AD2  B4D8               	btfsc	status,2,c
   643  000AD4  0012               	return	
   644                           
   645                           ;TRM.c: 57:     {;TRM.c: 58:         if((canMessage.buffer == 0) || (canMessage.buffer =
      +                          = 1))
   646  000AD6  5018               	movf	TRM_DataTransmition@canMessage+3,w,c
   647  000AD8  B4D8               	btfsc	status,2,c
   648  000ADA  D003               	goto	u1320
   649  000ADC  0418               	decf	TRM_DataTransmition@canMessage+3,w,c
   650  000ADE  A4D8               	btfss	status,2,c
   651  000AE0  0012               	return	
   652  000AE2                     u1320:
   653                           
   654                           ;TRM.c: 59:         {;TRM.c: 60:             FRAME_HandleCanFrame(&canMessage);
   655  000AE2  0E15               	movlw	low TRM_DataTransmition@canMessage
   656  000AE4  6E10               	movwf	FRAME_HandleCanFrame@message,c
   657  000AE6  0E00               	movlw	high TRM_DataTransmition@canMessage
   658  000AE8  6E11               	movwf	FRAME_HandleCanFrame@message+1,c
   659  000AEA  EC6E  F001         	call	_FRAME_HandleCanFrame	;wreg free
   660                           
   661                           ;TRM.c: 61:         }
   662  000AEE  0012               	return		;funcret
   663  000AF0                     __end_of_TRM_DataTransmition:
   664                           	opt callstack 0
   665                           
   666 ;; *************** function _FRAME_HandleCanFrame *****************
   667 ;; Defined at:
   668 ;;		line 445 in file "FRAME.c"
   669 ;; Parameters:    Size  Location     Type
   670 ;;  message         2   15[COMRAM] PTR struct .
   671 ;;		 -> TRM_DataTransmition@canMessage(17), 
   672 ;; Auto vars:     Size  Location     Type
   673 ;;  identyfikato    1   19[COMRAM] unsigned char 
   674 ;; Return value:  Size  Location     Type
   675 ;;                  1    wreg      void 
   676 ;; Registers used:
   677 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   678 ;; Tracked objects:
   679 ;;		On entry : 0/0
   680 ;;		On exit  : 0/0
   681 ;;		Unchanged: 0/0
   682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   683 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   684 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   685 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   686 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   687 ;;Total ram usage:        5 bytes
   688 ;; Hardware stack levels used:    1
   689 ;; Hardware stack levels required when called:    5
   690 ;; This function calls:
   691 ;;		_CAN_GenID
   692 ;;		_CAN_SendFrame
   693 ;;		_FRAME_AccelerometerStatus
   694 ;;		_FRAME_AdressOfNeighbors
   695 ;;		_FRAME_AnalogValue
   696 ;;		_FRAME_AveragingTimes
   697 ;;		_FRAME_AxisStatus
   698 ;;		_FRAME_DeviceReset
   699 ;;		_FRAME_ExcitationMultiplier
   700 ;;		_FRAME_ExcitationValue
   701 ;;		_FRAME_MapPosition
   702 ;;		_FRAME_Plot
   703 ;;		_FRAME_SensorExcitationStatus
   704 ;;		_FRAME_SoftwareVersion
   705 ;;		_LED_Clear
   706 ;;		_LED_Error
   707 ;;		___awdiv
   708 ;; This function is called by:
   709 ;;		_TRM_DataTransmition
   710 ;; This function uses a non-reentrant model
   711 ;;
   712                           
   713                           	psect	text2
   714  0002DC                     __ptext2:
   715                           	opt callstack 0
   716  0002DC                     _FRAME_HandleCanFrame:
   717                           	opt callstack 24
   718                           
   719                           ;FRAME.c: 445: void FRAME_HandleCanFrame(mID * message);FRAME.c: 446: {;FRAME.c: 447:   
      +                            BYTE identyfikator = (BYTE) message->id.v[2]/4;
   720                           
   721                           ;incstack = 0
   722  0002DC  EE20 F006          	lfsr	2,6
   723  0002E0  5010               	movf	FRAME_HandleCanFrame@message,w,c
   724  0002E2  26D9               	addwf	fsr2l,f,c
   725  0002E4  5011               	movf	FRAME_HandleCanFrame@message+1,w,c
   726  0002E6  22DA               	addwfc	fsr2h,f,c
   727  0002E8  50DF               	movf	indf2,w,c
   728  0002EA  6E12               	movwf	??_FRAME_HandleCanFrame& (0+255),c
   729  0002EC  5012               	movf	??_FRAME_HandleCanFrame,w,c
   730  0002EE  6E06               	movwf	___awdiv@dividend,c
   731  0002F0  6A07               	clrf	___awdiv@dividend+1,c
   732  0002F2  0E00               	movlw	0
   733  0002F4  6E09               	movwf	___awdiv@divisor+1,c
   734  0002F6  0E04               	movlw	4
   735  0002F8  6E08               	movwf	___awdiv@divisor,c
   736  0002FA  EC14  F004         	call	___awdiv	;wreg free
   737  0002FE  5006               	movf	?___awdiv,w,c
   738  000300  6E14               	movwf	FRAME_HandleCanFrame@identyfikator,c
   739                           
   740                           ;FRAME.c: 449:     switch(identyfikator)
   741  000302  D060               	goto	l2575
   742  000304                     l2549:
   743                           
   744                           ;FRAME.c: 452:             FRAME_SensorExcitationStatus(message);
   745  000304  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_SensorExcitationStatus@message
   746  000308  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_SensorExcitationStatus@message+1
   747  00030C  EC56  F004         	call	_FRAME_SensorExcitationStatus	;wreg free
   748                           
   749                           ;FRAME.c: 453:             break;
   750  000310  D08B               	goto	l2577
   751  000312                     l2551:
   752                           
   753                           ;FRAME.c: 455:             FRAME_AccelerometerStatus(message);
   754  000312  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AccelerometerStatus@message
   755  000316  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AccelerometerStatus@message+1
   756  00031A  ECAE  F006         	call	_FRAME_AccelerometerStatus	;wreg free
   757                           
   758                           ;FRAME.c: 456:             break;
   759  00031E  D084               	goto	l2577
   760  000320                     l2553:
   761                           
   762                           ;FRAME.c: 458:             FRAME_ExcitationValue(message);
   763  000320  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_ExcitationValue@message
   764  000324  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_ExcitationValue@message+1
   765  000328  EC5D  F006         	call	_FRAME_ExcitationValue	;wreg free
   766                           
   767                           ;FRAME.c: 459:             break;
   768  00032C  D07D               	goto	l2577
   769  00032E                     l2555:
   770                           
   771                           ;FRAME.c: 461:             FRAME_ExcitationMultiplier(message);
   772  00032E  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_ExcitationMultiplier@message
   773  000332  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_ExcitationMultiplier@message+1
   774  000336  ECCC  F005         	call	_FRAME_ExcitationMultiplier	;wreg free
   775                           
   776                           ;FRAME.c: 462:             break;
   777  00033A  D076               	goto	l2577
   778  00033C                     l2557:
   779                           
   780                           ;FRAME.c: 464:             FRAME_AveragingTimes(message);
   781  00033C  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AveragingTimes@message
   782  000340  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AveragingTimes@message+1
   783  000344  EC93  F006         	call	_FRAME_AveragingTimes	;wreg free
   784                           
   785                           ;FRAME.c: 465:             break;
   786  000348  D06F               	goto	l2577
   787  00034A                     l2559:
   788                           
   789                           ;FRAME.c: 467:             FRAME_AxisStatus(message);
   790  00034A  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AxisStatus@message
   791  00034E  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AxisStatus@message+1
   792  000352  EC78  F006         	call	_FRAME_AxisStatus	;wreg free
   793                           
   794                           ;FRAME.c: 468:             break;
   795  000356  D068               	goto	l2577
   796  000358                     l2561:
   797                           
   798                           ;FRAME.c: 470:             FRAME_DeviceReset(message);
   799  000358  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_DeviceReset@message
   800  00035C  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_DeviceReset@message+1
   801  000360  EC21  F005         	call	_FRAME_DeviceReset	;wreg free
   802                           
   803                           ;FRAME.c: 471:             break;
   804  000364  D061               	goto	l2577
   805  000366                     l2563:
   806                           
   807                           ;FRAME.c: 473:             FRAME_Plot(message);
   808  000366  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_Plot@message
   809  00036A  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_Plot@message+1
   810  00036E  EC35  F007         	call	_FRAME_Plot	;wreg free
   811                           
   812                           ;FRAME.c: 474:             break;
   813  000372  D05A               	goto	l2577
   814  000374                     l2565:
   815                           
   816                           ;FRAME.c: 476:             FRAME_MapPosition(message);
   817  000374  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_MapPosition@message
   818  000378  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_MapPosition@message+1
   819  00037C  ECAA  F007         	call	_FRAME_MapPosition	;wreg free
   820                           
   821                           ;FRAME.c: 477:             break;
   822  000380  D053               	goto	l2577
   823  000382                     l2567:
   824                           
   825                           ;FRAME.c: 479:             FRAME_SoftwareVersion(message);
   826  000382  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_SoftwareVersion@message
   827  000386  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_SoftwareVersion@message+1
   828  00038A  ECA9  F007         	call	_FRAME_SoftwareVersion	;wreg free
   829                           
   830                           ;FRAME.c: 480:             break;
   831  00038E  D04C               	goto	l2577
   832  000390                     l2569:
   833                           
   834                           ;FRAME.c: 483:             FRAME_AnalogValue(message, identyfikator - 0x0C);
   835  000390  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AnalogValue@message
   836  000394  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AnalogValue@message+1
   837  000398  0EF4               	movlw	244
   838  00039A  2414               	addwf	FRAME_HandleCanFrame@identyfikator,w,c
   839  00039C  6E08               	movwf	FRAME_AnalogValue@set,c
   840  00039E  6A09               	clrf	FRAME_AnalogValue@set+1,c
   841  0003A0  0EFF               	movlw	255
   842  0003A2  2209               	addwfc	FRAME_AnalogValue@set+1,f,c
   843  0003A4  ECAB  F007         	call	_FRAME_AnalogValue	;wreg free
   844                           
   845                           ;FRAME.c: 484:             break;
   846  0003A8  D03F               	goto	l2577
   847  0003AA                     l2571:
   848                           
   849                           ;FRAME.c: 487:             FRAME_AdressOfNeighbors(message, identyfikator - 0x10);
   850  0003AA  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AdressOfNeighbors@message
   851  0003AE  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AdressOfNeighbors@message+1
   852  0003B2  0EF0               	movlw	240
   853  0003B4  2414               	addwf	FRAME_HandleCanFrame@identyfikator,w,c
   854  0003B6  6E08               	movwf	FRAME_AdressOfNeighbors@nrRamki,c
   855  0003B8  6A09               	clrf	FRAME_AdressOfNeighbors@nrRamki+1,c
   856  0003BA  0EFF               	movlw	255
   857  0003BC  2209               	addwfc	FRAME_AdressOfNeighbors@nrRamki+1,f,c
   858  0003BE  ECAC  F007         	call	_FRAME_AdressOfNeighbors	;wreg free
   859                           
   860                           ;FRAME.c: 488:             break;
   861  0003C2  D032               	goto	l2577
   862  0003C4                     l2575:
   863  0003C4  5014               	movf	FRAME_HandleCanFrame@identyfikator,w,c
   864  0003C6  6E12               	movwf	??_FRAME_HandleCanFrame& (0+255),c
   865  0003C8  6A13               	clrf	(??_FRAME_HandleCanFrame+1)& (0+255),c
   866                           
   867                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   868                           ; Switch size 1, requested type "simple"
   869                           ; Number of cases is 1, Range of values is 0 to 0
   870                           ; switch strategies available:
   871                           ; Name         Instructions Cycles
   872                           ; simple_byte            4     3 (average)
   873                           ;	Chosen strategy is simple_byte
   874  0003CA  5013               	movf	??_FRAME_HandleCanFrame+1,w,c
   875  0003CC  0A00               	xorlw	0	; case 0
   876  0003CE  A4D8               	btfss	status,2,c
   877  0003D0  D02B               	goto	l2577
   878                           
   879                           ; Switch size 1, requested type "simple"
   880                           ; Number of cases is 14, Range of values is 1 to 17
   881                           ; switch strategies available:
   882                           ; Name         Instructions Cycles
   883                           ; simple_byte           43    22 (average)
   884                           ;	Chosen strategy is simple_byte
   885  0003D2  5012               	movf	??_FRAME_HandleCanFrame,w,c
   886  0003D4  0A01               	xorlw	1	; case 1
   887  0003D6  B4D8               	btfsc	status,2,c
   888  0003D8  D795               	goto	l2549
   889  0003DA  0A03               	xorlw	3	; case 2
   890  0003DC  B4D8               	btfsc	status,2,c
   891  0003DE  D799               	goto	l2551
   892  0003E0  0A01               	xorlw	1	; case 3
   893  0003E2  B4D8               	btfsc	status,2,c
   894  0003E4  D79D               	goto	l2553
   895  0003E6  0A07               	xorlw	7	; case 4
   896  0003E8  B4D8               	btfsc	status,2,c
   897  0003EA  D7A1               	goto	l2555
   898  0003EC  0A01               	xorlw	1	; case 5
   899  0003EE  B4D8               	btfsc	status,2,c
   900  0003F0  D7A5               	goto	l2557
   901  0003F2  0A03               	xorlw	3	; case 6
   902  0003F4  B4D8               	btfsc	status,2,c
   903  0003F6  D7A9               	goto	l2559
   904  0003F8  0A01               	xorlw	1	; case 7
   905  0003FA  B4D8               	btfsc	status,2,c
   906  0003FC  D7AD               	goto	l2561
   907  0003FE  0A0E               	xorlw	14	; case 9
   908  000400  B4D8               	btfsc	status,2,c
   909  000402  D7B1               	goto	l2563
   910  000404  0A03               	xorlw	3	; case 10
   911  000406  B4D8               	btfsc	status,2,c
   912  000408  D7B5               	goto	l2565
   913  00040A  0A01               	xorlw	1	; case 11
   914  00040C  B4D8               	btfsc	status,2,c
   915  00040E  D7B9               	goto	l2567
   916  000410  0A07               	xorlw	7	; case 12
   917  000412  B4D8               	btfsc	status,2,c
   918  000414  D7BD               	goto	l2569
   919  000416  0A01               	xorlw	1	; case 13
   920  000418  B4D8               	btfsc	status,2,c
   921  00041A  D7BA               	goto	l2569
   922  00041C  0A1D               	xorlw	29	; case 16
   923  00041E  B4D8               	btfsc	status,2,c
   924  000420  D7C4               	goto	l2571
   925  000422  0A01               	xorlw	1	; case 17
   926  000424  B4D8               	btfsc	status,2,c
   927  000426  D7C1               	goto	l2571
   928  000428                     l2577:
   929                           
   930                           ;FRAME.c: 490:     if(message->message_type == 0x02)
   931  000428  EE20 F001          	lfsr	2,1
   932  00042C  5010               	movf	FRAME_HandleCanFrame@message,w,c
   933  00042E  26D9               	addwf	fsr2l,f,c
   934  000430  5011               	movf	FRAME_HandleCanFrame@message+1,w,c
   935  000432  22DA               	addwfc	fsr2h,f,c
   936  000434  0E02               	movlw	2
   937  000436  18DE               	xorwf	postinc2,w,c
   938  000438  A4D8               	btfss	status,2,c
   939  00043A  0012               	return	
   940                           
   941                           ;FRAME.c: 491:     {;FRAME.c: 493:         message->frame_type = 0x03;
   942  00043C  EE20 F002          	lfsr	2,2
   943  000440  5010               	movf	FRAME_HandleCanFrame@message,w,c
   944  000442  26D9               	addwf	fsr2l,f,c
   945  000444  5011               	movf	FRAME_HandleCanFrame@message+1,w,c
   946  000446  22DA               	addwfc	fsr2h,f,c
   947  000448  0E03               	movlw	3
   948  00044A  6EDF               	movwf	indf2,c
   949                           
   950                           ;FRAME.c: 494:         message->message_type = 0x01;
   951  00044C  EE20 F001          	lfsr	2,1
   952  000450  5010               	movf	FRAME_HandleCanFrame@message,w,c
   953  000452  26D9               	addwf	fsr2l,f,c
   954  000454  5011               	movf	FRAME_HandleCanFrame@message+1,w,c
   955  000456  22DA               	addwfc	fsr2h,f,c
   956  000458  0E01               	movlw	1
   957  00045A  6EDF               	movwf	indf2,c
   958                           
   959                           ;FRAME.c: 495:         message->id.Val = 0;
   960  00045C  EE20 F004          	lfsr	2,4
   961  000460  5010               	movf	FRAME_HandleCanFrame@message,w,c
   962  000462  26D9               	addwf	fsr2l,f,c
   963  000464  5011               	movf	FRAME_HandleCanFrame@message+1,w,c
   964  000466  22DA               	addwfc	fsr2h,f,c
   965  000468  6ADE               	clrf	postinc2,c
   966  00046A  6ADE               	clrf	postinc2,c
   967  00046C  6ADE               	clrf	postinc2,c
   968  00046E  6ADD               	clrf	postdec2,c
   969                           
   970                           ;FRAME.c: 497:         message->id.v[2] = identyfikator*4;
   971  000470  5014               	movf	FRAME_HandleCanFrame@identyfikator,w,c
   972  000472  0D04               	mullw	4
   973  000474  EE20 F006          	lfsr	2,6
   974  000478  5010               	movf	FRAME_HandleCanFrame@message,w,c
   975  00047A  26D9               	addwf	fsr2l,f,c
   976  00047C  5011               	movf	FRAME_HandleCanFrame@message+1,w,c
   977  00047E  22DA               	addwfc	fsr2h,f,c
   978  000480  CFF3 FFDF          	movff	prodl,indf2
   979                           
   980                           ;FRAME.c: 498:         CAN_GenID(message,identyfikator);
   981  000484  C010  F006         	movff	FRAME_HandleCanFrame@message,CAN_GenID@message
   982  000488  C011  F007         	movff	FRAME_HandleCanFrame@message+1,CAN_GenID@message+1
   983  00048C  C014  F008         	movff	FRAME_HandleCanFrame@identyfikator,CAN_GenID@frameID
   984  000490  ECF4  F004         	call	_CAN_GenID	;wreg free
   985                           
   986                           ;FRAME.c: 499:         CAN_SendFrame(message);
   987  000494  C010  F00B         	movff	FRAME_HandleCanFrame@message,CAN_SendFrame@message
   988  000498  C011  F00C         	movff	FRAME_HandleCanFrame@message+1,CAN_SendFrame@message+1
   989  00049C  EC5C  F002         	call	_CAN_SendFrame	;wreg free
   990                           
   991                           ;FRAME.c: 510:        while(RXB0CONbits.FILHIT3)
   992  0004A0  D008               	goto	l2591
   993  0004A2                     l465:
   994                           
   995                           ;FRAME.c: 511:        {;FRAME.c: 512:            if(TXB0CONbits.TXERR == 1){
   996  0004A2  010F               	movlb	15	; () banked
   997  0004A4  A940               	btfss	64,4,b	;volatile
   998  0004A6  D003               	goto	l2589
   999                           
  1000                           ; BSR set to: 15
  1001                           ;FRAME.c: 513:                LED_Error();
  1002  0004A8  EC46  F007         	call	_LED_Error	;wreg free
  1003                           
  1004                           ;FRAME.c: 514:            }
  1005  0004AC  D002               	goto	l2591
  1006  0004AE                     l2589:
  1007                           
  1008                           ; BSR set to: 15
  1009                           ;FRAME.c: 516:            {;FRAME.c: 517:                LED_Clear();
  1010  0004AE  EC55  F007         	call	_LED_Clear	;wreg free
  1011  0004B2                     l2591:
  1012                           
  1013                           ;FRAME.c: 510:        while(RXB0CONbits.FILHIT3)
  1014  0004B2  A660               	btfss	3936,3,c	;volatile
  1015  0004B4  0012               	return	
  1016  0004B6  D7F5               	goto	l465
  1017  0004B8                     __end_of_FRAME_HandleCanFrame:
  1018                           	opt callstack 0
  1019                           
  1020 ;; *************** function _LED_Error *****************
  1021 ;; Defined at:
  1022 ;;		line 32 in file "LED.c"
  1023 ;; Parameters:    Size  Location     Type
  1024 ;;		None
  1025 ;; Auto vars:     Size  Location     Type
  1026 ;;		None
  1027 ;; Return value:  Size  Location     Type
  1028 ;;                  2  251[None  ] unsigned int 
  1029 ;; Registers used:
  1030 ;;		wreg, status,2, status,0, cstack
  1031 ;; Tracked objects:
  1032 ;;		On entry : 0/0
  1033 ;;		On exit  : 0/0
  1034 ;;		Unchanged: 0/0
  1035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1039 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1040 ;;Total ram usage:        0 bytes
  1041 ;; Hardware stack levels used:    1
  1042 ;; Hardware stack levels required when called:    4
  1043 ;; This function calls:
  1044 ;;		_LED_Control
  1045 ;; This function is called by:
  1046 ;;		_FRAME_HandleCanFrame
  1047 ;; This function uses a non-reentrant model
  1048 ;;
  1049                           
  1050                           	psect	text3
  1051  000E8C                     __ptext3:
  1052                           	opt callstack 0
  1053  000E8C                     _LED_Error:
  1054                           	opt callstack 24
  1055                           
  1056                           ;LED.c: 34:     LED_Control(RED,0b1010101010);
  1057                           
  1058                           ;incstack = 0
  1059  000E8C  0E02               	movlw	2
  1060  000E8E  6E07               	movwf	LED_Control@diode+1,c
  1061  000E90  0EAA               	movlw	170
  1062  000E92  6E06               	movwf	LED_Control@diode,c
  1063  000E94  0E00               	movlw	0
  1064  000E96  EC13  F003         	call	_LED_Control
  1065                           
  1066                           ;LED.c: 35:     LED_Control(GREEN,0b0000000000);
  1067  000E9A  0E00               	movlw	0
  1068  000E9C  6E07               	movwf	LED_Control@diode+1,c
  1069  000E9E  0E00               	movlw	0
  1070  000EA0  6E06               	movwf	LED_Control@diode,c
  1071  000EA2  0E01               	movlw	1
  1072  000EA4  EC13  F003         	call	_LED_Control
  1073  000EA8  0012               	return		;funcret
  1074  000EAA                     __end_of_LED_Error:
  1075                           	opt callstack 0
  1076                           
  1077 ;; *************** function _LED_Clear *****************
  1078 ;; Defined at:
  1079 ;;		line 39 in file "LED.c"
  1080 ;; Parameters:    Size  Location     Type
  1081 ;;		None
  1082 ;; Auto vars:     Size  Location     Type
  1083 ;;		None
  1084 ;; Return value:  Size  Location     Type
  1085 ;;                  2  254[None  ] unsigned int 
  1086 ;; Registers used:
  1087 ;;		wreg, status,2, status,0, cstack
  1088 ;; Tracked objects:
  1089 ;;		On entry : 0/0
  1090 ;;		On exit  : 0/0
  1091 ;;		Unchanged: 0/0
  1092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1096 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1097 ;;Total ram usage:        0 bytes
  1098 ;; Hardware stack levels used:    1
  1099 ;; Hardware stack levels required when called:    4
  1100 ;; This function calls:
  1101 ;;		_LED_Control
  1102 ;; This function is called by:
  1103 ;;		_FRAME_HandleCanFrame
  1104 ;; This function uses a non-reentrant model
  1105 ;;
  1106                           
  1107                           	psect	text4
  1108  000EAA                     __ptext4:
  1109                           	opt callstack 0
  1110  000EAA                     _LED_Clear:
  1111                           	opt callstack 24
  1112                           
  1113                           ;LED.c: 41:     LED_Control(RED,0b0000000000);
  1114                           
  1115                           ;incstack = 0
  1116  000EAA  0E00               	movlw	0
  1117  000EAC  6E07               	movwf	LED_Control@diode+1,c
  1118  000EAE  0E00               	movlw	0
  1119  000EB0  6E06               	movwf	LED_Control@diode,c
  1120  000EB2  0E00               	movlw	0
  1121  000EB4  EC13  F003         	call	_LED_Control
  1122                           
  1123                           ;LED.c: 42:     LED_Control(GREEN,0b1010101010);
  1124  000EB8  0E02               	movlw	2
  1125  000EBA  6E07               	movwf	LED_Control@diode+1,c
  1126  000EBC  0EAA               	movlw	170
  1127  000EBE  6E06               	movwf	LED_Control@diode,c
  1128  000EC0  0E01               	movlw	1
  1129  000EC2  EC13  F003         	call	_LED_Control
  1130  000EC6  0012               	return		;funcret
  1131  000EC8                     __end_of_LED_Clear:
  1132                           	opt callstack 0
  1133                           
  1134 ;; *************** function _FRAME_SoftwareVersion *****************
  1135 ;; Defined at:
  1136 ;;		line 349 in file "FRAME.c"
  1137 ;; Parameters:    Size  Location     Type
  1138 ;;  message         2    5[COMRAM] PTR struct .
  1139 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1140 ;; Auto vars:     Size  Location     Type
  1141 ;;		None
  1142 ;; Return value:  Size  Location     Type
  1143 ;;                  1    wreg      void 
  1144 ;; Registers used:
  1145 ;;		None
  1146 ;; Tracked objects:
  1147 ;;		On entry : 0/0
  1148 ;;		On exit  : 0/0
  1149 ;;		Unchanged: 0/0
  1150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1151 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1154 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1155 ;;Total ram usage:        2 bytes
  1156 ;; Hardware stack levels used:    1
  1157 ;; Hardware stack levels required when called:    3
  1158 ;; This function calls:
  1159 ;;		Nothing
  1160 ;; This function is called by:
  1161 ;;		_FRAME_HandleCanFrame
  1162 ;; This function uses a non-reentrant model
  1163 ;;
  1164                           
  1165                           	psect	text5
  1166  000F52                     __ptext5:
  1167                           	opt callstack 0
  1168  000F52                     _FRAME_SoftwareVersion:
  1169                           	opt callstack 25
  1170                           
  1171                           ;incstack = 0
  1172  000F52  0012               	return		;funcret
  1173  000F54                     __end_of_FRAME_SoftwareVersion:
  1174                           	opt callstack 0
  1175                           
  1176 ;; *************** function _FRAME_SensorExcitationStatus *****************
  1177 ;; Defined at:
  1178 ;;		line 31 in file "FRAME.c"
  1179 ;; Parameters:    Size  Location     Type
  1180 ;;  message         2    5[COMRAM] PTR struct .
  1181 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1182 ;; Auto vars:     Size  Location     Type
  1183 ;;		None
  1184 ;; Return value:  Size  Location     Type
  1185 ;;                  1    wreg      void 
  1186 ;; Registers used:
  1187 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1188 ;; Tracked objects:
  1189 ;;		On entry : 0/0
  1190 ;;		On exit  : 0/0
  1191 ;;		Unchanged: 0/0
  1192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1193 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1195 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1196 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1197 ;;Total ram usage:        3 bytes
  1198 ;; Hardware stack levels used:    1
  1199 ;; Hardware stack levels required when called:    3
  1200 ;; This function calls:
  1201 ;;		Nothing
  1202 ;; This function is called by:
  1203 ;;		_FRAME_HandleCanFrame
  1204 ;; This function uses a non-reentrant model
  1205 ;;
  1206                           
  1207                           	psect	text6
  1208  0008AC                     __ptext6:
  1209                           	opt callstack 0
  1210  0008AC                     _FRAME_SensorExcitationStatus:
  1211                           	opt callstack 25
  1212                           
  1213                           ;FRAME.c: 31: static void FRAME_SensorExcitationStatus(mID *message);FRAME.c: 32: {;FRAM
      +                          E.c: 33:     if(message->message_type == 0x02)
  1214                           
  1215                           ;incstack = 0
  1216  0008AC  EE20 F001          	lfsr	2,1
  1217  0008B0  5006               	movf	FRAME_SensorExcitationStatus@message,w,c
  1218  0008B2  26D9               	addwf	fsr2l,f,c
  1219  0008B4  5007               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1220  0008B6  22DA               	addwfc	fsr2h,f,c
  1221  0008B8  0E02               	movlw	2
  1222  0008BA  18DE               	xorwf	postinc2,w,c
  1223  0008BC  A4D8               	btfss	status,2,c
  1224  0008BE  0012               	return	
  1225                           
  1226                           ;FRAME.c: 34:     {;FRAME.c: 35:         message->data_length = 5;
  1227  0008C0  EE20 F010          	lfsr	2,16
  1228  0008C4  5006               	movf	FRAME_SensorExcitationStatus@message,w,c
  1229  0008C6  26D9               	addwf	fsr2l,f,c
  1230  0008C8  5007               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1231  0008CA  22DA               	addwfc	fsr2h,f,c
  1232  0008CC  0E05               	movlw	5
  1233  0008CE  6EDF               	movwf	indf2,c
  1234                           
  1235                           ;FRAME.c: 49:         message->data[0] = 0x00;
  1236  0008D0  EE20 F008          	lfsr	2,8
  1237  0008D4  5006               	movf	FRAME_SensorExcitationStatus@message,w,c
  1238  0008D6  26D9               	addwf	fsr2l,f,c
  1239  0008D8  5007               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1240  0008DA  22DA               	addwfc	fsr2h,f,c
  1241  0008DC  0E00               	movlw	0
  1242  0008DE  6EDF               	movwf	indf2,c
  1243                           
  1244                           ;FRAME.c: 50:         message->data[1] = 0x88;
  1245  0008E0  EE20 F009          	lfsr	2,9
  1246  0008E4  5006               	movf	FRAME_SensorExcitationStatus@message,w,c
  1247  0008E6  26D9               	addwf	fsr2l,f,c
  1248  0008E8  5007               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1249  0008EA  22DA               	addwfc	fsr2h,f,c
  1250  0008EC  0E88               	movlw	136
  1251  0008EE  6EDF               	movwf	indf2,c
  1252                           
  1253                           ;FRAME.c: 51:         message->data[2] = 0x88;
  1254  0008F0  EE20 F00A          	lfsr	2,10
  1255  0008F4  5006               	movf	FRAME_SensorExcitationStatus@message,w,c
  1256  0008F6  26D9               	addwf	fsr2l,f,c
  1257  0008F8  5007               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1258  0008FA  22DA               	addwfc	fsr2h,f,c
  1259  0008FC  0E88               	movlw	136
  1260  0008FE  6EDF               	movwf	indf2,c
  1261                           
  1262                           ;FRAME.c: 52:         message->data[3] = 0x00;
  1263  000900  EE20 F00B          	lfsr	2,11
  1264  000904  5006               	movf	FRAME_SensorExcitationStatus@message,w,c
  1265  000906  26D9               	addwf	fsr2l,f,c
  1266  000908  5007               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1267  00090A  22DA               	addwfc	fsr2h,f,c
  1268  00090C  0E00               	movlw	0
  1269  00090E  6EDF               	movwf	indf2,c
  1270                           
  1271                           ;FRAME.c: 53:         message->data[4] = 0x00;
  1272  000910  EE20 F00C          	lfsr	2,12
  1273  000914  5006               	movf	FRAME_SensorExcitationStatus@message,w,c
  1274  000916  26D9               	addwf	fsr2l,f,c
  1275  000918  5007               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1276  00091A  22DA               	addwfc	fsr2h,f,c
  1277  00091C  0E00               	movlw	0
  1278  00091E  6EDF               	movwf	indf2,c
  1279                           
  1280                           ;FRAME.c: 56:     }
  1281  000920  0012               	return		;funcret
  1282  000922                     __end_of_FRAME_SensorExcitationStatus:
  1283                           	opt callstack 0
  1284                           
  1285 ;; *************** function _FRAME_Plot *****************
  1286 ;; Defined at:
  1287 ;;		line 302 in file "FRAME.c"
  1288 ;; Parameters:    Size  Location     Type
  1289 ;;  message         2    5[COMRAM] PTR struct .
  1290 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1291 ;; Auto vars:     Size  Location     Type
  1292 ;;		None
  1293 ;; Return value:  Size  Location     Type
  1294 ;;                  1    wreg      void 
  1295 ;; Registers used:
  1296 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1297 ;; Tracked objects:
  1298 ;;		On entry : 0/0
  1299 ;;		On exit  : 0/0
  1300 ;;		Unchanged: 0/0
  1301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1302 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1305 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1306 ;;Total ram usage:        2 bytes
  1307 ;; Hardware stack levels used:    1
  1308 ;; Hardware stack levels required when called:    3
  1309 ;; This function calls:
  1310 ;;		Nothing
  1311 ;; This function is called by:
  1312 ;;		_FRAME_HandleCanFrame
  1313 ;; This function uses a non-reentrant model
  1314 ;;
  1315                           
  1316                           	psect	text7
  1317  000E6A                     __ptext7:
  1318                           	opt callstack 0
  1319  000E6A                     _FRAME_Plot:
  1320                           	opt callstack 25
  1321                           
  1322                           ;FRAME.c: 302: static void FRAME_Plot(mID *message);FRAME.c: 303: {;FRAME.c: 314:     me
      +                          ssage->data_length = 1;
  1323                           
  1324                           ;incstack = 0
  1325  000E6A  EE20 F010          	lfsr	2,16
  1326  000E6E  5006               	movf	FRAME_Plot@message,w,c
  1327  000E70  26D9               	addwf	fsr2l,f,c
  1328  000E72  5007               	movf	FRAME_Plot@message+1,w,c
  1329  000E74  22DA               	addwfc	fsr2h,f,c
  1330  000E76  0E01               	movlw	1
  1331  000E78  6EDF               	movwf	indf2,c
  1332                           
  1333                           ;FRAME.c: 315:     message->data[0] = 0xFF;
  1334  000E7A  EE20 F008          	lfsr	2,8
  1335  000E7E  5006               	movf	FRAME_Plot@message,w,c
  1336  000E80  26D9               	addwf	fsr2l,f,c
  1337  000E82  5007               	movf	FRAME_Plot@message+1,w,c
  1338  000E84  22DA               	addwfc	fsr2h,f,c
  1339  000E86  0EFF               	movlw	255
  1340  000E88  6EDF               	movwf	indf2,c
  1341  000E8A  0012               	return		;funcret
  1342  000E8C                     __end_of_FRAME_Plot:
  1343                           	opt callstack 0
  1344                           
  1345 ;; *************** function _FRAME_MapPosition *****************
  1346 ;; Defined at:
  1347 ;;		line 324 in file "FRAME.c"
  1348 ;; Parameters:    Size  Location     Type
  1349 ;;  message         2    5[COMRAM] PTR struct .
  1350 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1351 ;; Auto vars:     Size  Location     Type
  1352 ;;		None
  1353 ;; Return value:  Size  Location     Type
  1354 ;;                  1    wreg      void 
  1355 ;; Registers used:
  1356 ;;		None
  1357 ;; Tracked objects:
  1358 ;;		On entry : 0/0
  1359 ;;		On exit  : 0/0
  1360 ;;		Unchanged: 0/0
  1361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1362 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1365 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1366 ;;Total ram usage:        2 bytes
  1367 ;; Hardware stack levels used:    1
  1368 ;; Hardware stack levels required when called:    3
  1369 ;; This function calls:
  1370 ;;		Nothing
  1371 ;; This function is called by:
  1372 ;;		_FRAME_HandleCanFrame
  1373 ;; This function uses a non-reentrant model
  1374 ;;
  1375                           
  1376                           	psect	text8
  1377  000F54                     __ptext8:
  1378                           	opt callstack 0
  1379  000F54                     _FRAME_MapPosition:
  1380                           	opt callstack 25
  1381                           
  1382                           ;incstack = 0
  1383  000F54  0012               	return		;funcret
  1384  000F56                     __end_of_FRAME_MapPosition:
  1385                           	opt callstack 0
  1386                           
  1387 ;; *************** function _FRAME_ExcitationValue *****************
  1388 ;; Defined at:
  1389 ;;		line 91 in file "FRAME.c"
  1390 ;; Parameters:    Size  Location     Type
  1391 ;;  message         2    5[COMRAM] PTR struct .
  1392 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1393 ;; Auto vars:     Size  Location     Type
  1394 ;;		None
  1395 ;; Return value:  Size  Location     Type
  1396 ;;                  1    wreg      void 
  1397 ;; Registers used:
  1398 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1399 ;; Tracked objects:
  1400 ;;		On entry : 0/0
  1401 ;;		On exit  : 0/0
  1402 ;;		Unchanged: 0/0
  1403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1404 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1406 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1407 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1408 ;;Total ram usage:        3 bytes
  1409 ;; Hardware stack levels used:    1
  1410 ;; Hardware stack levels required when called:    3
  1411 ;; This function calls:
  1412 ;;		Nothing
  1413 ;; This function is called by:
  1414 ;;		_FRAME_HandleCanFrame
  1415 ;; This function uses a non-reentrant model
  1416 ;;
  1417                           
  1418                           	psect	text9
  1419  000CBA                     __ptext9:
  1420                           	opt callstack 0
  1421  000CBA                     _FRAME_ExcitationValue:
  1422                           	opt callstack 25
  1423                           
  1424                           ;FRAME.c: 91: static void FRAME_ExcitationValue(mID *message);FRAME.c: 92: {;FRAME.c: 93
      +                          :     if(message->message_type == 0x02)
  1425                           
  1426                           ;incstack = 0
  1427  000CBA  EE20 F001          	lfsr	2,1
  1428  000CBE  5006               	movf	FRAME_ExcitationValue@message,w,c
  1429  000CC0  26D9               	addwf	fsr2l,f,c
  1430  000CC2  5007               	movf	FRAME_ExcitationValue@message+1,w,c
  1431  000CC4  22DA               	addwfc	fsr2h,f,c
  1432  000CC6  0E02               	movlw	2
  1433  000CC8  18DE               	xorwf	postinc2,w,c
  1434  000CCA  A4D8               	btfss	status,2,c
  1435  000CCC  0012               	return	
  1436                           
  1437                           ;FRAME.c: 94:     {;FRAME.c: 95:         message->data_length = 1;
  1438  000CCE  EE20 F010          	lfsr	2,16
  1439  000CD2  5006               	movf	FRAME_ExcitationValue@message,w,c
  1440  000CD4  26D9               	addwf	fsr2l,f,c
  1441  000CD6  5007               	movf	FRAME_ExcitationValue@message+1,w,c
  1442  000CD8  22DA               	addwfc	fsr2h,f,c
  1443  000CDA  0E01               	movlw	1
  1444  000CDC  6EDF               	movwf	indf2,c
  1445                           
  1446                           ;FRAME.c: 100:         message->data[0] = 0xFF;
  1447  000CDE  EE20 F008          	lfsr	2,8
  1448  000CE2  5006               	movf	FRAME_ExcitationValue@message,w,c
  1449  000CE4  26D9               	addwf	fsr2l,f,c
  1450  000CE6  5007               	movf	FRAME_ExcitationValue@message+1,w,c
  1451  000CE8  22DA               	addwfc	fsr2h,f,c
  1452  000CEA  0EFF               	movlw	255
  1453  000CEC  6EDF               	movwf	indf2,c
  1454                           
  1455                           ;FRAME.c: 101:     }
  1456  000CEE  0012               	return		;funcret
  1457  000CF0                     __end_of_FRAME_ExcitationValue:
  1458                           	opt callstack 0
  1459                           
  1460 ;; *************** function _FRAME_ExcitationMultiplier *****************
  1461 ;; Defined at:
  1462 ;;		line 115 in file "FRAME.c"
  1463 ;; Parameters:    Size  Location     Type
  1464 ;;  message         2    5[COMRAM] PTR struct .
  1465 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1466 ;; Auto vars:     Size  Location     Type
  1467 ;;  i               2    8[COMRAM] unsigned short 
  1468 ;; Return value:  Size  Location     Type
  1469 ;;                  1    wreg      void 
  1470 ;; Registers used:
  1471 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1472 ;; Tracked objects:
  1473 ;;		On entry : 0/0
  1474 ;;		On exit  : 0/0
  1475 ;;		Unchanged: 0/0
  1476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1477 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1478 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1479 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1480 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1481 ;;Total ram usage:        5 bytes
  1482 ;; Hardware stack levels used:    1
  1483 ;; Hardware stack levels required when called:    3
  1484 ;; This function calls:
  1485 ;;		Nothing
  1486 ;; This function is called by:
  1487 ;;		_FRAME_HandleCanFrame
  1488 ;; This function uses a non-reentrant model
  1489 ;;
  1490                           
  1491                           	psect	text10
  1492  000B98                     __ptext10:
  1493                           	opt callstack 0
  1494  000B98                     _FRAME_ExcitationMultiplier:
  1495                           	opt callstack 25
  1496                           
  1497                           ;FRAME.c: 115: static void FRAME_ExcitationMultiplier(mID *message);FRAME.c: 116: {;FRAM
      +                          E.c: 117:     WORD i;;FRAME.c: 119:     if(message->message_type == 0x02)
  1498                           
  1499                           ;incstack = 0
  1500  000B98  EE20 F001          	lfsr	2,1
  1501  000B9C  5006               	movf	FRAME_ExcitationMultiplier@message,w,c
  1502  000B9E  26D9               	addwf	fsr2l,f,c
  1503  000BA0  5007               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  1504  000BA2  22DA               	addwfc	fsr2h,f,c
  1505  000BA4  0E02               	movlw	2
  1506  000BA6  18DE               	xorwf	postinc2,w,c
  1507  000BA8  A4D8               	btfss	status,2,c
  1508  000BAA  0012               	return	
  1509                           
  1510                           ;FRAME.c: 120:     {;FRAME.c: 121:         message->data_length = 1;
  1511  000BAC  EE20 F010          	lfsr	2,16
  1512  000BB0  5006               	movf	FRAME_ExcitationMultiplier@message,w,c
  1513  000BB2  26D9               	addwf	fsr2l,f,c
  1514  000BB4  5007               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  1515  000BB6  22DA               	addwfc	fsr2h,f,c
  1516  000BB8  0E01               	movlw	1
  1517  000BBA  6EDF               	movwf	indf2,c
  1518                           
  1519                           ;FRAME.c: 122:         for(i=0; i<3; i++)
  1520  000BBC  0E00               	movlw	0
  1521  000BBE  6E0A               	movwf	FRAME_ExcitationMultiplier@i+1,c
  1522  000BC0  0E00               	movlw	0
  1523  000BC2  6E09               	movwf	FRAME_ExcitationMultiplier@i,c
  1524  000BC4                     l2313:
  1525                           
  1526                           ;FRAME.c: 123:         {;FRAME.c: 126:         }
  1527  000BC4  4A09               	infsnz	FRAME_ExcitationMultiplier@i,f,c
  1528  000BC6  2A0A               	incf	FRAME_ExcitationMultiplier@i+1,f,c
  1529  000BC8  500A               	movf	FRAME_ExcitationMultiplier@i+1,w,c
  1530  000BCA  E104               	bnz	u1040
  1531  000BCC  0E03               	movlw	3
  1532  000BCE  5C09               	subwf	FRAME_ExcitationMultiplier@i,w,c
  1533  000BD0  A0D8               	btfss	status,0,c
  1534  000BD2  D7F8               	goto	l2313
  1535  000BD4                     u1040:
  1536                           
  1537                           ;FRAME.c: 127:         message->data[0] = 0xFF;
  1538  000BD4  EE20 F008          	lfsr	2,8
  1539  000BD8  5006               	movf	FRAME_ExcitationMultiplier@message,w,c
  1540  000BDA  26D9               	addwf	fsr2l,f,c
  1541  000BDC  5007               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  1542  000BDE  22DA               	addwfc	fsr2h,f,c
  1543  000BE0  0EFF               	movlw	255
  1544  000BE2  6EDF               	movwf	indf2,c
  1545                           
  1546                           ;FRAME.c: 128:     }
  1547  000BE4  0012               	return		;funcret
  1548  000BE6                     __end_of_FRAME_ExcitationMultiplier:
  1549                           	opt callstack 0
  1550                           
  1551 ;; *************** function _FRAME_DeviceReset *****************
  1552 ;; Defined at:
  1553 ;;		line 249 in file "FRAME.c"
  1554 ;; Parameters:    Size  Location     Type
  1555 ;;  message         2    5[COMRAM] PTR struct .
  1556 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1557 ;; Auto vars:     Size  Location     Type
  1558 ;;		None
  1559 ;; Return value:  Size  Location     Type
  1560 ;;                  1    wreg      void 
  1561 ;; Registers used:
  1562 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1563 ;; Tracked objects:
  1564 ;;		On entry : 0/0
  1565 ;;		On exit  : 0/0
  1566 ;;		Unchanged: 0/0
  1567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1568 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1570 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1571 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1572 ;;Total ram usage:        3 bytes
  1573 ;; Hardware stack levels used:    1
  1574 ;; Hardware stack levels required when called:    3
  1575 ;; This function calls:
  1576 ;;		Nothing
  1577 ;; This function is called by:
  1578 ;;		_FRAME_HandleCanFrame
  1579 ;; This function uses a non-reentrant model
  1580 ;;
  1581                           
  1582                           	psect	text11
  1583  000A42                     __ptext11:
  1584                           	opt callstack 0
  1585  000A42                     _FRAME_DeviceReset:
  1586                           	opt callstack 25
  1587                           
  1588                           ;FRAME.c: 249: static void FRAME_DeviceReset(mID *message);FRAME.c: 250: {;FRAME.c: 251:
      +                               if(message->message_type == 0x02)
  1589                           
  1590                           ;incstack = 0
  1591  000A42  EE20 F001          	lfsr	2,1
  1592  000A46  5006               	movf	FRAME_DeviceReset@message,w,c
  1593  000A48  26D9               	addwf	fsr2l,f,c
  1594  000A4A  5007               	movf	FRAME_DeviceReset@message+1,w,c
  1595  000A4C  22DA               	addwfc	fsr2h,f,c
  1596  000A4E  0E02               	movlw	2
  1597  000A50  18DE               	xorwf	postinc2,w,c
  1598  000A52  A4D8               	btfss	status,2,c
  1599  000A54  D011               	goto	l2331
  1600                           
  1601                           ;FRAME.c: 252:     {;FRAME.c: 253:         message->data_length = 1;
  1602  000A56  EE20 F010          	lfsr	2,16
  1603  000A5A  5006               	movf	FRAME_DeviceReset@message,w,c
  1604  000A5C  26D9               	addwf	fsr2l,f,c
  1605  000A5E  5007               	movf	FRAME_DeviceReset@message+1,w,c
  1606  000A60  22DA               	addwfc	fsr2h,f,c
  1607  000A62  0E01               	movlw	1
  1608  000A64  6EDF               	movwf	indf2,c
  1609                           
  1610                           ;FRAME.c: 266:         message->data[0] = 0xFF;
  1611  000A66  EE20 F008          	lfsr	2,8
  1612  000A6A  5006               	movf	FRAME_DeviceReset@message,w,c
  1613  000A6C  26D9               	addwf	fsr2l,f,c
  1614  000A6E  5007               	movf	FRAME_DeviceReset@message+1,w,c
  1615  000A70  22DA               	addwfc	fsr2h,f,c
  1616  000A72  0EFF               	movlw	255
  1617  000A74  6EDF               	movwf	indf2,c
  1618                           
  1619                           ;FRAME.c: 267:     }
  1620  000A76  0012               	return	
  1621  000A78                     l2331:
  1622                           
  1623                           ;FRAME.c: 269:     {;FRAME.c: 270:         message->data_length = 1;
  1624  000A78  EE20 F010          	lfsr	2,16
  1625  000A7C  5006               	movf	FRAME_DeviceReset@message,w,c
  1626  000A7E  26D9               	addwf	fsr2l,f,c
  1627  000A80  5007               	movf	FRAME_DeviceReset@message+1,w,c
  1628  000A82  22DA               	addwfc	fsr2h,f,c
  1629  000A84  0E01               	movlw	1
  1630  000A86  6EDF               	movwf	indf2,c
  1631                           
  1632                           ;FRAME.c: 292:         message->data[0] = 0xFF;
  1633  000A88  EE20 F008          	lfsr	2,8
  1634  000A8C  5006               	movf	FRAME_DeviceReset@message,w,c
  1635  000A8E  26D9               	addwf	fsr2l,f,c
  1636  000A90  5007               	movf	FRAME_DeviceReset@message+1,w,c
  1637  000A92  22DA               	addwfc	fsr2h,f,c
  1638  000A94  0EFF               	movlw	255
  1639  000A96  6EDF               	movwf	indf2,c
  1640  000A98  0012               	return		;funcret
  1641  000A9A                     __end_of_FRAME_DeviceReset:
  1642                           	opt callstack 0
  1643                           
  1644 ;; *************** function _FRAME_AxisStatus *****************
  1645 ;; Defined at:
  1646 ;;		line 202 in file "FRAME.c"
  1647 ;; Parameters:    Size  Location     Type
  1648 ;;  message         2    5[COMRAM] PTR struct .
  1649 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1650 ;; Auto vars:     Size  Location     Type
  1651 ;;  i               2    0        unsigned short 
  1652 ;; Return value:  Size  Location     Type
  1653 ;;                  1    wreg      void 
  1654 ;; Registers used:
  1655 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1656 ;; Tracked objects:
  1657 ;;		On entry : 0/0
  1658 ;;		On exit  : 0/0
  1659 ;;		Unchanged: 0/0
  1660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1661 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1663 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1664 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1665 ;;Total ram usage:        3 bytes
  1666 ;; Hardware stack levels used:    1
  1667 ;; Hardware stack levels required when called:    3
  1668 ;; This function calls:
  1669 ;;		Nothing
  1670 ;; This function is called by:
  1671 ;;		_FRAME_HandleCanFrame
  1672 ;; This function uses a non-reentrant model
  1673 ;;
  1674                           
  1675                           	psect	text12
  1676  000CF0                     __ptext12:
  1677                           	opt callstack 0
  1678  000CF0                     _FRAME_AxisStatus:
  1679                           	opt callstack 25
  1680                           
  1681                           ;FRAME.c: 202: static void FRAME_AxisStatus(mID *message);FRAME.c: 203: {;FRAME.c: 204: 
      +                              WORD i;;FRAME.c: 206:     if(message->message_type == 0x02)
  1682                           
  1683                           ;incstack = 0
  1684  000CF0  EE20 F001          	lfsr	2,1
  1685  000CF4  5006               	movf	FRAME_AxisStatus@message,w,c
  1686  000CF6  26D9               	addwf	fsr2l,f,c
  1687  000CF8  5007               	movf	FRAME_AxisStatus@message+1,w,c
  1688  000CFA  22DA               	addwfc	fsr2h,f,c
  1689  000CFC  0E02               	movlw	2
  1690  000CFE  18DE               	xorwf	postinc2,w,c
  1691  000D00  A4D8               	btfss	status,2,c
  1692  000D02  0012               	return	
  1693                           
  1694                           ;FRAME.c: 207:     {;FRAME.c: 208:         message->data_length = 1;
  1695  000D04  EE20 F010          	lfsr	2,16
  1696  000D08  5006               	movf	FRAME_AxisStatus@message,w,c
  1697  000D0A  26D9               	addwf	fsr2l,f,c
  1698  000D0C  5007               	movf	FRAME_AxisStatus@message+1,w,c
  1699  000D0E  22DA               	addwfc	fsr2h,f,c
  1700  000D10  0E01               	movlw	1
  1701  000D12  6EDF               	movwf	indf2,c
  1702                           
  1703                           ;FRAME.c: 219:         message->data[0] = 0xFF;
  1704  000D14  EE20 F008          	lfsr	2,8
  1705  000D18  5006               	movf	FRAME_AxisStatus@message,w,c
  1706  000D1A  26D9               	addwf	fsr2l,f,c
  1707  000D1C  5007               	movf	FRAME_AxisStatus@message+1,w,c
  1708  000D1E  22DA               	addwfc	fsr2h,f,c
  1709  000D20  0EFF               	movlw	255
  1710  000D22  6EDF               	movwf	indf2,c
  1711                           
  1712                           ;FRAME.c: 220:     }
  1713  000D24  0012               	return		;funcret
  1714  000D26                     __end_of_FRAME_AxisStatus:
  1715                           	opt callstack 0
  1716                           
  1717 ;; *************** function _FRAME_AveragingTimes *****************
  1718 ;; Defined at:
  1719 ;;		line 143 in file "FRAME.c"
  1720 ;; Parameters:    Size  Location     Type
  1721 ;;  message         2    5[COMRAM] PTR struct .
  1722 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1723 ;; Auto vars:     Size  Location     Type
  1724 ;;		None
  1725 ;; Return value:  Size  Location     Type
  1726 ;;                  1    wreg      void 
  1727 ;; Registers used:
  1728 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1729 ;; Tracked objects:
  1730 ;;		On entry : 0/0
  1731 ;;		On exit  : 0/0
  1732 ;;		Unchanged: 0/0
  1733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1734 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1736 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1737 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1738 ;;Total ram usage:        3 bytes
  1739 ;; Hardware stack levels used:    1
  1740 ;; Hardware stack levels required when called:    3
  1741 ;; This function calls:
  1742 ;;		Nothing
  1743 ;; This function is called by:
  1744 ;;		_FRAME_HandleCanFrame
  1745 ;; This function uses a non-reentrant model
  1746 ;;
  1747                           
  1748                           	psect	text13
  1749  000D26                     __ptext13:
  1750                           	opt callstack 0
  1751  000D26                     _FRAME_AveragingTimes:
  1752                           	opt callstack 25
  1753                           
  1754                           ;FRAME.c: 143: static void FRAME_AveragingTimes(mID *message);FRAME.c: 144: {;FRAME.c: 1
      +                          45:     if(message->message_type == 0x02)
  1755                           
  1756                           ;incstack = 0
  1757  000D26  EE20 F001          	lfsr	2,1
  1758  000D2A  5006               	movf	FRAME_AveragingTimes@message,w,c
  1759  000D2C  26D9               	addwf	fsr2l,f,c
  1760  000D2E  5007               	movf	FRAME_AveragingTimes@message+1,w,c
  1761  000D30  22DA               	addwfc	fsr2h,f,c
  1762  000D32  0E02               	movlw	2
  1763  000D34  18DE               	xorwf	postinc2,w,c
  1764  000D36  A4D8               	btfss	status,2,c
  1765  000D38  0012               	return	
  1766                           
  1767                           ;FRAME.c: 146:     {;FRAME.c: 147:         message->data_length = 1;
  1768  000D3A  EE20 F010          	lfsr	2,16
  1769  000D3E  5006               	movf	FRAME_AveragingTimes@message,w,c
  1770  000D40  26D9               	addwf	fsr2l,f,c
  1771  000D42  5007               	movf	FRAME_AveragingTimes@message+1,w,c
  1772  000D44  22DA               	addwfc	fsr2h,f,c
  1773  000D46  0E01               	movlw	1
  1774  000D48  6EDF               	movwf	indf2,c
  1775                           
  1776                           ;FRAME.c: 155:         message->data[0] = 0xFF;
  1777  000D4A  EE20 F008          	lfsr	2,8
  1778  000D4E  5006               	movf	FRAME_AveragingTimes@message,w,c
  1779  000D50  26D9               	addwf	fsr2l,f,c
  1780  000D52  5007               	movf	FRAME_AveragingTimes@message+1,w,c
  1781  000D54  22DA               	addwfc	fsr2h,f,c
  1782  000D56  0EFF               	movlw	255
  1783  000D58  6EDF               	movwf	indf2,c
  1784                           
  1785                           ;FRAME.c: 156:     }
  1786  000D5A  0012               	return		;funcret
  1787  000D5C                     __end_of_FRAME_AveragingTimes:
  1788                           	opt callstack 0
  1789                           
  1790 ;; *************** function _FRAME_AnalogValue *****************
  1791 ;; Defined at:
  1792 ;;		line 372 in file "FRAME.c"
  1793 ;; Parameters:    Size  Location     Type
  1794 ;;  message         2    5[COMRAM] PTR struct .
  1795 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1796 ;;  set             2    7[COMRAM] unsigned short 
  1797 ;; Auto vars:     Size  Location     Type
  1798 ;;  i               2    0        unsigned short 
  1799 ;; Return value:  Size  Location     Type
  1800 ;;                  1    wreg      void 
  1801 ;; Registers used:
  1802 ;;		None
  1803 ;; Tracked objects:
  1804 ;;		On entry : 0/0
  1805 ;;		On exit  : 0/0
  1806 ;;		Unchanged: 0/0
  1807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1808 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1811 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1812 ;;Total ram usage:        4 bytes
  1813 ;; Hardware stack levels used:    1
  1814 ;; Hardware stack levels required when called:    3
  1815 ;; This function calls:
  1816 ;;		Nothing
  1817 ;; This function is called by:
  1818 ;;		_FRAME_HandleCanFrame
  1819 ;; This function uses a non-reentrant model
  1820 ;;
  1821                           
  1822                           	psect	text14
  1823  000F56                     __ptext14:
  1824                           	opt callstack 0
  1825  000F56                     _FRAME_AnalogValue:
  1826                           	opt callstack 25
  1827                           
  1828                           ;incstack = 0
  1829  000F56  0012               	return		;funcret
  1830  000F58                     __end_of_FRAME_AnalogValue:
  1831                           	opt callstack 0
  1832                           
  1833 ;; *************** function _FRAME_AdressOfNeighbors *****************
  1834 ;; Defined at:
  1835 ;;		line 415 in file "FRAME.c"
  1836 ;; Parameters:    Size  Location     Type
  1837 ;;  message         2    5[COMRAM] PTR struct .
  1838 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1839 ;;  nrRamki         2    7[COMRAM] unsigned short 
  1840 ;; Auto vars:     Size  Location     Type
  1841 ;;  i               2    0        unsigned short 
  1842 ;; Return value:  Size  Location     Type
  1843 ;;                  1    wreg      void 
  1844 ;; Registers used:
  1845 ;;		None
  1846 ;; Tracked objects:
  1847 ;;		On entry : 0/0
  1848 ;;		On exit  : 0/0
  1849 ;;		Unchanged: 0/0
  1850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1851 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1854 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1855 ;;Total ram usage:        4 bytes
  1856 ;; Hardware stack levels used:    1
  1857 ;; Hardware stack levels required when called:    3
  1858 ;; This function calls:
  1859 ;;		Nothing
  1860 ;; This function is called by:
  1861 ;;		_FRAME_HandleCanFrame
  1862 ;; This function uses a non-reentrant model
  1863 ;;
  1864                           
  1865                           	psect	text15
  1866  000F58                     __ptext15:
  1867                           	opt callstack 0
  1868  000F58                     _FRAME_AdressOfNeighbors:
  1869                           	opt callstack 25
  1870                           
  1871                           ;incstack = 0
  1872  000F58  0012               	return		;funcret
  1873  000F5A                     __end_of_FRAME_AdressOfNeighbors:
  1874                           	opt callstack 0
  1875                           
  1876 ;; *************** function _FRAME_AccelerometerStatus *****************
  1877 ;; Defined at:
  1878 ;;		line 69 in file "FRAME.c"
  1879 ;; Parameters:    Size  Location     Type
  1880 ;;  message         2    5[COMRAM] PTR struct .
  1881 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1882 ;; Auto vars:     Size  Location     Type
  1883 ;;		None
  1884 ;; Return value:  Size  Location     Type
  1885 ;;                  1    wreg      void 
  1886 ;; Registers used:
  1887 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1888 ;; Tracked objects:
  1889 ;;		On entry : 0/0
  1890 ;;		On exit  : 0/0
  1891 ;;		Unchanged: 0/0
  1892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1893 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1895 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1896 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1897 ;;Total ram usage:        3 bytes
  1898 ;; Hardware stack levels used:    1
  1899 ;; Hardware stack levels required when called:    3
  1900 ;; This function calls:
  1901 ;;		Nothing
  1902 ;; This function is called by:
  1903 ;;		_FRAME_HandleCanFrame
  1904 ;; This function uses a non-reentrant model
  1905 ;;
  1906                           
  1907                           	psect	text16
  1908  000D5C                     __ptext16:
  1909                           	opt callstack 0
  1910  000D5C                     _FRAME_AccelerometerStatus:
  1911                           	opt callstack 25
  1912                           
  1913                           ;FRAME.c: 69: static void FRAME_AccelerometerStatus(mID *message);FRAME.c: 70: {;FRAME.c
      +                          : 71:     if(message->message_type == 0x02)
  1914                           
  1915                           ;incstack = 0
  1916  000D5C  EE20 F001          	lfsr	2,1
  1917  000D60  5006               	movf	FRAME_AccelerometerStatus@message,w,c
  1918  000D62  26D9               	addwf	fsr2l,f,c
  1919  000D64  5007               	movf	FRAME_AccelerometerStatus@message+1,w,c
  1920  000D66  22DA               	addwfc	fsr2h,f,c
  1921  000D68  0E02               	movlw	2
  1922  000D6A  18DE               	xorwf	postinc2,w,c
  1923  000D6C  A4D8               	btfss	status,2,c
  1924  000D6E  0012               	return	
  1925                           
  1926                           ;FRAME.c: 72:     {;FRAME.c: 73:         message->data_length = 1;
  1927  000D70  EE20 F010          	lfsr	2,16
  1928  000D74  5006               	movf	FRAME_AccelerometerStatus@message,w,c
  1929  000D76  26D9               	addwf	fsr2l,f,c
  1930  000D78  5007               	movf	FRAME_AccelerometerStatus@message+1,w,c
  1931  000D7A  22DA               	addwfc	fsr2h,f,c
  1932  000D7C  0E01               	movlw	1
  1933  000D7E  6EDF               	movwf	indf2,c
  1934                           
  1935                           ;FRAME.c: 77:         message->data[0] = 0xFF;
  1936  000D80  EE20 F008          	lfsr	2,8
  1937  000D84  5006               	movf	FRAME_AccelerometerStatus@message,w,c
  1938  000D86  26D9               	addwf	fsr2l,f,c
  1939  000D88  5007               	movf	FRAME_AccelerometerStatus@message+1,w,c
  1940  000D8A  22DA               	addwfc	fsr2h,f,c
  1941  000D8C  0EFF               	movlw	255
  1942  000D8E  6EDF               	movwf	indf2,c
  1943                           
  1944                           ;FRAME.c: 78:     }
  1945  000D90  0012               	return		;funcret
  1946  000D92                     __end_of_FRAME_AccelerometerStatus:
  1947                           	opt callstack 0
  1948                           
  1949 ;; *************** function _CAN_SendFrame *****************
  1950 ;; Defined at:
  1951 ;;		line 183 in file "CAN.c"
  1952 ;; Parameters:    Size  Location     Type
  1953 ;;  message         2   10[COMRAM] PTR struct .
  1954 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1955 ;; Auto vars:     Size  Location     Type
  1956 ;;		None
  1957 ;; Return value:  Size  Location     Type
  1958 ;;                  1    wreg      void 
  1959 ;; Registers used:
  1960 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1961 ;; Tracked objects:
  1962 ;;		On entry : 0/0
  1963 ;;		On exit  : 0/0
  1964 ;;		Unchanged: 0/0
  1965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1966 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1968 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1969 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1970 ;;Total ram usage:        5 bytes
  1971 ;; Hardware stack levels used:    1
  1972 ;; Hardware stack levels required when called:    4
  1973 ;; This function calls:
  1974 ;;		_CAN_MoveBuffIntoFrame
  1975 ;; This function is called by:
  1976 ;;		_FRAME_HandleCanFrame
  1977 ;; This function uses a non-reentrant model
  1978 ;;
  1979                           
  1980                           	psect	text17
  1981  0004B8                     __ptext17:
  1982                           	opt callstack 0
  1983  0004B8                     _CAN_SendFrame:
  1984                           	opt callstack 24
  1985                           
  1986                           ;CAN.c: 188:     {;CAN.c: 189:         ECANCON = 0x83;
  1987                           
  1988                           ;incstack = 0
  1989                           ;CAN.c: 183: void CAN_SendFrame(mID * message);CAN.c: 184: {;CAN.c: 187:     for(;;)
  1990  0004B8  0E83               	movlw	131
  1991  0004BA  6E77               	movwf	3959,c	;volatile
  1992                           
  1993                           ;CAN.c: 190:         if(!RXB0CONbits.FILHIT3)
  1994  0004BC  A660               	btfss	3936,3,c	;volatile
  1995  0004BE  D00A               	goto	l177
  1996                           
  1997                           ;CAN.c: 195:         ECANCON = 0x84;
  1998  0004C0  0E84               	movlw	132
  1999  0004C2  6E77               	movwf	3959,c	;volatile
  2000                           
  2001                           ;CAN.c: 196:         if(!RXB0CONbits.FILHIT3)
  2002  0004C4  A660               	btfss	3936,3,c	;volatile
  2003  0004C6  D006               	goto	l177
  2004                           
  2005                           ;CAN.c: 201:         ECANCON = 0x85;
  2006  0004C8  0E85               	movlw	133
  2007  0004CA  6E77               	movwf	3959,c	;volatile
  2008                           
  2009                           ;CAN.c: 202:         if(!RXB0CONbits.FILHIT3)
  2010  0004CC  A660               	btfss	3936,3,c	;volatile
  2011  0004CE  D002               	goto	l177
  2012  0004D0  D7F3               	goto	_CAN_SendFrame
  2013  0004D2                     l178:
  2014  0004D2  00FF               	reset		;# 
  2015  0004D4                     l177:
  2016                           
  2017                           ;CAN.c: 209:     while(COMSTATbits.TXWARN)
  2018  0004D4  B474               	btfsc	3956,2,c	;volatile
  2019  0004D6  D7FD               	goto	l178
  2020                           
  2021                           ;CAN.c: 213:     DetectorLedRadar.timerRamkiTxCANU8 = 0;
  2022  0004D8  0E00               	movlw	0
  2023  0004DA  6E3E               	movwf	_DetectorLedRadar+1,c
  2024                           
  2025                           ;CAN.c: 214:     RXB0EIDL = message->id.v[0];
  2026  0004DC  EE20 F004          	lfsr	2,4
  2027  0004E0  500B               	movf	CAN_SendFrame@message,w,c
  2028  0004E2  26D9               	addwf	fsr2l,f,c
  2029  0004E4  500C               	movf	CAN_SendFrame@message+1,w,c
  2030  0004E6  22DA               	addwfc	fsr2h,f,c
  2031  0004E8  50DF               	movf	indf2,w,c
  2032  0004EA  6E64               	movwf	3940,c	;volatile
  2033                           
  2034                           ;CAN.c: 215:     RXB0EIDH = message->id.v[1];
  2035  0004EC  EE20 F005          	lfsr	2,5
  2036  0004F0  500B               	movf	CAN_SendFrame@message,w,c
  2037  0004F2  26D9               	addwf	fsr2l,f,c
  2038  0004F4  500C               	movf	CAN_SendFrame@message+1,w,c
  2039  0004F6  22DA               	addwfc	fsr2h,f,c
  2040  0004F8  50DF               	movf	indf2,w,c
  2041  0004FA  6E63               	movwf	3939,c	;volatile
  2042                           
  2043                           ;CAN.c: 216:     RXB0SIDL = ((message->id.v[2]&0xFC)*8) | (message->id.v[2] & (0x03));
  2044  0004FC  EE20 F006          	lfsr	2,6
  2045  000500  500B               	movf	CAN_SendFrame@message,w,c
  2046  000502  26D9               	addwf	fsr2l,f,c
  2047  000504  500C               	movf	CAN_SendFrame@message+1,w,c
  2048  000506  22DA               	addwfc	fsr2h,f,c
  2049  000508  50DF               	movf	indf2,w,c
  2050  00050A  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  2051  00050C  0E03               	movlw	3
  2052  00050E  160D               	andwf	??_CAN_SendFrame,f,c
  2053  000510  EE20 F006          	lfsr	2,6
  2054  000514  500B               	movf	CAN_SendFrame@message,w,c
  2055  000516  26D9               	addwf	fsr2l,f,c
  2056  000518  500C               	movf	CAN_SendFrame@message+1,w,c
  2057  00051A  22DA               	addwfc	fsr2h,f,c
  2058  00051C  50DF               	movf	indf2,w,c
  2059  00051E  0BFC               	andlw	252
  2060  000520  0D08               	mullw	8
  2061  000522  50F3               	movf	prodl,w,c
  2062  000524  100D               	iorwf	??_CAN_SendFrame,w,c
  2063  000526  6E62               	movwf	3938,c	;volatile
  2064                           
  2065                           ;CAN.c: 217:     RXB0SIDLbits.EXID = 1;
  2066  000528  8662               	bsf	3938,3,c	;volatile
  2067                           
  2068                           ;CAN.c: 218:     RXB0SIDH = (BYTE)(message->id.w[1]/32);
  2069  00052A  EE20 F006          	lfsr	2,6
  2070  00052E  500B               	movf	CAN_SendFrame@message,w,c
  2071  000530  26D9               	addwf	fsr2l,f,c
  2072  000532  500C               	movf	CAN_SendFrame@message+1,w,c
  2073  000534  22DA               	addwfc	fsr2h,f,c
  2074  000536  CFDE F00D          	movff	postinc2,??_CAN_SendFrame
  2075  00053A  CFDD F00E          	movff	postdec2,??_CAN_SendFrame+1
  2076  00053E  0E05               	movlw	5
  2077  000540  6E0F               	movwf	(??_CAN_SendFrame+2)& (0+255),c
  2078  000542                     u965:
  2079  000542  90D8               	bcf	status,0,c
  2080  000544  320E               	rrcf	??_CAN_SendFrame+1,f,c
  2081  000546  320D               	rrcf	??_CAN_SendFrame,f,c
  2082  000548  2E0F               	decfsz	(??_CAN_SendFrame+2)& (0+255),f,c
  2083  00054A  D7FB               	goto	u965
  2084  00054C  500D               	movf	??_CAN_SendFrame,w,c
  2085  00054E  6E61               	movwf	3937,c	;volatile
  2086                           
  2087                           ;CAN.c: 220:     RXB0DLC = 0;
  2088  000550  0E00               	movlw	0
  2089  000552  6E65               	movwf	3941,c	;volatile
  2090                           
  2091                           ;CAN.c: 222:     if(message->message_type==0x02)
  2092  000554  EE20 F001          	lfsr	2,1
  2093  000558  500B               	movf	CAN_SendFrame@message,w,c
  2094  00055A  26D9               	addwf	fsr2l,f,c
  2095  00055C  500C               	movf	CAN_SendFrame@message+1,w,c
  2096  00055E  22DA               	addwfc	fsr2h,f,c
  2097  000560  0E02               	movlw	2
  2098  000562  18DE               	xorwf	postinc2,w,c
  2099  000564  A4D8               	btfss	status,2,c
  2100  000566  D002               	goto	l2241
  2101                           
  2102                           ;CAN.c: 223:     {;CAN.c: 224:         RXB0DLCbits.RXRTR = 1;
  2103  000568  8C65               	bsf	3941,6,c	;volatile
  2104                           
  2105                           ;CAN.c: 225:     }
  2106  00056A  D05A               	goto	l2245
  2107  00056C                     l2241:
  2108                           
  2109                           ;CAN.c: 227:     {;CAN.c: 228:         RXB0DLCbits.DLC0 = (message->data_length & 0x0F);
  2110  00056C  EE20 F010          	lfsr	2,16
  2111  000570  500B               	movf	CAN_SendFrame@message,w,c
  2112  000572  26D9               	addwf	fsr2l,f,c
  2113  000574  500C               	movf	CAN_SendFrame@message+1,w,c
  2114  000576  22DA               	addwfc	fsr2h,f,c
  2115  000578  50DF               	movf	indf2,w,c
  2116  00057A  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  2117  00057C  0E0F               	movlw	15
  2118  00057E  160D               	andwf	??_CAN_SendFrame,f,c
  2119  000580  5065               	movf	3941,w,c	;volatile
  2120  000582  180D               	xorwf	??_CAN_SendFrame,w,c
  2121  000584  0BFE               	andlw	-2
  2122  000586  180D               	xorwf	??_CAN_SendFrame,w,c
  2123  000588  6E65               	movwf	3941,c	;volatile
  2124                           
  2125                           ;CAN.c: 229:         RXB0DLCbits.DLC1 = ((message->data_length & 0x0F)>> 1);
  2126  00058A  EE20 F010          	lfsr	2,16
  2127  00058E  500B               	movf	CAN_SendFrame@message,w,c
  2128  000590  26D9               	addwf	fsr2l,f,c
  2129  000592  500C               	movf	CAN_SendFrame@message+1,w,c
  2130  000594  22DA               	addwfc	fsr2h,f,c
  2131  000596  50DF               	movf	indf2,w,c
  2132  000598  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  2133  00059A  90D8               	bcf	status,0,c
  2134  00059C  320D               	rrcf	??_CAN_SendFrame,f,c
  2135  00059E  0E07               	movlw	7
  2136  0005A0  160D               	andwf	??_CAN_SendFrame,f,c
  2137  0005A2  460D               	rlncf	??_CAN_SendFrame,f,c
  2138  0005A4  5065               	movf	3941,w,c	;volatile
  2139  0005A6  180D               	xorwf	??_CAN_SendFrame,w,c
  2140  0005A8  0BFD               	andlw	-3
  2141  0005AA  180D               	xorwf	??_CAN_SendFrame,w,c
  2142  0005AC  6E65               	movwf	3941,c	;volatile
  2143                           
  2144                           ;CAN.c: 230:         RXB0DLCbits.DLC2 = ((message->data_length & 0x0F)>> 2);
  2145  0005AE  EE20 F010          	lfsr	2,16
  2146  0005B2  500B               	movf	CAN_SendFrame@message,w,c
  2147  0005B4  26D9               	addwf	fsr2l,f,c
  2148  0005B6  500C               	movf	CAN_SendFrame@message+1,w,c
  2149  0005B8  22DA               	addwfc	fsr2h,f,c
  2150  0005BA  50DF               	movf	indf2,w,c
  2151  0005BC  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  2152  0005BE  90D8               	bcf	status,0,c
  2153  0005C0  320D               	rrcf	??_CAN_SendFrame,f,c
  2154  0005C2  90D8               	bcf	status,0,c
  2155  0005C4  320D               	rrcf	??_CAN_SendFrame,f,c
  2156  0005C6  0E03               	movlw	3
  2157  0005C8  160D               	andwf	??_CAN_SendFrame,f,c
  2158  0005CA  460D               	rlncf	??_CAN_SendFrame,f,c
  2159  0005CC  460D               	rlncf	??_CAN_SendFrame,f,c
  2160  0005CE  5065               	movf	3941,w,c	;volatile
  2161  0005D0  180D               	xorwf	??_CAN_SendFrame,w,c
  2162  0005D2  0BFB               	andlw	-5
  2163  0005D4  180D               	xorwf	??_CAN_SendFrame,w,c
  2164  0005D6  6E65               	movwf	3941,c	;volatile
  2165                           
  2166                           ;CAN.c: 231:         RXB0DLCbits.DLC3 = ((message->data_length & 0x0F)>> 3);
  2167  0005D8  EE20 F010          	lfsr	2,16
  2168  0005DC  500B               	movf	CAN_SendFrame@message,w,c
  2169  0005DE  26D9               	addwf	fsr2l,f,c
  2170  0005E0  500C               	movf	CAN_SendFrame@message+1,w,c
  2171  0005E2  22DA               	addwfc	fsr2h,f,c
  2172  0005E4  50DF               	movf	indf2,w,c
  2173  0005E6  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  2174  0005E8  90D8               	bcf	status,0,c
  2175  0005EA  320D               	rrcf	??_CAN_SendFrame,f,c
  2176  0005EC  90D8               	bcf	status,0,c
  2177  0005EE  320D               	rrcf	??_CAN_SendFrame,f,c
  2178  0005F0  90D8               	bcf	status,0,c
  2179  0005F2  320D               	rrcf	??_CAN_SendFrame,f,c
  2180  0005F4  0E01               	movlw	1
  2181  0005F6  160D               	andwf	??_CAN_SendFrame,f,c
  2182  0005F8  460D               	rlncf	??_CAN_SendFrame,f,c
  2183  0005FA  460D               	rlncf	??_CAN_SendFrame,f,c
  2184  0005FC  460D               	rlncf	??_CAN_SendFrame,f,c
  2185  0005FE  5065               	movf	3941,w,c	;volatile
  2186  000600  180D               	xorwf	??_CAN_SendFrame,w,c
  2187  000602  0BF7               	andlw	-9
  2188  000604  180D               	xorwf	??_CAN_SendFrame,w,c
  2189  000606  6E65               	movwf	3941,c	;volatile
  2190                           
  2191                           ;CAN.c: 233:         CAN_MoveBuffIntoFrame(&RXB0D0, message->data);
  2192  000608  0E66               	movlw	102
  2193  00060A  6E06               	movwf	CAN_MoveBuffIntoFrame@Ram,c
  2194  00060C  0E0F               	movlw	15
  2195  00060E  6E07               	movwf	CAN_MoveBuffIntoFrame@Ram+1,c
  2196  000610  0E08               	movlw	8
  2197  000612  240B               	addwf	CAN_SendFrame@message,w,c
  2198  000614  6E08               	movwf	CAN_MoveBuffIntoFrame@Buf,c
  2199  000616  0E00               	movlw	0
  2200  000618  200C               	addwfc	CAN_SendFrame@message+1,w,c
  2201  00061A  6E09               	movwf	CAN_MoveBuffIntoFrame@Buf+1,c
  2202  00061C  ECFA  F006         	call	_CAN_MoveBuffIntoFrame	;wreg free
  2203  000620                     l2245:
  2204                           
  2205                           ;CAN.c: 236:     RXB0CONbits.FILHIT3 = 1;
  2206  000620  8660               	bsf	3936,3,c	;volatile
  2207                           
  2208                           ;CAN.c: 238:     DetectorLedRadar.Flags.ramkaTx = 1;
  2209  000622  883D               	bsf	_DetectorLedRadar,4,c
  2210  000624  0012               	return		;funcret
  2211  000626                     __end_of_CAN_SendFrame:
  2212                           	opt callstack 0
  2213                           
  2214 ;; *************** function _CAN_GenID *****************
  2215 ;; Defined at:
  2216 ;;		line 382 in file "CAN.c"
  2217 ;; Parameters:    Size  Location     Type
  2218 ;;  message         2    5[COMRAM] PTR struct .
  2219 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2220 ;;  frameID         1    7[COMRAM] unsigned char 
  2221 ;; Auto vars:     Size  Location     Type
  2222 ;;		None
  2223 ;; Return value:  Size  Location     Type
  2224 ;;                  1    wreg      void 
  2225 ;; Registers used:
  2226 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2227 ;; Tracked objects:
  2228 ;;		On entry : 0/0
  2229 ;;		On exit  : 0/0
  2230 ;;		Unchanged: 0/0
  2231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2232 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2235 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2236 ;;Total ram usage:        3 bytes
  2237 ;; Hardware stack levels used:    1
  2238 ;; Hardware stack levels required when called:    3
  2239 ;; This function calls:
  2240 ;;		Nothing
  2241 ;; This function is called by:
  2242 ;;		_FRAME_HandleCanFrame
  2243 ;; This function uses a non-reentrant model
  2244 ;;
  2245                           
  2246                           	psect	text18
  2247  0009E8                     __ptext18:
  2248                           	opt callstack 0
  2249  0009E8                     _CAN_GenID:
  2250                           	opt callstack 25
  2251                           
  2252                           ;CAN.c: 382: void CAN_GenID(mID * message, BYTE frameID);CAN.c: 383: {;CAN.c: 385:     m
      +                          essage->frame_type = 0x03;
  2253                           
  2254                           ;incstack = 0
  2255  0009E8  EE20 F002          	lfsr	2,2
  2256  0009EC  5006               	movf	CAN_GenID@message,w,c
  2257  0009EE  26D9               	addwf	fsr2l,f,c
  2258  0009F0  5007               	movf	CAN_GenID@message+1,w,c
  2259  0009F2  22DA               	addwfc	fsr2h,f,c
  2260  0009F4  0E03               	movlw	3
  2261  0009F6  6EDF               	movwf	indf2,c
  2262                           
  2263                           ;CAN.c: 386:     message->message_type = 0x01;
  2264  0009F8  EE20 F001          	lfsr	2,1
  2265  0009FC  5006               	movf	CAN_GenID@message,w,c
  2266  0009FE  26D9               	addwf	fsr2l,f,c
  2267  000A00  5007               	movf	CAN_GenID@message+1,w,c
  2268  000A02  22DA               	addwfc	fsr2h,f,c
  2269  000A04  0E01               	movlw	1
  2270  000A06  6EDF               	movwf	indf2,c
  2271                           
  2272                           ;CAN.c: 387:     message->id.w[1] = 0x0025;
  2273  000A08  EE20 F006          	lfsr	2,6
  2274  000A0C  5006               	movf	CAN_GenID@message,w,c
  2275  000A0E  26D9               	addwf	fsr2l,f,c
  2276  000A10  5007               	movf	CAN_GenID@message+1,w,c
  2277  000A12  22DA               	addwfc	fsr2h,f,c
  2278  000A14  0E25               	movlw	37
  2279  000A16  6EDE               	movwf	postinc2,c
  2280  000A18  0E00               	movlw	0
  2281  000A1A  6EDD               	movwf	postdec2,c
  2282                           
  2283                           ;CAN.c: 388:     message->id.w[0] = 0x8006;
  2284  000A1C  EE20 F004          	lfsr	2,4
  2285  000A20  5006               	movf	CAN_GenID@message,w,c
  2286  000A22  26D9               	addwf	fsr2l,f,c
  2287  000A24  5007               	movf	CAN_GenID@message+1,w,c
  2288  000A26  22DA               	addwfc	fsr2h,f,c
  2289  000A28  0E06               	movlw	6
  2290  000A2A  6EDE               	movwf	postinc2,c
  2291  000A2C  0E80               	movlw	128
  2292  000A2E  6EDD               	movwf	postdec2,c
  2293                           
  2294                           ;CAN.c: 389:     message->id.v[2] |= 0x01;
  2295  000A30  EE20 F006          	lfsr	2,6
  2296  000A34  5006               	movf	CAN_GenID@message,w,c
  2297  000A36  26D9               	addwf	fsr2l,f,c
  2298  000A38  5007               	movf	CAN_GenID@message+1,w,c
  2299  000A3A  22DA               	addwfc	fsr2h,f,c
  2300  000A3C  0E00               	movlw	0
  2301  000A3E  80DB               	bsf	plusw2,0,c
  2302  000A40  0012               	return		;funcret
  2303  000A42                     __end_of_CAN_GenID:
  2304                           	opt callstack 0
  2305                           
  2306 ;; *************** function _CAN_TakeFrame *****************
  2307 ;; Defined at:
  2308 ;;		line 247 in file "CAN.c"
  2309 ;; Parameters:    Size  Location     Type
  2310 ;;  message         2   13[COMRAM] PTR struct .
  2311 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2312 ;; Auto vars:     Size  Location     Type
  2313 ;;  k               1   18[COMRAM] unsigned char 
  2314 ;;  tempCON         1   17[COMRAM] unsigned char 
  2315 ;; Return value:  Size  Location     Type
  2316 ;;                  1    wreg      enum E10433
  2317 ;; Registers used:
  2318 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2319 ;; Tracked objects:
  2320 ;;		On entry : 0/0
  2321 ;;		On exit  : 0/0
  2322 ;;		Unchanged: 0/0
  2323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2324 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2325 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2326 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2327 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2328 ;;Total ram usage:        6 bytes
  2329 ;; Hardware stack levels used:    1
  2330 ;; Hardware stack levels required when called:    4
  2331 ;; This function calls:
  2332 ;;		_CAN_MoveBuffIntoFrame
  2333 ;;		___awdiv
  2334 ;; This function is called by:
  2335 ;;		_TRM_DataTransmition
  2336 ;; This function uses a non-reentrant model
  2337 ;;
  2338                           
  2339                           	psect	text19
  2340  000060                     __ptext19:
  2341                           	opt callstack 0
  2342  000060                     _CAN_TakeFrame:
  2343                           	opt callstack 25
  2344                           
  2345                           ;CAN.c: 247: BOOL CAN_TakeFrame(mID * message);CAN.c: 248: {;CAN.c: 249:     BYTE k, tem
      +                          pCON;;CAN.c: 251:     k = CANCON&0x0F;
  2346                           
  2347                           ;incstack = 0
  2348  000060  506F               	movf	3951,w,c	;volatile
  2349  000062  0B0F               	andlw	15
  2350  000064  6E13               	movwf	CAN_TakeFrame@k,c
  2351                           
  2352                           ;CAN.c: 253:     ECANCON = 0x90 | k;
  2353  000066  5013               	movf	CAN_TakeFrame@k,w,c
  2354  000068  0990               	iorlw	144
  2355  00006A  6E77               	movwf	3959,c	;volatile
  2356                           
  2357                           ;CAN.c: 256:     switch(k)
  2358  00006C  D018               	goto	l2423
  2359  00006E                     l186:
  2360                           
  2361                           ;CAN.c: 259:             tempCON = RXB0CON;
  2362  00006E  CF60 F012          	movff	3936,CAN_TakeFrame@tempCON	;volatile
  2363                           
  2364                           ;CAN.c: 260:             break;
  2365  000072  D035               	goto	l187
  2366  000074                     l188:
  2367                           
  2368                           ;CAN.c: 262:             tempCON = RXB1CON;
  2369  000074  CF50 F012          	movff	3920,CAN_TakeFrame@tempCON	;volatile
  2370                           
  2371                           ;CAN.c: 263:             break;
  2372  000078  D032               	goto	l187
  2373  00007A                     l189:
  2374                           
  2375                           ;CAN.c: 265:             tempCON = B0CON;
  2376  00007A  CE20 F012          	movff	3616,CAN_TakeFrame@tempCON	;volatile
  2377                           
  2378                           ;CAN.c: 266:             break;
  2379  00007E  D02F               	goto	l187
  2380  000080                     l190:
  2381                           
  2382                           ;CAN.c: 268:             tempCON = B1CON;
  2383  000080  CE30 F012          	movff	3632,CAN_TakeFrame@tempCON	;volatile
  2384                           
  2385                           ;CAN.c: 269:             break;
  2386  000084  D02C               	goto	l187
  2387  000086                     l191:
  2388                           
  2389                           ;CAN.c: 271:             tempCON = B2CON;
  2390  000086  CE40 F012          	movff	3648,CAN_TakeFrame@tempCON	;volatile
  2391                           
  2392                           ;CAN.c: 272:             break;
  2393  00008A  D029               	goto	l187
  2394  00008C                     l192:
  2395                           
  2396                           ;CAN.c: 274:             tempCON = B3CON;
  2397  00008C  CE50 F012          	movff	3664,CAN_TakeFrame@tempCON	;volatile
  2398                           
  2399                           ;CAN.c: 275:             break;
  2400  000090  D026               	goto	l187
  2401  000092                     l193:
  2402                           
  2403                           ;CAN.c: 277:             tempCON = B4CON;
  2404  000092  CE60 F012          	movff	3680,CAN_TakeFrame@tempCON	;volatile
  2405                           
  2406                           ;CAN.c: 278:             break;
  2407  000096  D023               	goto	l187
  2408  000098                     l194:
  2409                           
  2410                           ;CAN.c: 280:             tempCON = B5CON;
  2411  000098  CE70 F012          	movff	3696,CAN_TakeFrame@tempCON	;volatile
  2412                           
  2413                           ;CAN.c: 281:             break;
  2414  00009C  D020               	goto	l187
  2415  00009E                     l2423:
  2416  00009E  5013               	movf	CAN_TakeFrame@k,w,c
  2417  0000A0  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  2418  0000A2  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  2419                           
  2420                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2421                           ; Switch size 1, requested type "simple"
  2422                           ; Number of cases is 1, Range of values is 0 to 0
  2423                           ; switch strategies available:
  2424                           ; Name         Instructions Cycles
  2425                           ; simple_byte            4     3 (average)
  2426                           ;	Chosen strategy is simple_byte
  2427  0000A4  5011               	movf	??_CAN_TakeFrame+1,w,c
  2428  0000A6  0A00               	xorlw	0	; case 0
  2429  0000A8  A4D8               	btfss	status,2,c
  2430  0000AA  D019               	goto	l187
  2431                           
  2432                           ; Switch size 1, requested type "simple"
  2433                           ; Number of cases is 8, Range of values is 0 to 7
  2434                           ; switch strategies available:
  2435                           ; Name         Instructions Cycles
  2436                           ; simple_byte           25    13 (average)
  2437                           ;	Chosen strategy is simple_byte
  2438  0000AC  5010               	movf	??_CAN_TakeFrame,w,c
  2439  0000AE  0A00               	xorlw	0	; case 0
  2440  0000B0  B4D8               	btfsc	status,2,c
  2441  0000B2  D7DD               	goto	l186
  2442  0000B4  0A01               	xorlw	1	; case 1
  2443  0000B6  B4D8               	btfsc	status,2,c
  2444  0000B8  D7DD               	goto	l188
  2445  0000BA  0A03               	xorlw	3	; case 2
  2446  0000BC  B4D8               	btfsc	status,2,c
  2447  0000BE  D7DD               	goto	l189
  2448  0000C0  0A01               	xorlw	1	; case 3
  2449  0000C2  B4D8               	btfsc	status,2,c
  2450  0000C4  D7DD               	goto	l190
  2451  0000C6  0A07               	xorlw	7	; case 4
  2452  0000C8  B4D8               	btfsc	status,2,c
  2453  0000CA  D7DD               	goto	l191
  2454  0000CC  0A01               	xorlw	1	; case 5
  2455  0000CE  B4D8               	btfsc	status,2,c
  2456  0000D0  D7DD               	goto	l192
  2457  0000D2  0A03               	xorlw	3	; case 6
  2458  0000D4  B4D8               	btfsc	status,2,c
  2459  0000D6  D7DD               	goto	l193
  2460  0000D8  0A01               	xorlw	1	; case 7
  2461  0000DA  B4D8               	btfsc	status,2,c
  2462  0000DC  D7DD               	goto	l194
  2463  0000DE                     l187:
  2464                           
  2465                           ;CAN.c: 285:     if((tempCON & 0x80) > 0)
  2466  0000DE  AE12               	btfss	CAN_TakeFrame@tempCON,7,c
  2467  0000E0  D0A5               	goto	l2459
  2468                           
  2469                           ;CAN.c: 286:     {;CAN.c: 287:         message->buffer = RXB0CON & 0x1F;
  2470  0000E2  EE20 F003          	lfsr	2,3
  2471  0000E6  500E               	movf	CAN_TakeFrame@message,w,c
  2472  0000E8  26D9               	addwf	fsr2l,f,c
  2473  0000EA  500F               	movf	CAN_TakeFrame@message+1,w,c
  2474  0000EC  22DA               	addwfc	fsr2h,f,c
  2475  0000EE  5060               	movf	3936,w,c	;volatile
  2476  0000F0  0B1F               	andlw	31
  2477  0000F2  6EDF               	movwf	indf2,c
  2478                           
  2479                           ;CAN.c: 288:         message->id.v[0] = RXB0EIDL;
  2480  0000F4  EE20 F004          	lfsr	2,4
  2481  0000F8  500E               	movf	CAN_TakeFrame@message,w,c
  2482  0000FA  26D9               	addwf	fsr2l,f,c
  2483  0000FC  500F               	movf	CAN_TakeFrame@message+1,w,c
  2484  0000FE  22DA               	addwfc	fsr2h,f,c
  2485  000100  CF64 FFDF          	movff	3940,indf2	;volatile
  2486                           
  2487                           ;CAN.c: 289:         message->id.v[1] = RXB0EIDH;
  2488  000104  EE20 F005          	lfsr	2,5
  2489  000108  500E               	movf	CAN_TakeFrame@message,w,c
  2490  00010A  26D9               	addwf	fsr2l,f,c
  2491  00010C  500F               	movf	CAN_TakeFrame@message+1,w,c
  2492  00010E  22DA               	addwfc	fsr2h,f,c
  2493  000110  CF63 FFDF          	movff	3939,indf2	;volatile
  2494                           
  2495                           ;CAN.c: 290:         message->id.v[2] = (RXB0SIDL/8) | (RXB0SIDL&0x03);
  2496  000114  EE20 F006          	lfsr	2,6
  2497  000118  500E               	movf	CAN_TakeFrame@message,w,c
  2498  00011A  26D9               	addwf	fsr2l,f,c
  2499  00011C  500F               	movf	CAN_TakeFrame@message+1,w,c
  2500  00011E  22DA               	addwfc	fsr2h,f,c
  2501  000120  CF62 F010          	movff	3938,??_CAN_TakeFrame	;volatile
  2502  000124  0E03               	movlw	3
  2503  000126  1610               	andwf	??_CAN_TakeFrame,f,c
  2504  000128  CF62 F006          	movff	3938,___awdiv@dividend	;volatile
  2505  00012C  6A07               	clrf	___awdiv@dividend+1,c
  2506  00012E  0E00               	movlw	0
  2507  000130  6E09               	movwf	___awdiv@divisor+1,c
  2508  000132  0E08               	movlw	8
  2509  000134  6E08               	movwf	___awdiv@divisor,c
  2510  000136  EC14  F004         	call	___awdiv	;wreg free
  2511  00013A  5006               	movf	?___awdiv,w,c
  2512  00013C  1010               	iorwf	??_CAN_TakeFrame,w,c
  2513  00013E  6EDF               	movwf	indf2,c
  2514                           
  2515                           ;CAN.c: 291:         message->id.w[1] |= (WORD)RXB0SIDH*32;
  2516  000140  5061               	movf	3937,w,c	;volatile
  2517  000142  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  2518  000144  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  2519  000146  0E05               	movlw	5
  2520  000148                     u1205:
  2521  000148  90D8               	bcf	status,0,c
  2522  00014A  3610               	rlcf	??_CAN_TakeFrame,f,c
  2523  00014C  3611               	rlcf	??_CAN_TakeFrame+1,f,c
  2524  00014E  2EE8               	decfsz	wreg,f,c
  2525  000150  D7FB               	goto	u1205
  2526  000152  EE20 F006          	lfsr	2,6
  2527  000156  500E               	movf	CAN_TakeFrame@message,w,c
  2528  000158  26D9               	addwf	fsr2l,f,c
  2529  00015A  500F               	movf	CAN_TakeFrame@message+1,w,c
  2530  00015C  22DA               	addwfc	fsr2h,f,c
  2531  00015E  5010               	movf	??_CAN_TakeFrame,w,c
  2532  000160  12DE               	iorwf	postinc2,f,c
  2533  000162  5011               	movf	??_CAN_TakeFrame+1,w,c
  2534  000164  12DD               	iorwf	postdec2,f,c
  2535                           
  2536                           ;CAN.c: 292:         message->frame_type=0x03;
  2537  000166  EE20 F002          	lfsr	2,2
  2538  00016A  500E               	movf	CAN_TakeFrame@message,w,c
  2539  00016C  26D9               	addwf	fsr2l,f,c
  2540  00016E  500F               	movf	CAN_TakeFrame@message+1,w,c
  2541  000170  22DA               	addwfc	fsr2h,f,c
  2542  000172  0E03               	movlw	3
  2543  000174  6EDF               	movwf	indf2,c
  2544                           
  2545                           ;CAN.c: 296:         if(RXB0DLCbits.RXRTR == 0)
  2546  000176  BC65               	btfsc	3941,6,c	;volatile
  2547  000178  D068               	goto	l2465
  2548                           
  2549                           ;CAN.c: 297:         {;CAN.c: 298:             message->message_type = 0x01;
  2550  00017A  EE20 F001          	lfsr	2,1
  2551  00017E  500E               	movf	CAN_TakeFrame@message,w,c
  2552  000180  26D9               	addwf	fsr2l,f,c
  2553  000182  500F               	movf	CAN_TakeFrame@message+1,w,c
  2554  000184  22DA               	addwfc	fsr2h,f,c
  2555  000186  0E01               	movlw	1
  2556  000188  6EDF               	movwf	indf2,c
  2557                           
  2558                           ;CAN.c: 299:             message->data_length= RXB0DLC & 0x0F;
  2559  00018A  EE20 F010          	lfsr	2,16
  2560  00018E  500E               	movf	CAN_TakeFrame@message,w,c
  2561  000190  26D9               	addwf	fsr2l,f,c
  2562  000192  500F               	movf	CAN_TakeFrame@message+1,w,c
  2563  000194  22DA               	addwfc	fsr2h,f,c
  2564  000196  5065               	movf	3941,w,c	;volatile
  2565  000198  0B0F               	andlw	15
  2566  00019A  6EDF               	movwf	indf2,c
  2567                           
  2568                           ;CAN.c: 300:             if(message->data_length > 8)
  2569  00019C  EE20 F010          	lfsr	2,16
  2570  0001A0  500E               	movf	CAN_TakeFrame@message,w,c
  2571  0001A2  26D9               	addwf	fsr2l,f,c
  2572  0001A4  500F               	movf	CAN_TakeFrame@message+1,w,c
  2573  0001A6  22DA               	addwfc	fsr2h,f,c
  2574  0001A8  0E08               	movlw	8
  2575  0001AA  64DF               	cpfsgt	indf2,c
  2576  0001AC  D041               	goto	l2463
  2577  0001AE  D01E               	goto	l2457
  2578  0001B0                     l2439:
  2579                           
  2580                           ;CAN.c: 306:                         RXB0CON = 0;
  2581  0001B0  0E00               	movlw	0
  2582  0001B2  6E60               	movwf	3936,c	;volatile
  2583                           
  2584                           ;CAN.c: 307:                         break;
  2585  0001B4  D03B               	goto	l2459
  2586  0001B6                     l2441:
  2587                           
  2588                           ;CAN.c: 309:                         RXB1CON = 0;
  2589  0001B6  0E00               	movlw	0
  2590  0001B8  010F               	movlb	15	; () banked
  2591  0001BA  D00E               	goto	L1
  2592  0001BC                     l2443:
  2593                           
  2594                           ;CAN.c: 312:                         B0CON = 0;
  2595  0001BC  0E00               	movlw	0
  2596  0001BE  010E               	movlb	14	; () banked
  2597  0001C0  6F20               	movwf	32,b	;volatile
  2598                           
  2599                           ;CAN.c: 313:                         break;
  2600  0001C2  D034               	goto	l2459
  2601  0001C4                     l2445:
  2602                           
  2603                           ;CAN.c: 315:                         B1CON = 0;
  2604  0001C4  0E00               	movlw	0
  2605  0001C6  010E               	movlb	14	; () banked
  2606  0001C8  6F30               	movwf	48,b	;volatile
  2607                           
  2608                           ;CAN.c: 316:                         break;
  2609  0001CA  D030               	goto	l2459
  2610  0001CC                     l2447:
  2611                           
  2612                           ;CAN.c: 318:                         B2CON = 0;
  2613  0001CC  0E00               	movlw	0
  2614  0001CE  010E               	movlb	14	; () banked
  2615  0001D0  6F40               	movwf	64,b	;volatile
  2616                           
  2617                           ;CAN.c: 319:                         break;
  2618  0001D2  D02C               	goto	l2459
  2619  0001D4                     l2449:
  2620                           
  2621                           ;CAN.c: 321:                         B3CON = 0;
  2622  0001D4  0E00               	movlw	0
  2623  0001D6  010E               	movlb	14	; () banked
  2624  0001D8                     L1:
  2625  0001D8  6F50               	movwf	80,b	;volatile
  2626                           
  2627                           ;CAN.c: 322:                         break;
  2628  0001DA  D028               	goto	l2459
  2629  0001DC                     l2451:
  2630                           
  2631                           ;CAN.c: 324:                         B4CON = 0;
  2632  0001DC  0E00               	movlw	0
  2633  0001DE  010E               	movlb	14	; () banked
  2634  0001E0  6F60               	movwf	96,b	;volatile
  2635                           
  2636                           ;CAN.c: 325:                         break;
  2637  0001E2  D024               	goto	l2459
  2638  0001E4                     l2453:
  2639                           
  2640                           ;CAN.c: 327:                         B5CON = 0;
  2641  0001E4  0E00               	movlw	0
  2642  0001E6  010E               	movlb	14	; () banked
  2643  0001E8  6F70               	movwf	112,b	;volatile
  2644                           
  2645                           ;CAN.c: 328:                         break;
  2646  0001EA  D020               	goto	l2459
  2647  0001EC                     l2457:
  2648  0001EC  5013               	movf	CAN_TakeFrame@k,w,c
  2649  0001EE  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  2650  0001F0  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  2651                           
  2652                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2653                           ; Switch size 1, requested type "simple"
  2654                           ; Number of cases is 1, Range of values is 0 to 0
  2655                           ; switch strategies available:
  2656                           ; Name         Instructions Cycles
  2657                           ; simple_byte            4     3 (average)
  2658                           ;	Chosen strategy is simple_byte
  2659  0001F2  5011               	movf	??_CAN_TakeFrame+1,w,c
  2660  0001F4  0A00               	xorlw	0	; case 0
  2661  0001F6  A4D8               	btfss	status,2,c
  2662  0001F8  D019               	goto	l2459
  2663                           
  2664                           ; Switch size 1, requested type "simple"
  2665                           ; Number of cases is 8, Range of values is 0 to 7
  2666                           ; switch strategies available:
  2667                           ; Name         Instructions Cycles
  2668                           ; simple_byte           25    13 (average)
  2669                           ;	Chosen strategy is simple_byte
  2670  0001FA  5010               	movf	??_CAN_TakeFrame,w,c
  2671  0001FC  0A00               	xorlw	0	; case 0
  2672  0001FE  B4D8               	btfsc	status,2,c
  2673  000200  D7D7               	goto	l2439
  2674  000202  0A01               	xorlw	1	; case 1
  2675  000204  B4D8               	btfsc	status,2,c
  2676  000206  D7D7               	goto	l2441
  2677  000208  0A03               	xorlw	3	; case 2
  2678  00020A  B4D8               	btfsc	status,2,c
  2679  00020C  D7D7               	goto	l2443
  2680  00020E  0A01               	xorlw	1	; case 3
  2681  000210  B4D8               	btfsc	status,2,c
  2682  000212  D7D8               	goto	l2445
  2683  000214  0A07               	xorlw	7	; case 4
  2684  000216  B4D8               	btfsc	status,2,c
  2685  000218  D7D9               	goto	l2447
  2686  00021A  0A01               	xorlw	1	; case 5
  2687  00021C  B4D8               	btfsc	status,2,c
  2688  00021E  D7DA               	goto	l2449
  2689  000220  0A03               	xorlw	3	; case 6
  2690  000222  B4D8               	btfsc	status,2,c
  2691  000224  D7DB               	goto	l2451
  2692  000226  0A01               	xorlw	1	; case 7
  2693  000228  B4D8               	btfsc	status,2,c
  2694  00022A  D7DC               	goto	l2453
  2695  00022C                     l2459:
  2696                           
  2697                           ;CAN.c: 330:                 return FALSE;
  2698  00022C  0E00               	movlw	0
  2699  00022E  0012               	return	
  2700  000230                     l2463:
  2701                           
  2702                           ;CAN.c: 332:             CAN_MoveBuffIntoFrame(message->data, &RXB0D0);
  2703  000230  0E08               	movlw	8
  2704  000232  240E               	addwf	CAN_TakeFrame@message,w,c
  2705  000234  6E06               	movwf	CAN_MoveBuffIntoFrame@Ram,c
  2706  000236  0E00               	movlw	0
  2707  000238  200F               	addwfc	CAN_TakeFrame@message+1,w,c
  2708  00023A  6E07               	movwf	CAN_MoveBuffIntoFrame@Ram+1,c
  2709  00023C  0E66               	movlw	102
  2710  00023E  6E08               	movwf	CAN_MoveBuffIntoFrame@Buf,c
  2711  000240  0E0F               	movlw	15
  2712  000242  6E09               	movwf	CAN_MoveBuffIntoFrame@Buf+1,c
  2713  000244  ECFA  F006         	call	_CAN_MoveBuffIntoFrame	;wreg free
  2714                           
  2715                           ;CAN.c: 333:         }
  2716  000248  D027               	goto	l2485
  2717  00024A                     l2465:
  2718                           
  2719                           ;CAN.c: 336:         {;CAN.c: 337:             message->message_type=0x02;
  2720  00024A  EE20 F001          	lfsr	2,1
  2721  00024E  500E               	movf	CAN_TakeFrame@message,w,c
  2722  000250  26D9               	addwf	fsr2l,f,c
  2723  000252  500F               	movf	CAN_TakeFrame@message+1,w,c
  2724  000254  22DA               	addwfc	fsr2h,f,c
  2725  000256  0E02               	movlw	2
  2726  000258  6EDF               	movwf	indf2,c
  2727  00025A  D01E               	goto	l2485
  2728  00025C                     l2467:
  2729                           
  2730                           ;CAN.c: 343:                 RXB0CON = 0;
  2731  00025C  0E00               	movlw	0
  2732  00025E  6E60               	movwf	3936,c	;volatile
  2733                           
  2734                           ;CAN.c: 344:                 break;
  2735  000260  D03B               	goto	l2487
  2736  000262                     l2469:
  2737                           
  2738                           ;CAN.c: 346:                 RXB1CON = 0;
  2739  000262  0E00               	movlw	0
  2740  000264  010F               	movlb	15	; () banked
  2741  000266  D00E               	goto	L2
  2742  000268                     l2471:
  2743                           
  2744                           ;CAN.c: 349:                 B0CON = 0;
  2745  000268  0E00               	movlw	0
  2746  00026A  010E               	movlb	14	; () banked
  2747  00026C  6F20               	movwf	32,b	;volatile
  2748                           
  2749                           ;CAN.c: 350:                 break;
  2750  00026E  D034               	goto	l2487
  2751  000270                     l2473:
  2752                           
  2753                           ;CAN.c: 352:                 B1CON = 0;
  2754  000270  0E00               	movlw	0
  2755  000272  010E               	movlb	14	; () banked
  2756  000274  6F30               	movwf	48,b	;volatile
  2757                           
  2758                           ;CAN.c: 353:                 break;
  2759  000276  D030               	goto	l2487
  2760  000278                     l2475:
  2761                           
  2762                           ;CAN.c: 355:                 B2CON = 0;
  2763  000278  0E00               	movlw	0
  2764  00027A  010E               	movlb	14	; () banked
  2765  00027C  6F40               	movwf	64,b	;volatile
  2766                           
  2767                           ;CAN.c: 356:                 break;
  2768  00027E  D02C               	goto	l2487
  2769  000280                     l2477:
  2770                           
  2771                           ;CAN.c: 358:                 B3CON = 0;
  2772  000280  0E00               	movlw	0
  2773  000282  010E               	movlb	14	; () banked
  2774  000284                     L2:
  2775  000284  6F50               	movwf	80,b	;volatile
  2776                           
  2777                           ;CAN.c: 359:                 break;
  2778  000286  D028               	goto	l2487
  2779  000288                     l2479:
  2780                           
  2781                           ;CAN.c: 361:                 B4CON = 0;
  2782  000288  0E00               	movlw	0
  2783  00028A  010E               	movlb	14	; () banked
  2784  00028C  6F60               	movwf	96,b	;volatile
  2785                           
  2786                           ;CAN.c: 362:                 break;
  2787  00028E  D024               	goto	l2487
  2788  000290                     l2481:
  2789                           
  2790                           ;CAN.c: 364:                 B5CON = 0;
  2791  000290  0E00               	movlw	0
  2792  000292  010E               	movlb	14	; () banked
  2793  000294  6F70               	movwf	112,b	;volatile
  2794                           
  2795                           ;CAN.c: 365:                 break;
  2796  000296  D020               	goto	l2487
  2797  000298                     l2485:
  2798  000298  5013               	movf	CAN_TakeFrame@k,w,c
  2799  00029A  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  2800  00029C  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  2801                           
  2802                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2803                           ; Switch size 1, requested type "simple"
  2804                           ; Number of cases is 1, Range of values is 0 to 0
  2805                           ; switch strategies available:
  2806                           ; Name         Instructions Cycles
  2807                           ; simple_byte            4     3 (average)
  2808                           ;	Chosen strategy is simple_byte
  2809  00029E  5011               	movf	??_CAN_TakeFrame+1,w,c
  2810  0002A0  0A00               	xorlw	0	; case 0
  2811  0002A2  A4D8               	btfss	status,2,c
  2812  0002A4  D019               	goto	l2487
  2813                           
  2814                           ; Switch size 1, requested type "simple"
  2815                           ; Number of cases is 8, Range of values is 0 to 7
  2816                           ; switch strategies available:
  2817                           ; Name         Instructions Cycles
  2818                           ; simple_byte           25    13 (average)
  2819                           ;	Chosen strategy is simple_byte
  2820  0002A6  5010               	movf	??_CAN_TakeFrame,w,c
  2821  0002A8  0A00               	xorlw	0	; case 0
  2822  0002AA  B4D8               	btfsc	status,2,c
  2823  0002AC  D7D7               	goto	l2467
  2824  0002AE  0A01               	xorlw	1	; case 1
  2825  0002B0  B4D8               	btfsc	status,2,c
  2826  0002B2  D7D7               	goto	l2469
  2827  0002B4  0A03               	xorlw	3	; case 2
  2828  0002B6  B4D8               	btfsc	status,2,c
  2829  0002B8  D7D7               	goto	l2471
  2830  0002BA  0A01               	xorlw	1	; case 3
  2831  0002BC  B4D8               	btfsc	status,2,c
  2832  0002BE  D7D8               	goto	l2473
  2833  0002C0  0A07               	xorlw	7	; case 4
  2834  0002C2  B4D8               	btfsc	status,2,c
  2835  0002C4  D7D9               	goto	l2475
  2836  0002C6  0A01               	xorlw	1	; case 5
  2837  0002C8  B4D8               	btfsc	status,2,c
  2838  0002CA  D7DA               	goto	l2477
  2839  0002CC  0A03               	xorlw	3	; case 6
  2840  0002CE  B4D8               	btfsc	status,2,c
  2841  0002D0  D7DB               	goto	l2479
  2842  0002D2  0A01               	xorlw	1	; case 7
  2843  0002D4  B4D8               	btfsc	status,2,c
  2844  0002D6  D7DC               	goto	l2481
  2845  0002D8                     l2487:
  2846                           
  2847                           ;CAN.c: 367:         return TRUE;
  2848  0002D8  0E01               	movlw	1
  2849  0002DA  0012               	return		;funcret
  2850  0002DC                     __end_of_CAN_TakeFrame:
  2851                           	opt callstack 0
  2852                           
  2853 ;; *************** function ___awdiv *****************
  2854 ;; Defined at:
  2855 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  2856 ;; Parameters:    Size  Location     Type
  2857 ;;  dividend        2    5[COMRAM] int 
  2858 ;;  divisor         2    7[COMRAM] int 
  2859 ;; Auto vars:     Size  Location     Type
  2860 ;;  quotient        2   11[COMRAM] int 
  2861 ;;  sign            1   10[COMRAM] unsigned char 
  2862 ;;  counter         1    9[COMRAM] unsigned char 
  2863 ;; Return value:  Size  Location     Type
  2864 ;;                  2    5[COMRAM] int 
  2865 ;; Registers used:
  2866 ;;		wreg, status,2, status,0
  2867 ;; Tracked objects:
  2868 ;;		On entry : 0/0
  2869 ;;		On exit  : 0/0
  2870 ;;		Unchanged: 0/0
  2871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2872 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2873 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2875 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2876 ;;Total ram usage:        8 bytes
  2877 ;; Hardware stack levels used:    1
  2878 ;; Hardware stack levels required when called:    3
  2879 ;; This function calls:
  2880 ;;		Nothing
  2881 ;; This function is called by:
  2882 ;;		_CAN_TakeFrame
  2883 ;;		_FRAME_HandleCanFrame
  2884 ;; This function uses a non-reentrant model
  2885 ;;
  2886                           
  2887                           	psect	text20
  2888  000828                     __ptext20:
  2889                           	opt callstack 0
  2890  000828                     ___awdiv:
  2891                           	opt callstack 25
  2892                           
  2893                           ;incstack = 0
  2894  000828  0E00               	movlw	0
  2895  00082A  6E0B               	movwf	___awdiv@sign,c
  2896  00082C  AE09               	btfss	___awdiv@divisor+1,7,c
  2897  00082E  D006               	goto	l2343
  2898  000830  6C08               	negf	___awdiv@divisor,c
  2899  000832  1E09               	comf	___awdiv@divisor+1,f,c
  2900  000834  B0D8               	btfsc	status,0,c
  2901  000836  2A09               	incf	___awdiv@divisor+1,f,c
  2902  000838  0E01               	movlw	1
  2903  00083A  6E0B               	movwf	___awdiv@sign,c
  2904  00083C                     l2343:
  2905  00083C  AE07               	btfss	___awdiv@dividend+1,7,c
  2906  00083E  D006               	goto	l2349
  2907  000840  6C06               	negf	___awdiv@dividend,c
  2908  000842  1E07               	comf	___awdiv@dividend+1,f,c
  2909  000844  B0D8               	btfsc	status,0,c
  2910  000846  2A07               	incf	___awdiv@dividend+1,f,c
  2911  000848  0E01               	movlw	1
  2912  00084A  1A0B               	xorwf	___awdiv@sign,f,c
  2913  00084C                     l2349:
  2914  00084C  0E00               	movlw	0
  2915  00084E  6E0D               	movwf	___awdiv@quotient+1,c
  2916  000850  0E00               	movlw	0
  2917  000852  6E0C               	movwf	___awdiv@quotient,c
  2918  000854  5008               	movf	___awdiv@divisor,w,c
  2919  000856  1009               	iorwf	___awdiv@divisor+1,w,c
  2920  000858  B4D8               	btfsc	status,2,c
  2921  00085A  D01C               	goto	l2371
  2922  00085C  0E01               	movlw	1
  2923  00085E  6E0A               	movwf	___awdiv@counter,c
  2924  000860  D004               	goto	l2357
  2925  000862                     l2355:
  2926  000862  90D8               	bcf	status,0,c
  2927  000864  3608               	rlcf	___awdiv@divisor,f,c
  2928  000866  3609               	rlcf	___awdiv@divisor+1,f,c
  2929  000868  2A0A               	incf	___awdiv@counter,f,c
  2930  00086A                     l2357:
  2931  00086A  AE09               	btfss	___awdiv@divisor+1,7,c
  2932  00086C  D7FA               	goto	l2355
  2933  00086E                     u1110:
  2934  00086E  90D8               	bcf	status,0,c
  2935  000870  360C               	rlcf	___awdiv@quotient,f,c
  2936  000872  360D               	rlcf	___awdiv@quotient+1,f,c
  2937  000874  5008               	movf	___awdiv@divisor,w,c
  2938  000876  5C06               	subwf	___awdiv@dividend,w,c
  2939  000878  5009               	movf	___awdiv@divisor+1,w,c
  2940  00087A  5807               	subwfb	___awdiv@dividend+1,w,c
  2941  00087C  A0D8               	btfss	status,0,c
  2942  00087E  D005               	goto	l2367
  2943  000880  5008               	movf	___awdiv@divisor,w,c
  2944  000882  5E06               	subwf	___awdiv@dividend,f,c
  2945  000884  5009               	movf	___awdiv@divisor+1,w,c
  2946  000886  5A07               	subwfb	___awdiv@dividend+1,f,c
  2947  000888  800C               	bsf	___awdiv@quotient,0,c
  2948  00088A                     l2367:
  2949  00088A  90D8               	bcf	status,0,c
  2950  00088C  3209               	rrcf	___awdiv@divisor+1,f,c
  2951  00088E  3208               	rrcf	___awdiv@divisor,f,c
  2952  000890  2E0A               	decfsz	___awdiv@counter,f,c
  2953  000892  D7ED               	goto	u1110
  2954  000894                     l2371:
  2955  000894  500B               	movf	___awdiv@sign,w,c
  2956  000896  B4D8               	btfsc	status,2,c
  2957  000898  D004               	goto	l2375
  2958  00089A  6C0C               	negf	___awdiv@quotient,c
  2959  00089C  1E0D               	comf	___awdiv@quotient+1,f,c
  2960  00089E  B0D8               	btfsc	status,0,c
  2961  0008A0  2A0D               	incf	___awdiv@quotient+1,f,c
  2962  0008A2                     l2375:
  2963  0008A2  C00C  F006         	movff	___awdiv@quotient,?___awdiv
  2964  0008A6  C00D  F007         	movff	___awdiv@quotient+1,?___awdiv+1
  2965  0008AA  0012               	return		;funcret
  2966  0008AC                     __end_of___awdiv:
  2967                           	opt callstack 0
  2968                           
  2969 ;; *************** function _CAN_MoveBuffIntoFrame *****************
  2970 ;; Defined at:
  2971 ;;		line 169 in file "CAN.c"
  2972 ;; Parameters:    Size  Location     Type
  2973 ;;  Ram             2    5[COMRAM] PTR unsigned char 
  2974 ;;		 -> TRM_DataTransmition@canMessage(17), RXB0D0(1), 
  2975 ;;  Buf             2    7[COMRAM] PTR unsigned char 
  2976 ;;		 -> TRM_DataTransmition@canMessage(17), RXB0D0(1), 
  2977 ;; Auto vars:     Size  Location     Type
  2978 ;;  i               1    9[COMRAM] unsigned char 
  2979 ;; Return value:  Size  Location     Type
  2980 ;;                  1    wreg      void 
  2981 ;; Registers used:
  2982 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2983 ;; Tracked objects:
  2984 ;;		On entry : 0/0
  2985 ;;		On exit  : 0/0
  2986 ;;		Unchanged: 0/0
  2987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2988 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2989 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2991 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2992 ;;Total ram usage:        5 bytes
  2993 ;; Hardware stack levels used:    1
  2994 ;; Hardware stack levels required when called:    3
  2995 ;; This function calls:
  2996 ;;		Nothing
  2997 ;; This function is called by:
  2998 ;;		_CAN_SendFrame
  2999 ;;		_CAN_TakeFrame
  3000 ;; This function uses a non-reentrant model
  3001 ;;
  3002                           
  3003                           	psect	text21
  3004  000DF4                     __ptext21:
  3005                           	opt callstack 0
  3006  000DF4                     _CAN_MoveBuffIntoFrame:
  3007                           	opt callstack 24
  3008                           
  3009                           ;CAN.c: 169: static void CAN_MoveBuffIntoFrame(BYTE* Ram, BYTE* Buf);CAN.c: 170: {;CAN.c
      +                          : 171:     BYTE i;;CAN.c: 172:     for(i=0; i<8; ++i)
  3010                           
  3011                           ;incstack = 0
  3012  000DF4  0E00               	movlw	0
  3013  000DF6  6E0A               	movwf	CAN_MoveBuffIntoFrame@i,c
  3014  000DF8                     l2035:
  3015                           
  3016                           ;CAN.c: 173:     {;CAN.c: 174:         Ram[i]=(*(Buf+i));
  3017  000DF8  500A               	movf	CAN_MoveBuffIntoFrame@i,w,c
  3018  000DFA  2408               	addwf	CAN_MoveBuffIntoFrame@Buf,w,c
  3019  000DFC  6ED9               	movwf	fsr2l,c
  3020  000DFE  0E00               	movlw	0
  3021  000E00  2009               	addwfc	CAN_MoveBuffIntoFrame@Buf+1,w,c
  3022  000E02  6EDA               	movwf	fsr2h,c
  3023  000E04  500A               	movf	CAN_MoveBuffIntoFrame@i,w,c
  3024  000E06  2406               	addwf	CAN_MoveBuffIntoFrame@Ram,w,c
  3025  000E08  6EE1               	movwf	fsr1l,c
  3026  000E0A  0E00               	movlw	0
  3027  000E0C  2007               	addwfc	CAN_MoveBuffIntoFrame@Ram+1,w,c
  3028  000E0E  6EE2               	movwf	fsr1h,c
  3029  000E10  CFDF FFE7          	movff	indf2,indf1
  3030                           
  3031                           ;CAN.c: 175:     }
  3032  000E14  2A0A               	incf	CAN_MoveBuffIntoFrame@i,f,c
  3033  000E16  0E07               	movlw	7
  3034  000E18  640A               	cpfsgt	CAN_MoveBuffIntoFrame@i,c
  3035  000E1A  D7EE               	goto	l2035
  3036  000E1C  0012               	return	
  3037  000E1E                     __end_of_CAN_MoveBuffIntoFrame:
  3038                           	opt callstack 0
  3039                           
  3040 ;; *************** function _TMR1_Update_flag_Set *****************
  3041 ;; Defined at:
  3042 ;;		line 32 in file "TMR1.c"
  3043 ;; Parameters:    Size  Location     Type
  3044 ;;  a               2    5[COMRAM] unsigned int 
  3045 ;; Auto vars:     Size  Location     Type
  3046 ;;		None
  3047 ;; Return value:  Size  Location     Type
  3048 ;;                  1    wreg      void 
  3049 ;; Registers used:
  3050 ;;		None
  3051 ;; Tracked objects:
  3052 ;;		On entry : 0/0
  3053 ;;		On exit  : 0/0
  3054 ;;		Unchanged: 0/0
  3055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3056 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3059 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3060 ;;Total ram usage:        2 bytes
  3061 ;; Hardware stack levels used:    1
  3062 ;; Hardware stack levels required when called:    3
  3063 ;; This function calls:
  3064 ;;		Nothing
  3065 ;; This function is called by:
  3066 ;;		_main
  3067 ;; This function uses a non-reentrant model
  3068 ;;
  3069                           
  3070                           	psect	text22
  3071  000F26                     __ptext22:
  3072                           	opt callstack 0
  3073  000F26                     _TMR1_Update_flag_Set:
  3074                           	opt callstack 27
  3075                           
  3076                           ;TMR1.c: 32: void TMR1_Update_flag_Set(UINT a);TMR1.c: 33: {;TMR1.c: 34:     TMR1_Update
      +                          _flag = a;
  3077                           
  3078                           ;incstack = 0
  3079  000F26  C006  F03B         	movff	TMR1_Update_flag_Set@a,_TMR1_Update_flag
  3080  000F2A  C007  F03C         	movff	TMR1_Update_flag_Set@a+1,_TMR1_Update_flag+1
  3081  000F2E  0012               	return		;funcret
  3082  000F30                     __end_of_TMR1_Update_flag_Set:
  3083                           	opt callstack 0
  3084                           
  3085 ;; *************** function _TMR1_Update_flag_Get *****************
  3086 ;; Defined at:
  3087 ;;		line 47 in file "TMR1.c"
  3088 ;; Parameters:    Size  Location     Type
  3089 ;;		None
  3090 ;; Auto vars:     Size  Location     Type
  3091 ;;		None
  3092 ;; Return value:  Size  Location     Type
  3093 ;;                  2    5[COMRAM] unsigned int 
  3094 ;; Registers used:
  3095 ;;		None
  3096 ;; Tracked objects:
  3097 ;;		On entry : 0/0
  3098 ;;		On exit  : 0/0
  3099 ;;		Unchanged: 0/0
  3100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3101 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3104 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3105 ;;Total ram usage:        2 bytes
  3106 ;; Hardware stack levels used:    1
  3107 ;; Hardware stack levels required when called:    3
  3108 ;; This function calls:
  3109 ;;		Nothing
  3110 ;; This function is called by:
  3111 ;;		_main
  3112 ;; This function uses a non-reentrant model
  3113 ;;
  3114                           
  3115                           	psect	text23
  3116  000F30                     __ptext23:
  3117                           	opt callstack 0
  3118  000F30                     _TMR1_Update_flag_Get:
  3119                           	opt callstack 27
  3120                           
  3121                           ;TMR1.c: 49:     return TMR1_Update_flag;
  3122                           
  3123                           ;incstack = 0
  3124  000F30  C03B  F006         	movff	_TMR1_Update_flag,?_TMR1_Update_flag_Get
  3125  000F34  C03C  F007         	movff	_TMR1_Update_flag+1,?_TMR1_Update_flag_Get+1
  3126  000F38  0012               	return		;funcret
  3127  000F3A                     __end_of_TMR1_Update_flag_Get:
  3128                           	opt callstack 0
  3129                           
  3130 ;; *************** function _LED_Update *****************
  3131 ;; Defined at:
  3132 ;;		line 89 in file "LED.c"
  3133 ;; Parameters:    Size  Location     Type
  3134 ;;		None
  3135 ;; Auto vars:     Size  Location     Type
  3136 ;;		None
  3137 ;; Return value:  Size  Location     Type
  3138 ;;                  1    wreg      unsigned char 
  3139 ;; Registers used:
  3140 ;;		wreg, status,2, status,0, cstack
  3141 ;; Tracked objects:
  3142 ;;		On entry : 0/0
  3143 ;;		On exit  : 0/0
  3144 ;;		Unchanged: 0/0
  3145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3150 ;;Total ram usage:        0 bytes
  3151 ;; Hardware stack levels used:    1
  3152 ;; Hardware stack levels required when called:    5
  3153 ;; This function calls:
  3154 ;;		_LED_Left
  3155 ;;		_LED_Light_Pos
  3156 ;;		_LED_Right
  3157 ;; This function is called by:
  3158 ;;		_main
  3159 ;; This function uses a non-reentrant model
  3160 ;;
  3161                           
  3162                           	psect	text24
  3163  000AF0                     __ptext24:
  3164                           	opt callstack 0
  3165  000AF0                     _LED_Update:
  3166                           	opt callstack 25
  3167                           
  3168                           ;LED.c: 91:     static LED_RGA_type Red = RED;;LED.c: 92:     static LED_RGA_type Green 
      +                          = GREEN;;LED.c: 93:     static UINT pos1 = 0b0000000001;;LED.c: 94:     static UINT pos2
      +                           = 0b0000000001;;LED.c: 97:     LED_Light_Pos(Green,pos2,Fulfillment_Lvl);
  3169                           
  3170                           ;incstack = 0
  3171  000AF0  C043  F00D         	movff	LED_Update@pos2,LED_Light_Pos@pos
  3172  000AF4  C044  F00E         	movff	LED_Update@pos2+1,LED_Light_Pos@pos+1
  3173  000AF8  C047  F00F         	movff	_Fulfillment_Lvl,LED_Light_Pos@fulfillment
  3174  000AFC  C048  F010         	movff	_Fulfillment_Lvl+1,LED_Light_Pos@fulfillment+1
  3175  000B00  5049               	movf	LED_Update@Green,w,c
  3176  000B02  ECBC  F003         	call	_LED_Light_Pos
  3177                           
  3178                           ;LED.c: 98:     LED_Light_Pos(RED,pos1,Fulfillment_Lvl);
  3179  000B06  C045  F00D         	movff	LED_Update@pos1,LED_Light_Pos@pos
  3180  000B0A  C046  F00E         	movff	LED_Update@pos1+1,LED_Light_Pos@pos+1
  3181  000B0E  C047  F00F         	movff	_Fulfillment_Lvl,LED_Light_Pos@fulfillment
  3182  000B12  C048  F010         	movff	_Fulfillment_Lvl+1,LED_Light_Pos@fulfillment+1
  3183  000B16  0E00               	movlw	0
  3184  000B18  ECBC  F003         	call	_LED_Light_Pos
  3185                           
  3186                           ;LED.c: 99:     pos1 = LED_Right(pos1);
  3187  000B1C  C045  F006         	movff	LED_Update@pos1,LED_Right@a
  3188  000B20  C046  F007         	movff	LED_Update@pos1+1,LED_Right@a+1
  3189  000B24  ECF3  F005         	call	_LED_Right	;wreg free
  3190  000B28  C006  F045         	movff	?_LED_Right,LED_Update@pos1
  3191  000B2C  C007  F046         	movff	?_LED_Right+1,LED_Update@pos1+1
  3192                           
  3193                           ;LED.c: 100:     pos2 = LED_Left(pos2);
  3194  000B30  C043  F006         	movff	LED_Update@pos2,LED_Left@a
  3195  000B34  C044  F007         	movff	LED_Update@pos2+1,LED_Left@a+1
  3196  000B38  EC3C  F006         	call	_LED_Left	;wreg free
  3197  000B3C  C006  F043         	movff	?_LED_Left,LED_Update@pos2
  3198  000B40  C007  F044         	movff	?_LED_Left+1,LED_Update@pos2+1
  3199  000B44  0012               	return		;funcret
  3200  000B46                     __end_of_LED_Update:
  3201                           	opt callstack 0
  3202                           
  3203 ;; *************** function _LED_Light_Pos *****************
  3204 ;; Defined at:
  3205 ;;		line 172 in file "LED.c"
  3206 ;; Parameters:    Size  Location     Type
  3207 ;;  color           1    wreg     enum E10641
  3208 ;;  pos             2   12[COMRAM] unsigned int 
  3209 ;;  fulfillment     2   14[COMRAM] unsigned int 
  3210 ;; Auto vars:     Size  Location     Type
  3211 ;;  color           1   16[COMRAM] enum E10641
  3212 ;;  flage           2   21[COMRAM] unsigned int 
  3213 ;;  pos2            2   19[COMRAM] unsigned int 
  3214 ;;  LED_array       2   17[COMRAM] unsigned int 
  3215 ;; Return value:  Size  Location     Type
  3216 ;;                  2   12[COMRAM] unsigned int 
  3217 ;; Registers used:
  3218 ;;		wreg, status,2, status,0, cstack
  3219 ;; Tracked objects:
  3220 ;;		On entry : 0/0
  3221 ;;		On exit  : 0/0
  3222 ;;		Unchanged: 0/0
  3223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3224 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3225 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3227 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3228 ;;Total ram usage:       11 bytes
  3229 ;; Hardware stack levels used:    1
  3230 ;; Hardware stack levels required when called:    4
  3231 ;; This function calls:
  3232 ;;		_LED_Control
  3233 ;;		_LED_Left
  3234 ;;		_LED_Right
  3235 ;;		___lwdiv
  3236 ;; This function is called by:
  3237 ;;		_LED_Update
  3238 ;; This function uses a non-reentrant model
  3239 ;;
  3240                           
  3241                           	psect	text25
  3242  000778                     __ptext25:
  3243                           	opt callstack 0
  3244  000778                     _LED_Light_Pos:
  3245                           	opt callstack 25
  3246                           
  3247                           ;incstack = 0
  3248                           ;LED_Light_Pos@color stored from wreg
  3249  000778  6E11               	movwf	LED_Light_Pos@color,c
  3250                           
  3251                           ;LED.c: 172: UINT LED_Light_Pos(LED_RGA_type color,UINT pos, UINT fulfillment);LED.c: 17
      +                          3: {;LED.c: 174:     UINT pos2 =pos;
  3252  00077A  C00D  F014         	movff	LED_Light_Pos@pos,LED_Light_Pos@pos2
  3253  00077E  C00E  F015         	movff	LED_Light_Pos@pos+1,LED_Light_Pos@pos2+1
  3254                           
  3255                           ;LED.c: 175:     UINT LED_array = 0b0000000000;
  3256  000782  0E00               	movlw	0
  3257  000784  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  3258  000786  0E00               	movlw	0
  3259  000788  6E12               	movwf	LED_Light_Pos@LED_array,c
  3260                           
  3261                           ;LED.c: 176:     UINT flage = fulfillment/10;
  3262  00078A  C00F  F006         	movff	LED_Light_Pos@fulfillment,___lwdiv@dividend
  3263  00078E  C010  F007         	movff	LED_Light_Pos@fulfillment+1,___lwdiv@dividend+1
  3264  000792  0E00               	movlw	0
  3265  000794  6E09               	movwf	___lwdiv@divisor+1,c
  3266  000796  0E0A               	movlw	10
  3267  000798  6E08               	movwf	___lwdiv@divisor,c
  3268  00079A  ECA3  F005         	call	___lwdiv	;wreg free
  3269  00079E  C006  F016         	movff	?___lwdiv,LED_Light_Pos@flage
  3270  0007A2  C007  F017         	movff	?___lwdiv+1,LED_Light_Pos@flage+1
  3271                           
  3272                           ;LED.c: 177:     if(color == RED)
  3273  0007A6  5011               	movf	LED_Light_Pos@color,w,c
  3274  0007A8  B4D8               	btfsc	status,2,c
  3275  0007AA  D017               	goto	l2525
  3276  0007AC  D031               	goto	l2533
  3277  0007AE                     l2519:
  3278                           
  3279                           ;LED.c: 180:         {;LED.c: 181:             LED_array = pos2|LED_array;
  3280  0007AE  5012               	movf	LED_Light_Pos@LED_array,w,c
  3281  0007B0  1014               	iorwf	LED_Light_Pos@pos2,w,c
  3282  0007B2  6E12               	movwf	LED_Light_Pos@LED_array,c
  3283  0007B4  5013               	movf	LED_Light_Pos@LED_array+1,w,c
  3284  0007B6  1015               	iorwf	LED_Light_Pos@pos2+1,w,c
  3285  0007B8  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  3286                           
  3287                           ;LED.c: 182:             pos2 = LED_Left(pos2);
  3288  0007BA  C014  F006         	movff	LED_Light_Pos@pos2,LED_Left@a
  3289  0007BE  C015  F007         	movff	LED_Light_Pos@pos2+1,LED_Left@a+1
  3290  0007C2  EC3C  F006         	call	_LED_Left	;wreg free
  3291  0007C6  C006  F014         	movff	?_LED_Left,LED_Light_Pos@pos2
  3292  0007CA  C007  F015         	movff	?_LED_Left+1,LED_Light_Pos@pos2+1
  3293                           
  3294                           ;LED.c: 183:             flage = flage - 1;
  3295  0007CE  0EFF               	movlw	255
  3296  0007D0  2416               	addwf	LED_Light_Pos@flage,w,c
  3297  0007D2  6E16               	movwf	LED_Light_Pos@flage,c
  3298  0007D4  0EFF               	movlw	255
  3299  0007D6  2017               	addwfc	LED_Light_Pos@flage+1,w,c
  3300  0007D8  6E17               	movwf	LED_Light_Pos@flage+1,c
  3301  0007DA                     l2525:
  3302                           
  3303                           ;LED.c: 179:         while(flage>0)
  3304  0007DA  5016               	movf	LED_Light_Pos@flage,w,c
  3305  0007DC  1017               	iorwf	LED_Light_Pos@flage+1,w,c
  3306  0007DE  B4D8               	btfsc	status,2,c
  3307  0007E0  D01B               	goto	u1250
  3308  0007E2  D7E5               	goto	l2519
  3309  0007E4                     l2527:
  3310                           
  3311                           ;LED.c: 189:         {;LED.c: 190:             LED_array = pos2|LED_array;
  3312  0007E4  5012               	movf	LED_Light_Pos@LED_array,w,c
  3313  0007E6  1014               	iorwf	LED_Light_Pos@pos2,w,c
  3314  0007E8  6E12               	movwf	LED_Light_Pos@LED_array,c
  3315  0007EA  5013               	movf	LED_Light_Pos@LED_array+1,w,c
  3316  0007EC  1015               	iorwf	LED_Light_Pos@pos2+1,w,c
  3317  0007EE  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  3318                           
  3319                           ;LED.c: 191:             pos2 = LED_Right(pos2);
  3320  0007F0  C014  F006         	movff	LED_Light_Pos@pos2,LED_Right@a
  3321  0007F4  C015  F007         	movff	LED_Light_Pos@pos2+1,LED_Right@a+1
  3322  0007F8  ECF3  F005         	call	_LED_Right	;wreg free
  3323  0007FC  C006  F014         	movff	?_LED_Right,LED_Light_Pos@pos2
  3324  000800  C007  F015         	movff	?_LED_Right+1,LED_Light_Pos@pos2+1
  3325                           
  3326                           ;LED.c: 192:             flage = flage - 1;
  3327  000804  0EFF               	movlw	255
  3328  000806  2416               	addwf	LED_Light_Pos@flage,w,c
  3329  000808  6E16               	movwf	LED_Light_Pos@flage,c
  3330  00080A  0EFF               	movlw	255
  3331  00080C  2017               	addwfc	LED_Light_Pos@flage+1,w,c
  3332  00080E  6E17               	movwf	LED_Light_Pos@flage+1,c
  3333  000810                     l2533:
  3334                           
  3335                           ;LED.c: 188:         while(flage>0)
  3336  000810  5016               	movf	LED_Light_Pos@flage,w,c
  3337  000812  1017               	iorwf	LED_Light_Pos@flage+1,w,c
  3338  000814  A4D8               	btfss	status,2,c
  3339  000816  D7E6               	goto	l2527
  3340  000818                     u1250:
  3341                           
  3342                           ;LED.c: 195:     LED_Control(color, LED_array);
  3343  000818  C012  F006         	movff	LED_Light_Pos@LED_array,LED_Control@diode
  3344  00081C  C013  F007         	movff	LED_Light_Pos@LED_array+1,LED_Control@diode+1
  3345  000820  5011               	movf	LED_Light_Pos@color,w,c
  3346  000822  EC13  F003         	call	_LED_Control
  3347  000826  0012               	return		;funcret
  3348  000828                     __end_of_LED_Light_Pos:
  3349                           	opt callstack 0
  3350                           
  3351 ;; *************** function ___lwdiv *****************
  3352 ;; Defined at:
  3353 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwdiv.c"
  3354 ;; Parameters:    Size  Location     Type
  3355 ;;  dividend        2    5[COMRAM] unsigned int 
  3356 ;;  divisor         2    7[COMRAM] unsigned int 
  3357 ;; Auto vars:     Size  Location     Type
  3358 ;;  quotient        2    9[COMRAM] unsigned int 
  3359 ;;  counter         1   11[COMRAM] unsigned char 
  3360 ;; Return value:  Size  Location     Type
  3361 ;;                  2    5[COMRAM] unsigned int 
  3362 ;; Registers used:
  3363 ;;		wreg, status,2, status,0
  3364 ;; Tracked objects:
  3365 ;;		On entry : 0/0
  3366 ;;		On exit  : 0/0
  3367 ;;		Unchanged: 0/0
  3368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3369 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3370 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3372 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3373 ;;Total ram usage:        7 bytes
  3374 ;; Hardware stack levels used:    1
  3375 ;; Hardware stack levels required when called:    3
  3376 ;; This function calls:
  3377 ;;		Nothing
  3378 ;; This function is called by:
  3379 ;;		_LED_Light_Pos
  3380 ;; This function uses a non-reentrant model
  3381 ;;
  3382                           
  3383                           	psect	text26
  3384  000B46                     __ptext26:
  3385                           	opt callstack 0
  3386  000B46                     ___lwdiv:
  3387                           	opt callstack 25
  3388                           
  3389                           ;incstack = 0
  3390  000B46  0E00               	movlw	0
  3391  000B48  6E0B               	movwf	___lwdiv@quotient+1,c
  3392  000B4A  0E00               	movlw	0
  3393  000B4C  6E0A               	movwf	___lwdiv@quotient,c
  3394  000B4E  5008               	movf	___lwdiv@divisor,w,c
  3395  000B50  1009               	iorwf	___lwdiv@divisor+1,w,c
  3396  000B52  B4D8               	btfsc	status,2,c
  3397  000B54  D01C               	goto	l1071
  3398  000B56  0E01               	movlw	1
  3399  000B58  6E0C               	movwf	___lwdiv@counter,c
  3400  000B5A  D004               	goto	l2387
  3401  000B5C                     l2385:
  3402  000B5C  90D8               	bcf	status,0,c
  3403  000B5E  3608               	rlcf	___lwdiv@divisor,f,c
  3404  000B60  3609               	rlcf	___lwdiv@divisor+1,f,c
  3405  000B62  2A0C               	incf	___lwdiv@counter,f,c
  3406  000B64                     l2387:
  3407  000B64  AE09               	btfss	___lwdiv@divisor+1,7,c
  3408  000B66  D7FA               	goto	l2385
  3409  000B68                     u1150:
  3410  000B68  90D8               	bcf	status,0,c
  3411  000B6A  360A               	rlcf	___lwdiv@quotient,f,c
  3412  000B6C  360B               	rlcf	___lwdiv@quotient+1,f,c
  3413  000B6E  5008               	movf	___lwdiv@divisor,w,c
  3414  000B70  5C06               	subwf	___lwdiv@dividend,w,c
  3415  000B72  5009               	movf	___lwdiv@divisor+1,w,c
  3416  000B74  5807               	subwfb	___lwdiv@dividend+1,w,c
  3417  000B76  A0D8               	btfss	status,0,c
  3418  000B78  D005               	goto	l2397
  3419  000B7A  5008               	movf	___lwdiv@divisor,w,c
  3420  000B7C  5E06               	subwf	___lwdiv@dividend,f,c
  3421  000B7E  5009               	movf	___lwdiv@divisor+1,w,c
  3422  000B80  5A07               	subwfb	___lwdiv@dividend+1,f,c
  3423  000B82  800A               	bsf	___lwdiv@quotient,0,c
  3424  000B84                     l2397:
  3425  000B84  90D8               	bcf	status,0,c
  3426  000B86  3209               	rrcf	___lwdiv@divisor+1,f,c
  3427  000B88  3208               	rrcf	___lwdiv@divisor,f,c
  3428  000B8A  2E0C               	decfsz	___lwdiv@counter,f,c
  3429  000B8C  D7ED               	goto	u1150
  3430  000B8E                     l1071:
  3431  000B8E  C00A  F006         	movff	___lwdiv@quotient,?___lwdiv
  3432  000B92  C00B  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3433  000B96  0012               	return		;funcret
  3434  000B98                     __end_of___lwdiv:
  3435                           	opt callstack 0
  3436                           
  3437 ;; *************** function _LED_Right *****************
  3438 ;; Defined at:
  3439 ;;		line 116 in file "LED.c"
  3440 ;; Parameters:    Size  Location     Type
  3441 ;;  a               2    5[COMRAM] unsigned int 
  3442 ;; Auto vars:     Size  Location     Type
  3443 ;;  b               2    9[COMRAM] unsigned int 
  3444 ;; Return value:  Size  Location     Type
  3445 ;;                  2    5[COMRAM] unsigned int 
  3446 ;; Registers used:
  3447 ;;		wreg, status,2, status,0
  3448 ;; Tracked objects:
  3449 ;;		On entry : 0/0
  3450 ;;		On exit  : 0/0
  3451 ;;		Unchanged: 0/0
  3452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3453 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3454 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3455 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3456 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3457 ;;Total ram usage:        6 bytes
  3458 ;; Hardware stack levels used:    1
  3459 ;; Hardware stack levels required when called:    3
  3460 ;; This function calls:
  3461 ;;		Nothing
  3462 ;; This function is called by:
  3463 ;;		_LED_Update
  3464 ;;		_LED_Light_Pos
  3465 ;; This function uses a non-reentrant model
  3466 ;;
  3467                           
  3468                           	psect	text27
  3469  000BE6                     __ptext27:
  3470                           	opt callstack 0
  3471  000BE6                     _LED_Right:
  3472                           	opt callstack 26
  3473                           
  3474                           ;LED.c: 116: UINT LED_Right(UINT a);LED.c: 117: {;LED.c: 118:     if ((a & 0b0000000001)
      +                           == 0b0000000001)
  3475                           
  3476                           ;incstack = 0
  3477  000BE6  A006               	btfss	LED_Right@a,0,c
  3478  000BE8  D018               	goto	l2269
  3479                           
  3480                           ;LED.c: 119:     {;LED.c: 120:         UINT b = a & 0b1111111110;
  3481  000BEA  0EFE               	movlw	254
  3482  000BEC  1406               	andwf	LED_Right@a,w,c
  3483  000BEE  6E0A               	movwf	LED_Right@b,c
  3484  000BF0  0E03               	movlw	3
  3485  000BF2  1407               	andwf	LED_Right@a+1,w,c
  3486  000BF4  6E0B               	movwf	LED_Right@b+1,c
  3487                           
  3488                           ;LED.c: 121:         b = b >> 1;
  3489  000BF6  90D8               	bcf	status,0,c
  3490  000BF8  300B               	rrcf	LED_Right@b+1,w,c
  3491  000BFA  6E08               	movwf	??_LED_Right& (0+255),c
  3492  000BFC  300A               	rrcf	LED_Right@b,w,c
  3493  000BFE  6E0A               	movwf	LED_Right@b,c
  3494  000C00  C008  F00B         	movff	??_LED_Right,LED_Right@b+1
  3495                           
  3496                           ;LED.c: 122:         b = b | 0b1000000000;
  3497  000C04  0E00               	movlw	0
  3498  000C06  100A               	iorwf	LED_Right@b,w,c
  3499  000C08  6E0A               	movwf	LED_Right@b,c
  3500  000C0A  0E02               	movlw	2
  3501  000C0C  100B               	iorwf	LED_Right@b+1,w,c
  3502  000C0E  6E0B               	movwf	LED_Right@b+1,c
  3503                           
  3504                           ;LED.c: 123:         return b;
  3505  000C10  C00A  F006         	movff	LED_Right@b,?_LED_Right
  3506  000C14  C00B  F007         	movff	LED_Right@b+1,?_LED_Right+1
  3507  000C18  0012               	return	
  3508  000C1A                     l2269:
  3509                           
  3510                           ;LED.c: 126:     {;LED.c: 127:         a =a >> 1;
  3511  000C1A  90D8               	bcf	status,0,c
  3512  000C1C  3007               	rrcf	LED_Right@a+1,w,c
  3513  000C1E  6E08               	movwf	??_LED_Right& (0+255),c
  3514  000C20  3006               	rrcf	LED_Right@a,w,c
  3515  000C22  6E06               	movwf	LED_Right@a,c
  3516  000C24  C008  F007         	movff	??_LED_Right,LED_Right@a+1
  3517                           
  3518                           ;LED.c: 128:         return a;
  3519  000C28  C006  F006         	movff	LED_Right@a,?_LED_Right
  3520  000C2C  C007  F007         	movff	LED_Right@a+1,?_LED_Right+1
  3521  000C30  0012               	return		;funcret
  3522  000C32                     __end_of_LED_Right:
  3523                           	opt callstack 0
  3524                           
  3525 ;; *************** function _LED_Left *****************
  3526 ;; Defined at:
  3527 ;;		line 143 in file "LED.c"
  3528 ;; Parameters:    Size  Location     Type
  3529 ;;  a               2    5[COMRAM] unsigned int 
  3530 ;; Auto vars:     Size  Location     Type
  3531 ;;  b               2    7[COMRAM] unsigned int 
  3532 ;; Return value:  Size  Location     Type
  3533 ;;                  2    5[COMRAM] unsigned int 
  3534 ;; Registers used:
  3535 ;;		wreg, status,2, status,0
  3536 ;; Tracked objects:
  3537 ;;		On entry : 0/0
  3538 ;;		On exit  : 0/0
  3539 ;;		Unchanged: 0/0
  3540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3541 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3542 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3544 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3545 ;;Total ram usage:        4 bytes
  3546 ;; Hardware stack levels used:    1
  3547 ;; Hardware stack levels required when called:    3
  3548 ;; This function calls:
  3549 ;;		Nothing
  3550 ;; This function is called by:
  3551 ;;		_LED_Update
  3552 ;;		_LED_Light_Pos
  3553 ;; This function uses a non-reentrant model
  3554 ;;
  3555                           
  3556                           	psect	text28
  3557  000C78                     __ptext28:
  3558                           	opt callstack 0
  3559  000C78                     _LED_Left:
  3560                           	opt callstack 25
  3561                           
  3562                           ;LED.c: 143: UINT LED_Left(UINT a);LED.c: 144: {;LED.c: 145:     if ((a & 0b1000000000) 
      +                          == 0b1000000000)
  3563                           
  3564                           ;incstack = 0
  3565  000C78  A207               	btfss	LED_Left@a+1,1,c
  3566  000C7A  D015               	goto	l2285
  3567                           
  3568                           ;LED.c: 146:     {;LED.c: 147:         UINT b = a & 0b0111111111;
  3569  000C7C  0EFF               	movlw	255
  3570  000C7E  1406               	andwf	LED_Left@a,w,c
  3571  000C80  6E08               	movwf	LED_Left@b,c
  3572  000C82  0E01               	movlw	1
  3573  000C84  1407               	andwf	LED_Left@a+1,w,c
  3574  000C86  6E09               	movwf	LED_Left@b+1,c
  3575                           
  3576                           ;LED.c: 148:         b = b << 1;
  3577  000C88  90D8               	bcf	status,0,c
  3578  000C8A  3408               	rlcf	LED_Left@b,w,c
  3579  000C8C  6E08               	movwf	LED_Left@b,c
  3580  000C8E  3409               	rlcf	LED_Left@b+1,w,c
  3581  000C90  6E09               	movwf	LED_Left@b+1,c
  3582                           
  3583                           ;LED.c: 149:         b = b | 0b0000000001;
  3584  000C92  0E01               	movlw	1
  3585  000C94  1008               	iorwf	LED_Left@b,w,c
  3586  000C96  6E08               	movwf	LED_Left@b,c
  3587  000C98  5009               	movf	LED_Left@b+1,w,c
  3588  000C9A  6E09               	movwf	LED_Left@b+1,c
  3589                           
  3590                           ;LED.c: 150:         return b;
  3591  000C9C  C008  F006         	movff	LED_Left@b,?_LED_Left
  3592  000CA0  C009  F007         	movff	LED_Left@b+1,?_LED_Left+1
  3593  000CA4  0012               	return	
  3594  000CA6                     l2285:
  3595                           
  3596                           ;LED.c: 153:     {;LED.c: 154:         a = a << 1;
  3597  000CA6  90D8               	bcf	status,0,c
  3598  000CA8  3406               	rlcf	LED_Left@a,w,c
  3599  000CAA  6E06               	movwf	LED_Left@a,c
  3600  000CAC  3407               	rlcf	LED_Left@a+1,w,c
  3601  000CAE  6E07               	movwf	LED_Left@a+1,c
  3602                           
  3603                           ;LED.c: 155:         return a;
  3604  000CB0  C006  F006         	movff	LED_Left@a,?_LED_Left
  3605  000CB4  C007  F007         	movff	LED_Left@a+1,?_LED_Left+1
  3606  000CB8  0012               	return		;funcret
  3607  000CBA                     __end_of_LED_Left:
  3608                           	opt callstack 0
  3609                           
  3610 ;; *************** function _INI_All *****************
  3611 ;; Defined at:
  3612 ;;		line 52 in file "INI.c"
  3613 ;; Parameters:    Size  Location     Type
  3614 ;;		None
  3615 ;; Auto vars:     Size  Location     Type
  3616 ;;		None
  3617 ;; Return value:  Size  Location     Type
  3618 ;;                  1    wreg      void 
  3619 ;; Registers used:
  3620 ;;		wreg, status,2, status,0, cstack
  3621 ;; Tracked objects:
  3622 ;;		On entry : 0/0
  3623 ;;		On exit  : 0/0
  3624 ;;		Unchanged: 0/0
  3625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3629 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3630 ;;Total ram usage:        0 bytes
  3631 ;; Hardware stack levels used:    1
  3632 ;; Hardware stack levels required when called:    5
  3633 ;; This function calls:
  3634 ;;		_CAN_Setup
  3635 ;;		_INI_GlobalInterrupt
  3636 ;;		_INI_LED_Start
  3637 ;;		_INI_OUTPUT
  3638 ;;		_INI_Timer
  3639 ;; This function is called by:
  3640 ;;		_main
  3641 ;; This function uses a non-reentrant model
  3642 ;;
  3643                           
  3644                           	psect	text29
  3645  000EE6                     __ptext29:
  3646                           	opt callstack 0
  3647  000EE6                     _INI_All:
  3648                           	opt callstack 25
  3649                           
  3650                           ;INI.c: 55:     WDTCONbits.SWDTEN = 1;
  3651                           
  3652                           ;incstack = 0
  3653  000EE6  80D1               	bsf	4049,0,c	;volatile
  3654  000EE8  0004               	clrwdt		;# 
  3655                           
  3656                           ;INI.c: 64:     INI_OUTPUT();
  3657  000EEA  EC64  F007         	call	_INI_OUTPUT	;wreg free
  3658                           
  3659                           ;INI.c: 66:     CAN_Setup();
  3660  000EEE  ECC6  F004         	call	_CAN_Setup	;wreg free
  3661                           
  3662                           ;INI.c: 67:     INI_GlobalInterrupt();
  3663  000EF2  EC8C  F007         	call	_INI_GlobalInterrupt	;wreg free
  3664                           
  3665                           ;INI.c: 69:     INI_Timer();
  3666  000EF6  EC80  F007         	call	_INI_Timer	;wreg free
  3667                           
  3668                           ;INI.c: 71:     INI_LED_Start();
  3669  000EFA  ECC9  F006         	call	_INI_LED_Start	;wreg free
  3670  000EFE  0012               	return		;funcret
  3671  000F00                     __end_of_INI_All:
  3672                           	opt callstack 0
  3673                           
  3674 ;; *************** function _INI_Timer *****************
  3675 ;; Defined at:
  3676 ;;		line 92 in file "TMR1.c"
  3677 ;; Parameters:    Size  Location     Type
  3678 ;;		None
  3679 ;; Auto vars:     Size  Location     Type
  3680 ;;		None
  3681 ;; Return value:  Size  Location     Type
  3682 ;;                  1    wreg      unsigned char 
  3683 ;; Registers used:
  3684 ;;		wreg, status,2
  3685 ;; Tracked objects:
  3686 ;;		On entry : 0/0
  3687 ;;		On exit  : 0/0
  3688 ;;		Unchanged: 0/0
  3689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3694 ;;Total ram usage:        0 bytes
  3695 ;; Hardware stack levels used:    1
  3696 ;; Hardware stack levels required when called:    3
  3697 ;; This function calls:
  3698 ;;		Nothing
  3699 ;; This function is called by:
  3700 ;;		_INI_All
  3701 ;; This function uses a non-reentrant model
  3702 ;;
  3703                           
  3704                           	psect	text30
  3705  000F00                     __ptext30:
  3706                           	opt callstack 0
  3707  000F00                     _INI_Timer:
  3708                           	opt callstack 26
  3709                           
  3710                           ;TMR1.c: 96:     IRCF2 = 1;
  3711                           
  3712                           ;incstack = 0
  3713  000F00  8CD3               	bsf	4051,6,c	;volatile
  3714                           
  3715                           ;TMR1.c: 97:     IRCF1 = 1;
  3716  000F02  8AD3               	bsf	4051,5,c	;volatile
  3717                           
  3718                           ;TMR1.c: 98:     IRCF0 = 1;
  3719  000F04  88D3               	bsf	4051,4,c	;volatile
  3720                           
  3721                           ;TMR1.c: 99:     T1CON = 0b00111101;
  3722  000F06  0E3D               	movlw	61
  3723  000F08  6ECD               	movwf	4045,c	;volatile
  3724                           
  3725                           ;TMR1.c: 100:     TMR1H= (UINT8)((0xFFFF - (((8000000/8)/4)/10)) >> 8);
  3726  000F0A  0E9E               	movlw	158
  3727  000F0C  6ECF               	movwf	4047,c	;volatile
  3728                           
  3729                           ;TMR1.c: 101:     TMR1L=(UINT8)((0xFFFF - (((8000000/8)/4)/10)) & 0xFF);
  3730  000F0E  0E57               	movlw	87
  3731  000F10  6ECE               	movwf	4046,c	;volatile
  3732                           
  3733                           ;TMR1.c: 102:     TMR1IE=1;
  3734  000F12  809D               	bsf	3997,0,c	;volatile
  3735                           
  3736                           ;TMR1.c: 103:     TMR1ON = 1;
  3737  000F14  80CD               	bsf	4045,0,c	;volatile
  3738  000F16  0012               	return		;funcret
  3739  000F18                     __end_of_INI_Timer:
  3740                           	opt callstack 0
  3741                           
  3742 ;; *************** function _INI_OUTPUT *****************
  3743 ;; Defined at:
  3744 ;;		line 27 in file "INI.c"
  3745 ;; Parameters:    Size  Location     Type
  3746 ;;		None
  3747 ;; Auto vars:     Size  Location     Type
  3748 ;;		None
  3749 ;; Return value:  Size  Location     Type
  3750 ;;                  1    wreg      void 
  3751 ;; Registers used:
  3752 ;;		wreg, status,2
  3753 ;; Tracked objects:
  3754 ;;		On entry : 0/0
  3755 ;;		On exit  : 0/0
  3756 ;;		Unchanged: 0/0
  3757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3762 ;;Total ram usage:        0 bytes
  3763 ;; Hardware stack levels used:    1
  3764 ;; Hardware stack levels required when called:    3
  3765 ;; This function calls:
  3766 ;;		Nothing
  3767 ;; This function is called by:
  3768 ;;		_INI_All
  3769 ;; This function uses a non-reentrant model
  3770 ;;
  3771                           
  3772                           	psect	text31
  3773  000EC8                     __ptext31:
  3774                           	opt callstack 0
  3775  000EC8                     _INI_OUTPUT:
  3776                           	opt callstack 26
  3777                           
  3778                           ;INI.c: 31:     LATA = 0;
  3779                           
  3780                           ;incstack = 0
  3781  000EC8  0E00               	movlw	0
  3782  000ECA  6E89               	movwf	3977,c	;volatile
  3783                           
  3784                           ;INI.c: 32:     LATB = 0;
  3785  000ECC  0E00               	movlw	0
  3786  000ECE  6E8A               	movwf	3978,c	;volatile
  3787                           
  3788                           ;INI.c: 33:     LATC = 0;
  3789  000ED0  0E00               	movlw	0
  3790  000ED2  6E8B               	movwf	3979,c	;volatile
  3791                           
  3792                           ;INI.c: 34:     TRISA = 0x0C;
  3793  000ED4  0E0C               	movlw	12
  3794  000ED6  6E92               	movwf	3986,c	;volatile
  3795                           
  3796                           ;INI.c: 35:     TRISB = 0b10001000;
  3797  000ED8  0E88               	movlw	136
  3798  000EDA  6E93               	movwf	3987,c	;volatile
  3799                           
  3800                           ;INI.c: 36:     TRISC = 0xBF;
  3801  000EDC  0EBF               	movlw	191
  3802  000EDE  6E94               	movwf	3988,c	;volatile
  3803                           
  3804                           ;INI.c: 37:     RCONbits.IPEN = 1;
  3805  000EE0  8ED0               	bsf	4048,7,c	;volatile
  3806                           
  3807                           ;INI.c: 40:     DetectorLedRadar.Flags.inicjalizacja = 1;
  3808  000EE2  863D               	bsf	_DetectorLedRadar,3,c
  3809  000EE4  0012               	return		;funcret
  3810  000EE6                     __end_of_INI_OUTPUT:
  3811                           	opt callstack 0
  3812                           
  3813 ;; *************** function _INI_LED_Start *****************
  3814 ;; Defined at:
  3815 ;;		line 207 in file "LED.c"
  3816 ;; Parameters:    Size  Location     Type
  3817 ;;		None
  3818 ;; Auto vars:     Size  Location     Type
  3819 ;;		None
  3820 ;; Return value:  Size  Location     Type
  3821 ;;                  1    wreg      void 
  3822 ;; Registers used:
  3823 ;;		wreg, status,2, status,0, cstack
  3824 ;; Tracked objects:
  3825 ;;		On entry : 0/0
  3826 ;;		On exit  : 0/0
  3827 ;;		Unchanged: 0/0
  3828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3833 ;;Total ram usage:        0 bytes
  3834 ;; Hardware stack levels used:    1
  3835 ;; Hardware stack levels required when called:    4
  3836 ;; This function calls:
  3837 ;;		_LED_Control
  3838 ;; This function is called by:
  3839 ;;		_INI_All
  3840 ;; This function uses a non-reentrant model
  3841 ;;
  3842                           
  3843                           	psect	text32
  3844  000D92                     __ptext32:
  3845                           	opt callstack 0
  3846  000D92                     _INI_LED_Start:
  3847                           	opt callstack 25
  3848                           
  3849                           ;LED.c: 209:     TRISA = TRISA & 0b00000001;
  3850                           
  3851                           ;incstack = 0
  3852  000D92  5092               	movf	3986,w,c	;volatile
  3853  000D94  0B01               	andlw	1
  3854  000D96  6E92               	movwf	3986,c	;volatile
  3855                           
  3856                           ;LED.c: 210:     TRISB = TRISB & 0b11111100;
  3857  000D98  5093               	movf	3987,w,c	;volatile
  3858  000D9A  0BFC               	andlw	252
  3859  000D9C  6E93               	movwf	3987,c	;volatile
  3860                           
  3861                           ;LED.c: 211:     TRISE = TRISE & 0b11111000;
  3862  000D9E  5096               	movf	3990,w,c	;volatile
  3863  000DA0  0BF8               	andlw	248
  3864  000DA2  6E96               	movwf	3990,c	;volatile
  3865                           
  3866                           ;LED.c: 212:     TRISD = TRISD & 0b00000000;
  3867  000DA4  0E00               	movlw	0
  3868  000DA6  6E95               	movwf	3989,c	;volatile
  3869                           
  3870                           ;LED.c: 213:     LED_Control(RED,0b0000000000);
  3871  000DA8  0E00               	movlw	0
  3872  000DAA  6E07               	movwf	LED_Control@diode+1,c
  3873  000DAC  0E00               	movlw	0
  3874  000DAE  6E06               	movwf	LED_Control@diode,c
  3875  000DB0  0E00               	movlw	0
  3876  000DB2  EC13  F003         	call	_LED_Control
  3877                           
  3878                           ;LED.c: 214:     LED_Control(GREEN,0b0000000000);
  3879  000DB6  0E00               	movlw	0
  3880  000DB8  6E07               	movwf	LED_Control@diode+1,c
  3881  000DBA  0E00               	movlw	0
  3882  000DBC  6E06               	movwf	LED_Control@diode,c
  3883  000DBE  0E01               	movlw	1
  3884  000DC0  EC13  F003         	call	_LED_Control
  3885  000DC4  0012               	return		;funcret
  3886  000DC6                     __end_of_INI_LED_Start:
  3887                           	opt callstack 0
  3888                           
  3889 ;; *************** function _LED_Control *****************
  3890 ;; Defined at:
  3891 ;;		line 232 in file "LED.c"
  3892 ;; Parameters:    Size  Location     Type
  3893 ;;  color           1    wreg     enum E10641
  3894 ;;  diode           2    5[COMRAM] unsigned int 
  3895 ;; Auto vars:     Size  Location     Type
  3896 ;;  color           1    9[COMRAM] enum E10641
  3897 ;;  cos             2    0        unsigned int 
  3898 ;; Return value:  Size  Location     Type
  3899 ;;                  1    wreg      unsigned char 
  3900 ;; Registers used:
  3901 ;;		wreg, status,2, status,0
  3902 ;; Tracked objects:
  3903 ;;		On entry : 0/0
  3904 ;;		On exit  : 0/0
  3905 ;;		Unchanged: 0/0
  3906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3907 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3908 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3910 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3911 ;;Total ram usage:        5 bytes
  3912 ;; Hardware stack levels used:    1
  3913 ;; Hardware stack levels required when called:    3
  3914 ;; This function calls:
  3915 ;;		Nothing
  3916 ;; This function is called by:
  3917 ;;		_LED_Error
  3918 ;;		_LED_Clear
  3919 ;;		_LED_Light_Pos
  3920 ;;		_INI_LED_Start
  3921 ;; This function uses a non-reentrant model
  3922 ;;
  3923                           
  3924                           	psect	text33
  3925  000626                     __ptext33:
  3926                           	opt callstack 0
  3927  000626                     _LED_Control:
  3928                           	opt callstack 24
  3929                           
  3930                           ;incstack = 0
  3931                           ;LED_Control@color stored from wreg
  3932  000626  6E0A               	movwf	LED_Control@color,c
  3933                           
  3934                           ;LED.c: 235:     if(color == RED)
  3935  000628  500A               	movf	LED_Control@color,w,c
  3936  00062A  A4D8               	btfss	status,2,c
  3937  00062C  D050               	goto	l299
  3938                           
  3939                           ;LED.c: 236:     {;LED.c: 238:         if((diode & 0b0000000001)== 0b0000000001)
  3940  00062E  A006               	btfss	LED_Control@diode,0,c
  3941  000630  D003               	goto	l2049
  3942                           
  3943                           ;LED.c: 239:         {;LED.c: 240:             LATD = LATD | ~0b11101111;
  3944  000632  508C               	movf	3980,w,c	;volatile
  3945  000634  0910               	iorlw	16
  3946  000636  D002               	goto	L3
  3947  000638                     l2049:
  3948                           
  3949                           ;LED.c: 243:         {;LED.c: 244:             LATD = LATD &0b11101111;
  3950  000638  508C               	movf	3980,w,c	;volatile
  3951  00063A  0BEF               	andlw	239
  3952  00063C                     L3:
  3953  00063C  6E8C               	movwf	3980,c	;volatile
  3954                           
  3955                           ;LED.c: 247:         if((diode & 0b0000000010) == 0b0000000010)
  3956  00063E  A206               	btfss	LED_Control@diode,1,c
  3957  000640  D003               	goto	l2055
  3958                           
  3959                           ;LED.c: 248:         {;LED.c: 249:             LATD = LATD | ~0b10111111;
  3960  000642  508C               	movf	3980,w,c	;volatile
  3961  000644  0940               	iorlw	64
  3962  000646  D002               	goto	L4
  3963  000648                     l2055:
  3964                           
  3965                           ;LED.c: 252:         {;LED.c: 253:             LATD = LATD & 0b10111111;
  3966  000648  508C               	movf	3980,w,c	;volatile
  3967  00064A  0BBF               	andlw	191
  3968  00064C                     L4:
  3969  00064C  6E8C               	movwf	3980,c	;volatile
  3970                           
  3971                           ;LED.c: 256:         if((diode & 0b0000000100) == 0b0000000100)
  3972  00064E  A406               	btfss	LED_Control@diode,2,c
  3973  000650  D003               	goto	l2061
  3974                           
  3975                           ;LED.c: 257:         {;LED.c: 258:             LATB = LATB | ~0b11111110;
  3976  000652  508A               	movf	3978,w,c	;volatile
  3977  000654  0901               	iorlw	1
  3978  000656  D002               	goto	L5
  3979  000658                     l2061:
  3980                           
  3981                           ;LED.c: 261:         {;LED.c: 262:             LATB = LATB & 0b11111110;
  3982  000658  508A               	movf	3978,w,c	;volatile
  3983  00065A  0BFE               	andlw	254
  3984  00065C                     L5:
  3985  00065C  6E8A               	movwf	3978,c	;volatile
  3986                           
  3987                           ;LED.c: 266:         if((diode & 0b0000001000) == 0b0000001000)
  3988  00065E  A606               	btfss	LED_Control@diode,3,c
  3989  000660  D003               	goto	l2067
  3990                           
  3991                           ;LED.c: 267:         {;LED.c: 268:             LATA = LATA | ~0b11111101;
  3992  000662  5089               	movf	3977,w,c	;volatile
  3993  000664  0902               	iorlw	2
  3994  000666  D002               	goto	L6
  3995  000668                     l2067:
  3996                           
  3997                           ;LED.c: 271:         {;LED.c: 272:             LATA = LATA & 0b11111101;
  3998  000668  5089               	movf	3977,w,c	;volatile
  3999  00066A  0BFD               	andlw	253
  4000  00066C                     L6:
  4001  00066C  6E89               	movwf	3977,c	;volatile
  4002                           
  4003                           ;LED.c: 276:         if((diode & 0b0000010000) == 0b0000010000)
  4004  00066E  A806               	btfss	LED_Control@diode,4,c
  4005  000670  D003               	goto	l2073
  4006                           
  4007                           ;LED.c: 277:         {;LED.c: 278:             LATA = LATA | ~0b11110111;
  4008  000672  5089               	movf	3977,w,c	;volatile
  4009  000674  0908               	iorlw	8
  4010  000676  D002               	goto	L7
  4011  000678                     l2073:
  4012                           
  4013                           ;LED.c: 281:         {;LED.c: 282:             LATA = LATA & 0b11110111;
  4014  000678  5089               	movf	3977,w,c	;volatile
  4015  00067A  0BF7               	andlw	247
  4016  00067C                     L7:
  4017  00067C  6E89               	movwf	3977,c	;volatile
  4018                           
  4019                           ;LED.c: 286:         if((diode & 0b0000100000) == 0b0000100000)
  4020  00067E  AA06               	btfss	LED_Control@diode,5,c
  4021  000680  D003               	goto	l2079
  4022                           
  4023                           ;LED.c: 287:         {;LED.c: 288:             LATA = LATA | ~0b11011111;
  4024  000682  5089               	movf	3977,w,c	;volatile
  4025  000684  0920               	iorlw	32
  4026  000686  D002               	goto	L8
  4027  000688                     l2079:
  4028                           
  4029                           ;LED.c: 291:         {;LED.c: 292:             LATA = LATA & 0b11011111;
  4030  000688  5089               	movf	3977,w,c	;volatile
  4031  00068A  0BDF               	andlw	223
  4032  00068C                     L8:
  4033  00068C  6E89               	movwf	3977,c	;volatile
  4034                           
  4035                           ;LED.c: 295:         if((diode & 0b0001000000) == 0b0001000000)
  4036  00068E  AC06               	btfss	LED_Control@diode,6,c
  4037  000690  D003               	goto	l2085
  4038                           
  4039                           ;LED.c: 296:         {;LED.c: 297:             LATE = LATE | ~0b11111101;
  4040  000692  508D               	movf	3981,w,c	;volatile
  4041  000694  0902               	iorlw	2
  4042  000696  D002               	goto	L9
  4043  000698                     l2085:
  4044                           
  4045                           ;LED.c: 300:         {;LED.c: 301:             LATE = LATE & 0b11111101;
  4046  000698  508D               	movf	3981,w,c	;volatile
  4047  00069A  0BFD               	andlw	253
  4048  00069C                     L9:
  4049  00069C  6E8D               	movwf	3981,c	;volatile
  4050                           
  4051                           ;LED.c: 304:         if((diode & 0b0010000000) == 0b0010000000)
  4052  00069E  AE06               	btfss	LED_Control@diode,7,c
  4053  0006A0  D003               	goto	l2091
  4054                           
  4055                           ;LED.c: 305:         {;LED.c: 306:             LATA = LATA | ~0b01111111;
  4056  0006A2  5089               	movf	3977,w,c	;volatile
  4057  0006A4  0980               	iorlw	128
  4058  0006A6  D002               	goto	L10
  4059  0006A8                     l2091:
  4060                           
  4061                           ;LED.c: 309:         {;LED.c: 310:             LATA = LATA & 0b01111111;
  4062  0006A8  5089               	movf	3977,w,c	;volatile
  4063  0006AA  0B7F               	andlw	127
  4064  0006AC                     L10:
  4065  0006AC  6E89               	movwf	3977,c	;volatile
  4066                           
  4067                           ;LED.c: 314:         if((diode & 0b0100000000) == 0b0100000000)
  4068  0006AE  A007               	btfss	LED_Control@diode+1,0,c
  4069  0006B0  D003               	goto	l2097
  4070                           
  4071                           ;LED.c: 315:         {;LED.c: 316:             LATD = LATD | ~0b11111110;
  4072  0006B2  508C               	movf	3980,w,c	;volatile
  4073  0006B4  0901               	iorlw	1
  4074  0006B6  D002               	goto	L11
  4075  0006B8                     l2097:
  4076                           
  4077                           ;LED.c: 319:         {;LED.c: 320:             LATD = LATD & 0b11111110;
  4078  0006B8  508C               	movf	3980,w,c	;volatile
  4079  0006BA  0BFE               	andlw	254
  4080  0006BC                     L11:
  4081  0006BC  6E8C               	movwf	3980,c	;volatile
  4082                           
  4083                           ;LED.c: 323:         if((diode & 0b1000000000) == 0b1000000000)
  4084  0006BE  A207               	btfss	LED_Control@diode+1,1,c
  4085  0006C0  D003               	goto	l2103
  4086                           
  4087                           ;LED.c: 324:         {;LED.c: 325:             LATD = LATD | ~0b11111011;
  4088  0006C2  508C               	movf	3980,w,c	;volatile
  4089  0006C4  0904               	iorlw	4
  4090  0006C6  D002               	goto	L12
  4091  0006C8                     l2103:
  4092                           
  4093                           ;LED.c: 328:         {;LED.c: 329:             LATD = LATD & 0b11111011;
  4094  0006C8  508C               	movf	3980,w,c	;volatile
  4095  0006CA  0BFB               	andlw	251
  4096  0006CC                     L12:
  4097  0006CC  6E8C               	movwf	3980,c	;volatile
  4098  0006CE                     l299:
  4099                           
  4100                           ;LED.c: 334:     if(color == GREEN)
  4101  0006CE  040A               	decf	LED_Control@color,w,c
  4102  0006D0  A4D8               	btfss	status,2,c
  4103  0006D2  0012               	return	
  4104                           
  4105                           ;LED.c: 335:     {;LED.c: 337:         if((diode & 0b0000000001) == 0b0000000001)
  4106  0006D4  A006               	btfss	LED_Control@diode,0,c
  4107  0006D6  D003               	goto	l2109
  4108                           
  4109                           ;LED.c: 338:         {;LED.c: 339:             LATD = LATD | ~0b11011111;
  4110  0006D8  508C               	movf	3980,w,c	;volatile
  4111  0006DA  0920               	iorlw	32
  4112  0006DC  D002               	goto	L13
  4113  0006DE                     l2109:
  4114                           
  4115                           ;LED.c: 342:         {;LED.c: 343:             LATD = LATD & 0b11011111;
  4116  0006DE  508C               	movf	3980,w,c	;volatile
  4117  0006E0  0BDF               	andlw	223
  4118  0006E2                     L13:
  4119  0006E2  6E8C               	movwf	3980,c	;volatile
  4120                           
  4121                           ;LED.c: 347:         if((diode & 0b0000000010) == 0b0000000010)
  4122  0006E4  A206               	btfss	LED_Control@diode,1,c
  4123  0006E6  D003               	goto	l2115
  4124                           
  4125                           ;LED.c: 348:         {;LED.c: 349:             LATD = LATD | ~0b01111111;
  4126  0006E8  508C               	movf	3980,w,c	;volatile
  4127  0006EA  0980               	iorlw	128
  4128  0006EC  D002               	goto	L14
  4129  0006EE                     l2115:
  4130                           
  4131                           ;LED.c: 352:         {;LED.c: 353:             LATD = LATD & 0b01111111;
  4132  0006EE  508C               	movf	3980,w,c	;volatile
  4133  0006F0  0B7F               	andlw	127
  4134  0006F2                     L14:
  4135  0006F2  6E8C               	movwf	3980,c	;volatile
  4136                           
  4137                           ;LED.c: 357:         if((diode & 0b0000000100) == 0b0000000100)
  4138  0006F4  A406               	btfss	LED_Control@diode,2,c
  4139  0006F6  D003               	goto	l2121
  4140                           
  4141                           ;LED.c: 358:         {;LED.c: 359:             LATB = LATB | ~0b11111101;
  4142  0006F8  508A               	movf	3978,w,c	;volatile
  4143  0006FA  0902               	iorlw	2
  4144  0006FC  D002               	goto	L15
  4145  0006FE                     l2121:
  4146                           
  4147                           ;LED.c: 362:         {;LED.c: 363:             LATB = LATB & 0b11111101;
  4148  0006FE  508A               	movf	3978,w,c	;volatile
  4149  000700  0BFD               	andlw	253
  4150  000702                     L15:
  4151  000702  6E8A               	movwf	3978,c	;volatile
  4152                           
  4153                           ;LED.c: 366:         if((diode & 0b0000001000) == 0b0000001000)
  4154  000704  A606               	btfss	LED_Control@diode,3,c
  4155  000706  D003               	goto	l2127
  4156                           
  4157                           ;LED.c: 367:         {;LED.c: 368:             LATA = LATA | ~0b11111011;
  4158  000708  5089               	movf	3977,w,c	;volatile
  4159  00070A  0904               	iorlw	4
  4160  00070C  D002               	goto	L16
  4161  00070E                     l2127:
  4162                           
  4163                           ;LED.c: 371:         {;LED.c: 372:             LATA = LATA & 0b11111011;
  4164  00070E  5089               	movf	3977,w,c	;volatile
  4165  000710  0BFB               	andlw	251
  4166  000712                     L16:
  4167  000712  6E89               	movwf	3977,c	;volatile
  4168                           
  4169                           ;LED.c: 376:         if((diode & 0b0000010000) == 0b0000010000)
  4170  000714  A806               	btfss	LED_Control@diode,4,c
  4171  000716  D003               	goto	l2133
  4172                           
  4173                           ;LED.c: 377:         {;LED.c: 378:             LATA = LATA | ~0b11101111;
  4174  000718  5089               	movf	3977,w,c	;volatile
  4175  00071A  0910               	iorlw	16
  4176  00071C  D002               	goto	L17
  4177  00071E                     l2133:
  4178                           
  4179                           ;LED.c: 381:         {;LED.c: 382:             LATA = LATA & 0b11101111;
  4180  00071E  5089               	movf	3977,w,c	;volatile
  4181  000720  0BEF               	andlw	239
  4182  000722                     L17:
  4183  000722  6E89               	movwf	3977,c	;volatile
  4184                           
  4185                           ;LED.c: 386:         if((diode & 0b0000100000) == 0b0000100000)
  4186  000724  AA06               	btfss	LED_Control@diode,5,c
  4187  000726  D003               	goto	l2139
  4188                           
  4189                           ;LED.c: 387:         {;LED.c: 388:             LATE = LATE | ~0b11111110;
  4190  000728  508D               	movf	3981,w,c	;volatile
  4191  00072A  0901               	iorlw	1
  4192  00072C  D002               	goto	L18
  4193  00072E                     l2139:
  4194                           
  4195                           ;LED.c: 391:         {;LED.c: 392:             LATE = LATE & 0b11111110;
  4196  00072E  508D               	movf	3981,w,c	;volatile
  4197  000730  0BFE               	andlw	254
  4198  000732                     L18:
  4199  000732  6E8D               	movwf	3981,c	;volatile
  4200                           
  4201                           ;LED.c: 396:         if((diode & 0b0001000000) == 0b0001000000)
  4202  000734  AC06               	btfss	LED_Control@diode,6,c
  4203  000736  D003               	goto	l2145
  4204                           
  4205                           ;LED.c: 397:         {;LED.c: 398:             LATE = LATE | ~0b11111011;
  4206  000738  508D               	movf	3981,w,c	;volatile
  4207  00073A  0904               	iorlw	4
  4208  00073C  D002               	goto	L19
  4209  00073E                     l2145:
  4210                           
  4211                           ;LED.c: 401:         {;LED.c: 402:             LATE = LATE & 0b11111011;
  4212  00073E  508D               	movf	3981,w,c	;volatile
  4213  000740  0BFB               	andlw	251
  4214  000742                     L19:
  4215  000742  6E8D               	movwf	3981,c	;volatile
  4216                           
  4217                           ;LED.c: 405:         if((diode & 0b0010000000) == 0b0010000000)
  4218  000744  AE06               	btfss	LED_Control@diode,7,c
  4219  000746  D003               	goto	l2151
  4220                           
  4221                           ;LED.c: 406:         {;LED.c: 407:             LATA = LATA | ~0b10111111;
  4222  000748  5089               	movf	3977,w,c	;volatile
  4223  00074A  0940               	iorlw	64
  4224  00074C  D002               	goto	L20
  4225  00074E                     l2151:
  4226                           
  4227                           ;LED.c: 410:         {;LED.c: 411:             LATA = LATA & 0b10111111;
  4228  00074E  5089               	movf	3977,w,c	;volatile
  4229  000750  0BBF               	andlw	191
  4230  000752                     L20:
  4231  000752  6E89               	movwf	3977,c	;volatile
  4232                           
  4233                           ;LED.c: 414:         if((diode & 0b0100000000) == 0b0100000000)
  4234  000754  A007               	btfss	LED_Control@diode+1,0,c
  4235  000756  D003               	goto	l2157
  4236                           
  4237                           ;LED.c: 415:         {;LED.c: 416:             LATD = LATD | ~0b11111101;
  4238  000758  508C               	movf	3980,w,c	;volatile
  4239  00075A  0902               	iorlw	2
  4240  00075C  D002               	goto	L21
  4241  00075E                     l2157:
  4242                           
  4243                           ;LED.c: 419:         {;LED.c: 420:             LATD = LATD & 0b11111101;
  4244  00075E  508C               	movf	3980,w,c	;volatile
  4245  000760  0BFD               	andlw	253
  4246  000762                     L21:
  4247  000762  6E8C               	movwf	3980,c	;volatile
  4248                           
  4249                           ;LED.c: 423:         if((diode & 0b1000000000) == 0b1000000000)
  4250  000764  A207               	btfss	LED_Control@diode+1,1,c
  4251  000766  D004               	goto	l2163
  4252                           
  4253                           ;LED.c: 424:         {;LED.c: 425:             LATD = LATD | ~0b11110111;
  4254  000768  508C               	movf	3980,w,c	;volatile
  4255  00076A  0908               	iorlw	8
  4256  00076C  6E8C               	movwf	3980,c	;volatile
  4257                           
  4258                           ;LED.c: 426:         }
  4259  00076E  0012               	return	
  4260  000770                     l2163:
  4261                           
  4262                           ;LED.c: 428:         {;LED.c: 429:             LATD = LATD &0b11110111;
  4263  000770  508C               	movf	3980,w,c	;volatile
  4264  000772  0BF7               	andlw	247
  4265  000774  6E8C               	movwf	3980,c	;volatile
  4266  000776  0012               	return		;funcret
  4267  000778                     __end_of_LED_Control:
  4268                           	opt callstack 0
  4269                           
  4270 ;; *************** function _INI_GlobalInterrupt *****************
  4271 ;; Defined at:
  4272 ;;		line 74 in file "INI.c"
  4273 ;; Parameters:    Size  Location     Type
  4274 ;;		None
  4275 ;; Auto vars:     Size  Location     Type
  4276 ;;		None
  4277 ;; Return value:  Size  Location     Type
  4278 ;;                  1    wreg      void 
  4279 ;; Registers used:
  4280 ;;		None
  4281 ;; Tracked objects:
  4282 ;;		On entry : 0/0
  4283 ;;		On exit  : 0/0
  4284 ;;		Unchanged: 0/0
  4285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4290 ;;Total ram usage:        0 bytes
  4291 ;; Hardware stack levels used:    1
  4292 ;; Hardware stack levels required when called:    3
  4293 ;; This function calls:
  4294 ;;		Nothing
  4295 ;; This function is called by:
  4296 ;;		_INI_All
  4297 ;; This function uses a non-reentrant model
  4298 ;;
  4299                           
  4300                           	psect	text34
  4301  000F18                     __ptext34:
  4302                           	opt callstack 0
  4303  000F18                     _INI_GlobalInterrupt:
  4304                           	opt callstack 26
  4305                           
  4306                           ;INI.c: 76: INTCONbits.GIEH=1;
  4307                           
  4308                           ;incstack = 0
  4309  000F18  8EF2               	bsf	4082,7,c	;volatile
  4310                           
  4311                           ;INI.c: 77: INTCONbits.GIEL=1;
  4312  000F1A  8CF2               	bsf	4082,6,c	;volatile
  4313                           
  4314                           ;INI.c: 78: RCONbits.IPEN=1;
  4315  000F1C  8ED0               	bsf	4048,7,c	;volatile
  4316                           
  4317                           ;INI.c: 79: IPEN =1;
  4318  000F1E  8ED0               	bsf	4048,7,c	;volatile
  4319                           
  4320                           ;INI.c: 81: PEIE=1;
  4321  000F20  8CF2               	bsf	4082,6,c	;volatile
  4322                           
  4323                           ;INI.c: 82: TMR1IP = 0;
  4324  000F22  909F               	bcf	3999,0,c	;volatile
  4325  000F24  0012               	return		;funcret
  4326  000F26                     __end_of_INI_GlobalInterrupt:
  4327                           	opt callstack 0
  4328                           
  4329 ;; *************** function _CAN_Setup *****************
  4330 ;; Defined at:
  4331 ;;		line 22 in file "CAN.c"
  4332 ;; Parameters:    Size  Location     Type
  4333 ;;		None
  4334 ;; Auto vars:     Size  Location     Type
  4335 ;;		None
  4336 ;; Return value:  Size  Location     Type
  4337 ;;                  1    wreg      void 
  4338 ;; Registers used:
  4339 ;;		wreg, status,2, status,0, cstack
  4340 ;; Tracked objects:
  4341 ;;		On entry : 0/0
  4342 ;;		On exit  : 0/0
  4343 ;;		Unchanged: 0/0
  4344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4347 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4348 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4349 ;;Total ram usage:        1 bytes
  4350 ;; Hardware stack levels used:    1
  4351 ;; Hardware stack levels required when called:    4
  4352 ;; This function calls:
  4353 ;;		_CAN_SetupClock
  4354 ;;		_CAN_SetupMask
  4355 ;; This function is called by:
  4356 ;;		_INI_All
  4357 ;; This function uses a non-reentrant model
  4358 ;;
  4359                           
  4360                           	psect	text35
  4361  00098C                     __ptext35:
  4362                           	opt callstack 0
  4363  00098C                     _CAN_Setup:
  4364                           	opt callstack 25
  4365                           
  4366                           ;CAN.c: 27:     CANCON = 0x80;
  4367                           
  4368                           ;incstack = 0
  4369  00098C  0E80               	movlw	128
  4370  00098E  6E6F               	movwf	3951,c	;volatile
  4371  000990                     l2403:
  4372                           
  4373                           ;CAN.c: 28:     while((CANSTAT & 0xE0)!=0x80)
  4374  000990  506E               	movf	3950,w,c	;volatile
  4375  000992  0BE0               	andlw	224
  4376  000994  0A80               	xorlw	128
  4377  000996  A4D8               	btfss	status,2,c
  4378  000998  D7FB               	goto	l2403
  4379                           
  4380                           ;CAN.c: 33:     BSEL0 = 0;
  4381  00099A  0E00               	movlw	0
  4382  00099C  010D               	movlb	13	; () banked
  4383  00099E  6FF8               	movwf	248,b	;volatile
  4384                           
  4385                           ;CAN.c: 34:     TXB0CON = 0;
  4386  0009A0  0E00               	movlw	0
  4387  0009A2  010F               	movlb	15	; () banked
  4388  0009A4  6F40               	movwf	64,b	;volatile
  4389                           
  4390                           ;CAN.c: 35:     RXB0CON = 0;
  4391  0009A6  0E00               	movlw	0
  4392  0009A8  6E60               	movwf	3936,c	;volatile
  4393                           
  4394                           ;CAN.c: 36:     RXB1CON = 0;
  4395  0009AA  0E00               	movlw	0
  4396  0009AC  6F50               	movwf	80,b	;volatile
  4397                           
  4398                           ;CAN.c: 37:     B0CON = 0;
  4399  0009AE  0E00               	movlw	0
  4400  0009B0  010E               	movlb	14	; () banked
  4401  0009B2  6F20               	movwf	32,b	;volatile
  4402                           
  4403                           ;CAN.c: 38:     B1CON = 0;
  4404  0009B4  0E00               	movlw	0
  4405  0009B6  6F30               	movwf	48,b	;volatile
  4406                           
  4407                           ;CAN.c: 39:     PIE3 = 0;
  4408  0009B8  0E00               	movlw	0
  4409  0009BA  6EA3               	movwf	4003,c	;volatile
  4410                           
  4411                           ; BSR set to: 14
  4412                           ;CAN.c: 40:     IPR3 = 0xFF;
  4413  0009BC  68A5               	setf	4005,c	;volatile
  4414                           
  4415                           ;CAN.c: 41:     PIR3 = 0x00;
  4416  0009BE  0E00               	movlw	0
  4417  0009C0  6EA4               	movwf	4004,c	;volatile
  4418                           
  4419                           ;CAN.c: 42:     BIE0 = 0;
  4420  0009C2  0E00               	movlw	0
  4421  0009C4  010D               	movlb	13	; () banked
  4422  0009C6  6FFA               	movwf	250,b	;volatile
  4423                           
  4424                           ;CAN.c: 45:     ECANCON = 0x90;
  4425  0009C8  0E90               	movlw	144
  4426  0009CA  6E77               	movwf	3959,c	;volatile
  4427                           
  4428                           ; BSR set to: 13
  4429                           ;CAN.c: 48:     CAN_SetupClock();
  4430  0009CC  EC0F  F007         	call	_CAN_SetupClock	;wreg free
  4431                           
  4432                           ;CAN.c: 51:     CAN_SetupMask();
  4433  0009D0  EC91  F004         	call	_CAN_SetupMask	;wreg free
  4434                           
  4435                           ;CAN.c: 53:     CIOCON = 0xff;
  4436  0009D4  6873               	setf	3955,c	;volatile
  4437                           
  4438                           ;CAN.c: 59:     CANCON = 0x00;
  4439  0009D6  0E00               	movlw	0
  4440  0009D8  6E6F               	movwf	3951,c	;volatile
  4441  0009DA                     l2417:
  4442                           
  4443                           ;CAN.c: 60:     while((CANSTAT & 0xE0) != 0x00)
  4444  0009DA  CF6E F006          	movff	3950,??_CAN_Setup	;volatile
  4445  0009DE  0EE0               	movlw	224
  4446  0009E0  1606               	andwf	??_CAN_Setup,f,c
  4447  0009E2  B4D8               	btfsc	status,2,c
  4448  0009E4  0012               	return	
  4449  0009E6  D7F9               	goto	l2417
  4450  0009E8                     __end_of_CAN_Setup:
  4451                           	opt callstack 0
  4452                           
  4453 ;; *************** function _CAN_SetupMask *****************
  4454 ;; Defined at:
  4455 ;;		line 81 in file "CAN.c"
  4456 ;; Parameters:    Size  Location     Type
  4457 ;;		None
  4458 ;; Auto vars:     Size  Location     Type
  4459 ;;		None
  4460 ;; Return value:  Size  Location     Type
  4461 ;;                  1    wreg      void 
  4462 ;; Registers used:
  4463 ;;		wreg, status,2, status,0
  4464 ;; Tracked objects:
  4465 ;;		On entry : 0/0
  4466 ;;		On exit  : 0/0
  4467 ;;		Unchanged: 0/0
  4468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4472 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4473 ;;Total ram usage:        0 bytes
  4474 ;; Hardware stack levels used:    1
  4475 ;; Hardware stack levels required when called:    3
  4476 ;; This function calls:
  4477 ;;		Nothing
  4478 ;; This function is called by:
  4479 ;;		_CAN_Setup
  4480 ;; This function uses a non-reentrant model
  4481 ;;
  4482                           
  4483                           	psect	text36
  4484  000922                     __ptext36:
  4485                           	opt callstack 0
  4486  000922                     _CAN_SetupMask:
  4487                           	opt callstack 25
  4488                           
  4489                           ;CAN.c: 83:     MSEL0 = 0x50;
  4490                           
  4491                           ;incstack = 0
  4492  000922  0E50               	movlw	80
  4493  000924  010D               	movlb	13	; () banked
  4494  000926  6FF0               	movwf	240,b	;volatile
  4495                           
  4496                           ;CAN.c: 84:     MSEL1 = 0x55;
  4497  000928  0E55               	movlw	85
  4498  00092A  6FF1               	movwf	241,b	;volatile
  4499                           
  4500                           ;CAN.c: 85:     MSEL2 = 0x55;
  4501  00092C  0E55               	movlw	85
  4502  00092E  6FF2               	movwf	242,b	;volatile
  4503                           
  4504                           ;CAN.c: 86:     MSEL3 = 0x55;
  4505  000930  0E55               	movlw	85
  4506  000932  6FF3               	movwf	243,b	;volatile
  4507                           
  4508                           ;CAN.c: 89:     RXM0SIDH = 0b00000000;
  4509  000934  0E00               	movlw	0
  4510  000936  010F               	movlb	15	; () banked
  4511  000938  6F18               	movwf	24,b	;volatile
  4512                           
  4513                           ;CAN.c: 90:     RXM0SIDL = 0b00001011;
  4514  00093A  0E0B               	movlw	11
  4515  00093C  6F19               	movwf	25,b	;volatile
  4516                           
  4517                           ; BSR set to: 15
  4518                           ;CAN.c: 91:     RXM0EIDH = 0xFF;
  4519  00093E  691A               	setf	26,b	;volatile
  4520                           
  4521                           ; BSR set to: 15
  4522                           ;CAN.c: 92:     RXM0EIDL = 0xFF;
  4523  000940  691B               	setf	27,b	;volatile
  4524                           
  4525                           ; BSR set to: 15
  4526                           ;CAN.c: 95:     RXM1SIDH = 0xFF;
  4527  000942  691C               	setf	28,b	;volatile
  4528                           
  4529                           ; BSR set to: 15
  4530                           ;CAN.c: 96:     RXM1SIDL = 0xFF;
  4531  000944  691D               	setf	29,b	;volatile
  4532                           
  4533                           ;CAN.c: 97:     RXM1EIDH = 0;
  4534  000946  0E00               	movlw	0
  4535  000948  6F1E               	movwf	30,b	;volatile
  4536                           
  4537                           ;CAN.c: 98:     RXM1EIDL = 0;
  4538  00094A  0E00               	movlw	0
  4539  00094C  6F1F               	movwf	31,b	;volatile
  4540                           
  4541                           ;CAN.c: 101:     RXF0SIDH = 0x00;
  4542  00094E  0E00               	movlw	0
  4543  000950  6F00               	movwf	0,b	;volatile
  4544                           
  4545                           ;CAN.c: 102:     RXF0SIDL = 0x01;
  4546  000952  0E01               	movlw	1
  4547  000954  6F01               	movwf	1,b	;volatile
  4548                           
  4549                           ; BSR set to: 15
  4550                           ;CAN.c: 103:     RXF0SIDLbits.EXIDEN = 1;
  4551  000956  8701               	bsf	1,3,b	;volatile
  4552                           
  4553                           ;CAN.c: 104:     RXF0EIDH = (BYTE)(DaneCan.adresCAN>>8);
  4554  000958  503A               	movf	_DaneCan+3,w,c
  4555  00095A  6F02               	movwf	2,b	;volatile
  4556                           
  4557                           ; BSR set to: 15
  4558                           ;CAN.c: 105:  RXF0EIDH |= 0x40;
  4559  00095C  8D02               	bsf	2,6,b	;volatile
  4560                           
  4561                           ; BSR set to: 15
  4562                           ;CAN.c: 106:     RXF0EIDL = (BYTE)DaneCan.adresCAN;
  4563  00095E  C039  FF03         	movff	_DaneCan+2,3843	;volatile
  4564                           
  4565                           ; BSR set to: 15
  4566                           ;CAN.c: 108:     RXF1SIDH = 0x00;
  4567  000962  0E00               	movlw	0
  4568  000964  6F04               	movwf	4,b	;volatile
  4569                           
  4570                           ; BSR set to: 15
  4571                           ;CAN.c: 109:     RXF1SIDL = 0x01;
  4572  000966  0E01               	movlw	1
  4573  000968  6F05               	movwf	5,b	;volatile
  4574                           
  4575                           ; BSR set to: 15
  4576                           ;CAN.c: 110:     RXF1SIDLbits.EXIDEN = 1;
  4577  00096A  8705               	bsf	5,3,b	;volatile
  4578                           
  4579                           ; BSR set to: 15
  4580                           ;CAN.c: 111:     RXF1EIDH = 0x7F;
  4581  00096C  0E7F               	movlw	127
  4582  00096E  6F06               	movwf	6,b	;volatile
  4583                           
  4584                           ; BSR set to: 15
  4585                           ;CAN.c: 112:     RXF1EIDL = 0xFF;
  4586  000970  6907               	setf	7,b	;volatile
  4587                           
  4588                           ; BSR set to: 15
  4589                           ;CAN.c: 115:     RXF2SIDH = 0;
  4590  000972  0E00               	movlw	0
  4591  000974  6F08               	movwf	8,b	;volatile
  4592                           
  4593                           ; BSR set to: 15
  4594                           ;CAN.c: 116:     RXF2SIDL = 0x20;
  4595  000976  0E20               	movlw	32
  4596  000978  6F09               	movwf	9,b	;volatile
  4597                           
  4598                           ; BSR set to: 15
  4599                           ;CAN.c: 117:     RXF2SIDLbits.EXIDEN = 1;
  4600  00097A  8709               	bsf	9,3,b	;volatile
  4601                           
  4602                           ; BSR set to: 15
  4603                           ;CAN.c: 118:     RXF2EIDH = 0;
  4604  00097C  0E00               	movlw	0
  4605  00097E  6F0A               	movwf	10,b	;volatile
  4606                           
  4607                           ; BSR set to: 15
  4608                           ;CAN.c: 119:     RXF2EIDL = 0;
  4609  000980  0E00               	movlw	0
  4610  000982  6F0B               	movwf	11,b	;volatile
  4611                           
  4612                           ; BSR set to: 15
  4613                           ;CAN.c: 127:     RXFCON0 = 0x07;
  4614  000984  0E07               	movlw	7
  4615  000986  010D               	movlb	13	; () banked
  4616  000988  6FD4               	movwf	212,b	;volatile
  4617                           
  4618                           ; BSR set to: 13
  4619  00098A  0012               	return		;funcret
  4620  00098C                     __end_of_CAN_SetupMask:
  4621                           	opt callstack 0
  4622                           
  4623 ;; *************** function _CAN_SetupClock *****************
  4624 ;; Defined at:
  4625 ;;		line 136 in file "CAN.c"
  4626 ;; Parameters:    Size  Location     Type
  4627 ;;		None
  4628 ;; Auto vars:     Size  Location     Type
  4629 ;;		None
  4630 ;; Return value:  Size  Location     Type
  4631 ;;                  1    wreg      void 
  4632 ;; Registers used:
  4633 ;;		None
  4634 ;; Tracked objects:
  4635 ;;		On entry : 0/0
  4636 ;;		On exit  : 0/0
  4637 ;;		Unchanged: 0/0
  4638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4642 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4643 ;;Total ram usage:        0 bytes
  4644 ;; Hardware stack levels used:    1
  4645 ;; Hardware stack levels required when called:    3
  4646 ;; This function calls:
  4647 ;;		Nothing
  4648 ;; This function is called by:
  4649 ;;		_CAN_Setup
  4650 ;; This function uses a non-reentrant model
  4651 ;;
  4652                           
  4653                           	psect	text37
  4654  000E1E                     __ptext37:
  4655                           	opt callstack 0
  4656  000E1E                     _CAN_SetupClock:
  4657                           	opt callstack 25
  4658                           
  4659                           ;CAN.c: 138:     BRGCON1bits.BRP0 = (((32000000/4)/(2*20*50000))-1) & 0b000001;
  4660                           
  4661                           ; BSR set to: 13
  4662                           ;incstack = 0
  4663  000E1E  8070               	bsf	3952,0,c	;volatile
  4664                           
  4665                           ;CAN.c: 139:     BRGCON1bits.BRP1 = ((((32000000/4)/(2*20*50000))-1) >> 1) & 0b000001;
  4666  000E20  8270               	bsf	3952,1,c	;volatile
  4667                           
  4668                           ;CAN.c: 140:     BRGCON1bits.BRP2 = ((((32000000/4)/(2*20*50000))-1) >> 2) & 0b000001;
  4669  000E22  9470               	bcf	3952,2,c	;volatile
  4670                           
  4671                           ;CAN.c: 141:     BRGCON1bits.BRP3 = ((((32000000/4)/(2*20*50000))-1) >> 3) & 0b000001;
  4672  000E24  9670               	bcf	3952,3,c	;volatile
  4673                           
  4674                           ;CAN.c: 142:     BRGCON1bits.BRP4 = ((((32000000/4)/(2*20*50000))-1) >> 4) & 0b000001;
  4675  000E26  9870               	bcf	3952,4,c	;volatile
  4676                           
  4677                           ;CAN.c: 143:     BRGCON1bits.BRP5 = ((((32000000/4)/(2*20*50000))-1) >> 5) & 0b000001;
  4678  000E28  9A70               	bcf	3952,5,c	;volatile
  4679                           
  4680                           ;CAN.c: 145:     BRGCON1bits.SJW0 = 1;
  4681  000E2A  8C70               	bsf	3952,6,c	;volatile
  4682                           
  4683                           ;CAN.c: 146:     BRGCON1bits.SJW1 = 1;
  4684  000E2C  8E70               	bsf	3952,7,c	;volatile
  4685                           
  4686                           ;CAN.c: 148:     BRGCON2bits.SEG1PH0 = 1;
  4687  000E2E  8671               	bsf	3953,3,c	;volatile
  4688                           
  4689                           ;CAN.c: 149:     BRGCON2bits.SEG1PH1 = 1;
  4690  000E30  8871               	bsf	3953,4,c	;volatile
  4691                           
  4692                           ;CAN.c: 150:     BRGCON2bits.SEG1PH2 = 1;
  4693  000E32  8A71               	bsf	3953,5,c	;volatile
  4694                           
  4695                           ;CAN.c: 152:     BRGCON2bits.PRSEG2 = 1;
  4696  000E34  8471               	bsf	3953,2,c	;volatile
  4697                           
  4698                           ;CAN.c: 153:     BRGCON2bits.PRSEG1 = 0;
  4699  000E36  9271               	bcf	3953,1,c	;volatile
  4700                           
  4701                           ;CAN.c: 154:     BRGCON2bits.PRSEG0 = 0;
  4702  000E38  9071               	bcf	3953,0,c	;volatile
  4703                           
  4704                           ;CAN.c: 156:     BRGCON3bits.SEG2PH0 = 1;
  4705  000E3A  8072               	bsf	3954,0,c	;volatile
  4706                           
  4707                           ;CAN.c: 157:     BRGCON3bits.SEG2PH1 = 0;
  4708  000E3C  9272               	bcf	3954,1,c	;volatile
  4709                           
  4710                           ;CAN.c: 158:     BRGCON3bits.SEG2PH2 = 1;
  4711  000E3E  8472               	bsf	3954,2,c	;volatile
  4712                           
  4713                           ;CAN.c: 160:     BRGCON2bits.SAM = 1;
  4714  000E40  8C71               	bsf	3953,6,c	;volatile
  4715                           
  4716                           ;CAN.c: 161:     BRGCON2bits.SEG2PHTS = 1;
  4717  000E42  8E71               	bsf	3953,7,c	;volatile
  4718  000E44  0012               	return		;funcret
  4719  000E46                     __end_of_CAN_SetupClock:
  4720                           	opt callstack 0
  4721                           
  4722 ;; *************** function _ISR_low *****************
  4723 ;; Defined at:
  4724 ;;		line 16 in file "ISR.c"
  4725 ;; Parameters:    Size  Location     Type
  4726 ;;		None
  4727 ;; Auto vars:     Size  Location     Type
  4728 ;;		None
  4729 ;; Return value:  Size  Location     Type
  4730 ;;                  1    wreg      void 
  4731 ;; Registers used:
  4732 ;;		wreg, status,2, status,0, cstack
  4733 ;; Tracked objects:
  4734 ;;		On entry : 0/0
  4735 ;;		On exit  : 0/0
  4736 ;;		Unchanged: 0/0
  4737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4740 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4741 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4742 ;;Total ram usage:        3 bytes
  4743 ;; Hardware stack levels used:    1
  4744 ;; Hardware stack levels required when called:    2
  4745 ;; This function calls:
  4746 ;;		_TMR1_Timer_reset
  4747 ;;		i1_TMR1_Update_flag_Set
  4748 ;; This function is called by:
  4749 ;;		Interrupt level 1
  4750 ;; This function uses a non-reentrant model
  4751 ;;
  4752                           
  4753                           	psect	intcodelo
  4754  000018                     __pintcodelo:
  4755                           	opt callstack 0
  4756  000018                     _ISR_low:
  4757                           	opt callstack 24
  4758                           
  4759                           ;incstack = 0
  4760  000018  804A               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  4761  00001A  CFD8 F003          	movff	status,??_ISR_low
  4762  00001E  CFE8 F004          	movff	wreg,??_ISR_low+1
  4763  000022  CFE0 F005          	movff	bsr,??_ISR_low+2
  4764                           
  4765                           ;ISR.c: 21:     if(TMR1IF==1)
  4766  000026  A09E               	btfss	3998,0,c	;volatile
  4767  000028  D011               	goto	i1l531
  4768                           
  4769                           ;ISR.c: 22:         {;ISR.c: 23:             TMR1_Timer_reset();
  4770  00002A  EC23  F007         	call	_TMR1_Timer_reset	;wreg free
  4771                           
  4772                           ;ISR.c: 26:             static BYTE ramkaStanuU8=0;;ISR.c: 29:             TMR1_Update_f
      +                          lag_Set(1);
  4773  00002E  0E00               	movlw	0
  4774  000030  6E02               	movwf	i1TMR1_Update_flag_Set@a+1,c
  4775  000032  0E01               	movlw	1
  4776  000034  6E01               	movwf	i1TMR1_Update_flag_Set@a,c
  4777  000036  EC9D  F007         	call	i1_TMR1_Update_flag_Set	;wreg free
  4778                           
  4779                           ;ISR.c: 31:             DetectorLedRadar.Flags.obsluzWeWy = 1;
  4780  00003A  803D               	bsf	_DetectorLedRadar,0,c
  4781                           
  4782                           ;ISR.c: 33:             if(++ramkaStanuU8 > (5*10))
  4783  00003C  2A41               	incf	ISR_low@ramkaStanuU8,f,c
  4784  00003E  0E32               	movlw	50
  4785  000040  6441               	cpfsgt	ISR_low@ramkaStanuU8,c
  4786  000042  D003               	goto	i1l2683
  4787                           
  4788                           ;ISR.c: 34:                 {;ISR.c: 35:                     ramkaStanuU8 = 0;
  4789  000044  0E00               	movlw	0
  4790  000046  6E41               	movwf	ISR_low@ramkaStanuU8,c
  4791                           
  4792                           ;ISR.c: 36:                     DaneCan.Flags.wyslijRamkeStanu = 1;
  4793  000048  8037               	bsf	_DaneCan,0,c
  4794  00004A                     i1l2683:
  4795                           
  4796                           ;ISR.c: 41:             TMR1IF=0;
  4797  00004A  909E               	bcf	3998,0,c	;volatile
  4798  00004C                     i1l531:
  4799  00004C  C005  FFE0         	movff	??_ISR_low+2,bsr
  4800  000050  C004  FFE8         	movff	??_ISR_low+1,wreg
  4801  000054  C003  FFD8         	movff	??_ISR_low,status
  4802  000058  904A               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  4803  00005A  0010               	retfie	
  4804  00005C                     __end_of_ISR_low:
  4805                           	opt callstack 0
  4806                           
  4807 ;; *************** function i1_TMR1_Update_flag_Set *****************
  4808 ;; Defined at:
  4809 ;;		line 32 in file "TMR1.c"
  4810 ;; Parameters:    Size  Location     Type
  4811 ;;  a               2    0[COMRAM] unsigned int 
  4812 ;; Auto vars:     Size  Location     Type
  4813 ;;		None
  4814 ;; Return value:  Size  Location     Type
  4815 ;;                  1    wreg      void 
  4816 ;; Registers used:
  4817 ;;		None
  4818 ;; Tracked objects:
  4819 ;;		On entry : 0/0
  4820 ;;		On exit  : 0/0
  4821 ;;		Unchanged: 0/0
  4822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4823 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4826 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4827 ;;Total ram usage:        2 bytes
  4828 ;; Hardware stack levels used:    1
  4829 ;; Hardware stack levels required when called:    1
  4830 ;; This function calls:
  4831 ;;		Nothing
  4832 ;; This function is called by:
  4833 ;;		_ISR_low
  4834 ;; This function uses a non-reentrant model
  4835 ;;
  4836                           
  4837                           	psect	text39
  4838  000F3A                     __ptext39:
  4839                           	opt callstack 0
  4840  000F3A                     i1_TMR1_Update_flag_Set:
  4841                           	opt callstack 24
  4842                           
  4843                           ;TMR1.c: 32: void TMR1_Update_flag_Set(UINT a);TMR1.c: 33: {;TMR1.c: 34:     TMR1_Update
      +                          _flag = a;
  4844                           
  4845                           ;incstack = 0
  4846  000F3A  C001  F03B         	movff	i1TMR1_Update_flag_Set@a,_TMR1_Update_flag
  4847  000F3E  C002  F03C         	movff	i1TMR1_Update_flag_Set@a+1,_TMR1_Update_flag+1
  4848  000F42  0012               	return		;funcret
  4849  000F44                     __end_ofi1_TMR1_Update_flag_Set:
  4850                           	opt callstack 0
  4851                           
  4852 ;; *************** function _TMR1_Timer_reset *****************
  4853 ;; Defined at:
  4854 ;;		line 63 in file "TMR1.c"
  4855 ;; Parameters:    Size  Location     Type
  4856 ;;		None
  4857 ;; Auto vars:     Size  Location     Type
  4858 ;;  t1H             1    1[COMRAM] volatile unsigned char 
  4859 ;;  t1L             1    0[COMRAM] volatile unsigned char 
  4860 ;; Return value:  Size  Location     Type
  4861 ;;                  1    wreg      unsigned char 
  4862 ;; Registers used:
  4863 ;;		wreg, status,2, status,0
  4864 ;; Tracked objects:
  4865 ;;		On entry : 0/0
  4866 ;;		On exit  : 0/0
  4867 ;;		Unchanged: 0/0
  4868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4870 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4872 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4873 ;;Total ram usage:        2 bytes
  4874 ;; Hardware stack levels used:    1
  4875 ;; Hardware stack levels required when called:    1
  4876 ;; This function calls:
  4877 ;;		Nothing
  4878 ;; This function is called by:
  4879 ;;		_ISR_low
  4880 ;; This function uses a non-reentrant model
  4881 ;;
  4882                           
  4883                           	psect	text40
  4884  000E46                     __ptext40:
  4885                           	opt callstack 0
  4886  000E46                     _TMR1_Timer_reset:
  4887                           	opt callstack 24
  4888                           
  4889                           ;TMR1.c: 69:     volatile BYTE t1L = 0, t1H = 0;
  4890                           
  4891                           ;incstack = 0
  4892  000E46  0E00               	movlw	0
  4893  000E48  6E01               	movwf	TMR1_Timer_reset@t1L,c	;volatile
  4894  000E4A  0E00               	movlw	0
  4895  000E4C  6E02               	movwf	TMR1_Timer_reset@t1H,c	;volatile
  4896                           
  4897                           ;TMR1.c: 70:     t1L = TMR1L;
  4898  000E4E  CFCE F001          	movff	4046,TMR1_Timer_reset@t1L	;volatile
  4899                           
  4900                           ;TMR1.c: 71:     t1H = TMR1H;
  4901  000E52  CFCF F002          	movff	4047,TMR1_Timer_reset@t1H	;volatile
  4902                           
  4903                           ;TMR1.c: 72:     __nop();
  4904  000E56  F000               	nop	
  4905                           
  4906                           ;TMR1.c: 73:     t1H += (UINT8)((0xFFFF - (((8000000/8)/4)/10)) >> 8);
  4907  000E58  0E9E               	movlw	158
  4908  000E5A  2602               	addwf	TMR1_Timer_reset@t1H,f,c	;volatile
  4909                           
  4910                           ;TMR1.c: 74:     t1L += (UINT8)((0xFFFF - (((8000000/8)/4)/10)) & 0xFF);
  4911  000E5C  0E57               	movlw	87
  4912  000E5E  2601               	addwf	TMR1_Timer_reset@t1L,f,c	;volatile
  4913                           
  4914                           ;TMR1.c: 75:     TMR1H = t1H;
  4915  000E60  C002  FFCF         	movff	TMR1_Timer_reset@t1H,4047	;volatile
  4916                           
  4917                           ;TMR1.c: 76:     TMR1L = 0x5B;
  4918  000E64  0E5B               	movlw	91
  4919  000E66  6ECE               	movwf	4046,c	;volatile
  4920  000E68  0012               	return		;funcret
  4921  000E6A                     __end_of_TMR1_Timer_reset:
  4922                           	opt callstack 0
  4923                           
  4924 ;; *************** function _ISR_high *****************
  4925 ;; Defined at:
  4926 ;;		line 53 in file "ISR.c"
  4927 ;; Parameters:    Size  Location     Type
  4928 ;;		None
  4929 ;; Auto vars:     Size  Location     Type
  4930 ;;		None
  4931 ;; Return value:  Size  Location     Type
  4932 ;;                  1    wreg      void 
  4933 ;; Registers used:
  4934 ;;		None
  4935 ;; Tracked objects:
  4936 ;;		On entry : 0/0
  4937 ;;		On exit  : 0/0
  4938 ;;		Unchanged: 0/0
  4939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4944 ;;Total ram usage:        0 bytes
  4945 ;; Hardware stack levels used:    1
  4946 ;; This function calls:
  4947 ;;		Nothing
  4948 ;; This function is called by:
  4949 ;;		Interrupt level 2
  4950 ;; This function uses a non-reentrant model
  4951 ;;
  4952                           
  4953                           	psect	intcode
  4954  000008                     __pintcode:
  4955                           	opt callstack 0
  4956  000008                     _ISR_high:
  4957                           	opt callstack 24
  4958                           
  4959                           ;incstack = 0
  4960  000008  824A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4961  00000A  EDA6  F007         	call	int_func,f	;refresh shadow registers
  4962                           
  4963                           	psect	intcode_body
  4964  000F4C                     __pintcode_body:
  4965                           	opt callstack 24
  4966  000F4C                     int_func:
  4967                           	opt callstack 24
  4968  000F4C  0006               	pop		; remove dummy address from shadow register refresh
  4969  000F4E  924A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4970  000F50  0011               	retfie		f
  4971  000F52                     __end_of_ISR_high:
  4972                           	opt callstack 0
  4973  0000                     
  4974                           	psect	rparam
  4975  0000                     
  4976                           	psect	temp
  4977  00004A                     btemp:
  4978                           	opt callstack 0
  4979  00004A                     	ds	1
  4980  0000                     int$flags	set	btemp
  4981  0000                     wtemp8	set	btemp+1
  4982  0000                     ttemp5	set	btemp+1
  4983  0000                     ttemp6	set	btemp+4
  4984  0000                     ttemp7	set	btemp+8
  4985                           tosu	equ	0xFFF
  4986                           tosh	equ	0xFFE
  4987                           tosl	equ	0xFFD
  4988                           stkptr	equ	0xFFC
  4989                           pclatu	equ	0xFFB
  4990                           pclath	equ	0xFFA
  4991                           pcl	equ	0xFF9
  4992                           tblptru	equ	0xFF8
  4993                           tblptrh	equ	0xFF7
  4994                           tblptrl	equ	0xFF6
  4995                           tablat	equ	0xFF5
  4996                           prodh	equ	0xFF4
  4997                           prodl	equ	0xFF3
  4998                           indf0	equ	0xFEF
  4999                           postinc0	equ	0xFEE
  5000                           postdec0	equ	0xFED
  5001                           preinc0	equ	0xFEC
  5002                           plusw0	equ	0xFEB
  5003                           fsr0h	equ	0xFEA
  5004                           fsr0l	equ	0xFE9
  5005                           wreg	equ	0xFE8
  5006                           indf1	equ	0xFE7
  5007                           postinc1	equ	0xFE6
  5008                           postdec1	equ	0xFE5
  5009                           preinc1	equ	0xFE4
  5010                           plusw1	equ	0xFE3
  5011                           fsr1h	equ	0xFE2
  5012                           fsr1l	equ	0xFE1
  5013                           bsr	equ	0xFE0
  5014                           indf2	equ	0xFDF
  5015                           postinc2	equ	0xFDE
  5016                           postdec2	equ	0xFDD
  5017                           preinc2	equ	0xFDC
  5018                           plusw2	equ	0xFDB
  5019                           fsr2h	equ	0xFDA
  5020                           fsr2l	equ	0xFD9
  5021                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        7
    BSS         114
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     37      73
    BANK0           160      0      85
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    FRAME_AdressOfNeighbors@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_AnalogValue@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_SoftwareVersion@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_MapPosition@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_HandleCanFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_Plot@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_DeviceReset@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_AxisStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_AveragingTimes@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_ExcitationMultiplier@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_ExcitationValue@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_AccelerometerStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_SensorExcitationStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_GenID@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_TakeFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_SendFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_MoveBuffIntoFrame@Buf	PTR unsigned char  size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), RXB0D0(SFR_3[1]), 

    CAN_MoveBuffIntoFrame@Ram	PTR unsigned char  size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), RXB0D0(SFR_3[1]), 


Critical Paths under _main in COMRAM

    _main->_TRM_DataTransmition
    _TRM_DataTransmition->_FRAME_HandleCanFrame
    _FRAME_HandleCanFrame->_CAN_SendFrame
    _LED_Error->_LED_Control
    _LED_Clear->_LED_Control
    _CAN_SendFrame->_CAN_MoveBuffIntoFrame
    _CAN_TakeFrame->___awdiv
    _LED_Update->_LED_Light_Pos
    _LED_Light_Pos->___lwdiv
    _INI_LED_Start->_LED_Control

Critical Paths under _ISR_low in COMRAM

    _ISR_low->_TMR1_Timer_reset
    _ISR_low->i1_TMR1_Update_flag_Set

Critical Paths under _ISR_high in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR_low in BANK0

    None.

Critical Paths under _ISR_high in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_low in BANK1

    None.

Critical Paths under _ISR_high in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_low in BANK2

    None.

Critical Paths under _ISR_high in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_low in BANK3

    None.

Critical Paths under _ISR_high in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_low in BANK4

    None.

Critical Paths under _ISR_high in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_low in BANK5

    None.

Critical Paths under _ISR_high in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_low in BANK6

    None.

Critical Paths under _ISR_high in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_low in BANK7

    None.

Critical Paths under _ISR_high in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_low in BANK8

    None.

Critical Paths under _ISR_high in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_low in BANK9

    None.

Critical Paths under _ISR_high in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_low in BANK10

    None.

Critical Paths under _ISR_high in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_low in BANK11

    None.

Critical Paths under _ISR_high in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_low in BANK12

    None.

Critical Paths under _ISR_high in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   14218
                            _INI_All
                         _LED_Update
               _TMR1_Update_flag_Get
               _TMR1_Update_flag_Set
                _TRM_DataTransmition
 ---------------------------------------------------------------------------------
 (1) _TRM_DataTransmition                                 18    18      0    9023
                                             20 COMRAM    17    17      0
                      _CAN_TakeFrame
               _FRAME_HandleCanFrame
 ---------------------------------------------------------------------------------
 (2) _FRAME_HandleCanFrame                                 5     3      2    7114
                                             15 COMRAM     5     3      2
                          _CAN_GenID
                      _CAN_SendFrame
          _FRAME_AccelerometerStatus
            _FRAME_AdressOfNeighbors
                  _FRAME_AnalogValue
               _FRAME_AveragingTimes
                   _FRAME_AxisStatus
                  _FRAME_DeviceReset
         _FRAME_ExcitationMultiplier
              _FRAME_ExcitationValue
                  _FRAME_MapPosition
                         _FRAME_Plot
       _FRAME_SensorExcitationStatus
              _FRAME_SoftwareVersion
                          _LED_Clear
                          _LED_Error
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) _LED_Error                                            0     0      0    1206
                        _LED_Control
 ---------------------------------------------------------------------------------
 (3) _LED_Clear                                            0     0      0    1206
                        _LED_Control
 ---------------------------------------------------------------------------------
 (3) _FRAME_SoftwareVersion                                2     0      2     103
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_SensorExcitationStatus                         3     1      2     257
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_Plot                                           2     0      2     147
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_MapPosition                                    2     0      2     103
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_ExcitationValue                                3     1      2     169
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_ExcitationMultiplier                           5     3      2     215
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_DeviceReset                                    3     1      2     213
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AxisStatus                                     5     3      2     169
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AveragingTimes                                 3     1      2     169
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AnalogValue                                    6     2      4     206
                                              5 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _FRAME_AdressOfNeighbors                              6     2      4     206
                                              5 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _FRAME_AccelerometerStatus                            3     1      2     169
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _CAN_SendFrame                                        5     3      2     891
                                             10 COMRAM     5     3      2
              _CAN_MoveBuffIntoFrame
 ---------------------------------------------------------------------------------
 (3) _CAN_GenID                                            3     0      3     316
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _CAN_TakeFrame                                        6     4      2    1622
                                             13 COMRAM     6     4      2
              _CAN_MoveBuffIntoFrame
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     612
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _CAN_MoveBuffIntoFrame                                5     1      4     546
                                              5 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) _TMR1_Update_flag_Set                                 2     0      2     202
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR1_Update_flag_Get                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _LED_Update                                           0     0      0    3787
                           _LED_Left
                      _LED_Light_Pos
                          _LED_Right
 ---------------------------------------------------------------------------------
 (2) _LED_Light_Pos                                       11     7      4    3059
                                             12 COMRAM    11     7      4
                        _LED_Control
                           _LED_Left
                          _LED_Right
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     368
                                              5 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _LED_Right                                            6     4      2     364
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _LED_Left                                             4     2      2     364
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _INI_All                                              0     0      0    1206
                          _CAN_Setup
                _INI_GlobalInterrupt
                      _INI_LED_Start
                         _INI_OUTPUT
                          _INI_Timer
 ---------------------------------------------------------------------------------
 (2) _INI_Timer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INI_OUTPUT                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INI_LED_Start                                        0     0      0    1206
                        _LED_Control
 ---------------------------------------------------------------------------------
 (4) _LED_Control                                          5     3      2    1206
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _INI_GlobalInterrupt                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CAN_Setup                                            1     1      0       0
                                              5 COMRAM     1     1      0
                     _CAN_SetupClock
                      _CAN_SetupMask
 ---------------------------------------------------------------------------------
 (3) _CAN_SetupMask                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CAN_SetupClock                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR_low                                              3     3      0      76
                                              2 COMRAM     3     3      0
                   _TMR1_Timer_reset
             i1_TMR1_Update_flag_Set
 ---------------------------------------------------------------------------------
 (6) i1_TMR1_Update_flag_Set                               2     0      2      48
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_Timer_reset                                     2     2      0      28
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR_high                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _INI_All
     _CAN_Setup
       _CAN_SetupClock
       _CAN_SetupMask
     _INI_GlobalInterrupt
     _INI_LED_Start
       _LED_Control
     _INI_OUTPUT
     _INI_Timer
   _LED_Update
     _LED_Left
     _LED_Light_Pos
       _LED_Control
       _LED_Left
       _LED_Right
       ___lwdiv
     _LED_Right
   _TMR1_Update_flag_Get
   _TMR1_Update_flag_Set
   _TRM_DataTransmition
     _CAN_TakeFrame
       _CAN_MoveBuffIntoFrame
       ___awdiv
     _FRAME_HandleCanFrame
       _CAN_GenID
       _CAN_SendFrame
         _CAN_MoveBuffIntoFrame
       _FRAME_AccelerometerStatus
       _FRAME_AdressOfNeighbors
       _FRAME_AnalogValue
       _FRAME_AveragingTimes
       _FRAME_AxisStatus
       _FRAME_DeviceReset
       _FRAME_ExcitationMultiplier
       _FRAME_ExcitationValue
       _FRAME_MapPosition
       _FRAME_Plot
       _FRAME_SensorExcitationStatus
       _FRAME_SoftwareVersion
       _LED_Clear
         _LED_Control
       _LED_Error
         _LED_Control
       ___awdiv

 _ISR_low (ROOT)
   _TMR1_Timer_reset
   i1_TMR1_Update_flag_Set

 _ISR_high (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      55       5       53.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     25      49       1       77.7%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      9E      20        0.0%
DATA                 0      0      9E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Jul 15 16:29:09 2019

            __end_of_FRAME_DeviceReset 0A9A                  ?_FRAME_AveragingTimes 0006  
                         ___awdiv@sign 000B                                     bsr 000FE0  
                          __CFG_BORV$3 000000                      ?_FRAME_AxisStatus 0006  
                    _FRAME_MapPosition 0F54                           __CFG_CP0$OFF 000000  
                         __CFG_CP1$OFF 000000                           __CFG_CP2$OFF 000000  
                         __CFG_CP3$OFF 000000                     __size_of_CAN_GenID 005A  
                                  l190 0080                                    l191 0086  
                                  l192 008C                                    l193 0092  
                                  l177 04D4                                    l194 0098  
                                  l186 006E                                    l178 04D2  
                                  l187 00DE                                    l188 0074  
                                  l189 007A                            ?_LED_Update 0001  
                                  l465 04A2                                    l299 06CE  
                         __CFG_CPB$OFF 000000                     ??_FRAME_AxisStatus 0008  
                         __CFG_CPD$OFF 000000                                    u965 0542  
                   ?_FRAME_MapPosition 0006                     __size_of_CAN_Setup 005C  
                         ?_LED_Control 0006                                    wreg 000FE8  
                __end_of_CAN_TakeFrame 02DC                            ?_INI_OUTPUT 0001  
               __size_of_INI_LED_Start 0034                  __end_of_CAN_SendFrame 0626  
                         __CFG_LVP$OFF 000000              TRM_DataTransmition@weWyU8 0040  
         __size_of_INI_GlobalInterrupt 000E                    ??_FRAME_MapPosition 0008  
                         __CFG_WDT$OFF 000000                                   l2103 06C8  
                                 l1071 0B8E                                   l2121 06FE  
                                 l2115 06EE                                   l2035 0DF8  
                                 l2133 071E                                   l2109 06DE  
                                 l2061 0658                                   l2151 074E  
                                 l2127 070E                                   l2055 0648  
                                 l2145 073E                                   l2073 0678  
                                 l2049 0638                                   l2241 056C  
                                 l2313 0BC4                                   l2403 0990  
                                 l2163 0770                                   l2139 072E  
                                 l2091 06A8                                   l2067 0668  
                                 l2331 0A78                                   l2157 075E  
                                 l2085 0698                                   l2245 0620  
                                 l2079 0688                                   l2343 083C  
                                 l2423 009E                                   l2417 09DA  
                                 l2097 06B8                                   l2441 01B6  
                      __end_of_INI_All 0F00                                   l2355 0862  
                                 l2371 0894                                   l2451 01DC  
                                 l2443 01BC                                   l2285 0CA6  
                                 l2269 0C1A                                   l2525 07DA  
                                 l2533 0810                                   l2357 086A  
                                 l2349 084C                                   l2453 01E4  
                                 l2445 01C4                                   l2527 07E4  
                                 l2519 07AE                                   l2375 08A2  
                                 l2367 088A                                   l2471 0268  
                                 l2447 01CC                                   l2439 01B0  
                                 l2463 0230                                   l2551 0312  
                                 l2385 0B5C                                   l2481 0290  
                                 l2473 0270                                   l2449 01D4  
                                 l2457 01EC                                   l2465 024A  
                                 l2561 0358                                   l2553 0320  
                                 l2387 0B64                                   l2475 0278  
                                 l2467 025C                                   l2459 022C  
                                 l2571 03AA                                   l2563 0366  
                                 l2555 032E                                   l2627 0AC4  
                                 l2397 0B84                                   l2477 0280  
                                 l2469 0262                                   l2485 0298  
                                 l2565 0374                                   l2557 033C  
                                 l2549 0304                                   l2479 0288  
                                 l2487 02D8                                   l2591 04B2  
                                 l2567 0382                                   l2559 034A  
                                 l2575 03C4                                   l2569 0390  
                                 l2577 0428                                   l2657 0DCC  
                                 l2667 0DEC                                   l2589 04AE  
                                 _BIE0 000DFA                                   u1110 086E  
                                 u1040 0BD4                                   u1205 0148  
                                 u1150 0B68                                   u1320 0AE2  
                                 u1250 0818                                   _LATA 000F89  
                                 _LATB 000F8A                                   _LATC 000F8B  
                                 _LATD 000F8C                                   _LATE 000F8D  
                                 _IPR3 000FA5                                   _IPEN 007E87  
                                 _PIE3 000FA3                                   _PEIE 007F96  
                                 _PIR3 000FA4                                   _RCON 000FD0  
          ??_FRAME_AccelerometerStatus 0008                        __end_of_ISR_low 005C  
                     LED_Control@diode 0006                   FRAME_AnalogValue@set 0008  
                                 _main 0DC6                       LED_Control@color 000A  
                                 fsr2h 000FDA                                   indf1 000FE7  
                                 indf2 000FDF                                   fsr1l 000FE1  
                                 fsr2l 000FD9                                   btemp 004A  
                       _CAN_SetupClock 0E1E                     __size_of_LED_Clear 001E  
                                 prodl 000FF3                  __end_of_CAN_SetupMask 098C  
        __size_of_TMR1_Update_flag_Get 000A                                   start 005C  
        __size_of_TMR1_Update_flag_Set 000A                     __size_of_LED_Error 001E  
                        __CFG_IESO$OFF 000000                     __size_of_LED_Right 004C  
        __size_of_FRAME_HandleCanFrame 01DC                          _LED_Light_Pos 0778  
                        __CFG_MCLRE$ON 000000                           ___param_bank 000000  
    FRAME_HandleCanFrame@identyfikator 0014                     __size_of_INI_Timer 0018  
            __end_of_FRAME_MapPosition 0F56                       __end_of_LED_Left 0CBA  
                                _B0CON 000E20                                  _B1CON 000E30  
                                _B2CON 000E40                                  _B3CON 000E50  
                                _B4CON 000E60                                  _B5CON 000E70  
                                ?_main 0001                        __end_of___awdiv 08AC  
                                _BSEL0 000DF8                        ___awdiv@divisor 0008  
                                _T1CON 000FCD                                  _IRCF0 007E9C  
                                _IRCF1 007E9D      FRAME_ExcitationMultiplier@message 0006  
                                _IRCF2 007E9E                        __end_of___lwdiv 0B98  
                                i1l531 004C                    __size_of_FRAME_Plot 0022  
                      ___awdiv@counter 000A                                  _MSEL0 000DF0  
                                _MSEL1 000DF1                                  _MSEL2 000DF2  
                                _MSEL3 000DF3                                  _TMR1H 000FCF  
                                _TMR1L 000FCE                                  _TRISA 000F92  
                                _TRISB 000F93                                  _TRISC 000F94  
                                _TRISD 000F95                                  _TRISE 000F96  
                        __CFG_PWRT$OFF 000000                 ?_CAN_MoveBuffIntoFrame 0006  
                        __CFG_WRT0$OFF 000000             __size_of_FRAME_AnalogValue 0002  
                        __CFG_WRT1$OFF 000000                          __CFG_WRT2$OFF 000000  
                        __CFG_WRT3$OFF 000000                         __CFG_EBTR0$OFF 000000  
                       __CFG_FCMEN$OFF 000000                         __CFG_EBTR1$OFF 000000  
                       __CFG_EBTR2$OFF 000000                         __CFG_EBTR3$OFF 000000  
                     __end_of_ISR_high 0F52                          __CFG_WRTB$OFF 000000  
                        __CFG_WRTC$OFF 000000                          __CFG_WRTD$OFF 000000  
                       __CFG_EBTRB$OFF 000000                i1TMR1_Update_flag_Set@a 0001  
                                tablat 000FF5                 __end_of_CAN_SetupClock 0E46  
                                plusw2 000FDB                                  ttemp5 004B  
                                ttemp6 004E                                  ttemp7 0052  
                                status 000FD8                                  wtemp8 004B  
                    __end_of_CAN_GenID 0A42                         __CFG_PBADEN$ON 000000  
                  __size_of_LED_Update 0056                         ?_LED_Light_Pos 000D  
                     _TMR1_Timer_reset 0E46                      __end_of_CAN_Setup 09E8  
                        _INI_LED_Start 0D92                  _FRAME_ExcitationValue 0CBA  
     FRAME_AccelerometerStatus@message 0006                        __initialization 0C32  
                  __size_of_INI_OUTPUT 001E                       CAN_GenID@frameID 0008  
                         __end_of_main 0DF4                 ??_FRAME_AveragingTimes 0008  
           __size_of_FRAME_DeviceReset 0058               ?_FRAME_AdressOfNeighbors 0006  
                     CAN_GenID@message 0006              _FRAME_AccelerometerStatus 0D5C  
                               ??_main 0026                 CAN_MoveBuffIntoFrame@i 000A  
                        __activetblptr 000002                       _TMR1_Update_flag 003B  
                    __end_of_LED_Clear 0EC8                              ??_INI_All 000B  
                    __end_of_LED_Error 0EAA                      __end_of_LED_Right 0C32  
                            ??_ISR_low 0003                                 _CANCON 000F6F  
                     ___awdiv@dividend 0006            FRAME_ExcitationMultiplier@i 0009  
                               _CIOCON 000F73                        __CFG_BBSIZ$1024 000000  
                    __end_of_INI_Timer 0F18                                 i1l2683 004A  
                      ?_CAN_SetupClock 0001                                 _RXB0D0 000F66  
                               _TMR1IE 007CE8                                 _TMR1IF 007CF0  
                               _TMR1IP 007CF8                                 _TMR1ON 007E68  
         ??_FRAME_ExcitationMultiplier 0008                         ?_INI_LED_Start 0001  
                       __CFG_XINST$OFF 000000                              ??___awdiv 000A  
                       __CFG_STVREN$ON 000000                       LED_Light_Pos@pos 000D  
           __size_of_FRAME_MapPosition 0002                              ??___lwdiv 000A  
                               clear_0 0C58                                 clear_1 0C64  
                     ___awdiv@quotient 000C               ??i1_TMR1_Update_flag_Set 0003  
                      __CFG_BOREN$BOHW 000000                           __pdataCOMRAM 0043  
                               tblptrh 000FF7                                 tblptrl 000FF6  
                               tblptru 000FF8    __size_of_FRAME_ExcitationMultiplier 004E  
                 __size_of_LED_Control 0152               FRAME_MapPosition@message 0006  
                TMR1_Update_flag_Set@a 0006                             __accesstop 0060  
              __end_of__initialization 0C6A                           ??_FRAME_Plot 0008  
                  ISR_low@ramkaStanuU8 0041                              ?_LED_Left 0006  
                      ??_LED_Light_Pos 0011                          ___rparam_used 000001  
               ?_FRAME_ExcitationValue 0006        __end_of_FRAME_AdressOfNeighbors 0F5A  
                       __pcstackCOMRAM 0001                              LED_Left@a 0006  
                            LED_Left@b 0008                    _INI_GlobalInterrupt 0F18  
                            ?_ISR_high 0001                           ??_LED_Update 0018  
          __end_of_TRM_DataTransmition 0AF0                  _FRAME_SoftwareVersion 0F52  
                   __end_of_FRAME_Plot 0E8C                           ??_INI_OUTPUT 0006  
              FRAME_AxisStatus@message 0006                   ?_INI_GlobalInterrupt 0001  
            __size_of_FRAME_AxisStatus 0036                             __pbssBANK0 0060  
                      ??_INI_LED_Start 000B                             ??_LED_Left 0008  
                   __end_of_LED_Update 0B46                     __end_of_INI_OUTPUT 0EE6  
                           ??_ISR_high 0001                    TMR1_Timer_reset@t1H 0002  
                  TMR1_Timer_reset@t1L 0001                                _ECANCON 000F77  
                              _CANSTAT 000F6E                ??_CAN_MoveBuffIntoFrame 000A  
         __end_of_TMR1_Update_flag_Get 0F3A           __end_of_TMR1_Update_flag_Set 0F30  
      __size_ofi1_TMR1_Update_flag_Set 000A           __end_of_FRAME_HandleCanFrame 04B8  
                              _INI_All 0EE6               __end_of_TMR1_Timer_reset 0E6A  
                              _RXB0DLC 000F65                                _RXB0CON 000F60  
                              _RXB1CON 000F50                  ??_INI_GlobalInterrupt 0006  
                              _TXB0CON 000F40                                _ISR_low 0018  
                              _RXFCON0 000DD4                                _DaneCan 0037  
   __end_of_FRAME_ExcitationMultiplier 0BE6             _FRAME_ExcitationMultiplier 0B98  
          FRAME_HandleCanFrame@message 0010                                __Hparam 0000  
                              __Lparam 0000                 __size_of_CAN_TakeFrame 027C  
                            _CAN_GenID 09E8                                ___awdiv 0828  
                            _CAN_Setup 098C                 __size_of_CAN_SendFrame 016E  
                              ___lwdiv 0B46                      LED_Light_Pos@pos2 0014  
                              __pcinit 0C32                                __ramtop 0D00  
                              __ptext0 0DC6                                __ptext1 0A9A  
                              __ptext2 02DC                                __ptext3 0E8C  
                              __ptext4 0EAA                                __ptext5 0F52  
                              __ptext6 08AC                                __ptext7 0E6A  
                              __ptext8 0F54                                __ptext9 0CBA  
               ?_FRAME_SoftwareVersion 0006                 __size_of_CAN_SetupMask 006A  
       FRAME_AdressOfNeighbors@nrRamki 0008       __size_of_FRAME_AdressOfNeighbors 0002  
                     ??_CAN_SetupClock 0006         FRAME_AdressOfNeighbors@message 0006  
                            _LED_Clear 0EAA                              _LED_Error 0E8C  
                       __pintcode_body 0F4C                              _LED_Right 0BE6  
                 end_of_initialization 0C6A                          __Lmediumconst 0000  
                              int_func 0F4C                              _INI_Timer 0F00  
               i1_TMR1_Update_flag_Set 0F3A       TRM_DataTransmition@czujnikWeWyU8 003F  
                           ?_CAN_GenID 0006                                postdec1 000FE5  
                              postdec2 000FDD                                postinc0 000FEE  
                              postinc2 000FDE                             ?_CAN_Setup 0001  
        __size_of_FRAME_AveragingTimes 0036                   CAN_SendFrame@message 000B  
                        LED_Update@Red 0042                          _CAN_TakeFrame 0060  
                           ?_LED_Clear 0001                          _CAN_SendFrame 04B8  
                           ?_LED_Error 0001                             ?_LED_Right 0006  
                     _FRAME_AxisStatus 0CF0                ??_FRAME_ExcitationValue 0008  
                           ?_INI_Timer 0001                        _ramkaCanRxKarty 0060  
                 _TMR1_Update_flag_Get 0F30                        _ramkaCanTxKarty 0026  
                 _TMR1_Update_flag_Set 0F26                          _CAN_SetupMask 0922  
                    __size_of_LED_Left 0042                   _FRAME_HandleCanFrame 02DC  
                       CAN_TakeFrame@k 0013                          __pidataCOMRAM 0F44  
                    __size_of_ISR_high 0F4A                             LED_Right@a 0006  
                           LED_Right@b 000A                          ??_LED_Control 0008  
                  start_initialization 0C32                         ?_CAN_TakeFrame 000E  
                       ?_CAN_SendFrame 000B                       __CFG_OSC$IRCIO67 000000  
                ?_TMR1_Update_flag_Get 0006                  ?_TMR1_Update_flag_Set 0006  
                       ?_CAN_SetupMask 0001                  __end_of_LED_Light_Pos 0828  
                ?_FRAME_HandleCanFrame 0010                            ??_CAN_GenID 0009  
                          ??_CAN_Setup 0006                       __CFG_LPT1OSC$OFF 000000  
             CAN_MoveBuffIntoFrame@Buf 0008   __end_of_FRAME_SensorExcitationStatus 0922  
__size_of_FRAME_SensorExcitationStatus 0076               CAN_MoveBuffIntoFrame@Ram 0006  
         _FRAME_SensorExcitationStatus 08AC         __size_of_CAN_MoveBuffIntoFrame 002A  
        __end_of_CAN_MoveBuffIntoFrame 0E1E                        _Fulfillment_Lvl 0047  
                          __pbssCOMRAM 0026                               ?_INI_All 0001  
              _FRAME_AdressOfNeighbors 0F58                      ?_TMR1_Timer_reset 0001  
                          _BRGCON1bits 000F70                            _BRGCON2bits 000F71  
                          _BRGCON3bits 000F72                               ?_ISR_low 0001  
                          ??_LED_Clear 000B                     ??_TMR1_Timer_reset 0001  
                          ??_LED_Error 000B                            ??_LED_Right 0008  
         __size_of_TRM_DataTransmition 0056                    __end_of_LED_Control 0778  
          ?_FRAME_ExcitationMultiplier 0006                            ??_INI_Timer 0006  
                __end_of_INI_LED_Start 0DC6                       ___lwdiv@dividend 0006  
                            __pintcode 0008                               ?___awdiv 0006  
              ??_FRAME_SoftwareVersion 0008                               ?___lwdiv 0006  
                    FRAME_Plot@message 0006                            __pintcodelo 0018  
          __end_of_INI_GlobalInterrupt 0F26                        ??_CAN_TakeFrame 0010  
        ?_FRAME_SensorExcitationStatus 0006                            _COMSTATbits 000F74  
                      ??_CAN_SendFrame 000D                       ___lwdiv@quotient 000A  
              ?i1_TMR1_Update_flag_Set 0001            FRAME_AveragingTimes@message 0006  
               ??_TMR1_Update_flag_Get 0008                 ??_TMR1_Update_flag_Set 0008  
                      ??_CAN_SetupMask 0006                               _LED_Left 0C78  
               ??_FRAME_HandleCanFrame 0012                   CAN_TakeFrame@message 000E  
                 CAN_TakeFrame@tempCON 0012                               _RXB0EIDH 000F63  
                             _RXB0EIDL 000F64                               _RCONbits 000FD0  
                     __CFG_WDTPS$32768 000000                               _RXB0SIDH 000F61  
                             _RXB0SIDL 000F62                               _RXF0EIDH 000F02  
                             _RXF0EIDL 000F03                               _RXF1EIDH 000F06  
                             _RXF1EIDL 000F07                               _RXF2EIDH 000F0A  
                             _RXF2EIDL 000F0B                               _RXF0SIDH 000F00  
                             _RXF0SIDL 000F01                               _RXF1SIDH 000F04  
                             _RXF1SIDL 000F05                               _RXF2SIDH 000F08  
                             _RXF2SIDL 000F09                               _ISR_high 0008  
                             _RXM0EIDH 000F1A                               _RXM0EIDL 000F1B  
                             _RXM1EIDH 000F1E                               _RXM1EIDL 000F1F  
                             _RXM0SIDH 000F18                               _RXM0SIDL 000F19  
                             _RXM1SIDH 000F1C                               _RXM1SIDL 000F1D  
             __end_of_FRAME_AxisStatus 0D26              ??_FRAME_AdressOfNeighbors 000A  
                     _DetectorLedRadar 003D                            _LED_Control 0626  
                     __size_of_INI_All 001A           FRAME_ExcitationValue@message 0006  
       __end_ofi1_TMR1_Update_flag_Set 0F44                              copy_data0 0C46  
                     __size_of_ISR_low 0044     __size_of_FRAME_AccelerometerStatus 0036  
         __end_of_FRAME_AveragingTimes 0D5C             ?_FRAME_AccelerometerStatus 0006  
       __size_of_FRAME_ExcitationValue 0036          __end_of_FRAME_ExcitationValue 0CF0  
                             __Hrparam 0000                           _RXB0SIDLbits 000F62  
                             __Lrparam 0000                       __size_of___awdiv 0084  
                     __size_of___lwdiv 0052                     LED_Light_Pos@flage 0016  
                   LED_Light_Pos@color 0011                           _RXF0SIDLbits 000F01  
             FRAME_AnalogValue@message 0006                        ___lwdiv@divisor 0008  
                         _RXF1SIDLbits 000F05                        ___lwdiv@counter 000C  
                             __ptext10 0B98                               __ptext11 0A42  
                             __ptext20 0828                               __ptext12 0CF0  
                             __ptext21 0DF4                               __ptext13 0D26  
                             __ptext30 0F00                               __ptext22 0F26  
                             __ptext14 0F56                               __ptext31 0EC8  
                             __ptext23 0F30                               __ptext15 0F58  
                             __ptext40 0E46                               __ptext32 0D92  
                             __ptext24 0AF0                               __ptext16 0D5C  
                             __ptext33 0626                               __ptext25 0778  
                             __ptext17 04B8                               __ptext34 0F18  
                             __ptext26 0B46                               __ptext18 09E8  
                             __ptext35 098C                               __ptext27 0BE6  
                             __ptext19 0060                               __ptext36 0922  
                             __ptext28 0C78         ??_FRAME_SensorExcitationStatus 0008  
                             __ptext37 0E1E                               __ptext29 0EE6  
                             __ptext39 0F3A          TRM_DataTransmition@canMessage 0015  
                         _RXF2SIDLbits 000F09               FRAME_DeviceReset@message 0006  
    __end_of_FRAME_AccelerometerStatus 0D92                             _FRAME_Plot 0E6A  
                        __size_of_main 002E                __size_of_CAN_SetupClock 0028  
                             int$flags 004A                    _TRM_DataTransmition 0A9A  
                          _RXB0DLCbits 000F65                             _LED_Update 0AF0  
                          _RXB0CONbits 000F60                             _INTCONbits 000FF2  
                           _INI_OUTPUT 0EC8                      _FRAME_AnalogValue 0F56  
                 ?_TRM_DataTransmition 0001           FRAME_SoftwareVersion@message 0006  
                             intlevel1 0000                               intlevel2 0000  
                   ?_FRAME_AnalogValue 0006    FRAME_SensorExcitationStatus@message 0006  
                          _TXB0CONbits 000F40                    ??_FRAME_AnalogValue 000A  
            __size_of_TMR1_Timer_reset 0024               LED_Light_Pos@fulfillment 000F  
                 _FRAME_AveragingTimes 0D26         __size_of_FRAME_SoftwareVersion 0002  
                    _FRAME_DeviceReset 0A42          __end_of_FRAME_SoftwareVersion 0F54  
                   ?_FRAME_DeviceReset 0006                        LED_Update@Green 0049  
            __end_of_FRAME_AnalogValue 0F58                 __size_of_LED_Light_Pos 00B0  
                _CAN_MoveBuffIntoFrame 0DF4                             _WDTCONbits 000FD1  
                  ??_FRAME_DeviceReset 0008                  ??_TRM_DataTransmition 0015  
               LED_Light_Pos@LED_array 0012                         LED_Update@pos1 0045  
                       LED_Update@pos2 0043                            ?_FRAME_Plot 0006  
