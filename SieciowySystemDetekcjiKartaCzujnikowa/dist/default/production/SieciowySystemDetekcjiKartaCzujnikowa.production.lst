

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Jul 16 12:21:04 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4680
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	text40,global,reloc=2,class=CODE,delta=1
    52                           	psect	text41,global,reloc=2,class=CODE,delta=1
    53                           	psect	text42,global,reloc=2,class=CODE,delta=1
    54                           	psect	text43,global,reloc=2,class=CODE,delta=1
    55                           	psect	text44,global,reloc=2,class=CODE,delta=1
    56                           	psect	text45,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    58                           	psect	text47,global,reloc=2,class=CODE,delta=1
    59                           	psect	text48,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    61                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    62                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    63                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    64                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    65  0000                     
    66                           ; Version 2.05
    67                           ; Generated 20/12/2018 GMT
    68                           ; 
    69                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    70                           ; All rights reserved.
    71                           ; 
    72                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    73                           ; 
    74                           ; Redistribution and use in source and binary forms, with or without modification, are
    75                           ; permitted provided that the following conditions are met:
    76                           ; 
    77                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    78                           ;        conditions and the following disclaimer.
    79                           ; 
    80                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    81                           ;        of conditions and the following disclaimer in the documentation and/or other
    82                           ;        materials provided with the distribution.
    83                           ; 
    84                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    85                           ;        software without specific prior written permission.
    86                           ; 
    87                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    88                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    89                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    90                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    91                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    92                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    93                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    94                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    95                           ; 
    96                           ; 
    97                           ; Code-generator required, PIC18F4680 Definitions
    98                           ; 
    99                           ; SFR Addresses
   100  0000                     
   101                           	psect	idataCOMRAM
   102  00101A                     __pidataCOMRAM:
   103                           	opt callstack 0
   104                           
   105                           ;initializer for MOC_Frame_Counter@zeta
   106  00101A  0011               	dw	17
   107                           
   108                           ;initializer for LED_Update@pos2
   109  00101C  0001               	dw	1
   110                           
   111                           ;initializer for LED_Update@pos1
   112  00101E  0001               	dw	1
   113                           
   114                           ;initializer for _Fulfillment_Lvl
   115  001020  0014               	dw	20
   116                           
   117                           ;initializer for LED_Update@Green
   118  001022  01                 	db	1
   119  0000                     _RXFCON0	set	3540
   120  0000                     _MSEL3	set	3571
   121  0000                     _MSEL2	set	3570
   122  0000                     _MSEL1	set	3569
   123  0000                     _MSEL0	set	3568
   124  0000                     _BIE0	set	3578
   125  0000                     _BSEL0	set	3576
   126  0000                     _B5CON	set	3696
   127  0000                     _B4CON	set	3680
   128  0000                     _B3CON	set	3664
   129  0000                     _B2CON	set	3648
   130  0000                     _B1CON	set	3632
   131  0000                     _B0CON	set	3616
   132  0000                     _TXB0CONbits	set	3904
   133  0000                     _RXF2EIDL	set	3851
   134  0000                     _RXF2EIDH	set	3850
   135  0000                     _RXF2SIDLbits	set	3849
   136  0000                     _RXF2SIDL	set	3849
   137  0000                     _RXF2SIDH	set	3848
   138  0000                     _RXF1EIDL	set	3847
   139  0000                     _RXF1EIDH	set	3846
   140  0000                     _RXF1SIDLbits	set	3845
   141  0000                     _RXF1SIDL	set	3845
   142  0000                     _RXF1SIDH	set	3844
   143  0000                     _RXF0EIDL	set	3843
   144  0000                     _RXF0EIDH	set	3842
   145  0000                     _RXF0SIDLbits	set	3841
   146  0000                     _RXF0SIDL	set	3841
   147  0000                     _RXF0SIDH	set	3840
   148  0000                     _RXM1EIDL	set	3871
   149  0000                     _RXM1EIDH	set	3870
   150  0000                     _RXM1SIDL	set	3869
   151  0000                     _RXM1SIDH	set	3868
   152  0000                     _RXM0EIDL	set	3867
   153  0000                     _RXM0EIDH	set	3866
   154  0000                     _RXM0SIDL	set	3865
   155  0000                     _RXM0SIDH	set	3864
   156  0000                     _RXB1CON	set	3920
   157  0000                     _TXB0CON	set	3904
   158  0000                     _INTCONbits	set	4082
   159  0000                     _WDTCONbits	set	4049
   160  0000                     _RCONbits	set	4048
   161  0000                     _TRISC	set	3988
   162  0000                     _LATC	set	3979
   163  0000                     _T1CON	set	4045
   164  0000                     _TMR1H	set	4047
   165  0000                     _TMR1L	set	4046
   166  0000                     _LATE	set	3981
   167  0000                     _LATA	set	3977
   168  0000                     _LATB	set	3978
   169  0000                     _LATD	set	3980
   170  0000                     _TRISD	set	3989
   171  0000                     _TRISE	set	3990
   172  0000                     _TRISB	set	3987
   173  0000                     _TRISA	set	3986
   174  0000                     _RXB0DLCbits	set	3941
   175  0000                     _RXB0DLC	set	3941
   176  0000                     _RXB0SIDH	set	3937
   177  0000                     _RXB0SIDLbits	set	3938
   178  0000                     _RXB0SIDL	set	3938
   179  0000                     _RXB0EIDH	set	3939
   180  0000                     _RXB0EIDL	set	3940
   181  0000                     _COMSTATbits	set	3956
   182  0000                     _RXB0CONbits	set	3936
   183  0000                     _BRGCON3bits	set	3954
   184  0000                     _BRGCON2bits	set	3953
   185  0000                     _BRGCON1bits	set	3952
   186  0000                     _CIOCON	set	3955
   187  0000                     _ECANCON	set	3959
   188  0000                     _PIR3	set	4004
   189  0000                     _IPR3	set	4005
   190  0000                     _PIE3	set	4003
   191  0000                     _RXB0CON	set	3936
   192  0000                     _CANSTAT	set	3950
   193  0000                     _CANCON	set	3951
   194  0000                     _RCON	set	4048
   195  0000                     _RXB0D0	set	3942
   196  0000                     _TMR1IF	set	31984
   197  0000                     _TMR1IP	set	31992
   198  0000                     _PEIE	set	32662
   199  0000                     _IPEN	set	32391
   200  0000                     _TMR1ON	set	32360
   201  0000                     _TMR1IE	set	31976
   202  0000                     _IRCF0	set	32412
   203  0000                     _IRCF1	set	32413
   204  0000                     _IRCF2	set	32414
   205                           
   206                           ; #config settings
   207  0000                     
   208                           	psect	cinit
   209  000D08                     __pcinit:
   210                           	opt callstack 0
   211  000D08                     start_initialization:
   212                           	opt callstack 0
   213  000D08                     __initialization:
   214                           	opt callstack 0
   215                           
   216                           ; Initialize objects allocated to COMRAM (9 bytes)
   217                           ; load TBLPTR registers with __pidataCOMRAM
   218  000D08  0E1A               	movlw	low __pidataCOMRAM
   219  000D0A  6EF6               	movwf	tblptrl,c
   220  000D0C  0E10               	movlw	high __pidataCOMRAM
   221  000D0E  6EF7               	movwf	tblptrh,c
   222  000D10  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   223  000D12  6EF8               	movwf	tblptru,c
   224  000D14  EE00  F044         	lfsr	0,__pdataCOMRAM
   225  000D18  EE10 F009          	lfsr	1,9
   226  000D1C                     copy_data0:
   227  000D1C  0009               	tblrd		*+
   228  000D1E  CFF5 FFEE          	movff	tablat,postinc0
   229  000D22  50E5               	movf	postdec1,w,c
   230  000D24  50E1               	movf	fsr1l,w,c
   231  000D26  E1FA               	bnz	copy_data0
   232                           
   233                           ; Clear objects allocated to BANK0 (85 bytes)
   234  000D28  EE00  F060         	lfsr	0,__pbssBANK0
   235  000D2C  0E55               	movlw	85
   236  000D2E                     clear_0:
   237  000D2E  6AEE               	clrf	postinc0,c
   238  000D30  06E8               	decf	wreg,f,c
   239  000D32  E1FD               	bnz	clear_0
   240                           
   241                           ; Clear objects allocated to COMRAM (30 bytes)
   242  000D34  EE00  F026         	lfsr	0,__pbssCOMRAM
   243  000D38  0E1E               	movlw	30
   244  000D3A                     clear_1:
   245  000D3A  6AEE               	clrf	postinc0,c
   246  000D3C  06E8               	decf	wreg,f,c
   247  000D3E  E1FD               	bnz	clear_1
   248  000D40                     end_of_initialization:
   249                           	opt callstack 0
   250  000D40                     __end_of__initialization:
   251                           	opt callstack 0
   252  000D40  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   253  000D42  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   254  000D44  0E00               	movlw	low (__Lmediumconst shr (0+16))
   255  000D46  6EF8               	movwf	tblptru,c
   256  000D48  0100               	movlb	0
   257  000D4A  EF33  F007         	goto	_main	;jump to C main() function
   258                           
   259                           	psect	bssCOMRAM
   260  000026                     __pbssCOMRAM:
   261                           	opt callstack 0
   262  000026                     _ramkaCanTxKarty:
   263                           	opt callstack 0
   264  000026                     	ds	17
   265  000037                     _DaneCan:
   266                           	opt callstack 0
   267  000037                     	ds	4
   268  00003B                     _DetectorLedRadar:
   269                           	opt callstack 0
   270  00003B                     	ds	3
   271  00003E                     _TMR1_Update_flag:
   272                           	opt callstack 0
   273  00003E                     	ds	2
   274  000040                     	ds	1
   275  000041                     	ds	1
   276  000042                     ISR_low@ramkaStanuU8:
   277                           	opt callstack 0
   278  000042                     	ds	1
   279  000043                     	ds	1
   280                           
   281                           	psect	dataCOMRAM
   282  000044                     __pdataCOMRAM:
   283                           	opt callstack 0
   284  000044                     MOC_Frame_Counter@zeta:
   285                           	opt callstack 0
   286  000044                     	ds	2
   287  000046                     LED_Update@pos2:
   288                           	opt callstack 0
   289  000046                     	ds	2
   290  000048                     LED_Update@pos1:
   291                           	opt callstack 0
   292  000048                     	ds	2
   293  00004A                     _Fulfillment_Lvl:
   294                           	opt callstack 0
   295  00004A                     	ds	2
   296  00004C                     LED_Update@Green:
   297                           	opt callstack 0
   298  00004C                     	ds	1
   299                           
   300                           	psect	bssBANK0
   301  000060                     __pbssBANK0:
   302                           	opt callstack 0
   303  000060                     _ramkaCanRxKarty:
   304                           	opt callstack 0
   305  000060                     	ds	85
   306                           
   307                           	psect	cstackCOMRAM
   308  000001                     __pcstackCOMRAM:
   309                           	opt callstack 0
   310  000001                     TMR1_Timer_reset@t1L:
   311                           	opt callstack 0
   312  000001                     i1TMR1_Update_flag_Set@a:
   313                           	opt callstack 0
   314                           
   315                           ; 2 bytes @ 0x0
   316  000001                     	ds	1
   317  000002                     TMR1_Timer_reset@t1H:
   318                           	opt callstack 0
   319                           
   320                           ; 1 bytes @ 0x1
   321  000002                     	ds	1
   322  000003                     ??_ISR_low:
   323  000003                     
   324                           ; 1 bytes @ 0x2
   325  000003                     	ds	3
   326  000006                     ??_CAN_Setup:
   327  000006                     ?_TMR1_Update_flag_Get:
   328                           	opt callstack 0
   329  000006                     ?_LED_Right:
   330                           	opt callstack 0
   331  000006                     ?_LED_Left:
   332                           	opt callstack 0
   333  000006                     ?_MOC_StanWzbudzenia:
   334                           	opt callstack 0
   335  000006                     ?_MOC_Wynikowa_wartosc_roznicowa:
   336                           	opt callstack 0
   337  000006                     ?_MOC_Frame_Counter:
   338                           	opt callstack 0
   339  000006                     ?_MOC_Aktualna_Temperatura:
   340                           	opt callstack 0
   341  000006                     ?_MOC_NOTWORK:
   342                           	opt callstack 0
   343  000006                     ?_MOCK_PrzyspieszenieX:
   344                           	opt callstack 0
   345  000006                     ?_MOCK_PrzyspieszenieY:
   346                           	opt callstack 0
   347  000006                     ?_MOCK_PrzyspieszenieZ:
   348                           	opt callstack 0
   349  000006                     ?_MOCK_Klikniecie_Spadek:
   350                           	opt callstack 0
   351  000006                     ?___awdiv:
   352                           	opt callstack 0
   353  000006                     ?___lwdiv:
   354                           	opt callstack 0
   355  000006                     CAN_MoveBuffIntoFrame@Ram:
   356                           	opt callstack 0
   357  000006                     CAN_GenID@message:
   358                           	opt callstack 0
   359  000006                     LED_Right@a:
   360                           	opt callstack 0
   361  000006                     LED_Left@a:
   362                           	opt callstack 0
   363  000006                     LED_Control@diode:
   364                           	opt callstack 0
   365  000006                     TMR1_Update_flag_Set@a:
   366                           	opt callstack 0
   367  000006                     FRAME_ExcitationValue@message:
   368                           	opt callstack 0
   369  000006                     FRAME_ExcitationMultiplier@message:
   370                           	opt callstack 0
   371  000006                     FRAME_AveragingTimes@message:
   372                           	opt callstack 0
   373  000006                     FRAME_AxisStatus@message:
   374                           	opt callstack 0
   375  000006                     FRAME_DeviceReset@message:
   376                           	opt callstack 0
   377  000006                     FRAME_Plot@message:
   378                           	opt callstack 0
   379  000006                     FRAME_MapPosition@message:
   380                           	opt callstack 0
   381  000006                     FRAME_SoftwareVersion@message:
   382                           	opt callstack 0
   383  000006                     FRAME_AnalogValue@message:
   384                           	opt callstack 0
   385  000006                     FRAME_AdressOfNeighbors@message:
   386                           	opt callstack 0
   387  000006                     ___awdiv@dividend:
   388                           	opt callstack 0
   389  000006                     ___lwdiv@dividend:
   390                           	opt callstack 0
   391                           
   392                           ; 2 bytes @ 0x5
   393  000006                     	ds	2
   394  000008                     ??_LED_Right:
   395  000008                     CAN_GenID@frameID:
   396                           	opt callstack 0
   397  000008                     CAN_MoveBuffIntoFrame@Buf:
   398                           	opt callstack 0
   399  000008                     LED_Left@b:
   400                           	opt callstack 0
   401  000008                     FRAME_SensorExcitationStatus@message:
   402                           	opt callstack 0
   403  000008                     FRAME_AccelerometerStatus@message:
   404                           	opt callstack 0
   405  000008                     FRAME_AnalogValue@set:
   406                           	opt callstack 0
   407  000008                     FRAME_AdressOfNeighbors@nrRamki:
   408                           	opt callstack 0
   409  000008                     ___awdiv@divisor:
   410                           	opt callstack 0
   411  000008                     ___lwdiv@divisor:
   412                           	opt callstack 0
   413                           
   414                           ; 2 bytes @ 0x7
   415  000008                     	ds	1
   416  000009                     ??_CAN_GenID:
   417  000009                     FRAME_ExcitationMultiplier@i:
   418                           	opt callstack 0
   419                           
   420                           ; 2 bytes @ 0x8
   421  000009                     	ds	1
   422  00000A                     CAN_MoveBuffIntoFrame@i:
   423                           	opt callstack 0
   424  00000A                     LED_Control@color:
   425                           	opt callstack 0
   426  00000A                     ___awdiv@counter:
   427                           	opt callstack 0
   428  00000A                     LED_Right@b:
   429                           	opt callstack 0
   430  00000A                     ___lwdiv@quotient:
   431                           	opt callstack 0
   432                           
   433                           ; 2 bytes @ 0x9
   434  00000A                     	ds	1
   435  00000B                     ___awdiv@sign:
   436                           	opt callstack 0
   437  00000B                     CAN_SendFrame@message:
   438                           	opt callstack 0
   439                           
   440                           ; 2 bytes @ 0xA
   441  00000B                     	ds	1
   442  00000C                     ___lwdiv@counter:
   443                           	opt callstack 0
   444  00000C                     ___awdiv@quotient:
   445                           	opt callstack 0
   446                           
   447                           ; 2 bytes @ 0xB
   448  00000C                     	ds	1
   449  00000D                     ??_CAN_SendFrame:
   450  00000D                     LED_Light_Pos@pos:
   451                           	opt callstack 0
   452                           
   453                           ; 2 bytes @ 0xC
   454  00000D                     	ds	1
   455  00000E                     CAN_TakeFrame@message:
   456                           	opt callstack 0
   457                           
   458                           ; 2 bytes @ 0xD
   459  00000E                     	ds	1
   460  00000F                     LED_Light_Pos@fulfillment:
   461                           	opt callstack 0
   462                           
   463                           ; 2 bytes @ 0xE
   464  00000F                     	ds	1
   465  000010                     ??_CAN_TakeFrame:
   466  000010                     FRAME_HandleCanFrame@message:
   467                           	opt callstack 0
   468                           
   469                           ; 2 bytes @ 0xF
   470  000010                     	ds	1
   471  000011                     LED_Light_Pos@color:
   472                           	opt callstack 0
   473                           
   474                           ; 1 bytes @ 0x10
   475  000011                     	ds	1
   476  000012                     ??_FRAME_HandleCanFrame:
   477  000012                     CAN_TakeFrame@tempCON:
   478                           	opt callstack 0
   479  000012                     LED_Light_Pos@LED_array:
   480                           	opt callstack 0
   481                           
   482                           ; 2 bytes @ 0x11
   483  000012                     	ds	1
   484  000013                     CAN_TakeFrame@k:
   485                           	opt callstack 0
   486                           
   487                           ; 1 bytes @ 0x12
   488  000013                     	ds	1
   489  000014                     FRAME_HandleCanFrame@identyfikator:
   490                           	opt callstack 0
   491  000014                     LED_Light_Pos@pos2:
   492                           	opt callstack 0
   493                           
   494                           ; 2 bytes @ 0x13
   495  000014                     	ds	1
   496  000015                     TRM_DataTransmition@canMessage:
   497                           	opt callstack 0
   498                           
   499                           ; 17 bytes @ 0x14
   500  000015                     	ds	1
   501  000016                     LED_Light_Pos@flage:
   502                           	opt callstack 0
   503                           
   504                           ; 2 bytes @ 0x15
   505  000016                     	ds	2
   506  000018                     
   507                           ; 1 bytes @ 0x17
   508  000018                     	ds	14
   509  000026                     
   510                           ; 1 bytes @ 0x25
   511 ;;
   512 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   513 ;;
   514 ;; *************** function _main *****************
   515 ;; Defined at:
   516 ;;		line 89 in file "main.c"
   517 ;; Parameters:    Size  Location     Type
   518 ;;		None
   519 ;; Auto vars:     Size  Location     Type
   520 ;;		None
   521 ;; Return value:  Size  Location     Type
   522 ;;                  1    wreg      void 
   523 ;; Registers used:
   524 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   525 ;; Tracked objects:
   526 ;;		On entry : 0/0
   527 ;;		On exit  : 0/0
   528 ;;		Unchanged: 0/0
   529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   534 ;;Total ram usage:        0 bytes
   535 ;; Hardware stack levels required when called:    7
   536 ;; This function calls:
   537 ;;		_INI_All
   538 ;;		_LED_Update
   539 ;;		_TMR1_Update_flag_Get
   540 ;;		_TMR1_Update_flag_Set
   541 ;;		_TRM_DataTransmition
   542 ;; This function is called by:
   543 ;;		Startup code after reset
   544 ;; This function uses a non-reentrant model
   545 ;;
   546                           
   547                           	psect	text0
   548  000E66                     __ptext0:
   549                           	opt callstack 0
   550  000E66                     _main:
   551                           	opt callstack 24
   552                           
   553                           ;main.c: 91:     INI_All();
   554                           
   555                           ;incstack = 0
   556  000E66  ECB4  F007         	call	_INI_All	;wreg free
   557                           
   558                           ;main.c: 93:     RCON = 0xFF;
   559  000E6A  68D0               	setf	4048,c	;volatile
   560  000E6C                     l2791:
   561                           
   562                           ;main.c: 96:     {;main.c: 97:         if(DetectorLedRadar.Flags.obsluzWeWy == 1)
   563  000E6C  B03B               	btfsc	_DetectorLedRadar,0,c
   564                           
   565                           ;main.c: 98:         {;main.c: 99:             DetectorLedRadar.Flags.obsluzWeWy = 0;
   566  000E6E  903B               	bcf	_DetectorLedRadar,0,c
   567                           
   568                           ;main.c: 103:         if(TMR1_Update_flag_Get()==1)
   569  000E70  EC03  F008         	call	_TMR1_Update_flag_Get	;wreg free
   570  000E74  0406               	decf	?_TMR1_Update_flag_Get,w,c
   571  000E76  1007               	iorwf	?_TMR1_Update_flag_Get+1,w,c
   572  000E78  A4D8               	btfss	status,2,c
   573  000E7A  D008               	goto	l2801
   574                           
   575                           ;main.c: 104:         {;main.c: 105:             LED_Update();
   576  000E7C  ECE3  F005         	call	_LED_Update	;wreg free
   577                           
   578                           ;main.c: 106:             TMR1_Update_flag_Set(0);
   579  000E80  0E00               	movlw	0
   580  000E82  6E07               	movwf	TMR1_Update_flag_Set@a+1,c
   581  000E84  0E00               	movlw	0
   582  000E86  6E06               	movwf	TMR1_Update_flag_Set@a,c
   583  000E88  ECFE  F007         	call	_TMR1_Update_flag_Set	;wreg free
   584  000E8C                     l2801:
   585                           
   586                           ;main.c: 110:         TRM_DataTransmition();
   587  000E8C  ECB8  F005         	call	_TRM_DataTransmition	;wreg free
   588  000E90  0004               	clrwdt		;# 
   589                           
   590                           ;main.c: 112:     }
   591  000E92  D7EC               	goto	l2791
   592  000E94                     __end_of_main:
   593                           	opt callstack 0
   594                           
   595 ;; *************** function _TRM_DataTransmition *****************
   596 ;; Defined at:
   597 ;;		line 19 in file "TRM.c"
   598 ;; Parameters:    Size  Location     Type
   599 ;;		None
   600 ;; Auto vars:     Size  Location     Type
   601 ;;  canMessage     17   20[COMRAM] struct .
   602 ;;  i               1    0        unsigned char 
   603 ;; Return value:  Size  Location     Type
   604 ;;                  1    wreg      void 
   605 ;; Registers used:
   606 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   607 ;; Tracked objects:
   608 ;;		On entry : 0/0
   609 ;;		On exit  : 0/0
   610 ;;		Unchanged: 0/0
   611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   613 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   615 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   616 ;;Total ram usage:       17 bytes
   617 ;; Hardware stack levels used:    1
   618 ;; Hardware stack levels required when called:    6
   619 ;; This function calls:
   620 ;;		_CAN_TakeFrame
   621 ;;		_FRAME_HandleCanFrame
   622 ;; This function is called by:
   623 ;;		_main
   624 ;; This function uses a non-reentrant model
   625 ;;
   626                           
   627                           	psect	text1
   628  000B70                     __ptext1:
   629                           	opt callstack 0
   630  000B70                     _TRM_DataTransmition:
   631                           	opt callstack 24
   632                           
   633                           ;TRM.c: 21:     static BYTE weWyU8 = 0, czujnikWeWyU8 = 0;;TRM.c: 22:     BYTE i;;TRM.c:
      +                           23:     mID canMessage;;TRM.c: 26:     if(DaneCan.Flags.wyslijRamkeStanu)
   634                           
   635                           ;incstack = 0
   636  000B70  A037               	btfss	_DaneCan,0,c
   637  000B72  D013               	goto	l2761
   638                           
   639                           ;TRM.c: 27:     {;TRM.c: 29:         canMessage.message_type = 0x02;
   640  000B74  0E02               	movlw	2
   641  000B76  6E16               	movwf	TRM_DataTransmition@canMessage+1,c
   642                           
   643                           ;TRM.c: 30:         canMessage.id.Val = 0;
   644  000B78  0E00               	movlw	0
   645  000B7A  6E19               	movwf	TRM_DataTransmition@canMessage+4,c
   646  000B7C  0E00               	movlw	0
   647  000B7E  6E1A               	movwf	TRM_DataTransmition@canMessage+5,c
   648  000B80  0E00               	movlw	0
   649  000B82  6E1B               	movwf	TRM_DataTransmition@canMessage+6,c
   650  000B84  0E00               	movlw	0
   651  000B86  6E1C               	movwf	TRM_DataTransmition@canMessage+7,c
   652                           
   653                           ;TRM.c: 31:         canMessage.id.v[2] = 0x01 *4;
   654  000B88  0E04               	movlw	4
   655  000B8A  6E1B               	movwf	TRM_DataTransmition@canMessage+6,c
   656                           
   657                           ;TRM.c: 32:         FRAME_HandleCanFrame(&canMessage);
   658  000B8C  0E15               	movlw	low TRM_DataTransmition@canMessage
   659  000B8E  6E10               	movwf	FRAME_HandleCanFrame@message,c
   660  000B90  0E00               	movlw	high TRM_DataTransmition@canMessage
   661  000B92  6E11               	movwf	FRAME_HandleCanFrame@message+1,c
   662  000B94  EC6E  F001         	call	_FRAME_HandleCanFrame	;wreg free
   663                           
   664                           ;TRM.c: 49:         DaneCan.Flags.wyslijRamkeStanu = 0;
   665  000B98  9037               	bcf	_DaneCan,0,c
   666  000B9A                     l2761:
   667                           
   668                           ;TRM.c: 59:     if(CAN_TakeFrame(&canMessage))
   669  000B9A  0E15               	movlw	low TRM_DataTransmition@canMessage
   670  000B9C  6E0E               	movwf	CAN_TakeFrame@message,c
   671  000B9E  0E00               	movlw	high TRM_DataTransmition@canMessage
   672  000BA0  6E0F               	movwf	CAN_TakeFrame@message+1,c
   673  000BA2  EC30  F000         	call	_CAN_TakeFrame	;wreg free
   674  000BA6  0900               	iorlw	0
   675  000BA8  B4D8               	btfsc	status,2,c
   676  000BAA  0012               	return	
   677                           
   678                           ;TRM.c: 60:     {;TRM.c: 61:         if((canMessage.buffer == 0) || (canMessage.buffer =
      +                          = 1))
   679  000BAC  5018               	movf	TRM_DataTransmition@canMessage+3,w,c
   680  000BAE  B4D8               	btfsc	status,2,c
   681  000BB0  D003               	goto	u1320
   682  000BB2  0418               	decf	TRM_DataTransmition@canMessage+3,w,c
   683  000BB4  A4D8               	btfss	status,2,c
   684  000BB6  0012               	return	
   685  000BB8                     u1320:
   686                           
   687                           ;TRM.c: 62:         {;TRM.c: 63:             FRAME_HandleCanFrame(&canMessage);
   688  000BB8  0E15               	movlw	low TRM_DataTransmition@canMessage
   689  000BBA  6E10               	movwf	FRAME_HandleCanFrame@message,c
   690  000BBC  0E00               	movlw	high TRM_DataTransmition@canMessage
   691  000BBE  6E11               	movwf	FRAME_HandleCanFrame@message+1,c
   692  000BC0  EC6E  F001         	call	_FRAME_HandleCanFrame	;wreg free
   693                           
   694                           ;TRM.c: 64:         }
   695  000BC4  0012               	return		;funcret
   696  000BC6                     __end_of_TRM_DataTransmition:
   697                           	opt callstack 0
   698                           
   699 ;; *************** function _FRAME_HandleCanFrame *****************
   700 ;; Defined at:
   701 ;;		line 460 in file "FRAME.c"
   702 ;; Parameters:    Size  Location     Type
   703 ;;  message         2   15[COMRAM] PTR struct .
   704 ;;		 -> TRM_DataTransmition@canMessage(17), 
   705 ;; Auto vars:     Size  Location     Type
   706 ;;  identyfikato    1   19[COMRAM] unsigned char 
   707 ;; Return value:  Size  Location     Type
   708 ;;                  1    wreg      void 
   709 ;; Registers used:
   710 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   711 ;; Tracked objects:
   712 ;;		On entry : 0/0
   713 ;;		On exit  : 0/0
   714 ;;		Unchanged: 0/0
   715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   716 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   717 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   718 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   719 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   720 ;;Total ram usage:        5 bytes
   721 ;; Hardware stack levels used:    1
   722 ;; Hardware stack levels required when called:    5
   723 ;; This function calls:
   724 ;;		_CAN_GenID
   725 ;;		_CAN_SendFrame
   726 ;;		_FRAME_AccelerometerStatus
   727 ;;		_FRAME_AdressOfNeighbors
   728 ;;		_FRAME_AnalogValue
   729 ;;		_FRAME_AveragingTimes
   730 ;;		_FRAME_AxisStatus
   731 ;;		_FRAME_DeviceReset
   732 ;;		_FRAME_ExcitationMultiplier
   733 ;;		_FRAME_ExcitationValue
   734 ;;		_FRAME_MapPosition
   735 ;;		_FRAME_Plot
   736 ;;		_FRAME_SensorExcitationStatus
   737 ;;		_FRAME_SoftwareVersion
   738 ;;		_LED_Error
   739 ;;		___awdiv
   740 ;; This function is called by:
   741 ;;		_TRM_DataTransmition
   742 ;; This function uses a non-reentrant model
   743 ;;
   744                           
   745                           	psect	text2
   746  0002DC                     __ptext2:
   747                           	opt callstack 0
   748  0002DC                     _FRAME_HandleCanFrame:
   749                           	opt callstack 24
   750                           
   751                           ;FRAME.c: 460: void FRAME_HandleCanFrame(mID * message);FRAME.c: 461: {;FRAME.c: 462:   
      +                            BYTE identyfikator = (BYTE) message->id.v[2]/4;
   752                           
   753                           ;incstack = 0
   754  0002DC  EE20 F006          	lfsr	2,6
   755  0002E0  5010               	movf	FRAME_HandleCanFrame@message,w,c
   756  0002E2  26D9               	addwf	fsr2l,f,c
   757  0002E4  5011               	movf	FRAME_HandleCanFrame@message+1,w,c
   758  0002E6  22DA               	addwfc	fsr2h,f,c
   759  0002E8  50DF               	movf	indf2,w,c
   760  0002EA  6E12               	movwf	??_FRAME_HandleCanFrame& (0+255),c
   761  0002EC  5012               	movf	??_FRAME_HandleCanFrame,w,c
   762  0002EE  6E06               	movwf	___awdiv@dividend,c
   763  0002F0  6A07               	clrf	___awdiv@dividend+1,c
   764  0002F2  0E00               	movlw	0
   765  0002F4  6E09               	movwf	___awdiv@divisor+1,c
   766  0002F6  0E04               	movlw	4
   767  0002F8  6E08               	movwf	___awdiv@divisor,c
   768  0002FA  ECAC  F004         	call	___awdiv	;wreg free
   769  0002FE  5006               	movf	?___awdiv,w,c
   770  000300  6E14               	movwf	FRAME_HandleCanFrame@identyfikator,c
   771                           
   772                           ;FRAME.c: 464:     switch(identyfikator)
   773  000302  D060               	goto	l2713
   774  000304                     l2687:
   775                           
   776                           ;FRAME.c: 467:             FRAME_SensorExcitationStatus(message);
   777  000304  C010  F008         	movff	FRAME_HandleCanFrame@message,FRAME_SensorExcitationStatus@message
   778  000308  C011  F009         	movff	FRAME_HandleCanFrame@message+1,FRAME_SensorExcitationStatus@message+1
   779  00030C  EC10  F004         	call	_FRAME_SensorExcitationStatus	;wreg free
   780                           
   781                           ;FRAME.c: 468:             break;
   782  000310  D08B               	goto	l2715
   783  000312                     l2689:
   784                           
   785                           ;FRAME.c: 470:             FRAME_AccelerometerStatus(message);
   786  000312  C010  F008         	movff	FRAME_HandleCanFrame@message,FRAME_AccelerometerStatus@message
   787  000316  C011  F009         	movff	FRAME_HandleCanFrame@message+1,FRAME_AccelerometerStatus@message+1
   788  00031A  ECEE  F004         	call	_FRAME_AccelerometerStatus	;wreg free
   789                           
   790                           ;FRAME.c: 471:             break;
   791  00031E  D084               	goto	l2715
   792  000320                     l2691:
   793                           
   794                           ;FRAME.c: 473:             FRAME_ExcitationValue(message);
   795  000320  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_ExcitationValue@message
   796  000324  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_ExcitationValue@message+1
   797  000328  ECC8  F006         	call	_FRAME_ExcitationValue	;wreg free
   798                           
   799                           ;FRAME.c: 474:             break;
   800  00032C  D07D               	goto	l2715
   801  00032E                     l2693:
   802                           
   803                           ;FRAME.c: 476:             FRAME_ExcitationMultiplier(message);
   804  00032E  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_ExcitationMultiplier@message
   805  000332  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_ExcitationMultiplier@message+1
   806  000336  EC37  F006         	call	_FRAME_ExcitationMultiplier	;wreg free
   807                           
   808                           ;FRAME.c: 477:             break;
   809  00033A  D076               	goto	l2715
   810  00033C                     l2695:
   811                           
   812                           ;FRAME.c: 479:             FRAME_AveragingTimes(message);
   813  00033C  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AveragingTimes@message
   814  000340  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AveragingTimes@message+1
   815  000344  ECFE  F006         	call	_FRAME_AveragingTimes	;wreg free
   816                           
   817                           ;FRAME.c: 480:             break;
   818  000348  D06F               	goto	l2715
   819  00034A                     l2697:
   820                           
   821                           ;FRAME.c: 482:             FRAME_AxisStatus(message);
   822  00034A  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AxisStatus@message
   823  00034E  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AxisStatus@message+1
   824  000352  ECE3  F006         	call	_FRAME_AxisStatus	;wreg free
   825                           
   826                           ;FRAME.c: 483:             break;
   827  000356  D068               	goto	l2715
   828  000358                     l2699:
   829                           
   830                           ;FRAME.c: 485:             FRAME_DeviceReset(message);
   831  000358  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_DeviceReset@message
   832  00035C  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_DeviceReset@message+1
   833  000360  EC8C  F005         	call	_FRAME_DeviceReset	;wreg free
   834                           
   835                           ;FRAME.c: 486:             break;
   836  000364  D061               	goto	l2715
   837  000366                     l2701:
   838                           
   839                           ;FRAME.c: 488:             FRAME_Plot(message);
   840  000366  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_Plot@message
   841  00036A  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_Plot@message+1
   842  00036E  EC85  F007         	call	_FRAME_Plot	;wreg free
   843                           
   844                           ;FRAME.c: 489:             break;
   845  000372  D05A               	goto	l2715
   846  000374                     l2703:
   847                           
   848                           ;FRAME.c: 491:             FRAME_MapPosition(message);
   849  000374  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_MapPosition@message
   850  000378  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_MapPosition@message+1
   851  00037C  EC1A  F008         	call	_FRAME_MapPosition	;wreg free
   852                           
   853                           ;FRAME.c: 492:             break;
   854  000380  D053               	goto	l2715
   855  000382                     l2705:
   856                           
   857                           ;FRAME.c: 494:             FRAME_SoftwareVersion(message);
   858  000382  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_SoftwareVersion@message
   859  000386  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_SoftwareVersion@message+1
   860  00038A  EC19  F008         	call	_FRAME_SoftwareVersion	;wreg free
   861                           
   862                           ;FRAME.c: 495:             break;
   863  00038E  D04C               	goto	l2715
   864  000390                     l2707:
   865                           
   866                           ;FRAME.c: 498:             FRAME_AnalogValue(message, identyfikator - 0x0C);
   867  000390  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AnalogValue@message
   868  000394  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AnalogValue@message+1
   869  000398  0EF4               	movlw	244
   870  00039A  2414               	addwf	FRAME_HandleCanFrame@identyfikator,w,c
   871  00039C  6E08               	movwf	FRAME_AnalogValue@set,c
   872  00039E  6A09               	clrf	FRAME_AnalogValue@set+1,c
   873  0003A0  0EFF               	movlw	255
   874  0003A2  2209               	addwfc	FRAME_AnalogValue@set+1,f,c
   875  0003A4  EC1B  F008         	call	_FRAME_AnalogValue	;wreg free
   876                           
   877                           ;FRAME.c: 499:             break;
   878  0003A8  D03F               	goto	l2715
   879  0003AA                     l2709:
   880                           
   881                           ;FRAME.c: 502:             FRAME_AdressOfNeighbors(message, identyfikator - 0x10);
   882  0003AA  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AdressOfNeighbors@message
   883  0003AE  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AdressOfNeighbors@message+1
   884  0003B2  0EF0               	movlw	240
   885  0003B4  2414               	addwf	FRAME_HandleCanFrame@identyfikator,w,c
   886  0003B6  6E08               	movwf	FRAME_AdressOfNeighbors@nrRamki,c
   887  0003B8  6A09               	clrf	FRAME_AdressOfNeighbors@nrRamki+1,c
   888  0003BA  0EFF               	movlw	255
   889  0003BC  2209               	addwfc	FRAME_AdressOfNeighbors@nrRamki+1,f,c
   890  0003BE  EC1C  F008         	call	_FRAME_AdressOfNeighbors	;wreg free
   891                           
   892                           ;FRAME.c: 503:             break;
   893  0003C2  D032               	goto	l2715
   894  0003C4                     l2713:
   895  0003C4  5014               	movf	FRAME_HandleCanFrame@identyfikator,w,c
   896  0003C6  6E12               	movwf	??_FRAME_HandleCanFrame& (0+255),c
   897  0003C8  6A13               	clrf	(??_FRAME_HandleCanFrame+1)& (0+255),c
   898                           
   899                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   900                           ; Switch size 1, requested type "simple"
   901                           ; Number of cases is 1, Range of values is 0 to 0
   902                           ; switch strategies available:
   903                           ; Name         Instructions Cycles
   904                           ; simple_byte            4     3 (average)
   905                           ;	Chosen strategy is simple_byte
   906  0003CA  5013               	movf	??_FRAME_HandleCanFrame+1,w,c
   907  0003CC  0A00               	xorlw	0	; case 0
   908  0003CE  A4D8               	btfss	status,2,c
   909  0003D0  D02B               	goto	l2715
   910                           
   911                           ; Switch size 1, requested type "simple"
   912                           ; Number of cases is 14, Range of values is 1 to 17
   913                           ; switch strategies available:
   914                           ; Name         Instructions Cycles
   915                           ; simple_byte           43    22 (average)
   916                           ;	Chosen strategy is simple_byte
   917  0003D2  5012               	movf	??_FRAME_HandleCanFrame,w,c
   918  0003D4  0A01               	xorlw	1	; case 1
   919  0003D6  B4D8               	btfsc	status,2,c
   920  0003D8  D795               	goto	l2687
   921  0003DA  0A03               	xorlw	3	; case 2
   922  0003DC  B4D8               	btfsc	status,2,c
   923  0003DE  D799               	goto	l2689
   924  0003E0  0A01               	xorlw	1	; case 3
   925  0003E2  B4D8               	btfsc	status,2,c
   926  0003E4  D79D               	goto	l2691
   927  0003E6  0A07               	xorlw	7	; case 4
   928  0003E8  B4D8               	btfsc	status,2,c
   929  0003EA  D7A1               	goto	l2693
   930  0003EC  0A01               	xorlw	1	; case 5
   931  0003EE  B4D8               	btfsc	status,2,c
   932  0003F0  D7A5               	goto	l2695
   933  0003F2  0A03               	xorlw	3	; case 6
   934  0003F4  B4D8               	btfsc	status,2,c
   935  0003F6  D7A9               	goto	l2697
   936  0003F8  0A01               	xorlw	1	; case 7
   937  0003FA  B4D8               	btfsc	status,2,c
   938  0003FC  D7AD               	goto	l2699
   939  0003FE  0A0E               	xorlw	14	; case 9
   940  000400  B4D8               	btfsc	status,2,c
   941  000402  D7B1               	goto	l2701
   942  000404  0A03               	xorlw	3	; case 10
   943  000406  B4D8               	btfsc	status,2,c
   944  000408  D7B5               	goto	l2703
   945  00040A  0A01               	xorlw	1	; case 11
   946  00040C  B4D8               	btfsc	status,2,c
   947  00040E  D7B9               	goto	l2705
   948  000410  0A07               	xorlw	7	; case 12
   949  000412  B4D8               	btfsc	status,2,c
   950  000414  D7BD               	goto	l2707
   951  000416  0A01               	xorlw	1	; case 13
   952  000418  B4D8               	btfsc	status,2,c
   953  00041A  D7BA               	goto	l2707
   954  00041C  0A1D               	xorlw	29	; case 16
   955  00041E  B4D8               	btfsc	status,2,c
   956  000420  D7C4               	goto	l2709
   957  000422  0A01               	xorlw	1	; case 17
   958  000424  B4D8               	btfsc	status,2,c
   959  000426  D7C1               	goto	l2709
   960  000428                     l2715:
   961                           
   962                           ;FRAME.c: 505:     if(message->message_type == 0x02)
   963  000428  EE20 F001          	lfsr	2,1
   964  00042C  5010               	movf	FRAME_HandleCanFrame@message,w,c
   965  00042E  26D9               	addwf	fsr2l,f,c
   966  000430  5011               	movf	FRAME_HandleCanFrame@message+1,w,c
   967  000432  22DA               	addwfc	fsr2h,f,c
   968  000434  0E02               	movlw	2
   969  000436  18DE               	xorwf	postinc2,w,c
   970  000438  A4D8               	btfss	status,2,c
   971  00043A  0012               	return	
   972                           
   973                           ;FRAME.c: 506:     {;FRAME.c: 508:         message->frame_type = 0x03;
   974  00043C  EE20 F002          	lfsr	2,2
   975  000440  5010               	movf	FRAME_HandleCanFrame@message,w,c
   976  000442  26D9               	addwf	fsr2l,f,c
   977  000444  5011               	movf	FRAME_HandleCanFrame@message+1,w,c
   978  000446  22DA               	addwfc	fsr2h,f,c
   979  000448  0E03               	movlw	3
   980  00044A  6EDF               	movwf	indf2,c
   981                           
   982                           ;FRAME.c: 509:         message->message_type = 0x01;
   983  00044C  EE20 F001          	lfsr	2,1
   984  000450  5010               	movf	FRAME_HandleCanFrame@message,w,c
   985  000452  26D9               	addwf	fsr2l,f,c
   986  000454  5011               	movf	FRAME_HandleCanFrame@message+1,w,c
   987  000456  22DA               	addwfc	fsr2h,f,c
   988  000458  0E01               	movlw	1
   989  00045A  6EDF               	movwf	indf2,c
   990                           
   991                           ;FRAME.c: 510:         message->id.Val = 0;
   992  00045C  EE20 F004          	lfsr	2,4
   993  000460  5010               	movf	FRAME_HandleCanFrame@message,w,c
   994  000462  26D9               	addwf	fsr2l,f,c
   995  000464  5011               	movf	FRAME_HandleCanFrame@message+1,w,c
   996  000466  22DA               	addwfc	fsr2h,f,c
   997  000468  6ADE               	clrf	postinc2,c
   998  00046A  6ADE               	clrf	postinc2,c
   999  00046C  6ADE               	clrf	postinc2,c
  1000  00046E  6ADD               	clrf	postdec2,c
  1001                           
  1002                           ;FRAME.c: 512:         message->id.v[2] = identyfikator*4;
  1003  000470  5014               	movf	FRAME_HandleCanFrame@identyfikator,w,c
  1004  000472  0D04               	mullw	4
  1005  000474  EE20 F006          	lfsr	2,6
  1006  000478  5010               	movf	FRAME_HandleCanFrame@message,w,c
  1007  00047A  26D9               	addwf	fsr2l,f,c
  1008  00047C  5011               	movf	FRAME_HandleCanFrame@message+1,w,c
  1009  00047E  22DA               	addwfc	fsr2h,f,c
  1010  000480  CFF3 FFDF          	movff	prodl,indf2
  1011                           
  1012                           ;FRAME.c: 513:         CAN_GenID(message,identyfikator);
  1013  000484  C010  F006         	movff	FRAME_HandleCanFrame@message,CAN_GenID@message
  1014  000488  C011  F007         	movff	FRAME_HandleCanFrame@message+1,CAN_GenID@message+1
  1015  00048C  C014  F008         	movff	FRAME_HandleCanFrame@identyfikator,CAN_GenID@frameID
  1016  000490  EC62  F004         	call	_CAN_GenID	;wreg free
  1017                           
  1018                           ;FRAME.c: 514:         CAN_SendFrame(message);
  1019  000494  C010  F00B         	movff	FRAME_HandleCanFrame@message,CAN_SendFrame@message
  1020  000498  C011  F00C         	movff	FRAME_HandleCanFrame@message+1,CAN_SendFrame@message+1
  1021  00049C  EC58  F002         	call	_CAN_SendFrame	;wreg free
  1022                           
  1023                           ;FRAME.c: 525:        while(RXB0CONbits.FILHIT3)
  1024  0004A0  D004               	goto	l480
  1025  0004A2                     l481:
  1026                           
  1027                           ;FRAME.c: 526:        {;FRAME.c: 527:            if(TXB0CONbits.TXERR == 1){
  1028  0004A2  010F               	movlb	15	; () banked
  1029  0004A4  B940               	btfsc	64,4,b	;volatile
  1030                           
  1031                           ; BSR set to: 15
  1032                           ;FRAME.c: 528:                LED_Error();
  1033  0004A6  EC96  F007         	call	_LED_Error	;wreg free
  1034  0004AA                     l480:
  1035                           
  1036                           ;FRAME.c: 525:        while(RXB0CONbits.FILHIT3)
  1037  0004AA  A660               	btfss	3936,3,c	;volatile
  1038  0004AC  0012               	return	
  1039  0004AE  D7F9               	goto	l481
  1040  0004B0                     __end_of_FRAME_HandleCanFrame:
  1041                           	opt callstack 0
  1042                           
  1043 ;; *************** function _LED_Error *****************
  1044 ;; Defined at:
  1045 ;;		line 32 in file "LED.c"
  1046 ;; Parameters:    Size  Location     Type
  1047 ;;		None
  1048 ;; Auto vars:     Size  Location     Type
  1049 ;;		None
  1050 ;; Return value:  Size  Location     Type
  1051 ;;                  2  251[None  ] unsigned int 
  1052 ;; Registers used:
  1053 ;;		wreg, status,2, status,0, cstack
  1054 ;; Tracked objects:
  1055 ;;		On entry : 0/0
  1056 ;;		On exit  : 0/0
  1057 ;;		Unchanged: 0/0
  1058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1062 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1063 ;;Total ram usage:        0 bytes
  1064 ;; Hardware stack levels used:    1
  1065 ;; Hardware stack levels required when called:    4
  1066 ;; This function calls:
  1067 ;;		_LED_Control
  1068 ;; This function is called by:
  1069 ;;		_FRAME_HandleCanFrame
  1070 ;; This function uses a non-reentrant model
  1071 ;;
  1072                           
  1073                           	psect	text3
  1074  000F2C                     __ptext3:
  1075                           	opt callstack 0
  1076  000F2C                     _LED_Error:
  1077                           	opt callstack 24
  1078                           
  1079                           ;LED.c: 34:     LED_Control(RED,0b1010101010);
  1080                           
  1081                           ;incstack = 0
  1082  000F2C  0E02               	movlw	2
  1083  000F2E  6E07               	movwf	LED_Control@diode+1,c
  1084  000F30  0EAA               	movlw	170
  1085  000F32  6E06               	movwf	LED_Control@diode,c
  1086  000F34  0E00               	movlw	0
  1087  000F36  EC0F  F003         	call	_LED_Control
  1088                           
  1089                           ;LED.c: 35:     LED_Control(GREEN,0b0000000000);
  1090  000F3A  0E00               	movlw	0
  1091  000F3C  6E07               	movwf	LED_Control@diode+1,c
  1092  000F3E  0E00               	movlw	0
  1093  000F40  6E06               	movwf	LED_Control@diode,c
  1094  000F42  0E01               	movlw	1
  1095  000F44  EC0F  F003         	call	_LED_Control
  1096  000F48  0012               	return		;funcret
  1097  000F4A                     __end_of_LED_Error:
  1098                           	opt callstack 0
  1099                           
  1100 ;; *************** function _FRAME_SoftwareVersion *****************
  1101 ;; Defined at:
  1102 ;;		line 364 in file "FRAME.c"
  1103 ;; Parameters:    Size  Location     Type
  1104 ;;  message         2    5[COMRAM] PTR struct .
  1105 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1106 ;; Auto vars:     Size  Location     Type
  1107 ;;		None
  1108 ;; Return value:  Size  Location     Type
  1109 ;;                  1    wreg      void 
  1110 ;; Registers used:
  1111 ;;		None
  1112 ;; Tracked objects:
  1113 ;;		On entry : 0/0
  1114 ;;		On exit  : 0/0
  1115 ;;		Unchanged: 0/0
  1116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1117 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1120 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1121 ;;Total ram usage:        2 bytes
  1122 ;; Hardware stack levels used:    1
  1123 ;; Hardware stack levels required when called:    3
  1124 ;; This function calls:
  1125 ;;		Nothing
  1126 ;; This function is called by:
  1127 ;;		_FRAME_HandleCanFrame
  1128 ;; This function uses a non-reentrant model
  1129 ;;
  1130                           
  1131                           	psect	text4
  1132  001032                     __ptext4:
  1133                           	opt callstack 0
  1134  001032                     _FRAME_SoftwareVersion:
  1135                           	opt callstack 25
  1136                           
  1137                           ;incstack = 0
  1138  001032  0012               	return		;funcret
  1139  001034                     __end_of_FRAME_SoftwareVersion:
  1140                           	opt callstack 0
  1141                           
  1142 ;; *************** function _FRAME_SensorExcitationStatus *****************
  1143 ;; Defined at:
  1144 ;;		line 32 in file "FRAME.c"
  1145 ;; Parameters:    Size  Location     Type
  1146 ;;  message         2    7[COMRAM] PTR struct .
  1147 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1148 ;; Auto vars:     Size  Location     Type
  1149 ;;		None
  1150 ;; Return value:  Size  Location     Type
  1151 ;;                  1    wreg      void 
  1152 ;; Registers used:
  1153 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1154 ;; Tracked objects:
  1155 ;;		On entry : 0/0
  1156 ;;		On exit  : 0/0
  1157 ;;		Unchanged: 0/0
  1158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1159 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1161 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1162 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1163 ;;Total ram usage:        3 bytes
  1164 ;; Hardware stack levels used:    1
  1165 ;; Hardware stack levels required when called:    4
  1166 ;; This function calls:
  1167 ;;		_MOC_Aktualna_Temperatura
  1168 ;;		_MOC_Frame_Counter
  1169 ;;		_MOC_NOTWORK
  1170 ;;		_MOC_StanWzbudzenia
  1171 ;;		_MOC_Wynikowa_wartosc_roznicowa
  1172 ;; This function is called by:
  1173 ;;		_FRAME_HandleCanFrame
  1174 ;; This function uses a non-reentrant model
  1175 ;;
  1176                           
  1177                           	psect	text5
  1178  000820                     __ptext5:
  1179                           	opt callstack 0
  1180  000820                     _FRAME_SensorExcitationStatus:
  1181                           	opt callstack 24
  1182                           
  1183                           ;FRAME.c: 32: static void FRAME_SensorExcitationStatus(mID *message);FRAME.c: 33: {;FRAM
      +                          E.c: 34:     if(message->message_type == 0x02)
  1184                           
  1185                           ;incstack = 0
  1186  000820  EE20 F001          	lfsr	2,1
  1187  000824  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1188  000826  26D9               	addwf	fsr2l,f,c
  1189  000828  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1190  00082A  22DA               	addwfc	fsr2h,f,c
  1191  00082C  0E02               	movlw	2
  1192  00082E  18DE               	xorwf	postinc2,w,c
  1193  000830  A4D8               	btfss	status,2,c
  1194  000832  0012               	return	
  1195                           
  1196                           ;FRAME.c: 35:     {;FRAME.c: 36:         message->data_length = 6;
  1197  000834  EE20 F010          	lfsr	2,16
  1198  000838  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1199  00083A  26D9               	addwf	fsr2l,f,c
  1200  00083C  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1201  00083E  22DA               	addwfc	fsr2h,f,c
  1202  000840  0E06               	movlw	6
  1203  000842  6EDF               	movwf	indf2,c
  1204                           
  1205                           ;FRAME.c: 42:         message->data[0] = MOC_StanWzbudzenia();
  1206  000844  EE20 F008          	lfsr	2,8
  1207  000848  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1208  00084A  26D9               	addwf	fsr2l,f,c
  1209  00084C  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1210  00084E  22DA               	addwfc	fsr2h,f,c
  1211  000850  ECE0  F007         	call	_MOC_StanWzbudzenia	;wreg free
  1212  000854  5006               	movf	?_MOC_StanWzbudzenia,w,c
  1213  000856  6EDF               	movwf	indf2,c
  1214                           
  1215                           ;FRAME.c: 43:         message->data[1] = MOC_Wynikowa_wartosc_roznicowa() >> 8 ;
  1216  000858  EE20 F009          	lfsr	2,9
  1217  00085C  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1218  00085E  26D9               	addwf	fsr2l,f,c
  1219  000860  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1220  000862  22DA               	addwfc	fsr2h,f,c
  1221  000864  ECDB  F007         	call	_MOC_Wynikowa_wartosc_roznicowa	;wreg free
  1222  000868  C007  F006         	movff	?_MOC_Wynikowa_wartosc_roznicowa+1,?_MOC_Wynikowa_wartosc_roznicowa
  1223  00086C  6A07               	clrf	?_MOC_Wynikowa_wartosc_roznicowa+1,c
  1224  00086E  5006               	movf	?_MOC_Wynikowa_wartosc_roznicowa,w,c
  1225  000870  6EDF               	movwf	indf2,c
  1226                           
  1227                           ;FRAME.c: 44:         message->data[2] = MOC_Wynikowa_wartosc_roznicowa() & 0x00FF;
  1228  000872  EE20 F00A          	lfsr	2,10
  1229  000876  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1230  000878  26D9               	addwf	fsr2l,f,c
  1231  00087A  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1232  00087C  22DA               	addwfc	fsr2h,f,c
  1233  00087E  ECDB  F007         	call	_MOC_Wynikowa_wartosc_roznicowa	;wreg free
  1234  000882  5006               	movf	?_MOC_Wynikowa_wartosc_roznicowa,w,c
  1235  000884  6EDF               	movwf	indf2,c
  1236                           
  1237                           ;FRAME.c: 45:         message->data[3] = MOC_Frame_Counter();
  1238  000886  EE20 F00B          	lfsr	2,11
  1239  00088A  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1240  00088C  26D9               	addwf	fsr2l,f,c
  1241  00088E  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1242  000890  22DA               	addwfc	fsr2h,f,c
  1243  000892  ECCD  F007         	call	_MOC_Frame_Counter	;wreg free
  1244  000896  5006               	movf	?_MOC_Frame_Counter,w,c
  1245  000898  6EDF               	movwf	indf2,c
  1246                           
  1247                           ;FRAME.c: 46:         message->data[4] = MOC_Aktualna_Temperatura();
  1248  00089A  EE20 F00C          	lfsr	2,12
  1249  00089E  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1250  0008A0  26D9               	addwf	fsr2l,f,c
  1251  0008A2  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1252  0008A4  22DA               	addwfc	fsr2h,f,c
  1253  0008A6  ECE5  F007         	call	_MOC_Aktualna_Temperatura	;wreg free
  1254  0008AA  5006               	movf	?_MOC_Aktualna_Temperatura,w,c
  1255  0008AC  6EDF               	movwf	indf2,c
  1256                           
  1257                           ;FRAME.c: 47:         message->data[5] = MOC_NOTWORK();
  1258  0008AE  EE20 F00D          	lfsr	2,13
  1259  0008B2  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1260  0008B4  26D9               	addwf	fsr2l,f,c
  1261  0008B6  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1262  0008B8  22DA               	addwfc	fsr2h,f,c
  1263  0008BA  EC12  F008         	call	_MOC_NOTWORK	;wreg free
  1264  0008BE  5006               	movf	?_MOC_NOTWORK,w,c
  1265  0008C0  6EDF               	movwf	indf2,c
  1266                           
  1267                           ;FRAME.c: 57:     }
  1268  0008C2  0012               	return		;funcret
  1269  0008C4                     __end_of_FRAME_SensorExcitationStatus:
  1270                           	opt callstack 0
  1271                           
  1272 ;; *************** function _MOC_Wynikowa_wartosc_roznicowa *****************
  1273 ;; Defined at:
  1274 ;;		line 33 in file "MOC_Funct.c"
  1275 ;; Parameters:    Size  Location     Type
  1276 ;;		None
  1277 ;; Auto vars:     Size  Location     Type
  1278 ;;		None
  1279 ;; Return value:  Size  Location     Type
  1280 ;;                  2    5[COMRAM] unsigned int 
  1281 ;; Registers used:
  1282 ;;		wreg, status,2
  1283 ;; Tracked objects:
  1284 ;;		On entry : 0/0
  1285 ;;		On exit  : 0/0
  1286 ;;		Unchanged: 0/0
  1287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1288 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1291 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1292 ;;Total ram usage:        2 bytes
  1293 ;; Hardware stack levels used:    1
  1294 ;; Hardware stack levels required when called:    3
  1295 ;; This function calls:
  1296 ;;		Nothing
  1297 ;; This function is called by:
  1298 ;;		_FRAME_SensorExcitationStatus
  1299 ;; This function uses a non-reentrant model
  1300 ;;
  1301                           
  1302                           	psect	text6
  1303  000FB6                     __ptext6:
  1304                           	opt callstack 0
  1305  000FB6                     _MOC_Wynikowa_wartosc_roznicowa:
  1306                           	opt callstack 24
  1307                           
  1308                           ;MOC_Funct.c: 35:     return 0x0220;
  1309                           
  1310                           ;incstack = 0
  1311  000FB6  0E02               	movlw	2
  1312  000FB8  6E07               	movwf	?_MOC_Wynikowa_wartosc_roznicowa+1,c
  1313  000FBA  0E20               	movlw	32
  1314  000FBC  6E06               	movwf	?_MOC_Wynikowa_wartosc_roznicowa,c
  1315  000FBE  0012               	return		;funcret
  1316  000FC0                     __end_of_MOC_Wynikowa_wartosc_roznicowa:
  1317                           	opt callstack 0
  1318                           
  1319 ;; *************** function _MOC_StanWzbudzenia *****************
  1320 ;; Defined at:
  1321 ;;		line 28 in file "MOC_Funct.c"
  1322 ;; Parameters:    Size  Location     Type
  1323 ;;		None
  1324 ;; Auto vars:     Size  Location     Type
  1325 ;;		None
  1326 ;; Return value:  Size  Location     Type
  1327 ;;                  2    5[COMRAM] unsigned int 
  1328 ;; Registers used:
  1329 ;;		wreg, status,2
  1330 ;; Tracked objects:
  1331 ;;		On entry : 0/0
  1332 ;;		On exit  : 0/0
  1333 ;;		Unchanged: 0/0
  1334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1335 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1338 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1339 ;;Total ram usage:        2 bytes
  1340 ;; Hardware stack levels used:    1
  1341 ;; Hardware stack levels required when called:    3
  1342 ;; This function calls:
  1343 ;;		Nothing
  1344 ;; This function is called by:
  1345 ;;		_FRAME_SensorExcitationStatus
  1346 ;; This function uses a non-reentrant model
  1347 ;;
  1348                           
  1349                           	psect	text7
  1350  000FC0                     __ptext7:
  1351                           	opt callstack 0
  1352  000FC0                     _MOC_StanWzbudzenia:
  1353                           	opt callstack 24
  1354                           
  1355                           ;MOC_Funct.c: 30:     return 1;
  1356                           
  1357                           ;incstack = 0
  1358  000FC0  0E00               	movlw	0
  1359  000FC2  6E07               	movwf	?_MOC_StanWzbudzenia+1,c
  1360  000FC4  0E01               	movlw	1
  1361  000FC6  6E06               	movwf	?_MOC_StanWzbudzenia,c
  1362  000FC8  0012               	return		;funcret
  1363  000FCA                     __end_of_MOC_StanWzbudzenia:
  1364                           	opt callstack 0
  1365                           
  1366 ;; *************** function _MOC_NOTWORK *****************
  1367 ;; Defined at:
  1368 ;;		line 47 in file "MOC_Funct.c"
  1369 ;; Parameters:    Size  Location     Type
  1370 ;;		None
  1371 ;; Auto vars:     Size  Location     Type
  1372 ;;		None
  1373 ;; Return value:  Size  Location     Type
  1374 ;;                  2    5[COMRAM] unsigned int 
  1375 ;; Registers used:
  1376 ;;		wreg, status,2
  1377 ;; Tracked objects:
  1378 ;;		On entry : 0/0
  1379 ;;		On exit  : 0/0
  1380 ;;		Unchanged: 0/0
  1381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1382 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1385 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1386 ;;Total ram usage:        2 bytes
  1387 ;; Hardware stack levels used:    1
  1388 ;; Hardware stack levels required when called:    3
  1389 ;; This function calls:
  1390 ;;		Nothing
  1391 ;; This function is called by:
  1392 ;;		_FRAME_SensorExcitationStatus
  1393 ;; This function uses a non-reentrant model
  1394 ;;
  1395                           
  1396                           	psect	text8
  1397  001024                     __ptext8:
  1398                           	opt callstack 0
  1399  001024                     _MOC_NOTWORK:
  1400                           	opt callstack 24
  1401                           
  1402                           ;MOC_Funct.c: 49:     return 0xFF;
  1403                           
  1404                           ;incstack = 0
  1405  001024  0E00               	movlw	0
  1406  001026  6E07               	movwf	?_MOC_NOTWORK+1,c
  1407  001028  6806               	setf	?_MOC_NOTWORK,c
  1408  00102A  0012               	return		;funcret
  1409  00102C                     __end_of_MOC_NOTWORK:
  1410                           	opt callstack 0
  1411                           
  1412 ;; *************** function _MOC_Frame_Counter *****************
  1413 ;; Defined at:
  1414 ;;		line 38 in file "MOC_Funct.c"
  1415 ;; Parameters:    Size  Location     Type
  1416 ;;		None
  1417 ;; Auto vars:     Size  Location     Type
  1418 ;;		None
  1419 ;; Return value:  Size  Location     Type
  1420 ;;                  2    5[COMRAM] unsigned int 
  1421 ;; Registers used:
  1422 ;;		wreg, status,2, status,0
  1423 ;; Tracked objects:
  1424 ;;		On entry : 0/0
  1425 ;;		On exit  : 0/0
  1426 ;;		Unchanged: 0/0
  1427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1428 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1431 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1432 ;;Total ram usage:        2 bytes
  1433 ;; Hardware stack levels used:    1
  1434 ;; Hardware stack levels required when called:    3
  1435 ;; This function calls:
  1436 ;;		Nothing
  1437 ;; This function is called by:
  1438 ;;		_FRAME_SensorExcitationStatus
  1439 ;; This function uses a non-reentrant model
  1440 ;;
  1441                           
  1442                           	psect	text9
  1443  000F9A                     __ptext9:
  1444                           	opt callstack 0
  1445  000F9A                     _MOC_Frame_Counter:
  1446                           	opt callstack 24
  1447                           
  1448                           ;MOC_Funct.c: 40:     static UINT zeta = 0x11;;MOC_Funct.c: 41:     return zeta++;
  1449                           
  1450                           ;incstack = 0
  1451  000F9A  5044               	movf	MOC_Frame_Counter@zeta,w,c
  1452  000F9C  6E06               	movwf	?_MOC_Frame_Counter,c
  1453  000F9E  5045               	movf	MOC_Frame_Counter@zeta+1,w,c
  1454  000FA0  6E07               	movwf	?_MOC_Frame_Counter+1,c
  1455  000FA2  4A44               	infsnz	MOC_Frame_Counter@zeta,f,c
  1456  000FA4  2A45               	incf	MOC_Frame_Counter@zeta+1,f,c
  1457  000FA6  0012               	return		;funcret
  1458  000FA8                     __end_of_MOC_Frame_Counter:
  1459                           	opt callstack 0
  1460                           
  1461 ;; *************** function _MOC_Aktualna_Temperatura *****************
  1462 ;; Defined at:
  1463 ;;		line 43 in file "MOC_Funct.c"
  1464 ;; Parameters:    Size  Location     Type
  1465 ;;		None
  1466 ;; Auto vars:     Size  Location     Type
  1467 ;;		None
  1468 ;; Return value:  Size  Location     Type
  1469 ;;                  2    5[COMRAM] unsigned int 
  1470 ;; Registers used:
  1471 ;;		wreg, status,2
  1472 ;; Tracked objects:
  1473 ;;		On entry : 0/0
  1474 ;;		On exit  : 0/0
  1475 ;;		Unchanged: 0/0
  1476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1477 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1480 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1481 ;;Total ram usage:        2 bytes
  1482 ;; Hardware stack levels used:    1
  1483 ;; Hardware stack levels required when called:    3
  1484 ;; This function calls:
  1485 ;;		Nothing
  1486 ;; This function is called by:
  1487 ;;		_FRAME_SensorExcitationStatus
  1488 ;; This function uses a non-reentrant model
  1489 ;;
  1490                           
  1491                           	psect	text10
  1492  000FCA                     __ptext10:
  1493                           	opt callstack 0
  1494  000FCA                     _MOC_Aktualna_Temperatura:
  1495                           	opt callstack 24
  1496                           
  1497                           ;MOC_Funct.c: 45:     return 0x1B;
  1498                           
  1499                           ;incstack = 0
  1500  000FCA  0E00               	movlw	0
  1501  000FCC  6E07               	movwf	?_MOC_Aktualna_Temperatura+1,c
  1502  000FCE  0E1B               	movlw	27
  1503  000FD0  6E06               	movwf	?_MOC_Aktualna_Temperatura,c
  1504  000FD2  0012               	return		;funcret
  1505  000FD4                     __end_of_MOC_Aktualna_Temperatura:
  1506                           	opt callstack 0
  1507                           
  1508 ;; *************** function _FRAME_Plot *****************
  1509 ;; Defined at:
  1510 ;;		line 317 in file "FRAME.c"
  1511 ;; Parameters:    Size  Location     Type
  1512 ;;  message         2    5[COMRAM] PTR struct .
  1513 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1514 ;; Auto vars:     Size  Location     Type
  1515 ;;		None
  1516 ;; Return value:  Size  Location     Type
  1517 ;;                  1    wreg      void 
  1518 ;; Registers used:
  1519 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1520 ;; Tracked objects:
  1521 ;;		On entry : 0/0
  1522 ;;		On exit  : 0/0
  1523 ;;		Unchanged: 0/0
  1524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1525 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1528 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1529 ;;Total ram usage:        2 bytes
  1530 ;; Hardware stack levels used:    1
  1531 ;; Hardware stack levels required when called:    3
  1532 ;; This function calls:
  1533 ;;		Nothing
  1534 ;; This function is called by:
  1535 ;;		_FRAME_HandleCanFrame
  1536 ;; This function uses a non-reentrant model
  1537 ;;
  1538                           
  1539                           	psect	text11
  1540  000F0A                     __ptext11:
  1541                           	opt callstack 0
  1542  000F0A                     _FRAME_Plot:
  1543                           	opt callstack 25
  1544                           
  1545                           ;FRAME.c: 317: static void FRAME_Plot(mID *message);FRAME.c: 318: {;FRAME.c: 329:     me
      +                          ssage->data_length = 1;
  1546                           
  1547                           ;incstack = 0
  1548  000F0A  EE20 F010          	lfsr	2,16
  1549  000F0E  5006               	movf	FRAME_Plot@message,w,c
  1550  000F10  26D9               	addwf	fsr2l,f,c
  1551  000F12  5007               	movf	FRAME_Plot@message+1,w,c
  1552  000F14  22DA               	addwfc	fsr2h,f,c
  1553  000F16  0E01               	movlw	1
  1554  000F18  6EDF               	movwf	indf2,c
  1555                           
  1556                           ;FRAME.c: 330:     message->data[0] = 0xFF;
  1557  000F1A  EE20 F008          	lfsr	2,8
  1558  000F1E  5006               	movf	FRAME_Plot@message,w,c
  1559  000F20  26D9               	addwf	fsr2l,f,c
  1560  000F22  5007               	movf	FRAME_Plot@message+1,w,c
  1561  000F24  22DA               	addwfc	fsr2h,f,c
  1562  000F26  0EFF               	movlw	255
  1563  000F28  6EDF               	movwf	indf2,c
  1564  000F2A  0012               	return		;funcret
  1565  000F2C                     __end_of_FRAME_Plot:
  1566                           	opt callstack 0
  1567                           
  1568 ;; *************** function _FRAME_MapPosition *****************
  1569 ;; Defined at:
  1570 ;;		line 339 in file "FRAME.c"
  1571 ;; Parameters:    Size  Location     Type
  1572 ;;  message         2    5[COMRAM] PTR struct .
  1573 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1574 ;; Auto vars:     Size  Location     Type
  1575 ;;		None
  1576 ;; Return value:  Size  Location     Type
  1577 ;;                  1    wreg      void 
  1578 ;; Registers used:
  1579 ;;		None
  1580 ;; Tracked objects:
  1581 ;;		On entry : 0/0
  1582 ;;		On exit  : 0/0
  1583 ;;		Unchanged: 0/0
  1584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1585 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1588 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1589 ;;Total ram usage:        2 bytes
  1590 ;; Hardware stack levels used:    1
  1591 ;; Hardware stack levels required when called:    3
  1592 ;; This function calls:
  1593 ;;		Nothing
  1594 ;; This function is called by:
  1595 ;;		_FRAME_HandleCanFrame
  1596 ;; This function uses a non-reentrant model
  1597 ;;
  1598                           
  1599                           	psect	text12
  1600  001034                     __ptext12:
  1601                           	opt callstack 0
  1602  001034                     _FRAME_MapPosition:
  1603                           	opt callstack 25
  1604                           
  1605                           ;incstack = 0
  1606  001034  0012               	return		;funcret
  1607  001036                     __end_of_FRAME_MapPosition:
  1608                           	opt callstack 0
  1609                           
  1610 ;; *************** function _FRAME_ExcitationValue *****************
  1611 ;; Defined at:
  1612 ;;		line 95 in file "FRAME.c"
  1613 ;; Parameters:    Size  Location     Type
  1614 ;;  message         2    5[COMRAM] PTR struct .
  1615 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1616 ;; Auto vars:     Size  Location     Type
  1617 ;;		None
  1618 ;; Return value:  Size  Location     Type
  1619 ;;                  1    wreg      void 
  1620 ;; Registers used:
  1621 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1622 ;; Tracked objects:
  1623 ;;		On entry : 0/0
  1624 ;;		On exit  : 0/0
  1625 ;;		Unchanged: 0/0
  1626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1627 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1629 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1630 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1631 ;;Total ram usage:        3 bytes
  1632 ;; Hardware stack levels used:    1
  1633 ;; Hardware stack levels required when called:    3
  1634 ;; This function calls:
  1635 ;;		Nothing
  1636 ;; This function is called by:
  1637 ;;		_FRAME_HandleCanFrame
  1638 ;; This function uses a non-reentrant model
  1639 ;;
  1640                           
  1641                           	psect	text13
  1642  000D90                     __ptext13:
  1643                           	opt callstack 0
  1644  000D90                     _FRAME_ExcitationValue:
  1645                           	opt callstack 25
  1646                           
  1647                           ;FRAME.c: 95: static void FRAME_ExcitationValue(mID *message);FRAME.c: 96: {;FRAME.c: 97
      +                          :     if(message->message_type == 0x02)
  1648                           
  1649                           ;incstack = 0
  1650  000D90  EE20 F001          	lfsr	2,1
  1651  000D94  5006               	movf	FRAME_ExcitationValue@message,w,c
  1652  000D96  26D9               	addwf	fsr2l,f,c
  1653  000D98  5007               	movf	FRAME_ExcitationValue@message+1,w,c
  1654  000D9A  22DA               	addwfc	fsr2h,f,c
  1655  000D9C  0E02               	movlw	2
  1656  000D9E  18DE               	xorwf	postinc2,w,c
  1657  000DA0  A4D8               	btfss	status,2,c
  1658  000DA2  0012               	return	
  1659                           
  1660                           ;FRAME.c: 98:     {;FRAME.c: 99:         message->data_length = 1;
  1661  000DA4  EE20 F010          	lfsr	2,16
  1662  000DA8  5006               	movf	FRAME_ExcitationValue@message,w,c
  1663  000DAA  26D9               	addwf	fsr2l,f,c
  1664  000DAC  5007               	movf	FRAME_ExcitationValue@message+1,w,c
  1665  000DAE  22DA               	addwfc	fsr2h,f,c
  1666  000DB0  0E01               	movlw	1
  1667  000DB2  6EDF               	movwf	indf2,c
  1668                           
  1669                           ;FRAME.c: 104:         message->data[0] = 0xFF;
  1670  000DB4  EE20 F008          	lfsr	2,8
  1671  000DB8  5006               	movf	FRAME_ExcitationValue@message,w,c
  1672  000DBA  26D9               	addwf	fsr2l,f,c
  1673  000DBC  5007               	movf	FRAME_ExcitationValue@message+1,w,c
  1674  000DBE  22DA               	addwfc	fsr2h,f,c
  1675  000DC0  0EFF               	movlw	255
  1676  000DC2  6EDF               	movwf	indf2,c
  1677                           
  1678                           ;FRAME.c: 105:     }
  1679  000DC4  0012               	return		;funcret
  1680  000DC6                     __end_of_FRAME_ExcitationValue:
  1681                           	opt callstack 0
  1682                           
  1683 ;; *************** function _FRAME_ExcitationMultiplier *****************
  1684 ;; Defined at:
  1685 ;;		line 119 in file "FRAME.c"
  1686 ;; Parameters:    Size  Location     Type
  1687 ;;  message         2    5[COMRAM] PTR struct .
  1688 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1689 ;; Auto vars:     Size  Location     Type
  1690 ;;  i               2    8[COMRAM] unsigned short 
  1691 ;; Return value:  Size  Location     Type
  1692 ;;                  1    wreg      void 
  1693 ;; Registers used:
  1694 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1695 ;; Tracked objects:
  1696 ;;		On entry : 0/0
  1697 ;;		On exit  : 0/0
  1698 ;;		Unchanged: 0/0
  1699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1700 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1701 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1702 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1703 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1704 ;;Total ram usage:        5 bytes
  1705 ;; Hardware stack levels used:    1
  1706 ;; Hardware stack levels required when called:    3
  1707 ;; This function calls:
  1708 ;;		Nothing
  1709 ;; This function is called by:
  1710 ;;		_FRAME_HandleCanFrame
  1711 ;; This function uses a non-reentrant model
  1712 ;;
  1713                           
  1714                           	psect	text14
  1715  000C6E                     __ptext14:
  1716                           	opt callstack 0
  1717  000C6E                     _FRAME_ExcitationMultiplier:
  1718                           	opt callstack 25
  1719                           
  1720                           ;FRAME.c: 119: static void FRAME_ExcitationMultiplier(mID *message);FRAME.c: 120: {;FRAM
      +                          E.c: 121:     WORD i;;FRAME.c: 123:     if(message->message_type == 0x02)
  1721                           
  1722                           ;incstack = 0
  1723  000C6E  EE20 F001          	lfsr	2,1
  1724  000C72  5006               	movf	FRAME_ExcitationMultiplier@message,w,c
  1725  000C74  26D9               	addwf	fsr2l,f,c
  1726  000C76  5007               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  1727  000C78  22DA               	addwfc	fsr2h,f,c
  1728  000C7A  0E02               	movlw	2
  1729  000C7C  18DE               	xorwf	postinc2,w,c
  1730  000C7E  A4D8               	btfss	status,2,c
  1731  000C80  0012               	return	
  1732                           
  1733                           ;FRAME.c: 124:     {;FRAME.c: 125:         message->data_length = 1;
  1734  000C82  EE20 F010          	lfsr	2,16
  1735  000C86  5006               	movf	FRAME_ExcitationMultiplier@message,w,c
  1736  000C88  26D9               	addwf	fsr2l,f,c
  1737  000C8A  5007               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  1738  000C8C  22DA               	addwfc	fsr2h,f,c
  1739  000C8E  0E01               	movlw	1
  1740  000C90  6EDF               	movwf	indf2,c
  1741                           
  1742                           ;FRAME.c: 126:         for(i=0; i<3; i++)
  1743  000C92  0E00               	movlw	0
  1744  000C94  6E0A               	movwf	FRAME_ExcitationMultiplier@i+1,c
  1745  000C96  0E00               	movlw	0
  1746  000C98  6E09               	movwf	FRAME_ExcitationMultiplier@i,c
  1747  000C9A                     l2451:
  1748                           
  1749                           ;FRAME.c: 127:         {;FRAME.c: 130:         }
  1750  000C9A  4A09               	infsnz	FRAME_ExcitationMultiplier@i,f,c
  1751  000C9C  2A0A               	incf	FRAME_ExcitationMultiplier@i+1,f,c
  1752  000C9E  500A               	movf	FRAME_ExcitationMultiplier@i+1,w,c
  1753  000CA0  E104               	bnz	u1040
  1754  000CA2  0E03               	movlw	3
  1755  000CA4  5C09               	subwf	FRAME_ExcitationMultiplier@i,w,c
  1756  000CA6  A0D8               	btfss	status,0,c
  1757  000CA8  D7F8               	goto	l2451
  1758  000CAA                     u1040:
  1759                           
  1760                           ;FRAME.c: 131:         message->data[0] = 0xFF;
  1761  000CAA  EE20 F008          	lfsr	2,8
  1762  000CAE  5006               	movf	FRAME_ExcitationMultiplier@message,w,c
  1763  000CB0  26D9               	addwf	fsr2l,f,c
  1764  000CB2  5007               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  1765  000CB4  22DA               	addwfc	fsr2h,f,c
  1766  000CB6  0EFF               	movlw	255
  1767  000CB8  6EDF               	movwf	indf2,c
  1768                           
  1769                           ;FRAME.c: 132:     }
  1770  000CBA  0012               	return		;funcret
  1771  000CBC                     __end_of_FRAME_ExcitationMultiplier:
  1772                           	opt callstack 0
  1773                           
  1774 ;; *************** function _FRAME_DeviceReset *****************
  1775 ;; Defined at:
  1776 ;;		line 253 in file "FRAME.c"
  1777 ;; Parameters:    Size  Location     Type
  1778 ;;  message         2    5[COMRAM] PTR struct .
  1779 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1780 ;; Auto vars:     Size  Location     Type
  1781 ;;		None
  1782 ;; Return value:  Size  Location     Type
  1783 ;;                  1    wreg      void 
  1784 ;; Registers used:
  1785 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1786 ;; Tracked objects:
  1787 ;;		On entry : 0/0
  1788 ;;		On exit  : 0/0
  1789 ;;		Unchanged: 0/0
  1790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1791 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1793 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1794 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1795 ;;Total ram usage:        3 bytes
  1796 ;; Hardware stack levels used:    1
  1797 ;; Hardware stack levels required when called:    3
  1798 ;; This function calls:
  1799 ;;		Nothing
  1800 ;; This function is called by:
  1801 ;;		_FRAME_HandleCanFrame
  1802 ;; This function uses a non-reentrant model
  1803 ;;
  1804                           
  1805                           	psect	text15
  1806  000B18                     __ptext15:
  1807                           	opt callstack 0
  1808  000B18                     _FRAME_DeviceReset:
  1809                           	opt callstack 25
  1810                           
  1811                           ;FRAME.c: 253: static void FRAME_DeviceReset(mID *message);FRAME.c: 254: {;FRAME.c: 255:
      +                               if(message->message_type == 0x02)
  1812                           
  1813                           ;incstack = 0
  1814  000B18  EE20 F001          	lfsr	2,1
  1815  000B1C  5006               	movf	FRAME_DeviceReset@message,w,c
  1816  000B1E  26D9               	addwf	fsr2l,f,c
  1817  000B20  5007               	movf	FRAME_DeviceReset@message+1,w,c
  1818  000B22  22DA               	addwfc	fsr2h,f,c
  1819  000B24  0E02               	movlw	2
  1820  000B26  18DE               	xorwf	postinc2,w,c
  1821  000B28  A4D8               	btfss	status,2,c
  1822  000B2A  D011               	goto	l2469
  1823                           
  1824                           ;FRAME.c: 256:     {;FRAME.c: 257:         message->data_length = 1;
  1825  000B2C  EE20 F010          	lfsr	2,16
  1826  000B30  5006               	movf	FRAME_DeviceReset@message,w,c
  1827  000B32  26D9               	addwf	fsr2l,f,c
  1828  000B34  5007               	movf	FRAME_DeviceReset@message+1,w,c
  1829  000B36  22DA               	addwfc	fsr2h,f,c
  1830  000B38  0E01               	movlw	1
  1831  000B3A  6EDF               	movwf	indf2,c
  1832                           
  1833                           ;FRAME.c: 281:         message->data[0] = 0xFF;
  1834  000B3C  EE20 F008          	lfsr	2,8
  1835  000B40  5006               	movf	FRAME_DeviceReset@message,w,c
  1836  000B42  26D9               	addwf	fsr2l,f,c
  1837  000B44  5007               	movf	FRAME_DeviceReset@message+1,w,c
  1838  000B46  22DA               	addwfc	fsr2h,f,c
  1839  000B48  0EFF               	movlw	255
  1840  000B4A  6EDF               	movwf	indf2,c
  1841                           
  1842                           ;FRAME.c: 282:     }
  1843  000B4C  0012               	return	
  1844  000B4E                     l2469:
  1845                           
  1846                           ;FRAME.c: 284:     {;FRAME.c: 285:         message->data_length = 1;
  1847  000B4E  EE20 F010          	lfsr	2,16
  1848  000B52  5006               	movf	FRAME_DeviceReset@message,w,c
  1849  000B54  26D9               	addwf	fsr2l,f,c
  1850  000B56  5007               	movf	FRAME_DeviceReset@message+1,w,c
  1851  000B58  22DA               	addwfc	fsr2h,f,c
  1852  000B5A  0E01               	movlw	1
  1853  000B5C  6EDF               	movwf	indf2,c
  1854                           
  1855                           ;FRAME.c: 307:         message->data[0] = 0xFF;
  1856  000B5E  EE20 F008          	lfsr	2,8
  1857  000B62  5006               	movf	FRAME_DeviceReset@message,w,c
  1858  000B64  26D9               	addwf	fsr2l,f,c
  1859  000B66  5007               	movf	FRAME_DeviceReset@message+1,w,c
  1860  000B68  22DA               	addwfc	fsr2h,f,c
  1861  000B6A  0EFF               	movlw	255
  1862  000B6C  6EDF               	movwf	indf2,c
  1863  000B6E  0012               	return		;funcret
  1864  000B70                     __end_of_FRAME_DeviceReset:
  1865                           	opt callstack 0
  1866                           
  1867 ;; *************** function _FRAME_AxisStatus *****************
  1868 ;; Defined at:
  1869 ;;		line 206 in file "FRAME.c"
  1870 ;; Parameters:    Size  Location     Type
  1871 ;;  message         2    5[COMRAM] PTR struct .
  1872 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1873 ;; Auto vars:     Size  Location     Type
  1874 ;;  i               2    0        unsigned short 
  1875 ;; Return value:  Size  Location     Type
  1876 ;;                  1    wreg      void 
  1877 ;; Registers used:
  1878 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1879 ;; Tracked objects:
  1880 ;;		On entry : 0/0
  1881 ;;		On exit  : 0/0
  1882 ;;		Unchanged: 0/0
  1883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1884 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1886 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1887 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1888 ;;Total ram usage:        3 bytes
  1889 ;; Hardware stack levels used:    1
  1890 ;; Hardware stack levels required when called:    3
  1891 ;; This function calls:
  1892 ;;		Nothing
  1893 ;; This function is called by:
  1894 ;;		_FRAME_HandleCanFrame
  1895 ;; This function uses a non-reentrant model
  1896 ;;
  1897                           
  1898                           	psect	text16
  1899  000DC6                     __ptext16:
  1900                           	opt callstack 0
  1901  000DC6                     _FRAME_AxisStatus:
  1902                           	opt callstack 25
  1903                           
  1904                           ;FRAME.c: 206: static void FRAME_AxisStatus(mID *message);FRAME.c: 207: {;FRAME.c: 208: 
      +                              WORD i;;FRAME.c: 210:     if(message->message_type == 0x02)
  1905                           
  1906                           ;incstack = 0
  1907  000DC6  EE20 F001          	lfsr	2,1
  1908  000DCA  5006               	movf	FRAME_AxisStatus@message,w,c
  1909  000DCC  26D9               	addwf	fsr2l,f,c
  1910  000DCE  5007               	movf	FRAME_AxisStatus@message+1,w,c
  1911  000DD0  22DA               	addwfc	fsr2h,f,c
  1912  000DD2  0E02               	movlw	2
  1913  000DD4  18DE               	xorwf	postinc2,w,c
  1914  000DD6  A4D8               	btfss	status,2,c
  1915  000DD8  0012               	return	
  1916                           
  1917                           ;FRAME.c: 211:     {;FRAME.c: 212:         message->data_length = 1;
  1918  000DDA  EE20 F010          	lfsr	2,16
  1919  000DDE  5006               	movf	FRAME_AxisStatus@message,w,c
  1920  000DE0  26D9               	addwf	fsr2l,f,c
  1921  000DE2  5007               	movf	FRAME_AxisStatus@message+1,w,c
  1922  000DE4  22DA               	addwfc	fsr2h,f,c
  1923  000DE6  0E01               	movlw	1
  1924  000DE8  6EDF               	movwf	indf2,c
  1925                           
  1926                           ;FRAME.c: 223:         message->data[0] = 0xFF;
  1927  000DEA  EE20 F008          	lfsr	2,8
  1928  000DEE  5006               	movf	FRAME_AxisStatus@message,w,c
  1929  000DF0  26D9               	addwf	fsr2l,f,c
  1930  000DF2  5007               	movf	FRAME_AxisStatus@message+1,w,c
  1931  000DF4  22DA               	addwfc	fsr2h,f,c
  1932  000DF6  0EFF               	movlw	255
  1933  000DF8  6EDF               	movwf	indf2,c
  1934                           
  1935                           ;FRAME.c: 224:     }
  1936  000DFA  0012               	return		;funcret
  1937  000DFC                     __end_of_FRAME_AxisStatus:
  1938                           	opt callstack 0
  1939                           
  1940 ;; *************** function _FRAME_AveragingTimes *****************
  1941 ;; Defined at:
  1942 ;;		line 147 in file "FRAME.c"
  1943 ;; Parameters:    Size  Location     Type
  1944 ;;  message         2    5[COMRAM] PTR struct .
  1945 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1946 ;; Auto vars:     Size  Location     Type
  1947 ;;		None
  1948 ;; Return value:  Size  Location     Type
  1949 ;;                  1    wreg      void 
  1950 ;; Registers used:
  1951 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1952 ;; Tracked objects:
  1953 ;;		On entry : 0/0
  1954 ;;		On exit  : 0/0
  1955 ;;		Unchanged: 0/0
  1956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1957 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1959 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1960 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1961 ;;Total ram usage:        3 bytes
  1962 ;; Hardware stack levels used:    1
  1963 ;; Hardware stack levels required when called:    3
  1964 ;; This function calls:
  1965 ;;		Nothing
  1966 ;; This function is called by:
  1967 ;;		_FRAME_HandleCanFrame
  1968 ;; This function uses a non-reentrant model
  1969 ;;
  1970                           
  1971                           	psect	text17
  1972  000DFC                     __ptext17:
  1973                           	opt callstack 0
  1974  000DFC                     _FRAME_AveragingTimes:
  1975                           	opt callstack 25
  1976                           
  1977                           ;FRAME.c: 147: static void FRAME_AveragingTimes(mID *message);FRAME.c: 148: {;FRAME.c: 1
      +                          49:     if(message->message_type == 0x02)
  1978                           
  1979                           ;incstack = 0
  1980  000DFC  EE20 F001          	lfsr	2,1
  1981  000E00  5006               	movf	FRAME_AveragingTimes@message,w,c
  1982  000E02  26D9               	addwf	fsr2l,f,c
  1983  000E04  5007               	movf	FRAME_AveragingTimes@message+1,w,c
  1984  000E06  22DA               	addwfc	fsr2h,f,c
  1985  000E08  0E02               	movlw	2
  1986  000E0A  18DE               	xorwf	postinc2,w,c
  1987  000E0C  A4D8               	btfss	status,2,c
  1988  000E0E  0012               	return	
  1989                           
  1990                           ;FRAME.c: 150:     {;FRAME.c: 151:         message->data_length = 1;
  1991  000E10  EE20 F010          	lfsr	2,16
  1992  000E14  5006               	movf	FRAME_AveragingTimes@message,w,c
  1993  000E16  26D9               	addwf	fsr2l,f,c
  1994  000E18  5007               	movf	FRAME_AveragingTimes@message+1,w,c
  1995  000E1A  22DA               	addwfc	fsr2h,f,c
  1996  000E1C  0E01               	movlw	1
  1997  000E1E  6EDF               	movwf	indf2,c
  1998                           
  1999                           ;FRAME.c: 159:         message->data[0] = 0xFF;
  2000  000E20  EE20 F008          	lfsr	2,8
  2001  000E24  5006               	movf	FRAME_AveragingTimes@message,w,c
  2002  000E26  26D9               	addwf	fsr2l,f,c
  2003  000E28  5007               	movf	FRAME_AveragingTimes@message+1,w,c
  2004  000E2A  22DA               	addwfc	fsr2h,f,c
  2005  000E2C  0EFF               	movlw	255
  2006  000E2E  6EDF               	movwf	indf2,c
  2007                           
  2008                           ;FRAME.c: 160:     }
  2009  000E30  0012               	return		;funcret
  2010  000E32                     __end_of_FRAME_AveragingTimes:
  2011                           	opt callstack 0
  2012                           
  2013 ;; *************** function _FRAME_AnalogValue *****************
  2014 ;; Defined at:
  2015 ;;		line 387 in file "FRAME.c"
  2016 ;; Parameters:    Size  Location     Type
  2017 ;;  message         2    5[COMRAM] PTR struct .
  2018 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2019 ;;  set             2    7[COMRAM] unsigned short 
  2020 ;; Auto vars:     Size  Location     Type
  2021 ;;  i               2    0        unsigned short 
  2022 ;; Return value:  Size  Location     Type
  2023 ;;                  1    wreg      void 
  2024 ;; Registers used:
  2025 ;;		None
  2026 ;; Tracked objects:
  2027 ;;		On entry : 0/0
  2028 ;;		On exit  : 0/0
  2029 ;;		Unchanged: 0/0
  2030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2031 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2034 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2035 ;;Total ram usage:        4 bytes
  2036 ;; Hardware stack levels used:    1
  2037 ;; Hardware stack levels required when called:    3
  2038 ;; This function calls:
  2039 ;;		Nothing
  2040 ;; This function is called by:
  2041 ;;		_FRAME_HandleCanFrame
  2042 ;; This function uses a non-reentrant model
  2043 ;;
  2044                           
  2045                           	psect	text18
  2046  001036                     __ptext18:
  2047                           	opt callstack 0
  2048  001036                     _FRAME_AnalogValue:
  2049                           	opt callstack 25
  2050                           
  2051                           ;incstack = 0
  2052  001036  0012               	return		;funcret
  2053  001038                     __end_of_FRAME_AnalogValue:
  2054                           	opt callstack 0
  2055                           
  2056 ;; *************** function _FRAME_AdressOfNeighbors *****************
  2057 ;; Defined at:
  2058 ;;		line 430 in file "FRAME.c"
  2059 ;; Parameters:    Size  Location     Type
  2060 ;;  message         2    5[COMRAM] PTR struct .
  2061 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2062 ;;  nrRamki         2    7[COMRAM] unsigned short 
  2063 ;; Auto vars:     Size  Location     Type
  2064 ;;  i               2    0        unsigned short 
  2065 ;; Return value:  Size  Location     Type
  2066 ;;                  1    wreg      void 
  2067 ;; Registers used:
  2068 ;;		None
  2069 ;; Tracked objects:
  2070 ;;		On entry : 0/0
  2071 ;;		On exit  : 0/0
  2072 ;;		Unchanged: 0/0
  2073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2074 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2077 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2078 ;;Total ram usage:        4 bytes
  2079 ;; Hardware stack levels used:    1
  2080 ;; Hardware stack levels required when called:    3
  2081 ;; This function calls:
  2082 ;;		Nothing
  2083 ;; This function is called by:
  2084 ;;		_FRAME_HandleCanFrame
  2085 ;; This function uses a non-reentrant model
  2086 ;;
  2087                           
  2088                           	psect	text19
  2089  001038                     __ptext19:
  2090                           	opt callstack 0
  2091  001038                     _FRAME_AdressOfNeighbors:
  2092                           	opt callstack 25
  2093                           
  2094                           ;incstack = 0
  2095  001038  0012               	return		;funcret
  2096  00103A                     __end_of_FRAME_AdressOfNeighbors:
  2097                           	opt callstack 0
  2098                           
  2099 ;; *************** function _FRAME_AccelerometerStatus *****************
  2100 ;; Defined at:
  2101 ;;		line 70 in file "FRAME.c"
  2102 ;; Parameters:    Size  Location     Type
  2103 ;;  message         2    7[COMRAM] PTR struct .
  2104 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2105 ;; Auto vars:     Size  Location     Type
  2106 ;;		None
  2107 ;; Return value:  Size  Location     Type
  2108 ;;                  1    wreg      void 
  2109 ;; Registers used:
  2110 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2111 ;; Tracked objects:
  2112 ;;		On entry : 0/0
  2113 ;;		On exit  : 0/0
  2114 ;;		Unchanged: 0/0
  2115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2116 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2118 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2119 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2120 ;;Total ram usage:        3 bytes
  2121 ;; Hardware stack levels used:    1
  2122 ;; Hardware stack levels required when called:    4
  2123 ;; This function calls:
  2124 ;;		_MOCK_Klikniecie_Spadek
  2125 ;;		_MOCK_PrzyspieszenieX
  2126 ;;		_MOCK_PrzyspieszenieY
  2127 ;;		_MOCK_PrzyspieszenieZ
  2128 ;; This function is called by:
  2129 ;;		_FRAME_HandleCanFrame
  2130 ;; This function uses a non-reentrant model
  2131 ;;
  2132                           
  2133                           	psect	text20
  2134  0009DC                     __ptext20:
  2135                           	opt callstack 0
  2136  0009DC                     _FRAME_AccelerometerStatus:
  2137                           	opt callstack 24
  2138                           
  2139                           ;FRAME.c: 70: static void FRAME_AccelerometerStatus(mID *message);FRAME.c: 71: {;FRAME.c
      +                          : 72:     if(message->message_type == 0x02)
  2140                           
  2141                           ;incstack = 0
  2142  0009DC  EE20 F001          	lfsr	2,1
  2143  0009E0  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  2144  0009E2  26D9               	addwf	fsr2l,f,c
  2145  0009E4  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  2146  0009E6  22DA               	addwfc	fsr2h,f,c
  2147  0009E8  0E02               	movlw	2
  2148  0009EA  18DE               	xorwf	postinc2,w,c
  2149  0009EC  A4D8               	btfss	status,2,c
  2150  0009EE  0012               	return	
  2151                           
  2152                           ;FRAME.c: 73:     {;FRAME.c: 74:         message->data_length = 4;
  2153  0009F0  EE20 F010          	lfsr	2,16
  2154  0009F4  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  2155  0009F6  26D9               	addwf	fsr2l,f,c
  2156  0009F8  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  2157  0009FA  22DA               	addwfc	fsr2h,f,c
  2158  0009FC  0E04               	movlw	4
  2159  0009FE  6EDF               	movwf	indf2,c
  2160                           
  2161                           ;FRAME.c: 78:         message->data[0] = MOCK_PrzyspieszenieX();
  2162  000A00  EE20 F008          	lfsr	2,8
  2163  000A04  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  2164  000A06  26D9               	addwf	fsr2l,f,c
  2165  000A08  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  2166  000A0A  22DA               	addwfc	fsr2h,f,c
  2167  000A0C  ECF4  F007         	call	_MOCK_PrzyspieszenieX	;wreg free
  2168  000A10  5006               	movf	?_MOCK_PrzyspieszenieX,w,c
  2169  000A12  6EDF               	movwf	indf2,c
  2170                           
  2171                           ;FRAME.c: 79:         message->data[1] = MOCK_PrzyspieszenieY();
  2172  000A14  EE20 F009          	lfsr	2,9
  2173  000A18  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  2174  000A1A  26D9               	addwf	fsr2l,f,c
  2175  000A1C  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  2176  000A1E  22DA               	addwfc	fsr2h,f,c
  2177  000A20  ECEF  F007         	call	_MOCK_PrzyspieszenieY	;wreg free
  2178  000A24  5006               	movf	?_MOCK_PrzyspieszenieY,w,c
  2179  000A26  6EDF               	movwf	indf2,c
  2180                           
  2181                           ;FRAME.c: 80:         message->data[2] = MOCK_PrzyspieszenieZ();
  2182  000A28  EE20 F00A          	lfsr	2,10
  2183  000A2C  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  2184  000A2E  26D9               	addwf	fsr2l,f,c
  2185  000A30  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  2186  000A32  22DA               	addwfc	fsr2h,f,c
  2187  000A34  ECEA  F007         	call	_MOCK_PrzyspieszenieZ	;wreg free
  2188  000A38  5006               	movf	?_MOCK_PrzyspieszenieZ,w,c
  2189  000A3A  6EDF               	movwf	indf2,c
  2190                           
  2191                           ;FRAME.c: 81:         message->data[3] = MOCK_Klikniecie_Spadek();
  2192  000A3C  EE20 F00B          	lfsr	2,11
  2193  000A40  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  2194  000A42  26D9               	addwf	fsr2l,f,c
  2195  000A44  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  2196  000A46  22DA               	addwfc	fsr2h,f,c
  2197  000A48  ECF9  F007         	call	_MOCK_Klikniecie_Spadek	;wreg free
  2198  000A4C  5006               	movf	?_MOCK_Klikniecie_Spadek,w,c
  2199  000A4E  6EDF               	movwf	indf2,c
  2200                           
  2201                           ;FRAME.c: 82:     }
  2202  000A50  0012               	return		;funcret
  2203  000A52                     __end_of_FRAME_AccelerometerStatus:
  2204                           	opt callstack 0
  2205                           
  2206 ;; *************** function _MOCK_PrzyspieszenieZ *****************
  2207 ;; Defined at:
  2208 ;;		line 72 in file "MOC_Funct.c"
  2209 ;; Parameters:    Size  Location     Type
  2210 ;;		None
  2211 ;; Auto vars:     Size  Location     Type
  2212 ;;		None
  2213 ;; Return value:  Size  Location     Type
  2214 ;;                  2    5[COMRAM] unsigned int 
  2215 ;; Registers used:
  2216 ;;		wreg, status,2
  2217 ;; Tracked objects:
  2218 ;;		On entry : 0/0
  2219 ;;		On exit  : 0/0
  2220 ;;		Unchanged: 0/0
  2221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2222 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2225 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2226 ;;Total ram usage:        2 bytes
  2227 ;; Hardware stack levels used:    1
  2228 ;; Hardware stack levels required when called:    3
  2229 ;; This function calls:
  2230 ;;		Nothing
  2231 ;; This function is called by:
  2232 ;;		_FRAME_AccelerometerStatus
  2233 ;; This function uses a non-reentrant model
  2234 ;;
  2235                           
  2236                           	psect	text21
  2237  000FD4                     __ptext21:
  2238                           	opt callstack 0
  2239  000FD4                     _MOCK_PrzyspieszenieZ:
  2240                           	opt callstack 24
  2241                           
  2242                           ;MOC_Funct.c: 74:     return 0xFE;
  2243                           
  2244                           ;incstack = 0
  2245  000FD4  0E00               	movlw	0
  2246  000FD6  6E07               	movwf	?_MOCK_PrzyspieszenieZ+1,c
  2247  000FD8  0EFE               	movlw	254
  2248  000FDA  6E06               	movwf	?_MOCK_PrzyspieszenieZ,c
  2249  000FDC  0012               	return		;funcret
  2250  000FDE                     __end_of_MOCK_PrzyspieszenieZ:
  2251                           	opt callstack 0
  2252                           
  2253 ;; *************** function _MOCK_PrzyspieszenieY *****************
  2254 ;; Defined at:
  2255 ;;		line 68 in file "MOC_Funct.c"
  2256 ;; Parameters:    Size  Location     Type
  2257 ;;		None
  2258 ;; Auto vars:     Size  Location     Type
  2259 ;;		None
  2260 ;; Return value:  Size  Location     Type
  2261 ;;                  2    5[COMRAM] unsigned int 
  2262 ;; Registers used:
  2263 ;;		wreg, status,2
  2264 ;; Tracked objects:
  2265 ;;		On entry : 0/0
  2266 ;;		On exit  : 0/0
  2267 ;;		Unchanged: 0/0
  2268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2269 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2272 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2273 ;;Total ram usage:        2 bytes
  2274 ;; Hardware stack levels used:    1
  2275 ;; Hardware stack levels required when called:    3
  2276 ;; This function calls:
  2277 ;;		Nothing
  2278 ;; This function is called by:
  2279 ;;		_FRAME_AccelerometerStatus
  2280 ;; This function uses a non-reentrant model
  2281 ;;
  2282                           
  2283                           	psect	text22
  2284  000FDE                     __ptext22:
  2285                           	opt callstack 0
  2286  000FDE                     _MOCK_PrzyspieszenieY:
  2287                           	opt callstack 24
  2288                           
  2289                           ;MOC_Funct.c: 70:     return 0xFE;
  2290                           
  2291                           ;incstack = 0
  2292  000FDE  0E00               	movlw	0
  2293  000FE0  6E07               	movwf	?_MOCK_PrzyspieszenieY+1,c
  2294  000FE2  0EFE               	movlw	254
  2295  000FE4  6E06               	movwf	?_MOCK_PrzyspieszenieY,c
  2296  000FE6  0012               	return		;funcret
  2297  000FE8                     __end_of_MOCK_PrzyspieszenieY:
  2298                           	opt callstack 0
  2299                           
  2300 ;; *************** function _MOCK_PrzyspieszenieX *****************
  2301 ;; Defined at:
  2302 ;;		line 63 in file "MOC_Funct.c"
  2303 ;; Parameters:    Size  Location     Type
  2304 ;;		None
  2305 ;; Auto vars:     Size  Location     Type
  2306 ;;		None
  2307 ;; Return value:  Size  Location     Type
  2308 ;;                  2    5[COMRAM] unsigned int 
  2309 ;; Registers used:
  2310 ;;		wreg, status,2
  2311 ;; Tracked objects:
  2312 ;;		On entry : 0/0
  2313 ;;		On exit  : 0/0
  2314 ;;		Unchanged: 0/0
  2315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2316 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2319 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2320 ;;Total ram usage:        2 bytes
  2321 ;; Hardware stack levels used:    1
  2322 ;; Hardware stack levels required when called:    3
  2323 ;; This function calls:
  2324 ;;		Nothing
  2325 ;; This function is called by:
  2326 ;;		_FRAME_AccelerometerStatus
  2327 ;; This function uses a non-reentrant model
  2328 ;;
  2329                           
  2330                           	psect	text23
  2331  000FE8                     __ptext23:
  2332                           	opt callstack 0
  2333  000FE8                     _MOCK_PrzyspieszenieX:
  2334                           	opt callstack 24
  2335                           
  2336                           ;MOC_Funct.c: 65:     return 0xFE;
  2337                           
  2338                           ;incstack = 0
  2339  000FE8  0E00               	movlw	0
  2340  000FEA  6E07               	movwf	?_MOCK_PrzyspieszenieX+1,c
  2341  000FEC  0EFE               	movlw	254
  2342  000FEE  6E06               	movwf	?_MOCK_PrzyspieszenieX,c
  2343  000FF0  0012               	return		;funcret
  2344  000FF2                     __end_of_MOCK_PrzyspieszenieX:
  2345                           	opt callstack 0
  2346                           
  2347 ;; *************** function _MOCK_Klikniecie_Spadek *****************
  2348 ;; Defined at:
  2349 ;;		line 76 in file "MOC_Funct.c"
  2350 ;; Parameters:    Size  Location     Type
  2351 ;;		None
  2352 ;; Auto vars:     Size  Location     Type
  2353 ;;		None
  2354 ;; Return value:  Size  Location     Type
  2355 ;;                  2    5[COMRAM] unsigned int 
  2356 ;; Registers used:
  2357 ;;		wreg, status,2
  2358 ;; Tracked objects:
  2359 ;;		On entry : 0/0
  2360 ;;		On exit  : 0/0
  2361 ;;		Unchanged: 0/0
  2362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2363 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2366 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2367 ;;Total ram usage:        2 bytes
  2368 ;; Hardware stack levels used:    1
  2369 ;; Hardware stack levels required when called:    3
  2370 ;; This function calls:
  2371 ;;		Nothing
  2372 ;; This function is called by:
  2373 ;;		_FRAME_AccelerometerStatus
  2374 ;; This function uses a non-reentrant model
  2375 ;;
  2376                           
  2377                           	psect	text24
  2378  000FF2                     __ptext24:
  2379                           	opt callstack 0
  2380  000FF2                     _MOCK_Klikniecie_Spadek:
  2381                           	opt callstack 24
  2382                           
  2383                           ;MOC_Funct.c: 78:     return 0b00000000;
  2384                           
  2385                           ;incstack = 0
  2386  000FF2  0E00               	movlw	0
  2387  000FF4  6E07               	movwf	?_MOCK_Klikniecie_Spadek+1,c
  2388  000FF6  0E00               	movlw	0
  2389  000FF8  6E06               	movwf	?_MOCK_Klikniecie_Spadek,c
  2390  000FFA  0012               	return		;funcret
  2391  000FFC                     __end_of_MOCK_Klikniecie_Spadek:
  2392                           	opt callstack 0
  2393                           
  2394 ;; *************** function _CAN_SendFrame *****************
  2395 ;; Defined at:
  2396 ;;		line 183 in file "CAN.c"
  2397 ;; Parameters:    Size  Location     Type
  2398 ;;  message         2   10[COMRAM] PTR struct .
  2399 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2400 ;; Auto vars:     Size  Location     Type
  2401 ;;		None
  2402 ;; Return value:  Size  Location     Type
  2403 ;;                  1    wreg      void 
  2404 ;; Registers used:
  2405 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2406 ;; Tracked objects:
  2407 ;;		On entry : 0/0
  2408 ;;		On exit  : 0/0
  2409 ;;		Unchanged: 0/0
  2410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2411 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2413 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2414 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2415 ;;Total ram usage:        5 bytes
  2416 ;; Hardware stack levels used:    1
  2417 ;; Hardware stack levels required when called:    4
  2418 ;; This function calls:
  2419 ;;		_CAN_MoveBuffIntoFrame
  2420 ;; This function is called by:
  2421 ;;		_FRAME_HandleCanFrame
  2422 ;; This function uses a non-reentrant model
  2423 ;;
  2424                           
  2425                           	psect	text25
  2426  0004B0                     __ptext25:
  2427                           	opt callstack 0
  2428  0004B0                     _CAN_SendFrame:
  2429                           	opt callstack 24
  2430                           
  2431                           ;CAN.c: 188:     {;CAN.c: 189:         ECANCON = 0x83;
  2432                           
  2433                           ;incstack = 0
  2434                           ;CAN.c: 183: void CAN_SendFrame(mID * message);CAN.c: 184: {;CAN.c: 187:     for(;;)
  2435  0004B0  0E83               	movlw	131
  2436  0004B2  6E77               	movwf	3959,c	;volatile
  2437                           
  2438                           ;CAN.c: 190:         if(!RXB0CONbits.FILHIT3)
  2439  0004B4  A660               	btfss	3936,3,c	;volatile
  2440  0004B6  D00A               	goto	l177
  2441                           
  2442                           ;CAN.c: 195:         ECANCON = 0x84;
  2443  0004B8  0E84               	movlw	132
  2444  0004BA  6E77               	movwf	3959,c	;volatile
  2445                           
  2446                           ;CAN.c: 196:         if(!RXB0CONbits.FILHIT3)
  2447  0004BC  A660               	btfss	3936,3,c	;volatile
  2448  0004BE  D006               	goto	l177
  2449                           
  2450                           ;CAN.c: 201:         ECANCON = 0x85;
  2451  0004C0  0E85               	movlw	133
  2452  0004C2  6E77               	movwf	3959,c	;volatile
  2453                           
  2454                           ;CAN.c: 202:         if(!RXB0CONbits.FILHIT3)
  2455  0004C4  A660               	btfss	3936,3,c	;volatile
  2456  0004C6  D002               	goto	l177
  2457  0004C8  D7F3               	goto	_CAN_SendFrame
  2458  0004CA                     l178:
  2459  0004CA  00FF               	reset		;# 
  2460  0004CC                     l177:
  2461                           
  2462                           ;CAN.c: 209:     while(COMSTATbits.TXWARN)
  2463  0004CC  B474               	btfsc	3956,2,c	;volatile
  2464  0004CE  D7FD               	goto	l178
  2465                           
  2466                           ;CAN.c: 213:     DetectorLedRadar.timerRamkiTxCANU8 = 0;
  2467  0004D0  0E00               	movlw	0
  2468  0004D2  6E3D               	movwf	_DetectorLedRadar+2,c
  2469                           
  2470                           ;CAN.c: 214:     RXB0EIDL = message->id.v[0];
  2471  0004D4  EE20 F004          	lfsr	2,4
  2472  0004D8  500B               	movf	CAN_SendFrame@message,w,c
  2473  0004DA  26D9               	addwf	fsr2l,f,c
  2474  0004DC  500C               	movf	CAN_SendFrame@message+1,w,c
  2475  0004DE  22DA               	addwfc	fsr2h,f,c
  2476  0004E0  50DF               	movf	indf2,w,c
  2477  0004E2  6E64               	movwf	3940,c	;volatile
  2478                           
  2479                           ;CAN.c: 215:     RXB0EIDH = message->id.v[1];
  2480  0004E4  EE20 F005          	lfsr	2,5
  2481  0004E8  500B               	movf	CAN_SendFrame@message,w,c
  2482  0004EA  26D9               	addwf	fsr2l,f,c
  2483  0004EC  500C               	movf	CAN_SendFrame@message+1,w,c
  2484  0004EE  22DA               	addwfc	fsr2h,f,c
  2485  0004F0  50DF               	movf	indf2,w,c
  2486  0004F2  6E63               	movwf	3939,c	;volatile
  2487                           
  2488                           ;CAN.c: 216:     RXB0SIDL = ((message->id.v[2]&0xFC)*8) | (message->id.v[2] & (0x03));
  2489  0004F4  EE20 F006          	lfsr	2,6
  2490  0004F8  500B               	movf	CAN_SendFrame@message,w,c
  2491  0004FA  26D9               	addwf	fsr2l,f,c
  2492  0004FC  500C               	movf	CAN_SendFrame@message+1,w,c
  2493  0004FE  22DA               	addwfc	fsr2h,f,c
  2494  000500  50DF               	movf	indf2,w,c
  2495  000502  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  2496  000504  0E03               	movlw	3
  2497  000506  160D               	andwf	??_CAN_SendFrame,f,c
  2498  000508  EE20 F006          	lfsr	2,6
  2499  00050C  500B               	movf	CAN_SendFrame@message,w,c
  2500  00050E  26D9               	addwf	fsr2l,f,c
  2501  000510  500C               	movf	CAN_SendFrame@message+1,w,c
  2502  000512  22DA               	addwfc	fsr2h,f,c
  2503  000514  50DF               	movf	indf2,w,c
  2504  000516  0BFC               	andlw	252
  2505  000518  0D08               	mullw	8
  2506  00051A  50F3               	movf	prodl,w,c
  2507  00051C  100D               	iorwf	??_CAN_SendFrame,w,c
  2508  00051E  6E62               	movwf	3938,c	;volatile
  2509                           
  2510                           ;CAN.c: 217:     RXB0SIDLbits.EXID = 1;
  2511  000520  8662               	bsf	3938,3,c	;volatile
  2512                           
  2513                           ;CAN.c: 218:     RXB0SIDH = (BYTE)(message->id.w[1]/32);
  2514  000522  EE20 F006          	lfsr	2,6
  2515  000526  500B               	movf	CAN_SendFrame@message,w,c
  2516  000528  26D9               	addwf	fsr2l,f,c
  2517  00052A  500C               	movf	CAN_SendFrame@message+1,w,c
  2518  00052C  22DA               	addwfc	fsr2h,f,c
  2519  00052E  CFDE F00D          	movff	postinc2,??_CAN_SendFrame
  2520  000532  CFDD F00E          	movff	postdec2,??_CAN_SendFrame+1
  2521  000536  0E05               	movlw	5
  2522  000538  6E0F               	movwf	(??_CAN_SendFrame+2)& (0+255),c
  2523  00053A                     u965:
  2524  00053A  90D8               	bcf	status,0,c
  2525  00053C  320E               	rrcf	??_CAN_SendFrame+1,f,c
  2526  00053E  320D               	rrcf	??_CAN_SendFrame,f,c
  2527  000540  2E0F               	decfsz	(??_CAN_SendFrame+2)& (0+255),f,c
  2528  000542  D7FB               	goto	u965
  2529  000544  500D               	movf	??_CAN_SendFrame,w,c
  2530  000546  6E61               	movwf	3937,c	;volatile
  2531                           
  2532                           ;CAN.c: 220:     RXB0DLC = 0;
  2533  000548  0E00               	movlw	0
  2534  00054A  6E65               	movwf	3941,c	;volatile
  2535                           
  2536                           ;CAN.c: 222:     if(message->message_type==0x02)
  2537  00054C  EE20 F001          	lfsr	2,1
  2538  000550  500B               	movf	CAN_SendFrame@message,w,c
  2539  000552  26D9               	addwf	fsr2l,f,c
  2540  000554  500C               	movf	CAN_SendFrame@message+1,w,c
  2541  000556  22DA               	addwfc	fsr2h,f,c
  2542  000558  0E02               	movlw	2
  2543  00055A  18DE               	xorwf	postinc2,w,c
  2544  00055C  A4D8               	btfss	status,2,c
  2545  00055E  D002               	goto	l2363
  2546                           
  2547                           ;CAN.c: 223:     {;CAN.c: 224:         RXB0DLCbits.RXRTR = 1;
  2548  000560  8C65               	bsf	3941,6,c	;volatile
  2549                           
  2550                           ;CAN.c: 225:     }
  2551  000562  D05A               	goto	l2367
  2552  000564                     l2363:
  2553                           
  2554                           ;CAN.c: 227:     {;CAN.c: 228:         RXB0DLCbits.DLC0 = (message->data_length & 0x0F);
  2555  000564  EE20 F010          	lfsr	2,16
  2556  000568  500B               	movf	CAN_SendFrame@message,w,c
  2557  00056A  26D9               	addwf	fsr2l,f,c
  2558  00056C  500C               	movf	CAN_SendFrame@message+1,w,c
  2559  00056E  22DA               	addwfc	fsr2h,f,c
  2560  000570  50DF               	movf	indf2,w,c
  2561  000572  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  2562  000574  0E0F               	movlw	15
  2563  000576  160D               	andwf	??_CAN_SendFrame,f,c
  2564  000578  5065               	movf	3941,w,c	;volatile
  2565  00057A  180D               	xorwf	??_CAN_SendFrame,w,c
  2566  00057C  0BFE               	andlw	-2
  2567  00057E  180D               	xorwf	??_CAN_SendFrame,w,c
  2568  000580  6E65               	movwf	3941,c	;volatile
  2569                           
  2570                           ;CAN.c: 229:         RXB0DLCbits.DLC1 = ((message->data_length & 0x0F)>> 1);
  2571  000582  EE20 F010          	lfsr	2,16
  2572  000586  500B               	movf	CAN_SendFrame@message,w,c
  2573  000588  26D9               	addwf	fsr2l,f,c
  2574  00058A  500C               	movf	CAN_SendFrame@message+1,w,c
  2575  00058C  22DA               	addwfc	fsr2h,f,c
  2576  00058E  50DF               	movf	indf2,w,c
  2577  000590  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  2578  000592  90D8               	bcf	status,0,c
  2579  000594  320D               	rrcf	??_CAN_SendFrame,f,c
  2580  000596  0E07               	movlw	7
  2581  000598  160D               	andwf	??_CAN_SendFrame,f,c
  2582  00059A  460D               	rlncf	??_CAN_SendFrame,f,c
  2583  00059C  5065               	movf	3941,w,c	;volatile
  2584  00059E  180D               	xorwf	??_CAN_SendFrame,w,c
  2585  0005A0  0BFD               	andlw	-3
  2586  0005A2  180D               	xorwf	??_CAN_SendFrame,w,c
  2587  0005A4  6E65               	movwf	3941,c	;volatile
  2588                           
  2589                           ;CAN.c: 230:         RXB0DLCbits.DLC2 = ((message->data_length & 0x0F)>> 2);
  2590  0005A6  EE20 F010          	lfsr	2,16
  2591  0005AA  500B               	movf	CAN_SendFrame@message,w,c
  2592  0005AC  26D9               	addwf	fsr2l,f,c
  2593  0005AE  500C               	movf	CAN_SendFrame@message+1,w,c
  2594  0005B0  22DA               	addwfc	fsr2h,f,c
  2595  0005B2  50DF               	movf	indf2,w,c
  2596  0005B4  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  2597  0005B6  90D8               	bcf	status,0,c
  2598  0005B8  320D               	rrcf	??_CAN_SendFrame,f,c
  2599  0005BA  90D8               	bcf	status,0,c
  2600  0005BC  320D               	rrcf	??_CAN_SendFrame,f,c
  2601  0005BE  0E03               	movlw	3
  2602  0005C0  160D               	andwf	??_CAN_SendFrame,f,c
  2603  0005C2  460D               	rlncf	??_CAN_SendFrame,f,c
  2604  0005C4  460D               	rlncf	??_CAN_SendFrame,f,c
  2605  0005C6  5065               	movf	3941,w,c	;volatile
  2606  0005C8  180D               	xorwf	??_CAN_SendFrame,w,c
  2607  0005CA  0BFB               	andlw	-5
  2608  0005CC  180D               	xorwf	??_CAN_SendFrame,w,c
  2609  0005CE  6E65               	movwf	3941,c	;volatile
  2610                           
  2611                           ;CAN.c: 231:         RXB0DLCbits.DLC3 = ((message->data_length & 0x0F)>> 3);
  2612  0005D0  EE20 F010          	lfsr	2,16
  2613  0005D4  500B               	movf	CAN_SendFrame@message,w,c
  2614  0005D6  26D9               	addwf	fsr2l,f,c
  2615  0005D8  500C               	movf	CAN_SendFrame@message+1,w,c
  2616  0005DA  22DA               	addwfc	fsr2h,f,c
  2617  0005DC  50DF               	movf	indf2,w,c
  2618  0005DE  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  2619  0005E0  90D8               	bcf	status,0,c
  2620  0005E2  320D               	rrcf	??_CAN_SendFrame,f,c
  2621  0005E4  90D8               	bcf	status,0,c
  2622  0005E6  320D               	rrcf	??_CAN_SendFrame,f,c
  2623  0005E8  90D8               	bcf	status,0,c
  2624  0005EA  320D               	rrcf	??_CAN_SendFrame,f,c
  2625  0005EC  0E01               	movlw	1
  2626  0005EE  160D               	andwf	??_CAN_SendFrame,f,c
  2627  0005F0  460D               	rlncf	??_CAN_SendFrame,f,c
  2628  0005F2  460D               	rlncf	??_CAN_SendFrame,f,c
  2629  0005F4  460D               	rlncf	??_CAN_SendFrame,f,c
  2630  0005F6  5065               	movf	3941,w,c	;volatile
  2631  0005F8  180D               	xorwf	??_CAN_SendFrame,w,c
  2632  0005FA  0BF7               	andlw	-9
  2633  0005FC  180D               	xorwf	??_CAN_SendFrame,w,c
  2634  0005FE  6E65               	movwf	3941,c	;volatile
  2635                           
  2636                           ;CAN.c: 233:         CAN_MoveBuffIntoFrame(&RXB0D0, message->data);
  2637  000600  0E66               	movlw	102
  2638  000602  6E06               	movwf	CAN_MoveBuffIntoFrame@Ram,c
  2639  000604  0E0F               	movlw	15
  2640  000606  6E07               	movwf	CAN_MoveBuffIntoFrame@Ram+1,c
  2641  000608  0E08               	movlw	8
  2642  00060A  240B               	addwf	CAN_SendFrame@message,w,c
  2643  00060C  6E08               	movwf	CAN_MoveBuffIntoFrame@Buf,c
  2644  00060E  0E00               	movlw	0
  2645  000610  200C               	addwfc	CAN_SendFrame@message+1,w,c
  2646  000612  6E09               	movwf	CAN_MoveBuffIntoFrame@Buf+1,c
  2647  000614  EC4A  F007         	call	_CAN_MoveBuffIntoFrame	;wreg free
  2648  000618                     l2367:
  2649                           
  2650                           ;CAN.c: 236:     RXB0CONbits.FILHIT3 = 1;
  2651  000618  8660               	bsf	3936,3,c	;volatile
  2652                           
  2653                           ;CAN.c: 238:     DetectorLedRadar.Flags.ramkaTx = 1;
  2654  00061A  883B               	bsf	_DetectorLedRadar,4,c
  2655  00061C  0012               	return		;funcret
  2656  00061E                     __end_of_CAN_SendFrame:
  2657                           	opt callstack 0
  2658                           
  2659 ;; *************** function _CAN_GenID *****************
  2660 ;; Defined at:
  2661 ;;		line 382 in file "CAN.c"
  2662 ;; Parameters:    Size  Location     Type
  2663 ;;  message         2    5[COMRAM] PTR struct .
  2664 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2665 ;;  frameID         1    7[COMRAM] unsigned char 
  2666 ;; Auto vars:     Size  Location     Type
  2667 ;;		None
  2668 ;; Return value:  Size  Location     Type
  2669 ;;                  1    wreg      void 
  2670 ;; Registers used:
  2671 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2672 ;; Tracked objects:
  2673 ;;		On entry : 0/0
  2674 ;;		On exit  : 0/0
  2675 ;;		Unchanged: 0/0
  2676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2677 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2679 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2680 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2681 ;;Total ram usage:        7 bytes
  2682 ;; Hardware stack levels used:    1
  2683 ;; Hardware stack levels required when called:    3
  2684 ;; This function calls:
  2685 ;;		Nothing
  2686 ;; This function is called by:
  2687 ;;		_FRAME_HandleCanFrame
  2688 ;; This function uses a non-reentrant model
  2689 ;;
  2690                           
  2691                           	psect	text26
  2692  0008C4                     __ptext26:
  2693                           	opt callstack 0
  2694  0008C4                     _CAN_GenID:
  2695                           	opt callstack 25
  2696                           
  2697                           ;CAN.c: 382: void CAN_GenID(mID * message, BYTE frameID);CAN.c: 383: {;CAN.c: 385:     m
      +                          essage->frame_type = 0x03;
  2698                           
  2699                           ;incstack = 0
  2700  0008C4  EE20 F002          	lfsr	2,2
  2701  0008C8  5006               	movf	CAN_GenID@message,w,c
  2702  0008CA  26D9               	addwf	fsr2l,f,c
  2703  0008CC  5007               	movf	CAN_GenID@message+1,w,c
  2704  0008CE  22DA               	addwfc	fsr2h,f,c
  2705  0008D0  0E03               	movlw	3
  2706  0008D2  6EDF               	movwf	indf2,c
  2707                           
  2708                           ;CAN.c: 386:     message->message_type = 0x01;
  2709  0008D4  EE20 F001          	lfsr	2,1
  2710  0008D8  5006               	movf	CAN_GenID@message,w,c
  2711  0008DA  26D9               	addwf	fsr2l,f,c
  2712  0008DC  5007               	movf	CAN_GenID@message+1,w,c
  2713  0008DE  22DA               	addwfc	fsr2h,f,c
  2714  0008E0  0E01               	movlw	1
  2715  0008E2  6EDF               	movwf	indf2,c
  2716                           
  2717                           ;CAN.c: 387:     message->id.w[1] = (WORD)frameID * (WORD)4;
  2718  0008E4  5008               	movf	CAN_GenID@frameID,w,c
  2719  0008E6  6E09               	movwf	??_CAN_GenID& (0+255),c
  2720  0008E8  6A0A               	clrf	(??_CAN_GenID+1)& (0+255),c
  2721  0008EA  90D8               	bcf	status,0,c
  2722  0008EC  3609               	rlcf	??_CAN_GenID,f,c
  2723  0008EE  360A               	rlcf	??_CAN_GenID+1,f,c
  2724  0008F0  90D8               	bcf	status,0,c
  2725  0008F2  3609               	rlcf	??_CAN_GenID,f,c
  2726  0008F4  360A               	rlcf	??_CAN_GenID+1,f,c
  2727  0008F6  EE20 F006          	lfsr	2,6
  2728  0008FA  5006               	movf	CAN_GenID@message,w,c
  2729  0008FC  26D9               	addwf	fsr2l,f,c
  2730  0008FE  5007               	movf	CAN_GenID@message+1,w,c
  2731  000900  22DA               	addwfc	fsr2h,f,c
  2732  000902  C009  FFDE         	movff	??_CAN_GenID,postinc2
  2733  000906  C00A  FFDD         	movff	??_CAN_GenID+1,postdec2
  2734                           
  2735                           ;CAN.c: 388:     message->id.w[0] = DaneCan.adresCAN + 0x4001;
  2736  00090A  0E01               	movlw	1
  2737  00090C  6E09               	movwf	??_CAN_GenID& (0+255),c
  2738  00090E  0E40               	movlw	64
  2739  000910  6E0A               	movwf	(??_CAN_GenID+1)& (0+255),c
  2740  000912  EE20  F039         	lfsr	2,_DaneCan+2
  2741  000916  CFDE F00B          	movff	postinc2,??_CAN_GenID+2
  2742  00091A  CFDD F00C          	movff	postdec2,??_CAN_GenID+3
  2743  00091E  5009               	movf	??_CAN_GenID,w,c
  2744  000920  260B               	addwf	??_CAN_GenID+2,f,c
  2745  000922  500A               	movf	??_CAN_GenID+1,w,c
  2746  000924  220C               	addwfc	??_CAN_GenID+3,f,c
  2747  000926  EE20 F004          	lfsr	2,4
  2748  00092A  5006               	movf	CAN_GenID@message,w,c
  2749  00092C  26D9               	addwf	fsr2l,f,c
  2750  00092E  5007               	movf	CAN_GenID@message+1,w,c
  2751  000930  22DA               	addwfc	fsr2h,f,c
  2752  000932  C00B  FFDE         	movff	??_CAN_GenID+2,postinc2
  2753  000936  C00C  FFDD         	movff	??_CAN_GenID+3,postdec2
  2754                           
  2755                           ;CAN.c: 391:     message ->id.bits.b16 = 0;
  2756  00093A  EE20 F006          	lfsr	2,6
  2757  00093E  5006               	movf	CAN_GenID@message,w,c
  2758  000940  26D9               	addwf	fsr2l,f,c
  2759  000942  5007               	movf	CAN_GenID@message+1,w,c
  2760  000944  22DA               	addwfc	fsr2h,f,c
  2761  000946  90DF               	bcf	indf2,0,c
  2762                           
  2763                           ;CAN.c: 392:     message ->id.bits.b17 = 0;
  2764  000948  EE20 F006          	lfsr	2,6
  2765  00094C  5006               	movf	CAN_GenID@message,w,c
  2766  00094E  26D9               	addwf	fsr2l,f,c
  2767  000950  5007               	movf	CAN_GenID@message+1,w,c
  2768  000952  22DA               	addwfc	fsr2h,f,c
  2769  000954  92DF               	bcf	indf2,1,c
  2770  000956  0012               	return		;funcret
  2771  000958                     __end_of_CAN_GenID:
  2772                           	opt callstack 0
  2773                           
  2774 ;; *************** function _CAN_TakeFrame *****************
  2775 ;; Defined at:
  2776 ;;		line 247 in file "CAN.c"
  2777 ;; Parameters:    Size  Location     Type
  2778 ;;  message         2   13[COMRAM] PTR struct .
  2779 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2780 ;; Auto vars:     Size  Location     Type
  2781 ;;  k               1   18[COMRAM] unsigned char 
  2782 ;;  tempCON         1   17[COMRAM] unsigned char 
  2783 ;; Return value:  Size  Location     Type
  2784 ;;                  1    wreg      enum E10433
  2785 ;; Registers used:
  2786 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2787 ;; Tracked objects:
  2788 ;;		On entry : 0/0
  2789 ;;		On exit  : 0/0
  2790 ;;		Unchanged: 0/0
  2791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2792 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2793 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2794 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2795 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2796 ;;Total ram usage:        6 bytes
  2797 ;; Hardware stack levels used:    1
  2798 ;; Hardware stack levels required when called:    4
  2799 ;; This function calls:
  2800 ;;		_CAN_MoveBuffIntoFrame
  2801 ;;		___awdiv
  2802 ;; This function is called by:
  2803 ;;		_TRM_DataTransmition
  2804 ;; This function uses a non-reentrant model
  2805 ;;
  2806                           
  2807                           	psect	text27
  2808  000060                     __ptext27:
  2809                           	opt callstack 0
  2810  000060                     _CAN_TakeFrame:
  2811                           	opt callstack 25
  2812                           
  2813                           ;CAN.c: 247: BOOL CAN_TakeFrame(mID * message);CAN.c: 248: {;CAN.c: 249:     BYTE k, tem
      +                          pCON;;CAN.c: 251:     k = CANCON&0x0F;
  2814                           
  2815                           ;incstack = 0
  2816  000060  506F               	movf	3951,w,c	;volatile
  2817  000062  0B0F               	andlw	15
  2818  000064  6E13               	movwf	CAN_TakeFrame@k,c
  2819                           
  2820                           ;CAN.c: 253:     ECANCON = 0x90 | k;
  2821  000066  5013               	movf	CAN_TakeFrame@k,w,c
  2822  000068  0990               	iorlw	144
  2823  00006A  6E77               	movwf	3959,c	;volatile
  2824                           
  2825                           ;CAN.c: 256:     switch(k)
  2826  00006C  D018               	goto	l2561
  2827  00006E                     l186:
  2828                           
  2829                           ;CAN.c: 259:             tempCON = RXB0CON;
  2830  00006E  CF60 F012          	movff	3936,CAN_TakeFrame@tempCON	;volatile
  2831                           
  2832                           ;CAN.c: 260:             break;
  2833  000072  D035               	goto	l187
  2834  000074                     l188:
  2835                           
  2836                           ;CAN.c: 262:             tempCON = RXB1CON;
  2837  000074  CF50 F012          	movff	3920,CAN_TakeFrame@tempCON	;volatile
  2838                           
  2839                           ;CAN.c: 263:             break;
  2840  000078  D032               	goto	l187
  2841  00007A                     l189:
  2842                           
  2843                           ;CAN.c: 265:             tempCON = B0CON;
  2844  00007A  CE20 F012          	movff	3616,CAN_TakeFrame@tempCON	;volatile
  2845                           
  2846                           ;CAN.c: 266:             break;
  2847  00007E  D02F               	goto	l187
  2848  000080                     l190:
  2849                           
  2850                           ;CAN.c: 268:             tempCON = B1CON;
  2851  000080  CE30 F012          	movff	3632,CAN_TakeFrame@tempCON	;volatile
  2852                           
  2853                           ;CAN.c: 269:             break;
  2854  000084  D02C               	goto	l187
  2855  000086                     l191:
  2856                           
  2857                           ;CAN.c: 271:             tempCON = B2CON;
  2858  000086  CE40 F012          	movff	3648,CAN_TakeFrame@tempCON	;volatile
  2859                           
  2860                           ;CAN.c: 272:             break;
  2861  00008A  D029               	goto	l187
  2862  00008C                     l192:
  2863                           
  2864                           ;CAN.c: 274:             tempCON = B3CON;
  2865  00008C  CE50 F012          	movff	3664,CAN_TakeFrame@tempCON	;volatile
  2866                           
  2867                           ;CAN.c: 275:             break;
  2868  000090  D026               	goto	l187
  2869  000092                     l193:
  2870                           
  2871                           ;CAN.c: 277:             tempCON = B4CON;
  2872  000092  CE60 F012          	movff	3680,CAN_TakeFrame@tempCON	;volatile
  2873                           
  2874                           ;CAN.c: 278:             break;
  2875  000096  D023               	goto	l187
  2876  000098                     l194:
  2877                           
  2878                           ;CAN.c: 280:             tempCON = B5CON;
  2879  000098  CE70 F012          	movff	3696,CAN_TakeFrame@tempCON	;volatile
  2880                           
  2881                           ;CAN.c: 281:             break;
  2882  00009C  D020               	goto	l187
  2883  00009E                     l2561:
  2884  00009E  5013               	movf	CAN_TakeFrame@k,w,c
  2885  0000A0  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  2886  0000A2  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  2887                           
  2888                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2889                           ; Switch size 1, requested type "simple"
  2890                           ; Number of cases is 1, Range of values is 0 to 0
  2891                           ; switch strategies available:
  2892                           ; Name         Instructions Cycles
  2893                           ; simple_byte            4     3 (average)
  2894                           ;	Chosen strategy is simple_byte
  2895  0000A4  5011               	movf	??_CAN_TakeFrame+1,w,c
  2896  0000A6  0A00               	xorlw	0	; case 0
  2897  0000A8  A4D8               	btfss	status,2,c
  2898  0000AA  D019               	goto	l187
  2899                           
  2900                           ; Switch size 1, requested type "simple"
  2901                           ; Number of cases is 8, Range of values is 0 to 7
  2902                           ; switch strategies available:
  2903                           ; Name         Instructions Cycles
  2904                           ; simple_byte           25    13 (average)
  2905                           ;	Chosen strategy is simple_byte
  2906  0000AC  5010               	movf	??_CAN_TakeFrame,w,c
  2907  0000AE  0A00               	xorlw	0	; case 0
  2908  0000B0  B4D8               	btfsc	status,2,c
  2909  0000B2  D7DD               	goto	l186
  2910  0000B4  0A01               	xorlw	1	; case 1
  2911  0000B6  B4D8               	btfsc	status,2,c
  2912  0000B8  D7DD               	goto	l188
  2913  0000BA  0A03               	xorlw	3	; case 2
  2914  0000BC  B4D8               	btfsc	status,2,c
  2915  0000BE  D7DD               	goto	l189
  2916  0000C0  0A01               	xorlw	1	; case 3
  2917  0000C2  B4D8               	btfsc	status,2,c
  2918  0000C4  D7DD               	goto	l190
  2919  0000C6  0A07               	xorlw	7	; case 4
  2920  0000C8  B4D8               	btfsc	status,2,c
  2921  0000CA  D7DD               	goto	l191
  2922  0000CC  0A01               	xorlw	1	; case 5
  2923  0000CE  B4D8               	btfsc	status,2,c
  2924  0000D0  D7DD               	goto	l192
  2925  0000D2  0A03               	xorlw	3	; case 6
  2926  0000D4  B4D8               	btfsc	status,2,c
  2927  0000D6  D7DD               	goto	l193
  2928  0000D8  0A01               	xorlw	1	; case 7
  2929  0000DA  B4D8               	btfsc	status,2,c
  2930  0000DC  D7DD               	goto	l194
  2931  0000DE                     l187:
  2932                           
  2933                           ;CAN.c: 285:     if((tempCON & 0x80) > 0)
  2934  0000DE  AE12               	btfss	CAN_TakeFrame@tempCON,7,c
  2935  0000E0  D0A5               	goto	l2597
  2936                           
  2937                           ;CAN.c: 286:     {;CAN.c: 287:         message->buffer = RXB0CON & 0x1F;
  2938  0000E2  EE20 F003          	lfsr	2,3
  2939  0000E6  500E               	movf	CAN_TakeFrame@message,w,c
  2940  0000E8  26D9               	addwf	fsr2l,f,c
  2941  0000EA  500F               	movf	CAN_TakeFrame@message+1,w,c
  2942  0000EC  22DA               	addwfc	fsr2h,f,c
  2943  0000EE  5060               	movf	3936,w,c	;volatile
  2944  0000F0  0B1F               	andlw	31
  2945  0000F2  6EDF               	movwf	indf2,c
  2946                           
  2947                           ;CAN.c: 288:         message->id.v[0] = RXB0EIDL;
  2948  0000F4  EE20 F004          	lfsr	2,4
  2949  0000F8  500E               	movf	CAN_TakeFrame@message,w,c
  2950  0000FA  26D9               	addwf	fsr2l,f,c
  2951  0000FC  500F               	movf	CAN_TakeFrame@message+1,w,c
  2952  0000FE  22DA               	addwfc	fsr2h,f,c
  2953  000100  CF64 FFDF          	movff	3940,indf2	;volatile
  2954                           
  2955                           ;CAN.c: 289:         message->id.v[1] = RXB0EIDH;
  2956  000104  EE20 F005          	lfsr	2,5
  2957  000108  500E               	movf	CAN_TakeFrame@message,w,c
  2958  00010A  26D9               	addwf	fsr2l,f,c
  2959  00010C  500F               	movf	CAN_TakeFrame@message+1,w,c
  2960  00010E  22DA               	addwfc	fsr2h,f,c
  2961  000110  CF63 FFDF          	movff	3939,indf2	;volatile
  2962                           
  2963                           ;CAN.c: 290:         message->id.v[2] = (RXB0SIDL/8) | (RXB0SIDL&0x03);
  2964  000114  EE20 F006          	lfsr	2,6
  2965  000118  500E               	movf	CAN_TakeFrame@message,w,c
  2966  00011A  26D9               	addwf	fsr2l,f,c
  2967  00011C  500F               	movf	CAN_TakeFrame@message+1,w,c
  2968  00011E  22DA               	addwfc	fsr2h,f,c
  2969  000120  CF62 F010          	movff	3938,??_CAN_TakeFrame	;volatile
  2970  000124  0E03               	movlw	3
  2971  000126  1610               	andwf	??_CAN_TakeFrame,f,c
  2972  000128  CF62 F006          	movff	3938,___awdiv@dividend	;volatile
  2973  00012C  6A07               	clrf	___awdiv@dividend+1,c
  2974  00012E  0E00               	movlw	0
  2975  000130  6E09               	movwf	___awdiv@divisor+1,c
  2976  000132  0E08               	movlw	8
  2977  000134  6E08               	movwf	___awdiv@divisor,c
  2978  000136  ECAC  F004         	call	___awdiv	;wreg free
  2979  00013A  5006               	movf	?___awdiv,w,c
  2980  00013C  1010               	iorwf	??_CAN_TakeFrame,w,c
  2981  00013E  6EDF               	movwf	indf2,c
  2982                           
  2983                           ;CAN.c: 291:         message->id.w[1] |= (WORD)RXB0SIDH*32;
  2984  000140  5061               	movf	3937,w,c	;volatile
  2985  000142  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  2986  000144  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  2987  000146  0E05               	movlw	5
  2988  000148                     u1205:
  2989  000148  90D8               	bcf	status,0,c
  2990  00014A  3610               	rlcf	??_CAN_TakeFrame,f,c
  2991  00014C  3611               	rlcf	??_CAN_TakeFrame+1,f,c
  2992  00014E  2EE8               	decfsz	wreg,f,c
  2993  000150  D7FB               	goto	u1205
  2994  000152  EE20 F006          	lfsr	2,6
  2995  000156  500E               	movf	CAN_TakeFrame@message,w,c
  2996  000158  26D9               	addwf	fsr2l,f,c
  2997  00015A  500F               	movf	CAN_TakeFrame@message+1,w,c
  2998  00015C  22DA               	addwfc	fsr2h,f,c
  2999  00015E  5010               	movf	??_CAN_TakeFrame,w,c
  3000  000160  12DE               	iorwf	postinc2,f,c
  3001  000162  5011               	movf	??_CAN_TakeFrame+1,w,c
  3002  000164  12DD               	iorwf	postdec2,f,c
  3003                           
  3004                           ;CAN.c: 292:         message->frame_type=0x03;
  3005  000166  EE20 F002          	lfsr	2,2
  3006  00016A  500E               	movf	CAN_TakeFrame@message,w,c
  3007  00016C  26D9               	addwf	fsr2l,f,c
  3008  00016E  500F               	movf	CAN_TakeFrame@message+1,w,c
  3009  000170  22DA               	addwfc	fsr2h,f,c
  3010  000172  0E03               	movlw	3
  3011  000174  6EDF               	movwf	indf2,c
  3012                           
  3013                           ;CAN.c: 296:         if(RXB0DLCbits.RXRTR == 0)
  3014  000176  BC65               	btfsc	3941,6,c	;volatile
  3015  000178  D068               	goto	l2603
  3016                           
  3017                           ;CAN.c: 297:         {;CAN.c: 298:             message->message_type = 0x01;
  3018  00017A  EE20 F001          	lfsr	2,1
  3019  00017E  500E               	movf	CAN_TakeFrame@message,w,c
  3020  000180  26D9               	addwf	fsr2l,f,c
  3021  000182  500F               	movf	CAN_TakeFrame@message+1,w,c
  3022  000184  22DA               	addwfc	fsr2h,f,c
  3023  000186  0E01               	movlw	1
  3024  000188  6EDF               	movwf	indf2,c
  3025                           
  3026                           ;CAN.c: 299:             message->data_length= RXB0DLC & 0x0F;
  3027  00018A  EE20 F010          	lfsr	2,16
  3028  00018E  500E               	movf	CAN_TakeFrame@message,w,c
  3029  000190  26D9               	addwf	fsr2l,f,c
  3030  000192  500F               	movf	CAN_TakeFrame@message+1,w,c
  3031  000194  22DA               	addwfc	fsr2h,f,c
  3032  000196  5065               	movf	3941,w,c	;volatile
  3033  000198  0B0F               	andlw	15
  3034  00019A  6EDF               	movwf	indf2,c
  3035                           
  3036                           ;CAN.c: 300:             if(message->data_length > 8)
  3037  00019C  EE20 F010          	lfsr	2,16
  3038  0001A0  500E               	movf	CAN_TakeFrame@message,w,c
  3039  0001A2  26D9               	addwf	fsr2l,f,c
  3040  0001A4  500F               	movf	CAN_TakeFrame@message+1,w,c
  3041  0001A6  22DA               	addwfc	fsr2h,f,c
  3042  0001A8  0E08               	movlw	8
  3043  0001AA  64DF               	cpfsgt	indf2,c
  3044  0001AC  D041               	goto	l2601
  3045  0001AE  D01E               	goto	l2595
  3046  0001B0                     l2577:
  3047                           
  3048                           ;CAN.c: 306:                         RXB0CON = 0;
  3049  0001B0  0E00               	movlw	0
  3050  0001B2  6E60               	movwf	3936,c	;volatile
  3051                           
  3052                           ;CAN.c: 307:                         break;
  3053  0001B4  D03B               	goto	l2597
  3054  0001B6                     l2579:
  3055                           
  3056                           ;CAN.c: 309:                         RXB1CON = 0;
  3057  0001B6  0E00               	movlw	0
  3058  0001B8  010F               	movlb	15	; () banked
  3059  0001BA  D00E               	goto	L1
  3060  0001BC                     l2581:
  3061                           
  3062                           ;CAN.c: 312:                         B0CON = 0;
  3063  0001BC  0E00               	movlw	0
  3064  0001BE  010E               	movlb	14	; () banked
  3065  0001C0  6F20               	movwf	32,b	;volatile
  3066                           
  3067                           ;CAN.c: 313:                         break;
  3068  0001C2  D034               	goto	l2597
  3069  0001C4                     l2583:
  3070                           
  3071                           ;CAN.c: 315:                         B1CON = 0;
  3072  0001C4  0E00               	movlw	0
  3073  0001C6  010E               	movlb	14	; () banked
  3074  0001C8  6F30               	movwf	48,b	;volatile
  3075                           
  3076                           ;CAN.c: 316:                         break;
  3077  0001CA  D030               	goto	l2597
  3078  0001CC                     l2585:
  3079                           
  3080                           ;CAN.c: 318:                         B2CON = 0;
  3081  0001CC  0E00               	movlw	0
  3082  0001CE  010E               	movlb	14	; () banked
  3083  0001D0  6F40               	movwf	64,b	;volatile
  3084                           
  3085                           ;CAN.c: 319:                         break;
  3086  0001D2  D02C               	goto	l2597
  3087  0001D4                     l2587:
  3088                           
  3089                           ;CAN.c: 321:                         B3CON = 0;
  3090  0001D4  0E00               	movlw	0
  3091  0001D6  010E               	movlb	14	; () banked
  3092  0001D8                     L1:
  3093  0001D8  6F50               	movwf	80,b	;volatile
  3094                           
  3095                           ;CAN.c: 322:                         break;
  3096  0001DA  D028               	goto	l2597
  3097  0001DC                     l2589:
  3098                           
  3099                           ;CAN.c: 324:                         B4CON = 0;
  3100  0001DC  0E00               	movlw	0
  3101  0001DE  010E               	movlb	14	; () banked
  3102  0001E0  6F60               	movwf	96,b	;volatile
  3103                           
  3104                           ;CAN.c: 325:                         break;
  3105  0001E2  D024               	goto	l2597
  3106  0001E4                     l2591:
  3107                           
  3108                           ;CAN.c: 327:                         B5CON = 0;
  3109  0001E4  0E00               	movlw	0
  3110  0001E6  010E               	movlb	14	; () banked
  3111  0001E8  6F70               	movwf	112,b	;volatile
  3112                           
  3113                           ;CAN.c: 328:                         break;
  3114  0001EA  D020               	goto	l2597
  3115  0001EC                     l2595:
  3116  0001EC  5013               	movf	CAN_TakeFrame@k,w,c
  3117  0001EE  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  3118  0001F0  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  3119                           
  3120                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3121                           ; Switch size 1, requested type "simple"
  3122                           ; Number of cases is 1, Range of values is 0 to 0
  3123                           ; switch strategies available:
  3124                           ; Name         Instructions Cycles
  3125                           ; simple_byte            4     3 (average)
  3126                           ;	Chosen strategy is simple_byte
  3127  0001F2  5011               	movf	??_CAN_TakeFrame+1,w,c
  3128  0001F4  0A00               	xorlw	0	; case 0
  3129  0001F6  A4D8               	btfss	status,2,c
  3130  0001F8  D019               	goto	l2597
  3131                           
  3132                           ; Switch size 1, requested type "simple"
  3133                           ; Number of cases is 8, Range of values is 0 to 7
  3134                           ; switch strategies available:
  3135                           ; Name         Instructions Cycles
  3136                           ; simple_byte           25    13 (average)
  3137                           ;	Chosen strategy is simple_byte
  3138  0001FA  5010               	movf	??_CAN_TakeFrame,w,c
  3139  0001FC  0A00               	xorlw	0	; case 0
  3140  0001FE  B4D8               	btfsc	status,2,c
  3141  000200  D7D7               	goto	l2577
  3142  000202  0A01               	xorlw	1	; case 1
  3143  000204  B4D8               	btfsc	status,2,c
  3144  000206  D7D7               	goto	l2579
  3145  000208  0A03               	xorlw	3	; case 2
  3146  00020A  B4D8               	btfsc	status,2,c
  3147  00020C  D7D7               	goto	l2581
  3148  00020E  0A01               	xorlw	1	; case 3
  3149  000210  B4D8               	btfsc	status,2,c
  3150  000212  D7D8               	goto	l2583
  3151  000214  0A07               	xorlw	7	; case 4
  3152  000216  B4D8               	btfsc	status,2,c
  3153  000218  D7D9               	goto	l2585
  3154  00021A  0A01               	xorlw	1	; case 5
  3155  00021C  B4D8               	btfsc	status,2,c
  3156  00021E  D7DA               	goto	l2587
  3157  000220  0A03               	xorlw	3	; case 6
  3158  000222  B4D8               	btfsc	status,2,c
  3159  000224  D7DB               	goto	l2589
  3160  000226  0A01               	xorlw	1	; case 7
  3161  000228  B4D8               	btfsc	status,2,c
  3162  00022A  D7DC               	goto	l2591
  3163  00022C                     l2597:
  3164                           
  3165                           ;CAN.c: 330:                 return FALSE;
  3166  00022C  0E00               	movlw	0
  3167  00022E  0012               	return	
  3168  000230                     l2601:
  3169                           
  3170                           ;CAN.c: 332:             CAN_MoveBuffIntoFrame(message->data, &RXB0D0);
  3171  000230  0E08               	movlw	8
  3172  000232  240E               	addwf	CAN_TakeFrame@message,w,c
  3173  000234  6E06               	movwf	CAN_MoveBuffIntoFrame@Ram,c
  3174  000236  0E00               	movlw	0
  3175  000238  200F               	addwfc	CAN_TakeFrame@message+1,w,c
  3176  00023A  6E07               	movwf	CAN_MoveBuffIntoFrame@Ram+1,c
  3177  00023C  0E66               	movlw	102
  3178  00023E  6E08               	movwf	CAN_MoveBuffIntoFrame@Buf,c
  3179  000240  0E0F               	movlw	15
  3180  000242  6E09               	movwf	CAN_MoveBuffIntoFrame@Buf+1,c
  3181  000244  EC4A  F007         	call	_CAN_MoveBuffIntoFrame	;wreg free
  3182                           
  3183                           ;CAN.c: 333:         }
  3184  000248  D027               	goto	l2623
  3185  00024A                     l2603:
  3186                           
  3187                           ;CAN.c: 336:         {;CAN.c: 337:             message->message_type=0x02;
  3188  00024A  EE20 F001          	lfsr	2,1
  3189  00024E  500E               	movf	CAN_TakeFrame@message,w,c
  3190  000250  26D9               	addwf	fsr2l,f,c
  3191  000252  500F               	movf	CAN_TakeFrame@message+1,w,c
  3192  000254  22DA               	addwfc	fsr2h,f,c
  3193  000256  0E02               	movlw	2
  3194  000258  6EDF               	movwf	indf2,c
  3195  00025A  D01E               	goto	l2623
  3196  00025C                     l2605:
  3197                           
  3198                           ;CAN.c: 343:                 RXB0CON = 0;
  3199  00025C  0E00               	movlw	0
  3200  00025E  6E60               	movwf	3936,c	;volatile
  3201                           
  3202                           ;CAN.c: 344:                 break;
  3203  000260  D03B               	goto	l2625
  3204  000262                     l2607:
  3205                           
  3206                           ;CAN.c: 346:                 RXB1CON = 0;
  3207  000262  0E00               	movlw	0
  3208  000264  010F               	movlb	15	; () banked
  3209  000266  D00E               	goto	L2
  3210  000268                     l2609:
  3211                           
  3212                           ;CAN.c: 349:                 B0CON = 0;
  3213  000268  0E00               	movlw	0
  3214  00026A  010E               	movlb	14	; () banked
  3215  00026C  6F20               	movwf	32,b	;volatile
  3216                           
  3217                           ;CAN.c: 350:                 break;
  3218  00026E  D034               	goto	l2625
  3219  000270                     l2611:
  3220                           
  3221                           ;CAN.c: 352:                 B1CON = 0;
  3222  000270  0E00               	movlw	0
  3223  000272  010E               	movlb	14	; () banked
  3224  000274  6F30               	movwf	48,b	;volatile
  3225                           
  3226                           ;CAN.c: 353:                 break;
  3227  000276  D030               	goto	l2625
  3228  000278                     l2613:
  3229                           
  3230                           ;CAN.c: 355:                 B2CON = 0;
  3231  000278  0E00               	movlw	0
  3232  00027A  010E               	movlb	14	; () banked
  3233  00027C  6F40               	movwf	64,b	;volatile
  3234                           
  3235                           ;CAN.c: 356:                 break;
  3236  00027E  D02C               	goto	l2625
  3237  000280                     l2615:
  3238                           
  3239                           ;CAN.c: 358:                 B3CON = 0;
  3240  000280  0E00               	movlw	0
  3241  000282  010E               	movlb	14	; () banked
  3242  000284                     L2:
  3243  000284  6F50               	movwf	80,b	;volatile
  3244                           
  3245                           ;CAN.c: 359:                 break;
  3246  000286  D028               	goto	l2625
  3247  000288                     l2617:
  3248                           
  3249                           ;CAN.c: 361:                 B4CON = 0;
  3250  000288  0E00               	movlw	0
  3251  00028A  010E               	movlb	14	; () banked
  3252  00028C  6F60               	movwf	96,b	;volatile
  3253                           
  3254                           ;CAN.c: 362:                 break;
  3255  00028E  D024               	goto	l2625
  3256  000290                     l2619:
  3257                           
  3258                           ;CAN.c: 364:                 B5CON = 0;
  3259  000290  0E00               	movlw	0
  3260  000292  010E               	movlb	14	; () banked
  3261  000294  6F70               	movwf	112,b	;volatile
  3262                           
  3263                           ;CAN.c: 365:                 break;
  3264  000296  D020               	goto	l2625
  3265  000298                     l2623:
  3266  000298  5013               	movf	CAN_TakeFrame@k,w,c
  3267  00029A  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  3268  00029C  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  3269                           
  3270                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3271                           ; Switch size 1, requested type "simple"
  3272                           ; Number of cases is 1, Range of values is 0 to 0
  3273                           ; switch strategies available:
  3274                           ; Name         Instructions Cycles
  3275                           ; simple_byte            4     3 (average)
  3276                           ;	Chosen strategy is simple_byte
  3277  00029E  5011               	movf	??_CAN_TakeFrame+1,w,c
  3278  0002A0  0A00               	xorlw	0	; case 0
  3279  0002A2  A4D8               	btfss	status,2,c
  3280  0002A4  D019               	goto	l2625
  3281                           
  3282                           ; Switch size 1, requested type "simple"
  3283                           ; Number of cases is 8, Range of values is 0 to 7
  3284                           ; switch strategies available:
  3285                           ; Name         Instructions Cycles
  3286                           ; simple_byte           25    13 (average)
  3287                           ;	Chosen strategy is simple_byte
  3288  0002A6  5010               	movf	??_CAN_TakeFrame,w,c
  3289  0002A8  0A00               	xorlw	0	; case 0
  3290  0002AA  B4D8               	btfsc	status,2,c
  3291  0002AC  D7D7               	goto	l2605
  3292  0002AE  0A01               	xorlw	1	; case 1
  3293  0002B0  B4D8               	btfsc	status,2,c
  3294  0002B2  D7D7               	goto	l2607
  3295  0002B4  0A03               	xorlw	3	; case 2
  3296  0002B6  B4D8               	btfsc	status,2,c
  3297  0002B8  D7D7               	goto	l2609
  3298  0002BA  0A01               	xorlw	1	; case 3
  3299  0002BC  B4D8               	btfsc	status,2,c
  3300  0002BE  D7D8               	goto	l2611
  3301  0002C0  0A07               	xorlw	7	; case 4
  3302  0002C2  B4D8               	btfsc	status,2,c
  3303  0002C4  D7D9               	goto	l2613
  3304  0002C6  0A01               	xorlw	1	; case 5
  3305  0002C8  B4D8               	btfsc	status,2,c
  3306  0002CA  D7DA               	goto	l2615
  3307  0002CC  0A03               	xorlw	3	; case 6
  3308  0002CE  B4D8               	btfsc	status,2,c
  3309  0002D0  D7DB               	goto	l2617
  3310  0002D2  0A01               	xorlw	1	; case 7
  3311  0002D4  B4D8               	btfsc	status,2,c
  3312  0002D6  D7DC               	goto	l2619
  3313  0002D8                     l2625:
  3314                           
  3315                           ;CAN.c: 367:         return TRUE;
  3316  0002D8  0E01               	movlw	1
  3317  0002DA  0012               	return		;funcret
  3318  0002DC                     __end_of_CAN_TakeFrame:
  3319                           	opt callstack 0
  3320                           
  3321 ;; *************** function ___awdiv *****************
  3322 ;; Defined at:
  3323 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  3324 ;; Parameters:    Size  Location     Type
  3325 ;;  dividend        2    5[COMRAM] int 
  3326 ;;  divisor         2    7[COMRAM] int 
  3327 ;; Auto vars:     Size  Location     Type
  3328 ;;  quotient        2   11[COMRAM] int 
  3329 ;;  sign            1   10[COMRAM] unsigned char 
  3330 ;;  counter         1    9[COMRAM] unsigned char 
  3331 ;; Return value:  Size  Location     Type
  3332 ;;                  2    5[COMRAM] int 
  3333 ;; Registers used:
  3334 ;;		wreg, status,2, status,0
  3335 ;; Tracked objects:
  3336 ;;		On entry : 0/0
  3337 ;;		On exit  : 0/0
  3338 ;;		Unchanged: 0/0
  3339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3340 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3341 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3343 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3344 ;;Total ram usage:        8 bytes
  3345 ;; Hardware stack levels used:    1
  3346 ;; Hardware stack levels required when called:    3
  3347 ;; This function calls:
  3348 ;;		Nothing
  3349 ;; This function is called by:
  3350 ;;		_CAN_TakeFrame
  3351 ;;		_FRAME_HandleCanFrame
  3352 ;; This function uses a non-reentrant model
  3353 ;;
  3354                           
  3355                           	psect	text28
  3356  000958                     __ptext28:
  3357                           	opt callstack 0
  3358  000958                     ___awdiv:
  3359                           	opt callstack 25
  3360                           
  3361                           ;incstack = 0
  3362  000958  0E00               	movlw	0
  3363  00095A  6E0B               	movwf	___awdiv@sign,c
  3364  00095C  AE09               	btfss	___awdiv@divisor+1,7,c
  3365  00095E  D006               	goto	l2481
  3366  000960  6C08               	negf	___awdiv@divisor,c
  3367  000962  1E09               	comf	___awdiv@divisor+1,f,c
  3368  000964  B0D8               	btfsc	status,0,c
  3369  000966  2A09               	incf	___awdiv@divisor+1,f,c
  3370  000968  0E01               	movlw	1
  3371  00096A  6E0B               	movwf	___awdiv@sign,c
  3372  00096C                     l2481:
  3373  00096C  AE07               	btfss	___awdiv@dividend+1,7,c
  3374  00096E  D006               	goto	l2487
  3375  000970  6C06               	negf	___awdiv@dividend,c
  3376  000972  1E07               	comf	___awdiv@dividend+1,f,c
  3377  000974  B0D8               	btfsc	status,0,c
  3378  000976  2A07               	incf	___awdiv@dividend+1,f,c
  3379  000978  0E01               	movlw	1
  3380  00097A  1A0B               	xorwf	___awdiv@sign,f,c
  3381  00097C                     l2487:
  3382  00097C  0E00               	movlw	0
  3383  00097E  6E0D               	movwf	___awdiv@quotient+1,c
  3384  000980  0E00               	movlw	0
  3385  000982  6E0C               	movwf	___awdiv@quotient,c
  3386  000984  5008               	movf	___awdiv@divisor,w,c
  3387  000986  1009               	iorwf	___awdiv@divisor+1,w,c
  3388  000988  B4D8               	btfsc	status,2,c
  3389  00098A  D01C               	goto	l2509
  3390  00098C  0E01               	movlw	1
  3391  00098E  6E0A               	movwf	___awdiv@counter,c
  3392  000990  D004               	goto	l2495
  3393  000992                     l2493:
  3394  000992  90D8               	bcf	status,0,c
  3395  000994  3608               	rlcf	___awdiv@divisor,f,c
  3396  000996  3609               	rlcf	___awdiv@divisor+1,f,c
  3397  000998  2A0A               	incf	___awdiv@counter,f,c
  3398  00099A                     l2495:
  3399  00099A  AE09               	btfss	___awdiv@divisor+1,7,c
  3400  00099C  D7FA               	goto	l2493
  3401  00099E                     u1110:
  3402  00099E  90D8               	bcf	status,0,c
  3403  0009A0  360C               	rlcf	___awdiv@quotient,f,c
  3404  0009A2  360D               	rlcf	___awdiv@quotient+1,f,c
  3405  0009A4  5008               	movf	___awdiv@divisor,w,c
  3406  0009A6  5C06               	subwf	___awdiv@dividend,w,c
  3407  0009A8  5009               	movf	___awdiv@divisor+1,w,c
  3408  0009AA  5807               	subwfb	___awdiv@dividend+1,w,c
  3409  0009AC  A0D8               	btfss	status,0,c
  3410  0009AE  D005               	goto	l2505
  3411  0009B0  5008               	movf	___awdiv@divisor,w,c
  3412  0009B2  5E06               	subwf	___awdiv@dividend,f,c
  3413  0009B4  5009               	movf	___awdiv@divisor+1,w,c
  3414  0009B6  5A07               	subwfb	___awdiv@dividend+1,f,c
  3415  0009B8  800C               	bsf	___awdiv@quotient,0,c
  3416  0009BA                     l2505:
  3417  0009BA  90D8               	bcf	status,0,c
  3418  0009BC  3209               	rrcf	___awdiv@divisor+1,f,c
  3419  0009BE  3208               	rrcf	___awdiv@divisor,f,c
  3420  0009C0  2E0A               	decfsz	___awdiv@counter,f,c
  3421  0009C2  D7ED               	goto	u1110
  3422  0009C4                     l2509:
  3423  0009C4  500B               	movf	___awdiv@sign,w,c
  3424  0009C6  B4D8               	btfsc	status,2,c
  3425  0009C8  D004               	goto	l2513
  3426  0009CA  6C0C               	negf	___awdiv@quotient,c
  3427  0009CC  1E0D               	comf	___awdiv@quotient+1,f,c
  3428  0009CE  B0D8               	btfsc	status,0,c
  3429  0009D0  2A0D               	incf	___awdiv@quotient+1,f,c
  3430  0009D2                     l2513:
  3431  0009D2  C00C  F006         	movff	___awdiv@quotient,?___awdiv
  3432  0009D6  C00D  F007         	movff	___awdiv@quotient+1,?___awdiv+1
  3433  0009DA  0012               	return		;funcret
  3434  0009DC                     __end_of___awdiv:
  3435                           	opt callstack 0
  3436                           
  3437 ;; *************** function _CAN_MoveBuffIntoFrame *****************
  3438 ;; Defined at:
  3439 ;;		line 169 in file "CAN.c"
  3440 ;; Parameters:    Size  Location     Type
  3441 ;;  Ram             2    5[COMRAM] PTR unsigned char 
  3442 ;;		 -> TRM_DataTransmition@canMessage(17), RXB0D0(1), 
  3443 ;;  Buf             2    7[COMRAM] PTR unsigned char 
  3444 ;;		 -> TRM_DataTransmition@canMessage(17), RXB0D0(1), 
  3445 ;; Auto vars:     Size  Location     Type
  3446 ;;  i               1    9[COMRAM] unsigned char 
  3447 ;; Return value:  Size  Location     Type
  3448 ;;                  1    wreg      void 
  3449 ;; Registers used:
  3450 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3451 ;; Tracked objects:
  3452 ;;		On entry : 0/0
  3453 ;;		On exit  : 0/0
  3454 ;;		Unchanged: 0/0
  3455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3456 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3457 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3459 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3460 ;;Total ram usage:        5 bytes
  3461 ;; Hardware stack levels used:    1
  3462 ;; Hardware stack levels required when called:    3
  3463 ;; This function calls:
  3464 ;;		Nothing
  3465 ;; This function is called by:
  3466 ;;		_CAN_SendFrame
  3467 ;;		_CAN_TakeFrame
  3468 ;; This function uses a non-reentrant model
  3469 ;;
  3470                           
  3471                           	psect	text29
  3472  000E94                     __ptext29:
  3473                           	opt callstack 0
  3474  000E94                     _CAN_MoveBuffIntoFrame:
  3475                           	opt callstack 24
  3476                           
  3477                           ;CAN.c: 169: static void CAN_MoveBuffIntoFrame(BYTE* Ram, BYTE* Buf);CAN.c: 170: {;CAN.c
      +                          : 171:     BYTE i;;CAN.c: 172:     for(i=0; i<8; ++i)
  3478                           
  3479                           ;incstack = 0
  3480  000E94  0E00               	movlw	0
  3481  000E96  6E0A               	movwf	CAN_MoveBuffIntoFrame@i,c
  3482  000E98                     l2121:
  3483                           
  3484                           ;CAN.c: 173:     {;CAN.c: 174:         Ram[i]=(*(Buf+i));
  3485  000E98  500A               	movf	CAN_MoveBuffIntoFrame@i,w,c
  3486  000E9A  2408               	addwf	CAN_MoveBuffIntoFrame@Buf,w,c
  3487  000E9C  6ED9               	movwf	fsr2l,c
  3488  000E9E  0E00               	movlw	0
  3489  000EA0  2009               	addwfc	CAN_MoveBuffIntoFrame@Buf+1,w,c
  3490  000EA2  6EDA               	movwf	fsr2h,c
  3491  000EA4  500A               	movf	CAN_MoveBuffIntoFrame@i,w,c
  3492  000EA6  2406               	addwf	CAN_MoveBuffIntoFrame@Ram,w,c
  3493  000EA8  6EE1               	movwf	fsr1l,c
  3494  000EAA  0E00               	movlw	0
  3495  000EAC  2007               	addwfc	CAN_MoveBuffIntoFrame@Ram+1,w,c
  3496  000EAE  6EE2               	movwf	fsr1h,c
  3497  000EB0  CFDF FFE7          	movff	indf2,indf1
  3498                           
  3499                           ;CAN.c: 175:     }
  3500  000EB4  2A0A               	incf	CAN_MoveBuffIntoFrame@i,f,c
  3501  000EB6  0E07               	movlw	7
  3502  000EB8  640A               	cpfsgt	CAN_MoveBuffIntoFrame@i,c
  3503  000EBA  D7EE               	goto	l2121
  3504  000EBC  0012               	return	
  3505  000EBE                     __end_of_CAN_MoveBuffIntoFrame:
  3506                           	opt callstack 0
  3507                           
  3508 ;; *************** function _TMR1_Update_flag_Set *****************
  3509 ;; Defined at:
  3510 ;;		line 32 in file "TMR1.c"
  3511 ;; Parameters:    Size  Location     Type
  3512 ;;  a               2    5[COMRAM] unsigned int 
  3513 ;; Auto vars:     Size  Location     Type
  3514 ;;		None
  3515 ;; Return value:  Size  Location     Type
  3516 ;;                  1    wreg      void 
  3517 ;; Registers used:
  3518 ;;		None
  3519 ;; Tracked objects:
  3520 ;;		On entry : 0/0
  3521 ;;		On exit  : 0/0
  3522 ;;		Unchanged: 0/0
  3523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3524 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3527 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3528 ;;Total ram usage:        2 bytes
  3529 ;; Hardware stack levels used:    1
  3530 ;; Hardware stack levels required when called:    3
  3531 ;; This function calls:
  3532 ;;		Nothing
  3533 ;; This function is called by:
  3534 ;;		_main
  3535 ;; This function uses a non-reentrant model
  3536 ;;
  3537                           
  3538                           	psect	text30
  3539  000FFC                     __ptext30:
  3540                           	opt callstack 0
  3541  000FFC                     _TMR1_Update_flag_Set:
  3542                           	opt callstack 27
  3543                           
  3544                           ;TMR1.c: 32: void TMR1_Update_flag_Set(UINT a);TMR1.c: 33: {;TMR1.c: 34:     TMR1_Update
      +                          _flag = a;
  3545                           
  3546                           ;incstack = 0
  3547  000FFC  C006  F03E         	movff	TMR1_Update_flag_Set@a,_TMR1_Update_flag
  3548  001000  C007  F03F         	movff	TMR1_Update_flag_Set@a+1,_TMR1_Update_flag+1
  3549  001004  0012               	return		;funcret
  3550  001006                     __end_of_TMR1_Update_flag_Set:
  3551                           	opt callstack 0
  3552                           
  3553 ;; *************** function _TMR1_Update_flag_Get *****************
  3554 ;; Defined at:
  3555 ;;		line 47 in file "TMR1.c"
  3556 ;; Parameters:    Size  Location     Type
  3557 ;;		None
  3558 ;; Auto vars:     Size  Location     Type
  3559 ;;		None
  3560 ;; Return value:  Size  Location     Type
  3561 ;;                  2    5[COMRAM] unsigned int 
  3562 ;; Registers used:
  3563 ;;		None
  3564 ;; Tracked objects:
  3565 ;;		On entry : 0/0
  3566 ;;		On exit  : 0/0
  3567 ;;		Unchanged: 0/0
  3568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3569 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3572 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3573 ;;Total ram usage:        2 bytes
  3574 ;; Hardware stack levels used:    1
  3575 ;; Hardware stack levels required when called:    3
  3576 ;; This function calls:
  3577 ;;		Nothing
  3578 ;; This function is called by:
  3579 ;;		_main
  3580 ;; This function uses a non-reentrant model
  3581 ;;
  3582                           
  3583                           	psect	text31
  3584  001006                     __ptext31:
  3585                           	opt callstack 0
  3586  001006                     _TMR1_Update_flag_Get:
  3587                           	opt callstack 27
  3588                           
  3589                           ;TMR1.c: 49:     return TMR1_Update_flag;
  3590                           
  3591                           ;incstack = 0
  3592  001006  C03E  F006         	movff	_TMR1_Update_flag,?_TMR1_Update_flag_Get
  3593  00100A  C03F  F007         	movff	_TMR1_Update_flag+1,?_TMR1_Update_flag_Get+1
  3594  00100E  0012               	return		;funcret
  3595  001010                     __end_of_TMR1_Update_flag_Get:
  3596                           	opt callstack 0
  3597                           
  3598 ;; *************** function _LED_Update *****************
  3599 ;; Defined at:
  3600 ;;		line 89 in file "LED.c"
  3601 ;; Parameters:    Size  Location     Type
  3602 ;;		None
  3603 ;; Auto vars:     Size  Location     Type
  3604 ;;		None
  3605 ;; Return value:  Size  Location     Type
  3606 ;;                  1    wreg      unsigned char 
  3607 ;; Registers used:
  3608 ;;		wreg, status,2, status,0, cstack
  3609 ;; Tracked objects:
  3610 ;;		On entry : 0/0
  3611 ;;		On exit  : 0/0
  3612 ;;		Unchanged: 0/0
  3613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3618 ;;Total ram usage:        0 bytes
  3619 ;; Hardware stack levels used:    1
  3620 ;; Hardware stack levels required when called:    5
  3621 ;; This function calls:
  3622 ;;		_LED_Left
  3623 ;;		_LED_Light_Pos
  3624 ;;		_LED_Right
  3625 ;; This function is called by:
  3626 ;;		_main
  3627 ;; This function uses a non-reentrant model
  3628 ;;
  3629                           
  3630                           	psect	text32
  3631  000BC6                     __ptext32:
  3632                           	opt callstack 0
  3633  000BC6                     _LED_Update:
  3634                           	opt callstack 25
  3635                           
  3636                           ;LED.c: 91:     static LED_RGA_type Red = RED;;LED.c: 92:     static LED_RGA_type Green 
      +                          = GREEN;;LED.c: 93:     static UINT pos1 = 0b0000000001;;LED.c: 94:     static UINT pos2
      +                           = 0b0000000001;;LED.c: 97:     LED_Light_Pos(Green,pos2,Fulfillment_Lvl);
  3637                           
  3638                           ;incstack = 0
  3639  000BC6  C046  F00D         	movff	LED_Update@pos2,LED_Light_Pos@pos
  3640  000BCA  C047  F00E         	movff	LED_Update@pos2+1,LED_Light_Pos@pos+1
  3641  000BCE  C04A  F00F         	movff	_Fulfillment_Lvl,LED_Light_Pos@fulfillment
  3642  000BD2  C04B  F010         	movff	_Fulfillment_Lvl+1,LED_Light_Pos@fulfillment+1
  3643  000BD6  504C               	movf	LED_Update@Green,w,c
  3644  000BD8  ECB8  F003         	call	_LED_Light_Pos
  3645                           
  3646                           ;LED.c: 98:     LED_Light_Pos(RED,pos1,Fulfillment_Lvl);
  3647  000BDC  C048  F00D         	movff	LED_Update@pos1,LED_Light_Pos@pos
  3648  000BE0  C049  F00E         	movff	LED_Update@pos1+1,LED_Light_Pos@pos+1
  3649  000BE4  C04A  F00F         	movff	_Fulfillment_Lvl,LED_Light_Pos@fulfillment
  3650  000BE8  C04B  F010         	movff	_Fulfillment_Lvl+1,LED_Light_Pos@fulfillment+1
  3651  000BEC  0E00               	movlw	0
  3652  000BEE  ECB8  F003         	call	_LED_Light_Pos
  3653                           
  3654                           ;LED.c: 99:     pos1 = LED_Right(pos1);
  3655  000BF2  C048  F006         	movff	LED_Update@pos1,LED_Right@a
  3656  000BF6  C049  F007         	movff	LED_Update@pos1+1,LED_Right@a+1
  3657  000BFA  EC5E  F006         	call	_LED_Right	;wreg free
  3658  000BFE  C006  F048         	movff	?_LED_Right,LED_Update@pos1
  3659  000C02  C007  F049         	movff	?_LED_Right+1,LED_Update@pos1+1
  3660                           
  3661                           ;LED.c: 100:     pos2 = LED_Left(pos2);
  3662  000C06  C046  F006         	movff	LED_Update@pos2,LED_Left@a
  3663  000C0A  C047  F007         	movff	LED_Update@pos2+1,LED_Left@a+1
  3664  000C0E  ECA7  F006         	call	_LED_Left	;wreg free
  3665  000C12  C006  F046         	movff	?_LED_Left,LED_Update@pos2
  3666  000C16  C007  F047         	movff	?_LED_Left+1,LED_Update@pos2+1
  3667  000C1A  0012               	return		;funcret
  3668  000C1C                     __end_of_LED_Update:
  3669                           	opt callstack 0
  3670                           
  3671 ;; *************** function _LED_Light_Pos *****************
  3672 ;; Defined at:
  3673 ;;		line 172 in file "LED.c"
  3674 ;; Parameters:    Size  Location     Type
  3675 ;;  color           1    wreg     enum E10641
  3676 ;;  pos             2   12[COMRAM] unsigned int 
  3677 ;;  fulfillment     2   14[COMRAM] unsigned int 
  3678 ;; Auto vars:     Size  Location     Type
  3679 ;;  color           1   16[COMRAM] enum E10641
  3680 ;;  flage           2   21[COMRAM] unsigned int 
  3681 ;;  pos2            2   19[COMRAM] unsigned int 
  3682 ;;  LED_array       2   17[COMRAM] unsigned int 
  3683 ;; Return value:  Size  Location     Type
  3684 ;;                  2   12[COMRAM] unsigned int 
  3685 ;; Registers used:
  3686 ;;		wreg, status,2, status,0, cstack
  3687 ;; Tracked objects:
  3688 ;;		On entry : 0/0
  3689 ;;		On exit  : 0/0
  3690 ;;		Unchanged: 0/0
  3691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3692 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3693 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3695 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3696 ;;Total ram usage:       11 bytes
  3697 ;; Hardware stack levels used:    1
  3698 ;; Hardware stack levels required when called:    4
  3699 ;; This function calls:
  3700 ;;		_LED_Control
  3701 ;;		_LED_Left
  3702 ;;		_LED_Right
  3703 ;;		___lwdiv
  3704 ;; This function is called by:
  3705 ;;		_LED_Update
  3706 ;; This function uses a non-reentrant model
  3707 ;;
  3708                           
  3709                           	psect	text33
  3710  000770                     __ptext33:
  3711                           	opt callstack 0
  3712  000770                     _LED_Light_Pos:
  3713                           	opt callstack 25
  3714                           
  3715                           ;incstack = 0
  3716                           ;LED_Light_Pos@color stored from wreg
  3717  000770  6E11               	movwf	LED_Light_Pos@color,c
  3718                           
  3719                           ;LED.c: 172: UINT LED_Light_Pos(LED_RGA_type color,UINT pos, UINT fulfillment);LED.c: 17
      +                          3: {;LED.c: 174:     UINT pos2 =pos;
  3720  000772  C00D  F014         	movff	LED_Light_Pos@pos,LED_Light_Pos@pos2
  3721  000776  C00E  F015         	movff	LED_Light_Pos@pos+1,LED_Light_Pos@pos2+1
  3722                           
  3723                           ;LED.c: 175:     UINT LED_array = 0b0000000000;
  3724  00077A  0E00               	movlw	0
  3725  00077C  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  3726  00077E  0E00               	movlw	0
  3727  000780  6E12               	movwf	LED_Light_Pos@LED_array,c
  3728                           
  3729                           ;LED.c: 176:     UINT flage = fulfillment/10;
  3730  000782  C00F  F006         	movff	LED_Light_Pos@fulfillment,___lwdiv@dividend
  3731  000786  C010  F007         	movff	LED_Light_Pos@fulfillment+1,___lwdiv@dividend+1
  3732  00078A  0E00               	movlw	0
  3733  00078C  6E09               	movwf	___lwdiv@divisor+1,c
  3734  00078E  0E0A               	movlw	10
  3735  000790  6E08               	movwf	___lwdiv@divisor,c
  3736  000792  EC0E  F006         	call	___lwdiv	;wreg free
  3737  000796  C006  F016         	movff	?___lwdiv,LED_Light_Pos@flage
  3738  00079A  C007  F017         	movff	?___lwdiv+1,LED_Light_Pos@flage+1
  3739                           
  3740                           ;LED.c: 177:     if(color == RED)
  3741  00079E  5011               	movf	LED_Light_Pos@color,w,c
  3742  0007A0  B4D8               	btfsc	status,2,c
  3743  0007A2  D017               	goto	l2663
  3744  0007A4  D031               	goto	l2671
  3745  0007A6                     l2657:
  3746                           
  3747                           ;LED.c: 180:         {;LED.c: 181:             LED_array = pos2|LED_array;
  3748  0007A6  5012               	movf	LED_Light_Pos@LED_array,w,c
  3749  0007A8  1014               	iorwf	LED_Light_Pos@pos2,w,c
  3750  0007AA  6E12               	movwf	LED_Light_Pos@LED_array,c
  3751  0007AC  5013               	movf	LED_Light_Pos@LED_array+1,w,c
  3752  0007AE  1015               	iorwf	LED_Light_Pos@pos2+1,w,c
  3753  0007B0  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  3754                           
  3755                           ;LED.c: 182:             pos2 = LED_Left(pos2);
  3756  0007B2  C014  F006         	movff	LED_Light_Pos@pos2,LED_Left@a
  3757  0007B6  C015  F007         	movff	LED_Light_Pos@pos2+1,LED_Left@a+1
  3758  0007BA  ECA7  F006         	call	_LED_Left	;wreg free
  3759  0007BE  C006  F014         	movff	?_LED_Left,LED_Light_Pos@pos2
  3760  0007C2  C007  F015         	movff	?_LED_Left+1,LED_Light_Pos@pos2+1
  3761                           
  3762                           ;LED.c: 183:             flage = flage - 1;
  3763  0007C6  0EFF               	movlw	255
  3764  0007C8  2416               	addwf	LED_Light_Pos@flage,w,c
  3765  0007CA  6E16               	movwf	LED_Light_Pos@flage,c
  3766  0007CC  0EFF               	movlw	255
  3767  0007CE  2017               	addwfc	LED_Light_Pos@flage+1,w,c
  3768  0007D0  6E17               	movwf	LED_Light_Pos@flage+1,c
  3769  0007D2                     l2663:
  3770                           
  3771                           ;LED.c: 179:         while(flage>0)
  3772  0007D2  5016               	movf	LED_Light_Pos@flage,w,c
  3773  0007D4  1017               	iorwf	LED_Light_Pos@flage+1,w,c
  3774  0007D6  B4D8               	btfsc	status,2,c
  3775  0007D8  D01B               	goto	u1250
  3776  0007DA  D7E5               	goto	l2657
  3777  0007DC                     l2665:
  3778                           
  3779                           ;LED.c: 189:         {;LED.c: 190:             LED_array = pos2|LED_array;
  3780  0007DC  5012               	movf	LED_Light_Pos@LED_array,w,c
  3781  0007DE  1014               	iorwf	LED_Light_Pos@pos2,w,c
  3782  0007E0  6E12               	movwf	LED_Light_Pos@LED_array,c
  3783  0007E2  5013               	movf	LED_Light_Pos@LED_array+1,w,c
  3784  0007E4  1015               	iorwf	LED_Light_Pos@pos2+1,w,c
  3785  0007E6  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  3786                           
  3787                           ;LED.c: 191:             pos2 = LED_Right(pos2);
  3788  0007E8  C014  F006         	movff	LED_Light_Pos@pos2,LED_Right@a
  3789  0007EC  C015  F007         	movff	LED_Light_Pos@pos2+1,LED_Right@a+1
  3790  0007F0  EC5E  F006         	call	_LED_Right	;wreg free
  3791  0007F4  C006  F014         	movff	?_LED_Right,LED_Light_Pos@pos2
  3792  0007F8  C007  F015         	movff	?_LED_Right+1,LED_Light_Pos@pos2+1
  3793                           
  3794                           ;LED.c: 192:             flage = flage - 1;
  3795  0007FC  0EFF               	movlw	255
  3796  0007FE  2416               	addwf	LED_Light_Pos@flage,w,c
  3797  000800  6E16               	movwf	LED_Light_Pos@flage,c
  3798  000802  0EFF               	movlw	255
  3799  000804  2017               	addwfc	LED_Light_Pos@flage+1,w,c
  3800  000806  6E17               	movwf	LED_Light_Pos@flage+1,c
  3801  000808                     l2671:
  3802                           
  3803                           ;LED.c: 188:         while(flage>0)
  3804  000808  5016               	movf	LED_Light_Pos@flage,w,c
  3805  00080A  1017               	iorwf	LED_Light_Pos@flage+1,w,c
  3806  00080C  A4D8               	btfss	status,2,c
  3807  00080E  D7E6               	goto	l2665
  3808  000810                     u1250:
  3809                           
  3810                           ;LED.c: 195:     LED_Control(color, LED_array);
  3811  000810  C012  F006         	movff	LED_Light_Pos@LED_array,LED_Control@diode
  3812  000814  C013  F007         	movff	LED_Light_Pos@LED_array+1,LED_Control@diode+1
  3813  000818  5011               	movf	LED_Light_Pos@color,w,c
  3814  00081A  EC0F  F003         	call	_LED_Control
  3815  00081E  0012               	return		;funcret
  3816  000820                     __end_of_LED_Light_Pos:
  3817                           	opt callstack 0
  3818                           
  3819 ;; *************** function ___lwdiv *****************
  3820 ;; Defined at:
  3821 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwdiv.c"
  3822 ;; Parameters:    Size  Location     Type
  3823 ;;  dividend        2    5[COMRAM] unsigned int 
  3824 ;;  divisor         2    7[COMRAM] unsigned int 
  3825 ;; Auto vars:     Size  Location     Type
  3826 ;;  quotient        2    9[COMRAM] unsigned int 
  3827 ;;  counter         1   11[COMRAM] unsigned char 
  3828 ;; Return value:  Size  Location     Type
  3829 ;;                  2    5[COMRAM] unsigned int 
  3830 ;; Registers used:
  3831 ;;		wreg, status,2, status,0
  3832 ;; Tracked objects:
  3833 ;;		On entry : 0/0
  3834 ;;		On exit  : 0/0
  3835 ;;		Unchanged: 0/0
  3836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3837 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3838 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3840 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3841 ;;Total ram usage:        7 bytes
  3842 ;; Hardware stack levels used:    1
  3843 ;; Hardware stack levels required when called:    3
  3844 ;; This function calls:
  3845 ;;		Nothing
  3846 ;; This function is called by:
  3847 ;;		_LED_Light_Pos
  3848 ;; This function uses a non-reentrant model
  3849 ;;
  3850                           
  3851                           	psect	text34
  3852  000C1C                     __ptext34:
  3853                           	opt callstack 0
  3854  000C1C                     ___lwdiv:
  3855                           	opt callstack 25
  3856                           
  3857                           ;incstack = 0
  3858  000C1C  0E00               	movlw	0
  3859  000C1E  6E0B               	movwf	___lwdiv@quotient+1,c
  3860  000C20  0E00               	movlw	0
  3861  000C22  6E0A               	movwf	___lwdiv@quotient,c
  3862  000C24  5008               	movf	___lwdiv@divisor,w,c
  3863  000C26  1009               	iorwf	___lwdiv@divisor+1,w,c
  3864  000C28  B4D8               	btfsc	status,2,c
  3865  000C2A  D01C               	goto	l1109
  3866  000C2C  0E01               	movlw	1
  3867  000C2E  6E0C               	movwf	___lwdiv@counter,c
  3868  000C30  D004               	goto	l2525
  3869  000C32                     l2523:
  3870  000C32  90D8               	bcf	status,0,c
  3871  000C34  3608               	rlcf	___lwdiv@divisor,f,c
  3872  000C36  3609               	rlcf	___lwdiv@divisor+1,f,c
  3873  000C38  2A0C               	incf	___lwdiv@counter,f,c
  3874  000C3A                     l2525:
  3875  000C3A  AE09               	btfss	___lwdiv@divisor+1,7,c
  3876  000C3C  D7FA               	goto	l2523
  3877  000C3E                     u1150:
  3878  000C3E  90D8               	bcf	status,0,c
  3879  000C40  360A               	rlcf	___lwdiv@quotient,f,c
  3880  000C42  360B               	rlcf	___lwdiv@quotient+1,f,c
  3881  000C44  5008               	movf	___lwdiv@divisor,w,c
  3882  000C46  5C06               	subwf	___lwdiv@dividend,w,c
  3883  000C48  5009               	movf	___lwdiv@divisor+1,w,c
  3884  000C4A  5807               	subwfb	___lwdiv@dividend+1,w,c
  3885  000C4C  A0D8               	btfss	status,0,c
  3886  000C4E  D005               	goto	l2535
  3887  000C50  5008               	movf	___lwdiv@divisor,w,c
  3888  000C52  5E06               	subwf	___lwdiv@dividend,f,c
  3889  000C54  5009               	movf	___lwdiv@divisor+1,w,c
  3890  000C56  5A07               	subwfb	___lwdiv@dividend+1,f,c
  3891  000C58  800A               	bsf	___lwdiv@quotient,0,c
  3892  000C5A                     l2535:
  3893  000C5A  90D8               	bcf	status,0,c
  3894  000C5C  3209               	rrcf	___lwdiv@divisor+1,f,c
  3895  000C5E  3208               	rrcf	___lwdiv@divisor,f,c
  3896  000C60  2E0C               	decfsz	___lwdiv@counter,f,c
  3897  000C62  D7ED               	goto	u1150
  3898  000C64                     l1109:
  3899  000C64  C00A  F006         	movff	___lwdiv@quotient,?___lwdiv
  3900  000C68  C00B  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3901  000C6C  0012               	return		;funcret
  3902  000C6E                     __end_of___lwdiv:
  3903                           	opt callstack 0
  3904                           
  3905 ;; *************** function _LED_Right *****************
  3906 ;; Defined at:
  3907 ;;		line 116 in file "LED.c"
  3908 ;; Parameters:    Size  Location     Type
  3909 ;;  a               2    5[COMRAM] unsigned int 
  3910 ;; Auto vars:     Size  Location     Type
  3911 ;;  b               2    9[COMRAM] unsigned int 
  3912 ;; Return value:  Size  Location     Type
  3913 ;;                  2    5[COMRAM] unsigned int 
  3914 ;; Registers used:
  3915 ;;		wreg, status,2, status,0
  3916 ;; Tracked objects:
  3917 ;;		On entry : 0/0
  3918 ;;		On exit  : 0/0
  3919 ;;		Unchanged: 0/0
  3920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3921 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3922 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3923 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3924 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3925 ;;Total ram usage:        6 bytes
  3926 ;; Hardware stack levels used:    1
  3927 ;; Hardware stack levels required when called:    3
  3928 ;; This function calls:
  3929 ;;		Nothing
  3930 ;; This function is called by:
  3931 ;;		_LED_Update
  3932 ;;		_LED_Light_Pos
  3933 ;; This function uses a non-reentrant model
  3934 ;;
  3935                           
  3936                           	psect	text35
  3937  000CBC                     __ptext35:
  3938                           	opt callstack 0
  3939  000CBC                     _LED_Right:
  3940                           	opt callstack 26
  3941                           
  3942                           ;LED.c: 116: UINT LED_Right(UINT a);LED.c: 117: {;LED.c: 118:     if ((a & 0b0000000001)
      +                           == 0b0000000001)
  3943                           
  3944                           ;incstack = 0
  3945  000CBC  A006               	btfss	LED_Right@a,0,c
  3946  000CBE  D018               	goto	l2387
  3947                           
  3948                           ;LED.c: 119:     {;LED.c: 120:         UINT b = a & 0b1111111110;
  3949  000CC0  0EFE               	movlw	254
  3950  000CC2  1406               	andwf	LED_Right@a,w,c
  3951  000CC4  6E0A               	movwf	LED_Right@b,c
  3952  000CC6  0E03               	movlw	3
  3953  000CC8  1407               	andwf	LED_Right@a+1,w,c
  3954  000CCA  6E0B               	movwf	LED_Right@b+1,c
  3955                           
  3956                           ;LED.c: 121:         b = b >> 1;
  3957  000CCC  90D8               	bcf	status,0,c
  3958  000CCE  300B               	rrcf	LED_Right@b+1,w,c
  3959  000CD0  6E08               	movwf	??_LED_Right& (0+255),c
  3960  000CD2  300A               	rrcf	LED_Right@b,w,c
  3961  000CD4  6E0A               	movwf	LED_Right@b,c
  3962  000CD6  C008  F00B         	movff	??_LED_Right,LED_Right@b+1
  3963                           
  3964                           ;LED.c: 122:         b = b | 0b1000000000;
  3965  000CDA  0E00               	movlw	0
  3966  000CDC  100A               	iorwf	LED_Right@b,w,c
  3967  000CDE  6E0A               	movwf	LED_Right@b,c
  3968  000CE0  0E02               	movlw	2
  3969  000CE2  100B               	iorwf	LED_Right@b+1,w,c
  3970  000CE4  6E0B               	movwf	LED_Right@b+1,c
  3971                           
  3972                           ;LED.c: 123:         return b;
  3973  000CE6  C00A  F006         	movff	LED_Right@b,?_LED_Right
  3974  000CEA  C00B  F007         	movff	LED_Right@b+1,?_LED_Right+1
  3975  000CEE  0012               	return	
  3976  000CF0                     l2387:
  3977                           
  3978                           ;LED.c: 126:     {;LED.c: 127:         a =a >> 1;
  3979  000CF0  90D8               	bcf	status,0,c
  3980  000CF2  3007               	rrcf	LED_Right@a+1,w,c
  3981  000CF4  6E08               	movwf	??_LED_Right& (0+255),c
  3982  000CF6  3006               	rrcf	LED_Right@a,w,c
  3983  000CF8  6E06               	movwf	LED_Right@a,c
  3984  000CFA  C008  F007         	movff	??_LED_Right,LED_Right@a+1
  3985                           
  3986                           ;LED.c: 128:         return a;
  3987  000CFE  C006  F006         	movff	LED_Right@a,?_LED_Right
  3988  000D02  C007  F007         	movff	LED_Right@a+1,?_LED_Right+1
  3989  000D06  0012               	return		;funcret
  3990  000D08                     __end_of_LED_Right:
  3991                           	opt callstack 0
  3992                           
  3993 ;; *************** function _LED_Left *****************
  3994 ;; Defined at:
  3995 ;;		line 143 in file "LED.c"
  3996 ;; Parameters:    Size  Location     Type
  3997 ;;  a               2    5[COMRAM] unsigned int 
  3998 ;; Auto vars:     Size  Location     Type
  3999 ;;  b               2    7[COMRAM] unsigned int 
  4000 ;; Return value:  Size  Location     Type
  4001 ;;                  2    5[COMRAM] unsigned int 
  4002 ;; Registers used:
  4003 ;;		wreg, status,2, status,0
  4004 ;; Tracked objects:
  4005 ;;		On entry : 0/0
  4006 ;;		On exit  : 0/0
  4007 ;;		Unchanged: 0/0
  4008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4009 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4010 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4012 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4013 ;;Total ram usage:        4 bytes
  4014 ;; Hardware stack levels used:    1
  4015 ;; Hardware stack levels required when called:    3
  4016 ;; This function calls:
  4017 ;;		Nothing
  4018 ;; This function is called by:
  4019 ;;		_LED_Update
  4020 ;;		_LED_Light_Pos
  4021 ;; This function uses a non-reentrant model
  4022 ;;
  4023                           
  4024                           	psect	text36
  4025  000D4E                     __ptext36:
  4026                           	opt callstack 0
  4027  000D4E                     _LED_Left:
  4028                           	opt callstack 25
  4029                           
  4030                           ;LED.c: 143: UINT LED_Left(UINT a);LED.c: 144: {;LED.c: 145:     if ((a & 0b1000000000) 
      +                          == 0b1000000000)
  4031                           
  4032                           ;incstack = 0
  4033  000D4E  A207               	btfss	LED_Left@a+1,1,c
  4034  000D50  D015               	goto	l2403
  4035                           
  4036                           ;LED.c: 146:     {;LED.c: 147:         UINT b = a & 0b0111111111;
  4037  000D52  0EFF               	movlw	255
  4038  000D54  1406               	andwf	LED_Left@a,w,c
  4039  000D56  6E08               	movwf	LED_Left@b,c
  4040  000D58  0E01               	movlw	1
  4041  000D5A  1407               	andwf	LED_Left@a+1,w,c
  4042  000D5C  6E09               	movwf	LED_Left@b+1,c
  4043                           
  4044                           ;LED.c: 148:         b = b << 1;
  4045  000D5E  90D8               	bcf	status,0,c
  4046  000D60  3408               	rlcf	LED_Left@b,w,c
  4047  000D62  6E08               	movwf	LED_Left@b,c
  4048  000D64  3409               	rlcf	LED_Left@b+1,w,c
  4049  000D66  6E09               	movwf	LED_Left@b+1,c
  4050                           
  4051                           ;LED.c: 149:         b = b | 0b0000000001;
  4052  000D68  0E01               	movlw	1
  4053  000D6A  1008               	iorwf	LED_Left@b,w,c
  4054  000D6C  6E08               	movwf	LED_Left@b,c
  4055  000D6E  5009               	movf	LED_Left@b+1,w,c
  4056  000D70  6E09               	movwf	LED_Left@b+1,c
  4057                           
  4058                           ;LED.c: 150:         return b;
  4059  000D72  C008  F006         	movff	LED_Left@b,?_LED_Left
  4060  000D76  C009  F007         	movff	LED_Left@b+1,?_LED_Left+1
  4061  000D7A  0012               	return	
  4062  000D7C                     l2403:
  4063                           
  4064                           ;LED.c: 153:     {;LED.c: 154:         a = a << 1;
  4065  000D7C  90D8               	bcf	status,0,c
  4066  000D7E  3406               	rlcf	LED_Left@a,w,c
  4067  000D80  6E06               	movwf	LED_Left@a,c
  4068  000D82  3407               	rlcf	LED_Left@a+1,w,c
  4069  000D84  6E07               	movwf	LED_Left@a+1,c
  4070                           
  4071                           ;LED.c: 155:         return a;
  4072  000D86  C006  F006         	movff	LED_Left@a,?_LED_Left
  4073  000D8A  C007  F007         	movff	LED_Left@a+1,?_LED_Left+1
  4074  000D8E  0012               	return		;funcret
  4075  000D90                     __end_of_LED_Left:
  4076                           	opt callstack 0
  4077                           
  4078 ;; *************** function _INI_All *****************
  4079 ;; Defined at:
  4080 ;;		line 52 in file "INI.c"
  4081 ;; Parameters:    Size  Location     Type
  4082 ;;		None
  4083 ;; Auto vars:     Size  Location     Type
  4084 ;;		None
  4085 ;; Return value:  Size  Location     Type
  4086 ;;                  1    wreg      void 
  4087 ;; Registers used:
  4088 ;;		wreg, status,2, status,0, cstack
  4089 ;; Tracked objects:
  4090 ;;		On entry : 0/0
  4091 ;;		On exit  : 0/0
  4092 ;;		Unchanged: 0/0
  4093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4098 ;;Total ram usage:        0 bytes
  4099 ;; Hardware stack levels used:    1
  4100 ;; Hardware stack levels required when called:    5
  4101 ;; This function calls:
  4102 ;;		_CAN_Setup
  4103 ;;		_INI_GlobalInterrupt
  4104 ;;		_INI_LED_Start
  4105 ;;		_INI_OUTPUT
  4106 ;;		_INI_Timer
  4107 ;; This function is called by:
  4108 ;;		_main
  4109 ;; This function uses a non-reentrant model
  4110 ;;
  4111                           
  4112                           	psect	text37
  4113  000F68                     __ptext37:
  4114                           	opt callstack 0
  4115  000F68                     _INI_All:
  4116                           	opt callstack 25
  4117                           
  4118                           ;INI.c: 55:     WDTCONbits.SWDTEN = 1;
  4119                           
  4120                           ;incstack = 0
  4121  000F68  80D1               	bsf	4049,0,c	;volatile
  4122  000F6A  0004               	clrwdt		;# 
  4123                           
  4124                           ;INI.c: 64:     INI_OUTPUT();
  4125  000F6C  ECA5  F007         	call	_INI_OUTPUT	;wreg free
  4126                           
  4127                           ;INI.c: 66:     CAN_Setup();
  4128  000F70  EC5E  F005         	call	_CAN_Setup	;wreg free
  4129                           
  4130                           ;INI.c: 67:     INI_GlobalInterrupt();
  4131  000F74  ECD4  F007         	call	_INI_GlobalInterrupt	;wreg free
  4132                           
  4133                           ;INI.c: 69:     INI_Timer();
  4134  000F78  ECC1  F007         	call	_INI_Timer	;wreg free
  4135                           
  4136                           ;INI.c: 71:     INI_LED_Start();
  4137  000F7C  EC19  F007         	call	_INI_LED_Start	;wreg free
  4138  000F80  0012               	return		;funcret
  4139  000F82                     __end_of_INI_All:
  4140                           	opt callstack 0
  4141                           
  4142 ;; *************** function _INI_Timer *****************
  4143 ;; Defined at:
  4144 ;;		line 92 in file "TMR1.c"
  4145 ;; Parameters:    Size  Location     Type
  4146 ;;		None
  4147 ;; Auto vars:     Size  Location     Type
  4148 ;;		None
  4149 ;; Return value:  Size  Location     Type
  4150 ;;                  1    wreg      unsigned char 
  4151 ;; Registers used:
  4152 ;;		wreg, status,2
  4153 ;; Tracked objects:
  4154 ;;		On entry : 0/0
  4155 ;;		On exit  : 0/0
  4156 ;;		Unchanged: 0/0
  4157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4161 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4162 ;;Total ram usage:        0 bytes
  4163 ;; Hardware stack levels used:    1
  4164 ;; Hardware stack levels required when called:    3
  4165 ;; This function calls:
  4166 ;;		Nothing
  4167 ;; This function is called by:
  4168 ;;		_INI_All
  4169 ;; This function uses a non-reentrant model
  4170 ;;
  4171                           
  4172                           	psect	text38
  4173  000F82                     __ptext38:
  4174                           	opt callstack 0
  4175  000F82                     _INI_Timer:
  4176                           	opt callstack 26
  4177                           
  4178                           ;TMR1.c: 96:     IRCF2 = 1;
  4179                           
  4180                           ;incstack = 0
  4181  000F82  8CD3               	bsf	4051,6,c	;volatile
  4182                           
  4183                           ;TMR1.c: 97:     IRCF1 = 1;
  4184  000F84  8AD3               	bsf	4051,5,c	;volatile
  4185                           
  4186                           ;TMR1.c: 98:     IRCF0 = 1;
  4187  000F86  88D3               	bsf	4051,4,c	;volatile
  4188                           
  4189                           ;TMR1.c: 99:     T1CON = 0b00111101;
  4190  000F88  0E3D               	movlw	61
  4191  000F8A  6ECD               	movwf	4045,c	;volatile
  4192                           
  4193                           ;TMR1.c: 100:     TMR1H= (UINT8)((0xFFFF - (((8000000/8)/4)/10)) >> 8);
  4194  000F8C  0E9E               	movlw	158
  4195  000F8E  6ECF               	movwf	4047,c	;volatile
  4196                           
  4197                           ;TMR1.c: 101:     TMR1L=(UINT8)((0xFFFF - (((8000000/8)/4)/10)) & 0xFF);
  4198  000F90  0E57               	movlw	87
  4199  000F92  6ECE               	movwf	4046,c	;volatile
  4200                           
  4201                           ;TMR1.c: 102:     TMR1IE=1;
  4202  000F94  809D               	bsf	3997,0,c	;volatile
  4203                           
  4204                           ;TMR1.c: 103:     TMR1ON = 1;
  4205  000F96  80CD               	bsf	4045,0,c	;volatile
  4206  000F98  0012               	return		;funcret
  4207  000F9A                     __end_of_INI_Timer:
  4208                           	opt callstack 0
  4209                           
  4210 ;; *************** function _INI_OUTPUT *****************
  4211 ;; Defined at:
  4212 ;;		line 27 in file "INI.c"
  4213 ;; Parameters:    Size  Location     Type
  4214 ;;		None
  4215 ;; Auto vars:     Size  Location     Type
  4216 ;;		None
  4217 ;; Return value:  Size  Location     Type
  4218 ;;                  1    wreg      void 
  4219 ;; Registers used:
  4220 ;;		wreg, status,2
  4221 ;; Tracked objects:
  4222 ;;		On entry : 0/0
  4223 ;;		On exit  : 0/0
  4224 ;;		Unchanged: 0/0
  4225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4230 ;;Total ram usage:        0 bytes
  4231 ;; Hardware stack levels used:    1
  4232 ;; Hardware stack levels required when called:    3
  4233 ;; This function calls:
  4234 ;;		Nothing
  4235 ;; This function is called by:
  4236 ;;		_INI_All
  4237 ;; This function uses a non-reentrant model
  4238 ;;
  4239                           
  4240                           	psect	text39
  4241  000F4A                     __ptext39:
  4242                           	opt callstack 0
  4243  000F4A                     _INI_OUTPUT:
  4244                           	opt callstack 26
  4245                           
  4246                           ;INI.c: 31:     LATA = 0;
  4247                           
  4248                           ;incstack = 0
  4249  000F4A  0E00               	movlw	0
  4250  000F4C  6E89               	movwf	3977,c	;volatile
  4251                           
  4252                           ;INI.c: 32:     LATB = 0;
  4253  000F4E  0E00               	movlw	0
  4254  000F50  6E8A               	movwf	3978,c	;volatile
  4255                           
  4256                           ;INI.c: 33:     LATC = 0;
  4257  000F52  0E00               	movlw	0
  4258  000F54  6E8B               	movwf	3979,c	;volatile
  4259                           
  4260                           ;INI.c: 34:     TRISA = 0x0C;
  4261  000F56  0E0C               	movlw	12
  4262  000F58  6E92               	movwf	3986,c	;volatile
  4263                           
  4264                           ;INI.c: 35:     TRISB = 0b10001000;
  4265  000F5A  0E88               	movlw	136
  4266  000F5C  6E93               	movwf	3987,c	;volatile
  4267                           
  4268                           ;INI.c: 36:     TRISC = 0xBF;
  4269  000F5E  0EBF               	movlw	191
  4270  000F60  6E94               	movwf	3988,c	;volatile
  4271                           
  4272                           ;INI.c: 37:     RCONbits.IPEN = 1;
  4273  000F62  8ED0               	bsf	4048,7,c	;volatile
  4274                           
  4275                           ;INI.c: 40:     DetectorLedRadar.Flags.inicjalizacja = 1;
  4276  000F64  863B               	bsf	_DetectorLedRadar,3,c
  4277  000F66  0012               	return		;funcret
  4278  000F68                     __end_of_INI_OUTPUT:
  4279                           	opt callstack 0
  4280                           
  4281 ;; *************** function _INI_LED_Start *****************
  4282 ;; Defined at:
  4283 ;;		line 207 in file "LED.c"
  4284 ;; Parameters:    Size  Location     Type
  4285 ;;		None
  4286 ;; Auto vars:     Size  Location     Type
  4287 ;;		None
  4288 ;; Return value:  Size  Location     Type
  4289 ;;                  1    wreg      void 
  4290 ;; Registers used:
  4291 ;;		wreg, status,2, status,0, cstack
  4292 ;; Tracked objects:
  4293 ;;		On entry : 0/0
  4294 ;;		On exit  : 0/0
  4295 ;;		Unchanged: 0/0
  4296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4300 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4301 ;;Total ram usage:        0 bytes
  4302 ;; Hardware stack levels used:    1
  4303 ;; Hardware stack levels required when called:    4
  4304 ;; This function calls:
  4305 ;;		_LED_Control
  4306 ;; This function is called by:
  4307 ;;		_INI_All
  4308 ;; This function uses a non-reentrant model
  4309 ;;
  4310                           
  4311                           	psect	text40
  4312  000E32                     __ptext40:
  4313                           	opt callstack 0
  4314  000E32                     _INI_LED_Start:
  4315                           	opt callstack 25
  4316                           
  4317                           ;LED.c: 209:     TRISA = TRISA & 0b00000001;
  4318                           
  4319                           ;incstack = 0
  4320  000E32  5092               	movf	3986,w,c	;volatile
  4321  000E34  0B01               	andlw	1
  4322  000E36  6E92               	movwf	3986,c	;volatile
  4323                           
  4324                           ;LED.c: 210:     TRISB = TRISB & 0b11111100;
  4325  000E38  5093               	movf	3987,w,c	;volatile
  4326  000E3A  0BFC               	andlw	252
  4327  000E3C  6E93               	movwf	3987,c	;volatile
  4328                           
  4329                           ;LED.c: 211:     TRISE = TRISE & 0b11111000;
  4330  000E3E  5096               	movf	3990,w,c	;volatile
  4331  000E40  0BF8               	andlw	248
  4332  000E42  6E96               	movwf	3990,c	;volatile
  4333                           
  4334                           ;LED.c: 212:     TRISD = TRISD & 0b00000000;
  4335  000E44  0E00               	movlw	0
  4336  000E46  6E95               	movwf	3989,c	;volatile
  4337                           
  4338                           ;LED.c: 213:     LED_Control(RED,0b0000000000);
  4339  000E48  0E00               	movlw	0
  4340  000E4A  6E07               	movwf	LED_Control@diode+1,c
  4341  000E4C  0E00               	movlw	0
  4342  000E4E  6E06               	movwf	LED_Control@diode,c
  4343  000E50  0E00               	movlw	0
  4344  000E52  EC0F  F003         	call	_LED_Control
  4345                           
  4346                           ;LED.c: 214:     LED_Control(GREEN,0b0000000000);
  4347  000E56  0E00               	movlw	0
  4348  000E58  6E07               	movwf	LED_Control@diode+1,c
  4349  000E5A  0E00               	movlw	0
  4350  000E5C  6E06               	movwf	LED_Control@diode,c
  4351  000E5E  0E01               	movlw	1
  4352  000E60  EC0F  F003         	call	_LED_Control
  4353  000E64  0012               	return		;funcret
  4354  000E66                     __end_of_INI_LED_Start:
  4355                           	opt callstack 0
  4356                           
  4357 ;; *************** function _LED_Control *****************
  4358 ;; Defined at:
  4359 ;;		line 232 in file "LED.c"
  4360 ;; Parameters:    Size  Location     Type
  4361 ;;  color           1    wreg     enum E10641
  4362 ;;  diode           2    5[COMRAM] unsigned int 
  4363 ;; Auto vars:     Size  Location     Type
  4364 ;;  color           1    9[COMRAM] enum E10641
  4365 ;;  cos             2    0        unsigned int 
  4366 ;; Return value:  Size  Location     Type
  4367 ;;                  1    wreg      unsigned char 
  4368 ;; Registers used:
  4369 ;;		wreg, status,2, status,0
  4370 ;; Tracked objects:
  4371 ;;		On entry : 0/0
  4372 ;;		On exit  : 0/0
  4373 ;;		Unchanged: 0/0
  4374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4375 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4376 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4378 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4379 ;;Total ram usage:        5 bytes
  4380 ;; Hardware stack levels used:    1
  4381 ;; Hardware stack levels required when called:    3
  4382 ;; This function calls:
  4383 ;;		Nothing
  4384 ;; This function is called by:
  4385 ;;		_LED_Error
  4386 ;;		_LED_Light_Pos
  4387 ;;		_INI_LED_Start
  4388 ;;		_LED_Clear
  4389 ;; This function uses a non-reentrant model
  4390 ;;
  4391                           
  4392                           	psect	text41
  4393  00061E                     __ptext41:
  4394                           	opt callstack 0
  4395  00061E                     _LED_Control:
  4396                           	opt callstack 24
  4397                           
  4398                           ;incstack = 0
  4399                           ;LED_Control@color stored from wreg
  4400  00061E  6E0A               	movwf	LED_Control@color,c
  4401                           
  4402                           ;LED.c: 235:     if(color == RED)
  4403  000620  500A               	movf	LED_Control@color,w,c
  4404  000622  A4D8               	btfss	status,2,c
  4405  000624  D050               	goto	l299
  4406                           
  4407                           ;LED.c: 236:     {;LED.c: 238:         if((diode & 0b0000000001)== 0b0000000001)
  4408  000626  A006               	btfss	LED_Control@diode,0,c
  4409  000628  D003               	goto	l2135
  4410                           
  4411                           ;LED.c: 239:         {;LED.c: 240:             LATD = LATD | ~0b11101111;
  4412  00062A  508C               	movf	3980,w,c	;volatile
  4413  00062C  0910               	iorlw	16
  4414  00062E  D002               	goto	L3
  4415  000630                     l2135:
  4416                           
  4417                           ;LED.c: 243:         {;LED.c: 244:             LATD = LATD &0b11101111;
  4418  000630  508C               	movf	3980,w,c	;volatile
  4419  000632  0BEF               	andlw	239
  4420  000634                     L3:
  4421  000634  6E8C               	movwf	3980,c	;volatile
  4422                           
  4423                           ;LED.c: 247:         if((diode & 0b0000000010) == 0b0000000010)
  4424  000636  A206               	btfss	LED_Control@diode,1,c
  4425  000638  D003               	goto	l2141
  4426                           
  4427                           ;LED.c: 248:         {;LED.c: 249:             LATD = LATD | ~0b10111111;
  4428  00063A  508C               	movf	3980,w,c	;volatile
  4429  00063C  0940               	iorlw	64
  4430  00063E  D002               	goto	L4
  4431  000640                     l2141:
  4432                           
  4433                           ;LED.c: 252:         {;LED.c: 253:             LATD = LATD & 0b10111111;
  4434  000640  508C               	movf	3980,w,c	;volatile
  4435  000642  0BBF               	andlw	191
  4436  000644                     L4:
  4437  000644  6E8C               	movwf	3980,c	;volatile
  4438                           
  4439                           ;LED.c: 256:         if((diode & 0b0000000100) == 0b0000000100)
  4440  000646  A406               	btfss	LED_Control@diode,2,c
  4441  000648  D003               	goto	l2147
  4442                           
  4443                           ;LED.c: 257:         {;LED.c: 258:             LATB = LATB | ~0b11111110;
  4444  00064A  508A               	movf	3978,w,c	;volatile
  4445  00064C  0901               	iorlw	1
  4446  00064E  D002               	goto	L5
  4447  000650                     l2147:
  4448                           
  4449                           ;LED.c: 261:         {;LED.c: 262:             LATB = LATB & 0b11111110;
  4450  000650  508A               	movf	3978,w,c	;volatile
  4451  000652  0BFE               	andlw	254
  4452  000654                     L5:
  4453  000654  6E8A               	movwf	3978,c	;volatile
  4454                           
  4455                           ;LED.c: 266:         if((diode & 0b0000001000) == 0b0000001000)
  4456  000656  A606               	btfss	LED_Control@diode,3,c
  4457  000658  D003               	goto	l2153
  4458                           
  4459                           ;LED.c: 267:         {;LED.c: 268:             LATA = LATA | ~0b11111101;
  4460  00065A  5089               	movf	3977,w,c	;volatile
  4461  00065C  0902               	iorlw	2
  4462  00065E  D002               	goto	L6
  4463  000660                     l2153:
  4464                           
  4465                           ;LED.c: 271:         {;LED.c: 272:             LATA = LATA & 0b11111101;
  4466  000660  5089               	movf	3977,w,c	;volatile
  4467  000662  0BFD               	andlw	253
  4468  000664                     L6:
  4469  000664  6E89               	movwf	3977,c	;volatile
  4470                           
  4471                           ;LED.c: 276:         if((diode & 0b0000010000) == 0b0000010000)
  4472  000666  A806               	btfss	LED_Control@diode,4,c
  4473  000668  D003               	goto	l2159
  4474                           
  4475                           ;LED.c: 277:         {;LED.c: 278:             LATA = LATA | ~0b11110111;
  4476  00066A  5089               	movf	3977,w,c	;volatile
  4477  00066C  0908               	iorlw	8
  4478  00066E  D002               	goto	L7
  4479  000670                     l2159:
  4480                           
  4481                           ;LED.c: 281:         {;LED.c: 282:             LATA = LATA & 0b11110111;
  4482  000670  5089               	movf	3977,w,c	;volatile
  4483  000672  0BF7               	andlw	247
  4484  000674                     L7:
  4485  000674  6E89               	movwf	3977,c	;volatile
  4486                           
  4487                           ;LED.c: 286:         if((diode & 0b0000100000) == 0b0000100000)
  4488  000676  AA06               	btfss	LED_Control@diode,5,c
  4489  000678  D003               	goto	l2165
  4490                           
  4491                           ;LED.c: 287:         {;LED.c: 288:             LATA = LATA | ~0b11011111;
  4492  00067A  5089               	movf	3977,w,c	;volatile
  4493  00067C  0920               	iorlw	32
  4494  00067E  D002               	goto	L8
  4495  000680                     l2165:
  4496                           
  4497                           ;LED.c: 291:         {;LED.c: 292:             LATA = LATA & 0b11011111;
  4498  000680  5089               	movf	3977,w,c	;volatile
  4499  000682  0BDF               	andlw	223
  4500  000684                     L8:
  4501  000684  6E89               	movwf	3977,c	;volatile
  4502                           
  4503                           ;LED.c: 295:         if((diode & 0b0001000000) == 0b0001000000)
  4504  000686  AC06               	btfss	LED_Control@diode,6,c
  4505  000688  D003               	goto	l2171
  4506                           
  4507                           ;LED.c: 296:         {;LED.c: 297:             LATE = LATE | ~0b11111101;
  4508  00068A  508D               	movf	3981,w,c	;volatile
  4509  00068C  0902               	iorlw	2
  4510  00068E  D002               	goto	L9
  4511  000690                     l2171:
  4512                           
  4513                           ;LED.c: 300:         {;LED.c: 301:             LATE = LATE & 0b11111101;
  4514  000690  508D               	movf	3981,w,c	;volatile
  4515  000692  0BFD               	andlw	253
  4516  000694                     L9:
  4517  000694  6E8D               	movwf	3981,c	;volatile
  4518                           
  4519                           ;LED.c: 304:         if((diode & 0b0010000000) == 0b0010000000)
  4520  000696  AE06               	btfss	LED_Control@diode,7,c
  4521  000698  D003               	goto	l2177
  4522                           
  4523                           ;LED.c: 305:         {;LED.c: 306:             LATA = LATA | ~0b01111111;
  4524  00069A  5089               	movf	3977,w,c	;volatile
  4525  00069C  0980               	iorlw	128
  4526  00069E  D002               	goto	L10
  4527  0006A0                     l2177:
  4528                           
  4529                           ;LED.c: 309:         {;LED.c: 310:             LATA = LATA & 0b01111111;
  4530  0006A0  5089               	movf	3977,w,c	;volatile
  4531  0006A2  0B7F               	andlw	127
  4532  0006A4                     L10:
  4533  0006A4  6E89               	movwf	3977,c	;volatile
  4534                           
  4535                           ;LED.c: 314:         if((diode & 0b0100000000) == 0b0100000000)
  4536  0006A6  A007               	btfss	LED_Control@diode+1,0,c
  4537  0006A8  D003               	goto	l2183
  4538                           
  4539                           ;LED.c: 315:         {;LED.c: 316:             LATD = LATD | ~0b11111110;
  4540  0006AA  508C               	movf	3980,w,c	;volatile
  4541  0006AC  0901               	iorlw	1
  4542  0006AE  D002               	goto	L11
  4543  0006B0                     l2183:
  4544                           
  4545                           ;LED.c: 319:         {;LED.c: 320:             LATD = LATD & 0b11111110;
  4546  0006B0  508C               	movf	3980,w,c	;volatile
  4547  0006B2  0BFE               	andlw	254
  4548  0006B4                     L11:
  4549  0006B4  6E8C               	movwf	3980,c	;volatile
  4550                           
  4551                           ;LED.c: 323:         if((diode & 0b1000000000) == 0b1000000000)
  4552  0006B6  A207               	btfss	LED_Control@diode+1,1,c
  4553  0006B8  D003               	goto	l2189
  4554                           
  4555                           ;LED.c: 324:         {;LED.c: 325:             LATD = LATD | ~0b11111011;
  4556  0006BA  508C               	movf	3980,w,c	;volatile
  4557  0006BC  0904               	iorlw	4
  4558  0006BE  D002               	goto	L12
  4559  0006C0                     l2189:
  4560                           
  4561                           ;LED.c: 328:         {;LED.c: 329:             LATD = LATD & 0b11111011;
  4562  0006C0  508C               	movf	3980,w,c	;volatile
  4563  0006C2  0BFB               	andlw	251
  4564  0006C4                     L12:
  4565  0006C4  6E8C               	movwf	3980,c	;volatile
  4566  0006C6                     l299:
  4567                           
  4568                           ;LED.c: 334:     if(color == GREEN)
  4569  0006C6  040A               	decf	LED_Control@color,w,c
  4570  0006C8  A4D8               	btfss	status,2,c
  4571  0006CA  0012               	return	
  4572                           
  4573                           ;LED.c: 335:     {;LED.c: 337:         if((diode & 0b0000000001) == 0b0000000001)
  4574  0006CC  A006               	btfss	LED_Control@diode,0,c
  4575  0006CE  D003               	goto	l2195
  4576                           
  4577                           ;LED.c: 338:         {;LED.c: 339:             LATD = LATD | ~0b11011111;
  4578  0006D0  508C               	movf	3980,w,c	;volatile
  4579  0006D2  0920               	iorlw	32
  4580  0006D4  D002               	goto	L13
  4581  0006D6                     l2195:
  4582                           
  4583                           ;LED.c: 342:         {;LED.c: 343:             LATD = LATD & 0b11011111;
  4584  0006D6  508C               	movf	3980,w,c	;volatile
  4585  0006D8  0BDF               	andlw	223
  4586  0006DA                     L13:
  4587  0006DA  6E8C               	movwf	3980,c	;volatile
  4588                           
  4589                           ;LED.c: 347:         if((diode & 0b0000000010) == 0b0000000010)
  4590  0006DC  A206               	btfss	LED_Control@diode,1,c
  4591  0006DE  D003               	goto	l2201
  4592                           
  4593                           ;LED.c: 348:         {;LED.c: 349:             LATD = LATD | ~0b01111111;
  4594  0006E0  508C               	movf	3980,w,c	;volatile
  4595  0006E2  0980               	iorlw	128
  4596  0006E4  D002               	goto	L14
  4597  0006E6                     l2201:
  4598                           
  4599                           ;LED.c: 352:         {;LED.c: 353:             LATD = LATD & 0b01111111;
  4600  0006E6  508C               	movf	3980,w,c	;volatile
  4601  0006E8  0B7F               	andlw	127
  4602  0006EA                     L14:
  4603  0006EA  6E8C               	movwf	3980,c	;volatile
  4604                           
  4605                           ;LED.c: 357:         if((diode & 0b0000000100) == 0b0000000100)
  4606  0006EC  A406               	btfss	LED_Control@diode,2,c
  4607  0006EE  D003               	goto	l2207
  4608                           
  4609                           ;LED.c: 358:         {;LED.c: 359:             LATB = LATB | ~0b11111101;
  4610  0006F0  508A               	movf	3978,w,c	;volatile
  4611  0006F2  0902               	iorlw	2
  4612  0006F4  D002               	goto	L15
  4613  0006F6                     l2207:
  4614                           
  4615                           ;LED.c: 362:         {;LED.c: 363:             LATB = LATB & 0b11111101;
  4616  0006F6  508A               	movf	3978,w,c	;volatile
  4617  0006F8  0BFD               	andlw	253
  4618  0006FA                     L15:
  4619  0006FA  6E8A               	movwf	3978,c	;volatile
  4620                           
  4621                           ;LED.c: 366:         if((diode & 0b0000001000) == 0b0000001000)
  4622  0006FC  A606               	btfss	LED_Control@diode,3,c
  4623  0006FE  D003               	goto	l2213
  4624                           
  4625                           ;LED.c: 367:         {;LED.c: 368:             LATA = LATA | ~0b11111011;
  4626  000700  5089               	movf	3977,w,c	;volatile
  4627  000702  0904               	iorlw	4
  4628  000704  D002               	goto	L16
  4629  000706                     l2213:
  4630                           
  4631                           ;LED.c: 371:         {;LED.c: 372:             LATA = LATA & 0b11111011;
  4632  000706  5089               	movf	3977,w,c	;volatile
  4633  000708  0BFB               	andlw	251
  4634  00070A                     L16:
  4635  00070A  6E89               	movwf	3977,c	;volatile
  4636                           
  4637                           ;LED.c: 376:         if((diode & 0b0000010000) == 0b0000010000)
  4638  00070C  A806               	btfss	LED_Control@diode,4,c
  4639  00070E  D003               	goto	l2219
  4640                           
  4641                           ;LED.c: 377:         {;LED.c: 378:             LATA = LATA | ~0b11101111;
  4642  000710  5089               	movf	3977,w,c	;volatile
  4643  000712  0910               	iorlw	16
  4644  000714  D002               	goto	L17
  4645  000716                     l2219:
  4646                           
  4647                           ;LED.c: 381:         {;LED.c: 382:             LATA = LATA & 0b11101111;
  4648  000716  5089               	movf	3977,w,c	;volatile
  4649  000718  0BEF               	andlw	239
  4650  00071A                     L17:
  4651  00071A  6E89               	movwf	3977,c	;volatile
  4652                           
  4653                           ;LED.c: 386:         if((diode & 0b0000100000) == 0b0000100000)
  4654  00071C  AA06               	btfss	LED_Control@diode,5,c
  4655  00071E  D003               	goto	l2225
  4656                           
  4657                           ;LED.c: 387:         {;LED.c: 388:             LATE = LATE | ~0b11111110;
  4658  000720  508D               	movf	3981,w,c	;volatile
  4659  000722  0901               	iorlw	1
  4660  000724  D002               	goto	L18
  4661  000726                     l2225:
  4662                           
  4663                           ;LED.c: 391:         {;LED.c: 392:             LATE = LATE & 0b11111110;
  4664  000726  508D               	movf	3981,w,c	;volatile
  4665  000728  0BFE               	andlw	254
  4666  00072A                     L18:
  4667  00072A  6E8D               	movwf	3981,c	;volatile
  4668                           
  4669                           ;LED.c: 396:         if((diode & 0b0001000000) == 0b0001000000)
  4670  00072C  AC06               	btfss	LED_Control@diode,6,c
  4671  00072E  D003               	goto	l2231
  4672                           
  4673                           ;LED.c: 397:         {;LED.c: 398:             LATE = LATE | ~0b11111011;
  4674  000730  508D               	movf	3981,w,c	;volatile
  4675  000732  0904               	iorlw	4
  4676  000734  D002               	goto	L19
  4677  000736                     l2231:
  4678                           
  4679                           ;LED.c: 401:         {;LED.c: 402:             LATE = LATE & 0b11111011;
  4680  000736  508D               	movf	3981,w,c	;volatile
  4681  000738  0BFB               	andlw	251
  4682  00073A                     L19:
  4683  00073A  6E8D               	movwf	3981,c	;volatile
  4684                           
  4685                           ;LED.c: 405:         if((diode & 0b0010000000) == 0b0010000000)
  4686  00073C  AE06               	btfss	LED_Control@diode,7,c
  4687  00073E  D003               	goto	l2237
  4688                           
  4689                           ;LED.c: 406:         {;LED.c: 407:             LATA = LATA | ~0b10111111;
  4690  000740  5089               	movf	3977,w,c	;volatile
  4691  000742  0940               	iorlw	64
  4692  000744  D002               	goto	L20
  4693  000746                     l2237:
  4694                           
  4695                           ;LED.c: 410:         {;LED.c: 411:             LATA = LATA & 0b10111111;
  4696  000746  5089               	movf	3977,w,c	;volatile
  4697  000748  0BBF               	andlw	191
  4698  00074A                     L20:
  4699  00074A  6E89               	movwf	3977,c	;volatile
  4700                           
  4701                           ;LED.c: 414:         if((diode & 0b0100000000) == 0b0100000000)
  4702  00074C  A007               	btfss	LED_Control@diode+1,0,c
  4703  00074E  D003               	goto	l2243
  4704                           
  4705                           ;LED.c: 415:         {;LED.c: 416:             LATD = LATD | ~0b11111101;
  4706  000750  508C               	movf	3980,w,c	;volatile
  4707  000752  0902               	iorlw	2
  4708  000754  D002               	goto	L21
  4709  000756                     l2243:
  4710                           
  4711                           ;LED.c: 419:         {;LED.c: 420:             LATD = LATD & 0b11111101;
  4712  000756  508C               	movf	3980,w,c	;volatile
  4713  000758  0BFD               	andlw	253
  4714  00075A                     L21:
  4715  00075A  6E8C               	movwf	3980,c	;volatile
  4716                           
  4717                           ;LED.c: 423:         if((diode & 0b1000000000) == 0b1000000000)
  4718  00075C  A207               	btfss	LED_Control@diode+1,1,c
  4719  00075E  D004               	goto	l2249
  4720                           
  4721                           ;LED.c: 424:         {;LED.c: 425:             LATD = LATD | ~0b11110111;
  4722  000760  508C               	movf	3980,w,c	;volatile
  4723  000762  0908               	iorlw	8
  4724  000764  6E8C               	movwf	3980,c	;volatile
  4725                           
  4726                           ;LED.c: 426:         }
  4727  000766  0012               	return	
  4728  000768                     l2249:
  4729                           
  4730                           ;LED.c: 428:         {;LED.c: 429:             LATD = LATD &0b11110111;
  4731  000768  508C               	movf	3980,w,c	;volatile
  4732  00076A  0BF7               	andlw	247
  4733  00076C  6E8C               	movwf	3980,c	;volatile
  4734  00076E  0012               	return		;funcret
  4735  000770                     __end_of_LED_Control:
  4736                           	opt callstack 0
  4737                           
  4738 ;; *************** function _INI_GlobalInterrupt *****************
  4739 ;; Defined at:
  4740 ;;		line 74 in file "INI.c"
  4741 ;; Parameters:    Size  Location     Type
  4742 ;;		None
  4743 ;; Auto vars:     Size  Location     Type
  4744 ;;		None
  4745 ;; Return value:  Size  Location     Type
  4746 ;;                  1    wreg      void 
  4747 ;; Registers used:
  4748 ;;		None
  4749 ;; Tracked objects:
  4750 ;;		On entry : 0/0
  4751 ;;		On exit  : 0/0
  4752 ;;		Unchanged: 0/0
  4753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4758 ;;Total ram usage:        0 bytes
  4759 ;; Hardware stack levels used:    1
  4760 ;; Hardware stack levels required when called:    3
  4761 ;; This function calls:
  4762 ;;		Nothing
  4763 ;; This function is called by:
  4764 ;;		_INI_All
  4765 ;; This function uses a non-reentrant model
  4766 ;;
  4767                           
  4768                           	psect	text42
  4769  000FA8                     __ptext42:
  4770                           	opt callstack 0
  4771  000FA8                     _INI_GlobalInterrupt:
  4772                           	opt callstack 26
  4773                           
  4774                           ;INI.c: 76: INTCONbits.GIEH=1;
  4775                           
  4776                           ;incstack = 0
  4777  000FA8  8EF2               	bsf	4082,7,c	;volatile
  4778                           
  4779                           ;INI.c: 77: INTCONbits.GIEL=1;
  4780  000FAA  8CF2               	bsf	4082,6,c	;volatile
  4781                           
  4782                           ;INI.c: 78: RCONbits.IPEN=1;
  4783  000FAC  8ED0               	bsf	4048,7,c	;volatile
  4784                           
  4785                           ;INI.c: 79: IPEN =1;
  4786  000FAE  8ED0               	bsf	4048,7,c	;volatile
  4787                           
  4788                           ;INI.c: 81: PEIE=1;
  4789  000FB0  8CF2               	bsf	4082,6,c	;volatile
  4790                           
  4791                           ;INI.c: 82: TMR1IP = 0;
  4792  000FB2  909F               	bcf	3999,0,c	;volatile
  4793  000FB4  0012               	return		;funcret
  4794  000FB6                     __end_of_INI_GlobalInterrupt:
  4795                           	opt callstack 0
  4796                           
  4797 ;; *************** function _CAN_Setup *****************
  4798 ;; Defined at:
  4799 ;;		line 22 in file "CAN.c"
  4800 ;; Parameters:    Size  Location     Type
  4801 ;;		None
  4802 ;; Auto vars:     Size  Location     Type
  4803 ;;		None
  4804 ;; Return value:  Size  Location     Type
  4805 ;;                  1    wreg      void 
  4806 ;; Registers used:
  4807 ;;		wreg, status,2, status,0, cstack
  4808 ;; Tracked objects:
  4809 ;;		On entry : 0/0
  4810 ;;		On exit  : 0/0
  4811 ;;		Unchanged: 0/0
  4812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4815 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4816 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4817 ;;Total ram usage:        1 bytes
  4818 ;; Hardware stack levels used:    1
  4819 ;; Hardware stack levels required when called:    4
  4820 ;; This function calls:
  4821 ;;		_CAN_SetupClock
  4822 ;;		_CAN_SetupMask
  4823 ;; This function is called by:
  4824 ;;		_INI_All
  4825 ;; This function uses a non-reentrant model
  4826 ;;
  4827                           
  4828                           	psect	text43
  4829  000ABC                     __ptext43:
  4830                           	opt callstack 0
  4831  000ABC                     _CAN_Setup:
  4832                           	opt callstack 25
  4833                           
  4834                           ;CAN.c: 27:     CANCON = 0x80;
  4835                           
  4836                           ;incstack = 0
  4837  000ABC  0E80               	movlw	128
  4838  000ABE  6E6F               	movwf	3951,c	;volatile
  4839  000AC0                     l2541:
  4840                           
  4841                           ;CAN.c: 28:     while((CANSTAT & 0xE0)!=0x80)
  4842  000AC0  506E               	movf	3950,w,c	;volatile
  4843  000AC2  0BE0               	andlw	224
  4844  000AC4  0A80               	xorlw	128
  4845  000AC6  A4D8               	btfss	status,2,c
  4846  000AC8  D7FB               	goto	l2541
  4847                           
  4848                           ;CAN.c: 33:     BSEL0 = 0;
  4849  000ACA  0E00               	movlw	0
  4850  000ACC  010D               	movlb	13	; () banked
  4851  000ACE  6FF8               	movwf	248,b	;volatile
  4852                           
  4853                           ;CAN.c: 34:     TXB0CON = 0;
  4854  000AD0  0E00               	movlw	0
  4855  000AD2  010F               	movlb	15	; () banked
  4856  000AD4  6F40               	movwf	64,b	;volatile
  4857                           
  4858                           ;CAN.c: 35:     RXB0CON = 0;
  4859  000AD6  0E00               	movlw	0
  4860  000AD8  6E60               	movwf	3936,c	;volatile
  4861                           
  4862                           ;CAN.c: 36:     RXB1CON = 0;
  4863  000ADA  0E00               	movlw	0
  4864  000ADC  6F50               	movwf	80,b	;volatile
  4865                           
  4866                           ;CAN.c: 37:     B0CON = 0;
  4867  000ADE  0E00               	movlw	0
  4868  000AE0  010E               	movlb	14	; () banked
  4869  000AE2  6F20               	movwf	32,b	;volatile
  4870                           
  4871                           ;CAN.c: 38:     B1CON = 0;
  4872  000AE4  0E00               	movlw	0
  4873  000AE6  6F30               	movwf	48,b	;volatile
  4874                           
  4875                           ;CAN.c: 39:     PIE3 = 0;
  4876  000AE8  0E00               	movlw	0
  4877  000AEA  6EA3               	movwf	4003,c	;volatile
  4878                           
  4879                           ; BSR set to: 14
  4880                           ;CAN.c: 40:     IPR3 = 0xFF;
  4881  000AEC  68A5               	setf	4005,c	;volatile
  4882                           
  4883                           ;CAN.c: 41:     PIR3 = 0x00;
  4884  000AEE  0E00               	movlw	0
  4885  000AF0  6EA4               	movwf	4004,c	;volatile
  4886                           
  4887                           ;CAN.c: 42:     BIE0 = 0;
  4888  000AF2  0E00               	movlw	0
  4889  000AF4  010D               	movlb	13	; () banked
  4890  000AF6  6FFA               	movwf	250,b	;volatile
  4891                           
  4892                           ;CAN.c: 45:     ECANCON = 0x90;
  4893  000AF8  0E90               	movlw	144
  4894  000AFA  6E77               	movwf	3959,c	;volatile
  4895                           
  4896                           ; BSR set to: 13
  4897                           ;CAN.c: 48:     CAN_SetupClock();
  4898  000AFC  EC5F  F007         	call	_CAN_SetupClock	;wreg free
  4899                           
  4900                           ;CAN.c: 51:     CAN_SetupMask();
  4901  000B00  EC29  F005         	call	_CAN_SetupMask	;wreg free
  4902                           
  4903                           ;CAN.c: 53:     CIOCON = 0xff;
  4904  000B04  6873               	setf	3955,c	;volatile
  4905                           
  4906                           ;CAN.c: 59:     CANCON = 0x00;
  4907  000B06  0E00               	movlw	0
  4908  000B08  6E6F               	movwf	3951,c	;volatile
  4909  000B0A                     l2555:
  4910                           
  4911                           ;CAN.c: 60:     while((CANSTAT & 0xE0) != 0x00)
  4912  000B0A  CF6E F006          	movff	3950,??_CAN_Setup	;volatile
  4913  000B0E  0EE0               	movlw	224
  4914  000B10  1606               	andwf	??_CAN_Setup,f,c
  4915  000B12  B4D8               	btfsc	status,2,c
  4916  000B14  0012               	return	
  4917  000B16  D7F9               	goto	l2555
  4918  000B18                     __end_of_CAN_Setup:
  4919                           	opt callstack 0
  4920                           
  4921 ;; *************** function _CAN_SetupMask *****************
  4922 ;; Defined at:
  4923 ;;		line 81 in file "CAN.c"
  4924 ;; Parameters:    Size  Location     Type
  4925 ;;		None
  4926 ;; Auto vars:     Size  Location     Type
  4927 ;;		None
  4928 ;; Return value:  Size  Location     Type
  4929 ;;                  1    wreg      void 
  4930 ;; Registers used:
  4931 ;;		wreg, status,2, status,0
  4932 ;; Tracked objects:
  4933 ;;		On entry : 0/0
  4934 ;;		On exit  : 0/0
  4935 ;;		Unchanged: 0/0
  4936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4940 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4941 ;;Total ram usage:        0 bytes
  4942 ;; Hardware stack levels used:    1
  4943 ;; Hardware stack levels required when called:    3
  4944 ;; This function calls:
  4945 ;;		Nothing
  4946 ;; This function is called by:
  4947 ;;		_CAN_Setup
  4948 ;; This function uses a non-reentrant model
  4949 ;;
  4950                           
  4951                           	psect	text44
  4952  000A52                     __ptext44:
  4953                           	opt callstack 0
  4954  000A52                     _CAN_SetupMask:
  4955                           	opt callstack 25
  4956                           
  4957                           ;CAN.c: 83:     MSEL0 = 0x50;
  4958                           
  4959                           ;incstack = 0
  4960  000A52  0E50               	movlw	80
  4961  000A54  010D               	movlb	13	; () banked
  4962  000A56  6FF0               	movwf	240,b	;volatile
  4963                           
  4964                           ;CAN.c: 84:     MSEL1 = 0x55;
  4965  000A58  0E55               	movlw	85
  4966  000A5A  6FF1               	movwf	241,b	;volatile
  4967                           
  4968                           ;CAN.c: 85:     MSEL2 = 0x55;
  4969  000A5C  0E55               	movlw	85
  4970  000A5E  6FF2               	movwf	242,b	;volatile
  4971                           
  4972                           ;CAN.c: 86:     MSEL3 = 0x55;
  4973  000A60  0E55               	movlw	85
  4974  000A62  6FF3               	movwf	243,b	;volatile
  4975                           
  4976                           ;CAN.c: 89:     RXM0SIDH = 0b00000000;
  4977  000A64  0E00               	movlw	0
  4978  000A66  010F               	movlb	15	; () banked
  4979  000A68  6F18               	movwf	24,b	;volatile
  4980                           
  4981                           ;CAN.c: 90:     RXM0SIDL = 0b00001011;
  4982  000A6A  0E0B               	movlw	11
  4983  000A6C  6F19               	movwf	25,b	;volatile
  4984                           
  4985                           ; BSR set to: 15
  4986                           ;CAN.c: 91:     RXM0EIDH = 0xFF;
  4987  000A6E  691A               	setf	26,b	;volatile
  4988                           
  4989                           ; BSR set to: 15
  4990                           ;CAN.c: 92:     RXM0EIDL = 0xFF;
  4991  000A70  691B               	setf	27,b	;volatile
  4992                           
  4993                           ; BSR set to: 15
  4994                           ;CAN.c: 95:     RXM1SIDH = 0xFF;
  4995  000A72  691C               	setf	28,b	;volatile
  4996                           
  4997                           ; BSR set to: 15
  4998                           ;CAN.c: 96:     RXM1SIDL = 0xFF;
  4999  000A74  691D               	setf	29,b	;volatile
  5000                           
  5001                           ;CAN.c: 97:     RXM1EIDH = 0;
  5002  000A76  0E00               	movlw	0
  5003  000A78  6F1E               	movwf	30,b	;volatile
  5004                           
  5005                           ;CAN.c: 98:     RXM1EIDL = 0;
  5006  000A7A  0E00               	movlw	0
  5007  000A7C  6F1F               	movwf	31,b	;volatile
  5008                           
  5009                           ;CAN.c: 101:     RXF0SIDH = 0x00;
  5010  000A7E  0E00               	movlw	0
  5011  000A80  6F00               	movwf	0,b	;volatile
  5012                           
  5013                           ;CAN.c: 102:     RXF0SIDL = 0x01;
  5014  000A82  0E01               	movlw	1
  5015  000A84  6F01               	movwf	1,b	;volatile
  5016                           
  5017                           ; BSR set to: 15
  5018                           ;CAN.c: 103:     RXF0SIDLbits.EXIDEN = 1;
  5019  000A86  8701               	bsf	1,3,b	;volatile
  5020                           
  5021                           ;CAN.c: 104:     RXF0EIDH = (BYTE)(DaneCan.adresCAN>>8);
  5022  000A88  503A               	movf	_DaneCan+3,w,c
  5023  000A8A  6F02               	movwf	2,b	;volatile
  5024                           
  5025                           ; BSR set to: 15
  5026                           ;CAN.c: 105:  RXF0EIDH |= 0x40;
  5027  000A8C  8D02               	bsf	2,6,b	;volatile
  5028                           
  5029                           ; BSR set to: 15
  5030                           ;CAN.c: 106:     RXF0EIDL = (BYTE)DaneCan.adresCAN;
  5031  000A8E  C039  FF03         	movff	_DaneCan+2,3843	;volatile
  5032                           
  5033                           ; BSR set to: 15
  5034                           ;CAN.c: 108:     RXF1SIDH = 0x00;
  5035  000A92  0E00               	movlw	0
  5036  000A94  6F04               	movwf	4,b	;volatile
  5037                           
  5038                           ; BSR set to: 15
  5039                           ;CAN.c: 109:     RXF1SIDL = 0x01;
  5040  000A96  0E01               	movlw	1
  5041  000A98  6F05               	movwf	5,b	;volatile
  5042                           
  5043                           ; BSR set to: 15
  5044                           ;CAN.c: 110:     RXF1SIDLbits.EXIDEN = 1;
  5045  000A9A  8705               	bsf	5,3,b	;volatile
  5046                           
  5047                           ; BSR set to: 15
  5048                           ;CAN.c: 111:     RXF1EIDH = 0x7F;
  5049  000A9C  0E7F               	movlw	127
  5050  000A9E  6F06               	movwf	6,b	;volatile
  5051                           
  5052                           ; BSR set to: 15
  5053                           ;CAN.c: 112:     RXF1EIDL = 0xFF;
  5054  000AA0  6907               	setf	7,b	;volatile
  5055                           
  5056                           ; BSR set to: 15
  5057                           ;CAN.c: 115:     RXF2SIDH = 0;
  5058  000AA2  0E00               	movlw	0
  5059  000AA4  6F08               	movwf	8,b	;volatile
  5060                           
  5061                           ; BSR set to: 15
  5062                           ;CAN.c: 116:     RXF2SIDL = 0x20;
  5063  000AA6  0E20               	movlw	32
  5064  000AA8  6F09               	movwf	9,b	;volatile
  5065                           
  5066                           ; BSR set to: 15
  5067                           ;CAN.c: 117:     RXF2SIDLbits.EXIDEN = 1;
  5068  000AAA  8709               	bsf	9,3,b	;volatile
  5069                           
  5070                           ; BSR set to: 15
  5071                           ;CAN.c: 118:     RXF2EIDH = 0;
  5072  000AAC  0E00               	movlw	0
  5073  000AAE  6F0A               	movwf	10,b	;volatile
  5074                           
  5075                           ; BSR set to: 15
  5076                           ;CAN.c: 119:     RXF2EIDL = 0;
  5077  000AB0  0E00               	movlw	0
  5078  000AB2  6F0B               	movwf	11,b	;volatile
  5079                           
  5080                           ; BSR set to: 15
  5081                           ;CAN.c: 127:     RXFCON0 = 0x07;
  5082  000AB4  0E07               	movlw	7
  5083  000AB6  010D               	movlb	13	; () banked
  5084  000AB8  6FD4               	movwf	212,b	;volatile
  5085                           
  5086                           ; BSR set to: 13
  5087  000ABA  0012               	return		;funcret
  5088  000ABC                     __end_of_CAN_SetupMask:
  5089                           	opt callstack 0
  5090                           
  5091 ;; *************** function _CAN_SetupClock *****************
  5092 ;; Defined at:
  5093 ;;		line 136 in file "CAN.c"
  5094 ;; Parameters:    Size  Location     Type
  5095 ;;		None
  5096 ;; Auto vars:     Size  Location     Type
  5097 ;;		None
  5098 ;; Return value:  Size  Location     Type
  5099 ;;                  1    wreg      void 
  5100 ;; Registers used:
  5101 ;;		None
  5102 ;; Tracked objects:
  5103 ;;		On entry : 0/0
  5104 ;;		On exit  : 0/0
  5105 ;;		Unchanged: 0/0
  5106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5110 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5111 ;;Total ram usage:        0 bytes
  5112 ;; Hardware stack levels used:    1
  5113 ;; Hardware stack levels required when called:    3
  5114 ;; This function calls:
  5115 ;;		Nothing
  5116 ;; This function is called by:
  5117 ;;		_CAN_Setup
  5118 ;; This function uses a non-reentrant model
  5119 ;;
  5120                           
  5121                           	psect	text45
  5122  000EBE                     __ptext45:
  5123                           	opt callstack 0
  5124  000EBE                     _CAN_SetupClock:
  5125                           	opt callstack 25
  5126                           
  5127                           ;CAN.c: 138:     BRGCON1bits.BRP0 = (((32000000/4)/(2*20*50000))-1) & 0b000001;
  5128                           
  5129                           ; BSR set to: 13
  5130                           ;incstack = 0
  5131  000EBE  8070               	bsf	3952,0,c	;volatile
  5132                           
  5133                           ;CAN.c: 139:     BRGCON1bits.BRP1 = ((((32000000/4)/(2*20*50000))-1) >> 1) & 0b000001;
  5134  000EC0  8270               	bsf	3952,1,c	;volatile
  5135                           
  5136                           ;CAN.c: 140:     BRGCON1bits.BRP2 = ((((32000000/4)/(2*20*50000))-1) >> 2) & 0b000001;
  5137  000EC2  9470               	bcf	3952,2,c	;volatile
  5138                           
  5139                           ;CAN.c: 141:     BRGCON1bits.BRP3 = ((((32000000/4)/(2*20*50000))-1) >> 3) & 0b000001;
  5140  000EC4  9670               	bcf	3952,3,c	;volatile
  5141                           
  5142                           ;CAN.c: 142:     BRGCON1bits.BRP4 = ((((32000000/4)/(2*20*50000))-1) >> 4) & 0b000001;
  5143  000EC6  9870               	bcf	3952,4,c	;volatile
  5144                           
  5145                           ;CAN.c: 143:     BRGCON1bits.BRP5 = ((((32000000/4)/(2*20*50000))-1) >> 5) & 0b000001;
  5146  000EC8  9A70               	bcf	3952,5,c	;volatile
  5147                           
  5148                           ;CAN.c: 145:     BRGCON1bits.SJW0 = 1;
  5149  000ECA  8C70               	bsf	3952,6,c	;volatile
  5150                           
  5151                           ;CAN.c: 146:     BRGCON1bits.SJW1 = 1;
  5152  000ECC  8E70               	bsf	3952,7,c	;volatile
  5153                           
  5154                           ;CAN.c: 148:     BRGCON2bits.SEG1PH0 = 1;
  5155  000ECE  8671               	bsf	3953,3,c	;volatile
  5156                           
  5157                           ;CAN.c: 149:     BRGCON2bits.SEG1PH1 = 1;
  5158  000ED0  8871               	bsf	3953,4,c	;volatile
  5159                           
  5160                           ;CAN.c: 150:     BRGCON2bits.SEG1PH2 = 1;
  5161  000ED2  8A71               	bsf	3953,5,c	;volatile
  5162                           
  5163                           ;CAN.c: 152:     BRGCON2bits.PRSEG2 = 1;
  5164  000ED4  8471               	bsf	3953,2,c	;volatile
  5165                           
  5166                           ;CAN.c: 153:     BRGCON2bits.PRSEG1 = 0;
  5167  000ED6  9271               	bcf	3953,1,c	;volatile
  5168                           
  5169                           ;CAN.c: 154:     BRGCON2bits.PRSEG0 = 0;
  5170  000ED8  9071               	bcf	3953,0,c	;volatile
  5171                           
  5172                           ;CAN.c: 156:     BRGCON3bits.SEG2PH0 = 1;
  5173  000EDA  8072               	bsf	3954,0,c	;volatile
  5174                           
  5175                           ;CAN.c: 157:     BRGCON3bits.SEG2PH1 = 0;
  5176  000EDC  9272               	bcf	3954,1,c	;volatile
  5177                           
  5178                           ;CAN.c: 158:     BRGCON3bits.SEG2PH2 = 1;
  5179  000EDE  8472               	bsf	3954,2,c	;volatile
  5180                           
  5181                           ;CAN.c: 160:     BRGCON2bits.SAM = 1;
  5182  000EE0  8C71               	bsf	3953,6,c	;volatile
  5183                           
  5184                           ;CAN.c: 161:     BRGCON2bits.SEG2PHTS = 1;
  5185  000EE2  8E71               	bsf	3953,7,c	;volatile
  5186  000EE4  0012               	return		;funcret
  5187  000EE6                     __end_of_CAN_SetupClock:
  5188                           	opt callstack 0
  5189                           
  5190 ;; *************** function _ISR_low *****************
  5191 ;; Defined at:
  5192 ;;		line 16 in file "ISR.c"
  5193 ;; Parameters:    Size  Location     Type
  5194 ;;		None
  5195 ;; Auto vars:     Size  Location     Type
  5196 ;;		None
  5197 ;; Return value:  Size  Location     Type
  5198 ;;                  1    wreg      void 
  5199 ;; Registers used:
  5200 ;;		wreg, status,2, status,0, cstack
  5201 ;; Tracked objects:
  5202 ;;		On entry : 0/0
  5203 ;;		On exit  : 0/0
  5204 ;;		Unchanged: 0/0
  5205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5208 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5209 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5210 ;;Total ram usage:        3 bytes
  5211 ;; Hardware stack levels used:    1
  5212 ;; Hardware stack levels required when called:    2
  5213 ;; This function calls:
  5214 ;;		_TMR1_Timer_reset
  5215 ;;		i1_TMR1_Update_flag_Set
  5216 ;; This function is called by:
  5217 ;;		Interrupt level 1
  5218 ;; This function uses a non-reentrant model
  5219 ;;
  5220                           
  5221                           	psect	intcodelo
  5222  000018                     __pintcodelo:
  5223                           	opt callstack 0
  5224  000018                     _ISR_low:
  5225                           	opt callstack 24
  5226                           
  5227                           ;incstack = 0
  5228  000018  804D               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  5229  00001A  CFD8 F003          	movff	status,??_ISR_low
  5230  00001E  CFE8 F004          	movff	wreg,??_ISR_low+1
  5231  000022  CFE0 F005          	movff	bsr,??_ISR_low+2
  5232                           
  5233                           ;ISR.c: 21:     if(TMR1IF==1)
  5234  000026  A09E               	btfss	3998,0,c	;volatile
  5235  000028  D011               	goto	i1l547
  5236                           
  5237                           ;ISR.c: 22:         {;ISR.c: 23:             TMR1_Timer_reset();
  5238  00002A  EC73  F007         	call	_TMR1_Timer_reset	;wreg free
  5239                           
  5240                           ;ISR.c: 26:             static BYTE ramkaStanuU8=0;;ISR.c: 29:             TMR1_Update_f
      +                          lag_Set(1);
  5241  00002E  0E00               	movlw	0
  5242  000030  6E02               	movwf	i1TMR1_Update_flag_Set@a+1,c
  5243  000032  0E01               	movlw	1
  5244  000034  6E01               	movwf	i1TMR1_Update_flag_Set@a,c
  5245  000036  EC08  F008         	call	i1_TMR1_Update_flag_Set	;wreg free
  5246                           
  5247                           ;ISR.c: 31:             DetectorLedRadar.Flags.obsluzWeWy = 1;
  5248  00003A  803B               	bsf	_DetectorLedRadar,0,c
  5249                           
  5250                           ;ISR.c: 33:             if(++ramkaStanuU8 > (2*10))
  5251  00003C  2A42               	incf	ISR_low@ramkaStanuU8,f,c
  5252  00003E  0E14               	movlw	20
  5253  000040  6442               	cpfsgt	ISR_low@ramkaStanuU8,c
  5254  000042  D003               	goto	i1l2821
  5255                           
  5256                           ;ISR.c: 34:                 {;ISR.c: 35:                     ramkaStanuU8 = 0;
  5257  000044  0E00               	movlw	0
  5258  000046  6E42               	movwf	ISR_low@ramkaStanuU8,c
  5259                           
  5260                           ;ISR.c: 36:                     DaneCan.Flags.wyslijRamkeStanu = 1;
  5261  000048  8037               	bsf	_DaneCan,0,c
  5262  00004A                     i1l2821:
  5263                           
  5264                           ;ISR.c: 41:             TMR1IF=0;
  5265  00004A  909E               	bcf	3998,0,c	;volatile
  5266  00004C                     i1l547:
  5267  00004C  C005  FFE0         	movff	??_ISR_low+2,bsr
  5268  000050  C004  FFE8         	movff	??_ISR_low+1,wreg
  5269  000054  C003  FFD8         	movff	??_ISR_low,status
  5270  000058  904D               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  5271  00005A  0010               	retfie	
  5272  00005C                     __end_of_ISR_low:
  5273                           	opt callstack 0
  5274                           
  5275 ;; *************** function i1_TMR1_Update_flag_Set *****************
  5276 ;; Defined at:
  5277 ;;		line 32 in file "TMR1.c"
  5278 ;; Parameters:    Size  Location     Type
  5279 ;;  a               2    0[COMRAM] unsigned int 
  5280 ;; Auto vars:     Size  Location     Type
  5281 ;;		None
  5282 ;; Return value:  Size  Location     Type
  5283 ;;                  1    wreg      void 
  5284 ;; Registers used:
  5285 ;;		None
  5286 ;; Tracked objects:
  5287 ;;		On entry : 0/0
  5288 ;;		On exit  : 0/0
  5289 ;;		Unchanged: 0/0
  5290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5291 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5294 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5295 ;;Total ram usage:        2 bytes
  5296 ;; Hardware stack levels used:    1
  5297 ;; Hardware stack levels required when called:    1
  5298 ;; This function calls:
  5299 ;;		Nothing
  5300 ;; This function is called by:
  5301 ;;		_ISR_low
  5302 ;; This function uses a non-reentrant model
  5303 ;;
  5304                           
  5305                           	psect	text47
  5306  001010                     __ptext47:
  5307                           	opt callstack 0
  5308  001010                     i1_TMR1_Update_flag_Set:
  5309                           	opt callstack 24
  5310                           
  5311                           ;TMR1.c: 32: void TMR1_Update_flag_Set(UINT a);TMR1.c: 33: {;TMR1.c: 34:     TMR1_Update
      +                          _flag = a;
  5312                           
  5313                           ;incstack = 0
  5314  001010  C001  F03E         	movff	i1TMR1_Update_flag_Set@a,_TMR1_Update_flag
  5315  001014  C002  F03F         	movff	i1TMR1_Update_flag_Set@a+1,_TMR1_Update_flag+1
  5316  001018  0012               	return		;funcret
  5317  00101A                     __end_ofi1_TMR1_Update_flag_Set:
  5318                           	opt callstack 0
  5319                           
  5320 ;; *************** function _TMR1_Timer_reset *****************
  5321 ;; Defined at:
  5322 ;;		line 63 in file "TMR1.c"
  5323 ;; Parameters:    Size  Location     Type
  5324 ;;		None
  5325 ;; Auto vars:     Size  Location     Type
  5326 ;;  t1H             1    1[COMRAM] volatile unsigned char 
  5327 ;;  t1L             1    0[COMRAM] volatile unsigned char 
  5328 ;; Return value:  Size  Location     Type
  5329 ;;                  1    wreg      unsigned char 
  5330 ;; Registers used:
  5331 ;;		wreg, status,2, status,0
  5332 ;; Tracked objects:
  5333 ;;		On entry : 0/0
  5334 ;;		On exit  : 0/0
  5335 ;;		Unchanged: 0/0
  5336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5338 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5340 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5341 ;;Total ram usage:        2 bytes
  5342 ;; Hardware stack levels used:    1
  5343 ;; Hardware stack levels required when called:    1
  5344 ;; This function calls:
  5345 ;;		Nothing
  5346 ;; This function is called by:
  5347 ;;		_ISR_low
  5348 ;; This function uses a non-reentrant model
  5349 ;;
  5350                           
  5351                           	psect	text48
  5352  000EE6                     __ptext48:
  5353                           	opt callstack 0
  5354  000EE6                     _TMR1_Timer_reset:
  5355                           	opt callstack 24
  5356                           
  5357                           ;TMR1.c: 69:     volatile BYTE t1L = 0, t1H = 0;
  5358                           
  5359                           ;incstack = 0
  5360  000EE6  0E00               	movlw	0
  5361  000EE8  6E01               	movwf	TMR1_Timer_reset@t1L,c	;volatile
  5362  000EEA  0E00               	movlw	0
  5363  000EEC  6E02               	movwf	TMR1_Timer_reset@t1H,c	;volatile
  5364                           
  5365                           ;TMR1.c: 70:     t1L = TMR1L;
  5366  000EEE  CFCE F001          	movff	4046,TMR1_Timer_reset@t1L	;volatile
  5367                           
  5368                           ;TMR1.c: 71:     t1H = TMR1H;
  5369  000EF2  CFCF F002          	movff	4047,TMR1_Timer_reset@t1H	;volatile
  5370                           
  5371                           ;TMR1.c: 72:     __nop();
  5372  000EF6  F000               	nop	
  5373                           
  5374                           ;TMR1.c: 73:     t1H += (UINT8)((0xFFFF - (((8000000/8)/4)/10)) >> 8);
  5375  000EF8  0E9E               	movlw	158
  5376  000EFA  2602               	addwf	TMR1_Timer_reset@t1H,f,c	;volatile
  5377                           
  5378                           ;TMR1.c: 74:     t1L += (UINT8)((0xFFFF - (((8000000/8)/4)/10)) & 0xFF);
  5379  000EFC  0E57               	movlw	87
  5380  000EFE  2601               	addwf	TMR1_Timer_reset@t1L,f,c	;volatile
  5381                           
  5382                           ;TMR1.c: 75:     TMR1H = t1H;
  5383  000F00  C002  FFCF         	movff	TMR1_Timer_reset@t1H,4047	;volatile
  5384                           
  5385                           ;TMR1.c: 76:     TMR1L = 0x5B;
  5386  000F04  0E5B               	movlw	91
  5387  000F06  6ECE               	movwf	4046,c	;volatile
  5388  000F08  0012               	return		;funcret
  5389  000F0A                     __end_of_TMR1_Timer_reset:
  5390                           	opt callstack 0
  5391                           
  5392 ;; *************** function _ISR_high *****************
  5393 ;; Defined at:
  5394 ;;		line 53 in file "ISR.c"
  5395 ;; Parameters:    Size  Location     Type
  5396 ;;		None
  5397 ;; Auto vars:     Size  Location     Type
  5398 ;;		None
  5399 ;; Return value:  Size  Location     Type
  5400 ;;                  1    wreg      void 
  5401 ;; Registers used:
  5402 ;;		None
  5403 ;; Tracked objects:
  5404 ;;		On entry : 0/0
  5405 ;;		On exit  : 0/0
  5406 ;;		Unchanged: 0/0
  5407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5411 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5412 ;;Total ram usage:        0 bytes
  5413 ;; Hardware stack levels used:    1
  5414 ;; This function calls:
  5415 ;;		Nothing
  5416 ;; This function is called by:
  5417 ;;		Interrupt level 2
  5418 ;; This function uses a non-reentrant model
  5419 ;;
  5420                           
  5421                           	psect	intcode
  5422  000008                     __pintcode:
  5423                           	opt callstack 0
  5424  000008                     _ISR_high:
  5425                           	opt callstack 24
  5426                           
  5427                           ;incstack = 0
  5428  000008  824D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  5429  00000A  ED16  F008         	call	int_func,f	;refresh shadow registers
  5430                           
  5431                           	psect	intcode_body
  5432  00102C                     __pintcode_body:
  5433                           	opt callstack 24
  5434  00102C                     int_func:
  5435                           	opt callstack 24
  5436  00102C  0006               	pop		; remove dummy address from shadow register refresh
  5437  00102E  924D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  5438  001030  0011               	retfie		f
  5439  001032                     __end_of_ISR_high:
  5440                           	opt callstack 0
  5441  0000                     
  5442                           	psect	rparam
  5443  0000                     
  5444                           	psect	temp
  5445  00004D                     btemp:
  5446                           	opt callstack 0
  5447  00004D                     	ds	1
  5448  0000                     int$flags	set	btemp
  5449  0000                     wtemp8	set	btemp+1
  5450  0000                     ttemp5	set	btemp+1
  5451  0000                     ttemp6	set	btemp+4
  5452  0000                     ttemp7	set	btemp+8
  5453                           tosu	equ	0xFFF
  5454                           tosh	equ	0xFFE
  5455                           tosl	equ	0xFFD
  5456                           stkptr	equ	0xFFC
  5457                           pclatu	equ	0xFFB
  5458                           pclath	equ	0xFFA
  5459                           pcl	equ	0xFF9
  5460                           tblptru	equ	0xFF8
  5461                           tblptrh	equ	0xFF7
  5462                           tblptrl	equ	0xFF6
  5463                           tablat	equ	0xFF5
  5464                           prodh	equ	0xFF4
  5465                           prodl	equ	0xFF3
  5466                           indf0	equ	0xFEF
  5467                           postinc0	equ	0xFEE
  5468                           postdec0	equ	0xFED
  5469                           preinc0	equ	0xFEC
  5470                           plusw0	equ	0xFEB
  5471                           fsr0h	equ	0xFEA
  5472                           fsr0l	equ	0xFE9
  5473                           wreg	equ	0xFE8
  5474                           indf1	equ	0xFE7
  5475                           postinc1	equ	0xFE6
  5476                           postdec1	equ	0xFE5
  5477                           preinc1	equ	0xFE4
  5478                           plusw1	equ	0xFE3
  5479                           fsr1h	equ	0xFE2
  5480                           fsr1l	equ	0xFE1
  5481                           bsr	equ	0xFE0
  5482                           indf2	equ	0xFDF
  5483                           postinc2	equ	0xFDE
  5484                           postdec2	equ	0xFDD
  5485                           preinc2	equ	0xFDC
  5486                           plusw2	equ	0xFDB
  5487                           fsr2h	equ	0xFDA
  5488                           fsr2l	equ	0xFD9
  5489                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        9
    BSS         115
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     37      76
    BANK0           160      0      85
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    FRAME_AdressOfNeighbors@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_AnalogValue@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_SoftwareVersion@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_MapPosition@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_HandleCanFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_Plot@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_DeviceReset@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_AxisStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_AveragingTimes@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_ExcitationMultiplier@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_ExcitationValue@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_AccelerometerStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_SensorExcitationStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_GenID@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_TakeFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_SendFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_MoveBuffIntoFrame@Buf	PTR unsigned char  size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), RXB0D0(SFR_3[1]), 

    CAN_MoveBuffIntoFrame@Ram	PTR unsigned char  size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), RXB0D0(SFR_3[1]), 


Critical Paths under _main in COMRAM

    _main->_TRM_DataTransmition
    _TRM_DataTransmition->_FRAME_HandleCanFrame
    _FRAME_HandleCanFrame->_CAN_SendFrame
    _LED_Error->_LED_Control
    _FRAME_SensorExcitationStatus->_MOC_Aktualna_Temperatura
    _FRAME_SensorExcitationStatus->_MOC_Frame_Counter
    _FRAME_SensorExcitationStatus->_MOC_NOTWORK
    _FRAME_SensorExcitationStatus->_MOC_StanWzbudzenia
    _FRAME_SensorExcitationStatus->_MOC_Wynikowa_wartosc_roznicowa
    _FRAME_AccelerometerStatus->_MOCK_Klikniecie_Spadek
    _FRAME_AccelerometerStatus->_MOCK_PrzyspieszenieX
    _FRAME_AccelerometerStatus->_MOCK_PrzyspieszenieY
    _FRAME_AccelerometerStatus->_MOCK_PrzyspieszenieZ
    _CAN_SendFrame->_CAN_MoveBuffIntoFrame
    _CAN_TakeFrame->___awdiv
    _LED_Update->_LED_Light_Pos
    _LED_Light_Pos->___lwdiv
    _INI_LED_Start->_LED_Control

Critical Paths under _ISR_low in COMRAM

    _ISR_low->_TMR1_Timer_reset
    _ISR_low->i1_TMR1_Update_flag_Set

Critical Paths under _ISR_high in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR_low in BANK0

    None.

Critical Paths under _ISR_high in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_low in BANK1

    None.

Critical Paths under _ISR_high in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_low in BANK2

    None.

Critical Paths under _ISR_high in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_low in BANK3

    None.

Critical Paths under _ISR_high in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_low in BANK4

    None.

Critical Paths under _ISR_high in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_low in BANK5

    None.

Critical Paths under _ISR_high in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_low in BANK6

    None.

Critical Paths under _ISR_high in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_low in BANK7

    None.

Critical Paths under _ISR_high in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_low in BANK8

    None.

Critical Paths under _ISR_high in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_low in BANK9

    None.

Critical Paths under _ISR_high in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_low in BANK10

    None.

Critical Paths under _ISR_high in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_low in BANK11

    None.

Critical Paths under _ISR_high in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_low in BANK12

    None.

Critical Paths under _ISR_high in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   13152
                            _INI_All
                         _LED_Update
               _TMR1_Update_flag_Get
               _TMR1_Update_flag_Set
                _TRM_DataTransmition
 ---------------------------------------------------------------------------------
 (1) _TRM_DataTransmition                                 18    18      0    7957
                                             20 COMRAM    17    17      0
                      _CAN_TakeFrame
               _FRAME_HandleCanFrame
 ---------------------------------------------------------------------------------
 (2) _FRAME_HandleCanFrame                                 5     3      2    6040
                                             15 COMRAM     5     3      2
                          _CAN_GenID
                      _CAN_SendFrame
          _FRAME_AccelerometerStatus
            _FRAME_AdressOfNeighbors
                  _FRAME_AnalogValue
               _FRAME_AveragingTimes
                   _FRAME_AxisStatus
                  _FRAME_DeviceReset
         _FRAME_ExcitationMultiplier
              _FRAME_ExcitationValue
                  _FRAME_MapPosition
                         _FRAME_Plot
       _FRAME_SensorExcitationStatus
              _FRAME_SoftwareVersion
                          _LED_Error
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) _LED_Error                                            0     0      0    1206
                        _LED_Control
 ---------------------------------------------------------------------------------
 (3) _FRAME_SoftwareVersion                                2     0      2     103
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_SensorExcitationStatus                         3     1      2     279
                                              7 COMRAM     3     1      2
           _MOC_Aktualna_Temperatura
                  _MOC_Frame_Counter
                        _MOC_NOTWORK
                 _MOC_StanWzbudzenia
     _MOC_Wynikowa_wartosc_roznicowa
 ---------------------------------------------------------------------------------
 (4) _MOC_Wynikowa_wartosc_roznicowa                       2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_StanWzbudzenia                                   2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_NOTWORK                                          2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_Frame_Counter                                    2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_Aktualna_Temperatura                             2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_Plot                                           2     0      2     147
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_MapPosition                                    2     0      2     103
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_ExcitationValue                                3     1      2     169
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_ExcitationMultiplier                           5     3      2     215
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_DeviceReset                                    3     1      2     213
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AxisStatus                                     5     3      2     169
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AveragingTimes                                 3     1      2     169
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AnalogValue                                    6     2      4     206
                                              5 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _FRAME_AdressOfNeighbors                              6     2      4     206
                                              5 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _FRAME_AccelerometerStatus                            3     1      2     235
                                              7 COMRAM     3     1      2
             _MOCK_Klikniecie_Spadek
               _MOCK_PrzyspieszenieX
               _MOCK_PrzyspieszenieY
               _MOCK_PrzyspieszenieZ
 ---------------------------------------------------------------------------------
 (4) _MOCK_PrzyspieszenieZ                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOCK_PrzyspieszenieY                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOCK_PrzyspieszenieX                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOCK_Klikniecie_Spadek                               2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _CAN_SendFrame                                        5     3      2     891
                                             10 COMRAM     5     3      2
              _CAN_MoveBuffIntoFrame
 ---------------------------------------------------------------------------------
 (3) _CAN_GenID                                            7     4      3     360
                                              5 COMRAM     7     4      3
 ---------------------------------------------------------------------------------
 (2) _CAN_TakeFrame                                        6     4      2    1622
                                             13 COMRAM     6     4      2
              _CAN_MoveBuffIntoFrame
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     612
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _CAN_MoveBuffIntoFrame                                5     1      4     546
                                              5 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) _TMR1_Update_flag_Set                                 2     0      2     202
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR1_Update_flag_Get                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _LED_Update                                           0     0      0    3787
                           _LED_Left
                      _LED_Light_Pos
                          _LED_Right
 ---------------------------------------------------------------------------------
 (2) _LED_Light_Pos                                       11     7      4    3059
                                             12 COMRAM    11     7      4
                        _LED_Control
                           _LED_Left
                          _LED_Right
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     368
                                              5 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _LED_Right                                            6     4      2     364
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _LED_Left                                             4     2      2     364
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _INI_All                                              0     0      0    1206
                          _CAN_Setup
                _INI_GlobalInterrupt
                      _INI_LED_Start
                         _INI_OUTPUT
                          _INI_Timer
 ---------------------------------------------------------------------------------
 (2) _INI_Timer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INI_OUTPUT                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INI_LED_Start                                        0     0      0    1206
                        _LED_Control
 ---------------------------------------------------------------------------------
 (4) _LED_Control                                          5     3      2    1206
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _INI_GlobalInterrupt                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CAN_Setup                                            1     1      0       0
                                              5 COMRAM     1     1      0
                     _CAN_SetupClock
                      _CAN_SetupMask
 ---------------------------------------------------------------------------------
 (3) _CAN_SetupMask                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CAN_SetupClock                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR_low                                              3     3      0      76
                                              2 COMRAM     3     3      0
                   _TMR1_Timer_reset
             i1_TMR1_Update_flag_Set
 ---------------------------------------------------------------------------------
 (6) i1_TMR1_Update_flag_Set                               2     0      2      48
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_Timer_reset                                     2     2      0      28
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR_high                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _INI_All
     _CAN_Setup
       _CAN_SetupClock
       _CAN_SetupMask
     _INI_GlobalInterrupt
     _INI_LED_Start
       _LED_Control
     _INI_OUTPUT
     _INI_Timer
   _LED_Update
     _LED_Left
     _LED_Light_Pos
       _LED_Control
       _LED_Left
       _LED_Right
       ___lwdiv
     _LED_Right
   _TMR1_Update_flag_Get
   _TMR1_Update_flag_Set
   _TRM_DataTransmition
     _CAN_TakeFrame
       _CAN_MoveBuffIntoFrame
       ___awdiv
     _FRAME_HandleCanFrame
       _CAN_GenID
       _CAN_SendFrame
         _CAN_MoveBuffIntoFrame
       _FRAME_AccelerometerStatus
         _MOCK_Klikniecie_Spadek
         _MOCK_PrzyspieszenieX
         _MOCK_PrzyspieszenieY
         _MOCK_PrzyspieszenieZ
       _FRAME_AdressOfNeighbors
       _FRAME_AnalogValue
       _FRAME_AveragingTimes
       _FRAME_AxisStatus
       _FRAME_DeviceReset
       _FRAME_ExcitationMultiplier
       _FRAME_ExcitationValue
       _FRAME_MapPosition
       _FRAME_Plot
       _FRAME_SensorExcitationStatus
         _MOC_Aktualna_Temperatura
         _MOC_Frame_Counter
         _MOC_NOTWORK
         _MOC_StanWzbudzenia
         _MOC_Wynikowa_wartosc_roznicowa
       _FRAME_SoftwareVersion
       _LED_Error
         _LED_Control
       ___awdiv

 _ISR_low (ROOT)
   _TMR1_Timer_reset
   i1_TMR1_Update_flag_Set

 _ISR_high (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      55       5       53.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     25      4C       1       80.9%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A1      20        0.0%
DATA                 0      0      A1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Jul 16 12:21:04 2019

              __end_of_FRAME_DeviceReset 0B70                    ?_FRAME_AveragingTimes 0006  
                           ___awdiv@sign 000B                                       bsr 000FE0  
                            __CFG_BORV$3 000000                        ?_FRAME_AxisStatus 0006  
                      _FRAME_MapPosition 1034                             __CFG_CP0$OFF 000000  
                           __CFG_CP1$OFF 000000                             __CFG_CP2$OFF 000000  
                           __CFG_CP3$OFF 000000                       __size_of_CAN_GenID 0094  
                                    l190 0080                                      l191 0086  
                                    l192 008C                                      l193 0092  
                                    l177 04CC                                      l194 0098  
                                    l186 006E                                      l178 04CA  
                                    l187 00DE                                      l188 0074  
                                    l189 007A                                      l480 04AA  
                            ?_LED_Update 0001                                      l481 04A2  
                                    l299 06C6                             __CFG_CPB$OFF 000000  
                     ??_FRAME_AxisStatus 0008                             __CFG_CPD$OFF 000000  
                                    u965 053A                       ?_FRAME_MapPosition 0006  
                     __size_of_CAN_Setup 005C                             ?_LED_Control 0006  
                                    wreg 000FE8                    __end_of_CAN_TakeFrame 02DC  
                            ?_INI_OUTPUT 0001                   __size_of_INI_LED_Start 0034  
               ??_MOCK_Klikniecie_Spadek 0008                    __end_of_CAN_SendFrame 061E  
                           __CFG_LVP$OFF 000000                TRM_DataTransmition@weWyU8 0041  
           __size_of_INI_GlobalInterrupt 000E                      ??_FRAME_MapPosition 0008  
                           __CFG_WDT$OFF 000000                                     l1109 0C64  
                                   l2201 06E6                                     l2121 0E98  
                                   l2213 0706                                     l2141 0640  
                                   l2231 0736                                     l2207 06F6  
                                   l2135 0630                                     l2225 0726  
                                   l2153 0660                                     l2243 0756  
                                   l2219 0716                                     l2171 0690  
                                   l2147 0650                                     l2403 0D7C  
                                   l2237 0746                                     l2165 0680  
                                   l2183 06B0                                     l2159 0670  
                                   l2249 0768                                     l2177 06A0  
                                   l2513 09D2                                     l2505 09BA  
                                   l2601 0230                                     l2195 06D6  
                        __end_of_INI_All 0F82                                     l2523 0C32  
                                   l2611 0270                                     l2603 024A  
                                   l2363 0564                                     l2451 0C9A  
                                   l2541 0AC0                                     l2189 06C0  
                                   l2525 0C3A                                     l2509 09C4  
                                   l2613 0278                                     l2605 025C  
                                   l2701 0366                                     l2535 0C5A  
                                   l2615 0280                                     l2607 0262  
                                   l2623 0298                                     l2367 0618  
                                   l2703 0374                                     l2481 096C  
                                   l2617 0288                                     l2609 0268  
                                   l2625 02D8                                     l2561 009E  
                                   l2705 0382                                     l2713 03C4  
                                   l2801 0E8C                                     l2555 0B0A  
                                   l2387 0CF0                                     l2619 0290  
                                   l2707 0390                                     l2715 0428  
                                   l2493 0992                                     l2581 01BC  
                                   l2469 0B4E                                     l2709 03AA  
                                   l2663 07D2                                     l2671 0808  
                                   l2495 099A                                     l2487 097C  
                                   l2591 01E4                                     l2583 01C4  
                                   l2665 07DC                                     l2657 07A6  
                                   l2585 01CC                                     l2577 01B0  
                                   l2761 0B9A                                     l2587 01D4  
                                   l2579 01B6                                     l2595 01EC  
                                   l2691 0320                                     l2589 01DC  
                                   l2597 022C                                     l2693 032E  
                                   l2695 033C                                     l2687 0304  
                                   l2791 0E6C                                     l2697 034A  
                                   l2689 0312                                     l2699 0358  
                                   _BIE0 000DFA                        _MOC_Frame_Counter 0F9A  
                                   u1110 099E                                     u1040 0CAA  
                                   u1205 0148                                     u1150 0C3E  
                                   u1320 0BB8                                     u1250 0810  
                                   _LATA 000F89                                     _LATB 000F8A  
                                   _LATC 000F8B                                     _LATD 000F8C  
                                   _LATE 000F8D                                     _IPR3 000FA5  
                                   _IPEN 007E87                                     _PIE3 000FA3  
                                   _PEIE 007F96                                     _PIR3 000FA4  
                                   _RCON 000FD0              ??_FRAME_AccelerometerStatus 000A  
                        __end_of_ISR_low 005C                         LED_Control@diode 0006  
                   FRAME_AnalogValue@set 0008                       ?_MOC_Frame_Counter 0006  
                                   _main 0E66                         LED_Control@color 000A  
                                   fsr2h 000FDA                                     indf1 000FE7  
                                   indf2 000FDF                                     fsr1l 000FE1  
                                   fsr2l 000FD9                                     btemp 004D  
                         _CAN_SetupClock 0EBE                                     prodl 000FF3  
                  __end_of_CAN_SetupMask 0ABC            __size_of_TMR1_Update_flag_Get 000A  
                                   start 005C            __size_of_TMR1_Update_flag_Set 000A  
                     __size_of_LED_Error 001E                            __CFG_IESO$OFF 000000  
                     _MOC_StanWzbudzenia 0FC0                       __size_of_LED_Right 004C  
          __size_of_FRAME_HandleCanFrame 01D4                            _LED_Light_Pos 0770  
                          __CFG_MCLRE$ON 000000                             ___param_bank 000000  
                    ??_MOC_Frame_Counter 0008               ??_MOC_Aktualna_Temperatura 0008  
      FRAME_HandleCanFrame@identyfikator 0014                       __size_of_INI_Timer 0018  
              __end_of_FRAME_MapPosition 1036                      ?_MOC_StanWzbudzenia 0006  
                       __end_of_LED_Left 0D90            __size_of_MOCK_PrzyspieszenieX 000A  
          __size_of_MOCK_PrzyspieszenieY 000A            __size_of_MOCK_PrzyspieszenieZ 000A  
                                  _B0CON 000E20                                    _B1CON 000E30  
                                  _B2CON 000E40                                    _B3CON 000E50  
                                  _B4CON 000E60                                    _B5CON 000E70  
                                  ?_main 0001                          __end_of___awdiv 09DC  
                                  _BSEL0 000DF8                          ___awdiv@divisor 0008  
                                  _T1CON 000FCD                                    _IRCF0 007E9C  
                                  _IRCF1 007E9D        FRAME_ExcitationMultiplier@message 0006  
                                  _IRCF2 007E9E                          __end_of___lwdiv 0C6E  
                                  i1l547 004C                      __size_of_FRAME_Plot 0022  
                        ___awdiv@counter 000A                                    _MSEL0 000DF0  
                                  _MSEL1 000DF1                                    _MSEL2 000DF2  
                                  _MSEL3 000DF3                                    _TMR1H 000FCF  
                                  _TMR1L 000FCE                                    _TRISA 000F92  
                                  _TRISB 000F93                                    _TRISC 000F94  
                                  _TRISD 000F95                                    _TRISE 000F96  
                          __CFG_PWRT$OFF 000000                   ?_CAN_MoveBuffIntoFrame 0006  
                          __CFG_WRT0$OFF 000000               __size_of_FRAME_AnalogValue 0002  
                          __CFG_WRT1$OFF 000000                            __CFG_WRT2$OFF 000000  
                          __CFG_WRT3$OFF 000000                           __CFG_EBTR0$OFF 000000  
                         __CFG_FCMEN$OFF 000000                           __CFG_EBTR1$OFF 000000  
                         __CFG_EBTR2$OFF 000000                           __CFG_EBTR3$OFF 000000  
                       __end_of_ISR_high 1032                            __CFG_WRTB$OFF 000000  
                          __CFG_WRTC$OFF 000000                            __CFG_WRTD$OFF 000000  
              __end_of_MOC_Frame_Counter 0FA8                           __CFG_EBTRB$OFF 000000  
                i1TMR1_Update_flag_Set@a 0001                             ?_MOC_NOTWORK 0006  
                   ??_MOC_StanWzbudzenia 0008                                    tablat 000FF5  
                 __end_of_CAN_SetupClock 0EE6                                    ttemp5 004E  
                                  ttemp6 0051                                    ttemp7 0055  
                                  status 000FD8                                    wtemp8 004E  
                      __end_of_CAN_GenID 0958                           __CFG_PBADEN$ON 000000  
                    __size_of_LED_Update 0056                           ?_LED_Light_Pos 000D  
                       _TMR1_Timer_reset 0EE6                        __end_of_CAN_Setup 0B18  
                          _INI_LED_Start 0E32                    _FRAME_ExcitationValue 0D90  
       FRAME_AccelerometerStatus@message 0008                          __initialization 0D08  
                    __size_of_INI_OUTPUT 001E                         CAN_GenID@frameID 0008  
                           __end_of_main 0E94                   ??_FRAME_AveragingTimes 0008  
             __size_of_FRAME_DeviceReset 0058                 ?_FRAME_AdressOfNeighbors 0006  
                       CAN_GenID@message 0006                _FRAME_AccelerometerStatus 09DC  
                                 ??_main 0026                   CAN_MoveBuffIntoFrame@i 000A  
                          __activetblptr 000002                         _TMR1_Update_flag 003E  
                              ??_INI_All 000B                        __end_of_LED_Error 0F4A  
                      __end_of_LED_Right 0D08          __size_of_MOCK_Klikniecie_Spadek 000A  
                              ??_ISR_low 0003                                   _CANCON 000F6F  
                       ___awdiv@dividend 0006              FRAME_ExcitationMultiplier@i 0009  
                                 _CIOCON 000F73                          __CFG_BBSIZ$1024 000000  
                      __end_of_INI_Timer 0F9A                                   i1l2821 004A  
                        ?_CAN_SetupClock 0001                                   _RXB0D0 000F66  
                                 _TMR1IE 007CE8                                   _TMR1IF 007CF0  
                                 _TMR1IP 007CF8                                   _TMR1ON 007E68  
           ??_FRAME_ExcitationMultiplier 0008                           ?_INI_LED_Start 0001  
                         __CFG_XINST$OFF 000000                                ??___awdiv 000A  
                         __CFG_STVREN$ON 000000                         LED_Light_Pos@pos 000D  
             __size_of_FRAME_MapPosition 0002                                ??___lwdiv 000A  
                                 clear_0 0D2E                                   clear_1 0D3A  
                       ___awdiv@quotient 000C                 ??i1_TMR1_Update_flag_Set 0003  
                        __CFG_BOREN$BOHW 000000                             __pdataCOMRAM 0044  
                                 tblptrh 000FF7                                   tblptrl 000FF6  
                                 tblptru 000FF8      __size_of_FRAME_ExcitationMultiplier 004E  
             __size_of_MOC_Frame_Counter 000E                     __size_of_LED_Control 0152  
               FRAME_MapPosition@message 0006                    TMR1_Update_flag_Set@a 0006  
                             __accesstop 0060                  __end_of__initialization 0D40  
                           ??_FRAME_Plot 0008                      ISR_low@ramkaStanuU8 0042  
                              ?_LED_Left 0006                          ??_LED_Light_Pos 0011  
                          ___rparam_used 000001                   ?_FRAME_ExcitationValue 0006  
        __end_of_FRAME_AdressOfNeighbors 103A                   _MOCK_Klikniecie_Spadek 0FF2  
                         __pcstackCOMRAM 0001                                LED_Left@a 0006  
                              LED_Left@b 0008                      _INI_GlobalInterrupt 0FA8  
                              ?_ISR_high 0001                             ??_LED_Update 0018  
            __end_of_TRM_DataTransmition 0BC6                    _FRAME_SoftwareVersion 1032  
                     __end_of_FRAME_Plot 0F2C                             ??_INI_OUTPUT 0006  
                FRAME_AxisStatus@message 0006                     ?_INI_GlobalInterrupt 0001  
              __size_of_FRAME_AxisStatus 0036                               __pbssBANK0 0060  
                   __size_of_MOC_NOTWORK 0008                          ??_INI_LED_Start 000B  
                             ??_LED_Left 0008                       __end_of_LED_Update 0C1C  
                     __end_of_INI_OUTPUT 0F68                               ??_ISR_high 0001  
                    TMR1_Timer_reset@t1H 0002                      TMR1_Timer_reset@t1L 0001  
                                _ECANCON 000F77                                  _CANSTAT 000F6E  
                ??_CAN_MoveBuffIntoFrame 000A             __end_of_TMR1_Update_flag_Get 1010  
           __end_of_TMR1_Update_flag_Set 1006          __size_ofi1_TMR1_Update_flag_Set 000A  
           __end_of_FRAME_HandleCanFrame 04B0                                  _INI_All 0F68  
               __end_of_TMR1_Timer_reset 0F0A                                  _RXB0DLC 000F65  
                                _RXB0CON 000F60                                  _RXB1CON 000F50  
                  ??_INI_GlobalInterrupt 0006                                  _TXB0CON 000F40  
                                _ISR_low 0018                                  _RXFCON0 000DD4  
                                _DaneCan 0037             __end_of_MOCK_PrzyspieszenieX 0FF2  
           __end_of_MOCK_PrzyspieszenieY 0FE8             __end_of_MOCK_PrzyspieszenieZ 0FDE  
     __end_of_FRAME_ExcitationMultiplier 0CBC               _FRAME_ExcitationMultiplier 0C6E  
            FRAME_HandleCanFrame@message 0010                                  __Hparam 0000  
       ??_MOC_Wynikowa_wartosc_roznicowa 0008          ?_MOC_Wynikowa_wartosc_roznicowa 0006  
                                __Lparam 0000                   __size_of_CAN_TakeFrame 027C  
                              _CAN_GenID 08C4                                  ___awdiv 0958  
                              _CAN_Setup 0ABC                   __size_of_CAN_SendFrame 016E  
                                ___lwdiv 0C1C                        LED_Light_Pos@pos2 0014  
                                __pcinit 0D08                                  __ramtop 0D00  
                                __ptext0 0E66                                  __ptext1 0B70  
                                __ptext2 02DC                                  __ptext3 0F2C  
                                __ptext4 1032                                  __ptext5 0820  
                                __ptext6 0FB6                                  __ptext7 0FC0  
                                __ptext8 1024                                  __ptext9 0F9A  
                 ?_FRAME_SoftwareVersion 0006                   __size_of_CAN_SetupMask 006A  
      __size_of_MOC_Aktualna_Temperatura 000A           FRAME_AdressOfNeighbors@nrRamki 0008  
              ?_MOC_Aktualna_Temperatura 0006         __size_of_FRAME_AdressOfNeighbors 0002  
                       ??_CAN_SetupClock 0006           FRAME_AdressOfNeighbors@message 0006  
                              _LED_Error 0F2C                           __pintcode_body 102C  
                              _LED_Right 0CBC                     end_of_initialization 0D40  
            __size_of_MOC_StanWzbudzenia 000A                            __Lmediumconst 0000  
                                int_func 102C                                _INI_Timer 0F82  
                 i1_TMR1_Update_flag_Set 1010         TRM_DataTransmition@czujnikWeWyU8 0040  
                             ?_CAN_GenID 0006                                  postdec1 000FE5  
                                postdec2 000FDD                                  postinc0 000FEE  
                                postinc2 000FDE                               ?_CAN_Setup 0001  
          __size_of_FRAME_AveragingTimes 0036                     CAN_SendFrame@message 000B  
                          LED_Update@Red 0043                            _CAN_TakeFrame 0060  
                          _CAN_SendFrame 04B0                               ?_LED_Error 0001  
                             ?_LED_Right 0006                         _FRAME_AxisStatus 0DC6  
                ??_FRAME_ExcitationValue 0008                               ?_INI_Timer 0001  
                ?_MOCK_Klikniecie_Spadek 0006                          _ramkaCanRxKarty 0060  
                   _TMR1_Update_flag_Get 1006                          _ramkaCanTxKarty 0026  
                   _TMR1_Update_flag_Set 0FFC                            _CAN_SetupMask 0A52  
                      __size_of_LED_Left 0042                     _FRAME_HandleCanFrame 02DC  
                         CAN_TakeFrame@k 0013                            __pidataCOMRAM 101A  
                      __size_of_ISR_high 102A                     _MOCK_PrzyspieszenieX 0FE8  
                   _MOCK_PrzyspieszenieY 0FDE                     _MOCK_PrzyspieszenieZ 0FD4  
                             LED_Right@a 0006                               LED_Right@b 000A  
                  MOC_Frame_Counter@zeta 0044                            ??_LED_Control 0008  
                    start_initialization 0D08                           ?_CAN_TakeFrame 000E  
                         ?_CAN_SendFrame 000B           __end_of_MOCK_Klikniecie_Spadek 0FFC  
                       __CFG_OSC$IRCIO67 000000                    ?_TMR1_Update_flag_Get 0006  
                  ?_TMR1_Update_flag_Set 0006                           ?_CAN_SetupMask 0001  
                  __end_of_LED_Light_Pos 0820                    ?_FRAME_HandleCanFrame 0010  
                            ??_CAN_GenID 0009                              ??_CAN_Setup 0006  
                       __CFG_LPT1OSC$OFF 000000                    ?_MOCK_PrzyspieszenieX 0006  
                  ?_MOCK_PrzyspieszenieY 0006                    ?_MOCK_PrzyspieszenieZ 0006  
               CAN_MoveBuffIntoFrame@Buf 0008     __end_of_FRAME_SensorExcitationStatus 08C4  
  __size_of_FRAME_SensorExcitationStatus 00A4                 CAN_MoveBuffIntoFrame@Ram 0006  
           _FRAME_SensorExcitationStatus 0820           __size_of_CAN_MoveBuffIntoFrame 002A  
          __end_of_CAN_MoveBuffIntoFrame 0EBE                          _Fulfillment_Lvl 004A  
                            __pbssCOMRAM 0026                                 ?_INI_All 0001  
                _FRAME_AdressOfNeighbors 1038                        ?_TMR1_Timer_reset 0001  
                            _BRGCON1bits 000F70                              _BRGCON2bits 000F71  
                            _BRGCON3bits 000F72                                 ?_ISR_low 0001  
                          ??_MOC_NOTWORK 0008                       ??_TMR1_Timer_reset 0001  
                            ??_LED_Error 000B                              ??_LED_Right 0008  
           __size_of_TRM_DataTransmition 0056                      __end_of_LED_Control 0770  
            ?_FRAME_ExcitationMultiplier 0006                              ??_INI_Timer 0006  
                  __end_of_INI_LED_Start 0E66                         ___lwdiv@dividend 0006  
                              __pintcode 0008                                 ?___awdiv 0006  
                ??_FRAME_SoftwareVersion 0008         __end_of_MOC_Aktualna_Temperatura 0FD4  
                               ?___lwdiv 0006                        FRAME_Plot@message 0006  
                            __pintcodelo 0018              __end_of_INI_GlobalInterrupt 0FB6  
                        ??_CAN_TakeFrame 0010            ?_FRAME_SensorExcitationStatus 0008  
 __end_of_MOC_Wynikowa_wartosc_roznicowa 0FC0  __size_of_MOC_Wynikowa_wartosc_roznicowa 000A  
         _MOC_Wynikowa_wartosc_roznicowa 0FB6                              _COMSTATbits 000F74  
                        ??_CAN_SendFrame 000D                         ___lwdiv@quotient 000A  
                ?i1_TMR1_Update_flag_Set 0001              FRAME_AveragingTimes@message 0006  
                 ??_TMR1_Update_flag_Get 0008                   ??_TMR1_Update_flag_Set 0008  
                        ??_CAN_SetupMask 0006                                 _LED_Left 0D4E  
                 ??_FRAME_HandleCanFrame 0012                     CAN_TakeFrame@message 000E  
                    __end_of_MOC_NOTWORK 102C                     CAN_TakeFrame@tempCON 0012  
                               _RXB0EIDH 000F63                                 _RXB0EIDL 000F64  
                               _RCONbits 000FD0                         __CFG_WDTPS$32768 000000  
                               _RXB0SIDH 000F61                                 _RXB0SIDL 000F62  
                               _RXF0EIDH 000F02                                 _RXF0EIDL 000F03  
                               _RXF1EIDH 000F06                                 _RXF1EIDL 000F07  
                               _RXF2EIDH 000F0A                                 _RXF2EIDL 000F0B  
                               _RXF0SIDH 000F00                                 _RXF0SIDL 000F01  
                               _RXF1SIDH 000F04                                 _RXF1SIDL 000F05  
                               _RXF2SIDH 000F08                                 _RXF2SIDL 000F09  
                               _ISR_high 0008                                 _RXM0EIDH 000F1A  
                               _RXM0EIDL 000F1B                                 _RXM1EIDH 000F1E  
                               _RXM1EIDL 000F1F                   ??_MOCK_PrzyspieszenieX 0008  
                 ??_MOCK_PrzyspieszenieY 0008                   ??_MOCK_PrzyspieszenieZ 0008  
                               _RXM0SIDH 000F18                                 _RXM0SIDL 000F19  
                               _RXM1SIDH 000F1C                                 _RXM1SIDL 000F1D  
               __end_of_FRAME_AxisStatus 0DFC                ??_FRAME_AdressOfNeighbors 000A  
                       _DetectorLedRadar 003B                              _LED_Control 061E  
                       __size_of_INI_All 001A             FRAME_ExcitationValue@message 0006  
             __end_of_MOC_StanWzbudzenia 0FCA           __end_ofi1_TMR1_Update_flag_Set 101A  
                              copy_data0 0D1C                         __size_of_ISR_low 0044  
     __size_of_FRAME_AccelerometerStatus 0076             __end_of_FRAME_AveragingTimes 0E32  
             ?_FRAME_AccelerometerStatus 0008           __size_of_FRAME_ExcitationValue 0036  
          __end_of_FRAME_ExcitationValue 0DC6                                 __Hrparam 0000  
                           _RXB0SIDLbits 000F62                                 __Lrparam 0000  
                       __size_of___awdiv 0084                         __size_of___lwdiv 0052  
               _MOC_Aktualna_Temperatura 0FCA                       LED_Light_Pos@flage 0016  
                     LED_Light_Pos@color 0011                             _RXF0SIDLbits 000F01  
               FRAME_AnalogValue@message 0006                          ___lwdiv@divisor 0008  
                           _RXF1SIDLbits 000F05                          ___lwdiv@counter 000C  
                               __ptext10 0FCA                                 __ptext11 0F0A  
                               __ptext20 09DC                                 __ptext12 1034  
                               __ptext21 0FD4                                 __ptext13 0D90  
                               __ptext30 0FFC                                 __ptext22 0FDE  
                               __ptext14 0C6E                                 __ptext31 1006  
                               __ptext23 0FE8                                 __ptext15 0B18  
                               __ptext40 0E32                                 __ptext32 0BC6  
                               __ptext24 0FF2                                 __ptext16 0DC6  
                               __ptext41 061E                                 __ptext33 0770  
                               __ptext25 04B0                                 __ptext17 0DFC  
                               __ptext42 0FA8                                 __ptext34 0C1C  
                               __ptext26 08C4                                 __ptext18 1036  
                               __ptext43 0ABC                                 __ptext35 0CBC  
                               __ptext27 0060                                 __ptext19 1038  
                               __ptext44 0A52                                 __ptext36 0D4E  
                               __ptext28 0958           ??_FRAME_SensorExcitationStatus 000A  
                               __ptext45 0EBE                                 __ptext37 0F68  
                               __ptext29 0E94                                 __ptext38 0F82  
                               __ptext47 1010                                 __ptext39 0F4A  
                               __ptext48 0EE6            TRM_DataTransmition@canMessage 0015  
                           _RXF2SIDLbits 000F09                              _MOC_NOTWORK 1024  
               FRAME_DeviceReset@message 0006        __end_of_FRAME_AccelerometerStatus 0A52  
                             _FRAME_Plot 0F0A                            __size_of_main 002E  
                __size_of_CAN_SetupClock 0028                                 int$flags 004D  
                    _TRM_DataTransmition 0B70                              _RXB0DLCbits 000F65  
                             _LED_Update 0BC6                              _RXB0CONbits 000F60  
                             _INTCONbits 000FF2                               _INI_OUTPUT 0F4A  
                      _FRAME_AnalogValue 1036                     ?_TRM_DataTransmition 0001  
           FRAME_SoftwareVersion@message 0006                                 intlevel1 0000  
                               intlevel2 0000                       ?_FRAME_AnalogValue 0006  
    FRAME_SensorExcitationStatus@message 0008                              _TXB0CONbits 000F40  
                    ??_FRAME_AnalogValue 000A                __size_of_TMR1_Timer_reset 0024  
               LED_Light_Pos@fulfillment 000F                     _FRAME_AveragingTimes 0DFC  
         __size_of_FRAME_SoftwareVersion 0002                        _FRAME_DeviceReset 0B18  
          __end_of_FRAME_SoftwareVersion 1034                       ?_FRAME_DeviceReset 0006  
                        LED_Update@Green 004C                __end_of_FRAME_AnalogValue 1038  
                 __size_of_LED_Light_Pos 00B0                    _CAN_MoveBuffIntoFrame 0E94  
                             _WDTCONbits 000FD1                      ??_FRAME_DeviceReset 0008  
                  ??_TRM_DataTransmition 0015                   LED_Light_Pos@LED_array 0012  
                         LED_Update@pos1 0048                           LED_Update@pos2 0046  
                            ?_FRAME_Plot 0006  
