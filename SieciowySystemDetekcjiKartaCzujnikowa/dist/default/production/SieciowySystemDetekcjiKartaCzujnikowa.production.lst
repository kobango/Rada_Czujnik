

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Jul 22 11:30:15 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4680
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    51                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    52                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    53                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    54                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    55  0000                     
    56                           ; Version 2.05
    57                           ; Generated 20/12/2018 GMT
    58                           ; 
    59                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC18F4680 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90  0000                     
    91                           	psect	idataCOMRAM
    92  0010BE                     __pidataCOMRAM:
    93                           	opt callstack 0
    94                           
    95                           ;initializer for MOC_Frame_Counter@zeta
    96  0010BE  0011               	dw	17
    97                           
    98                           ;initializer for LED_Update@pos2
    99  0010C0  0001               	dw	1
   100                           
   101                           ;initializer for LED_Update@pos1
   102  0010C2  0001               	dw	1
   103                           
   104                           ;initializer for _Fulfillment_Lvl
   105  0010C4  0014               	dw	20
   106                           
   107                           ;initializer for LED_Update@Green
   108  0010C6  01                 	db	1
   109  0000                     _MSEL3	set	3571
   110  0000                     _MSEL2	set	3570
   111  0000                     _MSEL1	set	3569
   112  0000                     _MSEL0	set	3568
   113  0000                     _BIE0	set	3578
   114  0000                     _BSEL0	set	3576
   115  0000                     _B5CON	set	3696
   116  0000                     _B4CON	set	3680
   117  0000                     _B3CON	set	3664
   118  0000                     _B2CON	set	3648
   119  0000                     _B1CON	set	3632
   120  0000                     _B0CON	set	3616
   121  0000                     _TXB0CONbits	set	3904
   122  0000                     _RXF2EIDL	set	3851
   123  0000                     _RXF2EIDH	set	3850
   124  0000                     _RXF2SIDLbits	set	3849
   125  0000                     _RXF2SIDL	set	3849
   126  0000                     _RXF2SIDH	set	3848
   127  0000                     _RXF1EIDL	set	3847
   128  0000                     _RXF1EIDH	set	3846
   129  0000                     _RXF1SIDLbits	set	3845
   130  0000                     _RXF1SIDL	set	3845
   131  0000                     _RXF1SIDH	set	3844
   132  0000                     _RXF0EIDL	set	3843
   133  0000                     _RXF0EIDH	set	3842
   134  0000                     _RXF0SIDLbits	set	3841
   135  0000                     _RXF0SIDL	set	3841
   136  0000                     _RXF0SIDH	set	3840
   137  0000                     _RXM1EIDL	set	3871
   138  0000                     _RXM1EIDH	set	3870
   139  0000                     _RXM1SIDL	set	3869
   140  0000                     _RXM1SIDH	set	3868
   141  0000                     _RXM0EIDL	set	3867
   142  0000                     _RXM0EIDH	set	3866
   143  0000                     _RXM0SIDL	set	3865
   144  0000                     _RXM0SIDH	set	3864
   145  0000                     _RXB1CON	set	3920
   146  0000                     _TXB0CON	set	3904
   147  0000                     _INTCONbits	set	4082
   148  0000                     _WDTCONbits	set	4049
   149  0000                     _RCONbits	set	4048
   150  0000                     _TRISC	set	3988
   151  0000                     _LATC	set	3979
   152  0000                     _T1CON	set	4045
   153  0000                     _TMR1H	set	4047
   154  0000                     _TMR1L	set	4046
   155  0000                     _LATE	set	3981
   156  0000                     _LATA	set	3977
   157  0000                     _LATB	set	3978
   158  0000                     _LATD	set	3980
   159  0000                     _TRISD	set	3989
   160  0000                     _TRISE	set	3990
   161  0000                     _TRISB	set	3987
   162  0000                     _TRISA	set	3986
   163  0000                     _RXB0DLCbits	set	3941
   164  0000                     _RXB0DLC	set	3941
   165  0000                     _RXB0SIDH	set	3937
   166  0000                     _RXB0SIDLbits	set	3938
   167  0000                     _RXB0SIDL	set	3938
   168  0000                     _RXB0EIDH	set	3939
   169  0000                     _RXB0EIDL	set	3940
   170  0000                     _COMSTATbits	set	3956
   171  0000                     _RXB0CONbits	set	3936
   172  0000                     _BRGCON3bits	set	3954
   173  0000                     _BRGCON2bits	set	3953
   174  0000                     _BRGCON1bits	set	3952
   175  0000                     _CIOCON	set	3955
   176  0000                     _ECANCON	set	3959
   177  0000                     _PIR3	set	4004
   178  0000                     _IPR3	set	4005
   179  0000                     _PIE3	set	4003
   180  0000                     _RXB0CON	set	3936
   181  0000                     _CANSTAT	set	3950
   182  0000                     _CANCON	set	3951
   183  0000                     _RCON	set	4048
   184  0000                     _RXB0D0	set	3942
   185  0000                     _TMR1IF	set	31984
   186  0000                     _TMR1IP	set	31992
   187  0000                     _PEIE	set	32662
   188  0000                     _IPEN	set	32391
   189  0000                     _TMR1ON	set	32360
   190  0000                     _TMR1IE	set	31976
   191  0000                     _IRCF0	set	32412
   192  0000                     _IRCF1	set	32413
   193  0000                     _IRCF2	set	32414
   194                           
   195                           ; #config settings
   196  0000                     
   197                           	psect	cinit
   198  000D62                     __pcinit:
   199                           	opt callstack 0
   200  000D62                     start_initialization:
   201                           	opt callstack 0
   202  000D62                     __initialization:
   203                           	opt callstack 0
   204                           
   205                           ; Initialize objects allocated to COMRAM (9 bytes)
   206                           ; load TBLPTR registers with __pidataCOMRAM
   207  000D62  0EBE               	movlw	low __pidataCOMRAM
   208  000D64  6EF6               	movwf	tblptrl,c
   209  000D66  0E10               	movlw	high __pidataCOMRAM
   210  000D68  6EF7               	movwf	tblptrh,c
   211  000D6A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   212  000D6C  6EF8               	movwf	tblptru,c
   213  000D6E  EE00  F050         	lfsr	0,__pdataCOMRAM
   214  000D72  EE10 F009          	lfsr	1,9
   215  000D76                     copy_data0:
   216  000D76  0009               	tblrd		*+
   217  000D78  CFF5 FFEE          	movff	tablat,postinc0
   218  000D7C  50E5               	movf	postdec1,w,c
   219  000D7E  50E1               	movf	fsr1l,w,c
   220  000D80  E1FA               	bnz	copy_data0
   221                           
   222                           ; Clear objects allocated to BIGRAM (544 bytes)
   223  000D82  EE00  F0C6         	lfsr	0,__pbssBIGRAM
   224  000D86  EE12 F020          	lfsr	1,544
   225  000D8A                     clear_0:
   226  000D8A  6AEE               	clrf	postinc0,c
   227  000D8C  50E5               	movf	postdec1,w,c
   228  000D8E  50E1               	movf	fsr1l,w,c
   229  000D90  E1FC               	bnz	clear_0
   230  000D92  50E2               	movf	fsr1h,w,c
   231  000D94  E1FA               	bnz	clear_0
   232                           
   233                           ; Clear objects allocated to BANK0 (102 bytes)
   234  000D96  EE00  F060         	lfsr	0,__pbssBANK0
   235  000D9A  0E66               	movlw	102
   236  000D9C                     clear_1:
   237  000D9C  6AEE               	clrf	postinc0,c
   238  000D9E  06E8               	decf	wreg,f,c
   239  000DA0  E1FD               	bnz	clear_1
   240                           
   241                           ; Clear objects allocated to COMRAM (21 bytes)
   242  000DA2  EE00  F03B         	lfsr	0,__pbssCOMRAM
   243  000DA6  0E15               	movlw	21
   244  000DA8                     clear_2:
   245  000DA8  6AEE               	clrf	postinc0,c
   246  000DAA  06E8               	decf	wreg,f,c
   247  000DAC  E1FD               	bnz	clear_2
   248  000DAE                     end_of_initialization:
   249                           	opt callstack 0
   250  000DAE                     __end_of__initialization:
   251                           	opt callstack 0
   252  000DAE  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   253  000DB0  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   254  000DB2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   255  000DB4  6EF8               	movwf	tblptru,c
   256  000DB6  0100               	movlb	0
   257  000DB8  EF8D  F007         	goto	_main	;jump to C main() function
   258                           
   259                           	psect	bssCOMRAM
   260  00003B                     __pbssCOMRAM:
   261                           	opt callstack 0
   262  00003B                     _Flagi:
   263                           	opt callstack 0
   264  00003B                     	ds	5
   265  000040                     _DaneCan:
   266                           	opt callstack 0
   267  000040                     	ds	4
   268  000044                     _DetectorLedRadar:
   269                           	opt callstack 0
   270  000044                     	ds	3
   271  000047                     _TMR1_Update_flag:
   272                           	opt callstack 0
   273  000047                     	ds	2
   274  000049                     _Dane:
   275                           	opt callstack 0
   276  000049                     	ds	2
   277  00004B                     	ds	1
   278  00004C                     	ds	1
   279  00004D                     ISR_low@ramkaStanuU8:
   280                           	opt callstack 0
   281  00004D                     	ds	1
   282  00004E                     	ds	1
   283  00004F                     _LOCK:
   284                           	opt callstack 0
   285  00004F                     	ds	1
   286                           
   287                           	psect	dataCOMRAM
   288  000050                     __pdataCOMRAM:
   289                           	opt callstack 0
   290  000050                     MOC_Frame_Counter@zeta:
   291                           	opt callstack 0
   292  000050                     	ds	2
   293  000052                     LED_Update@pos2:
   294                           	opt callstack 0
   295  000052                     	ds	2
   296  000054                     LED_Update@pos1:
   297                           	opt callstack 0
   298  000054                     	ds	2
   299  000056                     _Fulfillment_Lvl:
   300                           	opt callstack 0
   301  000056                     	ds	2
   302  000058                     LED_Update@Green:
   303                           	opt callstack 0
   304  000058                     	ds	1
   305                           
   306                           	psect	bssBANK0
   307  000060                     __pbssBANK0:
   308                           	opt callstack 0
   309  000060                     _ramkaCanRxKarty:
   310                           	opt callstack 0
   311  000060                     	ds	85
   312  0000B5                     _ramkaCanTxKarty:
   313                           	opt callstack 0
   314  0000B5                     	ds	17
   315                           
   316                           	psect	bssBIGRAM
   317  0000C6                     __pbssBIGRAM:
   318                           	opt callstack 0
   319  0000C6                     _wartosciSasiada:
   320                           	opt callstack 0
   321  0000C6                     	ds	544
   322                           
   323                           	psect	cstackCOMRAM
   324  000001                     __pcstackCOMRAM:
   325                           	opt callstack 0
   326  000001                     TMR1_Timer_reset@t1L:
   327                           	opt callstack 0
   328  000001                     i1TMR1_Update_flag_Set@a:
   329                           	opt callstack 0
   330                           
   331                           ; 2 bytes @ 0x0
   332  000001                     	ds	1
   333  000002                     TMR1_Timer_reset@t1H:
   334                           	opt callstack 0
   335                           
   336                           ; 1 bytes @ 0x1
   337  000002                     	ds	1
   338  000003                     ??_ISR_low:
   339  000003                     
   340                           ; 1 bytes @ 0x2
   341  000003                     	ds	3
   342  000006                     ??_CAN_Setup:
   343  000006                     ?_TMR1_Update_flag_Get:
   344                           	opt callstack 0
   345  000006                     ?_LED_Right:
   346                           	opt callstack 0
   347  000006                     ?_LED_Left:
   348                           	opt callstack 0
   349  000006                     ?_MOC_Wynikowa_wartosc_roznicowa:
   350                           	opt callstack 0
   351  000006                     ?_MOC_Frame_Counter:
   352                           	opt callstack 0
   353  000006                     ?_MOC_Aktualna_Temperatura:
   354                           	opt callstack 0
   355  000006                     ?_MOC_NOTWORK:
   356                           	opt callstack 0
   357  000006                     ?___wmul:
   358                           	opt callstack 0
   359  000006                     ?___awdiv:
   360                           	opt callstack 0
   361  000006                     ?___lwdiv:
   362                           	opt callstack 0
   363  000006                     LOCK_Set@k:
   364                           	opt callstack 0
   365  000006                     CAN_MoveBuffIntoFrame@Ram:
   366                           	opt callstack 0
   367  000006                     CAN_GenID@message:
   368                           	opt callstack 0
   369  000006                     LED_Right@a:
   370                           	opt callstack 0
   371  000006                     LED_Left@a:
   372                           	opt callstack 0
   373  000006                     LED_Control@diode:
   374                           	opt callstack 0
   375  000006                     TMR1_Update_flag_Set@a:
   376                           	opt callstack 0
   377  000006                     ___wmul@multiplier:
   378                           	opt callstack 0
   379  000006                     ___awdiv@dividend:
   380                           	opt callstack 0
   381  000006                     ___lwdiv@dividend:
   382                           	opt callstack 0
   383                           
   384                           ; 2 bytes @ 0x5
   385  000006                     	ds	2
   386  000008                     ??_LED_Right:
   387  000008                     CAN_GenID@frameID:
   388                           	opt callstack 0
   389  000008                     CAN_MoveBuffIntoFrame@Buf:
   390                           	opt callstack 0
   391  000008                     LED_Left@b:
   392                           	opt callstack 0
   393  000008                     ___wmul@multiplicand:
   394                           	opt callstack 0
   395  000008                     ___awdiv@divisor:
   396                           	opt callstack 0
   397  000008                     ___lwdiv@divisor:
   398                           	opt callstack 0
   399                           
   400                           ; 2 bytes @ 0x7
   401  000008                     	ds	1
   402  000009                     ??_CAN_GenID:
   403                           
   404                           ; 1 bytes @ 0x8
   405  000009                     	ds	1
   406  00000A                     CAN_MoveBuffIntoFrame@i:
   407                           	opt callstack 0
   408  00000A                     LED_Control@color:
   409                           	opt callstack 0
   410  00000A                     ___awdiv@counter:
   411                           	opt callstack 0
   412  00000A                     LED_Right@b:
   413                           	opt callstack 0
   414  00000A                     ___wmul@product:
   415                           	opt callstack 0
   416  00000A                     ___lwdiv@quotient:
   417                           	opt callstack 0
   418                           
   419                           ; 2 bytes @ 0x9
   420  00000A                     	ds	1
   421  00000B                     ___awdiv@sign:
   422                           	opt callstack 0
   423  00000B                     CAN_SendFrame@message:
   424                           	opt callstack 0
   425  00000B                     FRAME_SensorExcitationStatus@message:
   426                           	opt callstack 0
   427                           
   428                           ; 2 bytes @ 0xA
   429  00000B                     	ds	1
   430  00000C                     ___lwdiv@counter:
   431                           	opt callstack 0
   432  00000C                     FRAME_AdressOfNeighbors@message:
   433                           	opt callstack 0
   434  00000C                     ___awdiv@quotient:
   435                           	opt callstack 0
   436                           
   437                           ; 2 bytes @ 0xB
   438  00000C                     	ds	1
   439  00000D                     ??_CAN_SendFrame:
   440  00000D                     LED_Light_Pos@pos:
   441                           	opt callstack 0
   442                           
   443                           ; 2 bytes @ 0xC
   444  00000D                     	ds	1
   445  00000E                     CAN_TakeFrame@message:
   446                           	opt callstack 0
   447  00000E                     FRAME_AdressOfNeighbors@nrRamki:
   448                           	opt callstack 0
   449                           
   450                           ; 2 bytes @ 0xD
   451  00000E                     	ds	1
   452  00000F                     LED_Light_Pos@fulfillment:
   453                           	opt callstack 0
   454                           
   455                           ; 2 bytes @ 0xE
   456  00000F                     	ds	1
   457  000010                     ??_CAN_TakeFrame:
   458  000010                     ??_FRAME_AdressOfNeighbors:
   459                           
   460                           ; 1 bytes @ 0xF
   461  000010                     	ds	1
   462  000011                     LED_Light_Pos@color:
   463                           	opt callstack 0
   464                           
   465                           ; 1 bytes @ 0x10
   466  000011                     	ds	1
   467  000012                     CAN_TakeFrame@tempCON:
   468                           	opt callstack 0
   469  000012                     LED_Light_Pos@LED_array:
   470                           	opt callstack 0
   471                           
   472                           ; 2 bytes @ 0x11
   473  000012                     	ds	1
   474  000013                     CAN_TakeFrame@k:
   475                           	opt callstack 0
   476  000013                     FRAME_SensorExcitationStatus@Satrun_prime:
   477                           	opt callstack 0
   478                           
   479                           ; 2 bytes @ 0x12
   480  000013                     	ds	1
   481  000014                     LED_Light_Pos@pos2:
   482                           	opt callstack 0
   483                           
   484                           ; 2 bytes @ 0x13
   485  000014                     	ds	1
   486  000015                     FRAME_SensorExcitationStatus@Satrun_prime_2166:
   487                           	opt callstack 0
   488                           
   489                           ; 2 bytes @ 0x14
   490  000015                     	ds	1
   491  000016                     LED_Light_Pos@flage:
   492                           	opt callstack 0
   493                           
   494                           ; 2 bytes @ 0x15
   495  000016                     	ds	1
   496  000017                     FRAME_SensorExcitationStatus@Saturn:
   497                           	opt callstack 0
   498                           
   499                           ; 2 bytes @ 0x16
   500  000017                     	ds	1
   501  000018                     
   502                           ; 1 bytes @ 0x17
   503  000018                     	ds	1
   504  000019                     FRAME_SensorExcitationStatus@k:
   505                           	opt callstack 0
   506                           
   507                           ; 2 bytes @ 0x18
   508  000019                     	ds	6
   509  00001F                     FRAME_AdressOfNeighbors@gaja:
   510                           	opt callstack 0
   511                           
   512                           ; 2 bytes @ 0x1E
   513  00001F                     	ds	2
   514  000021                     FRAME_AdressOfNeighbors@uranos:
   515                           	opt callstack 0
   516                           
   517                           ; 2 bytes @ 0x20
   518  000021                     	ds	2
   519  000023                     FRAME_AdressOfNeighbors@i:
   520                           	opt callstack 0
   521                           
   522                           ; 2 bytes @ 0x22
   523  000023                     	ds	2
   524  000025                     FRAME_HandleCanFrame@message:
   525                           	opt callstack 0
   526                           
   527                           ; 2 bytes @ 0x24
   528  000025                     	ds	2
   529  000027                     ??_FRAME_HandleCanFrame:
   530                           
   531                           ; 1 bytes @ 0x26
   532  000027                     	ds	2
   533  000029                     FRAME_HandleCanFrame@identyfikator:
   534                           	opt callstack 0
   535                           
   536                           ; 1 bytes @ 0x28
   537  000029                     	ds	1
   538  00002A                     TRM_DataTransmition@canMessage:
   539                           	opt callstack 0
   540                           
   541                           ; 17 bytes @ 0x29
   542  00002A                     	ds	17
   543  00003B                     
   544                           ; 1 bytes @ 0x3A
   545 ;;
   546 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   547 ;;
   548 ;; *************** function _main *****************
   549 ;; Defined at:
   550 ;;		line 94 in file "main.c"
   551 ;; Parameters:    Size  Location     Type
   552 ;;		None
   553 ;; Auto vars:     Size  Location     Type
   554 ;;		None
   555 ;; Return value:  Size  Location     Type
   556 ;;                  1    wreg      void 
   557 ;; Registers used:
   558 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   559 ;; Tracked objects:
   560 ;;		On entry : 0/0
   561 ;;		On exit  : 0/0
   562 ;;		Unchanged: 0/0
   563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   567 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   568 ;;Total ram usage:        0 bytes
   569 ;; Hardware stack levels required when called:    8
   570 ;; This function calls:
   571 ;;		_INI_All
   572 ;;		_LED_Update
   573 ;;		_TMR1_Update_flag_Get
   574 ;;		_TMR1_Update_flag_Set
   575 ;;		_TRM_DataTransmition
   576 ;; This function is called by:
   577 ;;		Startup code after reset
   578 ;; This function uses a non-reentrant model
   579 ;;
   580                           
   581                           	psect	text0
   582  000F1A                     __ptext0:
   583                           	opt callstack 0
   584  000F1A                     _main:
   585                           	opt callstack 23
   586                           
   587                           ;main.c: 96:     INI_All();
   588                           
   589                           ;incstack = 0
   590  000F1A  EC1F  F008         	call	_INI_All	;wreg free
   591                           
   592                           ;main.c: 98:     RCON = 0xFF;
   593  000F1E  68D0               	setf	4048,c	;volatile
   594  000F20                     l2907:
   595                           
   596                           ;main.c: 101:     {;main.c: 102:         if(DetectorLedRadar.Flags.obsluzWeWy == 1)
   597  000F20  B044               	btfsc	_DetectorLedRadar,0,c
   598                           
   599                           ;main.c: 103:         {;main.c: 104:             DetectorLedRadar.Flags.obsluzWeWy = 0;
   600  000F22  9044               	bcf	_DetectorLedRadar,0,c
   601                           
   602                           ;main.c: 108:         if(TMR1_Update_flag_Get()==1)
   603  000F24  EC55  F008         	call	_TMR1_Update_flag_Get	;wreg free
   604  000F28  0406               	decf	?_TMR1_Update_flag_Get,w,c
   605  000F2A  1007               	iorwf	?_TMR1_Update_flag_Get+1,w,c
   606  000F2C  A4D8               	btfss	status,2,c
   607  000F2E  D008               	goto	l2917
   608                           
   609                           ;main.c: 109:         {;main.c: 110:             LED_Update();
   610  000F30  EC14  F006         	call	_LED_Update	;wreg free
   611                           
   612                           ;main.c: 111:             TMR1_Update_flag_Set(0);
   613  000F34  0E00               	movlw	0
   614  000F36  6E07               	movwf	TMR1_Update_flag_Set@a+1,c
   615  000F38  0E00               	movlw	0
   616  000F3A  6E06               	movwf	TMR1_Update_flag_Set@a,c
   617  000F3C  EC50  F008         	call	_TMR1_Update_flag_Set	;wreg free
   618  000F40                     l2917:
   619                           
   620                           ;main.c: 115:         TRM_DataTransmition();
   621  000F40  EC2D  F007         	call	_TRM_DataTransmition	;wreg free
   622  000F44  0004               	clrwdt		;# 
   623                           
   624                           ;main.c: 117:     }
   625  000F46  D7EC               	goto	l2907
   626  000F48                     __end_of_main:
   627                           	opt callstack 0
   628                           
   629 ;; *************** function _TRM_DataTransmition *****************
   630 ;; Defined at:
   631 ;;		line 19 in file "TRM.c"
   632 ;; Parameters:    Size  Location     Type
   633 ;;		None
   634 ;; Auto vars:     Size  Location     Type
   635 ;;  canMessage     17   41[COMRAM] struct .
   636 ;;  i               1    0        unsigned char 
   637 ;; Return value:  Size  Location     Type
   638 ;;                  1    wreg      void 
   639 ;; Registers used:
   640 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   641 ;; Tracked objects:
   642 ;;		On entry : 0/0
   643 ;;		On exit  : 0/0
   644 ;;		Unchanged: 0/0
   645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   647 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   649 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   650 ;;Total ram usage:       17 bytes
   651 ;; Hardware stack levels used:    1
   652 ;; Hardware stack levels required when called:    7
   653 ;; This function calls:
   654 ;;		_CAN_TakeFrame
   655 ;;		_FRAME_HandleCanFrame
   656 ;; This function is called by:
   657 ;;		_main
   658 ;; This function uses a non-reentrant model
   659 ;;
   660                           
   661                           	psect	text1
   662  000E5A                     __ptext1:
   663                           	opt callstack 0
   664  000E5A                     _TRM_DataTransmition:
   665                           	opt callstack 23
   666                           
   667                           ;TRM.c: 21:     static BYTE weWyU8 = 0, czujnikWeWyU8 = 0;;TRM.c: 22:     BYTE i;;TRM.c:
      +                           23:     mID canMessage;;TRM.c: 26:     if(DaneCan.Flags.wyslijRamkeStanu)
   668                           
   669                           ;incstack = 0
   670  000E5A  A040               	btfss	_DaneCan,0,c
   671  000E5C  D013               	goto	l2875
   672                           
   673                           ;TRM.c: 27:     {;TRM.c: 29:         canMessage.message_type = 0x02;
   674  000E5E  0E02               	movlw	2
   675  000E60  6E2B               	movwf	TRM_DataTransmition@canMessage+1,c
   676                           
   677                           ;TRM.c: 30:         canMessage.id.Val = 0;
   678  000E62  0E00               	movlw	0
   679  000E64  6E2E               	movwf	TRM_DataTransmition@canMessage+4,c
   680  000E66  0E00               	movlw	0
   681  000E68  6E2F               	movwf	TRM_DataTransmition@canMessage+5,c
   682  000E6A  0E00               	movlw	0
   683  000E6C  6E30               	movwf	TRM_DataTransmition@canMessage+6,c
   684  000E6E  0E00               	movlw	0
   685  000E70  6E31               	movwf	TRM_DataTransmition@canMessage+7,c
   686                           
   687                           ;TRM.c: 31:         canMessage.id.v[2] = 0x01 *4;
   688  000E72  0E04               	movlw	4
   689  000E74  6E30               	movwf	TRM_DataTransmition@canMessage+6,c
   690                           
   691                           ;TRM.c: 32:         FRAME_HandleCanFrame(&canMessage);
   692  000E76  0E2A               	movlw	low TRM_DataTransmition@canMessage
   693  000E78  6E25               	movwf	FRAME_HandleCanFrame@message,c
   694  000E7A  0E00               	movlw	high TRM_DataTransmition@canMessage
   695  000E7C  6E26               	movwf	FRAME_HandleCanFrame@message+1,c
   696  000E7E  ECB8  F004         	call	_FRAME_HandleCanFrame	;wreg free
   697                           
   698                           ;TRM.c: 49:         DaneCan.Flags.wyslijRamkeStanu = 0;
   699  000E82  9040               	bcf	_DaneCan,0,c
   700  000E84                     l2875:
   701                           
   702                           ;TRM.c: 59:     if(CAN_TakeFrame(&canMessage))
   703  000E84  0E2A               	movlw	low TRM_DataTransmition@canMessage
   704  000E86  6E0E               	movwf	CAN_TakeFrame@message,c
   705  000E88  0E00               	movlw	high TRM_DataTransmition@canMessage
   706  000E8A  6E0F               	movwf	CAN_TakeFrame@message+1,c
   707  000E8C  EC85  F001         	call	_CAN_TakeFrame	;wreg free
   708  000E90  0900               	iorlw	0
   709  000E92  B4D8               	btfsc	status,2,c
   710  000E94  0012               	return	
   711                           
   712                           ;TRM.c: 64:         {;TRM.c: 66:             FRAME_HandleCanFrame(&canMessage);
   713  000E96  0E2A               	movlw	low TRM_DataTransmition@canMessage
   714  000E98  6E25               	movwf	FRAME_HandleCanFrame@message,c
   715  000E9A  0E00               	movlw	high TRM_DataTransmition@canMessage
   716  000E9C  6E26               	movwf	FRAME_HandleCanFrame@message+1,c
   717  000E9E  ECB8  F004         	call	_FRAME_HandleCanFrame	;wreg free
   718                           
   719                           ;TRM.c: 67:         }
   720  000EA2  0012               	return		;funcret
   721  000EA4                     __end_of_TRM_DataTransmition:
   722                           	opt callstack 0
   723                           
   724 ;; *************** function _FRAME_HandleCanFrame *****************
   725 ;; Defined at:
   726 ;;		line 512 in file "FRAME.c"
   727 ;; Parameters:    Size  Location     Type
   728 ;;  message         2   36[COMRAM] PTR struct .
   729 ;;		 -> TRM_DataTransmition@canMessage(17), 
   730 ;; Auto vars:     Size  Location     Type
   731 ;;  identyfikato    1   40[COMRAM] unsigned char 
   732 ;; Return value:  Size  Location     Type
   733 ;;                  1    wreg      void 
   734 ;; Registers used:
   735 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   736 ;; Tracked objects:
   737 ;;		On entry : 0/0
   738 ;;		On exit  : 0/0
   739 ;;		Unchanged: 0/0
   740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   741 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   742 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   743 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   744 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   745 ;;Total ram usage:        5 bytes
   746 ;; Hardware stack levels used:    1
   747 ;; Hardware stack levels required when called:    6
   748 ;; This function calls:
   749 ;;		_CAN_GenID
   750 ;;		_CAN_SendFrame
   751 ;;		_FRAME_AdressOfNeighbors
   752 ;;		_FRAME_SensorExcitationStatus
   753 ;;		_LED_Error
   754 ;;		___awdiv
   755 ;; This function is called by:
   756 ;;		_TRM_DataTransmition
   757 ;; This function uses a non-reentrant model
   758 ;;
   759                           
   760                           	psect	text2
   761  000970                     __ptext2:
   762                           	opt callstack 0
   763  000970                     _FRAME_HandleCanFrame:
   764                           	opt callstack 23
   765                           
   766                           ;FRAME.c: 512: void FRAME_HandleCanFrame(mID * message);FRAME.c: 513: {;FRAME.c: 514:   
      +                            BYTE identyfikator = (BYTE) message->id.v[2]/4;
   767                           
   768                           ;incstack = 0
   769  000970  EE20 F006          	lfsr	2,6
   770  000974  5025               	movf	FRAME_HandleCanFrame@message,w,c
   771  000976  26D9               	addwf	fsr2l,f,c
   772  000978  5026               	movf	FRAME_HandleCanFrame@message+1,w,c
   773  00097A  22DA               	addwfc	fsr2h,f,c
   774  00097C  50DF               	movf	indf2,w,c
   775  00097E  6E27               	movwf	??_FRAME_HandleCanFrame& (0+255),c
   776  000980  5027               	movf	??_FRAME_HandleCanFrame,w,c
   777  000982  6E06               	movwf	___awdiv@dividend,c
   778  000984  6A07               	clrf	___awdiv@dividend+1,c
   779  000986  0E00               	movlw	0
   780  000988  6E09               	movwf	___awdiv@divisor+1,c
   781  00098A  0E04               	movlw	4
   782  00098C  6E08               	movwf	___awdiv@divisor,c
   783  00098E  ECD2  F005         	call	___awdiv	;wreg free
   784  000992  5006               	movf	?___awdiv,w,c
   785  000994  6E29               	movwf	FRAME_HandleCanFrame@identyfikator,c
   786                           
   787                           ;FRAME.c: 517:     switch(identyfikator)
   788  000996  D014               	goto	l2823
   789  000998                     l2817:
   790                           
   791                           ;FRAME.c: 520:             FRAME_SensorExcitationStatus(message);
   792  000998  C025  F00B         	movff	FRAME_HandleCanFrame@message,FRAME_SensorExcitationStatus@message
   793  00099C  C026  F00C         	movff	FRAME_HandleCanFrame@message+1,FRAME_SensorExcitationStatus@message+1
   794  0009A0  EC23  F004         	call	_FRAME_SensorExcitationStatus	;wreg free
   795                           
   796                           ;FRAME.c: 521:             break;
   797  0009A4  D019               	goto	l2825
   798  0009A6                     l2819:
   799                           
   800                           ;FRAME.c: 564:           FRAME_AdressOfNeighbors(message, identyfikator - 0x10);
   801  0009A6  C025  F00C         	movff	FRAME_HandleCanFrame@message,FRAME_AdressOfNeighbors@message
   802  0009AA  C026  F00D         	movff	FRAME_HandleCanFrame@message+1,FRAME_AdressOfNeighbors@message+1
   803  0009AE  0EF0               	movlw	240
   804  0009B0  2429               	addwf	FRAME_HandleCanFrame@identyfikator,w,c
   805  0009B2  6E0E               	movwf	FRAME_AdressOfNeighbors@nrRamki,c
   806  0009B4  6A0F               	clrf	FRAME_AdressOfNeighbors@nrRamki+1,c
   807  0009B6  0EFF               	movlw	255
   808  0009B8  220F               	addwfc	FRAME_AdressOfNeighbors@nrRamki+1,f,c
   809  0009BA  EC30  F000         	call	_FRAME_AdressOfNeighbors	;wreg free
   810                           
   811                           ;FRAME.c: 566:             break;
   812  0009BE  D00C               	goto	l2825
   813  0009C0                     l2823:
   814  0009C0  5029               	movf	FRAME_HandleCanFrame@identyfikator,w,c
   815  0009C2  6E27               	movwf	??_FRAME_HandleCanFrame& (0+255),c
   816  0009C4  6A28               	clrf	(??_FRAME_HandleCanFrame+1)& (0+255),c
   817                           
   818                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   819                           ; Switch size 1, requested type "simple"
   820                           ; Number of cases is 1, Range of values is 0 to 0
   821                           ; switch strategies available:
   822                           ; Name         Instructions Cycles
   823                           ; simple_byte            4     3 (average)
   824                           ;	Chosen strategy is simple_byte
   825  0009C6  5028               	movf	??_FRAME_HandleCanFrame+1,w,c
   826  0009C8  0A00               	xorlw	0	; case 0
   827  0009CA  A4D8               	btfss	status,2,c
   828  0009CC  D7EC               	goto	l2819
   829                           
   830                           ; Switch size 1, requested type "simple"
   831                           ; Number of cases is 1, Range of values is 1 to 1
   832                           ; switch strategies available:
   833                           ; Name         Instructions Cycles
   834                           ; simple_byte            4     3 (average)
   835                           ;	Chosen strategy is simple_byte
   836  0009CE  5027               	movf	??_FRAME_HandleCanFrame,w,c
   837  0009D0  0A01               	xorlw	1	; case 1
   838  0009D2  B4D8               	btfsc	status,2,c
   839  0009D4  D7E1               	goto	l2817
   840  0009D6  D7E7               	goto	l2819
   841  0009D8                     l2825:
   842                           
   843                           ;FRAME.c: 568:     if(message->message_type == 0x02)
   844  0009D8  EE20 F001          	lfsr	2,1
   845  0009DC  5025               	movf	FRAME_HandleCanFrame@message,w,c
   846  0009DE  26D9               	addwf	fsr2l,f,c
   847  0009E0  5026               	movf	FRAME_HandleCanFrame@message+1,w,c
   848  0009E2  22DA               	addwfc	fsr2h,f,c
   849  0009E4  0E02               	movlw	2
   850  0009E6  18DE               	xorwf	postinc2,w,c
   851  0009E8  A4D8               	btfss	status,2,c
   852  0009EA  0012               	return	
   853                           
   854                           ;FRAME.c: 569:     {;FRAME.c: 571:         message->frame_type = 0x03;
   855  0009EC  EE20 F002          	lfsr	2,2
   856  0009F0  5025               	movf	FRAME_HandleCanFrame@message,w,c
   857  0009F2  26D9               	addwf	fsr2l,f,c
   858  0009F4  5026               	movf	FRAME_HandleCanFrame@message+1,w,c
   859  0009F6  22DA               	addwfc	fsr2h,f,c
   860  0009F8  0E03               	movlw	3
   861  0009FA  6EDF               	movwf	indf2,c
   862                           
   863                           ;FRAME.c: 572:         message->message_type = 0x01;
   864  0009FC  EE20 F001          	lfsr	2,1
   865  000A00  5025               	movf	FRAME_HandleCanFrame@message,w,c
   866  000A02  26D9               	addwf	fsr2l,f,c
   867  000A04  5026               	movf	FRAME_HandleCanFrame@message+1,w,c
   868  000A06  22DA               	addwfc	fsr2h,f,c
   869  000A08  0E01               	movlw	1
   870  000A0A  6EDF               	movwf	indf2,c
   871                           
   872                           ;FRAME.c: 573:         message->id.Val = 0;
   873  000A0C  EE20 F004          	lfsr	2,4
   874  000A10  5025               	movf	FRAME_HandleCanFrame@message,w,c
   875  000A12  26D9               	addwf	fsr2l,f,c
   876  000A14  5026               	movf	FRAME_HandleCanFrame@message+1,w,c
   877  000A16  22DA               	addwfc	fsr2h,f,c
   878  000A18  6ADE               	clrf	postinc2,c
   879  000A1A  6ADE               	clrf	postinc2,c
   880  000A1C  6ADE               	clrf	postinc2,c
   881  000A1E  6ADD               	clrf	postdec2,c
   882                           
   883                           ;FRAME.c: 575:         message->id.v[2] = identyfikator*4;
   884  000A20  5029               	movf	FRAME_HandleCanFrame@identyfikator,w,c
   885  000A22  0D04               	mullw	4
   886  000A24  EE20 F006          	lfsr	2,6
   887  000A28  5025               	movf	FRAME_HandleCanFrame@message,w,c
   888  000A2A  26D9               	addwf	fsr2l,f,c
   889  000A2C  5026               	movf	FRAME_HandleCanFrame@message+1,w,c
   890  000A2E  22DA               	addwfc	fsr2h,f,c
   891  000A30  CFF3 FFDF          	movff	prodl,indf2
   892                           
   893                           ;FRAME.c: 576:         CAN_GenID(message,identyfikator);
   894  000A34  C025  F006         	movff	FRAME_HandleCanFrame@message,CAN_GenID@message
   895  000A38  C026  F007         	movff	FRAME_HandleCanFrame@message+1,CAN_GenID@message+1
   896  000A3C  C029  F008         	movff	FRAME_HandleCanFrame@identyfikator,CAN_GenID@frameID
   897  000A40  EC88  F005         	call	_CAN_GenID	;wreg free
   898                           
   899                           ;FRAME.c: 577:         CAN_SendFrame(message);
   900  000A44  C025  F00B         	movff	FRAME_HandleCanFrame@message,CAN_SendFrame@message
   901  000A48  C026  F00C         	movff	FRAME_HandleCanFrame@message+1,CAN_SendFrame@message+1
   902  000A4C  ECC3  F002         	call	_CAN_SendFrame	;wreg free
   903                           
   904                           ;FRAME.c: 588:        while(RXB0CONbits.FILHIT3)
   905  000A50  D004               	goto	l520
   906  000A52                     l521:
   907                           
   908                           ;FRAME.c: 589:        {;FRAME.c: 590:            if(TXB0CONbits.TXERR == 1){
   909  000A52  010F               	movlb	15	; () banked
   910  000A54  B940               	btfsc	64,4,b	;volatile
   911                           
   912                           ; BSR set to: 15
   913                           ;FRAME.c: 591:                LED_Error();
   914  000A56  ECF2  F007         	call	_LED_Error	;wreg free
   915  000A5A                     l520:
   916                           
   917                           ;FRAME.c: 588:        while(RXB0CONbits.FILHIT3)
   918  000A5A  A660               	btfss	3936,3,c	;volatile
   919  000A5C  0012               	return	
   920  000A5E  D7F9               	goto	l521
   921  000A60                     __end_of_FRAME_HandleCanFrame:
   922                           	opt callstack 0
   923                           
   924 ;; *************** function _FRAME_SensorExcitationStatus *****************
   925 ;; Defined at:
   926 ;;		line 33 in file "FRAME.c"
   927 ;; Parameters:    Size  Location     Type
   928 ;;  message         2   10[COMRAM] PTR struct .
   929 ;;		 -> TRM_DataTransmition@canMessage(17), 
   930 ;; Auto vars:     Size  Location     Type
   931 ;;  Satrun_prime    2   20[COMRAM] int 
   932 ;;  terra           2    0        int 
   933 ;;  Satrun_prime    2   18[COMRAM] int 
   934 ;;  terra           2    0        int 
   935 ;;  k               2   24[COMRAM] unsigned short 
   936 ;;  Saturn          2   22[COMRAM] unsigned short 
   937 ;; Return value:  Size  Location     Type
   938 ;;                  1    wreg      void 
   939 ;; Registers used:
   940 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   941 ;; Tracked objects:
   942 ;;		On entry : 0/0
   943 ;;		On exit  : 0/0
   944 ;;		Unchanged: 0/0
   945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   946 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   947 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   948 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   949 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   950 ;;Total ram usage:       16 bytes
   951 ;; Hardware stack levels used:    1
   952 ;; Hardware stack levels required when called:    5
   953 ;; This function calls:
   954 ;;		_LED_Clear
   955 ;;		_LED_Error
   956 ;;		_LOCK_Get
   957 ;;		_LOCK_Set
   958 ;;		_MOC_Aktualna_Temperatura
   959 ;;		_MOC_Frame_Counter
   960 ;;		_MOC_NOTWORK
   961 ;;		_MOC_Wynikowa_wartosc_roznicowa
   962 ;; This function is called by:
   963 ;;		_FRAME_HandleCanFrame
   964 ;; This function uses a non-reentrant model
   965 ;;
   966                           
   967                           	psect	text3
   968  000846                     __ptext3:
   969                           	opt callstack 0
   970  000846                     _FRAME_SensorExcitationStatus:
   971                           	opt callstack 23
   972                           
   973                           ;FRAME.c: 33: static void FRAME_SensorExcitationStatus(mID *message);FRAME.c: 34: {;FRAM
      +                          E.c: 35:     if(message->message_type == 0x02)
   974                           
   975                           ;incstack = 0
   976  000846  EE20 F001          	lfsr	2,1
   977  00084A  500B               	movf	FRAME_SensorExcitationStatus@message,w,c
   978  00084C  26D9               	addwf	fsr2l,f,c
   979  00084E  500C               	movf	FRAME_SensorExcitationStatus@message+1,w,c
   980  000850  22DA               	addwfc	fsr2h,f,c
   981  000852  0E02               	movlw	2
   982  000854  18DE               	xorwf	postinc2,w,c
   983  000856  A4D8               	btfss	status,2,c
   984  000858  D047               	goto	l432
   985                           
   986                           ;FRAME.c: 36:     {;FRAME.c: 37:         message->data_length = 6;
   987  00085A  EE20 F010          	lfsr	2,16
   988  00085E  500B               	movf	FRAME_SensorExcitationStatus@message,w,c
   989  000860  26D9               	addwf	fsr2l,f,c
   990  000862  500C               	movf	FRAME_SensorExcitationStatus@message+1,w,c
   991  000864  22DA               	addwfc	fsr2h,f,c
   992  000866  0E06               	movlw	6
   993  000868  6EDF               	movwf	indf2,c
   994                           
   995                           ;FRAME.c: 43:         message->data[0] = LOCK_Get();
   996  00086A  EE20 F008          	lfsr	2,8
   997  00086E  500B               	movf	FRAME_SensorExcitationStatus@message,w,c
   998  000870  26D9               	addwf	fsr2l,f,c
   999  000872  500C               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1000  000874  22DA               	addwfc	fsr2h,f,c
  1001  000876  EC6F  F008         	call	_LOCK_Get	;wreg free
  1002  00087A  6EDF               	movwf	indf2,c
  1003                           
  1004                           ;FRAME.c: 44:         message->data[1] = MOC_Wynikowa_wartosc_roznicowa() >> 8 ;
  1005  00087C  EE20 F009          	lfsr	2,9
  1006  000880  500B               	movf	FRAME_SensorExcitationStatus@message,w,c
  1007  000882  26D9               	addwf	fsr2l,f,c
  1008  000884  500C               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1009  000886  22DA               	addwfc	fsr2h,f,c
  1010  000888  EC46  F008         	call	_MOC_Wynikowa_wartosc_roznicowa	;wreg free
  1011  00088C  C007  F006         	movff	?_MOC_Wynikowa_wartosc_roznicowa+1,?_MOC_Wynikowa_wartosc_roznicowa
  1012  000890  6A07               	clrf	?_MOC_Wynikowa_wartosc_roznicowa+1,c
  1013  000892  5006               	movf	?_MOC_Wynikowa_wartosc_roznicowa,w,c
  1014  000894  6EDF               	movwf	indf2,c
  1015                           
  1016                           ;FRAME.c: 45:         message->data[2] = MOC_Wynikowa_wartosc_roznicowa() & 0x00FF;
  1017  000896  EE20 F00A          	lfsr	2,10
  1018  00089A  500B               	movf	FRAME_SensorExcitationStatus@message,w,c
  1019  00089C  26D9               	addwf	fsr2l,f,c
  1020  00089E  500C               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1021  0008A0  22DA               	addwfc	fsr2h,f,c
  1022  0008A2  EC46  F008         	call	_MOC_Wynikowa_wartosc_roznicowa	;wreg free
  1023  0008A6  5006               	movf	?_MOC_Wynikowa_wartosc_roznicowa,w,c
  1024  0008A8  6EDF               	movwf	indf2,c
  1025                           
  1026                           ;FRAME.c: 46:         message->data[3] = MOC_Frame_Counter();
  1027  0008AA  EE20 F00B          	lfsr	2,11
  1028  0008AE  500B               	movf	FRAME_SensorExcitationStatus@message,w,c
  1029  0008B0  26D9               	addwf	fsr2l,f,c
  1030  0008B2  500C               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1031  0008B4  22DA               	addwfc	fsr2h,f,c
  1032  0008B6  EC38  F008         	call	_MOC_Frame_Counter	;wreg free
  1033  0008BA  5006               	movf	?_MOC_Frame_Counter,w,c
  1034  0008BC  6EDF               	movwf	indf2,c
  1035                           
  1036                           ;FRAME.c: 47:         message->data[4] = MOC_Aktualna_Temperatura();
  1037  0008BE  EE20 F00C          	lfsr	2,12
  1038  0008C2  500B               	movf	FRAME_SensorExcitationStatus@message,w,c
  1039  0008C4  26D9               	addwf	fsr2l,f,c
  1040  0008C6  500C               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1041  0008C8  22DA               	addwfc	fsr2h,f,c
  1042  0008CA  EC4B  F008         	call	_MOC_Aktualna_Temperatura	;wreg free
  1043  0008CE  5006               	movf	?_MOC_Aktualna_Temperatura,w,c
  1044  0008D0  6EDF               	movwf	indf2,c
  1045                           
  1046                           ;FRAME.c: 48:         message->data[5] = MOC_NOTWORK();
  1047  0008D2  EE20 F00D          	lfsr	2,13
  1048  0008D6  500B               	movf	FRAME_SensorExcitationStatus@message,w,c
  1049  0008D8  26D9               	addwf	fsr2l,f,c
  1050  0008DA  500C               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1051  0008DC  22DA               	addwfc	fsr2h,f,c
  1052  0008DE  EC64  F008         	call	_MOC_NOTWORK	;wreg free
  1053  0008E2  5006               	movf	?_MOC_NOTWORK,w,c
  1054  0008E4  6EDF               	movwf	indf2,c
  1055                           
  1056                           ;FRAME.c: 58:     }
  1057  0008E6  0012               	return	
  1058  0008E8                     l432:
  1059                           
  1060                           ;FRAME.c: 60:     {;FRAME.c: 61:         WORD k;;FRAME.c: 62:         WORD Saturn = Dane
      +                          ->sasiedzi[0+(4*0x10)].adres;
  1061  0008E8  C10E F017          	movff	270,FRAME_SensorExcitationStatus@Saturn
  1062  0008EC  C10F F018          	movff	271,FRAME_SensorExcitationStatus@Saturn+1
  1063                           
  1064                           ;FRAME.c: 63:         if(Saturn == 11)
  1065  0008F0  0E0B               	movlw	11
  1066  0008F2  1817               	xorwf	FRAME_SensorExcitationStatus@Saturn,w,c
  1067  0008F4  1018               	iorwf	FRAME_SensorExcitationStatus@Saturn+1,w,c
  1068  0008F6  A4D8               	btfss	status,2,c
  1069  0008F8  D013               	goto	l434
  1070                           
  1071                           ;FRAME.c: 64:         {;FRAME.c: 65:             int Satrun_prime = Saturn;
  1072  0008FA  C017  F013         	movff	FRAME_SensorExcitationStatus@Saturn,FRAME_SensorExcitationStatus@Satrun_prime
  1073  0008FE  C018  F014         	movff	FRAME_SensorExcitationStatus@Saturn+1,FRAME_SensorExcitationStatus@Satrun_prime+1
  1074                           
  1075                           ;FRAME.c: 67:             for(k=0;k<400;k++)
  1076  000902  0E00               	movlw	0
  1077  000904  6E1A               	movwf	FRAME_SensorExcitationStatus@k+1,c
  1078  000906  0E00               	movlw	0
  1079  000908  6E19               	movwf	FRAME_SensorExcitationStatus@k,c
  1080  00090A                     l2547:
  1081                           
  1082                           ;FRAME.c: 68:             {;FRAME.c: 69:             LED_Clear();
  1083  00090A  EC01  F008         	call	_LED_Clear	;wreg free
  1084                           
  1085                           ;FRAME.c: 70:             }
  1086  00090E  4A19               	infsnz	FRAME_SensorExcitationStatus@k,f,c
  1087  000910  2A1A               	incf	FRAME_SensorExcitationStatus@k+1,f,c
  1088  000912  0E90               	movlw	144
  1089  000914  5C19               	subwf	FRAME_SensorExcitationStatus@k,w,c
  1090  000916  0E01               	movlw	1
  1091  000918  581A               	subwfb	FRAME_SensorExcitationStatus@k+1,w,c
  1092  00091A  B0D8               	btfsc	status,0,c
  1093  00091C  D013               	goto	u1100
  1094  00091E  D7F5               	goto	l2547
  1095  000920                     l434:
  1096                           
  1097                           ;FRAME.c: 75:         {;FRAME.c: 76:             int Satrun_prime = Saturn;
  1098  000920  C017  F015         	movff	FRAME_SensorExcitationStatus@Saturn,FRAME_SensorExcitationStatus@Satrun_prime_216
      +                          6
  1099  000924  C018  F016         	movff	FRAME_SensorExcitationStatus@Saturn+1,FRAME_SensorExcitationStatus@Satrun_prime_2
      +                          166+1
  1100                           
  1101                           ;FRAME.c: 77:             for(k=0;k<400;k++)
  1102  000928  0E00               	movlw	0
  1103  00092A  6E1A               	movwf	FRAME_SensorExcitationStatus@k+1,c
  1104  00092C  0E00               	movlw	0
  1105  00092E  6E19               	movwf	FRAME_SensorExcitationStatus@k,c
  1106  000930                     l2559:
  1107                           
  1108                           ;FRAME.c: 78:             {;FRAME.c: 79:             LED_Error();
  1109  000930  ECF2  F007         	call	_LED_Error	;wreg free
  1110                           
  1111                           ;FRAME.c: 80:             }
  1112  000934  4A19               	infsnz	FRAME_SensorExcitationStatus@k,f,c
  1113  000936  2A1A               	incf	FRAME_SensorExcitationStatus@k+1,f,c
  1114  000938  0E90               	movlw	144
  1115  00093A  5C19               	subwf	FRAME_SensorExcitationStatus@k,w,c
  1116  00093C  0E01               	movlw	1
  1117  00093E  581A               	subwfb	FRAME_SensorExcitationStatus@k+1,w,c
  1118  000940  A0D8               	btfss	status,0,c
  1119  000942  D7F6               	goto	l2559
  1120  000944                     u1100:
  1121                           
  1122                           ;FRAME.c: 84:         if(0x12b==message->id.w[0])
  1123  000944  EE20 F004          	lfsr	2,4
  1124  000948  500B               	movf	FRAME_SensorExcitationStatus@message,w,c
  1125  00094A  26D9               	addwf	fsr2l,f,c
  1126  00094C  500C               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1127  00094E  22DA               	addwfc	fsr2h,f,c
  1128  000950  0E2B               	movlw	43
  1129  000952  18DE               	xorwf	postinc2,w,c
  1130  000954  E10C               	bnz	l441
  1131  000956  04DE               	decf	postinc2,w,c
  1132  000958  A4D8               	btfss	status,2,c
  1133  00095A  0012               	return	
  1134                           
  1135                           ;FRAME.c: 85:         {;FRAME.c: 86:         LOCK_Set(message->data[0]);
  1136  00095C  EE20 F008          	lfsr	2,8
  1137  000960  500B               	movf	FRAME_SensorExcitationStatus@message,w,c
  1138  000962  26D9               	addwf	fsr2l,f,c
  1139  000964  500C               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1140  000966  22DA               	addwfc	fsr2h,f,c
  1141  000968  50DF               	movf	indf2,w,c
  1142  00096A  EC68  F008         	call	_LOCK_Set
  1143  00096E                     l441:
  1144  00096E  0012               	return		;funcret
  1145  000970                     __end_of_FRAME_SensorExcitationStatus:
  1146                           	opt callstack 0
  1147                           
  1148 ;; *************** function _MOC_Wynikowa_wartosc_roznicowa *****************
  1149 ;; Defined at:
  1150 ;;		line 33 in file "MOC_Funct.c"
  1151 ;; Parameters:    Size  Location     Type
  1152 ;;		None
  1153 ;; Auto vars:     Size  Location     Type
  1154 ;;		None
  1155 ;; Return value:  Size  Location     Type
  1156 ;;                  2    5[COMRAM] unsigned int 
  1157 ;; Registers used:
  1158 ;;		wreg, status,2
  1159 ;; Tracked objects:
  1160 ;;		On entry : 0/0
  1161 ;;		On exit  : 0/0
  1162 ;;		Unchanged: 0/0
  1163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1164 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1167 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1168 ;;Total ram usage:        2 bytes
  1169 ;; Hardware stack levels used:    1
  1170 ;; Hardware stack levels required when called:    3
  1171 ;; This function calls:
  1172 ;;		Nothing
  1173 ;; This function is called by:
  1174 ;;		_FRAME_SensorExcitationStatus
  1175 ;; This function uses a non-reentrant model
  1176 ;;
  1177                           
  1178                           	psect	text4
  1179  00108C                     __ptext4:
  1180                           	opt callstack 0
  1181  00108C                     _MOC_Wynikowa_wartosc_roznicowa:
  1182                           	opt callstack 24
  1183                           
  1184                           ;MOC_Funct.c: 35:     return 0x0220;
  1185                           
  1186                           ;incstack = 0
  1187  00108C  0E02               	movlw	2
  1188  00108E  6E07               	movwf	?_MOC_Wynikowa_wartosc_roznicowa+1,c
  1189  001090  0E20               	movlw	32
  1190  001092  6E06               	movwf	?_MOC_Wynikowa_wartosc_roznicowa,c
  1191  001094  0012               	return		;funcret
  1192  001096                     __end_of_MOC_Wynikowa_wartosc_roznicowa:
  1193                           	opt callstack 0
  1194                           
  1195 ;; *************** function _MOC_NOTWORK *****************
  1196 ;; Defined at:
  1197 ;;		line 47 in file "MOC_Funct.c"
  1198 ;; Parameters:    Size  Location     Type
  1199 ;;		None
  1200 ;; Auto vars:     Size  Location     Type
  1201 ;;		None
  1202 ;; Return value:  Size  Location     Type
  1203 ;;                  2    5[COMRAM] unsigned int 
  1204 ;; Registers used:
  1205 ;;		wreg, status,2
  1206 ;; Tracked objects:
  1207 ;;		On entry : 0/0
  1208 ;;		On exit  : 0/0
  1209 ;;		Unchanged: 0/0
  1210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1211 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1214 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1215 ;;Total ram usage:        2 bytes
  1216 ;; Hardware stack levels used:    1
  1217 ;; Hardware stack levels required when called:    3
  1218 ;; This function calls:
  1219 ;;		Nothing
  1220 ;; This function is called by:
  1221 ;;		_FRAME_SensorExcitationStatus
  1222 ;; This function uses a non-reentrant model
  1223 ;;
  1224                           
  1225                           	psect	text5
  1226  0010C8                     __ptext5:
  1227                           	opt callstack 0
  1228  0010C8                     _MOC_NOTWORK:
  1229                           	opt callstack 24
  1230                           
  1231                           ;MOC_Funct.c: 49:     return 0xFF;
  1232                           
  1233                           ;incstack = 0
  1234  0010C8  0E00               	movlw	0
  1235  0010CA  6E07               	movwf	?_MOC_NOTWORK+1,c
  1236  0010CC  6806               	setf	?_MOC_NOTWORK,c
  1237  0010CE  0012               	return		;funcret
  1238  0010D0                     __end_of_MOC_NOTWORK:
  1239                           	opt callstack 0
  1240                           
  1241 ;; *************** function _MOC_Frame_Counter *****************
  1242 ;; Defined at:
  1243 ;;		line 38 in file "MOC_Funct.c"
  1244 ;; Parameters:    Size  Location     Type
  1245 ;;		None
  1246 ;; Auto vars:     Size  Location     Type
  1247 ;;		None
  1248 ;; Return value:  Size  Location     Type
  1249 ;;                  2    5[COMRAM] unsigned int 
  1250 ;; Registers used:
  1251 ;;		wreg, status,2, status,0
  1252 ;; Tracked objects:
  1253 ;;		On entry : 0/0
  1254 ;;		On exit  : 0/0
  1255 ;;		Unchanged: 0/0
  1256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1257 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1260 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1261 ;;Total ram usage:        2 bytes
  1262 ;; Hardware stack levels used:    1
  1263 ;; Hardware stack levels required when called:    3
  1264 ;; This function calls:
  1265 ;;		Nothing
  1266 ;; This function is called by:
  1267 ;;		_FRAME_SensorExcitationStatus
  1268 ;; This function uses a non-reentrant model
  1269 ;;
  1270                           
  1271                           	psect	text6
  1272  001070                     __ptext6:
  1273                           	opt callstack 0
  1274  001070                     _MOC_Frame_Counter:
  1275                           	opt callstack 24
  1276                           
  1277                           ;MOC_Funct.c: 40:     static UINT zeta = 0x11;;MOC_Funct.c: 41:     return zeta++;
  1278                           
  1279                           ;incstack = 0
  1280  001070  5050               	movf	MOC_Frame_Counter@zeta,w,c
  1281  001072  6E06               	movwf	?_MOC_Frame_Counter,c
  1282  001074  5051               	movf	MOC_Frame_Counter@zeta+1,w,c
  1283  001076  6E07               	movwf	?_MOC_Frame_Counter+1,c
  1284  001078  4A50               	infsnz	MOC_Frame_Counter@zeta,f,c
  1285  00107A  2A51               	incf	MOC_Frame_Counter@zeta+1,f,c
  1286  00107C  0012               	return		;funcret
  1287  00107E                     __end_of_MOC_Frame_Counter:
  1288                           	opt callstack 0
  1289                           
  1290 ;; *************** function _MOC_Aktualna_Temperatura *****************
  1291 ;; Defined at:
  1292 ;;		line 43 in file "MOC_Funct.c"
  1293 ;; Parameters:    Size  Location     Type
  1294 ;;		None
  1295 ;; Auto vars:     Size  Location     Type
  1296 ;;		None
  1297 ;; Return value:  Size  Location     Type
  1298 ;;                  2    5[COMRAM] unsigned int 
  1299 ;; Registers used:
  1300 ;;		wreg, status,2
  1301 ;; Tracked objects:
  1302 ;;		On entry : 0/0
  1303 ;;		On exit  : 0/0
  1304 ;;		Unchanged: 0/0
  1305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1306 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1309 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1310 ;;Total ram usage:        2 bytes
  1311 ;; Hardware stack levels used:    1
  1312 ;; Hardware stack levels required when called:    3
  1313 ;; This function calls:
  1314 ;;		Nothing
  1315 ;; This function is called by:
  1316 ;;		_FRAME_SensorExcitationStatus
  1317 ;; This function uses a non-reentrant model
  1318 ;;
  1319                           
  1320                           	psect	text7
  1321  001096                     __ptext7:
  1322                           	opt callstack 0
  1323  001096                     _MOC_Aktualna_Temperatura:
  1324                           	opt callstack 24
  1325                           
  1326                           ;MOC_Funct.c: 45:     return 0x1B;
  1327                           
  1328                           ;incstack = 0
  1329  001096  0E00               	movlw	0
  1330  001098  6E07               	movwf	?_MOC_Aktualna_Temperatura+1,c
  1331  00109A  0E1B               	movlw	27
  1332  00109C  6E06               	movwf	?_MOC_Aktualna_Temperatura,c
  1333  00109E  0012               	return		;funcret
  1334  0010A0                     __end_of_MOC_Aktualna_Temperatura:
  1335                           	opt callstack 0
  1336                           
  1337 ;; *************** function _LOCK_Set *****************
  1338 ;; Defined at:
  1339 ;;		line 52 in file "LED.c"
  1340 ;; Parameters:    Size  Location     Type
  1341 ;;  k               1    wreg     unsigned char 
  1342 ;; Auto vars:     Size  Location     Type
  1343 ;;  k               1    5[COMRAM] unsigned char 
  1344 ;; Return value:  Size  Location     Type
  1345 ;;                  1    wreg      void 
  1346 ;; Registers used:
  1347 ;;		wreg
  1348 ;; Tracked objects:
  1349 ;;		On entry : 0/0
  1350 ;;		On exit  : 0/0
  1351 ;;		Unchanged: 0/0
  1352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1354 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1356 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1357 ;;Total ram usage:        1 bytes
  1358 ;; Hardware stack levels used:    1
  1359 ;; Hardware stack levels required when called:    3
  1360 ;; This function calls:
  1361 ;;		Nothing
  1362 ;; This function is called by:
  1363 ;;		_FRAME_SensorExcitationStatus
  1364 ;; This function uses a non-reentrant model
  1365 ;;
  1366                           
  1367                           	psect	text8
  1368  0010D0                     __ptext8:
  1369                           	opt callstack 0
  1370  0010D0                     _LOCK_Set:
  1371                           	opt callstack 24
  1372                           
  1373                           ;incstack = 0
  1374                           ;LOCK_Set@k stored from wreg
  1375  0010D0  6E06               	movwf	LOCK_Set@k,c
  1376                           
  1377                           ;LED.c: 52: void LOCK_Set(BYTE k);LED.c: 53: {;LED.c: 54:     LOCK = k;
  1378  0010D2  C006  F04F         	movff	LOCK_Set@k,_LOCK
  1379  0010D6  0012               	return		;funcret
  1380  0010D8                     __end_of_LOCK_Set:
  1381                           	opt callstack 0
  1382                           
  1383 ;; *************** function _LOCK_Get *****************
  1384 ;; Defined at:
  1385 ;;		line 57 in file "LED.c"
  1386 ;; Parameters:    Size  Location     Type
  1387 ;;		None
  1388 ;; Auto vars:     Size  Location     Type
  1389 ;;		None
  1390 ;; Return value:  Size  Location     Type
  1391 ;;                  1    wreg      unsigned char 
  1392 ;; Registers used:
  1393 ;;		wreg, status,2
  1394 ;; Tracked objects:
  1395 ;;		On entry : 0/0
  1396 ;;		On exit  : 0/0
  1397 ;;		Unchanged: 0/0
  1398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1403 ;;Total ram usage:        0 bytes
  1404 ;; Hardware stack levels used:    1
  1405 ;; Hardware stack levels required when called:    3
  1406 ;; This function calls:
  1407 ;;		Nothing
  1408 ;; This function is called by:
  1409 ;;		_FRAME_SensorExcitationStatus
  1410 ;; This function uses a non-reentrant model
  1411 ;;
  1412                           
  1413                           	psect	text9
  1414  0010DE                     __ptext9:
  1415                           	opt callstack 0
  1416  0010DE                     _LOCK_Get:
  1417                           	opt callstack 24
  1418                           
  1419                           ;LED.c: 59:     return LOCK;
  1420                           
  1421                           ;incstack = 0
  1422  0010DE  504F               	movf	_LOCK,w,c
  1423  0010E0  0012               	return		;funcret
  1424  0010E2                     __end_of_LOCK_Get:
  1425                           	opt callstack 0
  1426                           
  1427 ;; *************** function _LED_Error *****************
  1428 ;; Defined at:
  1429 ;;		line 37 in file "LED.c"
  1430 ;; Parameters:    Size  Location     Type
  1431 ;;		None
  1432 ;; Auto vars:     Size  Location     Type
  1433 ;;		None
  1434 ;; Return value:  Size  Location     Type
  1435 ;;                  2  255[None  ] unsigned int 
  1436 ;; Registers used:
  1437 ;;		wreg, status,2, status,0, cstack
  1438 ;; Tracked objects:
  1439 ;;		On entry : 0/0
  1440 ;;		On exit  : 0/0
  1441 ;;		Unchanged: 0/0
  1442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1447 ;;Total ram usage:        0 bytes
  1448 ;; Hardware stack levels used:    1
  1449 ;; Hardware stack levels required when called:    4
  1450 ;; This function calls:
  1451 ;;		_LED_Control
  1452 ;; This function is called by:
  1453 ;;		_FRAME_SensorExcitationStatus
  1454 ;;		_FRAME_HandleCanFrame
  1455 ;; This function uses a non-reentrant model
  1456 ;;
  1457                           
  1458                           	psect	text10
  1459  000FE4                     __ptext10:
  1460                           	opt callstack 0
  1461  000FE4                     _LED_Error:
  1462                           	opt callstack 24
  1463                           
  1464                           ;LED.c: 39:     LED_Control(RED,0b1010101010);
  1465                           
  1466                           ;incstack = 0
  1467  000FE4  0E02               	movlw	2
  1468  000FE6  6E07               	movwf	LED_Control@diode+1,c
  1469  000FE8  0EAA               	movlw	170
  1470  000FEA  6E06               	movwf	LED_Control@diode,c
  1471  000FEC  0E00               	movlw	0
  1472  000FEE  EC7A  F003         	call	_LED_Control
  1473                           
  1474                           ;LED.c: 40:     LED_Control(GREEN,0b0000000000);
  1475  000FF2  0E00               	movlw	0
  1476  000FF4  6E07               	movwf	LED_Control@diode+1,c
  1477  000FF6  0E00               	movlw	0
  1478  000FF8  6E06               	movwf	LED_Control@diode,c
  1479  000FFA  0E01               	movlw	1
  1480  000FFC  EC7A  F003         	call	_LED_Control
  1481  001000  0012               	return		;funcret
  1482  001002                     __end_of_LED_Error:
  1483                           	opt callstack 0
  1484                           
  1485 ;; *************** function _LED_Clear *****************
  1486 ;; Defined at:
  1487 ;;		line 45 in file "LED.c"
  1488 ;; Parameters:    Size  Location     Type
  1489 ;;		None
  1490 ;; Auto vars:     Size  Location     Type
  1491 ;;		None
  1492 ;; Return value:  Size  Location     Type
  1493 ;;                  2  258[None  ] unsigned int 
  1494 ;; Registers used:
  1495 ;;		wreg, status,2, status,0, cstack
  1496 ;; Tracked objects:
  1497 ;;		On entry : 0/0
  1498 ;;		On exit  : 0/0
  1499 ;;		Unchanged: 0/0
  1500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1505 ;;Total ram usage:        0 bytes
  1506 ;; Hardware stack levels used:    1
  1507 ;; Hardware stack levels required when called:    4
  1508 ;; This function calls:
  1509 ;;		_LED_Control
  1510 ;; This function is called by:
  1511 ;;		_FRAME_SensorExcitationStatus
  1512 ;; This function uses a non-reentrant model
  1513 ;;
  1514                           
  1515                           	psect	text11
  1516  001002                     __ptext11:
  1517                           	opt callstack 0
  1518  001002                     _LED_Clear:
  1519                           	opt callstack 23
  1520                           
  1521                           ;LED.c: 47:     LED_Control(RED,0b0000000000);
  1522                           
  1523                           ;incstack = 0
  1524  001002  0E00               	movlw	0
  1525  001004  6E07               	movwf	LED_Control@diode+1,c
  1526  001006  0E00               	movlw	0
  1527  001008  6E06               	movwf	LED_Control@diode,c
  1528  00100A  0E00               	movlw	0
  1529  00100C  EC7A  F003         	call	_LED_Control
  1530                           
  1531                           ;LED.c: 48:     LED_Control(GREEN,0b1010101010);
  1532  001010  0E02               	movlw	2
  1533  001012  6E07               	movwf	LED_Control@diode+1,c
  1534  001014  0EAA               	movlw	170
  1535  001016  6E06               	movwf	LED_Control@diode,c
  1536  001018  0E01               	movlw	1
  1537  00101A  EC7A  F003         	call	_LED_Control
  1538  00101E  0012               	return		;funcret
  1539  001020                     __end_of_LED_Clear:
  1540                           	opt callstack 0
  1541                           
  1542 ;; *************** function _FRAME_AdressOfNeighbors *****************
  1543 ;; Defined at:
  1544 ;;		line 473 in file "FRAME.c"
  1545 ;; Parameters:    Size  Location     Type
  1546 ;;  message         2   11[COMRAM] PTR struct .
  1547 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1548 ;;  nrRamki         2   13[COMRAM] unsigned short 
  1549 ;; Auto vars:     Size  Location     Type
  1550 ;;  uranos          2   32[COMRAM] unsigned short 
  1551 ;;  gaja            2   30[COMRAM] unsigned short 
  1552 ;;  zeta            2    0        unsigned short 
  1553 ;;  i               2   34[COMRAM] unsigned short 
  1554 ;; Return value:  Size  Location     Type
  1555 ;;                  1    wreg      void 
  1556 ;; Registers used:
  1557 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1558 ;; Tracked objects:
  1559 ;;		On entry : 0/0
  1560 ;;		On exit  : 0/0
  1561 ;;		Unchanged: 0/0
  1562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1563 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1564 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1565 ;;      Temps:         13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1566 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1567 ;;Total ram usage:       25 bytes
  1568 ;; Hardware stack levels used:    1
  1569 ;; Hardware stack levels required when called:    4
  1570 ;; This function calls:
  1571 ;;		___wmul
  1572 ;; This function is called by:
  1573 ;;		_FRAME_HandleCanFrame
  1574 ;; This function uses a non-reentrant model
  1575 ;;
  1576                           
  1577                           	psect	text12
  1578  000060                     __ptext12:
  1579                           	opt callstack 0
  1580  000060                     _FRAME_AdressOfNeighbors:
  1581                           	opt callstack 24
  1582                           
  1583                           ;FRAME.c: 473: static void FRAME_AdressOfNeighbors(mID *message, WORD nrRamki);FRAME.c: 
      +                          474: {;FRAME.c: 475:     WORD i;;FRAME.c: 479:     if(message->message_type == 0x02)
  1584                           
  1585                           ;incstack = 0
  1586  000060  EE20 F001          	lfsr	2,1
  1587  000064  500C               	movf	FRAME_AdressOfNeighbors@message,w,c
  1588  000066  26D9               	addwf	fsr2l,f,c
  1589  000068  500D               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  1590  00006A  22DA               	addwfc	fsr2h,f,c
  1591  00006C  0E02               	movlw	2
  1592  00006E  18DE               	xorwf	postinc2,w,c
  1593  000070  A4D8               	btfss	status,2,c
  1594  000072  D07F               	goto	l2585
  1595                           
  1596                           ;FRAME.c: 480:     {;FRAME.c: 482:         message->data_length = 8;
  1597  000074  EE20 F010          	lfsr	2,16
  1598  000078  500C               	movf	FRAME_AdressOfNeighbors@message,w,c
  1599  00007A  26D9               	addwf	fsr2l,f,c
  1600  00007C  500D               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  1601  00007E  22DA               	addwfc	fsr2h,f,c
  1602  000080  0E08               	movlw	8
  1603  000082  6EDF               	movwf	indf2,c
  1604                           
  1605                           ;FRAME.c: 483:         for(i=0; i<4; i++)
  1606  000084  0E00               	movlw	0
  1607  000086  6E24               	movwf	FRAME_AdressOfNeighbors@i+1,c
  1608  000088  0E00               	movlw	0
  1609  00008A  6E23               	movwf	FRAME_AdressOfNeighbors@i,c
  1610  00008C                     l2579:
  1611                           
  1612                           ;FRAME.c: 484:         {;FRAME.c: 485:             message->data[2*i] = (BYTE)(Dane->sas
      +                          iedzi[i+(4*nrRamki)].adres >> 8);
  1613  00008C  C023  F010         	movff	FRAME_AdressOfNeighbors@i,??_FRAME_AdressOfNeighbors
  1614  000090  C024  F011         	movff	FRAME_AdressOfNeighbors@i+1,??_FRAME_AdressOfNeighbors+1
  1615  000094  90D8               	bcf	status,0,c
  1616  000096  3610               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  1617  000098  3611               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  1618  00009A  C00C  F012         	movff	FRAME_AdressOfNeighbors@message,??_FRAME_AdressOfNeighbors+2
  1619  00009E  C00D  F013         	movff	FRAME_AdressOfNeighbors@message+1,??_FRAME_AdressOfNeighbors+3
  1620  0000A2  5010               	movf	??_FRAME_AdressOfNeighbors,w,c
  1621  0000A4  2612               	addwf	??_FRAME_AdressOfNeighbors+2,f,c
  1622  0000A6  5011               	movf	??_FRAME_AdressOfNeighbors+1,w,c
  1623  0000A8  2213               	addwfc	??_FRAME_AdressOfNeighbors+3,f,c
  1624  0000AA  0E08               	movlw	8
  1625  0000AC  2412               	addwf	??_FRAME_AdressOfNeighbors+2,w,c
  1626  0000AE  6ED9               	movwf	fsr2l,c
  1627  0000B0  0E00               	movlw	0
  1628  0000B2  2013               	addwfc	??_FRAME_AdressOfNeighbors+3,w,c
  1629  0000B4  6EDA               	movwf	fsr2h,c
  1630  0000B6  C00E  F014         	movff	FRAME_AdressOfNeighbors@nrRamki,??_FRAME_AdressOfNeighbors+4
  1631  0000BA  C00F  F015         	movff	FRAME_AdressOfNeighbors@nrRamki+1,??_FRAME_AdressOfNeighbors+5
  1632  0000BE  90D8               	bcf	status,0,c
  1633  0000C0  3614               	rlcf	??_FRAME_AdressOfNeighbors+4,f,c
  1634  0000C2  3615               	rlcf	??_FRAME_AdressOfNeighbors+5,f,c
  1635  0000C4  90D8               	bcf	status,0,c
  1636  0000C6  3614               	rlcf	??_FRAME_AdressOfNeighbors+4,f,c
  1637  0000C8  3615               	rlcf	??_FRAME_AdressOfNeighbors+5,f,c
  1638  0000CA  5023               	movf	FRAME_AdressOfNeighbors@i,w,c
  1639  0000CC  2614               	addwf	??_FRAME_AdressOfNeighbors+4,f,c
  1640  0000CE  5024               	movf	FRAME_AdressOfNeighbors@i+1,w,c
  1641  0000D0  2215               	addwfc	??_FRAME_AdressOfNeighbors+5,f,c
  1642  0000D2  90D8               	bcf	status,0,c
  1643  0000D4  3614               	rlcf	??_FRAME_AdressOfNeighbors+4,f,c
  1644  0000D6  3615               	rlcf	??_FRAME_AdressOfNeighbors+5,f,c
  1645  0000D8  90D8               	bcf	status,0,c
  1646  0000DA  3614               	rlcf	??_FRAME_AdressOfNeighbors+4,f,c
  1647  0000DC  3615               	rlcf	??_FRAME_AdressOfNeighbors+5,f,c
  1648  0000DE  0E0E               	movlw	14
  1649  0000E0  2414               	addwf	??_FRAME_AdressOfNeighbors+4,w,c
  1650  0000E2  6EE1               	movwf	fsr1l,c
  1651  0000E4  0E00               	movlw	0
  1652  0000E6  2015               	addwfc	??_FRAME_AdressOfNeighbors+5,w,c
  1653  0000E8  6EE2               	movwf	fsr1h,c
  1654  0000EA  CFE6 F016          	movff	postinc1,??_FRAME_AdressOfNeighbors+6
  1655  0000EE  CFE5 F017          	movff	postdec1,??_FRAME_AdressOfNeighbors+7
  1656  0000F2  C017  F016         	movff	??_FRAME_AdressOfNeighbors+7,??_FRAME_AdressOfNeighbors+6
  1657  0000F6  6A17               	clrf	??_FRAME_AdressOfNeighbors+7,c
  1658  0000F8  5016               	movf	??_FRAME_AdressOfNeighbors+6,w,c
  1659  0000FA  6EDF               	movwf	indf2,c
  1660                           
  1661                           ;FRAME.c: 486:             message->data[(2*i)+1] = (BYTE)Dane->sasiedzi[i+(4*nrRamki)].
      +                          adres;
  1662  0000FC  C00E  F010         	movff	FRAME_AdressOfNeighbors@nrRamki,??_FRAME_AdressOfNeighbors
  1663  000100  C00F  F011         	movff	FRAME_AdressOfNeighbors@nrRamki+1,??_FRAME_AdressOfNeighbors+1
  1664  000104  90D8               	bcf	status,0,c
  1665  000106  3610               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  1666  000108  3611               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  1667  00010A  90D8               	bcf	status,0,c
  1668  00010C  3610               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  1669  00010E  3611               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  1670  000110  5023               	movf	FRAME_AdressOfNeighbors@i,w,c
  1671  000112  2610               	addwf	??_FRAME_AdressOfNeighbors,f,c
  1672  000114  5024               	movf	FRAME_AdressOfNeighbors@i+1,w,c
  1673  000116  2211               	addwfc	??_FRAME_AdressOfNeighbors+1,f,c
  1674  000118  90D8               	bcf	status,0,c
  1675  00011A  3610               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  1676  00011C  3611               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  1677  00011E  90D8               	bcf	status,0,c
  1678  000120  3610               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  1679  000122  3611               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  1680  000124  0E0E               	movlw	14
  1681  000126  2410               	addwf	??_FRAME_AdressOfNeighbors,w,c
  1682  000128  6ED9               	movwf	fsr2l,c
  1683  00012A  0E00               	movlw	0
  1684  00012C  2011               	addwfc	??_FRAME_AdressOfNeighbors+1,w,c
  1685  00012E  6EDA               	movwf	fsr2h,c
  1686  000130  C023  F012         	movff	FRAME_AdressOfNeighbors@i,??_FRAME_AdressOfNeighbors+2
  1687  000134  C024  F013         	movff	FRAME_AdressOfNeighbors@i+1,??_FRAME_AdressOfNeighbors+3
  1688  000138  90D8               	bcf	status,0,c
  1689  00013A  3612               	rlcf	??_FRAME_AdressOfNeighbors+2,f,c
  1690  00013C  3613               	rlcf	??_FRAME_AdressOfNeighbors+3,f,c
  1691  00013E  C00C  F014         	movff	FRAME_AdressOfNeighbors@message,??_FRAME_AdressOfNeighbors+4
  1692  000142  C00D  F015         	movff	FRAME_AdressOfNeighbors@message+1,??_FRAME_AdressOfNeighbors+5
  1693  000146  5012               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  1694  000148  2614               	addwf	??_FRAME_AdressOfNeighbors+4,f,c
  1695  00014A  5013               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  1696  00014C  2215               	addwfc	??_FRAME_AdressOfNeighbors+5,f,c
  1697  00014E  0E09               	movlw	9
  1698  000150  2414               	addwf	??_FRAME_AdressOfNeighbors+4,w,c
  1699  000152  6EE1               	movwf	fsr1l,c
  1700  000154  0E00               	movlw	0
  1701  000156  2015               	addwfc	??_FRAME_AdressOfNeighbors+5,w,c
  1702  000158  6EE2               	movwf	fsr1h,c
  1703  00015A  CFDF FFE7          	movff	indf2,indf1
  1704                           
  1705                           ;FRAME.c: 487:         }
  1706  00015E  4A23               	infsnz	FRAME_AdressOfNeighbors@i,f,c
  1707  000160  2A24               	incf	FRAME_AdressOfNeighbors@i+1,f,c
  1708  000162  5024               	movf	FRAME_AdressOfNeighbors@i+1,w,c
  1709  000164  E105               	bnz	u1130
  1710  000166  0E04               	movlw	4
  1711  000168  5C23               	subwf	FRAME_AdressOfNeighbors@i,w,c
  1712  00016A  B0D8               	btfsc	status,0,c
  1713  00016C  0012               	return	
  1714  00016E  D78E               	goto	l2579
  1715  000170                     u1130:
  1716  000170  0012               	return	
  1717  000172                     l2585:
  1718                           
  1719                           ;FRAME.c: 491:     {;FRAME.c: 492:         WORD uranos = message->data[2] | message->dat
      +                          a[3];
  1720  000172  EE20 F00B          	lfsr	2,11
  1721  000176  500C               	movf	FRAME_AdressOfNeighbors@message,w,c
  1722  000178  26D9               	addwf	fsr2l,f,c
  1723  00017A  500D               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  1724  00017C  22DA               	addwfc	fsr2h,f,c
  1725  00017E  50DF               	movf	indf2,w,c
  1726  000180  6E10               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  1727  000182  EE20 F00A          	lfsr	2,10
  1728  000186  500C               	movf	FRAME_AdressOfNeighbors@message,w,c
  1729  000188  26D9               	addwf	fsr2l,f,c
  1730  00018A  500D               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  1731  00018C  22DA               	addwfc	fsr2h,f,c
  1732  00018E  50DF               	movf	indf2,w,c
  1733  000190  1010               	iorwf	??_FRAME_AdressOfNeighbors,w,c
  1734  000192  6E11               	movwf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  1735  000194  5011               	movf	??_FRAME_AdressOfNeighbors+1,w,c
  1736  000196  6E21               	movwf	FRAME_AdressOfNeighbors@uranos,c
  1737  000198  6A22               	clrf	FRAME_AdressOfNeighbors@uranos+1,c
  1738                           
  1739                           ;FRAME.c: 495:          WORD gaja = message->data[0] | message->data[1];
  1740  00019A  EE20 F009          	lfsr	2,9
  1741  00019E  500C               	movf	FRAME_AdressOfNeighbors@message,w,c
  1742  0001A0  26D9               	addwf	fsr2l,f,c
  1743  0001A2  500D               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  1744  0001A4  22DA               	addwfc	fsr2h,f,c
  1745  0001A6  50DF               	movf	indf2,w,c
  1746  0001A8  6E10               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  1747  0001AA  EE20 F008          	lfsr	2,8
  1748  0001AE  500C               	movf	FRAME_AdressOfNeighbors@message,w,c
  1749  0001B0  26D9               	addwf	fsr2l,f,c
  1750  0001B2  500D               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  1751  0001B4  22DA               	addwfc	fsr2h,f,c
  1752  0001B6  50DF               	movf	indf2,w,c
  1753  0001B8  1010               	iorwf	??_FRAME_AdressOfNeighbors,w,c
  1754  0001BA  6E11               	movwf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  1755  0001BC  5011               	movf	??_FRAME_AdressOfNeighbors+1,w,c
  1756  0001BE  6E1F               	movwf	FRAME_AdressOfNeighbors@gaja,c
  1757  0001C0  6A20               	clrf	FRAME_AdressOfNeighbors@gaja+1,c
  1758                           
  1759                           ;FRAME.c: 496:         for(i=0; i<4; i++)
  1760  0001C2  0E00               	movlw	0
  1761  0001C4  6E24               	movwf	FRAME_AdressOfNeighbors@i+1,c
  1762  0001C6  0E00               	movlw	0
  1763  0001C8  6E23               	movwf	FRAME_AdressOfNeighbors@i,c
  1764  0001CA                     l2595:
  1765                           
  1766                           ;FRAME.c: 497:         {;FRAME.c: 498:             Dane->sasiedzi[i+(4*nrRamki)].adres =
      +                           ((WORD)message->data[2*i]) |
  1767  0001CA  C023  F010         	movff	FRAME_AdressOfNeighbors@i,??_FRAME_AdressOfNeighbors
  1768  0001CE  C024  F011         	movff	FRAME_AdressOfNeighbors@i+1,??_FRAME_AdressOfNeighbors+1
  1769  0001D2  90D8               	bcf	status,0,c
  1770  0001D4  3610               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  1771  0001D6  3611               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  1772  0001D8  C00C  F012         	movff	FRAME_AdressOfNeighbors@message,??_FRAME_AdressOfNeighbors+2
  1773  0001DC  C00D  F013         	movff	FRAME_AdressOfNeighbors@message+1,??_FRAME_AdressOfNeighbors+3
  1774  0001E0  5010               	movf	??_FRAME_AdressOfNeighbors,w,c
  1775  0001E2  2612               	addwf	??_FRAME_AdressOfNeighbors+2,f,c
  1776  0001E4  5011               	movf	??_FRAME_AdressOfNeighbors+1,w,c
  1777  0001E6  2213               	addwfc	??_FRAME_AdressOfNeighbors+3,f,c
  1778  0001E8  0E09               	movlw	9
  1779  0001EA  2412               	addwf	??_FRAME_AdressOfNeighbors+2,w,c
  1780  0001EC  6ED9               	movwf	fsr2l,c
  1781  0001EE  0E00               	movlw	0
  1782  0001F0  2013               	addwfc	??_FRAME_AdressOfNeighbors+3,w,c
  1783  0001F2  6EDA               	movwf	fsr2h,c
  1784  0001F4  50DF               	movf	indf2,w,c
  1785  0001F6  6E14               	movwf	(??_FRAME_AdressOfNeighbors+4)& (0+255),c
  1786  0001F8  C023  F015         	movff	FRAME_AdressOfNeighbors@i,??_FRAME_AdressOfNeighbors+5
  1787  0001FC  C024  F016         	movff	FRAME_AdressOfNeighbors@i+1,??_FRAME_AdressOfNeighbors+6
  1788  000200  90D8               	bcf	status,0,c
  1789  000202  3615               	rlcf	??_FRAME_AdressOfNeighbors+5,f,c
  1790  000204  3616               	rlcf	??_FRAME_AdressOfNeighbors+6,f,c
  1791  000206  C00C  F017         	movff	FRAME_AdressOfNeighbors@message,??_FRAME_AdressOfNeighbors+7
  1792  00020A  C00D  F018         	movff	FRAME_AdressOfNeighbors@message+1,??_FRAME_AdressOfNeighbors+8
  1793  00020E  5015               	movf	??_FRAME_AdressOfNeighbors+5,w,c
  1794  000210  2617               	addwf	??_FRAME_AdressOfNeighbors+7,f,c
  1795  000212  5016               	movf	??_FRAME_AdressOfNeighbors+6,w,c
  1796  000214  2218               	addwfc	??_FRAME_AdressOfNeighbors+8,f,c
  1797  000216  0E08               	movlw	8
  1798  000218  2417               	addwf	??_FRAME_AdressOfNeighbors+7,w,c
  1799  00021A  6ED9               	movwf	fsr2l,c
  1800  00021C  0E00               	movlw	0
  1801  00021E  2018               	addwfc	??_FRAME_AdressOfNeighbors+8,w,c
  1802  000220  6EDA               	movwf	fsr2h,c
  1803  000222  50DF               	movf	indf2,w,c
  1804  000224  1014               	iorwf	??_FRAME_AdressOfNeighbors+4,w,c
  1805  000226  6E19               	movwf	(??_FRAME_AdressOfNeighbors+9)& (0+255),c
  1806  000228  6A1A               	clrf	(??_FRAME_AdressOfNeighbors+10)& (0+255),c
  1807  00022A  C00E  F01B         	movff	FRAME_AdressOfNeighbors@nrRamki,??_FRAME_AdressOfNeighbors+11
  1808  00022E  C00F  F01C         	movff	FRAME_AdressOfNeighbors@nrRamki+1,??_FRAME_AdressOfNeighbors+12
  1809  000232  90D8               	bcf	status,0,c
  1810  000234  361B               	rlcf	??_FRAME_AdressOfNeighbors+11,f,c
  1811  000236  361C               	rlcf	??_FRAME_AdressOfNeighbors+12,f,c
  1812  000238  90D8               	bcf	status,0,c
  1813  00023A  361B               	rlcf	??_FRAME_AdressOfNeighbors+11,f,c
  1814  00023C  361C               	rlcf	??_FRAME_AdressOfNeighbors+12,f,c
  1815  00023E  5023               	movf	FRAME_AdressOfNeighbors@i,w,c
  1816  000240  261B               	addwf	??_FRAME_AdressOfNeighbors+11,f,c
  1817  000242  5024               	movf	FRAME_AdressOfNeighbors@i+1,w,c
  1818  000244  221C               	addwfc	??_FRAME_AdressOfNeighbors+12,f,c
  1819  000246  90D8               	bcf	status,0,c
  1820  000248  361B               	rlcf	??_FRAME_AdressOfNeighbors+11,f,c
  1821  00024A  361C               	rlcf	??_FRAME_AdressOfNeighbors+12,f,c
  1822  00024C  90D8               	bcf	status,0,c
  1823  00024E  361B               	rlcf	??_FRAME_AdressOfNeighbors+11,f,c
  1824  000250  361C               	rlcf	??_FRAME_AdressOfNeighbors+12,f,c
  1825  000252  0E0E               	movlw	14
  1826  000254  241B               	addwf	??_FRAME_AdressOfNeighbors+11,w,c
  1827  000256  6ED9               	movwf	fsr2l,c
  1828  000258  0E00               	movlw	0
  1829  00025A  201C               	addwfc	??_FRAME_AdressOfNeighbors+12,w,c
  1830  00025C  6EDA               	movwf	fsr2h,c
  1831  00025E  C019  FFDE         	movff	??_FRAME_AdressOfNeighbors+9,postinc2
  1832  000262  C01A  FFDD         	movff	??_FRAME_AdressOfNeighbors+10,postdec2
  1833                           
  1834                           ;FRAME.c: 501:             Dane->sasiedzi[i+(4*nrRamki)].pointerNaSasiada = &wartosciSas
      +                          iada[i+(4*nrRamki)];
  1835  000266  C00E  F010         	movff	FRAME_AdressOfNeighbors@nrRamki,??_FRAME_AdressOfNeighbors
  1836  00026A  C00F  F011         	movff	FRAME_AdressOfNeighbors@nrRamki+1,??_FRAME_AdressOfNeighbors+1
  1837  00026E  90D8               	bcf	status,0,c
  1838  000270  3610               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  1839  000272  3611               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  1840  000274  90D8               	bcf	status,0,c
  1841  000276  3610               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  1842  000278  3611               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  1843  00027A  C010  F006         	movff	??_FRAME_AdressOfNeighbors,___wmul@multiplier
  1844  00027E  C011  F007         	movff	??_FRAME_AdressOfNeighbors+1,___wmul@multiplier+1
  1845  000282  0E00               	movlw	0
  1846  000284  6E09               	movwf	___wmul@multiplicand+1,c
  1847  000286  0E44               	movlw	68
  1848  000288  6E08               	movwf	___wmul@multiplicand,c
  1849  00028A  ECCD  F007         	call	___wmul	;wreg free
  1850  00028E  0EC6               	movlw	low _wartosciSasiada
  1851  000290  6E12               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  1852  000292  0E00               	movlw	high _wartosciSasiada
  1853  000294  6E13               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  1854  000296  5006               	movf	?___wmul,w,c
  1855  000298  2612               	addwf	??_FRAME_AdressOfNeighbors+2,f,c
  1856  00029A  5007               	movf	?___wmul+1,w,c
  1857  00029C  2213               	addwfc	??_FRAME_AdressOfNeighbors+3,f,c
  1858  00029E  C023  F006         	movff	FRAME_AdressOfNeighbors@i,___wmul@multiplier
  1859  0002A2  C024  F007         	movff	FRAME_AdressOfNeighbors@i+1,___wmul@multiplier+1
  1860  0002A6  0E00               	movlw	0
  1861  0002A8  6E09               	movwf	___wmul@multiplicand+1,c
  1862  0002AA  0E44               	movlw	68
  1863  0002AC  6E08               	movwf	___wmul@multiplicand,c
  1864  0002AE  ECCD  F007         	call	___wmul	;wreg free
  1865  0002B2  5006               	movf	?___wmul,w,c
  1866  0002B4  2612               	addwf	??_FRAME_AdressOfNeighbors+2,f,c
  1867  0002B6  5007               	movf	?___wmul+1,w,c
  1868  0002B8  2213               	addwfc	??_FRAME_AdressOfNeighbors+3,f,c
  1869  0002BA  C00E  F014         	movff	FRAME_AdressOfNeighbors@nrRamki,??_FRAME_AdressOfNeighbors+4
  1870  0002BE  C00F  F015         	movff	FRAME_AdressOfNeighbors@nrRamki+1,??_FRAME_AdressOfNeighbors+5
  1871  0002C2  90D8               	bcf	status,0,c
  1872  0002C4  3614               	rlcf	??_FRAME_AdressOfNeighbors+4,f,c
  1873  0002C6  3615               	rlcf	??_FRAME_AdressOfNeighbors+5,f,c
  1874  0002C8  90D8               	bcf	status,0,c
  1875  0002CA  3614               	rlcf	??_FRAME_AdressOfNeighbors+4,f,c
  1876  0002CC  3615               	rlcf	??_FRAME_AdressOfNeighbors+5,f,c
  1877  0002CE  5023               	movf	FRAME_AdressOfNeighbors@i,w,c
  1878  0002D0  2614               	addwf	??_FRAME_AdressOfNeighbors+4,f,c
  1879  0002D2  5024               	movf	FRAME_AdressOfNeighbors@i+1,w,c
  1880  0002D4  2215               	addwfc	??_FRAME_AdressOfNeighbors+5,f,c
  1881  0002D6  90D8               	bcf	status,0,c
  1882  0002D8  3614               	rlcf	??_FRAME_AdressOfNeighbors+4,f,c
  1883  0002DA  3615               	rlcf	??_FRAME_AdressOfNeighbors+5,f,c
  1884  0002DC  90D8               	bcf	status,0,c
  1885  0002DE  3614               	rlcf	??_FRAME_AdressOfNeighbors+4,f,c
  1886  0002E0  3615               	rlcf	??_FRAME_AdressOfNeighbors+5,f,c
  1887  0002E2  0E10               	movlw	16
  1888  0002E4  2414               	addwf	??_FRAME_AdressOfNeighbors+4,w,c
  1889  0002E6  6ED9               	movwf	fsr2l,c
  1890  0002E8  0E00               	movlw	0
  1891  0002EA  2015               	addwfc	??_FRAME_AdressOfNeighbors+5,w,c
  1892  0002EC  6EDA               	movwf	fsr2h,c
  1893  0002EE  C012  FFDE         	movff	??_FRAME_AdressOfNeighbors+2,postinc2
  1894  0002F2  C013  FFDD         	movff	??_FRAME_AdressOfNeighbors+3,postdec2
  1895                           
  1896                           ;FRAME.c: 502:         }
  1897  0002F6  4A23               	infsnz	FRAME_AdressOfNeighbors@i,f,c
  1898  0002F8  2A24               	incf	FRAME_AdressOfNeighbors@i+1,f,c
  1899  0002FA  5024               	movf	FRAME_AdressOfNeighbors@i+1,w,c
  1900  0002FC  E105               	bnz	u1140
  1901  0002FE  0E04               	movlw	4
  1902  000300  5C23               	subwf	FRAME_AdressOfNeighbors@i,w,c
  1903  000302  B0D8               	btfsc	status,0,c
  1904  000304  0012               	return	
  1905  000306  D761               	goto	l2595
  1906  000308                     u1140:
  1907  000308  0012               	return		;funcret
  1908  00030A                     __end_of_FRAME_AdressOfNeighbors:
  1909                           	opt callstack 0
  1910                           
  1911 ;; *************** function ___wmul *****************
  1912 ;; Defined at:
  1913 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  1914 ;; Parameters:    Size  Location     Type
  1915 ;;  multiplier      2    5[COMRAM] unsigned int 
  1916 ;;  multiplicand    2    7[COMRAM] unsigned int 
  1917 ;; Auto vars:     Size  Location     Type
  1918 ;;  product         2    9[COMRAM] unsigned int 
  1919 ;; Return value:  Size  Location     Type
  1920 ;;                  2    5[COMRAM] unsigned int 
  1921 ;; Registers used:
  1922 ;;		wreg, status,2, status,0, prodl, prodh
  1923 ;; Tracked objects:
  1924 ;;		On entry : 0/0
  1925 ;;		On exit  : 0/0
  1926 ;;		Unchanged: 0/0
  1927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1928 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1929 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1931 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1932 ;;Total ram usage:        6 bytes
  1933 ;; Hardware stack levels used:    1
  1934 ;; Hardware stack levels required when called:    3
  1935 ;; This function calls:
  1936 ;;		Nothing
  1937 ;; This function is called by:
  1938 ;;		_FRAME_AdressOfNeighbors
  1939 ;;		_IsInNeighbors
  1940 ;; This function uses a non-reentrant model
  1941 ;;
  1942                           
  1943                           	psect	text13
  1944  000F9A                     __ptext13:
  1945                           	opt callstack 0
  1946  000F9A                     ___wmul:
  1947                           	opt callstack 24
  1948                           
  1949                           ;incstack = 0
  1950  000F9A  5006               	movf	___wmul@multiplier,w,c
  1951  000F9C  0208               	mulwf	___wmul@multiplicand,c
  1952  000F9E  CFF3 F00A          	movff	prodl,___wmul@product
  1953  000FA2  CFF4 F00B          	movff	prodh,___wmul@product+1
  1954  000FA6  5006               	movf	___wmul@multiplier,w,c
  1955  000FA8  0209               	mulwf	___wmul@multiplicand+1,c
  1956  000FAA  50F3               	movf	prodl,w,c
  1957  000FAC  260B               	addwf	___wmul@product+1,f,c
  1958  000FAE  5007               	movf	___wmul@multiplier+1,w,c
  1959  000FB0  0208               	mulwf	___wmul@multiplicand,c
  1960  000FB2  50F3               	movf	prodl,w,c
  1961  000FB4  260B               	addwf	___wmul@product+1,f,c
  1962  000FB6  C00A  F006         	movff	___wmul@product,?___wmul
  1963  000FBA  C00B  F007         	movff	___wmul@product+1,?___wmul+1
  1964  000FBE  0012               	return		;funcret
  1965  000FC0                     __end_of___wmul:
  1966                           	opt callstack 0
  1967                           
  1968 ;; *************** function _CAN_SendFrame *****************
  1969 ;; Defined at:
  1970 ;;		line 183 in file "CAN.c"
  1971 ;; Parameters:    Size  Location     Type
  1972 ;;  message         2   10[COMRAM] PTR struct .
  1973 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1974 ;; Auto vars:     Size  Location     Type
  1975 ;;		None
  1976 ;; Return value:  Size  Location     Type
  1977 ;;                  1    wreg      void 
  1978 ;; Registers used:
  1979 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1980 ;; Tracked objects:
  1981 ;;		On entry : 0/0
  1982 ;;		On exit  : 0/0
  1983 ;;		Unchanged: 0/0
  1984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1985 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1987 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1988 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1989 ;;Total ram usage:        5 bytes
  1990 ;; Hardware stack levels used:    1
  1991 ;; Hardware stack levels required when called:    4
  1992 ;; This function calls:
  1993 ;;		_CAN_MoveBuffIntoFrame
  1994 ;; This function is called by:
  1995 ;;		_FRAME_HandleCanFrame
  1996 ;; This function uses a non-reentrant model
  1997 ;;
  1998                           
  1999                           	psect	text14
  2000  000586                     __ptext14:
  2001                           	opt callstack 0
  2002  000586                     _CAN_SendFrame:
  2003                           	opt callstack 24
  2004                           
  2005                           ;CAN.c: 188:     {;CAN.c: 189:         ECANCON = 0x83;
  2006                           
  2007                           ;incstack = 0
  2008                           ;CAN.c: 183: void CAN_SendFrame(mID * message);CAN.c: 184: {;CAN.c: 187:     for(;;)
  2009  000586  0E83               	movlw	131
  2010  000588  6E77               	movwf	3959,c	;volatile
  2011                           
  2012                           ;CAN.c: 190:         if(!RXB0CONbits.FILHIT3)
  2013  00058A  A660               	btfss	3936,3,c	;volatile
  2014  00058C  D00A               	goto	l179
  2015                           
  2016                           ;CAN.c: 195:         ECANCON = 0x84;
  2017  00058E  0E84               	movlw	132
  2018  000590  6E77               	movwf	3959,c	;volatile
  2019                           
  2020                           ;CAN.c: 196:         if(!RXB0CONbits.FILHIT3)
  2021  000592  A660               	btfss	3936,3,c	;volatile
  2022  000594  D006               	goto	l179
  2023                           
  2024                           ;CAN.c: 201:         ECANCON = 0x85;
  2025  000596  0E85               	movlw	133
  2026  000598  6E77               	movwf	3959,c	;volatile
  2027                           
  2028                           ;CAN.c: 202:         if(!RXB0CONbits.FILHIT3)
  2029  00059A  A660               	btfss	3936,3,c	;volatile
  2030  00059C  D002               	goto	l179
  2031  00059E  D7F3               	goto	_CAN_SendFrame
  2032  0005A0                     l180:
  2033  0005A0  00FF               	reset		;# 
  2034  0005A2                     l179:
  2035                           
  2036                           ;CAN.c: 209:     while(COMSTATbits.TXWARN)
  2037  0005A2  B474               	btfsc	3956,2,c	;volatile
  2038  0005A4  D7FD               	goto	l180
  2039                           
  2040                           ;CAN.c: 213:     DetectorLedRadar.timerRamkiTxCANU8 = 0;
  2041  0005A6  0E00               	movlw	0
  2042  0005A8  6E46               	movwf	_DetectorLedRadar+2,c
  2043                           
  2044                           ;CAN.c: 214:     RXB0EIDL = message->id.v[0];
  2045  0005AA  EE20 F004          	lfsr	2,4
  2046  0005AE  500B               	movf	CAN_SendFrame@message,w,c
  2047  0005B0  26D9               	addwf	fsr2l,f,c
  2048  0005B2  500C               	movf	CAN_SendFrame@message+1,w,c
  2049  0005B4  22DA               	addwfc	fsr2h,f,c
  2050  0005B6  50DF               	movf	indf2,w,c
  2051  0005B8  6E64               	movwf	3940,c	;volatile
  2052                           
  2053                           ;CAN.c: 215:     RXB0EIDH = message->id.v[1];
  2054  0005BA  EE20 F005          	lfsr	2,5
  2055  0005BE  500B               	movf	CAN_SendFrame@message,w,c
  2056  0005C0  26D9               	addwf	fsr2l,f,c
  2057  0005C2  500C               	movf	CAN_SendFrame@message+1,w,c
  2058  0005C4  22DA               	addwfc	fsr2h,f,c
  2059  0005C6  50DF               	movf	indf2,w,c
  2060  0005C8  6E63               	movwf	3939,c	;volatile
  2061                           
  2062                           ;CAN.c: 216:     RXB0SIDL = ((message->id.v[2]&0xFC)*8) | (message->id.v[2] & (0x03));
  2063  0005CA  EE20 F006          	lfsr	2,6
  2064  0005CE  500B               	movf	CAN_SendFrame@message,w,c
  2065  0005D0  26D9               	addwf	fsr2l,f,c
  2066  0005D2  500C               	movf	CAN_SendFrame@message+1,w,c
  2067  0005D4  22DA               	addwfc	fsr2h,f,c
  2068  0005D6  50DF               	movf	indf2,w,c
  2069  0005D8  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  2070  0005DA  0E03               	movlw	3
  2071  0005DC  160D               	andwf	??_CAN_SendFrame,f,c
  2072  0005DE  EE20 F006          	lfsr	2,6
  2073  0005E2  500B               	movf	CAN_SendFrame@message,w,c
  2074  0005E4  26D9               	addwf	fsr2l,f,c
  2075  0005E6  500C               	movf	CAN_SendFrame@message+1,w,c
  2076  0005E8  22DA               	addwfc	fsr2h,f,c
  2077  0005EA  50DF               	movf	indf2,w,c
  2078  0005EC  0BFC               	andlw	252
  2079  0005EE  0D08               	mullw	8
  2080  0005F0  50F3               	movf	prodl,w,c
  2081  0005F2  100D               	iorwf	??_CAN_SendFrame,w,c
  2082  0005F4  6E62               	movwf	3938,c	;volatile
  2083                           
  2084                           ;CAN.c: 217:     RXB0SIDLbits.EXID = 1;
  2085  0005F6  8662               	bsf	3938,3,c	;volatile
  2086                           
  2087                           ;CAN.c: 218:     RXB0SIDH = (BYTE)(message->id.w[1]/32);
  2088  0005F8  EE20 F006          	lfsr	2,6
  2089  0005FC  500B               	movf	CAN_SendFrame@message,w,c
  2090  0005FE  26D9               	addwf	fsr2l,f,c
  2091  000600  500C               	movf	CAN_SendFrame@message+1,w,c
  2092  000602  22DA               	addwfc	fsr2h,f,c
  2093  000604  CFDE F00D          	movff	postinc2,??_CAN_SendFrame
  2094  000608  CFDD F00E          	movff	postdec2,??_CAN_SendFrame+1
  2095  00060C  0E05               	movlw	5
  2096  00060E  6E0F               	movwf	(??_CAN_SendFrame+2)& (0+255),c
  2097  000610                     u1035:
  2098  000610  90D8               	bcf	status,0,c
  2099  000612  320E               	rrcf	??_CAN_SendFrame+1,f,c
  2100  000614  320D               	rrcf	??_CAN_SendFrame,f,c
  2101  000616  2E0F               	decfsz	(??_CAN_SendFrame+2)& (0+255),f,c
  2102  000618  D7FB               	goto	u1035
  2103  00061A  500D               	movf	??_CAN_SendFrame,w,c
  2104  00061C  6E61               	movwf	3937,c	;volatile
  2105                           
  2106                           ;CAN.c: 220:     RXB0DLC = 0;
  2107  00061E  0E00               	movlw	0
  2108  000620  6E65               	movwf	3941,c	;volatile
  2109                           
  2110                           ;CAN.c: 222:     if(message->message_type==0x02)
  2111  000622  EE20 F001          	lfsr	2,1
  2112  000626  500B               	movf	CAN_SendFrame@message,w,c
  2113  000628  26D9               	addwf	fsr2l,f,c
  2114  00062A  500C               	movf	CAN_SendFrame@message+1,w,c
  2115  00062C  22DA               	addwfc	fsr2h,f,c
  2116  00062E  0E02               	movlw	2
  2117  000630  18DE               	xorwf	postinc2,w,c
  2118  000632  A4D8               	btfss	status,2,c
  2119  000634  D002               	goto	l2479
  2120                           
  2121                           ;CAN.c: 223:     {;CAN.c: 224:         RXB0DLCbits.RXRTR = 1;
  2122  000636  8C65               	bsf	3941,6,c	;volatile
  2123                           
  2124                           ;CAN.c: 225:     }
  2125  000638  D05A               	goto	l2483
  2126  00063A                     l2479:
  2127                           
  2128                           ;CAN.c: 227:     {;CAN.c: 228:         RXB0DLCbits.DLC0 = (message->data_length & 0x0F);
  2129  00063A  EE20 F010          	lfsr	2,16
  2130  00063E  500B               	movf	CAN_SendFrame@message,w,c
  2131  000640  26D9               	addwf	fsr2l,f,c
  2132  000642  500C               	movf	CAN_SendFrame@message+1,w,c
  2133  000644  22DA               	addwfc	fsr2h,f,c
  2134  000646  50DF               	movf	indf2,w,c
  2135  000648  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  2136  00064A  0E0F               	movlw	15
  2137  00064C  160D               	andwf	??_CAN_SendFrame,f,c
  2138  00064E  5065               	movf	3941,w,c	;volatile
  2139  000650  180D               	xorwf	??_CAN_SendFrame,w,c
  2140  000652  0BFE               	andlw	-2
  2141  000654  180D               	xorwf	??_CAN_SendFrame,w,c
  2142  000656  6E65               	movwf	3941,c	;volatile
  2143                           
  2144                           ;CAN.c: 229:         RXB0DLCbits.DLC1 = ((message->data_length & 0x0F)>> 1);
  2145  000658  EE20 F010          	lfsr	2,16
  2146  00065C  500B               	movf	CAN_SendFrame@message,w,c
  2147  00065E  26D9               	addwf	fsr2l,f,c
  2148  000660  500C               	movf	CAN_SendFrame@message+1,w,c
  2149  000662  22DA               	addwfc	fsr2h,f,c
  2150  000664  50DF               	movf	indf2,w,c
  2151  000666  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  2152  000668  90D8               	bcf	status,0,c
  2153  00066A  320D               	rrcf	??_CAN_SendFrame,f,c
  2154  00066C  0E07               	movlw	7
  2155  00066E  160D               	andwf	??_CAN_SendFrame,f,c
  2156  000670  460D               	rlncf	??_CAN_SendFrame,f,c
  2157  000672  5065               	movf	3941,w,c	;volatile
  2158  000674  180D               	xorwf	??_CAN_SendFrame,w,c
  2159  000676  0BFD               	andlw	-3
  2160  000678  180D               	xorwf	??_CAN_SendFrame,w,c
  2161  00067A  6E65               	movwf	3941,c	;volatile
  2162                           
  2163                           ;CAN.c: 230:         RXB0DLCbits.DLC2 = ((message->data_length & 0x0F)>> 2);
  2164  00067C  EE20 F010          	lfsr	2,16
  2165  000680  500B               	movf	CAN_SendFrame@message,w,c
  2166  000682  26D9               	addwf	fsr2l,f,c
  2167  000684  500C               	movf	CAN_SendFrame@message+1,w,c
  2168  000686  22DA               	addwfc	fsr2h,f,c
  2169  000688  50DF               	movf	indf2,w,c
  2170  00068A  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  2171  00068C  90D8               	bcf	status,0,c
  2172  00068E  320D               	rrcf	??_CAN_SendFrame,f,c
  2173  000690  90D8               	bcf	status,0,c
  2174  000692  320D               	rrcf	??_CAN_SendFrame,f,c
  2175  000694  0E03               	movlw	3
  2176  000696  160D               	andwf	??_CAN_SendFrame,f,c
  2177  000698  460D               	rlncf	??_CAN_SendFrame,f,c
  2178  00069A  460D               	rlncf	??_CAN_SendFrame,f,c
  2179  00069C  5065               	movf	3941,w,c	;volatile
  2180  00069E  180D               	xorwf	??_CAN_SendFrame,w,c
  2181  0006A0  0BFB               	andlw	-5
  2182  0006A2  180D               	xorwf	??_CAN_SendFrame,w,c
  2183  0006A4  6E65               	movwf	3941,c	;volatile
  2184                           
  2185                           ;CAN.c: 231:         RXB0DLCbits.DLC3 = ((message->data_length & 0x0F)>> 3);
  2186  0006A6  EE20 F010          	lfsr	2,16
  2187  0006AA  500B               	movf	CAN_SendFrame@message,w,c
  2188  0006AC  26D9               	addwf	fsr2l,f,c
  2189  0006AE  500C               	movf	CAN_SendFrame@message+1,w,c
  2190  0006B0  22DA               	addwfc	fsr2h,f,c
  2191  0006B2  50DF               	movf	indf2,w,c
  2192  0006B4  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  2193  0006B6  90D8               	bcf	status,0,c
  2194  0006B8  320D               	rrcf	??_CAN_SendFrame,f,c
  2195  0006BA  90D8               	bcf	status,0,c
  2196  0006BC  320D               	rrcf	??_CAN_SendFrame,f,c
  2197  0006BE  90D8               	bcf	status,0,c
  2198  0006C0  320D               	rrcf	??_CAN_SendFrame,f,c
  2199  0006C2  0E01               	movlw	1
  2200  0006C4  160D               	andwf	??_CAN_SendFrame,f,c
  2201  0006C6  460D               	rlncf	??_CAN_SendFrame,f,c
  2202  0006C8  460D               	rlncf	??_CAN_SendFrame,f,c
  2203  0006CA  460D               	rlncf	??_CAN_SendFrame,f,c
  2204  0006CC  5065               	movf	3941,w,c	;volatile
  2205  0006CE  180D               	xorwf	??_CAN_SendFrame,w,c
  2206  0006D0  0BF7               	andlw	-9
  2207  0006D2  180D               	xorwf	??_CAN_SendFrame,w,c
  2208  0006D4  6E65               	movwf	3941,c	;volatile
  2209                           
  2210                           ;CAN.c: 233:         CAN_MoveBuffIntoFrame(&RXB0D0, message->data);
  2211  0006D6  0E66               	movlw	102
  2212  0006D8  6E06               	movwf	CAN_MoveBuffIntoFrame@Ram,c
  2213  0006DA  0E0F               	movlw	15
  2214  0006DC  6E07               	movwf	CAN_MoveBuffIntoFrame@Ram+1,c
  2215  0006DE  0E08               	movlw	8
  2216  0006E0  240B               	addwf	CAN_SendFrame@message,w,c
  2217  0006E2  6E08               	movwf	CAN_MoveBuffIntoFrame@Buf,c
  2218  0006E4  0E00               	movlw	0
  2219  0006E6  200C               	addwfc	CAN_SendFrame@message+1,w,c
  2220  0006E8  6E09               	movwf	CAN_MoveBuffIntoFrame@Buf+1,c
  2221  0006EA  ECA4  F007         	call	_CAN_MoveBuffIntoFrame	;wreg free
  2222  0006EE                     l2483:
  2223                           
  2224                           ;CAN.c: 236:     RXB0CONbits.FILHIT3 = 1;
  2225  0006EE  8660               	bsf	3936,3,c	;volatile
  2226                           
  2227                           ;CAN.c: 238:     DetectorLedRadar.Flags.ramkaTx = 1;
  2228  0006F0  8844               	bsf	_DetectorLedRadar,4,c
  2229  0006F2  0012               	return		;funcret
  2230  0006F4                     __end_of_CAN_SendFrame:
  2231                           	opt callstack 0
  2232                           
  2233 ;; *************** function _CAN_GenID *****************
  2234 ;; Defined at:
  2235 ;;		line 382 in file "CAN.c"
  2236 ;; Parameters:    Size  Location     Type
  2237 ;;  message         2    5[COMRAM] PTR struct .
  2238 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2239 ;;  frameID         1    7[COMRAM] unsigned char 
  2240 ;; Auto vars:     Size  Location     Type
  2241 ;;		None
  2242 ;; Return value:  Size  Location     Type
  2243 ;;                  1    wreg      void 
  2244 ;; Registers used:
  2245 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2246 ;; Tracked objects:
  2247 ;;		On entry : 0/0
  2248 ;;		On exit  : 0/0
  2249 ;;		Unchanged: 0/0
  2250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2251 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2253 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2254 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2255 ;;Total ram usage:        7 bytes
  2256 ;; Hardware stack levels used:    1
  2257 ;; Hardware stack levels required when called:    3
  2258 ;; This function calls:
  2259 ;;		Nothing
  2260 ;; This function is called by:
  2261 ;;		_FRAME_HandleCanFrame
  2262 ;; This function uses a non-reentrant model
  2263 ;;
  2264                           
  2265                           	psect	text15
  2266  000B10                     __ptext15:
  2267                           	opt callstack 0
  2268  000B10                     _CAN_GenID:
  2269                           	opt callstack 25
  2270                           
  2271                           ;CAN.c: 382: void CAN_GenID(mID * message, BYTE frameID);CAN.c: 383: {;CAN.c: 385:     m
      +                          essage->frame_type = 0x03;
  2272                           
  2273                           ;incstack = 0
  2274  000B10  EE20 F002          	lfsr	2,2
  2275  000B14  5006               	movf	CAN_GenID@message,w,c
  2276  000B16  26D9               	addwf	fsr2l,f,c
  2277  000B18  5007               	movf	CAN_GenID@message+1,w,c
  2278  000B1A  22DA               	addwfc	fsr2h,f,c
  2279  000B1C  0E03               	movlw	3
  2280  000B1E  6EDF               	movwf	indf2,c
  2281                           
  2282                           ;CAN.c: 386:     message->message_type = 0x01;
  2283  000B20  EE20 F001          	lfsr	2,1
  2284  000B24  5006               	movf	CAN_GenID@message,w,c
  2285  000B26  26D9               	addwf	fsr2l,f,c
  2286  000B28  5007               	movf	CAN_GenID@message+1,w,c
  2287  000B2A  22DA               	addwfc	fsr2h,f,c
  2288  000B2C  0E01               	movlw	1
  2289  000B2E  6EDF               	movwf	indf2,c
  2290                           
  2291                           ;CAN.c: 387:     message->id.w[1] = (WORD)frameID * (WORD)4;
  2292  000B30  5008               	movf	CAN_GenID@frameID,w,c
  2293  000B32  6E09               	movwf	??_CAN_GenID& (0+255),c
  2294  000B34  6A0A               	clrf	(??_CAN_GenID+1)& (0+255),c
  2295  000B36  90D8               	bcf	status,0,c
  2296  000B38  3609               	rlcf	??_CAN_GenID,f,c
  2297  000B3A  360A               	rlcf	??_CAN_GenID+1,f,c
  2298  000B3C  90D8               	bcf	status,0,c
  2299  000B3E  3609               	rlcf	??_CAN_GenID,f,c
  2300  000B40  360A               	rlcf	??_CAN_GenID+1,f,c
  2301  000B42  EE20 F006          	lfsr	2,6
  2302  000B46  5006               	movf	CAN_GenID@message,w,c
  2303  000B48  26D9               	addwf	fsr2l,f,c
  2304  000B4A  5007               	movf	CAN_GenID@message+1,w,c
  2305  000B4C  22DA               	addwfc	fsr2h,f,c
  2306  000B4E  C009  FFDE         	movff	??_CAN_GenID,postinc2
  2307  000B52  C00A  FFDD         	movff	??_CAN_GenID+1,postdec2
  2308                           
  2309                           ;CAN.c: 388:     message->id.w[0] = DaneCan.adresCAN + 0x012c;
  2310  000B56  0E2C               	movlw	44
  2311  000B58  6E09               	movwf	??_CAN_GenID& (0+255),c
  2312  000B5A  0E01               	movlw	1
  2313  000B5C  6E0A               	movwf	(??_CAN_GenID+1)& (0+255),c
  2314  000B5E  EE20  F042         	lfsr	2,_DaneCan+2
  2315  000B62  CFDE F00B          	movff	postinc2,??_CAN_GenID+2
  2316  000B66  CFDD F00C          	movff	postdec2,??_CAN_GenID+3
  2317  000B6A  5009               	movf	??_CAN_GenID,w,c
  2318  000B6C  260B               	addwf	??_CAN_GenID+2,f,c
  2319  000B6E  500A               	movf	??_CAN_GenID+1,w,c
  2320  000B70  220C               	addwfc	??_CAN_GenID+3,f,c
  2321  000B72  EE20 F004          	lfsr	2,4
  2322  000B76  5006               	movf	CAN_GenID@message,w,c
  2323  000B78  26D9               	addwf	fsr2l,f,c
  2324  000B7A  5007               	movf	CAN_GenID@message+1,w,c
  2325  000B7C  22DA               	addwfc	fsr2h,f,c
  2326  000B7E  C00B  FFDE         	movff	??_CAN_GenID+2,postinc2
  2327  000B82  C00C  FFDD         	movff	??_CAN_GenID+3,postdec2
  2328                           
  2329                           ;CAN.c: 391:     message ->id.bits.b16 = 0;
  2330  000B86  EE20 F006          	lfsr	2,6
  2331  000B8A  5006               	movf	CAN_GenID@message,w,c
  2332  000B8C  26D9               	addwf	fsr2l,f,c
  2333  000B8E  5007               	movf	CAN_GenID@message+1,w,c
  2334  000B90  22DA               	addwfc	fsr2h,f,c
  2335  000B92  90DF               	bcf	indf2,0,c
  2336                           
  2337                           ;CAN.c: 392:     message ->id.bits.b17 = 0;
  2338  000B94  EE20 F006          	lfsr	2,6
  2339  000B98  5006               	movf	CAN_GenID@message,w,c
  2340  000B9A  26D9               	addwf	fsr2l,f,c
  2341  000B9C  5007               	movf	CAN_GenID@message+1,w,c
  2342  000B9E  22DA               	addwfc	fsr2h,f,c
  2343  000BA0  92DF               	bcf	indf2,1,c
  2344  000BA2  0012               	return		;funcret
  2345  000BA4                     __end_of_CAN_GenID:
  2346                           	opt callstack 0
  2347                           
  2348 ;; *************** function _CAN_TakeFrame *****************
  2349 ;; Defined at:
  2350 ;;		line 247 in file "CAN.c"
  2351 ;; Parameters:    Size  Location     Type
  2352 ;;  message         2   13[COMRAM] PTR struct .
  2353 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2354 ;; Auto vars:     Size  Location     Type
  2355 ;;  k               1   18[COMRAM] unsigned char 
  2356 ;;  tempCON         1   17[COMRAM] unsigned char 
  2357 ;; Return value:  Size  Location     Type
  2358 ;;                  1    wreg      enum E10433
  2359 ;; Registers used:
  2360 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2361 ;; Tracked objects:
  2362 ;;		On entry : 0/0
  2363 ;;		On exit  : 0/0
  2364 ;;		Unchanged: 0/0
  2365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2366 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2367 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2368 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2369 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2370 ;;Total ram usage:        6 bytes
  2371 ;; Hardware stack levels used:    1
  2372 ;; Hardware stack levels required when called:    4
  2373 ;; This function calls:
  2374 ;;		_CAN_MoveBuffIntoFrame
  2375 ;;		___awdiv
  2376 ;; This function is called by:
  2377 ;;		_TRM_DataTransmition
  2378 ;; This function uses a non-reentrant model
  2379 ;;
  2380                           
  2381                           	psect	text16
  2382  00030A                     __ptext16:
  2383                           	opt callstack 0
  2384  00030A                     _CAN_TakeFrame:
  2385                           	opt callstack 25
  2386                           
  2387                           ;CAN.c: 247: BOOL CAN_TakeFrame(mID * message);CAN.c: 248: {;CAN.c: 249:     BYTE k, tem
      +                          pCON;;CAN.c: 251:     k = CANCON&0x0F;
  2388                           
  2389                           ;incstack = 0
  2390  00030A  506F               	movf	3951,w,c	;volatile
  2391  00030C  0B0F               	andlw	15
  2392  00030E  6E13               	movwf	CAN_TakeFrame@k,c
  2393                           
  2394                           ;CAN.c: 253:     ECANCON = 0x90 | k;
  2395  000310  5013               	movf	CAN_TakeFrame@k,w,c
  2396  000312  0990               	iorlw	144
  2397  000314  6E77               	movwf	3959,c	;volatile
  2398                           
  2399                           ;CAN.c: 256:     switch(k)
  2400  000316  D018               	goto	l2691
  2401  000318                     l188:
  2402                           
  2403                           ;CAN.c: 259:             tempCON = RXB0CON;
  2404  000318  CF60 F012          	movff	3936,CAN_TakeFrame@tempCON	;volatile
  2405                           
  2406                           ;CAN.c: 260:             break;
  2407  00031C  D035               	goto	l189
  2408  00031E                     l190:
  2409                           
  2410                           ;CAN.c: 262:             tempCON = RXB1CON;
  2411  00031E  CF50 F012          	movff	3920,CAN_TakeFrame@tempCON	;volatile
  2412                           
  2413                           ;CAN.c: 263:             break;
  2414  000322  D032               	goto	l189
  2415  000324                     l191:
  2416                           
  2417                           ;CAN.c: 265:             tempCON = B0CON;
  2418  000324  CE20 F012          	movff	3616,CAN_TakeFrame@tempCON	;volatile
  2419                           
  2420                           ;CAN.c: 266:             break;
  2421  000328  D02F               	goto	l189
  2422  00032A                     l192:
  2423                           
  2424                           ;CAN.c: 268:             tempCON = B1CON;
  2425  00032A  CE30 F012          	movff	3632,CAN_TakeFrame@tempCON	;volatile
  2426                           
  2427                           ;CAN.c: 269:             break;
  2428  00032E  D02C               	goto	l189
  2429  000330                     l193:
  2430                           
  2431                           ;CAN.c: 271:             tempCON = B2CON;
  2432  000330  CE40 F012          	movff	3648,CAN_TakeFrame@tempCON	;volatile
  2433                           
  2434                           ;CAN.c: 272:             break;
  2435  000334  D029               	goto	l189
  2436  000336                     l194:
  2437                           
  2438                           ;CAN.c: 274:             tempCON = B3CON;
  2439  000336  CE50 F012          	movff	3664,CAN_TakeFrame@tempCON	;volatile
  2440                           
  2441                           ;CAN.c: 275:             break;
  2442  00033A  D026               	goto	l189
  2443  00033C                     l195:
  2444                           
  2445                           ;CAN.c: 277:             tempCON = B4CON;
  2446  00033C  CE60 F012          	movff	3680,CAN_TakeFrame@tempCON	;volatile
  2447                           
  2448                           ;CAN.c: 278:             break;
  2449  000340  D023               	goto	l189
  2450  000342                     l196:
  2451                           
  2452                           ;CAN.c: 280:             tempCON = B5CON;
  2453  000342  CE70 F012          	movff	3696,CAN_TakeFrame@tempCON	;volatile
  2454                           
  2455                           ;CAN.c: 281:             break;
  2456  000346  D020               	goto	l189
  2457  000348                     l2691:
  2458  000348  5013               	movf	CAN_TakeFrame@k,w,c
  2459  00034A  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  2460  00034C  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  2461                           
  2462                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2463                           ; Switch size 1, requested type "simple"
  2464                           ; Number of cases is 1, Range of values is 0 to 0
  2465                           ; switch strategies available:
  2466                           ; Name         Instructions Cycles
  2467                           ; simple_byte            4     3 (average)
  2468                           ;	Chosen strategy is simple_byte
  2469  00034E  5011               	movf	??_CAN_TakeFrame+1,w,c
  2470  000350  0A00               	xorlw	0	; case 0
  2471  000352  A4D8               	btfss	status,2,c
  2472  000354  D019               	goto	l189
  2473                           
  2474                           ; Switch size 1, requested type "simple"
  2475                           ; Number of cases is 8, Range of values is 0 to 7
  2476                           ; switch strategies available:
  2477                           ; Name         Instructions Cycles
  2478                           ; simple_byte           25    13 (average)
  2479                           ;	Chosen strategy is simple_byte
  2480  000356  5010               	movf	??_CAN_TakeFrame,w,c
  2481  000358  0A00               	xorlw	0	; case 0
  2482  00035A  B4D8               	btfsc	status,2,c
  2483  00035C  D7DD               	goto	l188
  2484  00035E  0A01               	xorlw	1	; case 1
  2485  000360  B4D8               	btfsc	status,2,c
  2486  000362  D7DD               	goto	l190
  2487  000364  0A03               	xorlw	3	; case 2
  2488  000366  B4D8               	btfsc	status,2,c
  2489  000368  D7DD               	goto	l191
  2490  00036A  0A01               	xorlw	1	; case 3
  2491  00036C  B4D8               	btfsc	status,2,c
  2492  00036E  D7DD               	goto	l192
  2493  000370  0A07               	xorlw	7	; case 4
  2494  000372  B4D8               	btfsc	status,2,c
  2495  000374  D7DD               	goto	l193
  2496  000376  0A01               	xorlw	1	; case 5
  2497  000378  B4D8               	btfsc	status,2,c
  2498  00037A  D7DD               	goto	l194
  2499  00037C  0A03               	xorlw	3	; case 6
  2500  00037E  B4D8               	btfsc	status,2,c
  2501  000380  D7DD               	goto	l195
  2502  000382  0A01               	xorlw	1	; case 7
  2503  000384  B4D8               	btfsc	status,2,c
  2504  000386  D7DD               	goto	l196
  2505  000388                     l189:
  2506                           
  2507                           ;CAN.c: 285:     if((tempCON & 0x80) > 0)
  2508  000388  AE12               	btfss	CAN_TakeFrame@tempCON,7,c
  2509  00038A  D0A5               	goto	l2727
  2510                           
  2511                           ;CAN.c: 286:     {;CAN.c: 287:         message->buffer = RXB0CON & 0x1F;
  2512  00038C  EE20 F003          	lfsr	2,3
  2513  000390  500E               	movf	CAN_TakeFrame@message,w,c
  2514  000392  26D9               	addwf	fsr2l,f,c
  2515  000394  500F               	movf	CAN_TakeFrame@message+1,w,c
  2516  000396  22DA               	addwfc	fsr2h,f,c
  2517  000398  5060               	movf	3936,w,c	;volatile
  2518  00039A  0B1F               	andlw	31
  2519  00039C  6EDF               	movwf	indf2,c
  2520                           
  2521                           ;CAN.c: 288:         message->id.v[0] = RXB0EIDL;
  2522  00039E  EE20 F004          	lfsr	2,4
  2523  0003A2  500E               	movf	CAN_TakeFrame@message,w,c
  2524  0003A4  26D9               	addwf	fsr2l,f,c
  2525  0003A6  500F               	movf	CAN_TakeFrame@message+1,w,c
  2526  0003A8  22DA               	addwfc	fsr2h,f,c
  2527  0003AA  CF64 FFDF          	movff	3940,indf2	;volatile
  2528                           
  2529                           ;CAN.c: 289:         message->id.v[1] = RXB0EIDH;
  2530  0003AE  EE20 F005          	lfsr	2,5
  2531  0003B2  500E               	movf	CAN_TakeFrame@message,w,c
  2532  0003B4  26D9               	addwf	fsr2l,f,c
  2533  0003B6  500F               	movf	CAN_TakeFrame@message+1,w,c
  2534  0003B8  22DA               	addwfc	fsr2h,f,c
  2535  0003BA  CF63 FFDF          	movff	3939,indf2	;volatile
  2536                           
  2537                           ;CAN.c: 290:         message->id.v[2] = (RXB0SIDL/8) | (RXB0SIDL&0x03);
  2538  0003BE  EE20 F006          	lfsr	2,6
  2539  0003C2  500E               	movf	CAN_TakeFrame@message,w,c
  2540  0003C4  26D9               	addwf	fsr2l,f,c
  2541  0003C6  500F               	movf	CAN_TakeFrame@message+1,w,c
  2542  0003C8  22DA               	addwfc	fsr2h,f,c
  2543  0003CA  CF62 F010          	movff	3938,??_CAN_TakeFrame	;volatile
  2544  0003CE  0E03               	movlw	3
  2545  0003D0  1610               	andwf	??_CAN_TakeFrame,f,c
  2546  0003D2  CF62 F006          	movff	3938,___awdiv@dividend	;volatile
  2547  0003D6  6A07               	clrf	___awdiv@dividend+1,c
  2548  0003D8  0E00               	movlw	0
  2549  0003DA  6E09               	movwf	___awdiv@divisor+1,c
  2550  0003DC  0E08               	movlw	8
  2551  0003DE  6E08               	movwf	___awdiv@divisor,c
  2552  0003E0  ECD2  F005         	call	___awdiv	;wreg free
  2553  0003E4  5006               	movf	?___awdiv,w,c
  2554  0003E6  1010               	iorwf	??_CAN_TakeFrame,w,c
  2555  0003E8  6EDF               	movwf	indf2,c
  2556                           
  2557                           ;CAN.c: 291:         message->id.w[1] |= (WORD)RXB0SIDH*32;
  2558  0003EA  5061               	movf	3937,w,c	;volatile
  2559  0003EC  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  2560  0003EE  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  2561  0003F0  0E05               	movlw	5
  2562  0003F2                     u1275:
  2563  0003F2  90D8               	bcf	status,0,c
  2564  0003F4  3610               	rlcf	??_CAN_TakeFrame,f,c
  2565  0003F6  3611               	rlcf	??_CAN_TakeFrame+1,f,c
  2566  0003F8  2EE8               	decfsz	wreg,f,c
  2567  0003FA  D7FB               	goto	u1275
  2568  0003FC  EE20 F006          	lfsr	2,6
  2569  000400  500E               	movf	CAN_TakeFrame@message,w,c
  2570  000402  26D9               	addwf	fsr2l,f,c
  2571  000404  500F               	movf	CAN_TakeFrame@message+1,w,c
  2572  000406  22DA               	addwfc	fsr2h,f,c
  2573  000408  5010               	movf	??_CAN_TakeFrame,w,c
  2574  00040A  12DE               	iorwf	postinc2,f,c
  2575  00040C  5011               	movf	??_CAN_TakeFrame+1,w,c
  2576  00040E  12DD               	iorwf	postdec2,f,c
  2577                           
  2578                           ;CAN.c: 292:         message->frame_type=0x03;
  2579  000410  EE20 F002          	lfsr	2,2
  2580  000414  500E               	movf	CAN_TakeFrame@message,w,c
  2581  000416  26D9               	addwf	fsr2l,f,c
  2582  000418  500F               	movf	CAN_TakeFrame@message+1,w,c
  2583  00041A  22DA               	addwfc	fsr2h,f,c
  2584  00041C  0E03               	movlw	3
  2585  00041E  6EDF               	movwf	indf2,c
  2586                           
  2587                           ;CAN.c: 296:         if(RXB0DLCbits.RXRTR == 0)
  2588  000420  BC65               	btfsc	3941,6,c	;volatile
  2589  000422  D068               	goto	l2733
  2590                           
  2591                           ;CAN.c: 297:         {;CAN.c: 298:             message->message_type = 0x01;
  2592  000424  EE20 F001          	lfsr	2,1
  2593  000428  500E               	movf	CAN_TakeFrame@message,w,c
  2594  00042A  26D9               	addwf	fsr2l,f,c
  2595  00042C  500F               	movf	CAN_TakeFrame@message+1,w,c
  2596  00042E  22DA               	addwfc	fsr2h,f,c
  2597  000430  0E01               	movlw	1
  2598  000432  6EDF               	movwf	indf2,c
  2599                           
  2600                           ;CAN.c: 299:             message->data_length= RXB0DLC & 0x0F;
  2601  000434  EE20 F010          	lfsr	2,16
  2602  000438  500E               	movf	CAN_TakeFrame@message,w,c
  2603  00043A  26D9               	addwf	fsr2l,f,c
  2604  00043C  500F               	movf	CAN_TakeFrame@message+1,w,c
  2605  00043E  22DA               	addwfc	fsr2h,f,c
  2606  000440  5065               	movf	3941,w,c	;volatile
  2607  000442  0B0F               	andlw	15
  2608  000444  6EDF               	movwf	indf2,c
  2609                           
  2610                           ;CAN.c: 300:             if(message->data_length > 8)
  2611  000446  EE20 F010          	lfsr	2,16
  2612  00044A  500E               	movf	CAN_TakeFrame@message,w,c
  2613  00044C  26D9               	addwf	fsr2l,f,c
  2614  00044E  500F               	movf	CAN_TakeFrame@message+1,w,c
  2615  000450  22DA               	addwfc	fsr2h,f,c
  2616  000452  0E08               	movlw	8
  2617  000454  64DF               	cpfsgt	indf2,c
  2618  000456  D041               	goto	l2731
  2619  000458  D01E               	goto	l2725
  2620  00045A                     l2707:
  2621                           
  2622                           ;CAN.c: 306:                         RXB0CON = 0;
  2623  00045A  0E00               	movlw	0
  2624  00045C  6E60               	movwf	3936,c	;volatile
  2625                           
  2626                           ;CAN.c: 307:                         break;
  2627  00045E  D03B               	goto	l2727
  2628  000460                     l2709:
  2629                           
  2630                           ;CAN.c: 309:                         RXB1CON = 0;
  2631  000460  0E00               	movlw	0
  2632  000462  010F               	movlb	15	; () banked
  2633  000464  D00E               	goto	L1
  2634  000466                     l2711:
  2635                           
  2636                           ;CAN.c: 312:                         B0CON = 0;
  2637  000466  0E00               	movlw	0
  2638  000468  010E               	movlb	14	; () banked
  2639  00046A  6F20               	movwf	32,b	;volatile
  2640                           
  2641                           ;CAN.c: 313:                         break;
  2642  00046C  D034               	goto	l2727
  2643  00046E                     l2713:
  2644                           
  2645                           ;CAN.c: 315:                         B1CON = 0;
  2646  00046E  0E00               	movlw	0
  2647  000470  010E               	movlb	14	; () banked
  2648  000472  6F30               	movwf	48,b	;volatile
  2649                           
  2650                           ;CAN.c: 316:                         break;
  2651  000474  D030               	goto	l2727
  2652  000476                     l2715:
  2653                           
  2654                           ;CAN.c: 318:                         B2CON = 0;
  2655  000476  0E00               	movlw	0
  2656  000478  010E               	movlb	14	; () banked
  2657  00047A  6F40               	movwf	64,b	;volatile
  2658                           
  2659                           ;CAN.c: 319:                         break;
  2660  00047C  D02C               	goto	l2727
  2661  00047E                     l2717:
  2662                           
  2663                           ;CAN.c: 321:                         B3CON = 0;
  2664  00047E  0E00               	movlw	0
  2665  000480  010E               	movlb	14	; () banked
  2666  000482                     L1:
  2667  000482  6F50               	movwf	80,b	;volatile
  2668                           
  2669                           ;CAN.c: 322:                         break;
  2670  000484  D028               	goto	l2727
  2671  000486                     l2719:
  2672                           
  2673                           ;CAN.c: 324:                         B4CON = 0;
  2674  000486  0E00               	movlw	0
  2675  000488  010E               	movlb	14	; () banked
  2676  00048A  6F60               	movwf	96,b	;volatile
  2677                           
  2678                           ;CAN.c: 325:                         break;
  2679  00048C  D024               	goto	l2727
  2680  00048E                     l2721:
  2681                           
  2682                           ;CAN.c: 327:                         B5CON = 0;
  2683  00048E  0E00               	movlw	0
  2684  000490  010E               	movlb	14	; () banked
  2685  000492  6F70               	movwf	112,b	;volatile
  2686                           
  2687                           ;CAN.c: 328:                         break;
  2688  000494  D020               	goto	l2727
  2689  000496                     l2725:
  2690  000496  5013               	movf	CAN_TakeFrame@k,w,c
  2691  000498  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  2692  00049A  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  2693                           
  2694                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2695                           ; Switch size 1, requested type "simple"
  2696                           ; Number of cases is 1, Range of values is 0 to 0
  2697                           ; switch strategies available:
  2698                           ; Name         Instructions Cycles
  2699                           ; simple_byte            4     3 (average)
  2700                           ;	Chosen strategy is simple_byte
  2701  00049C  5011               	movf	??_CAN_TakeFrame+1,w,c
  2702  00049E  0A00               	xorlw	0	; case 0
  2703  0004A0  A4D8               	btfss	status,2,c
  2704  0004A2  D019               	goto	l2727
  2705                           
  2706                           ; Switch size 1, requested type "simple"
  2707                           ; Number of cases is 8, Range of values is 0 to 7
  2708                           ; switch strategies available:
  2709                           ; Name         Instructions Cycles
  2710                           ; simple_byte           25    13 (average)
  2711                           ;	Chosen strategy is simple_byte
  2712  0004A4  5010               	movf	??_CAN_TakeFrame,w,c
  2713  0004A6  0A00               	xorlw	0	; case 0
  2714  0004A8  B4D8               	btfsc	status,2,c
  2715  0004AA  D7D7               	goto	l2707
  2716  0004AC  0A01               	xorlw	1	; case 1
  2717  0004AE  B4D8               	btfsc	status,2,c
  2718  0004B0  D7D7               	goto	l2709
  2719  0004B2  0A03               	xorlw	3	; case 2
  2720  0004B4  B4D8               	btfsc	status,2,c
  2721  0004B6  D7D7               	goto	l2711
  2722  0004B8  0A01               	xorlw	1	; case 3
  2723  0004BA  B4D8               	btfsc	status,2,c
  2724  0004BC  D7D8               	goto	l2713
  2725  0004BE  0A07               	xorlw	7	; case 4
  2726  0004C0  B4D8               	btfsc	status,2,c
  2727  0004C2  D7D9               	goto	l2715
  2728  0004C4  0A01               	xorlw	1	; case 5
  2729  0004C6  B4D8               	btfsc	status,2,c
  2730  0004C8  D7DA               	goto	l2717
  2731  0004CA  0A03               	xorlw	3	; case 6
  2732  0004CC  B4D8               	btfsc	status,2,c
  2733  0004CE  D7DB               	goto	l2719
  2734  0004D0  0A01               	xorlw	1	; case 7
  2735  0004D2  B4D8               	btfsc	status,2,c
  2736  0004D4  D7DC               	goto	l2721
  2737  0004D6                     l2727:
  2738                           
  2739                           ;CAN.c: 330:                 return FALSE;
  2740  0004D6  0E00               	movlw	0
  2741  0004D8  0012               	return	
  2742  0004DA                     l2731:
  2743                           
  2744                           ;CAN.c: 332:             CAN_MoveBuffIntoFrame(message->data, &RXB0D0);
  2745  0004DA  0E08               	movlw	8
  2746  0004DC  240E               	addwf	CAN_TakeFrame@message,w,c
  2747  0004DE  6E06               	movwf	CAN_MoveBuffIntoFrame@Ram,c
  2748  0004E0  0E00               	movlw	0
  2749  0004E2  200F               	addwfc	CAN_TakeFrame@message+1,w,c
  2750  0004E4  6E07               	movwf	CAN_MoveBuffIntoFrame@Ram+1,c
  2751  0004E6  0E66               	movlw	102
  2752  0004E8  6E08               	movwf	CAN_MoveBuffIntoFrame@Buf,c
  2753  0004EA  0E0F               	movlw	15
  2754  0004EC  6E09               	movwf	CAN_MoveBuffIntoFrame@Buf+1,c
  2755  0004EE  ECA4  F007         	call	_CAN_MoveBuffIntoFrame	;wreg free
  2756                           
  2757                           ;CAN.c: 333:         }
  2758  0004F2  D027               	goto	l2753
  2759  0004F4                     l2733:
  2760                           
  2761                           ;CAN.c: 336:         {;CAN.c: 337:             message->message_type=0x02;
  2762  0004F4  EE20 F001          	lfsr	2,1
  2763  0004F8  500E               	movf	CAN_TakeFrame@message,w,c
  2764  0004FA  26D9               	addwf	fsr2l,f,c
  2765  0004FC  500F               	movf	CAN_TakeFrame@message+1,w,c
  2766  0004FE  22DA               	addwfc	fsr2h,f,c
  2767  000500  0E02               	movlw	2
  2768  000502  6EDF               	movwf	indf2,c
  2769  000504  D01E               	goto	l2753
  2770  000506                     l2735:
  2771                           
  2772                           ;CAN.c: 343:                 RXB0CON = 0;
  2773  000506  0E00               	movlw	0
  2774  000508  6E60               	movwf	3936,c	;volatile
  2775                           
  2776                           ;CAN.c: 344:                 break;
  2777  00050A  D03B               	goto	l2755
  2778  00050C                     l2737:
  2779                           
  2780                           ;CAN.c: 346:                 RXB1CON = 0;
  2781  00050C  0E00               	movlw	0
  2782  00050E  010F               	movlb	15	; () banked
  2783  000510  D00E               	goto	L2
  2784  000512                     l2739:
  2785                           
  2786                           ;CAN.c: 349:                 B0CON = 0;
  2787  000512  0E00               	movlw	0
  2788  000514  010E               	movlb	14	; () banked
  2789  000516  6F20               	movwf	32,b	;volatile
  2790                           
  2791                           ;CAN.c: 350:                 break;
  2792  000518  D034               	goto	l2755
  2793  00051A                     l2741:
  2794                           
  2795                           ;CAN.c: 352:                 B1CON = 0;
  2796  00051A  0E00               	movlw	0
  2797  00051C  010E               	movlb	14	; () banked
  2798  00051E  6F30               	movwf	48,b	;volatile
  2799                           
  2800                           ;CAN.c: 353:                 break;
  2801  000520  D030               	goto	l2755
  2802  000522                     l2743:
  2803                           
  2804                           ;CAN.c: 355:                 B2CON = 0;
  2805  000522  0E00               	movlw	0
  2806  000524  010E               	movlb	14	; () banked
  2807  000526  6F40               	movwf	64,b	;volatile
  2808                           
  2809                           ;CAN.c: 356:                 break;
  2810  000528  D02C               	goto	l2755
  2811  00052A                     l2745:
  2812                           
  2813                           ;CAN.c: 358:                 B3CON = 0;
  2814  00052A  0E00               	movlw	0
  2815  00052C  010E               	movlb	14	; () banked
  2816  00052E                     L2:
  2817  00052E  6F50               	movwf	80,b	;volatile
  2818                           
  2819                           ;CAN.c: 359:                 break;
  2820  000530  D028               	goto	l2755
  2821  000532                     l2747:
  2822                           
  2823                           ;CAN.c: 361:                 B4CON = 0;
  2824  000532  0E00               	movlw	0
  2825  000534  010E               	movlb	14	; () banked
  2826  000536  6F60               	movwf	96,b	;volatile
  2827                           
  2828                           ;CAN.c: 362:                 break;
  2829  000538  D024               	goto	l2755
  2830  00053A                     l2749:
  2831                           
  2832                           ;CAN.c: 364:                 B5CON = 0;
  2833  00053A  0E00               	movlw	0
  2834  00053C  010E               	movlb	14	; () banked
  2835  00053E  6F70               	movwf	112,b	;volatile
  2836                           
  2837                           ;CAN.c: 365:                 break;
  2838  000540  D020               	goto	l2755
  2839  000542                     l2753:
  2840  000542  5013               	movf	CAN_TakeFrame@k,w,c
  2841  000544  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  2842  000546  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  2843                           
  2844                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2845                           ; Switch size 1, requested type "simple"
  2846                           ; Number of cases is 1, Range of values is 0 to 0
  2847                           ; switch strategies available:
  2848                           ; Name         Instructions Cycles
  2849                           ; simple_byte            4     3 (average)
  2850                           ;	Chosen strategy is simple_byte
  2851  000548  5011               	movf	??_CAN_TakeFrame+1,w,c
  2852  00054A  0A00               	xorlw	0	; case 0
  2853  00054C  A4D8               	btfss	status,2,c
  2854  00054E  D019               	goto	l2755
  2855                           
  2856                           ; Switch size 1, requested type "simple"
  2857                           ; Number of cases is 8, Range of values is 0 to 7
  2858                           ; switch strategies available:
  2859                           ; Name         Instructions Cycles
  2860                           ; simple_byte           25    13 (average)
  2861                           ;	Chosen strategy is simple_byte
  2862  000550  5010               	movf	??_CAN_TakeFrame,w,c
  2863  000552  0A00               	xorlw	0	; case 0
  2864  000554  B4D8               	btfsc	status,2,c
  2865  000556  D7D7               	goto	l2735
  2866  000558  0A01               	xorlw	1	; case 1
  2867  00055A  B4D8               	btfsc	status,2,c
  2868  00055C  D7D7               	goto	l2737
  2869  00055E  0A03               	xorlw	3	; case 2
  2870  000560  B4D8               	btfsc	status,2,c
  2871  000562  D7D7               	goto	l2739
  2872  000564  0A01               	xorlw	1	; case 3
  2873  000566  B4D8               	btfsc	status,2,c
  2874  000568  D7D8               	goto	l2741
  2875  00056A  0A07               	xorlw	7	; case 4
  2876  00056C  B4D8               	btfsc	status,2,c
  2877  00056E  D7D9               	goto	l2743
  2878  000570  0A01               	xorlw	1	; case 5
  2879  000572  B4D8               	btfsc	status,2,c
  2880  000574  D7DA               	goto	l2745
  2881  000576  0A03               	xorlw	3	; case 6
  2882  000578  B4D8               	btfsc	status,2,c
  2883  00057A  D7DB               	goto	l2747
  2884  00057C  0A01               	xorlw	1	; case 7
  2885  00057E  B4D8               	btfsc	status,2,c
  2886  000580  D7DC               	goto	l2749
  2887  000582                     l2755:
  2888                           
  2889                           ;CAN.c: 367:         return TRUE;
  2890  000582  0E01               	movlw	1
  2891  000584  0012               	return		;funcret
  2892  000586                     __end_of_CAN_TakeFrame:
  2893                           	opt callstack 0
  2894                           
  2895 ;; *************** function ___awdiv *****************
  2896 ;; Defined at:
  2897 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  2898 ;; Parameters:    Size  Location     Type
  2899 ;;  dividend        2    5[COMRAM] int 
  2900 ;;  divisor         2    7[COMRAM] int 
  2901 ;; Auto vars:     Size  Location     Type
  2902 ;;  quotient        2   11[COMRAM] int 
  2903 ;;  sign            1   10[COMRAM] unsigned char 
  2904 ;;  counter         1    9[COMRAM] unsigned char 
  2905 ;; Return value:  Size  Location     Type
  2906 ;;                  2    5[COMRAM] int 
  2907 ;; Registers used:
  2908 ;;		wreg, status,2, status,0
  2909 ;; Tracked objects:
  2910 ;;		On entry : 0/0
  2911 ;;		On exit  : 0/0
  2912 ;;		Unchanged: 0/0
  2913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2914 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2915 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2917 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2918 ;;Total ram usage:        8 bytes
  2919 ;; Hardware stack levels used:    1
  2920 ;; Hardware stack levels required when called:    3
  2921 ;; This function calls:
  2922 ;;		Nothing
  2923 ;; This function is called by:
  2924 ;;		_CAN_TakeFrame
  2925 ;;		_FRAME_HandleCanFrame
  2926 ;; This function uses a non-reentrant model
  2927 ;;
  2928                           
  2929                           	psect	text17
  2930  000BA4                     __ptext17:
  2931                           	opt callstack 0
  2932  000BA4                     ___awdiv:
  2933                           	opt callstack 25
  2934                           
  2935                           ;incstack = 0
  2936  000BA4  0E00               	movlw	0
  2937  000BA6  6E0B               	movwf	___awdiv@sign,c
  2938  000BA8  AE09               	btfss	___awdiv@divisor+1,7,c
  2939  000BAA  D006               	goto	l2611
  2940  000BAC  6C08               	negf	___awdiv@divisor,c
  2941  000BAE  1E09               	comf	___awdiv@divisor+1,f,c
  2942  000BB0  B0D8               	btfsc	status,0,c
  2943  000BB2  2A09               	incf	___awdiv@divisor+1,f,c
  2944  000BB4  0E01               	movlw	1
  2945  000BB6  6E0B               	movwf	___awdiv@sign,c
  2946  000BB8                     l2611:
  2947  000BB8  AE07               	btfss	___awdiv@dividend+1,7,c
  2948  000BBA  D006               	goto	l2617
  2949  000BBC  6C06               	negf	___awdiv@dividend,c
  2950  000BBE  1E07               	comf	___awdiv@dividend+1,f,c
  2951  000BC0  B0D8               	btfsc	status,0,c
  2952  000BC2  2A07               	incf	___awdiv@dividend+1,f,c
  2953  000BC4  0E01               	movlw	1
  2954  000BC6  1A0B               	xorwf	___awdiv@sign,f,c
  2955  000BC8                     l2617:
  2956  000BC8  0E00               	movlw	0
  2957  000BCA  6E0D               	movwf	___awdiv@quotient+1,c
  2958  000BCC  0E00               	movlw	0
  2959  000BCE  6E0C               	movwf	___awdiv@quotient,c
  2960  000BD0  5008               	movf	___awdiv@divisor,w,c
  2961  000BD2  1009               	iorwf	___awdiv@divisor+1,w,c
  2962  000BD4  B4D8               	btfsc	status,2,c
  2963  000BD6  D01C               	goto	l2639
  2964  000BD8  0E01               	movlw	1
  2965  000BDA  6E0A               	movwf	___awdiv@counter,c
  2966  000BDC  D004               	goto	l2625
  2967  000BDE                     l2623:
  2968  000BDE  90D8               	bcf	status,0,c
  2969  000BE0  3608               	rlcf	___awdiv@divisor,f,c
  2970  000BE2  3609               	rlcf	___awdiv@divisor+1,f,c
  2971  000BE4  2A0A               	incf	___awdiv@counter,f,c
  2972  000BE6                     l2625:
  2973  000BE6  AE09               	btfss	___awdiv@divisor+1,7,c
  2974  000BE8  D7FA               	goto	l2623
  2975  000BEA                     u1180:
  2976  000BEA  90D8               	bcf	status,0,c
  2977  000BEC  360C               	rlcf	___awdiv@quotient,f,c
  2978  000BEE  360D               	rlcf	___awdiv@quotient+1,f,c
  2979  000BF0  5008               	movf	___awdiv@divisor,w,c
  2980  000BF2  5C06               	subwf	___awdiv@dividend,w,c
  2981  000BF4  5009               	movf	___awdiv@divisor+1,w,c
  2982  000BF6  5807               	subwfb	___awdiv@dividend+1,w,c
  2983  000BF8  A0D8               	btfss	status,0,c
  2984  000BFA  D005               	goto	l2635
  2985  000BFC  5008               	movf	___awdiv@divisor,w,c
  2986  000BFE  5E06               	subwf	___awdiv@dividend,f,c
  2987  000C00  5009               	movf	___awdiv@divisor+1,w,c
  2988  000C02  5A07               	subwfb	___awdiv@dividend+1,f,c
  2989  000C04  800C               	bsf	___awdiv@quotient,0,c
  2990  000C06                     l2635:
  2991  000C06  90D8               	bcf	status,0,c
  2992  000C08  3209               	rrcf	___awdiv@divisor+1,f,c
  2993  000C0A  3208               	rrcf	___awdiv@divisor,f,c
  2994  000C0C  2E0A               	decfsz	___awdiv@counter,f,c
  2995  000C0E  D7ED               	goto	u1180
  2996  000C10                     l2639:
  2997  000C10  500B               	movf	___awdiv@sign,w,c
  2998  000C12  B4D8               	btfsc	status,2,c
  2999  000C14  D004               	goto	l2643
  3000  000C16  6C0C               	negf	___awdiv@quotient,c
  3001  000C18  1E0D               	comf	___awdiv@quotient+1,f,c
  3002  000C1A  B0D8               	btfsc	status,0,c
  3003  000C1C  2A0D               	incf	___awdiv@quotient+1,f,c
  3004  000C1E                     l2643:
  3005  000C1E  C00C  F006         	movff	___awdiv@quotient,?___awdiv
  3006  000C22  C00D  F007         	movff	___awdiv@quotient+1,?___awdiv+1
  3007  000C26  0012               	return		;funcret
  3008  000C28                     __end_of___awdiv:
  3009                           	opt callstack 0
  3010                           
  3011 ;; *************** function _CAN_MoveBuffIntoFrame *****************
  3012 ;; Defined at:
  3013 ;;		line 169 in file "CAN.c"
  3014 ;; Parameters:    Size  Location     Type
  3015 ;;  Ram             2    5[COMRAM] PTR unsigned char 
  3016 ;;		 -> TRM_DataTransmition@canMessage(17), RXB0D0(1), 
  3017 ;;  Buf             2    7[COMRAM] PTR unsigned char 
  3018 ;;		 -> TRM_DataTransmition@canMessage(17), RXB0D0(1), 
  3019 ;; Auto vars:     Size  Location     Type
  3020 ;;  i               1    9[COMRAM] unsigned char 
  3021 ;; Return value:  Size  Location     Type
  3022 ;;                  1    wreg      void 
  3023 ;; Registers used:
  3024 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3025 ;; Tracked objects:
  3026 ;;		On entry : 0/0
  3027 ;;		On exit  : 0/0
  3028 ;;		Unchanged: 0/0
  3029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3030 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3031 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3033 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3034 ;;Total ram usage:        5 bytes
  3035 ;; Hardware stack levels used:    1
  3036 ;; Hardware stack levels required when called:    3
  3037 ;; This function calls:
  3038 ;;		Nothing
  3039 ;; This function is called by:
  3040 ;;		_CAN_SendFrame
  3041 ;;		_CAN_TakeFrame
  3042 ;; This function uses a non-reentrant model
  3043 ;;
  3044                           
  3045                           	psect	text18
  3046  000F48                     __ptext18:
  3047                           	opt callstack 0
  3048  000F48                     _CAN_MoveBuffIntoFrame:
  3049                           	opt callstack 24
  3050                           
  3051                           ;CAN.c: 169: static void CAN_MoveBuffIntoFrame(BYTE* Ram, BYTE* Buf);CAN.c: 170: {;CAN.c
      +                          : 171:     BYTE i;;CAN.c: 172:     for(i=0; i<8; ++i)
  3052                           
  3053                           ;incstack = 0
  3054  000F48  0E00               	movlw	0
  3055  000F4A  6E0A               	movwf	CAN_MoveBuffIntoFrame@i,c
  3056  000F4C                     l2365:
  3057                           
  3058                           ;CAN.c: 173:     {;CAN.c: 174:         Ram[i]=(*(Buf+i));
  3059  000F4C  500A               	movf	CAN_MoveBuffIntoFrame@i,w,c
  3060  000F4E  2408               	addwf	CAN_MoveBuffIntoFrame@Buf,w,c
  3061  000F50  6ED9               	movwf	fsr2l,c
  3062  000F52  0E00               	movlw	0
  3063  000F54  2009               	addwfc	CAN_MoveBuffIntoFrame@Buf+1,w,c
  3064  000F56  6EDA               	movwf	fsr2h,c
  3065  000F58  500A               	movf	CAN_MoveBuffIntoFrame@i,w,c
  3066  000F5A  2406               	addwf	CAN_MoveBuffIntoFrame@Ram,w,c
  3067  000F5C  6EE1               	movwf	fsr1l,c
  3068  000F5E  0E00               	movlw	0
  3069  000F60  2007               	addwfc	CAN_MoveBuffIntoFrame@Ram+1,w,c
  3070  000F62  6EE2               	movwf	fsr1h,c
  3071  000F64  CFDF FFE7          	movff	indf2,indf1
  3072                           
  3073                           ;CAN.c: 175:     }
  3074  000F68  2A0A               	incf	CAN_MoveBuffIntoFrame@i,f,c
  3075  000F6A  0E07               	movlw	7
  3076  000F6C  640A               	cpfsgt	CAN_MoveBuffIntoFrame@i,c
  3077  000F6E  D7EE               	goto	l2365
  3078  000F70  0012               	return	
  3079  000F72                     __end_of_CAN_MoveBuffIntoFrame:
  3080                           	opt callstack 0
  3081                           
  3082 ;; *************** function _TMR1_Update_flag_Set *****************
  3083 ;; Defined at:
  3084 ;;		line 32 in file "TMR1.c"
  3085 ;; Parameters:    Size  Location     Type
  3086 ;;  a               2    5[COMRAM] unsigned int 
  3087 ;; Auto vars:     Size  Location     Type
  3088 ;;		None
  3089 ;; Return value:  Size  Location     Type
  3090 ;;                  1    wreg      void 
  3091 ;; Registers used:
  3092 ;;		None
  3093 ;; Tracked objects:
  3094 ;;		On entry : 0/0
  3095 ;;		On exit  : 0/0
  3096 ;;		Unchanged: 0/0
  3097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3098 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3101 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3102 ;;Total ram usage:        2 bytes
  3103 ;; Hardware stack levels used:    1
  3104 ;; Hardware stack levels required when called:    3
  3105 ;; This function calls:
  3106 ;;		Nothing
  3107 ;; This function is called by:
  3108 ;;		_main
  3109 ;; This function uses a non-reentrant model
  3110 ;;
  3111                           
  3112                           	psect	text19
  3113  0010A0                     __ptext19:
  3114                           	opt callstack 0
  3115  0010A0                     _TMR1_Update_flag_Set:
  3116                           	opt callstack 27
  3117                           
  3118                           ;TMR1.c: 32: void TMR1_Update_flag_Set(UINT a);TMR1.c: 33: {;TMR1.c: 34:     TMR1_Update
      +                          _flag = a;
  3119                           
  3120                           ;incstack = 0
  3121  0010A0  C006  F047         	movff	TMR1_Update_flag_Set@a,_TMR1_Update_flag
  3122  0010A4  C007  F048         	movff	TMR1_Update_flag_Set@a+1,_TMR1_Update_flag+1
  3123  0010A8  0012               	return		;funcret
  3124  0010AA                     __end_of_TMR1_Update_flag_Set:
  3125                           	opt callstack 0
  3126                           
  3127 ;; *************** function _TMR1_Update_flag_Get *****************
  3128 ;; Defined at:
  3129 ;;		line 47 in file "TMR1.c"
  3130 ;; Parameters:    Size  Location     Type
  3131 ;;		None
  3132 ;; Auto vars:     Size  Location     Type
  3133 ;;		None
  3134 ;; Return value:  Size  Location     Type
  3135 ;;                  2    5[COMRAM] unsigned int 
  3136 ;; Registers used:
  3137 ;;		None
  3138 ;; Tracked objects:
  3139 ;;		On entry : 0/0
  3140 ;;		On exit  : 0/0
  3141 ;;		Unchanged: 0/0
  3142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3143 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3146 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3147 ;;Total ram usage:        2 bytes
  3148 ;; Hardware stack levels used:    1
  3149 ;; Hardware stack levels required when called:    3
  3150 ;; This function calls:
  3151 ;;		Nothing
  3152 ;; This function is called by:
  3153 ;;		_main
  3154 ;; This function uses a non-reentrant model
  3155 ;;
  3156                           
  3157                           	psect	text20
  3158  0010AA                     __ptext20:
  3159                           	opt callstack 0
  3160  0010AA                     _TMR1_Update_flag_Get:
  3161                           	opt callstack 27
  3162                           
  3163                           ;TMR1.c: 49:     return TMR1_Update_flag;
  3164                           
  3165                           ;incstack = 0
  3166  0010AA  C047  F006         	movff	_TMR1_Update_flag,?_TMR1_Update_flag_Get
  3167  0010AE  C048  F007         	movff	_TMR1_Update_flag+1,?_TMR1_Update_flag_Get+1
  3168  0010B2  0012               	return		;funcret
  3169  0010B4                     __end_of_TMR1_Update_flag_Get:
  3170                           	opt callstack 0
  3171                           
  3172 ;; *************** function _LED_Update *****************
  3173 ;; Defined at:
  3174 ;;		line 105 in file "LED.c"
  3175 ;; Parameters:    Size  Location     Type
  3176 ;;		None
  3177 ;; Auto vars:     Size  Location     Type
  3178 ;;		None
  3179 ;; Return value:  Size  Location     Type
  3180 ;;                  1    wreg      unsigned char 
  3181 ;; Registers used:
  3182 ;;		wreg, status,2, status,0, cstack
  3183 ;; Tracked objects:
  3184 ;;		On entry : 0/0
  3185 ;;		On exit  : 0/0
  3186 ;;		Unchanged: 0/0
  3187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3192 ;;Total ram usage:        0 bytes
  3193 ;; Hardware stack levels used:    1
  3194 ;; Hardware stack levels required when called:    5
  3195 ;; This function calls:
  3196 ;;		_LED_Control
  3197 ;;		_LED_Left
  3198 ;;		_LED_Light_Pos
  3199 ;;		_LED_Right
  3200 ;; This function is called by:
  3201 ;;		_main
  3202 ;; This function uses a non-reentrant model
  3203 ;;
  3204                           
  3205                           	psect	text21
  3206  000C28                     __ptext21:
  3207                           	opt callstack 0
  3208  000C28                     _LED_Update:
  3209                           	opt callstack 25
  3210                           
  3211                           ;LED.c: 107:     static LED_RGA_type Red = RED;;LED.c: 108:     static LED_RGA_type Gree
      +                          n = GREEN;;LED.c: 109:     static UINT pos1 = 0b0000000001;;LED.c: 110:     static UINT 
      +                          pos2 = 0b0000000001;;LED.c: 112:     if(LOCK == 0)
  3212                           
  3213                           ;incstack = 0
  3214  000C28  504F               	movf	_LOCK,w,c
  3215  000C2A  A4D8               	btfss	status,2,c
  3216  000C2C  D013               	goto	l2859
  3217                           
  3218                           ;LED.c: 113:     {;LED.c: 114:     LED_Control(RED,0b0000000000);
  3219  000C2E  0E00               	movlw	0
  3220  000C30  6E07               	movwf	LED_Control@diode+1,c
  3221  000C32  0E00               	movlw	0
  3222  000C34  6E06               	movwf	LED_Control@diode,c
  3223  000C36  0E00               	movlw	0
  3224  000C38  EC7A  F003         	call	_LED_Control
  3225                           
  3226                           ;LED.c: 115:     LED_Light_Pos(Green,pos2,Fulfillment_Lvl);
  3227  000C3C  C052  F00D         	movff	LED_Update@pos2,LED_Light_Pos@pos
  3228  000C40  C053  F00E         	movff	LED_Update@pos2+1,LED_Light_Pos@pos+1
  3229  000C44  C056  F00F         	movff	_Fulfillment_Lvl,LED_Light_Pos@fulfillment
  3230  000C48  C057  F010         	movff	_Fulfillment_Lvl+1,LED_Light_Pos@fulfillment+1
  3231  000C4C  5058               	movf	LED_Update@Green,w,c
  3232  000C4E  EC30  F005         	call	_LED_Light_Pos
  3233                           
  3234                           ;LED.c: 117:     }
  3235  000C52  D012               	goto	l283
  3236  000C54                     l2859:
  3237                           
  3238                           ;LED.c: 119:     {;LED.c: 120:     LED_Control(Green,0b0000000000);
  3239  000C54  0E00               	movlw	0
  3240  000C56  6E07               	movwf	LED_Control@diode+1,c
  3241  000C58  0E00               	movlw	0
  3242  000C5A  6E06               	movwf	LED_Control@diode,c
  3243  000C5C  5058               	movf	LED_Update@Green,w,c
  3244  000C5E  EC7A  F003         	call	_LED_Control
  3245                           
  3246                           ;LED.c: 121:     LED_Light_Pos(RED,pos1,Fulfillment_Lvl);
  3247  000C62  C054  F00D         	movff	LED_Update@pos1,LED_Light_Pos@pos
  3248  000C66  C055  F00E         	movff	LED_Update@pos1+1,LED_Light_Pos@pos+1
  3249  000C6A  C056  F00F         	movff	_Fulfillment_Lvl,LED_Light_Pos@fulfillment
  3250  000C6E  C057  F010         	movff	_Fulfillment_Lvl+1,LED_Light_Pos@fulfillment+1
  3251  000C72  0E00               	movlw	0
  3252  000C74  EC30  F005         	call	_LED_Light_Pos
  3253  000C78                     l283:
  3254                           
  3255                           ;LED.c: 123:     pos1 = LED_Right(pos1);
  3256  000C78  C054  F006         	movff	LED_Update@pos1,LED_Right@a
  3257  000C7C  C055  F007         	movff	LED_Update@pos1+1,LED_Right@a+1
  3258  000C80  EC07  F007         	call	_LED_Right	;wreg free
  3259  000C84  C006  F054         	movff	?_LED_Right,LED_Update@pos1
  3260  000C88  C007  F055         	movff	?_LED_Right+1,LED_Update@pos1+1
  3261                           
  3262                           ;LED.c: 124:     pos2 = LED_Left(pos2);
  3263  000C8C  C052  F006         	movff	LED_Update@pos2,LED_Left@a
  3264  000C90  C053  F007         	movff	LED_Update@pos2+1,LED_Left@a+1
  3265  000C94  EC52  F007         	call	_LED_Left	;wreg free
  3266  000C98  C006  F052         	movff	?_LED_Left,LED_Update@pos2
  3267  000C9C  C007  F053         	movff	?_LED_Left+1,LED_Update@pos2+1
  3268  000CA0  0012               	return		;funcret
  3269  000CA2                     __end_of_LED_Update:
  3270                           	opt callstack 0
  3271                           
  3272 ;; *************** function _LED_Light_Pos *****************
  3273 ;; Defined at:
  3274 ;;		line 196 in file "LED.c"
  3275 ;; Parameters:    Size  Location     Type
  3276 ;;  color           1    wreg     enum E10644
  3277 ;;  pos             2   12[COMRAM] unsigned int 
  3278 ;;  fulfillment     2   14[COMRAM] unsigned int 
  3279 ;; Auto vars:     Size  Location     Type
  3280 ;;  color           1   16[COMRAM] enum E10644
  3281 ;;  flage           2   21[COMRAM] unsigned int 
  3282 ;;  pos2            2   19[COMRAM] unsigned int 
  3283 ;;  LED_array       2   17[COMRAM] unsigned int 
  3284 ;; Return value:  Size  Location     Type
  3285 ;;                  2   12[COMRAM] unsigned int 
  3286 ;; Registers used:
  3287 ;;		wreg, status,2, status,0, cstack
  3288 ;; Tracked objects:
  3289 ;;		On entry : 0/0
  3290 ;;		On exit  : 0/0
  3291 ;;		Unchanged: 0/0
  3292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3293 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3294 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3296 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3297 ;;Total ram usage:       11 bytes
  3298 ;; Hardware stack levels used:    1
  3299 ;; Hardware stack levels required when called:    4
  3300 ;; This function calls:
  3301 ;;		_LED_Control
  3302 ;;		_LED_Left
  3303 ;;		_LED_Right
  3304 ;;		___lwdiv
  3305 ;; This function is called by:
  3306 ;;		_LED_Update
  3307 ;; This function uses a non-reentrant model
  3308 ;;
  3309                           
  3310                           	psect	text22
  3311  000A60                     __ptext22:
  3312                           	opt callstack 0
  3313  000A60                     _LED_Light_Pos:
  3314                           	opt callstack 25
  3315                           
  3316                           ;incstack = 0
  3317                           ;LED_Light_Pos@color stored from wreg
  3318  000A60  6E11               	movwf	LED_Light_Pos@color,c
  3319                           
  3320                           ;LED.c: 196: UINT LED_Light_Pos(LED_RGA_type color,UINT pos, UINT fulfillment);LED.c: 19
      +                          7: {;LED.c: 198:     UINT pos2 =pos;
  3321  000A62  C00D  F014         	movff	LED_Light_Pos@pos,LED_Light_Pos@pos2
  3322  000A66  C00E  F015         	movff	LED_Light_Pos@pos+1,LED_Light_Pos@pos2+1
  3323                           
  3324                           ;LED.c: 199:     UINT LED_array = 0b0000000000;
  3325  000A6A  0E00               	movlw	0
  3326  000A6C  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  3327  000A6E  0E00               	movlw	0
  3328  000A70  6E12               	movwf	LED_Light_Pos@LED_array,c
  3329                           
  3330                           ;LED.c: 200:     UINT flage = fulfillment/10;
  3331  000A72  C00F  F006         	movff	LED_Light_Pos@fulfillment,___lwdiv@dividend
  3332  000A76  C010  F007         	movff	LED_Light_Pos@fulfillment+1,___lwdiv@dividend+1
  3333  000A7A  0E00               	movlw	0
  3334  000A7C  6E09               	movwf	___lwdiv@divisor+1,c
  3335  000A7E  0E0A               	movlw	10
  3336  000A80  6E08               	movwf	___lwdiv@divisor,c
  3337  000A82  ECDE  F006         	call	___lwdiv	;wreg free
  3338  000A86  C006  F016         	movff	?___lwdiv,LED_Light_Pos@flage
  3339  000A8A  C007  F017         	movff	?___lwdiv+1,LED_Light_Pos@flage+1
  3340                           
  3341                           ;LED.c: 201:     if(color == RED)
  3342  000A8E  5011               	movf	LED_Light_Pos@color,w,c
  3343  000A90  B4D8               	btfsc	status,2,c
  3344  000A92  D017               	goto	l2793
  3345  000A94  D031               	goto	l2801
  3346  000A96                     l2787:
  3347                           
  3348                           ;LED.c: 204:         {;LED.c: 205:             LED_array = pos2|LED_array;
  3349  000A96  5012               	movf	LED_Light_Pos@LED_array,w,c
  3350  000A98  1014               	iorwf	LED_Light_Pos@pos2,w,c
  3351  000A9A  6E12               	movwf	LED_Light_Pos@LED_array,c
  3352  000A9C  5013               	movf	LED_Light_Pos@LED_array+1,w,c
  3353  000A9E  1015               	iorwf	LED_Light_Pos@pos2+1,w,c
  3354  000AA0  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  3355                           
  3356                           ;LED.c: 206:             pos2 = LED_Left(pos2);
  3357  000AA2  C014  F006         	movff	LED_Light_Pos@pos2,LED_Left@a
  3358  000AA6  C015  F007         	movff	LED_Light_Pos@pos2+1,LED_Left@a+1
  3359  000AAA  EC52  F007         	call	_LED_Left	;wreg free
  3360  000AAE  C006  F014         	movff	?_LED_Left,LED_Light_Pos@pos2
  3361  000AB2  C007  F015         	movff	?_LED_Left+1,LED_Light_Pos@pos2+1
  3362                           
  3363                           ;LED.c: 207:             flage = flage - 1;
  3364  000AB6  0EFF               	movlw	255
  3365  000AB8  2416               	addwf	LED_Light_Pos@flage,w,c
  3366  000ABA  6E16               	movwf	LED_Light_Pos@flage,c
  3367  000ABC  0EFF               	movlw	255
  3368  000ABE  2017               	addwfc	LED_Light_Pos@flage+1,w,c
  3369  000AC0  6E17               	movwf	LED_Light_Pos@flage+1,c
  3370  000AC2                     l2793:
  3371                           
  3372                           ;LED.c: 203:         while(flage>0)
  3373  000AC2  5016               	movf	LED_Light_Pos@flage,w,c
  3374  000AC4  1017               	iorwf	LED_Light_Pos@flage+1,w,c
  3375  000AC6  B4D8               	btfsc	status,2,c
  3376  000AC8  D01B               	goto	u1320
  3377  000ACA  D7E5               	goto	l2787
  3378  000ACC                     l2795:
  3379                           
  3380                           ;LED.c: 213:         {;LED.c: 214:             LED_array = pos2|LED_array;
  3381  000ACC  5012               	movf	LED_Light_Pos@LED_array,w,c
  3382  000ACE  1014               	iorwf	LED_Light_Pos@pos2,w,c
  3383  000AD0  6E12               	movwf	LED_Light_Pos@LED_array,c
  3384  000AD2  5013               	movf	LED_Light_Pos@LED_array+1,w,c
  3385  000AD4  1015               	iorwf	LED_Light_Pos@pos2+1,w,c
  3386  000AD6  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  3387                           
  3388                           ;LED.c: 215:             pos2 = LED_Right(pos2);
  3389  000AD8  C014  F006         	movff	LED_Light_Pos@pos2,LED_Right@a
  3390  000ADC  C015  F007         	movff	LED_Light_Pos@pos2+1,LED_Right@a+1
  3391  000AE0  EC07  F007         	call	_LED_Right	;wreg free
  3392  000AE4  C006  F014         	movff	?_LED_Right,LED_Light_Pos@pos2
  3393  000AE8  C007  F015         	movff	?_LED_Right+1,LED_Light_Pos@pos2+1
  3394                           
  3395                           ;LED.c: 216:             flage = flage - 1;
  3396  000AEC  0EFF               	movlw	255
  3397  000AEE  2416               	addwf	LED_Light_Pos@flage,w,c
  3398  000AF0  6E16               	movwf	LED_Light_Pos@flage,c
  3399  000AF2  0EFF               	movlw	255
  3400  000AF4  2017               	addwfc	LED_Light_Pos@flage+1,w,c
  3401  000AF6  6E17               	movwf	LED_Light_Pos@flage+1,c
  3402  000AF8                     l2801:
  3403                           
  3404                           ;LED.c: 212:         while(flage>0)
  3405  000AF8  5016               	movf	LED_Light_Pos@flage,w,c
  3406  000AFA  1017               	iorwf	LED_Light_Pos@flage+1,w,c
  3407  000AFC  A4D8               	btfss	status,2,c
  3408  000AFE  D7E6               	goto	l2795
  3409  000B00                     u1320:
  3410                           
  3411                           ;LED.c: 219:     LED_Control(color, LED_array);
  3412  000B00  C012  F006         	movff	LED_Light_Pos@LED_array,LED_Control@diode
  3413  000B04  C013  F007         	movff	LED_Light_Pos@LED_array+1,LED_Control@diode+1
  3414  000B08  5011               	movf	LED_Light_Pos@color,w,c
  3415  000B0A  EC7A  F003         	call	_LED_Control
  3416  000B0E  0012               	return		;funcret
  3417  000B10                     __end_of_LED_Light_Pos:
  3418                           	opt callstack 0
  3419                           
  3420 ;; *************** function ___lwdiv *****************
  3421 ;; Defined at:
  3422 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwdiv.c"
  3423 ;; Parameters:    Size  Location     Type
  3424 ;;  dividend        2    5[COMRAM] unsigned int 
  3425 ;;  divisor         2    7[COMRAM] unsigned int 
  3426 ;; Auto vars:     Size  Location     Type
  3427 ;;  quotient        2    9[COMRAM] unsigned int 
  3428 ;;  counter         1   11[COMRAM] unsigned char 
  3429 ;; Return value:  Size  Location     Type
  3430 ;;                  2    5[COMRAM] unsigned int 
  3431 ;; Registers used:
  3432 ;;		wreg, status,2, status,0
  3433 ;; Tracked objects:
  3434 ;;		On entry : 0/0
  3435 ;;		On exit  : 0/0
  3436 ;;		Unchanged: 0/0
  3437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3438 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3439 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3441 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3442 ;;Total ram usage:        7 bytes
  3443 ;; Hardware stack levels used:    1
  3444 ;; Hardware stack levels required when called:    3
  3445 ;; This function calls:
  3446 ;;		Nothing
  3447 ;; This function is called by:
  3448 ;;		_LED_Light_Pos
  3449 ;;		_FRAME_Plot
  3450 ;; This function uses a non-reentrant model
  3451 ;;
  3452                           
  3453                           	psect	text23
  3454  000DBC                     __ptext23:
  3455                           	opt callstack 0
  3456  000DBC                     ___lwdiv:
  3457                           	opt callstack 25
  3458                           
  3459                           ;incstack = 0
  3460  000DBC  0E00               	movlw	0
  3461  000DBE  6E0B               	movwf	___lwdiv@quotient+1,c
  3462  000DC0  0E00               	movlw	0
  3463  000DC2  6E0A               	movwf	___lwdiv@quotient,c
  3464  000DC4  5008               	movf	___lwdiv@divisor,w,c
  3465  000DC6  1009               	iorwf	___lwdiv@divisor+1,w,c
  3466  000DC8  B4D8               	btfsc	status,2,c
  3467  000DCA  D01C               	goto	l1151
  3468  000DCC  0E01               	movlw	1
  3469  000DCE  6E0C               	movwf	___lwdiv@counter,c
  3470  000DD0  D004               	goto	l2655
  3471  000DD2                     l2653:
  3472  000DD2  90D8               	bcf	status,0,c
  3473  000DD4  3608               	rlcf	___lwdiv@divisor,f,c
  3474  000DD6  3609               	rlcf	___lwdiv@divisor+1,f,c
  3475  000DD8  2A0C               	incf	___lwdiv@counter,f,c
  3476  000DDA                     l2655:
  3477  000DDA  AE09               	btfss	___lwdiv@divisor+1,7,c
  3478  000DDC  D7FA               	goto	l2653
  3479  000DDE                     u1220:
  3480  000DDE  90D8               	bcf	status,0,c
  3481  000DE0  360A               	rlcf	___lwdiv@quotient,f,c
  3482  000DE2  360B               	rlcf	___lwdiv@quotient+1,f,c
  3483  000DE4  5008               	movf	___lwdiv@divisor,w,c
  3484  000DE6  5C06               	subwf	___lwdiv@dividend,w,c
  3485  000DE8  5009               	movf	___lwdiv@divisor+1,w,c
  3486  000DEA  5807               	subwfb	___lwdiv@dividend+1,w,c
  3487  000DEC  A0D8               	btfss	status,0,c
  3488  000DEE  D005               	goto	l2665
  3489  000DF0  5008               	movf	___lwdiv@divisor,w,c
  3490  000DF2  5E06               	subwf	___lwdiv@dividend,f,c
  3491  000DF4  5009               	movf	___lwdiv@divisor+1,w,c
  3492  000DF6  5A07               	subwfb	___lwdiv@dividend+1,f,c
  3493  000DF8  800A               	bsf	___lwdiv@quotient,0,c
  3494  000DFA                     l2665:
  3495  000DFA  90D8               	bcf	status,0,c
  3496  000DFC  3209               	rrcf	___lwdiv@divisor+1,f,c
  3497  000DFE  3208               	rrcf	___lwdiv@divisor,f,c
  3498  000E00  2E0C               	decfsz	___lwdiv@counter,f,c
  3499  000E02  D7ED               	goto	u1220
  3500  000E04                     l1151:
  3501  000E04  C00A  F006         	movff	___lwdiv@quotient,?___lwdiv
  3502  000E08  C00B  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3503  000E0C  0012               	return		;funcret
  3504  000E0E                     __end_of___lwdiv:
  3505                           	opt callstack 0
  3506                           
  3507 ;; *************** function _LED_Right *****************
  3508 ;; Defined at:
  3509 ;;		line 140 in file "LED.c"
  3510 ;; Parameters:    Size  Location     Type
  3511 ;;  a               2    5[COMRAM] unsigned int 
  3512 ;; Auto vars:     Size  Location     Type
  3513 ;;  b               2    9[COMRAM] unsigned int 
  3514 ;; Return value:  Size  Location     Type
  3515 ;;                  2    5[COMRAM] unsigned int 
  3516 ;; Registers used:
  3517 ;;		wreg, status,2, status,0
  3518 ;; Tracked objects:
  3519 ;;		On entry : 0/0
  3520 ;;		On exit  : 0/0
  3521 ;;		Unchanged: 0/0
  3522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3523 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3524 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3525 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3526 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3527 ;;Total ram usage:        6 bytes
  3528 ;; Hardware stack levels used:    1
  3529 ;; Hardware stack levels required when called:    3
  3530 ;; This function calls:
  3531 ;;		Nothing
  3532 ;; This function is called by:
  3533 ;;		_LED_Update
  3534 ;;		_LED_Light_Pos
  3535 ;; This function uses a non-reentrant model
  3536 ;;
  3537                           
  3538                           	psect	text24
  3539  000E0E                     __ptext24:
  3540                           	opt callstack 0
  3541  000E0E                     _LED_Right:
  3542                           	opt callstack 26
  3543                           
  3544                           ;LED.c: 140: UINT LED_Right(UINT a);LED.c: 141: {;LED.c: 142:     if ((a & 0b0000000001)
      +                           == 0b0000000001)
  3545                           
  3546                           ;incstack = 0
  3547  000E0E  A006               	btfss	LED_Right@a,0,c
  3548  000E10  D018               	goto	l2499
  3549                           
  3550                           ;LED.c: 143:     {;LED.c: 144:         UINT b = a & 0b1111111110;
  3551  000E12  0EFE               	movlw	254
  3552  000E14  1406               	andwf	LED_Right@a,w,c
  3553  000E16  6E0A               	movwf	LED_Right@b,c
  3554  000E18  0E03               	movlw	3
  3555  000E1A  1407               	andwf	LED_Right@a+1,w,c
  3556  000E1C  6E0B               	movwf	LED_Right@b+1,c
  3557                           
  3558                           ;LED.c: 145:         b = b >> 1;
  3559  000E1E  90D8               	bcf	status,0,c
  3560  000E20  300B               	rrcf	LED_Right@b+1,w,c
  3561  000E22  6E08               	movwf	??_LED_Right& (0+255),c
  3562  000E24  300A               	rrcf	LED_Right@b,w,c
  3563  000E26  6E0A               	movwf	LED_Right@b,c
  3564  000E28  C008  F00B         	movff	??_LED_Right,LED_Right@b+1
  3565                           
  3566                           ;LED.c: 146:         b = b | 0b1000000000;
  3567  000E2C  0E00               	movlw	0
  3568  000E2E  100A               	iorwf	LED_Right@b,w,c
  3569  000E30  6E0A               	movwf	LED_Right@b,c
  3570  000E32  0E02               	movlw	2
  3571  000E34  100B               	iorwf	LED_Right@b+1,w,c
  3572  000E36  6E0B               	movwf	LED_Right@b+1,c
  3573                           
  3574                           ;LED.c: 147:         return b;
  3575  000E38  C00A  F006         	movff	LED_Right@b,?_LED_Right
  3576  000E3C  C00B  F007         	movff	LED_Right@b+1,?_LED_Right+1
  3577  000E40  0012               	return	
  3578  000E42                     l2499:
  3579                           
  3580                           ;LED.c: 150:     {;LED.c: 151:         a =a >> 1;
  3581  000E42  90D8               	bcf	status,0,c
  3582  000E44  3007               	rrcf	LED_Right@a+1,w,c
  3583  000E46  6E08               	movwf	??_LED_Right& (0+255),c
  3584  000E48  3006               	rrcf	LED_Right@a,w,c
  3585  000E4A  6E06               	movwf	LED_Right@a,c
  3586  000E4C  C008  F007         	movff	??_LED_Right,LED_Right@a+1
  3587                           
  3588                           ;LED.c: 152:         return a;
  3589  000E50  C006  F006         	movff	LED_Right@a,?_LED_Right
  3590  000E54  C007  F007         	movff	LED_Right@a+1,?_LED_Right+1
  3591  000E58  0012               	return		;funcret
  3592  000E5A                     __end_of_LED_Right:
  3593                           	opt callstack 0
  3594                           
  3595 ;; *************** function _LED_Left *****************
  3596 ;; Defined at:
  3597 ;;		line 167 in file "LED.c"
  3598 ;; Parameters:    Size  Location     Type
  3599 ;;  a               2    5[COMRAM] unsigned int 
  3600 ;; Auto vars:     Size  Location     Type
  3601 ;;  b               2    7[COMRAM] unsigned int 
  3602 ;; Return value:  Size  Location     Type
  3603 ;;                  2    5[COMRAM] unsigned int 
  3604 ;; Registers used:
  3605 ;;		wreg, status,2, status,0
  3606 ;; Tracked objects:
  3607 ;;		On entry : 0/0
  3608 ;;		On exit  : 0/0
  3609 ;;		Unchanged: 0/0
  3610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3611 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3612 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3614 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3615 ;;Total ram usage:        4 bytes
  3616 ;; Hardware stack levels used:    1
  3617 ;; Hardware stack levels required when called:    3
  3618 ;; This function calls:
  3619 ;;		Nothing
  3620 ;; This function is called by:
  3621 ;;		_LED_Update
  3622 ;;		_LED_Light_Pos
  3623 ;; This function uses a non-reentrant model
  3624 ;;
  3625                           
  3626                           	psect	text25
  3627  000EA4                     __ptext25:
  3628                           	opt callstack 0
  3629  000EA4                     _LED_Left:
  3630                           	opt callstack 25
  3631                           
  3632                           ;LED.c: 167: UINT LED_Left(UINT a);LED.c: 168: {;LED.c: 169:     if ((a & 0b1000000000) 
      +                          == 0b1000000000)
  3633                           
  3634                           ;incstack = 0
  3635  000EA4  A207               	btfss	LED_Left@a+1,1,c
  3636  000EA6  D015               	goto	l2515
  3637                           
  3638                           ;LED.c: 170:     {;LED.c: 171:         UINT b = a & 0b0111111111;
  3639  000EA8  0EFF               	movlw	255
  3640  000EAA  1406               	andwf	LED_Left@a,w,c
  3641  000EAC  6E08               	movwf	LED_Left@b,c
  3642  000EAE  0E01               	movlw	1
  3643  000EB0  1407               	andwf	LED_Left@a+1,w,c
  3644  000EB2  6E09               	movwf	LED_Left@b+1,c
  3645                           
  3646                           ;LED.c: 172:         b = b << 1;
  3647  000EB4  90D8               	bcf	status,0,c
  3648  000EB6  3408               	rlcf	LED_Left@b,w,c
  3649  000EB8  6E08               	movwf	LED_Left@b,c
  3650  000EBA  3409               	rlcf	LED_Left@b+1,w,c
  3651  000EBC  6E09               	movwf	LED_Left@b+1,c
  3652                           
  3653                           ;LED.c: 173:         b = b | 0b0000000001;
  3654  000EBE  0E01               	movlw	1
  3655  000EC0  1008               	iorwf	LED_Left@b,w,c
  3656  000EC2  6E08               	movwf	LED_Left@b,c
  3657  000EC4  5009               	movf	LED_Left@b+1,w,c
  3658  000EC6  6E09               	movwf	LED_Left@b+1,c
  3659                           
  3660                           ;LED.c: 174:         return b;
  3661  000EC8  C008  F006         	movff	LED_Left@b,?_LED_Left
  3662  000ECC  C009  F007         	movff	LED_Left@b+1,?_LED_Left+1
  3663  000ED0  0012               	return	
  3664  000ED2                     l2515:
  3665                           
  3666                           ;LED.c: 177:     {;LED.c: 178:         a = a << 1;
  3667  000ED2  90D8               	bcf	status,0,c
  3668  000ED4  3406               	rlcf	LED_Left@a,w,c
  3669  000ED6  6E06               	movwf	LED_Left@a,c
  3670  000ED8  3407               	rlcf	LED_Left@a+1,w,c
  3671  000EDA  6E07               	movwf	LED_Left@a+1,c
  3672                           
  3673                           ;LED.c: 179:         return a;
  3674  000EDC  C006  F006         	movff	LED_Left@a,?_LED_Left
  3675  000EE0  C007  F007         	movff	LED_Left@a+1,?_LED_Left+1
  3676  000EE4  0012               	return		;funcret
  3677  000EE6                     __end_of_LED_Left:
  3678                           	opt callstack 0
  3679                           
  3680 ;; *************** function _INI_All *****************
  3681 ;; Defined at:
  3682 ;;		line 52 in file "INI.c"
  3683 ;; Parameters:    Size  Location     Type
  3684 ;;		None
  3685 ;; Auto vars:     Size  Location     Type
  3686 ;;		None
  3687 ;; Return value:  Size  Location     Type
  3688 ;;                  1    wreg      void 
  3689 ;; Registers used:
  3690 ;;		wreg, status,2, status,0, cstack
  3691 ;; Tracked objects:
  3692 ;;		On entry : 0/0
  3693 ;;		On exit  : 0/0
  3694 ;;		Unchanged: 0/0
  3695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3699 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3700 ;;Total ram usage:        0 bytes
  3701 ;; Hardware stack levels used:    1
  3702 ;; Hardware stack levels required when called:    5
  3703 ;; This function calls:
  3704 ;;		_CAN_Setup
  3705 ;;		_INI_GlobalInterrupt
  3706 ;;		_INI_LED_Start
  3707 ;;		_INI_OUTPUT
  3708 ;;		_INI_Timer
  3709 ;; This function is called by:
  3710 ;;		_main
  3711 ;; This function uses a non-reentrant model
  3712 ;;
  3713                           
  3714                           	psect	text26
  3715  00103E                     __ptext26:
  3716                           	opt callstack 0
  3717  00103E                     _INI_All:
  3718                           	opt callstack 25
  3719                           
  3720                           ;INI.c: 55:     WDTCONbits.SWDTEN = 1;
  3721                           
  3722                           ;incstack = 0
  3723  00103E  80D1               	bsf	4049,0,c	;volatile
  3724  001040  0004               	clrwdt		;# 
  3725                           
  3726                           ;INI.c: 64:     INI_OUTPUT();
  3727  001042  EC10  F008         	call	_INI_OUTPUT	;wreg free
  3728                           
  3729                           ;INI.c: 66:     CAN_Setup();
  3730  001046  EC83  F006         	call	_CAN_Setup	;wreg free
  3731                           
  3732                           ;INI.c: 67:     INI_GlobalInterrupt();
  3733  00104A  EC3F  F008         	call	_INI_GlobalInterrupt	;wreg free
  3734                           
  3735                           ;INI.c: 69:     INI_Timer();
  3736  00104E  EC2C  F008         	call	_INI_Timer	;wreg free
  3737                           
  3738                           ;INI.c: 71:     INI_LED_Start();
  3739  001052  EC73  F007         	call	_INI_LED_Start	;wreg free
  3740  001056  0012               	return		;funcret
  3741  001058                     __end_of_INI_All:
  3742                           	opt callstack 0
  3743                           
  3744 ;; *************** function _INI_Timer *****************
  3745 ;; Defined at:
  3746 ;;		line 92 in file "TMR1.c"
  3747 ;; Parameters:    Size  Location     Type
  3748 ;;		None
  3749 ;; Auto vars:     Size  Location     Type
  3750 ;;		None
  3751 ;; Return value:  Size  Location     Type
  3752 ;;                  1    wreg      unsigned char 
  3753 ;; Registers used:
  3754 ;;		wreg, status,2
  3755 ;; Tracked objects:
  3756 ;;		On entry : 0/0
  3757 ;;		On exit  : 0/0
  3758 ;;		Unchanged: 0/0
  3759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3764 ;;Total ram usage:        0 bytes
  3765 ;; Hardware stack levels used:    1
  3766 ;; Hardware stack levels required when called:    3
  3767 ;; This function calls:
  3768 ;;		Nothing
  3769 ;; This function is called by:
  3770 ;;		_INI_All
  3771 ;; This function uses a non-reentrant model
  3772 ;;
  3773                           
  3774                           	psect	text27
  3775  001058                     __ptext27:
  3776                           	opt callstack 0
  3777  001058                     _INI_Timer:
  3778                           	opt callstack 26
  3779                           
  3780                           ;TMR1.c: 96:     IRCF2 = 1;
  3781                           
  3782                           ;incstack = 0
  3783  001058  8CD3               	bsf	4051,6,c	;volatile
  3784                           
  3785                           ;TMR1.c: 97:     IRCF1 = 1;
  3786  00105A  8AD3               	bsf	4051,5,c	;volatile
  3787                           
  3788                           ;TMR1.c: 98:     IRCF0 = 1;
  3789  00105C  88D3               	bsf	4051,4,c	;volatile
  3790                           
  3791                           ;TMR1.c: 99:     T1CON = 0b00111101;
  3792  00105E  0E3D               	movlw	61
  3793  001060  6ECD               	movwf	4045,c	;volatile
  3794                           
  3795                           ;TMR1.c: 100:     TMR1H= (UINT8)((0xFFFF - (((8000000/8)/4)/10)) >> 8);
  3796  001062  0E9E               	movlw	158
  3797  001064  6ECF               	movwf	4047,c	;volatile
  3798                           
  3799                           ;TMR1.c: 101:     TMR1L=(UINT8)((0xFFFF - (((8000000/8)/4)/10)) & 0xFF);
  3800  001066  0E57               	movlw	87
  3801  001068  6ECE               	movwf	4046,c	;volatile
  3802                           
  3803                           ;TMR1.c: 102:     TMR1IE=1;
  3804  00106A  809D               	bsf	3997,0,c	;volatile
  3805                           
  3806                           ;TMR1.c: 103:     TMR1ON = 1;
  3807  00106C  80CD               	bsf	4045,0,c	;volatile
  3808  00106E  0012               	return		;funcret
  3809  001070                     __end_of_INI_Timer:
  3810                           	opt callstack 0
  3811                           
  3812 ;; *************** function _INI_OUTPUT *****************
  3813 ;; Defined at:
  3814 ;;		line 27 in file "INI.c"
  3815 ;; Parameters:    Size  Location     Type
  3816 ;;		None
  3817 ;; Auto vars:     Size  Location     Type
  3818 ;;		None
  3819 ;; Return value:  Size  Location     Type
  3820 ;;                  1    wreg      void 
  3821 ;; Registers used:
  3822 ;;		wreg, status,2
  3823 ;; Tracked objects:
  3824 ;;		On entry : 0/0
  3825 ;;		On exit  : 0/0
  3826 ;;		Unchanged: 0/0
  3827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3832 ;;Total ram usage:        0 bytes
  3833 ;; Hardware stack levels used:    1
  3834 ;; Hardware stack levels required when called:    3
  3835 ;; This function calls:
  3836 ;;		Nothing
  3837 ;; This function is called by:
  3838 ;;		_INI_All
  3839 ;; This function uses a non-reentrant model
  3840 ;;
  3841                           
  3842                           	psect	text28
  3843  001020                     __ptext28:
  3844                           	opt callstack 0
  3845  001020                     _INI_OUTPUT:
  3846                           	opt callstack 26
  3847                           
  3848                           ;INI.c: 31:     LATA = 0;
  3849                           
  3850                           ;incstack = 0
  3851  001020  0E00               	movlw	0
  3852  001022  6E89               	movwf	3977,c	;volatile
  3853                           
  3854                           ;INI.c: 32:     LATB = 0;
  3855  001024  0E00               	movlw	0
  3856  001026  6E8A               	movwf	3978,c	;volatile
  3857                           
  3858                           ;INI.c: 33:     LATC = 0;
  3859  001028  0E00               	movlw	0
  3860  00102A  6E8B               	movwf	3979,c	;volatile
  3861                           
  3862                           ;INI.c: 34:     TRISA = 0x0C;
  3863  00102C  0E0C               	movlw	12
  3864  00102E  6E92               	movwf	3986,c	;volatile
  3865                           
  3866                           ;INI.c: 35:     TRISB = 0b10001000;
  3867  001030  0E88               	movlw	136
  3868  001032  6E93               	movwf	3987,c	;volatile
  3869                           
  3870                           ;INI.c: 36:     TRISC = 0xBF;
  3871  001034  0EBF               	movlw	191
  3872  001036  6E94               	movwf	3988,c	;volatile
  3873                           
  3874                           ;INI.c: 37:     RCONbits.IPEN = 1;
  3875  001038  8ED0               	bsf	4048,7,c	;volatile
  3876                           
  3877                           ;INI.c: 40:     DetectorLedRadar.Flags.inicjalizacja = 1;
  3878  00103A  8644               	bsf	_DetectorLedRadar,3,c
  3879  00103C  0012               	return		;funcret
  3880  00103E                     __end_of_INI_OUTPUT:
  3881                           	opt callstack 0
  3882                           
  3883 ;; *************** function _INI_LED_Start *****************
  3884 ;; Defined at:
  3885 ;;		line 231 in file "LED.c"
  3886 ;; Parameters:    Size  Location     Type
  3887 ;;		None
  3888 ;; Auto vars:     Size  Location     Type
  3889 ;;		None
  3890 ;; Return value:  Size  Location     Type
  3891 ;;                  1    wreg      void 
  3892 ;; Registers used:
  3893 ;;		wreg, status,2, status,0, cstack
  3894 ;; Tracked objects:
  3895 ;;		On entry : 0/0
  3896 ;;		On exit  : 0/0
  3897 ;;		Unchanged: 0/0
  3898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3903 ;;Total ram usage:        0 bytes
  3904 ;; Hardware stack levels used:    1
  3905 ;; Hardware stack levels required when called:    4
  3906 ;; This function calls:
  3907 ;;		_LED_Control
  3908 ;; This function is called by:
  3909 ;;		_INI_All
  3910 ;; This function uses a non-reentrant model
  3911 ;;
  3912                           
  3913                           	psect	text29
  3914  000EE6                     __ptext29:
  3915                           	opt callstack 0
  3916  000EE6                     _INI_LED_Start:
  3917                           	opt callstack 25
  3918                           
  3919                           ;LED.c: 233:     TRISA = TRISA & 0b00000001;
  3920                           
  3921                           ;incstack = 0
  3922  000EE6  5092               	movf	3986,w,c	;volatile
  3923  000EE8  0B01               	andlw	1
  3924  000EEA  6E92               	movwf	3986,c	;volatile
  3925                           
  3926                           ;LED.c: 234:     TRISB = TRISB & 0b11111100;
  3927  000EEC  5093               	movf	3987,w,c	;volatile
  3928  000EEE  0BFC               	andlw	252
  3929  000EF0  6E93               	movwf	3987,c	;volatile
  3930                           
  3931                           ;LED.c: 235:     TRISE = TRISE & 0b11111000;
  3932  000EF2  5096               	movf	3990,w,c	;volatile
  3933  000EF4  0BF8               	andlw	248
  3934  000EF6  6E96               	movwf	3990,c	;volatile
  3935                           
  3936                           ;LED.c: 236:     TRISD = TRISD & 0b00000000;
  3937  000EF8  0E00               	movlw	0
  3938  000EFA  6E95               	movwf	3989,c	;volatile
  3939                           
  3940                           ;LED.c: 237:     LED_Control(RED,0b0000000000);
  3941  000EFC  0E00               	movlw	0
  3942  000EFE  6E07               	movwf	LED_Control@diode+1,c
  3943  000F00  0E00               	movlw	0
  3944  000F02  6E06               	movwf	LED_Control@diode,c
  3945  000F04  0E00               	movlw	0
  3946  000F06  EC7A  F003         	call	_LED_Control
  3947                           
  3948                           ;LED.c: 238:     LED_Control(GREEN,0b0000000000);
  3949  000F0A  0E00               	movlw	0
  3950  000F0C  6E07               	movwf	LED_Control@diode+1,c
  3951  000F0E  0E00               	movlw	0
  3952  000F10  6E06               	movwf	LED_Control@diode,c
  3953  000F12  0E01               	movlw	1
  3954  000F14  EC7A  F003         	call	_LED_Control
  3955  000F18  0012               	return		;funcret
  3956  000F1A                     __end_of_INI_LED_Start:
  3957                           	opt callstack 0
  3958                           
  3959 ;; *************** function _LED_Control *****************
  3960 ;; Defined at:
  3961 ;;		line 256 in file "LED.c"
  3962 ;; Parameters:    Size  Location     Type
  3963 ;;  color           1    wreg     enum E10644
  3964 ;;  diode           2    5[COMRAM] unsigned int 
  3965 ;; Auto vars:     Size  Location     Type
  3966 ;;  color           1    9[COMRAM] enum E10644
  3967 ;;  cos             2    0        unsigned int 
  3968 ;; Return value:  Size  Location     Type
  3969 ;;                  1    wreg      unsigned char 
  3970 ;; Registers used:
  3971 ;;		wreg, status,2, status,0
  3972 ;; Tracked objects:
  3973 ;;		On entry : 0/0
  3974 ;;		On exit  : 0/0
  3975 ;;		Unchanged: 0/0
  3976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3977 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3978 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3980 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3981 ;;Total ram usage:        5 bytes
  3982 ;; Hardware stack levels used:    1
  3983 ;; Hardware stack levels required when called:    3
  3984 ;; This function calls:
  3985 ;;		Nothing
  3986 ;; This function is called by:
  3987 ;;		_LED_Error
  3988 ;;		_LED_Clear
  3989 ;;		_LED_Update
  3990 ;;		_LED_Light_Pos
  3991 ;;		_INI_LED_Start
  3992 ;; This function uses a non-reentrant model
  3993 ;;
  3994                           
  3995                           	psect	text30
  3996  0006F4                     __ptext30:
  3997                           	opt callstack 0
  3998  0006F4                     _LED_Control:
  3999                           	opt callstack 24
  4000                           
  4001                           ;incstack = 0
  4002                           ;LED_Control@color stored from wreg
  4003  0006F4  6E0A               	movwf	LED_Control@color,c
  4004                           
  4005                           ;LED.c: 259:     if(color == RED)
  4006  0006F6  500A               	movf	LED_Control@color,w,c
  4007  0006F8  A4D8               	btfss	status,2,c
  4008  0006FA  D050               	goto	l311
  4009                           
  4010                           ;LED.c: 260:     {;LED.c: 262:         if((diode & 0b0000000001)== 0b0000000001)
  4011  0006FC  A006               	btfss	LED_Control@diode,0,c
  4012  0006FE  D003               	goto	l2241
  4013                           
  4014                           ;LED.c: 263:         {;LED.c: 264:             LATD = LATD | ~0b11101111;
  4015  000700  508C               	movf	3980,w,c	;volatile
  4016  000702  0910               	iorlw	16
  4017  000704  D002               	goto	L3
  4018  000706                     l2241:
  4019                           
  4020                           ;LED.c: 267:         {;LED.c: 268:             LATD = LATD &0b11101111;
  4021  000706  508C               	movf	3980,w,c	;volatile
  4022  000708  0BEF               	andlw	239
  4023  00070A                     L3:
  4024  00070A  6E8C               	movwf	3980,c	;volatile
  4025                           
  4026                           ;LED.c: 271:         if((diode & 0b0000000010) == 0b0000000010)
  4027  00070C  A206               	btfss	LED_Control@diode,1,c
  4028  00070E  D003               	goto	l2247
  4029                           
  4030                           ;LED.c: 272:         {;LED.c: 273:             LATD = LATD | ~0b10111111;
  4031  000710  508C               	movf	3980,w,c	;volatile
  4032  000712  0940               	iorlw	64
  4033  000714  D002               	goto	L4
  4034  000716                     l2247:
  4035                           
  4036                           ;LED.c: 276:         {;LED.c: 277:             LATD = LATD & 0b10111111;
  4037  000716  508C               	movf	3980,w,c	;volatile
  4038  000718  0BBF               	andlw	191
  4039  00071A                     L4:
  4040  00071A  6E8C               	movwf	3980,c	;volatile
  4041                           
  4042                           ;LED.c: 280:         if((diode & 0b0000000100) == 0b0000000100)
  4043  00071C  A406               	btfss	LED_Control@diode,2,c
  4044  00071E  D003               	goto	l2253
  4045                           
  4046                           ;LED.c: 281:         {;LED.c: 282:             LATB = LATB | ~0b11111110;
  4047  000720  508A               	movf	3978,w,c	;volatile
  4048  000722  0901               	iorlw	1
  4049  000724  D002               	goto	L5
  4050  000726                     l2253:
  4051                           
  4052                           ;LED.c: 285:         {;LED.c: 286:             LATB = LATB & 0b11111110;
  4053  000726  508A               	movf	3978,w,c	;volatile
  4054  000728  0BFE               	andlw	254
  4055  00072A                     L5:
  4056  00072A  6E8A               	movwf	3978,c	;volatile
  4057                           
  4058                           ;LED.c: 290:         if((diode & 0b0000001000) == 0b0000001000)
  4059  00072C  A606               	btfss	LED_Control@diode,3,c
  4060  00072E  D003               	goto	l2259
  4061                           
  4062                           ;LED.c: 291:         {;LED.c: 292:             LATA = LATA | ~0b11111101;
  4063  000730  5089               	movf	3977,w,c	;volatile
  4064  000732  0902               	iorlw	2
  4065  000734  D002               	goto	L6
  4066  000736                     l2259:
  4067                           
  4068                           ;LED.c: 295:         {;LED.c: 296:             LATA = LATA & 0b11111101;
  4069  000736  5089               	movf	3977,w,c	;volatile
  4070  000738  0BFD               	andlw	253
  4071  00073A                     L6:
  4072  00073A  6E89               	movwf	3977,c	;volatile
  4073                           
  4074                           ;LED.c: 300:         if((diode & 0b0000010000) == 0b0000010000)
  4075  00073C  A806               	btfss	LED_Control@diode,4,c
  4076  00073E  D003               	goto	l2265
  4077                           
  4078                           ;LED.c: 301:         {;LED.c: 302:             LATA = LATA | ~0b11110111;
  4079  000740  5089               	movf	3977,w,c	;volatile
  4080  000742  0908               	iorlw	8
  4081  000744  D002               	goto	L7
  4082  000746                     l2265:
  4083                           
  4084                           ;LED.c: 305:         {;LED.c: 306:             LATA = LATA & 0b11110111;
  4085  000746  5089               	movf	3977,w,c	;volatile
  4086  000748  0BF7               	andlw	247
  4087  00074A                     L7:
  4088  00074A  6E89               	movwf	3977,c	;volatile
  4089                           
  4090                           ;LED.c: 310:         if((diode & 0b0000100000) == 0b0000100000)
  4091  00074C  AA06               	btfss	LED_Control@diode,5,c
  4092  00074E  D003               	goto	l2271
  4093                           
  4094                           ;LED.c: 311:         {;LED.c: 312:             LATA = LATA | ~0b11011111;
  4095  000750  5089               	movf	3977,w,c	;volatile
  4096  000752  0920               	iorlw	32
  4097  000754  D002               	goto	L8
  4098  000756                     l2271:
  4099                           
  4100                           ;LED.c: 315:         {;LED.c: 316:             LATA = LATA & 0b11011111;
  4101  000756  5089               	movf	3977,w,c	;volatile
  4102  000758  0BDF               	andlw	223
  4103  00075A                     L8:
  4104  00075A  6E89               	movwf	3977,c	;volatile
  4105                           
  4106                           ;LED.c: 319:         if((diode & 0b0001000000) == 0b0001000000)
  4107  00075C  AC06               	btfss	LED_Control@diode,6,c
  4108  00075E  D003               	goto	l2277
  4109                           
  4110                           ;LED.c: 320:         {;LED.c: 321:             LATE = LATE | ~0b11111101;
  4111  000760  508D               	movf	3981,w,c	;volatile
  4112  000762  0902               	iorlw	2
  4113  000764  D002               	goto	L9
  4114  000766                     l2277:
  4115                           
  4116                           ;LED.c: 324:         {;LED.c: 325:             LATE = LATE & 0b11111101;
  4117  000766  508D               	movf	3981,w,c	;volatile
  4118  000768  0BFD               	andlw	253
  4119  00076A                     L9:
  4120  00076A  6E8D               	movwf	3981,c	;volatile
  4121                           
  4122                           ;LED.c: 328:         if((diode & 0b0010000000) == 0b0010000000)
  4123  00076C  AE06               	btfss	LED_Control@diode,7,c
  4124  00076E  D003               	goto	l2283
  4125                           
  4126                           ;LED.c: 329:         {;LED.c: 330:             LATA = LATA | ~0b01111111;
  4127  000770  5089               	movf	3977,w,c	;volatile
  4128  000772  0980               	iorlw	128
  4129  000774  D002               	goto	L10
  4130  000776                     l2283:
  4131                           
  4132                           ;LED.c: 333:         {;LED.c: 334:             LATA = LATA & 0b01111111;
  4133  000776  5089               	movf	3977,w,c	;volatile
  4134  000778  0B7F               	andlw	127
  4135  00077A                     L10:
  4136  00077A  6E89               	movwf	3977,c	;volatile
  4137                           
  4138                           ;LED.c: 338:         if((diode & 0b0100000000) == 0b0100000000)
  4139  00077C  A007               	btfss	LED_Control@diode+1,0,c
  4140  00077E  D003               	goto	l2289
  4141                           
  4142                           ;LED.c: 339:         {;LED.c: 340:             LATD = LATD | ~0b11111110;
  4143  000780  508C               	movf	3980,w,c	;volatile
  4144  000782  0901               	iorlw	1
  4145  000784  D002               	goto	L11
  4146  000786                     l2289:
  4147                           
  4148                           ;LED.c: 343:         {;LED.c: 344:             LATD = LATD & 0b11111110;
  4149  000786  508C               	movf	3980,w,c	;volatile
  4150  000788  0BFE               	andlw	254
  4151  00078A                     L11:
  4152  00078A  6E8C               	movwf	3980,c	;volatile
  4153                           
  4154                           ;LED.c: 347:         if((diode & 0b1000000000) == 0b1000000000)
  4155  00078C  A207               	btfss	LED_Control@diode+1,1,c
  4156  00078E  D003               	goto	l2295
  4157                           
  4158                           ;LED.c: 348:         {;LED.c: 349:             LATD = LATD | ~0b11111011;
  4159  000790  508C               	movf	3980,w,c	;volatile
  4160  000792  0904               	iorlw	4
  4161  000794  D002               	goto	L12
  4162  000796                     l2295:
  4163                           
  4164                           ;LED.c: 352:         {;LED.c: 353:             LATD = LATD & 0b11111011;
  4165  000796  508C               	movf	3980,w,c	;volatile
  4166  000798  0BFB               	andlw	251
  4167  00079A                     L12:
  4168  00079A  6E8C               	movwf	3980,c	;volatile
  4169  00079C                     l311:
  4170                           
  4171                           ;LED.c: 358:     if(color == GREEN)
  4172  00079C  040A               	decf	LED_Control@color,w,c
  4173  00079E  A4D8               	btfss	status,2,c
  4174  0007A0  0012               	return	
  4175                           
  4176                           ;LED.c: 359:     {;LED.c: 361:         if((diode & 0b0000000001) == 0b0000000001)
  4177  0007A2  A006               	btfss	LED_Control@diode,0,c
  4178  0007A4  D003               	goto	l2301
  4179                           
  4180                           ;LED.c: 362:         {;LED.c: 363:             LATD = LATD | ~0b11011111;
  4181  0007A6  508C               	movf	3980,w,c	;volatile
  4182  0007A8  0920               	iorlw	32
  4183  0007AA  D002               	goto	L13
  4184  0007AC                     l2301:
  4185                           
  4186                           ;LED.c: 366:         {;LED.c: 367:             LATD = LATD & 0b11011111;
  4187  0007AC  508C               	movf	3980,w,c	;volatile
  4188  0007AE  0BDF               	andlw	223
  4189  0007B0                     L13:
  4190  0007B0  6E8C               	movwf	3980,c	;volatile
  4191                           
  4192                           ;LED.c: 371:         if((diode & 0b0000000010) == 0b0000000010)
  4193  0007B2  A206               	btfss	LED_Control@diode,1,c
  4194  0007B4  D003               	goto	l2307
  4195                           
  4196                           ;LED.c: 372:         {;LED.c: 373:             LATD = LATD | ~0b01111111;
  4197  0007B6  508C               	movf	3980,w,c	;volatile
  4198  0007B8  0980               	iorlw	128
  4199  0007BA  D002               	goto	L14
  4200  0007BC                     l2307:
  4201                           
  4202                           ;LED.c: 376:         {;LED.c: 377:             LATD = LATD & 0b01111111;
  4203  0007BC  508C               	movf	3980,w,c	;volatile
  4204  0007BE  0B7F               	andlw	127
  4205  0007C0                     L14:
  4206  0007C0  6E8C               	movwf	3980,c	;volatile
  4207                           
  4208                           ;LED.c: 381:         if((diode & 0b0000000100) == 0b0000000100)
  4209  0007C2  A406               	btfss	LED_Control@diode,2,c
  4210  0007C4  D003               	goto	l2313
  4211                           
  4212                           ;LED.c: 382:         {;LED.c: 383:             LATB = LATB | ~0b11111101;
  4213  0007C6  508A               	movf	3978,w,c	;volatile
  4214  0007C8  0902               	iorlw	2
  4215  0007CA  D002               	goto	L15
  4216  0007CC                     l2313:
  4217                           
  4218                           ;LED.c: 386:         {;LED.c: 387:             LATB = LATB & 0b11111101;
  4219  0007CC  508A               	movf	3978,w,c	;volatile
  4220  0007CE  0BFD               	andlw	253
  4221  0007D0                     L15:
  4222  0007D0  6E8A               	movwf	3978,c	;volatile
  4223                           
  4224                           ;LED.c: 390:         if((diode & 0b0000001000) == 0b0000001000)
  4225  0007D2  A606               	btfss	LED_Control@diode,3,c
  4226  0007D4  D003               	goto	l2319
  4227                           
  4228                           ;LED.c: 391:         {;LED.c: 392:             LATA = LATA | ~0b11111011;
  4229  0007D6  5089               	movf	3977,w,c	;volatile
  4230  0007D8  0904               	iorlw	4
  4231  0007DA  D002               	goto	L16
  4232  0007DC                     l2319:
  4233                           
  4234                           ;LED.c: 395:         {;LED.c: 396:             LATA = LATA & 0b11111011;
  4235  0007DC  5089               	movf	3977,w,c	;volatile
  4236  0007DE  0BFB               	andlw	251
  4237  0007E0                     L16:
  4238  0007E0  6E89               	movwf	3977,c	;volatile
  4239                           
  4240                           ;LED.c: 400:         if((diode & 0b0000010000) == 0b0000010000)
  4241  0007E2  A806               	btfss	LED_Control@diode,4,c
  4242  0007E4  D003               	goto	l2325
  4243                           
  4244                           ;LED.c: 401:         {;LED.c: 402:             LATA = LATA | ~0b11101111;
  4245  0007E6  5089               	movf	3977,w,c	;volatile
  4246  0007E8  0910               	iorlw	16
  4247  0007EA  D002               	goto	L17
  4248  0007EC                     l2325:
  4249                           
  4250                           ;LED.c: 405:         {;LED.c: 406:             LATA = LATA & 0b11101111;
  4251  0007EC  5089               	movf	3977,w,c	;volatile
  4252  0007EE  0BEF               	andlw	239
  4253  0007F0                     L17:
  4254  0007F0  6E89               	movwf	3977,c	;volatile
  4255                           
  4256                           ;LED.c: 410:         if((diode & 0b0000100000) == 0b0000100000)
  4257  0007F2  AA06               	btfss	LED_Control@diode,5,c
  4258  0007F4  D003               	goto	l2331
  4259                           
  4260                           ;LED.c: 411:         {;LED.c: 412:             LATE = LATE | ~0b11111110;
  4261  0007F6  508D               	movf	3981,w,c	;volatile
  4262  0007F8  0901               	iorlw	1
  4263  0007FA  D002               	goto	L18
  4264  0007FC                     l2331:
  4265                           
  4266                           ;LED.c: 415:         {;LED.c: 416:             LATE = LATE & 0b11111110;
  4267  0007FC  508D               	movf	3981,w,c	;volatile
  4268  0007FE  0BFE               	andlw	254
  4269  000800                     L18:
  4270  000800  6E8D               	movwf	3981,c	;volatile
  4271                           
  4272                           ;LED.c: 420:         if((diode & 0b0001000000) == 0b0001000000)
  4273  000802  AC06               	btfss	LED_Control@diode,6,c
  4274  000804  D003               	goto	l2337
  4275                           
  4276                           ;LED.c: 421:         {;LED.c: 422:             LATE = LATE | ~0b11111011;
  4277  000806  508D               	movf	3981,w,c	;volatile
  4278  000808  0904               	iorlw	4
  4279  00080A  D002               	goto	L19
  4280  00080C                     l2337:
  4281                           
  4282                           ;LED.c: 425:         {;LED.c: 426:             LATE = LATE & 0b11111011;
  4283  00080C  508D               	movf	3981,w,c	;volatile
  4284  00080E  0BFB               	andlw	251
  4285  000810                     L19:
  4286  000810  6E8D               	movwf	3981,c	;volatile
  4287                           
  4288                           ;LED.c: 429:         if((diode & 0b0010000000) == 0b0010000000)
  4289  000812  AE06               	btfss	LED_Control@diode,7,c
  4290  000814  D003               	goto	l2343
  4291                           
  4292                           ;LED.c: 430:         {;LED.c: 431:             LATA = LATA | ~0b10111111;
  4293  000816  5089               	movf	3977,w,c	;volatile
  4294  000818  0940               	iorlw	64
  4295  00081A  D002               	goto	L20
  4296  00081C                     l2343:
  4297                           
  4298                           ;LED.c: 434:         {;LED.c: 435:             LATA = LATA & 0b10111111;
  4299  00081C  5089               	movf	3977,w,c	;volatile
  4300  00081E  0BBF               	andlw	191
  4301  000820                     L20:
  4302  000820  6E89               	movwf	3977,c	;volatile
  4303                           
  4304                           ;LED.c: 438:         if((diode & 0b0100000000) == 0b0100000000)
  4305  000822  A007               	btfss	LED_Control@diode+1,0,c
  4306  000824  D003               	goto	l2349
  4307                           
  4308                           ;LED.c: 439:         {;LED.c: 440:             LATD = LATD | ~0b11111101;
  4309  000826  508C               	movf	3980,w,c	;volatile
  4310  000828  0902               	iorlw	2
  4311  00082A  D002               	goto	L21
  4312  00082C                     l2349:
  4313                           
  4314                           ;LED.c: 443:         {;LED.c: 444:             LATD = LATD & 0b11111101;
  4315  00082C  508C               	movf	3980,w,c	;volatile
  4316  00082E  0BFD               	andlw	253
  4317  000830                     L21:
  4318  000830  6E8C               	movwf	3980,c	;volatile
  4319                           
  4320                           ;LED.c: 447:         if((diode & 0b1000000000) == 0b1000000000)
  4321  000832  A207               	btfss	LED_Control@diode+1,1,c
  4322  000834  D004               	goto	l2355
  4323                           
  4324                           ;LED.c: 448:         {;LED.c: 449:             LATD = LATD | ~0b11110111;
  4325  000836  508C               	movf	3980,w,c	;volatile
  4326  000838  0908               	iorlw	8
  4327  00083A  6E8C               	movwf	3980,c	;volatile
  4328                           
  4329                           ;LED.c: 450:         }
  4330  00083C  0012               	return	
  4331  00083E                     l2355:
  4332                           
  4333                           ;LED.c: 452:         {;LED.c: 453:             LATD = LATD &0b11110111;
  4334  00083E  508C               	movf	3980,w,c	;volatile
  4335  000840  0BF7               	andlw	247
  4336  000842  6E8C               	movwf	3980,c	;volatile
  4337  000844  0012               	return		;funcret
  4338  000846                     __end_of_LED_Control:
  4339                           	opt callstack 0
  4340                           
  4341 ;; *************** function _INI_GlobalInterrupt *****************
  4342 ;; Defined at:
  4343 ;;		line 74 in file "INI.c"
  4344 ;; Parameters:    Size  Location     Type
  4345 ;;		None
  4346 ;; Auto vars:     Size  Location     Type
  4347 ;;		None
  4348 ;; Return value:  Size  Location     Type
  4349 ;;                  1    wreg      void 
  4350 ;; Registers used:
  4351 ;;		None
  4352 ;; Tracked objects:
  4353 ;;		On entry : 0/0
  4354 ;;		On exit  : 0/0
  4355 ;;		Unchanged: 0/0
  4356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4361 ;;Total ram usage:        0 bytes
  4362 ;; Hardware stack levels used:    1
  4363 ;; Hardware stack levels required when called:    3
  4364 ;; This function calls:
  4365 ;;		Nothing
  4366 ;; This function is called by:
  4367 ;;		_INI_All
  4368 ;; This function uses a non-reentrant model
  4369 ;;
  4370                           
  4371                           	psect	text31
  4372  00107E                     __ptext31:
  4373                           	opt callstack 0
  4374  00107E                     _INI_GlobalInterrupt:
  4375                           	opt callstack 26
  4376                           
  4377                           ;INI.c: 76: INTCONbits.GIEH=1;
  4378                           
  4379                           ;incstack = 0
  4380  00107E  8EF2               	bsf	4082,7,c	;volatile
  4381                           
  4382                           ;INI.c: 77: INTCONbits.GIEL=1;
  4383  001080  8CF2               	bsf	4082,6,c	;volatile
  4384                           
  4385                           ;INI.c: 78: RCONbits.IPEN=1;
  4386  001082  8ED0               	bsf	4048,7,c	;volatile
  4387                           
  4388                           ;INI.c: 79: IPEN =1;
  4389  001084  8ED0               	bsf	4048,7,c	;volatile
  4390                           
  4391                           ;INI.c: 81: PEIE=1;
  4392  001086  8CF2               	bsf	4082,6,c	;volatile
  4393                           
  4394                           ;INI.c: 82: TMR1IP = 0;
  4395  001088  909F               	bcf	3999,0,c	;volatile
  4396  00108A  0012               	return		;funcret
  4397  00108C                     __end_of_INI_GlobalInterrupt:
  4398                           	opt callstack 0
  4399                           
  4400 ;; *************** function _CAN_Setup *****************
  4401 ;; Defined at:
  4402 ;;		line 22 in file "CAN.c"
  4403 ;; Parameters:    Size  Location     Type
  4404 ;;		None
  4405 ;; Auto vars:     Size  Location     Type
  4406 ;;		None
  4407 ;; Return value:  Size  Location     Type
  4408 ;;                  1    wreg      void 
  4409 ;; Registers used:
  4410 ;;		wreg, status,2, status,0, cstack
  4411 ;; Tracked objects:
  4412 ;;		On entry : 0/0
  4413 ;;		On exit  : 0/0
  4414 ;;		Unchanged: 0/0
  4415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4418 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4419 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4420 ;;Total ram usage:        1 bytes
  4421 ;; Hardware stack levels used:    1
  4422 ;; Hardware stack levels required when called:    4
  4423 ;; This function calls:
  4424 ;;		_CAN_SetupClock
  4425 ;;		_CAN_SetupMask
  4426 ;; This function is called by:
  4427 ;;		_INI_All
  4428 ;; This function uses a non-reentrant model
  4429 ;;
  4430                           
  4431                           	psect	text32
  4432  000D06                     __ptext32:
  4433                           	opt callstack 0
  4434  000D06                     _CAN_Setup:
  4435                           	opt callstack 25
  4436                           
  4437                           ;CAN.c: 27:     CANCON = 0x80;
  4438                           
  4439                           ;incstack = 0
  4440  000D06  0E80               	movlw	128
  4441  000D08  6E6F               	movwf	3951,c	;volatile
  4442  000D0A                     l2671:
  4443                           
  4444                           ;CAN.c: 28:     while((CANSTAT & 0xE0)!=0x80)
  4445  000D0A  506E               	movf	3950,w,c	;volatile
  4446  000D0C  0BE0               	andlw	224
  4447  000D0E  0A80               	xorlw	128
  4448  000D10  A4D8               	btfss	status,2,c
  4449  000D12  D7FB               	goto	l2671
  4450                           
  4451                           ;CAN.c: 33:     BSEL0 = 0;
  4452  000D14  0E00               	movlw	0
  4453  000D16  010D               	movlb	13	; () banked
  4454  000D18  6FF8               	movwf	248,b	;volatile
  4455                           
  4456                           ;CAN.c: 34:     TXB0CON = 0;
  4457  000D1A  0E00               	movlw	0
  4458  000D1C  010F               	movlb	15	; () banked
  4459  000D1E  6F40               	movwf	64,b	;volatile
  4460                           
  4461                           ;CAN.c: 35:     RXB0CON = 0;
  4462  000D20  0E00               	movlw	0
  4463  000D22  6E60               	movwf	3936,c	;volatile
  4464                           
  4465                           ;CAN.c: 36:     RXB1CON = 0;
  4466  000D24  0E00               	movlw	0
  4467  000D26  6F50               	movwf	80,b	;volatile
  4468                           
  4469                           ;CAN.c: 37:     B0CON = 0;
  4470  000D28  0E00               	movlw	0
  4471  000D2A  010E               	movlb	14	; () banked
  4472  000D2C  6F20               	movwf	32,b	;volatile
  4473                           
  4474                           ;CAN.c: 38:     B1CON = 0;
  4475  000D2E  0E00               	movlw	0
  4476  000D30  6F30               	movwf	48,b	;volatile
  4477                           
  4478                           ;CAN.c: 39:     PIE3 = 0;
  4479  000D32  0E00               	movlw	0
  4480  000D34  6EA3               	movwf	4003,c	;volatile
  4481                           
  4482                           ; BSR set to: 14
  4483                           ;CAN.c: 40:     IPR3 = 0xFF;
  4484  000D36  68A5               	setf	4005,c	;volatile
  4485                           
  4486                           ;CAN.c: 41:     PIR3 = 0x00;
  4487  000D38  0E00               	movlw	0
  4488  000D3A  6EA4               	movwf	4004,c	;volatile
  4489                           
  4490                           ;CAN.c: 42:     BIE0 = 0;
  4491  000D3C  0E00               	movlw	0
  4492  000D3E  010D               	movlb	13	; () banked
  4493  000D40  6FFA               	movwf	250,b	;volatile
  4494                           
  4495                           ;CAN.c: 45:     ECANCON = 0x90;
  4496  000D42  0E90               	movlw	144
  4497  000D44  6E77               	movwf	3959,c	;volatile
  4498                           
  4499                           ; BSR set to: 13
  4500                           ;CAN.c: 48:     CAN_SetupClock();
  4501  000D46  ECB9  F007         	call	_CAN_SetupClock	;wreg free
  4502                           
  4503                           ;CAN.c: 51:     CAN_SetupMask();
  4504  000D4A  EC51  F006         	call	_CAN_SetupMask	;wreg free
  4505                           
  4506                           ;CAN.c: 53:     CIOCON = 0xff;
  4507  000D4E  6873               	setf	3955,c	;volatile
  4508                           
  4509                           ;CAN.c: 59:     CANCON = 0x00;
  4510  000D50  0E00               	movlw	0
  4511  000D52  6E6F               	movwf	3951,c	;volatile
  4512  000D54                     l2685:
  4513                           
  4514                           ;CAN.c: 60:     while((CANSTAT & 0xE0) != 0x00)
  4515  000D54  CF6E F006          	movff	3950,??_CAN_Setup	;volatile
  4516  000D58  0EE0               	movlw	224
  4517  000D5A  1606               	andwf	??_CAN_Setup,f,c
  4518  000D5C  B4D8               	btfsc	status,2,c
  4519  000D5E  0012               	return	
  4520  000D60  D7F9               	goto	l2685
  4521  000D62                     __end_of_CAN_Setup:
  4522                           	opt callstack 0
  4523                           
  4524 ;; *************** function _CAN_SetupMask *****************
  4525 ;; Defined at:
  4526 ;;		line 81 in file "CAN.c"
  4527 ;; Parameters:    Size  Location     Type
  4528 ;;		None
  4529 ;; Auto vars:     Size  Location     Type
  4530 ;;		None
  4531 ;; Return value:  Size  Location     Type
  4532 ;;                  1    wreg      void 
  4533 ;; Registers used:
  4534 ;;		wreg, status,2, status,0
  4535 ;; Tracked objects:
  4536 ;;		On entry : 0/0
  4537 ;;		On exit  : 0/0
  4538 ;;		Unchanged: 0/0
  4539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4544 ;;Total ram usage:        0 bytes
  4545 ;; Hardware stack levels used:    1
  4546 ;; Hardware stack levels required when called:    3
  4547 ;; This function calls:
  4548 ;;		Nothing
  4549 ;; This function is called by:
  4550 ;;		_CAN_Setup
  4551 ;; This function uses a non-reentrant model
  4552 ;;
  4553                           
  4554                           	psect	text33
  4555  000CA2                     __ptext33:
  4556                           	opt callstack 0
  4557  000CA2                     _CAN_SetupMask:
  4558                           	opt callstack 25
  4559                           
  4560                           ;CAN.c: 83:     MSEL0 = 0x50;
  4561                           
  4562                           ;incstack = 0
  4563  000CA2  0E50               	movlw	80
  4564  000CA4  010D               	movlb	13	; () banked
  4565  000CA6  6FF0               	movwf	240,b	;volatile
  4566                           
  4567                           ;CAN.c: 84:     MSEL1 = 0x55;
  4568  000CA8  0E55               	movlw	85
  4569  000CAA  6FF1               	movwf	241,b	;volatile
  4570                           
  4571                           ;CAN.c: 85:     MSEL2 = 0x55;
  4572  000CAC  0E55               	movlw	85
  4573  000CAE  6FF2               	movwf	242,b	;volatile
  4574                           
  4575                           ;CAN.c: 86:     MSEL3 = 0x55;
  4576  000CB0  0E55               	movlw	85
  4577  000CB2  6FF3               	movwf	243,b	;volatile
  4578                           
  4579                           ;CAN.c: 89:     RXM0SIDH = 0b00000000;
  4580  000CB4  0E00               	movlw	0
  4581  000CB6  010F               	movlb	15	; () banked
  4582  000CB8  6F18               	movwf	24,b	;volatile
  4583                           
  4584                           ;CAN.c: 90:     RXM0SIDL = 0b00001011;
  4585  000CBA  0E0B               	movlw	11
  4586  000CBC  6F19               	movwf	25,b	;volatile
  4587                           
  4588                           ; BSR set to: 15
  4589                           ;CAN.c: 91:     RXM0EIDH = 0xFF;
  4590  000CBE  691A               	setf	26,b	;volatile
  4591                           
  4592                           ; BSR set to: 15
  4593                           ;CAN.c: 92:     RXM0EIDL = 0xFF;
  4594  000CC0  691B               	setf	27,b	;volatile
  4595                           
  4596                           ; BSR set to: 15
  4597                           ;CAN.c: 95:     RXM1SIDH = 0xFF;
  4598  000CC2  691C               	setf	28,b	;volatile
  4599                           
  4600                           ; BSR set to: 15
  4601                           ;CAN.c: 96:     RXM1SIDL = 0xFF;
  4602  000CC4  691D               	setf	29,b	;volatile
  4603                           
  4604                           ;CAN.c: 97:     RXM1EIDH = 0;
  4605  000CC6  0E00               	movlw	0
  4606  000CC8  6F1E               	movwf	30,b	;volatile
  4607                           
  4608                           ;CAN.c: 98:     RXM1EIDL = 0;
  4609  000CCA  0E00               	movlw	0
  4610  000CCC  6F1F               	movwf	31,b	;volatile
  4611                           
  4612                           ;CAN.c: 101:     RXF0SIDH = 0x00;
  4613  000CCE  0E00               	movlw	0
  4614  000CD0  6F00               	movwf	0,b	;volatile
  4615                           
  4616                           ;CAN.c: 102:     RXF0SIDL = 0x01;
  4617  000CD2  0E01               	movlw	1
  4618  000CD4  6F01               	movwf	1,b	;volatile
  4619                           
  4620                           ; BSR set to: 15
  4621                           ;CAN.c: 103:     RXF0SIDLbits.EXIDEN = 1;
  4622  000CD6  8701               	bsf	1,3,b	;volatile
  4623                           
  4624                           ;CAN.c: 104:     RXF0EIDH = (BYTE)(DaneCan.adresCAN>>8);
  4625  000CD8  5043               	movf	_DaneCan+3,w,c
  4626  000CDA  6F02               	movwf	2,b	;volatile
  4627                           
  4628                           ; BSR set to: 15
  4629                           ;CAN.c: 105:  RXF0EIDH |= 0x40;
  4630  000CDC  8D02               	bsf	2,6,b	;volatile
  4631                           
  4632                           ; BSR set to: 15
  4633                           ;CAN.c: 106:     RXF0EIDL = (BYTE)DaneCan.adresCAN;
  4634  000CDE  C042  FF03         	movff	_DaneCan+2,3843	;volatile
  4635                           
  4636                           ; BSR set to: 15
  4637                           ;CAN.c: 108:     RXF1SIDH = 0x00;
  4638  000CE2  0E00               	movlw	0
  4639  000CE4  6F04               	movwf	4,b	;volatile
  4640                           
  4641                           ; BSR set to: 15
  4642                           ;CAN.c: 109:     RXF1SIDL = 0x01;
  4643  000CE6  0E01               	movlw	1
  4644  000CE8  6F05               	movwf	5,b	;volatile
  4645                           
  4646                           ; BSR set to: 15
  4647                           ;CAN.c: 110:     RXF1SIDLbits.EXIDEN = 1;
  4648  000CEA  8705               	bsf	5,3,b	;volatile
  4649                           
  4650                           ; BSR set to: 15
  4651                           ;CAN.c: 111:     RXF1EIDH = 0x7F;
  4652  000CEC  0E7F               	movlw	127
  4653  000CEE  6F06               	movwf	6,b	;volatile
  4654                           
  4655                           ; BSR set to: 15
  4656                           ;CAN.c: 112:     RXF1EIDL = 0xFF;
  4657  000CF0  6907               	setf	7,b	;volatile
  4658                           
  4659                           ; BSR set to: 15
  4660                           ;CAN.c: 115:     RXF2SIDH = 0;
  4661  000CF2  0E00               	movlw	0
  4662  000CF4  6F08               	movwf	8,b	;volatile
  4663                           
  4664                           ; BSR set to: 15
  4665                           ;CAN.c: 116:     RXF2SIDL = 0x20;
  4666  000CF6  0E20               	movlw	32
  4667  000CF8  6F09               	movwf	9,b	;volatile
  4668                           
  4669                           ; BSR set to: 15
  4670                           ;CAN.c: 117:     RXF2SIDLbits.EXIDEN = 1;
  4671  000CFA  8709               	bsf	9,3,b	;volatile
  4672                           
  4673                           ; BSR set to: 15
  4674                           ;CAN.c: 118:     RXF2EIDH = 0;
  4675  000CFC  0E00               	movlw	0
  4676  000CFE  6F0A               	movwf	10,b	;volatile
  4677                           
  4678                           ; BSR set to: 15
  4679                           ;CAN.c: 119:     RXF2EIDL = 0;
  4680  000D00  0E00               	movlw	0
  4681  000D02  6F0B               	movwf	11,b	;volatile
  4682                           
  4683                           ; BSR set to: 15
  4684  000D04  0012               	return		;funcret
  4685  000D06                     __end_of_CAN_SetupMask:
  4686                           	opt callstack 0
  4687                           
  4688 ;; *************** function _CAN_SetupClock *****************
  4689 ;; Defined at:
  4690 ;;		line 136 in file "CAN.c"
  4691 ;; Parameters:    Size  Location     Type
  4692 ;;		None
  4693 ;; Auto vars:     Size  Location     Type
  4694 ;;		None
  4695 ;; Return value:  Size  Location     Type
  4696 ;;                  1    wreg      void 
  4697 ;; Registers used:
  4698 ;;		None
  4699 ;; Tracked objects:
  4700 ;;		On entry : 0/0
  4701 ;;		On exit  : 0/0
  4702 ;;		Unchanged: 0/0
  4703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4707 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4708 ;;Total ram usage:        0 bytes
  4709 ;; Hardware stack levels used:    1
  4710 ;; Hardware stack levels required when called:    3
  4711 ;; This function calls:
  4712 ;;		Nothing
  4713 ;; This function is called by:
  4714 ;;		_CAN_Setup
  4715 ;; This function uses a non-reentrant model
  4716 ;;
  4717                           
  4718                           	psect	text34
  4719  000F72                     __ptext34:
  4720                           	opt callstack 0
  4721  000F72                     _CAN_SetupClock:
  4722                           	opt callstack 25
  4723                           
  4724                           ;CAN.c: 138:     BRGCON1bits.BRP0 = (((32000000/4)/(2*20*50000))-1) & 0b000001;
  4725                           
  4726                           ; BSR set to: 15
  4727                           ;incstack = 0
  4728  000F72  8070               	bsf	3952,0,c	;volatile
  4729                           
  4730                           ;CAN.c: 139:     BRGCON1bits.BRP1 = ((((32000000/4)/(2*20*50000))-1) >> 1) & 0b000001;
  4731  000F74  8270               	bsf	3952,1,c	;volatile
  4732                           
  4733                           ;CAN.c: 140:     BRGCON1bits.BRP2 = ((((32000000/4)/(2*20*50000))-1) >> 2) & 0b000001;
  4734  000F76  9470               	bcf	3952,2,c	;volatile
  4735                           
  4736                           ;CAN.c: 141:     BRGCON1bits.BRP3 = ((((32000000/4)/(2*20*50000))-1) >> 3) & 0b000001;
  4737  000F78  9670               	bcf	3952,3,c	;volatile
  4738                           
  4739                           ;CAN.c: 142:     BRGCON1bits.BRP4 = ((((32000000/4)/(2*20*50000))-1) >> 4) & 0b000001;
  4740  000F7A  9870               	bcf	3952,4,c	;volatile
  4741                           
  4742                           ;CAN.c: 143:     BRGCON1bits.BRP5 = ((((32000000/4)/(2*20*50000))-1) >> 5) & 0b000001;
  4743  000F7C  9A70               	bcf	3952,5,c	;volatile
  4744                           
  4745                           ;CAN.c: 145:     BRGCON1bits.SJW0 = 1;
  4746  000F7E  8C70               	bsf	3952,6,c	;volatile
  4747                           
  4748                           ;CAN.c: 146:     BRGCON1bits.SJW1 = 1;
  4749  000F80  8E70               	bsf	3952,7,c	;volatile
  4750                           
  4751                           ;CAN.c: 148:     BRGCON2bits.SEG1PH0 = 1;
  4752  000F82  8671               	bsf	3953,3,c	;volatile
  4753                           
  4754                           ;CAN.c: 149:     BRGCON2bits.SEG1PH1 = 1;
  4755  000F84  8871               	bsf	3953,4,c	;volatile
  4756                           
  4757                           ;CAN.c: 150:     BRGCON2bits.SEG1PH2 = 1;
  4758  000F86  8A71               	bsf	3953,5,c	;volatile
  4759                           
  4760                           ;CAN.c: 152:     BRGCON2bits.PRSEG2 = 1;
  4761  000F88  8471               	bsf	3953,2,c	;volatile
  4762                           
  4763                           ;CAN.c: 153:     BRGCON2bits.PRSEG1 = 0;
  4764  000F8A  9271               	bcf	3953,1,c	;volatile
  4765                           
  4766                           ;CAN.c: 154:     BRGCON2bits.PRSEG0 = 0;
  4767  000F8C  9071               	bcf	3953,0,c	;volatile
  4768                           
  4769                           ;CAN.c: 156:     BRGCON3bits.SEG2PH0 = 1;
  4770  000F8E  8072               	bsf	3954,0,c	;volatile
  4771                           
  4772                           ;CAN.c: 157:     BRGCON3bits.SEG2PH1 = 0;
  4773  000F90  9272               	bcf	3954,1,c	;volatile
  4774                           
  4775                           ;CAN.c: 158:     BRGCON3bits.SEG2PH2 = 1;
  4776  000F92  8472               	bsf	3954,2,c	;volatile
  4777                           
  4778                           ;CAN.c: 160:     BRGCON2bits.SAM = 1;
  4779  000F94  8C71               	bsf	3953,6,c	;volatile
  4780                           
  4781                           ;CAN.c: 161:     BRGCON2bits.SEG2PHTS = 1;
  4782  000F96  8E71               	bsf	3953,7,c	;volatile
  4783  000F98  0012               	return		;funcret
  4784  000F9A                     __end_of_CAN_SetupClock:
  4785                           	opt callstack 0
  4786                           
  4787 ;; *************** function _ISR_low *****************
  4788 ;; Defined at:
  4789 ;;		line 16 in file "ISR.c"
  4790 ;; Parameters:    Size  Location     Type
  4791 ;;		None
  4792 ;; Auto vars:     Size  Location     Type
  4793 ;;		None
  4794 ;; Return value:  Size  Location     Type
  4795 ;;                  1    wreg      void 
  4796 ;; Registers used:
  4797 ;;		wreg, status,2, status,0, cstack
  4798 ;; Tracked objects:
  4799 ;;		On entry : 0/0
  4800 ;;		On exit  : 0/0
  4801 ;;		Unchanged: 0/0
  4802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4805 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4806 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4807 ;;Total ram usage:        3 bytes
  4808 ;; Hardware stack levels used:    1
  4809 ;; Hardware stack levels required when called:    2
  4810 ;; This function calls:
  4811 ;;		_TMR1_Timer_reset
  4812 ;;		i1_TMR1_Update_flag_Set
  4813 ;; This function is called by:
  4814 ;;		Interrupt level 1
  4815 ;; This function uses a non-reentrant model
  4816 ;;
  4817                           
  4818                           	psect	intcodelo
  4819  000018                     __pintcodelo:
  4820                           	opt callstack 0
  4821  000018                     _ISR_low:
  4822                           	opt callstack 23
  4823                           
  4824                           ;incstack = 0
  4825  000018  8059               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  4826  00001A  CFD8 F003          	movff	status,??_ISR_low
  4827  00001E  CFE8 F004          	movff	wreg,??_ISR_low+1
  4828  000022  CFE0 F005          	movff	bsr,??_ISR_low+2
  4829                           
  4830                           ;ISR.c: 21:     if(TMR1IF==1)
  4831  000026  A09E               	btfss	3998,0,c	;volatile
  4832  000028  D011               	goto	i1l587
  4833                           
  4834                           ;ISR.c: 22:         {;ISR.c: 23:             TMR1_Timer_reset();
  4835  00002A  ECE0  F007         	call	_TMR1_Timer_reset	;wreg free
  4836                           
  4837                           ;ISR.c: 26:             static BYTE ramkaStanuU8=0;;ISR.c: 29:             TMR1_Update_f
      +                          lag_Set(1);
  4838  00002E  0E00               	movlw	0
  4839  000030  6E02               	movwf	i1TMR1_Update_flag_Set@a+1,c
  4840  000032  0E01               	movlw	1
  4841  000034  6E01               	movwf	i1TMR1_Update_flag_Set@a,c
  4842  000036  EC5A  F008         	call	i1_TMR1_Update_flag_Set	;wreg free
  4843                           
  4844                           ;ISR.c: 31:             DetectorLedRadar.Flags.obsluzWeWy = 1;
  4845  00003A  8044               	bsf	_DetectorLedRadar,0,c
  4846                           
  4847                           ;ISR.c: 33:             if(++ramkaStanuU8 > (2*10))
  4848  00003C  2A4D               	incf	ISR_low@ramkaStanuU8,f,c
  4849  00003E  0E14               	movlw	20
  4850  000040  644D               	cpfsgt	ISR_low@ramkaStanuU8,c
  4851  000042  D003               	goto	i1l2953
  4852                           
  4853                           ;ISR.c: 34:                 {;ISR.c: 35:                     ramkaStanuU8 = 0;
  4854  000044  0E00               	movlw	0
  4855  000046  6E4D               	movwf	ISR_low@ramkaStanuU8,c
  4856                           
  4857                           ;ISR.c: 36:                     DaneCan.Flags.wyslijRamkeStanu = 1;
  4858  000048  8040               	bsf	_DaneCan,0,c
  4859  00004A                     i1l2953:
  4860                           
  4861                           ;ISR.c: 41:             TMR1IF=0;
  4862  00004A  909E               	bcf	3998,0,c	;volatile
  4863  00004C                     i1l587:
  4864  00004C  C005  FFE0         	movff	??_ISR_low+2,bsr
  4865  000050  C004  FFE8         	movff	??_ISR_low+1,wreg
  4866  000054  C003  FFD8         	movff	??_ISR_low,status
  4867  000058  9059               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  4868  00005A  0010               	retfie	
  4869  00005C                     __end_of_ISR_low:
  4870                           	opt callstack 0
  4871                           
  4872 ;; *************** function i1_TMR1_Update_flag_Set *****************
  4873 ;; Defined at:
  4874 ;;		line 32 in file "TMR1.c"
  4875 ;; Parameters:    Size  Location     Type
  4876 ;;  a               2    0[COMRAM] unsigned int 
  4877 ;; Auto vars:     Size  Location     Type
  4878 ;;		None
  4879 ;; Return value:  Size  Location     Type
  4880 ;;                  1    wreg      void 
  4881 ;; Registers used:
  4882 ;;		None
  4883 ;; Tracked objects:
  4884 ;;		On entry : 0/0
  4885 ;;		On exit  : 0/0
  4886 ;;		Unchanged: 0/0
  4887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4888 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4891 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4892 ;;Total ram usage:        2 bytes
  4893 ;; Hardware stack levels used:    1
  4894 ;; Hardware stack levels required when called:    1
  4895 ;; This function calls:
  4896 ;;		Nothing
  4897 ;; This function is called by:
  4898 ;;		_ISR_low
  4899 ;; This function uses a non-reentrant model
  4900 ;;
  4901                           
  4902                           	psect	text36
  4903  0010B4                     __ptext36:
  4904                           	opt callstack 0
  4905  0010B4                     i1_TMR1_Update_flag_Set:
  4906                           	opt callstack 23
  4907                           
  4908                           ;TMR1.c: 32: void TMR1_Update_flag_Set(UINT a);TMR1.c: 33: {;TMR1.c: 34:     TMR1_Update
      +                          _flag = a;
  4909                           
  4910                           ;incstack = 0
  4911  0010B4  C001  F047         	movff	i1TMR1_Update_flag_Set@a,_TMR1_Update_flag
  4912  0010B8  C002  F048         	movff	i1TMR1_Update_flag_Set@a+1,_TMR1_Update_flag+1
  4913  0010BC  0012               	return		;funcret
  4914  0010BE                     __end_ofi1_TMR1_Update_flag_Set:
  4915                           	opt callstack 0
  4916                           
  4917 ;; *************** function _TMR1_Timer_reset *****************
  4918 ;; Defined at:
  4919 ;;		line 63 in file "TMR1.c"
  4920 ;; Parameters:    Size  Location     Type
  4921 ;;		None
  4922 ;; Auto vars:     Size  Location     Type
  4923 ;;  t1H             1    1[COMRAM] volatile unsigned char 
  4924 ;;  t1L             1    0[COMRAM] volatile unsigned char 
  4925 ;; Return value:  Size  Location     Type
  4926 ;;                  1    wreg      unsigned char 
  4927 ;; Registers used:
  4928 ;;		wreg, status,2, status,0
  4929 ;; Tracked objects:
  4930 ;;		On entry : 0/0
  4931 ;;		On exit  : 0/0
  4932 ;;		Unchanged: 0/0
  4933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4935 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4937 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4938 ;;Total ram usage:        2 bytes
  4939 ;; Hardware stack levels used:    1
  4940 ;; Hardware stack levels required when called:    1
  4941 ;; This function calls:
  4942 ;;		Nothing
  4943 ;; This function is called by:
  4944 ;;		_ISR_low
  4945 ;; This function uses a non-reentrant model
  4946 ;;
  4947                           
  4948                           	psect	text37
  4949  000FC0                     __ptext37:
  4950                           	opt callstack 0
  4951  000FC0                     _TMR1_Timer_reset:
  4952                           	opt callstack 23
  4953                           
  4954                           ;TMR1.c: 69:     volatile BYTE t1L = 0, t1H = 0;
  4955                           
  4956                           ;incstack = 0
  4957  000FC0  0E00               	movlw	0
  4958  000FC2  6E01               	movwf	TMR1_Timer_reset@t1L,c	;volatile
  4959  000FC4  0E00               	movlw	0
  4960  000FC6  6E02               	movwf	TMR1_Timer_reset@t1H,c	;volatile
  4961                           
  4962                           ;TMR1.c: 70:     t1L = TMR1L;
  4963  000FC8  CFCE F001          	movff	4046,TMR1_Timer_reset@t1L	;volatile
  4964                           
  4965                           ;TMR1.c: 71:     t1H = TMR1H;
  4966  000FCC  CFCF F002          	movff	4047,TMR1_Timer_reset@t1H	;volatile
  4967                           
  4968                           ;TMR1.c: 72:     __nop();
  4969  000FD0  F000               	nop	
  4970                           
  4971                           ;TMR1.c: 73:     t1H += (UINT8)((0xFFFF - (((8000000/8)/4)/10)) >> 8);
  4972  000FD2  0E9E               	movlw	158
  4973  000FD4  2602               	addwf	TMR1_Timer_reset@t1H,f,c	;volatile
  4974                           
  4975                           ;TMR1.c: 74:     t1L += (UINT8)((0xFFFF - (((8000000/8)/4)/10)) & 0xFF);
  4976  000FD6  0E57               	movlw	87
  4977  000FD8  2601               	addwf	TMR1_Timer_reset@t1L,f,c	;volatile
  4978                           
  4979                           ;TMR1.c: 75:     TMR1H = t1H;
  4980  000FDA  C002  FFCF         	movff	TMR1_Timer_reset@t1H,4047	;volatile
  4981                           
  4982                           ;TMR1.c: 76:     TMR1L = 0x5B;
  4983  000FDE  0E5B               	movlw	91
  4984  000FE0  6ECE               	movwf	4046,c	;volatile
  4985  000FE2  0012               	return		;funcret
  4986  000FE4                     __end_of_TMR1_Timer_reset:
  4987                           	opt callstack 0
  4988                           
  4989 ;; *************** function _ISR_high *****************
  4990 ;; Defined at:
  4991 ;;		line 53 in file "ISR.c"
  4992 ;; Parameters:    Size  Location     Type
  4993 ;;		None
  4994 ;; Auto vars:     Size  Location     Type
  4995 ;;		None
  4996 ;; Return value:  Size  Location     Type
  4997 ;;                  1    wreg      void 
  4998 ;; Registers used:
  4999 ;;		None
  5000 ;; Tracked objects:
  5001 ;;		On entry : 0/0
  5002 ;;		On exit  : 0/0
  5003 ;;		Unchanged: 0/0
  5004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5009 ;;Total ram usage:        0 bytes
  5010 ;; Hardware stack levels used:    1
  5011 ;; This function calls:
  5012 ;;		Nothing
  5013 ;; This function is called by:
  5014 ;;		Interrupt level 2
  5015 ;; This function uses a non-reentrant model
  5016 ;;
  5017                           
  5018                           	psect	intcode
  5019  000008                     __pintcode:
  5020                           	opt callstack 0
  5021  000008                     _ISR_high:
  5022                           	opt callstack 23
  5023                           
  5024                           ;incstack = 0
  5025  000008  8259               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  5026  00000A  ED6C  F008         	call	int_func,f	;refresh shadow registers
  5027                           
  5028                           	psect	intcode_body
  5029  0010D8                     __pintcode_body:
  5030                           	opt callstack 23
  5031  0010D8                     int_func:
  5032                           	opt callstack 23
  5033  0010D8  0006               	pop		; remove dummy address from shadow register refresh
  5034  0010DA  9259               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  5035  0010DC  0011               	retfie		f
  5036  0010DE                     __end_of_ISR_high:
  5037                           	opt callstack 0
  5038  0000                     
  5039                           	psect	rparam
  5040  0000                     
  5041                           	psect	temp
  5042  000059                     btemp:
  5043                           	opt callstack 0
  5044  000059                     	ds	1
  5045  0000                     int$flags	set	btemp
  5046  0000                     wtemp8	set	btemp+1
  5047  0000                     ttemp5	set	btemp+1
  5048  0000                     ttemp6	set	btemp+4
  5049  0000                     ttemp7	set	btemp+8
  5050                           tosu	equ	0xFFF
  5051                           tosh	equ	0xFFE
  5052                           tosl	equ	0xFFD
  5053                           stkptr	equ	0xFFC
  5054                           pclatu	equ	0xFFB
  5055                           pclath	equ	0xFFA
  5056                           pcl	equ	0xFF9
  5057                           tblptru	equ	0xFF8
  5058                           tblptrh	equ	0xFF7
  5059                           tblptrl	equ	0xFF6
  5060                           tablat	equ	0xFF5
  5061                           prodh	equ	0xFF4
  5062                           prodl	equ	0xFF3
  5063                           indf0	equ	0xFEF
  5064                           postinc0	equ	0xFEE
  5065                           postdec0	equ	0xFED
  5066                           preinc0	equ	0xFEC
  5067                           plusw0	equ	0xFEB
  5068                           fsr0h	equ	0xFEA
  5069                           fsr0l	equ	0xFE9
  5070                           wreg	equ	0xFE8
  5071                           indf1	equ	0xFE7
  5072                           postinc1	equ	0xFE6
  5073                           postdec1	equ	0xFE5
  5074                           preinc1	equ	0xFE4
  5075                           plusw1	equ	0xFE3
  5076                           fsr1h	equ	0xFE2
  5077                           fsr1l	equ	0xFE1
  5078                           bsr	equ	0xFE0
  5079                           indf2	equ	0xFDF
  5080                           postinc2	equ	0xFDE
  5081                           postdec2	equ	0xFDD
  5082                           preinc2	equ	0xFDC
  5083                           plusw2	equ	0xFDB
  5084                           fsr2h	equ	0xFDA
  5085                           fsr2l	equ	0xFD9
  5086                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        9
    BSS         667
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     58      88
    BANK0           160      0     102
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    FRAME_HandleCanFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_AdressOfNeighbors@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    S52$pointerNaSasiada	PTR struct . size(2) Largest target is 544
		 -> wartosciSasiada(BIGRAM[544]), 

    Dane.sasiedzi.pointerNaSasiada	PTR struct . size(2) Largest target is 544
		 -> wartosciSasiada(BIGRAM[544]), 

    Dane	PTR struct DaneStruct size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    FRAME_SensorExcitationStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_GenID@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_TakeFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_SendFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_MoveBuffIntoFrame@Buf	PTR unsigned char  size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), RXB0D0(SFR_3[1]), 

    CAN_MoveBuffIntoFrame@Ram	PTR unsigned char  size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), RXB0D0(SFR_3[1]), 


Critical Paths under _main in COMRAM

    _main->_TRM_DataTransmition
    _TRM_DataTransmition->_FRAME_HandleCanFrame
    _FRAME_HandleCanFrame->_FRAME_AdressOfNeighbors
    _LED_Error->_LED_Control
    _LED_Clear->_LED_Control
    _FRAME_AdressOfNeighbors->___wmul
    _CAN_SendFrame->_CAN_MoveBuffIntoFrame
    _CAN_TakeFrame->___awdiv
    _LED_Update->_LED_Light_Pos
    _LED_Light_Pos->___lwdiv
    _INI_LED_Start->_LED_Control

Critical Paths under _ISR_low in COMRAM

    _ISR_low->_TMR1_Timer_reset
    _ISR_low->i1_TMR1_Update_flag_Set

Critical Paths under _ISR_high in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR_low in BANK0

    None.

Critical Paths under _ISR_high in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_low in BANK1

    None.

Critical Paths under _ISR_high in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_low in BANK2

    None.

Critical Paths under _ISR_high in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_low in BANK3

    None.

Critical Paths under _ISR_high in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_low in BANK4

    None.

Critical Paths under _ISR_high in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_low in BANK5

    None.

Critical Paths under _ISR_high in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_low in BANK6

    None.

Critical Paths under _ISR_high in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_low in BANK7

    None.

Critical Paths under _ISR_high in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_low in BANK8

    None.

Critical Paths under _ISR_high in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_low in BANK9

    None.

Critical Paths under _ISR_high in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_low in BANK10

    None.

Critical Paths under _ISR_high in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_low in BANK11

    None.

Critical Paths under _ISR_high in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_low in BANK12

    None.

Critical Paths under _ISR_high in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   19454
                            _INI_All
                         _LED_Update
               _TMR1_Update_flag_Get
               _TMR1_Update_flag_Set
                _TRM_DataTransmition
 ---------------------------------------------------------------------------------
 (1) _TRM_DataTransmition                                 18    18      0   12229
                                             41 COMRAM    17    17      0
                      _CAN_TakeFrame
               _FRAME_HandleCanFrame
 ---------------------------------------------------------------------------------
 (2) _FRAME_HandleCanFrame                                 5     3      2   10319
                                             36 COMRAM     5     3      2
                          _CAN_GenID
                      _CAN_SendFrame
            _FRAME_AdressOfNeighbors
       _FRAME_SensorExcitationStatus
                          _LED_Error
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) _FRAME_SensorExcitationStatus                        16    14      2    3376
                                             10 COMRAM    16    14      2
                          _LED_Clear
                          _LED_Error
                           _LOCK_Get
                           _LOCK_Set
           _MOC_Aktualna_Temperatura
                  _MOC_Frame_Counter
                        _MOC_NOTWORK
     _MOC_Wynikowa_wartosc_roznicowa
 ---------------------------------------------------------------------------------
 (4) _MOC_Wynikowa_wartosc_roznicowa                       2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_NOTWORK                                          2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_Frame_Counter                                    2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_Aktualna_Temperatura                             2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _LOCK_Set                                             1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _LOCK_Get                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _LED_Error                                            0     0      0    1412
                        _LED_Control
 ---------------------------------------------------------------------------------
 (4) _LED_Clear                                            0     0      0    1412
                        _LED_Control
 ---------------------------------------------------------------------------------
 (3) _FRAME_AdressOfNeighbors                             25    21      4    3050
                                             11 COMRAM    25    21      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    2199
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _CAN_SendFrame                                        5     3      2     891
                                             10 COMRAM     5     3      2
              _CAN_MoveBuffIntoFrame
 ---------------------------------------------------------------------------------
 (3) _CAN_GenID                                            7     4      3     360
                                              5 COMRAM     7     4      3
 ---------------------------------------------------------------------------------
 (2) _CAN_TakeFrame                                        6     4      2    1622
                                             13 COMRAM     6     4      2
              _CAN_MoveBuffIntoFrame
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     612
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _CAN_MoveBuffIntoFrame                                5     1      4     546
                                              5 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) _TMR1_Update_flag_Set                                 2     0      2     202
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR1_Update_flag_Get                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _LED_Update                                           0     0      0    5611
                        _LED_Control
                           _LED_Left
                      _LED_Light_Pos
                          _LED_Right
 ---------------------------------------------------------------------------------
 (2) _LED_Light_Pos                                       11     7      4    3471
                                             12 COMRAM    11     7      4
                        _LED_Control
                           _LED_Left
                          _LED_Right
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     574
                                              5 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _LED_Right                                            6     4      2     364
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _LED_Left                                             4     2      2     364
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _INI_All                                              0     0      0    1412
                          _CAN_Setup
                _INI_GlobalInterrupt
                      _INI_LED_Start
                         _INI_OUTPUT
                          _INI_Timer
 ---------------------------------------------------------------------------------
 (2) _INI_Timer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INI_OUTPUT                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INI_LED_Start                                        0     0      0    1412
                        _LED_Control
 ---------------------------------------------------------------------------------
 (4) _LED_Control                                          5     3      2    1412
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _INI_GlobalInterrupt                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CAN_Setup                                            1     1      0       0
                                              5 COMRAM     1     1      0
                     _CAN_SetupClock
                      _CAN_SetupMask
 ---------------------------------------------------------------------------------
 (3) _CAN_SetupMask                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CAN_SetupClock                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR_low                                              3     3      0      76
                                              2 COMRAM     3     3      0
                   _TMR1_Timer_reset
             i1_TMR1_Update_flag_Set
 ---------------------------------------------------------------------------------
 (7) i1_TMR1_Update_flag_Set                               2     0      2      48
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (7) _TMR1_Timer_reset                                     2     2      0      28
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _ISR_high                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _INI_All
     _CAN_Setup
       _CAN_SetupClock
       _CAN_SetupMask
     _INI_GlobalInterrupt
     _INI_LED_Start
       _LED_Control
     _INI_OUTPUT
     _INI_Timer
   _LED_Update
     _LED_Control
     _LED_Left
     _LED_Light_Pos
       _LED_Control
       _LED_Left
       _LED_Right
       ___lwdiv
     _LED_Right
   _TMR1_Update_flag_Get
   _TMR1_Update_flag_Set
   _TRM_DataTransmition
     _CAN_TakeFrame
       _CAN_MoveBuffIntoFrame
       ___awdiv
     _FRAME_HandleCanFrame
       _CAN_GenID
       _CAN_SendFrame
         _CAN_MoveBuffIntoFrame
       _FRAME_AdressOfNeighbors
         ___wmul
       _FRAME_SensorExcitationStatus
         _LED_Clear
           _LED_Control
         _LED_Error
           _LED_Control
         _LOCK_Get
         _LOCK_Set
         _MOC_Aktualna_Temperatura
         _MOC_Frame_Counter
         _MOC_NOTWORK
         _MOC_Wynikowa_wartosc_roznicowa
       _LED_Error
         _LED_Control
       ___awdiv

 _ISR_low (ROOT)
   _TMR1_Timer_reset
   i1_TMR1_Update_flag_Set

 _ISR_high (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0     220      31       16.4%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      66       5       63.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3A      58       1       93.6%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      BE      20        0.0%
DATA                 0      0     2DE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Jul 22 11:30:15 2019

                                 ___awdiv@sign 000B                                             bsr 000FE0  
                          ___wmul@multiplicand 0008                                    __CFG_BORV$3 000000  
                                 __CFG_CP0$OFF 000000                                   __CFG_CP1$OFF 000000  
                                 __CFG_CP2$OFF 000000                                   __CFG_CP3$OFF 000000  
                           __size_of_CAN_GenID 0094                                            l311 079C  
                                          l180 05A0                                            l190 031E  
                                          l191 0324                                            l192 032A  
                                          l432 08E8                                            l520 0A5A  
                                          l193 0330                                            l441 096E  
                                          l521 0A52                                            l194 0336  
                                          l434 0920                                            l283 0C78  
                                          l195 033C                                            l179 05A2  
                                          l196 0342                                            l188 0318  
                                          l189 0388                                    ?_LED_Update 0001  
                                 __CFG_CPB$OFF 000000                                   __CFG_CPD$OFF 000000  
                           __size_of_CAN_Setup 005C                                   ?_LED_Control 0006  
                                          wreg 000FE8                          __end_of_CAN_TakeFrame 0586  
                                  ?_INI_OUTPUT 0001                         __size_of_INI_LED_Start 0034  
                        __end_of_CAN_SendFrame 06F4                                   __CFG_LVP$OFF 000000  
                    TRM_DataTransmition@weWyU8 004C                   __size_of_INI_GlobalInterrupt 000E  
                                 __CFG_WDT$OFF 000000                                           l1151 0E04  
                                         l2301 07AC                                           l2313 07CC  
                                         l2241 0706                                           l2331 07FC  
                                         l2307 07BC                                           l2325 07EC  
                                         l2253 0726                                           l2343 081C  
                                         l2319 07DC                                           l2271 0756  
                                         l2247 0716                                           l2337 080C  
                                         l2265 0746                                           l2355 083E  
                                         l2283 0776                                           l2259 0736  
                              __end_of_INI_All 1058                                           l2515 0ED2  
                                         l2611 0BB8                                           l2349 082C  
                                         l2277 0766                                           l2365 0F4C  
                                         l2295 0796                                           l2623 0BDE  
                                         l2711 0466                                           l2289 0786  
                                         l2801 0AF8                                           l2625 0BE6  
                                         l2617 0BC8                                           l2721 048E  
                                         l2713 046E                                           l2643 0C1E  
                                         l2635 0C06                                           l2715 0476  
                                         l2707 045A                                           l2731 04DA  
                                         l2483 06EE                                           l2547 090A  
                                         l2653 0DD2                                           l2741 051A  
                                         l2717 047E                                           l2709 0460  
                                         l2725 0496                                           l2733 04F4  
                                         l2671 0D0A                                           l2655 0DDA  
                                         l2639 0C10                                           l2743 0522  
                                         l2735 0506                                           l2719 0486  
                                         l2727 04D6                                           l2479 063A  
                                         l2559 0930                                           l2823 09C0  
                                         l2665 0DFA                                           l2745 052A  
                                         l2737 050C                                           l2753 0542  
                                         l2585 0172                                           l2825 09D8  
                                         l2817 0998                                           l2499 0E42  
                                         l2747 0532                                           l2739 0512  
                                         l2755 0582                                           l2691 0348  
                                         l2595 01CA                                           l2579 008C  
                                         l2819 09A6                                           l2907 0F20  
                                         l2685 0D54                                           l2749 053A  
                                         l2917 0F40                                           l2793 0AC2  
                                         l2795 0ACC                                           l2787 0A96  
                                         l2859 0C54                                           l2875 0E84  
                                         _BIE0 000DFA                              _MOC_Frame_Counter 1070  
                                         u1100 0944                                           u1130 0170  
                                         u1035 0610                                           u1220 0DDE  
                                         u1140 0308                                           u1320 0B00  
                                         u1180 0BEA                                           _LATA 000F89  
                                         _LATB 000F8A                                           _LATC 000F8B  
                                         _LATD 000F8C                                           _LATE 000F8D  
                                         u1275 03F2                                           _IPR3 000FA5  
                                         _IPEN 007E87                                           _PIE3 000FA3  
                                         _PEIE 007F96                                           _LOCK 004F  
                                         _PIR3 000FA4                                           _RCON 000FD0  
                                         _Dane 0049                                __end_of_ISR_low 005C  
                             LED_Control@diode 0006                             ?_MOC_Frame_Counter 0006  
                                         _main 0F1A                               LED_Control@color 000A  
                                         fsr1h 000FE2                                           fsr2h 000FDA  
                                         indf1 000FE7                                           indf2 000FDF  
                                         fsr1l 000FE1                                           fsr2l 000FD9  
                                         btemp 0059                                 _CAN_SetupClock 0F72  
                           __size_of_LED_Clear 001E                                           prodh 000FF4  
                                         prodl 000FF3                          __end_of_CAN_SetupMask 0D06  
                __size_of_TMR1_Update_flag_Get 000A                                           start 005C  
                __size_of_TMR1_Update_flag_Set 000A                             __size_of_LED_Error 001E  
                                __CFG_IESO$OFF 000000                             __size_of_LED_Right 004C  
                __size_of_FRAME_HandleCanFrame 00F0                                  _LED_Light_Pos 0A60  
                                __CFG_MCLRE$ON 000000                                   ___param_bank 000000  
                          ??_MOC_Frame_Counter 0008                     ??_MOC_Aktualna_Temperatura 0008  
            FRAME_HandleCanFrame@identyfikator 0029                             __size_of_INI_Timer 0018  
                             __end_of_LED_Left 0EE6                                          _B0CON 000E20  
                                        _B1CON 000E30                                          _B2CON 000E40  
                                        _B3CON 000E50                                          _B4CON 000E60  
                                        _B5CON 000E70                               __end_of_LOCK_Get 10E2  
                                        ?_main 0001                               __end_of_LOCK_Set 10D8  
                              __end_of___awdiv 0C28                                          _BSEL0 000DF8  
                              ___awdiv@divisor 0008                                          _T1CON 000FCD  
                                        _IRCF0 007E9C                                          _IRCF1 007E9D  
                                        _IRCF2 007E9E                                __end_of___lwdiv 0E0E  
                                        i1l587 004C                                ___awdiv@counter 000A  
                                        _MSEL0 000DF0                                          _MSEL1 000DF1  
                                        _MSEL2 000DF2                                          _MSEL3 000DF3  
                                        _TMR1H 000FCF                                          _TMR1L 000FCE  
                                        _TRISA 000F92                                          _TRISB 000F93  
                                        _TRISC 000F94                                          _TRISD 000F95  
                                        _TRISE 000F96                                  __CFG_PWRT$OFF 000000  
                                        _Flagi 003B                         ?_CAN_MoveBuffIntoFrame 0006  
                                __CFG_WRT0$OFF 000000                                  __CFG_WRT1$OFF 000000  
                                __CFG_WRT2$OFF 000000                                  __CFG_WRT3$OFF 000000  
                               __CFG_EBTR0$OFF 000000                                 __CFG_FCMEN$OFF 000000  
                               __CFG_EBTR1$OFF 000000                                 __CFG_EBTR2$OFF 000000  
                               __CFG_EBTR3$OFF 000000                               __end_of_ISR_high 10DE  
                                __CFG_WRTB$OFF 000000                                  __CFG_WRTC$OFF 000000  
                                __CFG_WRTD$OFF 000000                      __end_of_MOC_Frame_Counter 107E  
                               __CFG_EBTRB$OFF 000000                        i1TMR1_Update_flag_Set@a 0001  
                                 ?_MOC_NOTWORK 0006                                          tablat 000FF5  
                       __end_of_CAN_SetupClock 0F9A                                          ttemp5 005A  
                                        ttemp6 005D                                          ttemp7 0061  
                                        status 000FD8                                          wtemp8 005A  
                            __end_of_CAN_GenID 0BA4                                 __CFG_PBADEN$ON 000000  
                          __size_of_LED_Update 007A                                 ?_LED_Light_Pos 000D  
                             _TMR1_Timer_reset 0FC0                              __end_of_CAN_Setup 0D62  
                                _INI_LED_Start 0EE6                                __initialization 0D62  
                          __size_of_INI_OUTPUT 001E                               CAN_GenID@frameID 0008  
                                 __end_of_main 0F48                       ?_FRAME_AdressOfNeighbors 000C  
                             CAN_GenID@message 0006                                         ??_main 003B  
                       CAN_MoveBuffIntoFrame@i 000A                                  __activetblptr 000002  
                             _TMR1_Update_flag 0047                              __end_of_LED_Clear 1020  
                              _wartosciSasiada 00C6                                      ??_INI_All 000B  
                            __end_of_LED_Error 1002                              __end_of_LED_Right 0E5A  
                                    ??_ISR_low 0003                                         _CANCON 000F6F  
                             ___awdiv@dividend 0006                                         _CIOCON 000F73  
                              __CFG_BBSIZ$1024 000000                              __end_of_INI_Timer 1070  
                                       i1l2953 004A                                ?_CAN_SetupClock 0001  
                                       _RXB0D0 000F66                                         _TMR1IE 007CE8  
                                       _TMR1IF 007CF0                                         _TMR1IP 007CF8  
                                       _TMR1ON 007E68                                 ?_INI_LED_Start 0001  
                               __CFG_XINST$OFF 000000                                         ___wmul 0F9A  
                                    ??___awdiv 000A                                 __CFG_STVREN$ON 000000  
                             LED_Light_Pos@pos 000D                                      ??___lwdiv 000A  
                                       clear_0 0D8A                                         clear_1 0D9C  
                                       clear_2 0DA8                               ___awdiv@quotient 000C  
                     ??i1_TMR1_Update_flag_Set 0003                  FRAME_AdressOfNeighbors@uranos 0021  
                              __CFG_BOREN$BOHW 000000                                   __pdataCOMRAM 0050  
                                       tblptrh 000FF7                                         tblptrl 000FF6  
                                       tblptru 000FF8                     __size_of_MOC_Frame_Counter 000E  
                         __size_of_LED_Control 0152                          TMR1_Update_flag_Set@a 0006  
                                   __accesstop 0060                        __end_of__initialization 0DAE  
                          ISR_low@ramkaStanuU8 004D                                      ?_LED_Left 0006  
                              ??_LED_Light_Pos 0011                                  ___rparam_used 000001  
                                    ?_LOCK_Get 0001                                      ?_LOCK_Set 0001  
              __end_of_FRAME_AdressOfNeighbors 030A                                 __pcstackCOMRAM 0001  
                                    LED_Left@a 0006                                      LED_Left@b 0008  
                          _INI_GlobalInterrupt 107E                                      ?_ISR_high 0001  
                                 ??_LED_Update 0018                    __end_of_TRM_DataTransmition 0EA4  
                                 ??_INI_OUTPUT 0006                                      LOCK_Set@k 0006  
                         ?_INI_GlobalInterrupt 0001                                     __pbssBANK0 0060  
                         __size_of_MOC_NOTWORK 0008                                ??_INI_LED_Start 000B  
                                   ??_LED_Left 0008                                     ??_LOCK_Get 0006  
                                   ??_LOCK_Set 0006                             __end_of_LED_Update 0CA2  
                           __end_of_INI_OUTPUT 103E                                        ?___wmul 0006  
                                   ??_ISR_high 0001                            TMR1_Timer_reset@t1H 0002  
                          TMR1_Timer_reset@t1L 0001                                        _ECANCON 000F77  
                                      _CANSTAT 000F6E                        ??_CAN_MoveBuffIntoFrame 000A  
                 __end_of_TMR1_Update_flag_Get 10B4                   __end_of_TMR1_Update_flag_Set 10AA  
              __size_ofi1_TMR1_Update_flag_Set 000A                   __end_of_FRAME_HandleCanFrame 0A60  
                                      _INI_All 103E                       __end_of_TMR1_Timer_reset 0FE4  
                                      _RXB0DLC 000F65                                        _RXB0CON 000F60  
                                      _RXB1CON 000F50                          ??_INI_GlobalInterrupt 0006  
                                      _TXB0CON 000F40                                        _ISR_low 0018  
                                      _DaneCan 0040                    FRAME_HandleCanFrame@message 0025  
                                      __Hparam 0000               ??_MOC_Wynikowa_wartosc_roznicowa 0008  
              ?_MOC_Wynikowa_wartosc_roznicowa 0006                                        __Lparam 0000  
                       __size_of_CAN_TakeFrame 027C                                      _CAN_GenID 0B10  
                                      ___awdiv 0BA4                                      _CAN_Setup 0D06  
                              __size_of___wmul 0026                         __size_of_CAN_SendFrame 016E  
                                      ___lwdiv 0DBC                              LED_Light_Pos@pos2 0014  
                                      __pcinit 0D62                                        __ramtop 0D00  
                                      __ptext0 0F1A                                        __ptext1 0E5A  
                                      __ptext2 0970                                        __ptext3 0846  
                                      __ptext4 108C                                        __ptext5 10C8  
                                      __ptext6 1070                                        __ptext7 1096  
                                      __ptext8 10D0                                        __ptext9 10DE  
                       __size_of_CAN_SetupMask 0064              __size_of_MOC_Aktualna_Temperatura 000A  
               FRAME_AdressOfNeighbors@nrRamki 000E                      ?_MOC_Aktualna_Temperatura 0006  
             __size_of_FRAME_AdressOfNeighbors 02AA                               ??_CAN_SetupClock 0006  
               FRAME_AdressOfNeighbors@message 000C                                      _LED_Clear 1002  
                                    _LED_Error 0FE4                                 __pintcode_body 10D8  
                                    _LED_Right 0E0E                           end_of_initialization 0DAE  
                                __Lmediumconst 0000                                        int_func 10D8  
                                    _INI_Timer 1058                         i1_TMR1_Update_flag_Set 10B4  
             TRM_DataTransmition@czujnikWeWyU8 004B                                     ?_CAN_GenID 0006  
                                      postdec1 000FE5                                        postdec2 000FDD  
                                      postinc0 000FEE                                        postinc1 000FE6  
                                      postinc2 000FDE                                     ?_CAN_Setup 0001  
                         CAN_SendFrame@message 000B                                  LED_Update@Red 004E  
                FRAME_SensorExcitationStatus@k 0019                                  _CAN_TakeFrame 030A  
                                   ?_LED_Clear 0001                                  _CAN_SendFrame 0586  
                  FRAME_AdressOfNeighbors@gaja 001F                                     ?_LED_Error 0001  
                                   ?_LED_Right 0006                                     ?_INI_Timer 0001  
                              _ramkaCanRxKarty 0060                           _TMR1_Update_flag_Get 10AA  
                              _ramkaCanTxKarty 00B5                           _TMR1_Update_flag_Set 10A0  
                                _CAN_SetupMask 0CA2                              __size_of_LED_Left 0042  
                         _FRAME_HandleCanFrame 0970                              __size_of_LOCK_Get 0004  
                            __size_of_LOCK_Set 0008                                 CAN_TakeFrame@k 0013  
                               __end_of___wmul 0FC0                                  __pidataCOMRAM 10BE  
                            __size_of_ISR_high 10D6                                     LED_Right@a 0006  
                                   LED_Right@b 000A                          MOC_Frame_Counter@zeta 0050  
                                ??_LED_Control 0008                            start_initialization 0D62  
                               ?_CAN_TakeFrame 000E                                 ?_CAN_SendFrame 000B  
                             __CFG_OSC$IRCIO67 000000                          ?_TMR1_Update_flag_Get 0006  
                        ?_TMR1_Update_flag_Set 0006                                 ?_CAN_SetupMask 0001  
                        __end_of_LED_Light_Pos 0B10                          ?_FRAME_HandleCanFrame 0025  
                                  ??_CAN_GenID 0009                                       ??___wmul 000A  
                                  ??_CAN_Setup 0006                               __CFG_LPT1OSC$OFF 000000  
                     CAN_MoveBuffIntoFrame@Buf 0008           __end_of_FRAME_SensorExcitationStatus 0970  
        __size_of_FRAME_SensorExcitationStatus 012A                       CAN_MoveBuffIntoFrame@Ram 0006  
                 _FRAME_SensorExcitationStatus 0846  FRAME_SensorExcitationStatus@Satrun_prime_2166 0015  
               __size_of_CAN_MoveBuffIntoFrame 002A                                    __pbssBIGRAM 00C6  
                __end_of_CAN_MoveBuffIntoFrame 0F72                                _Fulfillment_Lvl 0056  
                                  __pbssCOMRAM 003B                                       ?_INI_All 0001  
                      _FRAME_AdressOfNeighbors 0060                              ?_TMR1_Timer_reset 0001  
                                  _BRGCON1bits 000F70                                    _BRGCON2bits 000F71  
                                  _BRGCON3bits 000F72                                       ?_ISR_low 0001  
                                  ??_LED_Clear 000B                                  ??_MOC_NOTWORK 0008  
                           ??_TMR1_Timer_reset 0001                                    ??_LED_Error 000B  
                                  ??_LED_Right 0008                   __size_of_TRM_DataTransmition 004A  
                     FRAME_AdressOfNeighbors@i 0023                            __end_of_LED_Control 0846  
                                  ??_INI_Timer 0006                          __end_of_INI_LED_Start 0F1A  
                             ___lwdiv@dividend 0006                                      __pintcode 0008  
                                     ?___awdiv 0006               __end_of_MOC_Aktualna_Temperatura 10A0  
                                     ?___lwdiv 0006                                    __pintcodelo 0018  
                  __end_of_INI_GlobalInterrupt 108C                                ??_CAN_TakeFrame 0010  
                ?_FRAME_SensorExcitationStatus 000B         __end_of_MOC_Wynikowa_wartosc_roznicowa 1096  
      __size_of_MOC_Wynikowa_wartosc_roznicowa 000A                 _MOC_Wynikowa_wartosc_roznicowa 108C  
                                  _COMSTATbits 000F74                                ??_CAN_SendFrame 000D  
                             ___lwdiv@quotient 000A                        ?i1_TMR1_Update_flag_Set 0001  
                       ??_TMR1_Update_flag_Get 0008                         ??_TMR1_Update_flag_Set 0008  
                              ??_CAN_SetupMask 0006                                 ___wmul@product 000A  
                                     _LED_Left 0EA4                         ??_FRAME_HandleCanFrame 0027  
                         CAN_TakeFrame@message 000E                            __end_of_MOC_NOTWORK 10D0  
                                     _LOCK_Get 10DE                           CAN_TakeFrame@tempCON 0012  
                                     _LOCK_Set 10D0                                       _RXB0EIDH 000F63  
                                     _RXB0EIDL 000F64                                       _RCONbits 000FD0  
                             __CFG_WDTPS$32768 000000                                       _RXB0SIDH 000F61  
                                     _RXB0SIDL 000F62                                       _RXF0EIDH 000F02  
                                     _RXF0EIDL 000F03                                       _RXF1EIDH 000F06  
                                     _RXF1EIDL 000F07                                       _RXF2EIDH 000F0A  
                                     _RXF2EIDL 000F0B                                       _RXF0SIDH 000F00  
                                     _RXF0SIDL 000F01                                       _RXF1SIDH 000F04  
                                     _RXF1SIDL 000F05                                       _RXF2SIDH 000F08  
                                     _RXF2SIDL 000F09                                       _ISR_high 0008  
                                     _RXM0EIDH 000F1A                                       _RXM0EIDL 000F1B  
                                     _RXM1EIDH 000F1E                                       _RXM1EIDL 000F1F  
                                     _RXM0SIDH 000F18                                       _RXM0SIDL 000F19  
                                     _RXM1SIDH 000F1C                                       _RXM1SIDL 000F1D  
                    ??_FRAME_AdressOfNeighbors 0010                              ___wmul@multiplier 0006  
                             _DetectorLedRadar 0044                                    _LED_Control 06F4  
                             __size_of_INI_All 001A                 __end_ofi1_TMR1_Update_flag_Set 10BE  
                                    copy_data0 0D76                               __size_of_ISR_low 0044  
                                     __Hrparam 0000                                   _RXB0SIDLbits 000F62  
                                     __Lrparam 0000                               __size_of___awdiv 0084  
                             __size_of___lwdiv 0052                       _MOC_Aktualna_Temperatura 1096  
                           LED_Light_Pos@flage 0016                             LED_Light_Pos@color 0011  
                                 _RXF0SIDLbits 000F01                                ___lwdiv@divisor 0008  
                                 _RXF1SIDLbits 000F05                                ___lwdiv@counter 000C  
                                     __ptext10 0FE4                                       __ptext11 1002  
                                     __ptext20 10AA                                       __ptext12 0060  
                                     __ptext21 0C28                                       __ptext13 0F9A  
                                     __ptext30 06F4                                       __ptext22 0A60  
                                     __ptext14 0586                                       __ptext31 107E  
                                     __ptext23 0DBC                                       __ptext15 0B10  
                                     __ptext32 0D06                                       __ptext24 0E0E  
                                     __ptext16 030A                                       __ptext33 0CA2  
                                     __ptext25 0EA4                                       __ptext17 0BA4  
                                     __ptext34 0F72                                       __ptext26 103E  
                                     __ptext18 0F48                                       __ptext27 1058  
                                     __ptext19 10A0                                       __ptext36 10B4  
                                     __ptext28 1020                 ??_FRAME_SensorExcitationStatus 000D  
                                     __ptext37 0FC0                                       __ptext29 0EE6  
                TRM_DataTransmition@canMessage 002A                                   _RXF2SIDLbits 000F09  
                                  _MOC_NOTWORK 10C8                                  __size_of_main 002E  
                      __size_of_CAN_SetupClock 0028       FRAME_SensorExcitationStatus@Satrun_prime 0013  
                                     int$flags 0059                            _TRM_DataTransmition 0E5A  
                                  _RXB0DLCbits 000F65                                     _LED_Update 0C28  
                                  _RXB0CONbits 000F60                                     _INTCONbits 000FF2  
                                   _INI_OUTPUT 1020                           ?_TRM_DataTransmition 0001  
                                     intlevel1 0000                                       intlevel2 0000  
          FRAME_SensorExcitationStatus@message 000B                                    _TXB0CONbits 000F40  
                    __size_of_TMR1_Timer_reset 0024             FRAME_SensorExcitationStatus@Saturn 0017  
                     LED_Light_Pos@fulfillment 000F                                LED_Update@Green 0058  
                       __size_of_LED_Light_Pos 00B0                          _CAN_MoveBuffIntoFrame 0F48  
                                   _WDTCONbits 000FD1                          ??_TRM_DataTransmition 002A  
                       LED_Light_Pos@LED_array 0012                                 LED_Update@pos1 0054  
                               LED_Update@pos2 0052  
