

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Fri Aug 02 14:29:26 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4680
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1
    67                           	psect	text54,global,reloc=2,class=CODE,delta=1
    68                           	psect	text55,global,reloc=2,class=CODE,delta=1
    69                           	psect	text56,global,reloc=2,class=CODE,delta=1
    70                           	psect	text57,global,reloc=2,class=CODE,delta=1
    71                           	psect	text58,global,reloc=2,class=CODE,delta=1
    72                           	psect	text59,global,reloc=2,class=CODE,delta=1
    73                           	psect	text60,global,reloc=2,class=CODE,delta=1
    74                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    75                           	psect	text62,global,reloc=2,class=CODE,delta=1
    76                           	psect	text63,global,reloc=2,class=CODE,delta=1
    77                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    78                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    79                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    80                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    81                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    82  0000                     
    83                           ; Version 2.05
    84                           ; Generated 20/12/2018 GMT
    85                           ; 
    86                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    87                           ; All rights reserved.
    88                           ; 
    89                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    90                           ; 
    91                           ; Redistribution and use in source and binary forms, with or without modification, are
    92                           ; permitted provided that the following conditions are met:
    93                           ; 
    94                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    95                           ;        conditions and the following disclaimer.
    96                           ; 
    97                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    98                           ;        of conditions and the following disclaimer in the documentation and/or other
    99                           ;        materials provided with the distribution.
   100                           ; 
   101                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   102                           ;        software without specific prior written permission.
   103                           ; 
   104                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   105                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   106                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   107                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   108                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   109                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   110                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   111                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   112                           ; 
   113                           ; 
   114                           ; Code-generator required, PIC18F4680 Definitions
   115                           ; 
   116                           ; SFR Addresses
   117  0000                     
   118                           	psect	idataCOMRAM
   119  00271A                     __pidataCOMRAM:
   120                           	opt callstack 0
   121                           
   122                           ;initializer for MOC_Frame_Counter@zeta
   123  00271A  0011               	dw	17
   124                           
   125                           ;initializer for LED_Update@pos2
   126  00271C  0001               	dw	1
   127                           
   128                           ;initializer for LED_Update@pos1
   129  00271E  0001               	dw	1
   130                           
   131                           ;initializer for _Fulfillment_Lvl
   132  002720  0014               	dw	20
   133                           
   134                           ;initializer for LED_Update@Green
   135  002722  01                 	db	1
   136                           
   137                           ;initializer for _Init_Data
   138  002723  FFFF               	dw	65535
   139                           
   140                           ;initializer for _NeightAdress2
   141  002725  012A               	dw	298
   142  0000                     _RXF9EIDL	set	3443
   143  0000                     _RXF9EIDH	set	3442
   144  0000                     _RXF9SIDLbits	set	3441
   145  0000                     _RXF9SIDL	set	3441
   146  0000                     _RXF9SIDH	set	3440
   147  0000                     _RXF8EIDL	set	3435
   148  0000                     _RXF8EIDH	set	3434
   149  0000                     _RXF8SIDLbits	set	3433
   150  0000                     _RXF8SIDL	set	3433
   151  0000                     _RXF8SIDH	set	3432
   152  0000                     _RXF7EIDL	set	3431
   153  0000                     _RXF7EIDH	set	3430
   154  0000                     _RXF7SIDLbits	set	3429
   155  0000                     _RXF7SIDL	set	3429
   156  0000                     _RXF7SIDH	set	3428
   157  0000                     _RXF6EIDL	set	3427
   158  0000                     _RXF6EIDH	set	3426
   159  0000                     _RXF6SIDLbits	set	3425
   160  0000                     _RXF6SIDL	set	3425
   161  0000                     _RXF6SIDH	set	3424
   162  0000                     _RXFCON1	set	3541
   163  0000                     _RXFCON0	set	3540
   164  0000                     _RXFBCON4	set	3556
   165  0000                     _RXFBCON3	set	3555
   166  0000                     _RXFBCON2	set	3554
   167  0000                     _RXFBCON1	set	3553
   168  0000                     _RXFBCON0	set	3552
   169  0000                     _MSEL3	set	3571
   170  0000                     _MSEL2	set	3570
   171  0000                     _MSEL1	set	3569
   172  0000                     _MSEL0	set	3568
   173  0000                     _BIE0	set	3578
   174  0000                     _BSEL0	set	3576
   175  0000                     _B5CON	set	3696
   176  0000                     _B4CON	set	3680
   177  0000                     _B3CON	set	3664
   178  0000                     _B2CON	set	3648
   179  0000                     _B1CON	set	3632
   180  0000                     _B0CON	set	3616
   181  0000                     _TXB0CONbits	set	3904
   182  0000                     _RXF5EIDL	set	3863
   183  0000                     _RXF5EIDH	set	3862
   184  0000                     _RXF5SIDLbits	set	3861
   185  0000                     _RXF5SIDL	set	3861
   186  0000                     _RXF5SIDH	set	3860
   187  0000                     _RXF4EIDL	set	3859
   188  0000                     _RXF4EIDH	set	3858
   189  0000                     _RXF4SIDLbits	set	3857
   190  0000                     _RXF4SIDL	set	3857
   191  0000                     _RXF4SIDH	set	3856
   192  0000                     _RXF3EIDL	set	3855
   193  0000                     _RXF3EIDH	set	3854
   194  0000                     _RXF3SIDLbits	set	3853
   195  0000                     _RXF3SIDL	set	3853
   196  0000                     _RXF3SIDH	set	3852
   197  0000                     _RXF2EIDL	set	3851
   198  0000                     _RXF2EIDH	set	3850
   199  0000                     _RXF2SIDLbits	set	3849
   200  0000                     _RXF2SIDL	set	3849
   201  0000                     _RXF2SIDH	set	3848
   202  0000                     _RXF1EIDL	set	3847
   203  0000                     _RXF1EIDH	set	3846
   204  0000                     _RXF1SIDLbits	set	3845
   205  0000                     _RXF1SIDL	set	3845
   206  0000                     _RXF1SIDH	set	3844
   207  0000                     _RXF0EIDL	set	3843
   208  0000                     _RXF0EIDH	set	3842
   209  0000                     _RXF0SIDLbits	set	3841
   210  0000                     _RXF0SIDL	set	3841
   211  0000                     _RXF0SIDH	set	3840
   212  0000                     _RXM1EIDL	set	3871
   213  0000                     _RXM1EIDH	set	3870
   214  0000                     _RXM1SIDL	set	3869
   215  0000                     _RXM1SIDH	set	3868
   216  0000                     _RXM0EIDL	set	3867
   217  0000                     _RXM0EIDH	set	3866
   218  0000                     _RXM0SIDL	set	3865
   219  0000                     _RXM0SIDH	set	3864
   220  0000                     _RXB1CON	set	3920
   221  0000                     _TXB0CON	set	3904
   222  0000                     _TBLPTR	set	4086
   223  0000                     _TABLAT	set	4085
   224  0000                     _EECON2	set	4007
   225  0000                     _EEDATA	set	4008
   226  0000                     _EECON1bits	set	4006
   227  0000                     _EEADR	set	4009
   228  0000                     _EEADRH	set	4010
   229  0000                     _INTCONbits	set	4082
   230  0000                     _WDTCONbits	set	4049
   231  0000                     _RCONbits	set	4048
   232  0000                     _TRISC	set	3988
   233  0000                     _LATC	set	3979
   234  0000                     _T1CON	set	4045
   235  0000                     _TMR1H	set	4047
   236  0000                     _TMR1L	set	4046
   237  0000                     _LATE	set	3981
   238  0000                     _LATA	set	3977
   239  0000                     _LATB	set	3978
   240  0000                     _LATD	set	3980
   241  0000                     _TRISD	set	3989
   242  0000                     _TRISE	set	3990
   243  0000                     _TRISB	set	3987
   244  0000                     _TRISA	set	3986
   245  0000                     _RXB0DLCbits	set	3941
   246  0000                     _RXB0DLC	set	3941
   247  0000                     _RXB0SIDH	set	3937
   248  0000                     _RXB0SIDLbits	set	3938
   249  0000                     _RXB0SIDL	set	3938
   250  0000                     _RXB0EIDH	set	3939
   251  0000                     _RXB0EIDL	set	3940
   252  0000                     _COMSTATbits	set	3956
   253  0000                     _RXB0CONbits	set	3936
   254  0000                     _BRGCON3bits	set	3954
   255  0000                     _BRGCON2bits	set	3953
   256  0000                     _BRGCON1bits	set	3952
   257  0000                     _CIOCON	set	3955
   258  0000                     _ECANCON	set	3959
   259  0000                     _PIR3	set	4004
   260  0000                     _IPR3	set	4005
   261  0000                     _PIE3	set	4003
   262  0000                     _RXB0CON	set	3936
   263  0000                     _CANSTAT	set	3950
   264  0000                     _CANCON	set	3951
   265  0000                     _RCON	set	4048
   266  0000                     _RXB0D0	set	3942
   267  0000                     _TMR1IF	set	31984
   268  0000                     _TMR1IP	set	31992
   269  0000                     _PEIE	set	32662
   270  0000                     _IPEN	set	32391
   271  0000                     _TMR1ON	set	32360
   272  0000                     _TMR1IE	set	31976
   273  0000                     _IRCF0	set	32412
   274  0000                     _IRCF1	set	32413
   275  0000                     _IRCF2	set	32414
   276                           
   277                           ; #config settings
   278  0000                     
   279                           	psect	cinit
   280  002180                     __pcinit:
   281                           	opt callstack 0
   282  002180                     start_initialization:
   283                           	opt callstack 0
   284  002180                     __initialization:
   285                           	opt callstack 0
   286                           
   287                           ; Initialize objects allocated to COMRAM (13 bytes)
   288                           ; load TBLPTR registers with __pidataCOMRAM
   289  002180  0E1A               	movlw	low __pidataCOMRAM
   290  002182  6EF6               	movwf	tblptrl,c
   291  002184  0E27               	movlw	high __pidataCOMRAM
   292  002186  6EF7               	movwf	tblptrh,c
   293  002188  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   294  00218A  6EF8               	movwf	tblptru,c
   295  00218C  EE00  F04D         	lfsr	0,__pdataCOMRAM
   296  002190  EE10 F00D          	lfsr	1,13
   297  002194                     copy_data0:
   298  002194  0009               	tblrd		*+
   299  002196  CFF5 FFEE          	movff	tablat,postinc0
   300  00219A  50E5               	movf	postdec1,w,c
   301  00219C  50E1               	movf	fsr1l,w,c
   302  00219E  E1FA               	bnz	copy_data0
   303                           
   304                           ; Clear objects allocated to BIGRAM (544 bytes)
   305  0021A0  EE00  F0D4         	lfsr	0,__pbssBIGRAM
   306  0021A4  EE12 F020          	lfsr	1,544
   307  0021A8                     clear_0:
   308  0021A8  6AEE               	clrf	postinc0,c
   309  0021AA  50E5               	movf	postdec1,w,c
   310  0021AC  50E1               	movf	fsr1l,w,c
   311  0021AE  E1FC               	bnz	clear_0
   312  0021B0  50E2               	movf	fsr1h,w,c
   313  0021B2  E1FA               	bnz	clear_0
   314                           
   315                           ; Clear objects allocated to BANK0 (114 bytes)
   316  0021B4  EE00  F060         	lfsr	0,__pbssBANK0
   317  0021B8  0E72               	movlw	114
   318  0021BA                     clear_1:
   319  0021BA  6AEE               	clrf	postinc0,c
   320  0021BC  06E8               	decf	wreg,f,c
   321  0021BE  E1FD               	bnz	clear_1
   322                           
   323                           ; Clear objects allocated to COMRAM (34 bytes)
   324  0021C0  EE00  F02B         	lfsr	0,__pbssCOMRAM
   325  0021C4  0E22               	movlw	34
   326  0021C6                     clear_2:
   327  0021C6  6AEE               	clrf	postinc0,c
   328  0021C8  06E8               	decf	wreg,f,c
   329  0021CA  E1FD               	bnz	clear_2
   330  0021CC                     end_of_initialization:
   331                           	opt callstack 0
   332  0021CC                     __end_of__initialization:
   333                           	opt callstack 0
   334  0021CC  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   335  0021CE  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   336  0021D0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   337  0021D2  6EF8               	movwf	tblptru,c
   338  0021D4  0100               	movlb	0
   339  0021D6  EF33  F00F         	goto	_main	;jump to C main() function
   340                           
   341                           	psect	bssCOMRAM
   342  00002B                     __pbssCOMRAM:
   343                           	opt callstack 0
   344  00002B                     _DaneCan:
   345                           	opt callstack 0
   346  00002B                     	ds	4
   347  00002F                     _nextEEPosition:
   348                           	opt callstack 0
   349  00002F                     	ds	2
   350  000031                     FRAME_SensorExcitationStatus@statwect:
   351                           	opt callstack 0
   352  000031                     	ds	2
   353  000033                     _TMR1_Update_flag:
   354                           	opt callstack 0
   355  000033                     	ds	2
   356  000035                     WritetoEEPROM@GIE_Status:
   357                           	opt callstack 0
   358  000035                     	ds	1
   359  000036                     	ds	1
   360  000037                     	ds	1
   361  000038                     ISR_low@ramkaStanuU8:
   362                           	opt callstack 0
   363  000038                     	ds	1
   364  000039                     	ds	1
   365  00003A                     _LOCK:
   366                           	opt callstack 0
   367  00003A                     	ds	1
   368  00003B                     _neighborsAdress:
   369                           	opt callstack 0
   370  00003B                     	ds	2
   371  00003D                     _ustawieniaKarty:
   372                           	opt callstack 0
   373  00003D                     	ds	2
   374  00003F                     _NeightAdress8:
   375                           	opt callstack 0
   376  00003F                     	ds	2
   377  000041                     _NeightAdress7:
   378                           	opt callstack 0
   379  000041                     	ds	2
   380  000043                     _NeightAdress6:
   381                           	opt callstack 0
   382  000043                     	ds	2
   383  000045                     _NeightAdress5:
   384                           	opt callstack 0
   385  000045                     	ds	2
   386  000047                     _NeightAdress4:
   387                           	opt callstack 0
   388  000047                     	ds	2
   389  000049                     _NeightAdress3:
   390                           	opt callstack 0
   391  000049                     	ds	2
   392  00004B                     _NeightAdress1:
   393                           	opt callstack 0
   394  00004B                     	ds	2
   395                           
   396                           	psect	dataCOMRAM
   397  00004D                     __pdataCOMRAM:
   398                           	opt callstack 0
   399  00004D                     MOC_Frame_Counter@zeta:
   400                           	opt callstack 0
   401  00004D                     	ds	2
   402  00004F                     LED_Update@pos2:
   403                           	opt callstack 0
   404  00004F                     	ds	2
   405  000051                     LED_Update@pos1:
   406                           	opt callstack 0
   407  000051                     	ds	2
   408  000053                     _Fulfillment_Lvl:
   409                           	opt callstack 0
   410  000053                     	ds	2
   411  000055                     LED_Update@Green:
   412                           	opt callstack 0
   413  000055                     	ds	1
   414  000056                     _Init_Data:
   415                           	opt callstack 0
   416  000056                     	ds	2
   417  000058                     _NeightAdress2:
   418                           	opt callstack 0
   419  000058                     	ds	2
   420                           
   421                           	psect	bssBANK0
   422  000060                     __pbssBANK0:
   423                           	opt callstack 0
   424  000060                     _ramkaCanRxKarty:
   425                           	opt callstack 0
   426  000060                     	ds	85
   427  0000B5                     _ramkaCanTxKarty:
   428                           	opt callstack 0
   429  0000B5                     	ds	17
   430  0000C6                     _Flagi:
   431                           	opt callstack 0
   432  0000C6                     	ds	5
   433  0000CB                     _DetectorLedRadar:
   434                           	opt callstack 0
   435  0000CB                     	ds	3
   436  0000CE                     _czujnikiNaMapie:
   437                           	opt callstack 0
   438  0000CE                     	ds	2
   439  0000D0                     _Dane:
   440                           	opt callstack 0
   441  0000D0                     	ds	2
   442                           
   443                           	psect	bssBIGRAM
   444  0000D4                     __pbssBIGRAM:
   445                           	opt callstack 0
   446  0000D4                     _wartosciSasiada:
   447                           	opt callstack 0
   448  0000D4                     	ds	544
   449                           
   450                           	psect	cstackBANK0
   451  0000D2                     __pcstackBANK0:
   452                           	opt callstack 0
   453  0000D2                     main@adr:
   454                           	opt callstack 0
   455                           
   456                           ; 2 bytes @ 0x0
   457  0000D2                     	ds	2
   458                           
   459                           	psect	cstackCOMRAM
   460  000001                     __pcstackCOMRAM:
   461                           	opt callstack 0
   462  000001                     TMR1_Timer_reset@t1L:
   463                           	opt callstack 0
   464  000001                     i1TMR1_Update_flag_Set@a:
   465                           	opt callstack 0
   466                           
   467                           ; 2 bytes @ 0x0
   468  000001                     	ds	1
   469  000002                     TMR1_Timer_reset@t1H:
   470                           	opt callstack 0
   471                           
   472                           ; 1 bytes @ 0x1
   473  000002                     	ds	1
   474  000003                     ??_ISR_low:
   475  000003                     
   476                           ; 1 bytes @ 0x2
   477  000003                     	ds	3
   478  000006                     ??_CAN_Setup:
   479  000006                     ?_FLASH_Read:
   480                           	opt callstack 0
   481  000006                     ?_TMR1_Update_flag_Get:
   482                           	opt callstack 0
   483  000006                     ?_LED_Right:
   484                           	opt callstack 0
   485  000006                     ?_LED_Left:
   486                           	opt callstack 0
   487  000006                     ?_MOC_Wynikowa_wartosc_roznicowa:
   488                           	opt callstack 0
   489  000006                     ?_MOC_Frame_Counter:
   490                           	opt callstack 0
   491  000006                     ?_MOC_Aktualna_Temperatura:
   492                           	opt callstack 0
   493  000006                     ?_MOC_NOTWORK:
   494                           	opt callstack 0
   495  000006                     ?_IsInNeighbors:
   496                           	opt callstack 0
   497  000006                     ?_MOCK_PrzyspieszenieX:
   498                           	opt callstack 0
   499  000006                     ?_MOCK_PrzyspieszenieY:
   500                           	opt callstack 0
   501  000006                     ?_MOCK_PrzyspieszenieZ:
   502                           	opt callstack 0
   503  000006                     ?_MOCK_Klikniecie_Spadek:
   504                           	opt callstack 0
   505  000006                     ?___awdiv:
   506                           	opt callstack 0
   507  000006                     ?___lwdiv:
   508                           	opt callstack 0
   509  000006                     LOCK_Set@k:
   510                           	opt callstack 0
   511  000006                     CAN_MoveBuffIntoFrame@Ram:
   512                           	opt callstack 0
   513  000006                     CAN_GenID@message:
   514                           	opt callstack 0
   515  000006                     LED_Right@a:
   516                           	opt callstack 0
   517  000006                     LED_Left@a:
   518                           	opt callstack 0
   519  000006                     LED_Control@diode:
   520                           	opt callstack 0
   521  000006                     TMR1_Update_flag_Set@a:
   522                           	opt callstack 0
   523  000006                     IsInNeighbors@message_adress:
   524                           	opt callstack 0
   525  000006                     FRAME_ExcitationValue@message:
   526                           	opt callstack 0
   527  000006                     FRAME_ExcitationMultiplier@message:
   528                           	opt callstack 0
   529  000006                     FRAME_AveragingTimes@message:
   530                           	opt callstack 0
   531  000006                     FRAME_AxisStatus@message:
   532                           	opt callstack 0
   533  000006                     FRAME_DataUpdateAndChangeOption@message:
   534                           	opt callstack 0
   535  000006                     FRAME_MapPosition@message:
   536                           	opt callstack 0
   537  000006                     FRAME_SoftwareVersion@message:
   538                           	opt callstack 0
   539  000006                     FRAME_AnalogValue@message:
   540                           	opt callstack 0
   541  000006                     FRAME_PrzypisanieDokarty@message:
   542                           	opt callstack 0
   543  000006                     FRAME_AdressOfNeighbors@message:
   544                           	opt callstack 0
   545  000006                     NVMalloc@size:
   546                           	opt callstack 0
   547  000006                     ReadfromEEPROM@Address:
   548                           	opt callstack 0
   549  000006                     WritetoEEPROM@Address:
   550                           	opt callstack 0
   551  000006                     ___awdiv@dividend:
   552                           	opt callstack 0
   553  000006                     ___lwdiv@dividend:
   554                           	opt callstack 0
   555  000006                     FLASH_Read@addr:
   556                           	opt callstack 0
   557                           
   558                           ; 4 bytes @ 0x5
   559  000006                     	ds	2
   560  000008                     ??_LED_Right:
   561  000008                     ??_FRAME_DataUpdateAndChangeOption:
   562  000008                     ??_FRAME_PrzypisanieDokarty:
   563  000008                     CAN_GenID@frameID:
   564                           	opt callstack 0
   565  000008                     WritetoEEPROM@Data:
   566                           	opt callstack 0
   567  000008                     CAN_MoveBuffIntoFrame@Buf:
   568                           	opt callstack 0
   569  000008                     LED_Left@b:
   570                           	opt callstack 0
   571  000008                     FRAME_SensorExcitationStatus@message:
   572                           	opt callstack 0
   573  000008                     FRAME_AccelerometerStatus@message:
   574                           	opt callstack 0
   575  000008                     FRAME_AnalogValue@set:
   576                           	opt callstack 0
   577  000008                     FRAME_AdressOfNeighbors@nrRamki:
   578                           	opt callstack 0
   579  000008                     NVMalloc@location:
   580                           	opt callstack 0
   581  000008                     NVMRead@dest:
   582                           	opt callstack 0
   583  000008                     ___awdiv@divisor:
   584                           	opt callstack 0
   585  000008                     ___lwdiv@divisor:
   586                           	opt callstack 0
   587                           
   588                           ; 2 bytes @ 0x7
   589  000008                     	ds	1
   590  000009                     ??_CAN_GenID:
   591  000009                     FRAME_ExcitationMultiplier@i:
   592                           	opt callstack 0
   593  000009                     NVMWrite@source:
   594                           	opt callstack 0
   595                           
   596                           ; 2 bytes @ 0x8
   597  000009                     	ds	1
   598  00000A                     ??_FRAME_SensorExcitationStatus:
   599  00000A                     ??_FRAME_AdressOfNeighbors:
   600  00000A                     ??_NVMalloc:
   601  00000A                     CAN_MoveBuffIntoFrame@i:
   602                           	opt callstack 0
   603  00000A                     LED_Control@color:
   604                           	opt callstack 0
   605  00000A                     ___awdiv@counter:
   606                           	opt callstack 0
   607  00000A                     ___lwdiv@counter:
   608                           	opt callstack 0
   609  00000A                     LED_Right@b:
   610                           	opt callstack 0
   611  00000A                     NVMRead@addr:
   612                           	opt callstack 0
   613                           
   614                           ; 2 bytes @ 0x9
   615  00000A                     	ds	1
   616  00000B                     ___awdiv@sign:
   617                           	opt callstack 0
   618  00000B                     CAN_SendFrame@message:
   619                           	opt callstack 0
   620  00000B                     NVMWrite@addr:
   621                           	opt callstack 0
   622  00000B                     ___lwdiv@quotient:
   623                           	opt callstack 0
   624                           
   625                           ; 2 bytes @ 0xA
   626  00000B                     	ds	1
   627  00000C                     FRAME_SensorExcitationStatus@tru:
   628                           	opt callstack 0
   629  00000C                     NVMRead@count:
   630                           	opt callstack 0
   631  00000C                     ___awdiv@quotient:
   632                           	opt callstack 0
   633                           
   634                           ; 2 bytes @ 0xB
   635  00000C                     	ds	1
   636  00000D                     ??_CAN_SendFrame:
   637  00000D                     LED_Light_Pos@pos:
   638                           	opt callstack 0
   639  00000D                     FRAME_Plot@message:
   640                           	opt callstack 0
   641  00000D                     NVMWrite@count:
   642                           	opt callstack 0
   643                           
   644                           ; 2 bytes @ 0xC
   645  00000D                     	ds	1
   646  00000E                     NVMInit@result:
   647                           	opt callstack 0
   648  00000E                     CAN_TakeFrame@message:
   649                           	opt callstack 0
   650  00000E                     FRAME_AdressOfNeighbors@kier:
   651                           	opt callstack 0
   652                           
   653                           ; 2 bytes @ 0xD
   654  00000E                     	ds	1
   655  00000F                     ??_FRAME_Plot:
   656  00000F                     LED_Light_Pos@fulfillment:
   657                           	opt callstack 0
   658  00000F                     FRAME_DeviceReset@message:
   659                           	opt callstack 0
   660                           
   661                           ; 2 bytes @ 0xE
   662  00000F                     	ds	1
   663  000010                     ??_CAN_TakeFrame:
   664                           
   665                           ; 1 bytes @ 0xF
   666  000010                     	ds	1
   667  000011                     LED_Light_Pos@color:
   668                           	opt callstack 0
   669                           
   670                           ; 1 bytes @ 0x10
   671  000011                     	ds	1
   672  000012                     CAN_TakeFrame@tempCON:
   673                           	opt callstack 0
   674  000012                     LED_Light_Pos@LED_array:
   675                           	opt callstack 0
   676  000012                     FRAME_HandleCanFrame@message:
   677                           	opt callstack 0
   678                           
   679                           ; 2 bytes @ 0x11
   680  000012                     	ds	1
   681  000013                     CAN_TakeFrame@k:
   682                           	opt callstack 0
   683                           
   684                           ; 1 bytes @ 0x12
   685  000013                     	ds	1
   686  000014                     ??_FRAME_HandleCanFrame:
   687  000014                     LED_Light_Pos@pos2:
   688                           	opt callstack 0
   689                           
   690                           ; 2 bytes @ 0x13
   691  000014                     	ds	2
   692  000016                     LED_Light_Pos@flage:
   693                           	opt callstack 0
   694                           
   695                           ; 2 bytes @ 0x15
   696  000016                     	ds	1
   697  000017                     FRAME_HandleCanFrame@ident:
   698                           	opt callstack 0
   699                           
   700                           ; 2 bytes @ 0x16
   701  000017                     	ds	1
   702  000018                     
   703                           ; 1 bytes @ 0x17
   704  000018                     	ds	1
   705  000019                     FRAME_HandleCanFrame@identyfikator:
   706                           	opt callstack 0
   707                           
   708                           ; 1 bytes @ 0x18
   709  000019                     	ds	1
   710  00001A                     TRM_DataTransmition@canMessage:
   711                           	opt callstack 0
   712                           
   713                           ; 17 bytes @ 0x19
   714  00001A                     	ds	17
   715  00002B                     
   716                           ; 1 bytes @ 0x2A
   717 ;;
   718 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   719 ;;
   720 ;; *************** function _main *****************
   721 ;; Defined at:
   722 ;;		line 103 in file "main.c"
   723 ;; Parameters:    Size  Location     Type
   724 ;;		None
   725 ;; Auto vars:     Size  Location     Type
   726 ;;  adr             2    0[BANK0 ] int 
   727 ;; Return value:  Size  Location     Type
   728 ;;                  1    wreg      void 
   729 ;; Registers used:
   730 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   731 ;; Tracked objects:
   732 ;;		On entry : 0/0
   733 ;;		On exit  : 0/0
   734 ;;		Unchanged: 0/0
   735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   737 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   739 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   740 ;;Total ram usage:        2 bytes
   741 ;; Hardware stack levels required when called:    9
   742 ;; This function calls:
   743 ;;		_FLASH_Read
   744 ;;		_INI_All
   745 ;;		_LED_Update
   746 ;;		_RADAR_Use
   747 ;;		_TMR1_Update_flag_Get
   748 ;;		_TMR1_Update_flag_Set
   749 ;;		_TRM_DataTransmition
   750 ;; This function is called by:
   751 ;;		Startup code after reset
   752 ;; This function uses a non-reentrant model
   753 ;;
   754                           
   755                           	psect	text0
   756  001E66                     __ptext0:
   757                           	opt callstack 0
   758  001E66                     _main:
   759                           	opt callstack 22
   760                           
   761                           ;main.c: 106: int adr = FLASH_Read(0x200000);
   762                           
   763                           ;incstack = 0
   764  001E66  0E00               	movlw	0
   765  001E68  6E06               	movwf	FLASH_Read@addr,c
   766  001E6A  0E00               	movlw	0
   767  001E6C  6E07               	movwf	FLASH_Read@addr+1,c
   768  001E6E  0E20               	movlw	32
   769  001E70  6E08               	movwf	FLASH_Read@addr+2,c
   770  001E72  0E00               	movlw	0
   771  001E74  6E09               	movwf	FLASH_Read@addr+3,c
   772  001E76  EC6B  F013         	call	_FLASH_Read	;wreg free
   773  001E7A  C006  F0D2         	movff	?_FLASH_Read,main@adr
   774  001E7E  C007  F0D3         	movff	?_FLASH_Read+1,main@adr+1
   775                           
   776                           ;main.c: 107: adr |= FLASH_Read(0x200001)<<8;
   777  001E82  0E01               	movlw	1
   778  001E84  6E06               	movwf	FLASH_Read@addr,c
   779  001E86  0E00               	movlw	0
   780  001E88  6E07               	movwf	FLASH_Read@addr+1,c
   781  001E8A  0E20               	movlw	32
   782  001E8C  6E08               	movwf	FLASH_Read@addr+2,c
   783  001E8E  0E00               	movlw	0
   784  001E90  6E09               	movwf	FLASH_Read@addr+3,c
   785  001E92  EC6B  F013         	call	_FLASH_Read	;wreg free
   786  001E96  C006  F007         	movff	?_FLASH_Read,?_FLASH_Read+1
   787  001E9A  6A06               	clrf	?_FLASH_Read,c
   788  001E9C  5006               	movf	?_FLASH_Read,w,c
   789  001E9E  0100               	movlb	0	; () banked
   790  001EA0  13D2               	iorwf	main@adr& (0+255),f,b
   791  001EA2  5007               	movf	?_FLASH_Read+1,w,c
   792  001EA4  13D3               	iorwf	(main@adr+1)& (0+255),f,b
   793                           
   794                           ; BSR set to: 0
   795                           ;main.c: 117: DaneCan.adresCAN = adr;
   796  001EA6  C0D2  F02D         	movff	main@adr,_DaneCan+2
   797  001EAA  C0D3  F02E         	movff	main@adr+1,_DaneCan+3
   798                           
   799                           ; BSR set to: 0
   800                           ;main.c: 118: INI_All();
   801  001EAE  EC2F  F013         	call	_INI_All	;wreg free
   802                           
   803                           ;main.c: 120: RCON = 0xFF;
   804  001EB2  68D0               	setf	4048,c	;volatile
   805  001EB4                     l4863:
   806                           
   807                           ;main.c: 123: {;main.c: 124: if(DetectorLedRadar.Flags.obsluzWeWy == 1)
   808  001EB4  0100               	movlb	0	; () banked
   809  001EB6  B1CB               	btfsc	_DetectorLedRadar& (0+255),0,b
   810                           
   811                           ; BSR set to: 0
   812                           ;main.c: 125: {;main.c: 126: DetectorLedRadar.Flags.obsluzWeWy = 0;
   813  001EB8  91CB               	bcf	_DetectorLedRadar& (0+255),0,b
   814                           
   815                           ; BSR set to: 0
   816                           ;main.c: 128: };main.c: 130: if(TMR1_Update_flag_Get()==1)
   817  001EBA  ECBD  F013         	call	_TMR1_Update_flag_Get	;wreg free
   818  001EBE  0406               	decf	?_TMR1_Update_flag_Get,w,c
   819  001EC0  1007               	iorwf	?_TMR1_Update_flag_Get+1,w,c
   820  001EC2  A4D8               	btfss	status,2,c
   821  001EC4  D008               	goto	l4873
   822                           
   823                           ;main.c: 131: {;main.c: 132: LED_Update();
   824  001EC6  EC71  F00F         	call	_LED_Update	;wreg free
   825                           
   826                           ;main.c: 133: TMR1_Update_flag_Set(0);
   827  001ECA  0E00               	movlw	0
   828  001ECC  6E07               	movwf	TMR1_Update_flag_Set@a+1,c
   829  001ECE  0E00               	movlw	0
   830  001ED0  6E06               	movwf	TMR1_Update_flag_Set@a,c
   831  001ED2  ECB8  F013         	call	_TMR1_Update_flag_Set	;wreg free
   832  001ED6                     l4873:
   833                           
   834                           ;main.c: 135: };main.c: 138: TRM_DataTransmition();
   835  001ED6  ECBC  F011         	call	_TRM_DataTransmition	;wreg free
   836                           
   837                           ;main.c: 139: RADAR_Use();
   838  001EDA  EC94  F013         	call	_RADAR_Use	;wreg free
   839  001EDE  0004               	clrwdt		;# 
   840                           
   841                           ;main.c: 141: }
   842  001EE0  D7E9               	goto	l4863
   843  001EE2                     __end_of_main:
   844                           	opt callstack 0
   845                           
   846 ;; *************** function _TRM_DataTransmition *****************
   847 ;; Defined at:
   848 ;;		line 19 in file "TRM.c"
   849 ;; Parameters:    Size  Location     Type
   850 ;;		None
   851 ;; Auto vars:     Size  Location     Type
   852 ;;  canMessage     17   25[COMRAM] struct .
   853 ;;  i               1    0        unsigned char 
   854 ;; Return value:  Size  Location     Type
   855 ;;                  1    wreg      void 
   856 ;; Registers used:
   857 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   858 ;; Tracked objects:
   859 ;;		On entry : 0/0
   860 ;;		On exit  : 0/0
   861 ;;		Unchanged: 0/0
   862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   864 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   866 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   867 ;;Total ram usage:       17 bytes
   868 ;; Hardware stack levels used:    1
   869 ;; Hardware stack levels required when called:    8
   870 ;; This function calls:
   871 ;;		_CAN_TakeFrame
   872 ;;		_FRAME_HandleCanFrame
   873 ;; This function is called by:
   874 ;;		_main
   875 ;; This function uses a non-reentrant model
   876 ;;
   877                           
   878                           	psect	text1
   879  002378                     __ptext1:
   880                           	opt callstack 0
   881  002378                     _TRM_DataTransmition:
   882                           	opt callstack 22
   883                           
   884                           ;TRM.c: 21: static BYTE weWyU8 = 0, czujnikWeWyU8 = 0;;TRM.c: 22: BYTE i;;TRM.c: 23: mID
      +                           canMessage;;TRM.c: 26: if(DaneCan.Flags.wyslijRamkeStanu)
   885                           
   886                           ;incstack = 0
   887  002378  A02B               	btfss	_DaneCan,0,c
   888  00237A  D013               	goto	l4839
   889                           
   890                           ;TRM.c: 27: {;TRM.c: 29: canMessage.message_type = 0x02;
   891  00237C  0E02               	movlw	2
   892  00237E  6E1B               	movwf	TRM_DataTransmition@canMessage+1,c
   893                           
   894                           ;TRM.c: 30: canMessage.id.Val = 0;
   895  002380  0E00               	movlw	0
   896  002382  6E1E               	movwf	TRM_DataTransmition@canMessage+4,c
   897  002384  0E00               	movlw	0
   898  002386  6E1F               	movwf	TRM_DataTransmition@canMessage+5,c
   899  002388  0E00               	movlw	0
   900  00238A  6E20               	movwf	TRM_DataTransmition@canMessage+6,c
   901  00238C  0E00               	movlw	0
   902  00238E  6E21               	movwf	TRM_DataTransmition@canMessage+7,c
   903                           
   904                           ;TRM.c: 31: canMessage.id.v[2] = 0x01 *4;
   905  002390  0E04               	movlw	4
   906  002392  6E20               	movwf	TRM_DataTransmition@canMessage+6,c
   907                           
   908                           ;TRM.c: 32: FRAME_HandleCanFrame(&canMessage);
   909  002394  0E1A               	movlw	low TRM_DataTransmition@canMessage
   910  002396  6E12               	movwf	FRAME_HandleCanFrame@message,c
   911  002398  0E00               	movlw	high TRM_DataTransmition@canMessage
   912  00239A  6E13               	movwf	FRAME_HandleCanFrame@message+1,c
   913  00239C  ECC0  F008         	call	_FRAME_HandleCanFrame	;wreg free
   914                           
   915                           ;TRM.c: 49: DaneCan.Flags.wyslijRamkeStanu = 0;
   916  0023A0  902B               	bcf	_DaneCan,0,c
   917  0023A2                     l4839:
   918                           
   919                           ;TRM.c: 56: };TRM.c: 59: if(CAN_TakeFrame(&canMessage))
   920  0023A2  0E1A               	movlw	low TRM_DataTransmition@canMessage
   921  0023A4  6E0E               	movwf	CAN_TakeFrame@message,c
   922  0023A6  0E00               	movlw	high TRM_DataTransmition@canMessage
   923  0023A8  6E0F               	movwf	CAN_TakeFrame@message+1,c
   924  0023AA  EC97  F007         	call	_CAN_TakeFrame	;wreg free
   925  0023AE  0900               	iorlw	0
   926  0023B0  B4D8               	btfsc	status,2,c
   927  0023B2  0012               	return	
   928                           
   929                           ;TRM.c: 64: {;TRM.c: 66: FRAME_HandleCanFrame(&canMessage);
   930  0023B4  0E1A               	movlw	low TRM_DataTransmition@canMessage
   931  0023B6  6E12               	movwf	FRAME_HandleCanFrame@message,c
   932  0023B8  0E00               	movlw	high TRM_DataTransmition@canMessage
   933  0023BA  6E13               	movwf	FRAME_HandleCanFrame@message+1,c
   934  0023BC  ECC0  F008         	call	_FRAME_HandleCanFrame	;wreg free
   935                           
   936                           ;TRM.c: 67: }
   937  0023C0  0012               	return		;funcret
   938  0023C2                     __end_of_TRM_DataTransmition:
   939                           	opt callstack 0
   940                           
   941 ;; *************** function _FRAME_HandleCanFrame *****************
   942 ;; Defined at:
   943 ;;		line 807 in file "FRAME.c"
   944 ;; Parameters:    Size  Location     Type
   945 ;;  message         2   17[COMRAM] PTR struct .
   946 ;;		 -> TRM_DataTransmition@canMessage(17), 
   947 ;; Auto vars:     Size  Location     Type
   948 ;;  ident           2   22[COMRAM] unsigned short 
   949 ;;  alfa            2    0        int 
   950 ;;  identyfikato    1   24[COMRAM] unsigned char 
   951 ;; Return value:  Size  Location     Type
   952 ;;                  1    wreg      void 
   953 ;; Registers used:
   954 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   955 ;; Tracked objects:
   956 ;;		On entry : 0/0
   957 ;;		On exit  : 0/0
   958 ;;		Unchanged: 0/0
   959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   960 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   961 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   962 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   963 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   964 ;;Total ram usage:        8 bytes
   965 ;; Hardware stack levels used:    1
   966 ;; Hardware stack levels required when called:    7
   967 ;; This function calls:
   968 ;;		_CAN_GenID
   969 ;;		_CAN_SendFrame
   970 ;;		_FRAME_AccelerometerStatus
   971 ;;		_FRAME_AdressOfNeighbors
   972 ;;		_FRAME_AnalogValue
   973 ;;		_FRAME_AveragingTimes
   974 ;;		_FRAME_AxisStatus
   975 ;;		_FRAME_DeviceReset
   976 ;;		_FRAME_ExcitationMultiplier
   977 ;;		_FRAME_ExcitationValue
   978 ;;		_FRAME_MapPosition
   979 ;;		_FRAME_Plot
   980 ;;		_FRAME_PrzypisanieDokarty
   981 ;;		_FRAME_SensorExcitationStatus
   982 ;;		_FRAME_SoftwareVersion
   983 ;;		_LED_Error
   984 ;;		___awdiv
   985 ;; This function is called by:
   986 ;;		_TRM_DataTransmition
   987 ;; This function uses a non-reentrant model
   988 ;;
   989                           
   990                           	psect	text2
   991  001180                     __ptext2:
   992                           	opt callstack 0
   993  001180                     _FRAME_HandleCanFrame:
   994                           	opt callstack 22
   995                           
   996                           ;FRAME.c: 809: BYTE identyfikator = (BYTE) message->id.v[2]/4;
   997                           
   998                           ;incstack = 0
   999  001180  EE20 F006          	lfsr	2,6
  1000  001184  5012               	movf	FRAME_HandleCanFrame@message,w,c
  1001  001186  26D9               	addwf	fsr2l,f,c
  1002  001188  5013               	movf	FRAME_HandleCanFrame@message+1,w,c
  1003  00118A  22DA               	addwfc	fsr2h,f,c
  1004  00118C  50DF               	movf	indf2,w,c
  1005  00118E  6E14               	movwf	??_FRAME_HandleCanFrame& (0+255),c
  1006  001190  5014               	movf	??_FRAME_HandleCanFrame,w,c
  1007  001192  6E06               	movwf	___awdiv@dividend,c
  1008  001194  6A07               	clrf	___awdiv@dividend+1,c
  1009  001196  0E00               	movlw	0
  1010  001198  6E09               	movwf	___awdiv@divisor+1,c
  1011  00119A  0E04               	movlw	4
  1012  00119C  6E08               	movwf	___awdiv@divisor,c
  1013  00119E  ECF1  F00E         	call	___awdiv	;wreg free
  1014  0011A2  5006               	movf	?___awdiv,w,c
  1015  0011A4  6E19               	movwf	FRAME_HandleCanFrame@identyfikator,c
  1016                           
  1017                           ;FRAME.c: 812: if(identyfikator != 0x01)
  1018  0011A6  0419               	decf	FRAME_HandleCanFrame@identyfikator,w,c
  1019  0011A8  B4D8               	btfsc	status,2,c
  1020  0011AA  D074               	goto	l4769
  1021                           
  1022                           ;FRAME.c: 813: {;FRAME.c: 814: WORD ident = identyfikator;
  1023  0011AC  C019  F017         	movff	FRAME_HandleCanFrame@identyfikator,FRAME_HandleCanFrame@ident
  1024  0011B0  6A18               	clrf	FRAME_HandleCanFrame@ident+1,c
  1025  0011B2  D070               	goto	l4769
  1026  0011B4                     l4739:
  1027                           
  1028                           ;FRAME.c: 821: FRAME_SensorExcitationStatus(message);
  1029  0011B4  C012  F008         	movff	FRAME_HandleCanFrame@message,FRAME_SensorExcitationStatus@message
  1030  0011B8  C013  F009         	movff	FRAME_HandleCanFrame@message+1,FRAME_SensorExcitationStatus@message+1
  1031  0011BC  EC89  F00C         	call	_FRAME_SensorExcitationStatus	;wreg free
  1032                           
  1033                           ;FRAME.c: 822: break;
  1034  0011C0  D097               	goto	l4771
  1035  0011C2                     l4741:
  1036                           
  1037                           ;FRAME.c: 824: FRAME_AccelerometerStatus(message);
  1038  0011C2  C012  F008         	movff	FRAME_HandleCanFrame@message,FRAME_AccelerometerStatus@message
  1039  0011C6  C013  F009         	movff	FRAME_HandleCanFrame@message+1,FRAME_AccelerometerStatus@message+1
  1040  0011CA  ECEA  F00F         	call	_FRAME_AccelerometerStatus	;wreg free
  1041                           
  1042                           ;FRAME.c: 825: break;
  1043  0011CE  D090               	goto	l4771
  1044  0011D0                     l4743:
  1045                           
  1046                           ;FRAME.c: 827: FRAME_ExcitationValue(message);
  1047  0011D0  C012  F006         	movff	FRAME_HandleCanFrame@message,FRAME_ExcitationValue@message
  1048  0011D4  C013  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_ExcitationValue@message+1
  1049  0011D8  EC1F  F012         	call	_FRAME_ExcitationValue	;wreg free
  1050                           
  1051                           ;FRAME.c: 828: break;
  1052  0011DC  D089               	goto	l4771
  1053  0011DE                     l4745:
  1054                           
  1055                           ;FRAME.c: 830: FRAME_ExcitationMultiplier(message);
  1056  0011DE  C012  F006         	movff	FRAME_HandleCanFrame@message,FRAME_ExcitationMultiplier@message
  1057  0011E2  C013  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_ExcitationMultiplier@message+1
  1058  0011E6  EC6F  F011         	call	_FRAME_ExcitationMultiplier	;wreg free
  1059                           
  1060                           ;FRAME.c: 831: break;
  1061  0011EA  D082               	goto	l4771
  1062  0011EC                     l4747:
  1063                           
  1064                           ;FRAME.c: 833: FRAME_AveragingTimes(message);
  1065  0011EC  C012  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AveragingTimes@message
  1066  0011F0  C013  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AveragingTimes@message+1
  1067  0011F4  EC70  F012         	call	_FRAME_AveragingTimes	;wreg free
  1068                           
  1069                           ;FRAME.c: 834: break;
  1070  0011F8  D07B               	goto	l4771
  1071  0011FA                     l4749:
  1072                           
  1073                           ;FRAME.c: 836: FRAME_AxisStatus(message);
  1074  0011FA  C012  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AxisStatus@message
  1075  0011FE  C013  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AxisStatus@message+1
  1076  001202  EC55  F012         	call	_FRAME_AxisStatus	;wreg free
  1077                           
  1078                           ;FRAME.c: 837: break;
  1079  001206  D074               	goto	l4771
  1080  001208                     l4751:
  1081                           
  1082                           ;FRAME.c: 839: FRAME_DeviceReset(message);
  1083  001208  C012  F00F         	movff	FRAME_HandleCanFrame@message,FRAME_DeviceReset@message
  1084  00120C  C013  F010         	movff	FRAME_HandleCanFrame@message+1,FRAME_DeviceReset@message+1
  1085  001210  ECE5  F00B         	call	_FRAME_DeviceReset	;wreg free
  1086                           
  1087                           ;FRAME.c: 840: break;
  1088  001214  D06D               	goto	l4771
  1089  001216                     l4753:
  1090                           
  1091                           ;FRAME.c: 842: FRAME_Plot(message);
  1092  001216  C012  F00D         	movff	FRAME_HandleCanFrame@message,FRAME_Plot@message
  1093  00121A  C013  F00E         	movff	FRAME_HandleCanFrame@message+1,FRAME_Plot@message+1
  1094  00121E  EC1A  F011         	call	_FRAME_Plot	;wreg free
  1095                           
  1096                           ;FRAME.c: 843: break;
  1097  001222  D066               	goto	l4771
  1098  001224                     l4755:
  1099                           
  1100                           ;FRAME.c: 845: FRAME_MapPosition(message);
  1101  001224  C012  F006         	movff	FRAME_HandleCanFrame@message,FRAME_MapPosition@message
  1102  001228  C013  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_MapPosition@message+1
  1103  00122C  ECD4  F013         	call	_FRAME_MapPosition	;wreg free
  1104                           
  1105                           ;FRAME.c: 846: break;
  1106  001230  D05F               	goto	l4771
  1107  001232                     l4757:
  1108                           
  1109                           ;FRAME.c: 848: FRAME_SoftwareVersion(message);
  1110  001232  C012  F006         	movff	FRAME_HandleCanFrame@message,FRAME_SoftwareVersion@message
  1111  001236  C013  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_SoftwareVersion@message+1
  1112  00123A  EC5F  F010         	call	_FRAME_SoftwareVersion	;wreg free
  1113                           
  1114                           ;FRAME.c: 849: break;
  1115  00123E  D058               	goto	l4771
  1116  001240                     l4759:
  1117                           
  1118                           ;FRAME.c: 851: case 0x0D:;FRAME.c: 852: FRAME_AnalogValue(message, identyfikator - 0x0C)
      +                          ;
  1119  001240  C012  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AnalogValue@message
  1120  001244  C013  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AnalogValue@message+1
  1121  001248  0EF4               	movlw	244
  1122  00124A  2419               	addwf	FRAME_HandleCanFrame@identyfikator,w,c
  1123  00124C  6E08               	movwf	FRAME_AnalogValue@set,c
  1124  00124E  6A09               	clrf	FRAME_AnalogValue@set+1,c
  1125  001250  0EFF               	movlw	255
  1126  001252  2209               	addwfc	FRAME_AnalogValue@set+1,f,c
  1127  001254  ECD5  F013         	call	_FRAME_AnalogValue	;wreg free
  1128                           
  1129                           ;FRAME.c: 853: break;
  1130  001258  D04B               	goto	l4771
  1131  00125A                     l4761:
  1132                           
  1133                           ;FRAME.c: 855: FRAME_PrzypisanieDokarty(message);
  1134  00125A  C012  F006         	movff	FRAME_HandleCanFrame@message,FRAME_PrzypisanieDokarty@message
  1135  00125E  C013  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_PrzypisanieDokarty@message+1
  1136  001262  EC57  F00E         	call	_FRAME_PrzypisanieDokarty	;wreg free
  1137                           
  1138                           ;FRAME.c: 856: break;
  1139  001266  D044               	goto	l4771
  1140  001268                     l4763:
  1141                           
  1142                           ;FRAME.c: 858: FRAME_AdressOfNeighbors(message,0x10);
  1143  001268  C012  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AdressOfNeighbors@message
  1144  00126C  C013  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AdressOfNeighbors@message+1
  1145  001270  0E00               	movlw	0
  1146  001272  6E09               	movwf	FRAME_AdressOfNeighbors@nrRamki+1,c
  1147  001274  0E10               	movlw	16
  1148  001276  6E08               	movwf	FRAME_AdressOfNeighbors@nrRamki,c
  1149  001278  EC31  F006         	call	_FRAME_AdressOfNeighbors	;wreg free
  1150                           
  1151                           ;FRAME.c: 859: break;
  1152  00127C  D039               	goto	l4771
  1153  00127E                     l4765:
  1154                           
  1155                           ;FRAME.c: 861: FRAME_AdressOfNeighbors(message,0x11);
  1156  00127E  C012  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AdressOfNeighbors@message
  1157  001282  C013  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AdressOfNeighbors@message+1
  1158  001286  0E00               	movlw	0
  1159  001288  6E09               	movwf	FRAME_AdressOfNeighbors@nrRamki+1,c
  1160  00128A  0E11               	movlw	17
  1161  00128C  6E08               	movwf	FRAME_AdressOfNeighbors@nrRamki,c
  1162  00128E  EC31  F006         	call	_FRAME_AdressOfNeighbors	;wreg free
  1163                           
  1164                           ;FRAME.c: 862: break;
  1165  001292  D02E               	goto	l4771
  1166  001294                     l4769:
  1167  001294  5019               	movf	FRAME_HandleCanFrame@identyfikator,w,c
  1168                           
  1169                           ; Switch size 1, requested type "simple"
  1170                           ; Number of cases is 15, Range of values is 1 to 17
  1171                           ; switch strategies available:
  1172                           ; Name         Instructions Cycles
  1173                           ; simple_byte           46    24 (average)
  1174                           ;	Chosen strategy is simple_byte
  1175  001296  0A01               	xorlw	1	; case 1
  1176  001298  B4D8               	btfsc	status,2,c
  1177  00129A  D78C               	goto	l4739
  1178  00129C  0A03               	xorlw	3	; case 2
  1179  00129E  B4D8               	btfsc	status,2,c
  1180  0012A0  D790               	goto	l4741
  1181  0012A2  0A01               	xorlw	1	; case 3
  1182  0012A4  B4D8               	btfsc	status,2,c
  1183  0012A6  D794               	goto	l4743
  1184  0012A8  0A07               	xorlw	7	; case 4
  1185  0012AA  B4D8               	btfsc	status,2,c
  1186  0012AC  D798               	goto	l4745
  1187  0012AE  0A01               	xorlw	1	; case 5
  1188  0012B0  B4D8               	btfsc	status,2,c
  1189  0012B2  D79C               	goto	l4747
  1190  0012B4  0A03               	xorlw	3	; case 6
  1191  0012B6  B4D8               	btfsc	status,2,c
  1192  0012B8  D7A0               	goto	l4749
  1193  0012BA  0A01               	xorlw	1	; case 7
  1194  0012BC  B4D8               	btfsc	status,2,c
  1195  0012BE  D7A4               	goto	l4751
  1196  0012C0  0A0E               	xorlw	14	; case 9
  1197  0012C2  B4D8               	btfsc	status,2,c
  1198  0012C4  D7A8               	goto	l4753
  1199  0012C6  0A03               	xorlw	3	; case 10
  1200  0012C8  B4D8               	btfsc	status,2,c
  1201  0012CA  D7AC               	goto	l4755
  1202  0012CC  0A01               	xorlw	1	; case 11
  1203  0012CE  B4D8               	btfsc	status,2,c
  1204  0012D0  D7B0               	goto	l4757
  1205  0012D2  0A07               	xorlw	7	; case 12
  1206  0012D4  B4D8               	btfsc	status,2,c
  1207  0012D6  D7B4               	goto	l4759
  1208  0012D8  0A01               	xorlw	1	; case 13
  1209  0012DA  B4D8               	btfsc	status,2,c
  1210  0012DC  D7B1               	goto	l4759
  1211  0012DE  0A02               	xorlw	2	; case 15
  1212  0012E0  B4D8               	btfsc	status,2,c
  1213  0012E2  D7BB               	goto	l4761
  1214  0012E4  0A1F               	xorlw	31	; case 16
  1215  0012E6  B4D8               	btfsc	status,2,c
  1216  0012E8  D7BF               	goto	l4763
  1217  0012EA  0A01               	xorlw	1	; case 17
  1218  0012EC  B4D8               	btfsc	status,2,c
  1219  0012EE  D7C7               	goto	l4765
  1220  0012F0                     l4771:
  1221                           
  1222                           ;FRAME.c: 871: if(message->message_type == 0x02)
  1223  0012F0  EE20 F001          	lfsr	2,1
  1224  0012F4  5012               	movf	FRAME_HandleCanFrame@message,w,c
  1225  0012F6  26D9               	addwf	fsr2l,f,c
  1226  0012F8  5013               	movf	FRAME_HandleCanFrame@message+1,w,c
  1227  0012FA  22DA               	addwfc	fsr2h,f,c
  1228  0012FC  0E02               	movlw	2
  1229  0012FE  18DE               	xorwf	postinc2,w,c
  1230  001300  A4D8               	btfss	status,2,c
  1231  001302  0012               	return	
  1232                           
  1233                           ;FRAME.c: 872: {;FRAME.c: 874: message->frame_type = 0x03;
  1234  001304  EE20 F002          	lfsr	2,2
  1235  001308  5012               	movf	FRAME_HandleCanFrame@message,w,c
  1236  00130A  26D9               	addwf	fsr2l,f,c
  1237  00130C  5013               	movf	FRAME_HandleCanFrame@message+1,w,c
  1238  00130E  22DA               	addwfc	fsr2h,f,c
  1239  001310  0E03               	movlw	3
  1240  001312  6EDF               	movwf	indf2,c
  1241                           
  1242                           ;FRAME.c: 875: message->message_type = 0x01;
  1243  001314  EE20 F001          	lfsr	2,1
  1244  001318  5012               	movf	FRAME_HandleCanFrame@message,w,c
  1245  00131A  26D9               	addwf	fsr2l,f,c
  1246  00131C  5013               	movf	FRAME_HandleCanFrame@message+1,w,c
  1247  00131E  22DA               	addwfc	fsr2h,f,c
  1248  001320  0E01               	movlw	1
  1249  001322  6EDF               	movwf	indf2,c
  1250                           
  1251                           ;FRAME.c: 876: message->id.Val = 0;
  1252  001324  EE20 F004          	lfsr	2,4
  1253  001328  5012               	movf	FRAME_HandleCanFrame@message,w,c
  1254  00132A  26D9               	addwf	fsr2l,f,c
  1255  00132C  5013               	movf	FRAME_HandleCanFrame@message+1,w,c
  1256  00132E  22DA               	addwfc	fsr2h,f,c
  1257  001330  6ADE               	clrf	postinc2,c
  1258  001332  6ADE               	clrf	postinc2,c
  1259  001334  6ADE               	clrf	postinc2,c
  1260  001336  6ADD               	clrf	postdec2,c
  1261                           
  1262                           ;FRAME.c: 878: message->id.v[2] = identyfikator*4;
  1263  001338  5019               	movf	FRAME_HandleCanFrame@identyfikator,w,c
  1264  00133A  0D04               	mullw	4
  1265  00133C  EE20 F006          	lfsr	2,6
  1266  001340  5012               	movf	FRAME_HandleCanFrame@message,w,c
  1267  001342  26D9               	addwf	fsr2l,f,c
  1268  001344  5013               	movf	FRAME_HandleCanFrame@message+1,w,c
  1269  001346  22DA               	addwfc	fsr2h,f,c
  1270  001348  CFF3 FFDF          	movff	prodl,indf2
  1271                           
  1272                           ;FRAME.c: 879: CAN_GenID(message,identyfikator);
  1273  00134C  C012  F006         	movff	FRAME_HandleCanFrame@message,CAN_GenID@message
  1274  001350  C013  F007         	movff	FRAME_HandleCanFrame@message+1,CAN_GenID@message+1
  1275  001354  C019  F008         	movff	FRAME_HandleCanFrame@identyfikator,CAN_GenID@frameID
  1276  001358  ECAE  F00F         	call	_CAN_GenID	;wreg free
  1277                           
  1278                           ;FRAME.c: 880: CAN_SendFrame(message);
  1279  00135C  C012  F00B         	movff	FRAME_HandleCanFrame@message,CAN_SendFrame@message
  1280  001360  C013  F00C         	movff	FRAME_HandleCanFrame@message+1,CAN_SendFrame@message+1
  1281  001364  EC83  F00A         	call	_CAN_SendFrame	;wreg free
  1282                           
  1283                           ;FRAME.c: 891: while(RXB0CONbits.FILHIT3)
  1284  001368  D004               	goto	l696
  1285  00136A                     l697:
  1286                           
  1287                           ;FRAME.c: 892: {;FRAME.c: 893: if(TXB0CONbits.TXERR == 1){
  1288  00136A  010F               	movlb	15	; () banked
  1289  00136C  B940               	btfsc	64,4,b	;volatile
  1290                           
  1291                           ; BSR set to: 15
  1292                           ;FRAME.c: 894: LED_Error();
  1293  00136E  EC50  F013         	call	_LED_Error	;wreg free
  1294  001372                     l696:
  1295  001372  A660               	btfss	3936,3,c	;volatile
  1296  001374  0012               	return	
  1297  001376  D7F9               	goto	l697
  1298  001378                     __end_of_FRAME_HandleCanFrame:
  1299                           	opt callstack 0
  1300                           
  1301 ;; *************** function _LED_Error *****************
  1302 ;; Defined at:
  1303 ;;		line 49 in file "LED.c"
  1304 ;; Parameters:    Size  Location     Type
  1305 ;;		None
  1306 ;; Auto vars:     Size  Location     Type
  1307 ;;		None
  1308 ;; Return value:  Size  Location     Type
  1309 ;;                  2  366[None  ] unsigned int 
  1310 ;; Registers used:
  1311 ;;		wreg, status,2, status,0, cstack
  1312 ;; Tracked objects:
  1313 ;;		On entry : 0/0
  1314 ;;		On exit  : 0/0
  1315 ;;		Unchanged: 0/0
  1316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1321 ;;Total ram usage:        0 bytes
  1322 ;; Hardware stack levels used:    1
  1323 ;; Hardware stack levels required when called:    4
  1324 ;; This function calls:
  1325 ;;		_LED_Control
  1326 ;; This function is called by:
  1327 ;;		_FRAME_HandleCanFrame
  1328 ;; This function uses a non-reentrant model
  1329 ;;
  1330                           
  1331                           	psect	text3
  1332  0026A0                     __ptext3:
  1333                           	opt callstack 0
  1334  0026A0                     _LED_Error:
  1335                           	opt callstack 24
  1336                           
  1337                           ;LED.c: 51: LED_Control(RED,0b1010101010);
  1338                           
  1339                           ;incstack = 0
  1340  0026A0  0E02               	movlw	2
  1341  0026A2  6E07               	movwf	LED_Control@diode+1,c
  1342  0026A4  0EAA               	movlw	170
  1343  0026A6  6E06               	movwf	LED_Control@diode,c
  1344  0026A8  0E00               	movlw	0
  1345  0026AA  EC3C  F00B         	call	_LED_Control
  1346                           
  1347                           ;LED.c: 52: LED_Control(GREEN,0b0000000000);
  1348  0026AE  0E00               	movlw	0
  1349  0026B0  6E07               	movwf	LED_Control@diode+1,c
  1350  0026B2  0E00               	movlw	0
  1351  0026B4  6E06               	movwf	LED_Control@diode,c
  1352  0026B6  0E01               	movlw	1
  1353  0026B8  EC3C  F00B         	call	_LED_Control
  1354  0026BC  0012               	return		;funcret
  1355  0026BE                     __end_of_LED_Error:
  1356                           	opt callstack 0
  1357                           
  1358 ;; *************** function _FRAME_SoftwareVersion *****************
  1359 ;; Defined at:
  1360 ;;		line 620 in file "FRAME.c"
  1361 ;; Parameters:    Size  Location     Type
  1362 ;;  message         2    5[COMRAM] PTR struct .
  1363 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1364 ;; Auto vars:     Size  Location     Type
  1365 ;;		None
  1366 ;; Return value:  Size  Location     Type
  1367 ;;                  1    wreg      void 
  1368 ;; Registers used:
  1369 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1370 ;; Tracked objects:
  1371 ;;		On entry : 0/0
  1372 ;;		On exit  : 0/0
  1373 ;;		Unchanged: 0/0
  1374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1375 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1377 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1378 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1379 ;;Total ram usage:        3 bytes
  1380 ;; Hardware stack levels used:    1
  1381 ;; Hardware stack levels required when called:    3
  1382 ;; This function calls:
  1383 ;;		Nothing
  1384 ;; This function is called by:
  1385 ;;		_FRAME_HandleCanFrame
  1386 ;; This function uses a non-reentrant model
  1387 ;;
  1388                           
  1389                           	psect	text4
  1390  0020BE                     __ptext4:
  1391                           	opt callstack 0
  1392  0020BE                     _FRAME_SoftwareVersion:
  1393                           	opt callstack 25
  1394                           
  1395                           ;FRAME.c: 623: if(message->message_type == 0x02)
  1396                           
  1397                           ;incstack = 0
  1398  0020BE  EE20 F001          	lfsr	2,1
  1399  0020C2  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1400  0020C4  26D9               	addwf	fsr2l,f,c
  1401  0020C6  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1402  0020C8  22DA               	addwfc	fsr2h,f,c
  1403  0020CA  0E02               	movlw	2
  1404  0020CC  18DE               	xorwf	postinc2,w,c
  1405  0020CE  A4D8               	btfss	status,2,c
  1406  0020D0  0012               	return	
  1407                           
  1408                           ;FRAME.c: 624: {;FRAME.c: 625: message->data_length = 4;
  1409  0020D2  EE20 F010          	lfsr	2,16
  1410  0020D6  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1411  0020D8  26D9               	addwf	fsr2l,f,c
  1412  0020DA  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1413  0020DC  22DA               	addwfc	fsr2h,f,c
  1414  0020DE  0E04               	movlw	4
  1415  0020E0  6EDF               	movwf	indf2,c
  1416                           
  1417                           ;FRAME.c: 626: message->data[0] = (unsigned char)(Dane->wersjaOprogramowaniaU16 >> 8);
  1418  0020E2  EE20 F008          	lfsr	2,8
  1419  0020E6  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1420  0020E8  26D9               	addwf	fsr2l,f,c
  1421  0020EA  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1422  0020EC  22DA               	addwfc	fsr2h,f,c
  1423  0020EE  5005               	movf	5,w,c
  1424  0020F0  6EDF               	movwf	indf2,c
  1425                           
  1426                           ;FRAME.c: 627: message->data[1] = (unsigned char)Dane->wersjaOprogramowaniaU16;
  1427  0020F2  EE20 F009          	lfsr	2,9
  1428  0020F6  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1429  0020F8  26D9               	addwf	fsr2l,f,c
  1430  0020FA  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1431  0020FC  22DA               	addwfc	fsr2h,f,c
  1432  0020FE  C004 FFDF          	movff	4,indf2
  1433                           
  1434                           ;FRAME.c: 628: message->data[2] = (unsigned char)(Dane->wersjaSprzetuU16 >> 8);
  1435  002102  EE20 F00A          	lfsr	2,10
  1436  002106  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1437  002108  26D9               	addwf	fsr2l,f,c
  1438  00210A  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1439  00210C  22DA               	addwfc	fsr2h,f,c
  1440  00210E  500B               	movf	11,w,c
  1441  002110  6EDF               	movwf	indf2,c
  1442                           
  1443                           ;FRAME.c: 629: message->data[3] = (unsigned char)Dane->wersjaSprzetuU16;
  1444  002112  EE20 F00B          	lfsr	2,11
  1445  002116  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1446  002118  26D9               	addwf	fsr2l,f,c
  1447  00211A  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1448  00211C  22DA               	addwfc	fsr2h,f,c
  1449  00211E  C00A FFDF          	movff	10,indf2
  1450                           
  1451                           ;FRAME.c: 630: }
  1452  002122  0012               	return		;funcret
  1453  002124                     __end_of_FRAME_SoftwareVersion:
  1454                           	opt callstack 0
  1455                           
  1456 ;; *************** function _FRAME_SensorExcitationStatus *****************
  1457 ;; Defined at:
  1458 ;;		line 55 in file "FRAME.c"
  1459 ;; Parameters:    Size  Location     Type
  1460 ;;  message         2    7[COMRAM] PTR struct .
  1461 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1462 ;; Auto vars:     Size  Location     Type
  1463 ;;  tru             2   11[COMRAM] unsigned int 
  1464 ;; Return value:  Size  Location     Type
  1465 ;;                  1    wreg      void 
  1466 ;; Registers used:
  1467 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1468 ;; Tracked objects:
  1469 ;;		On entry : 0/0
  1470 ;;		On exit  : 0/0
  1471 ;;		Unchanged: 0/0
  1472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1473 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1474 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1475 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1476 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1477 ;;Total ram usage:        6 bytes
  1478 ;; Hardware stack levels used:    1
  1479 ;; Hardware stack levels required when called:    4
  1480 ;; This function calls:
  1481 ;;		_IsInNeighbors
  1482 ;;		_LOCK_Get
  1483 ;;		_LOCK_Set
  1484 ;;		_MOC_Aktualna_Temperatura
  1485 ;;		_MOC_Frame_Counter
  1486 ;;		_MOC_NOTWORK
  1487 ;;		_MOC_Wynikowa_wartosc_roznicowa
  1488 ;; This function is called by:
  1489 ;;		_FRAME_HandleCanFrame
  1490 ;; This function uses a non-reentrant model
  1491 ;;
  1492                           
  1493                           	psect	text5
  1494  001912                     __ptext5:
  1495                           	opt callstack 0
  1496  001912                     _FRAME_SensorExcitationStatus:
  1497                           	opt callstack 24
  1498                           
  1499                           ;FRAME.c: 58: static UINT statwect = 0b00000000;;FRAME.c: 59: if(message->message_type =
      +                          = 0x02)
  1500                           
  1501                           ;incstack = 0
  1502  001912  EE20 F001          	lfsr	2,1
  1503  001916  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1504  001918  26D9               	addwf	fsr2l,f,c
  1505  00191A  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1506  00191C  22DA               	addwfc	fsr2h,f,c
  1507  00191E  0E02               	movlw	2
  1508  001920  18DE               	xorwf	postinc2,w,c
  1509  001922  A4D8               	btfss	status,2,c
  1510  001924  D047               	goto	l4347
  1511                           
  1512                           ;FRAME.c: 60: {;FRAME.c: 61: message->data_length = 6;
  1513  001926  EE20 F010          	lfsr	2,16
  1514  00192A  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1515  00192C  26D9               	addwf	fsr2l,f,c
  1516  00192E  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1517  001930  22DA               	addwfc	fsr2h,f,c
  1518  001932  0E06               	movlw	6
  1519  001934  6EDF               	movwf	indf2,c
  1520                           
  1521                           ;FRAME.c: 67: message->data[0] = LOCK_Get();
  1522  001936  EE20 F008          	lfsr	2,8
  1523  00193A  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1524  00193C  26D9               	addwf	fsr2l,f,c
  1525  00193E  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1526  001940  22DA               	addwfc	fsr2h,f,c
  1527  001942  ECD2  F013         	call	_LOCK_Get	;wreg free
  1528  001946  6EDF               	movwf	indf2,c
  1529                           
  1530                           ;FRAME.c: 68: message->data[1] = MOC_Wynikowa_wartosc_roznicowa() >> 8 ;
  1531  001948  EE20 F009          	lfsr	2,9
  1532  00194C  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1533  00194E  26D9               	addwf	fsr2l,f,c
  1534  001950  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1535  001952  22DA               	addwfc	fsr2h,f,c
  1536  001954  EC9A  F013         	call	_MOC_Wynikowa_wartosc_roznicowa	;wreg free
  1537  001958  C007  F006         	movff	?_MOC_Wynikowa_wartosc_roznicowa+1,?_MOC_Wynikowa_wartosc_roznicowa
  1538  00195C  6A07               	clrf	?_MOC_Wynikowa_wartosc_roznicowa+1,c
  1539  00195E  5006               	movf	?_MOC_Wynikowa_wartosc_roznicowa,w,c
  1540  001960  6EDF               	movwf	indf2,c
  1541                           
  1542                           ;FRAME.c: 69: message->data[2] = MOC_Wynikowa_wartosc_roznicowa() & 0x00FF;
  1543  001962  EE20 F00A          	lfsr	2,10
  1544  001966  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1545  001968  26D9               	addwf	fsr2l,f,c
  1546  00196A  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1547  00196C  22DA               	addwfc	fsr2h,f,c
  1548  00196E  EC9A  F013         	call	_MOC_Wynikowa_wartosc_roznicowa	;wreg free
  1549  001972  5006               	movf	?_MOC_Wynikowa_wartosc_roznicowa,w,c
  1550  001974  6EDF               	movwf	indf2,c
  1551                           
  1552                           ;FRAME.c: 70: message->data[3] = MOC_Frame_Counter();
  1553  001976  EE20 F00B          	lfsr	2,11
  1554  00197A  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1555  00197C  26D9               	addwf	fsr2l,f,c
  1556  00197E  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1557  001980  22DA               	addwfc	fsr2h,f,c
  1558  001982  EC7F  F013         	call	_MOC_Frame_Counter	;wreg free
  1559  001986  5006               	movf	?_MOC_Frame_Counter,w,c
  1560  001988  6EDF               	movwf	indf2,c
  1561                           
  1562                           ;FRAME.c: 71: message->data[4] = MOC_Aktualna_Temperatura();
  1563  00198A  EE20 F00C          	lfsr	2,12
  1564  00198E  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1565  001990  26D9               	addwf	fsr2l,f,c
  1566  001992  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1567  001994  22DA               	addwfc	fsr2h,f,c
  1568  001996  EC9F  F013         	call	_MOC_Aktualna_Temperatura	;wreg free
  1569  00199A  5006               	movf	?_MOC_Aktualna_Temperatura,w,c
  1570  00199C  6EDF               	movwf	indf2,c
  1571                           
  1572                           ;FRAME.c: 72: message->data[5] = MOC_NOTWORK();
  1573  00199E  EE20 F00D          	lfsr	2,13
  1574  0019A2  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1575  0019A4  26D9               	addwf	fsr2l,f,c
  1576  0019A6  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1577  0019A8  22DA               	addwfc	fsr2h,f,c
  1578  0019AA  ECC7  F013         	call	_MOC_NOTWORK	;wreg free
  1579  0019AE  5006               	movf	?_MOC_NOTWORK,w,c
  1580  0019B0  6EDF               	movwf	indf2,c
  1581                           
  1582                           ;FRAME.c: 82: }
  1583  0019B2  0012               	return	
  1584  0019B4                     l4347:
  1585                           
  1586                           ;FRAME.c: 83: else;FRAME.c: 84: {;FRAME.c: 86: UINT tru = IsInNeighbors(message->id.w[0]
      +                          );
  1587  0019B4  EE20 F004          	lfsr	2,4
  1588  0019B8  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1589  0019BA  26D9               	addwf	fsr2l,f,c
  1590  0019BC  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1591  0019BE  22DA               	addwfc	fsr2h,f,c
  1592  0019C0  CFDE F006          	movff	postinc2,IsInNeighbors@message_adress
  1593  0019C4  CFDD F007          	movff	postdec2,IsInNeighbors@message_adress+1
  1594  0019C8  EC9A  F00D         	call	_IsInNeighbors	;wreg free
  1595  0019CC  C006  F00C         	movff	?_IsInNeighbors,FRAME_SensorExcitationStatus@tru
  1596  0019D0  C007  F00D         	movff	?_IsInNeighbors+1,FRAME_SensorExcitationStatus@tru+1
  1597                           
  1598                           ;FRAME.c: 89: if(message->data[0]==0)
  1599  0019D4  EE20 F008          	lfsr	2,8
  1600  0019D8  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1601  0019DA  26D9               	addwf	fsr2l,f,c
  1602  0019DC  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1603  0019DE  22DA               	addwfc	fsr2h,f,c
  1604  0019E0  50DF               	movf	indf2,w,c
  1605  0019E2  A4D8               	btfss	status,2,c
  1606  0019E4  D00A               	goto	l4353
  1607                           
  1608                           ;FRAME.c: 90: {;FRAME.c: 92: statwect = statwect &( ~tru );
  1609  0019E6  1C0C               	comf	FRAME_SensorExcitationStatus@tru,w,c
  1610  0019E8  6E0A               	movwf	??_FRAME_SensorExcitationStatus& (0+255),c
  1611  0019EA  1C0D               	comf	FRAME_SensorExcitationStatus@tru+1,w,c
  1612  0019EC  6E0B               	movwf	(??_FRAME_SensorExcitationStatus+1)& (0+255),c
  1613  0019EE  5031               	movf	FRAME_SensorExcitationStatus@statwect,w,c
  1614  0019F0  140A               	andwf	??_FRAME_SensorExcitationStatus,w,c
  1615  0019F2  6E31               	movwf	FRAME_SensorExcitationStatus@statwect,c
  1616  0019F4  5032               	movf	FRAME_SensorExcitationStatus@statwect+1,w,c
  1617  0019F6  140B               	andwf	??_FRAME_SensorExcitationStatus+1,w,c
  1618  0019F8  D005               	goto	L1
  1619  0019FA                     l4353:
  1620                           
  1621                           ;FRAME.c: 94: else;FRAME.c: 95: {;FRAME.c: 96: statwect = statwect| tru;
  1622  0019FA  500C               	movf	FRAME_SensorExcitationStatus@tru,w,c
  1623  0019FC  1031               	iorwf	FRAME_SensorExcitationStatus@statwect,w,c
  1624  0019FE  6E31               	movwf	FRAME_SensorExcitationStatus@statwect,c
  1625  001A00  500D               	movf	FRAME_SensorExcitationStatus@tru+1,w,c
  1626  001A02  1032               	iorwf	FRAME_SensorExcitationStatus@statwect+1,w,c
  1627  001A04                     L1:
  1628  001A04  6E32               	movwf	FRAME_SensorExcitationStatus@statwect+1,c
  1629                           
  1630                           ;FRAME.c: 97: };FRAME.c: 99: if(statwect>0)
  1631  001A06  5031               	movf	FRAME_SensorExcitationStatus@statwect,w,c
  1632  001A08  1032               	iorwf	FRAME_SensorExcitationStatus@statwect+1,w,c
  1633  001A0A  B4D8               	btfsc	status,2,c
  1634  001A0C  D00A               	goto	l4361
  1635                           
  1636                           ;FRAME.c: 100: {;FRAME.c: 101: if(1 != LOCK_Get())
  1637  001A0E  ECD2  F013         	call	_LOCK_Get	;wreg free
  1638  001A12  06E8               	decf	wreg,f,c
  1639  001A14  B4D8               	btfsc	status,2,c
  1640  001A16  0012               	return	
  1641                           
  1642                           ;FRAME.c: 102: {;FRAME.c: 103: DaneCan.Flags.wyslijRamkeStanu = 1;
  1643  001A18  802B               	bsf	_DaneCan,0,c
  1644                           
  1645                           ;FRAME.c: 104: LOCK_Set(1);
  1646  001A1A  0E01               	movlw	1
  1647  001A1C  ECCB  F013         	call	_LOCK_Set
  1648  001A20  0012               	return	
  1649  001A22                     l4361:
  1650                           
  1651                           ;FRAME.c: 108: else;FRAME.c: 109: {;FRAME.c: 111: if(1 == LOCK_Get())
  1652  001A22  ECD2  F013         	call	_LOCK_Get	;wreg free
  1653  001A26  06E8               	decf	wreg,f,c
  1654  001A28  A4D8               	btfss	status,2,c
  1655  001A2A  0012               	return	
  1656                           
  1657                           ;FRAME.c: 112: {;FRAME.c: 113: DaneCan.Flags.wyslijRamkeStanu = 1;
  1658  001A2C  802B               	bsf	_DaneCan,0,c
  1659                           
  1660                           ;FRAME.c: 114: LOCK_Set(0);
  1661  001A2E  0E00               	movlw	0
  1662  001A30  ECCB  F013         	call	_LOCK_Set
  1663  001A34  0012               	return		;funcret
  1664  001A36                     __end_of_FRAME_SensorExcitationStatus:
  1665                           	opt callstack 0
  1666                           
  1667 ;; *************** function _MOC_Wynikowa_wartosc_roznicowa *****************
  1668 ;; Defined at:
  1669 ;;		line 34 in file "MOC_Funct.c"
  1670 ;; Parameters:    Size  Location     Type
  1671 ;;		None
  1672 ;; Auto vars:     Size  Location     Type
  1673 ;;		None
  1674 ;; Return value:  Size  Location     Type
  1675 ;;                  2    5[COMRAM] unsigned int 
  1676 ;; Registers used:
  1677 ;;		wreg, status,2
  1678 ;; Tracked objects:
  1679 ;;		On entry : 0/0
  1680 ;;		On exit  : 0/0
  1681 ;;		Unchanged: 0/0
  1682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1683 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1686 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1687 ;;Total ram usage:        2 bytes
  1688 ;; Hardware stack levels used:    1
  1689 ;; Hardware stack levels required when called:    3
  1690 ;; This function calls:
  1691 ;;		Nothing
  1692 ;; This function is called by:
  1693 ;;		_FRAME_SensorExcitationStatus
  1694 ;; This function uses a non-reentrant model
  1695 ;;
  1696                           
  1697                           	psect	text6
  1698  002734                     __ptext6:
  1699                           	opt callstack 0
  1700  002734                     _MOC_Wynikowa_wartosc_roznicowa:
  1701                           	opt callstack 24
  1702                           
  1703                           ;MOC_Funct.c: 36: return 0x0220;
  1704                           
  1705                           ;incstack = 0
  1706  002734  0E02               	movlw	2
  1707  002736  6E07               	movwf	?_MOC_Wynikowa_wartosc_roznicowa+1,c
  1708  002738  0E20               	movlw	32
  1709  00273A  6E06               	movwf	?_MOC_Wynikowa_wartosc_roznicowa,c
  1710  00273C  0012               	return		;funcret
  1711  00273E                     __end_of_MOC_Wynikowa_wartosc_roznicowa:
  1712                           	opt callstack 0
  1713                           
  1714 ;; *************** function _MOC_NOTWORK *****************
  1715 ;; Defined at:
  1716 ;;		line 48 in file "MOC_Funct.c"
  1717 ;; Parameters:    Size  Location     Type
  1718 ;;		None
  1719 ;; Auto vars:     Size  Location     Type
  1720 ;;		None
  1721 ;; Return value:  Size  Location     Type
  1722 ;;                  2    5[COMRAM] unsigned int 
  1723 ;; Registers used:
  1724 ;;		wreg, status,2
  1725 ;; Tracked objects:
  1726 ;;		On entry : 0/0
  1727 ;;		On exit  : 0/0
  1728 ;;		Unchanged: 0/0
  1729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1730 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1733 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1734 ;;Total ram usage:        2 bytes
  1735 ;; Hardware stack levels used:    1
  1736 ;; Hardware stack levels required when called:    3
  1737 ;; This function calls:
  1738 ;;		Nothing
  1739 ;; This function is called by:
  1740 ;;		_FRAME_SensorExcitationStatus
  1741 ;; This function uses a non-reentrant model
  1742 ;;
  1743                           
  1744                           	psect	text7
  1745  00278E                     __ptext7:
  1746                           	opt callstack 0
  1747  00278E                     _MOC_NOTWORK:
  1748                           	opt callstack 24
  1749                           
  1750                           ;MOC_Funct.c: 50: return 0xFF;
  1751                           
  1752                           ;incstack = 0
  1753  00278E  0E00               	movlw	0
  1754  002790  6E07               	movwf	?_MOC_NOTWORK+1,c
  1755  002792  6806               	setf	?_MOC_NOTWORK,c
  1756  002794  0012               	return		;funcret
  1757  002796                     __end_of_MOC_NOTWORK:
  1758                           	opt callstack 0
  1759                           
  1760 ;; *************** function _MOC_Frame_Counter *****************
  1761 ;; Defined at:
  1762 ;;		line 39 in file "MOC_Funct.c"
  1763 ;; Parameters:    Size  Location     Type
  1764 ;;		None
  1765 ;; Auto vars:     Size  Location     Type
  1766 ;;		None
  1767 ;; Return value:  Size  Location     Type
  1768 ;;                  2    5[COMRAM] unsigned int 
  1769 ;; Registers used:
  1770 ;;		wreg, status,2, status,0
  1771 ;; Tracked objects:
  1772 ;;		On entry : 0/0
  1773 ;;		On exit  : 0/0
  1774 ;;		Unchanged: 0/0
  1775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1776 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1779 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1780 ;;Total ram usage:        2 bytes
  1781 ;; Hardware stack levels used:    1
  1782 ;; Hardware stack levels required when called:    3
  1783 ;; This function calls:
  1784 ;;		Nothing
  1785 ;; This function is called by:
  1786 ;;		_FRAME_SensorExcitationStatus
  1787 ;; This function uses a non-reentrant model
  1788 ;;
  1789                           
  1790                           	psect	text8
  1791  0026FE                     __ptext8:
  1792                           	opt callstack 0
  1793  0026FE                     _MOC_Frame_Counter:
  1794                           	opt callstack 24
  1795                           
  1796                           ;MOC_Funct.c: 41: static UINT zeta = 0x11;;MOC_Funct.c: 42: return zeta++;
  1797                           
  1798                           ;incstack = 0
  1799  0026FE  504D               	movf	MOC_Frame_Counter@zeta,w,c
  1800  002700  6E06               	movwf	?_MOC_Frame_Counter,c
  1801  002702  504E               	movf	MOC_Frame_Counter@zeta+1,w,c
  1802  002704  6E07               	movwf	?_MOC_Frame_Counter+1,c
  1803  002706  4A4D               	infsnz	MOC_Frame_Counter@zeta,f,c
  1804  002708  2A4E               	incf	MOC_Frame_Counter@zeta+1,f,c
  1805  00270A  0012               	return		;funcret
  1806  00270C                     __end_of_MOC_Frame_Counter:
  1807                           	opt callstack 0
  1808                           
  1809 ;; *************** function _MOC_Aktualna_Temperatura *****************
  1810 ;; Defined at:
  1811 ;;		line 44 in file "MOC_Funct.c"
  1812 ;; Parameters:    Size  Location     Type
  1813 ;;		None
  1814 ;; Auto vars:     Size  Location     Type
  1815 ;;		None
  1816 ;; Return value:  Size  Location     Type
  1817 ;;                  2    5[COMRAM] unsigned int 
  1818 ;; Registers used:
  1819 ;;		wreg, status,2
  1820 ;; Tracked objects:
  1821 ;;		On entry : 0/0
  1822 ;;		On exit  : 0/0
  1823 ;;		Unchanged: 0/0
  1824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1825 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1828 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1829 ;;Total ram usage:        2 bytes
  1830 ;; Hardware stack levels used:    1
  1831 ;; Hardware stack levels required when called:    3
  1832 ;; This function calls:
  1833 ;;		Nothing
  1834 ;; This function is called by:
  1835 ;;		_FRAME_SensorExcitationStatus
  1836 ;; This function uses a non-reentrant model
  1837 ;;
  1838                           
  1839                           	psect	text9
  1840  00273E                     __ptext9:
  1841                           	opt callstack 0
  1842  00273E                     _MOC_Aktualna_Temperatura:
  1843                           	opt callstack 24
  1844                           
  1845                           ;MOC_Funct.c: 46: return 0x1B;
  1846                           
  1847                           ;incstack = 0
  1848  00273E  0E00               	movlw	0
  1849  002740  6E07               	movwf	?_MOC_Aktualna_Temperatura+1,c
  1850  002742  0E1B               	movlw	27
  1851  002744  6E06               	movwf	?_MOC_Aktualna_Temperatura,c
  1852  002746  0012               	return		;funcret
  1853  002748                     __end_of_MOC_Aktualna_Temperatura:
  1854                           	opt callstack 0
  1855                           
  1856 ;; *************** function _LOCK_Set *****************
  1857 ;; Defined at:
  1858 ;;		line 84 in file "LED.c"
  1859 ;; Parameters:    Size  Location     Type
  1860 ;;  k               1    wreg     unsigned char 
  1861 ;; Auto vars:     Size  Location     Type
  1862 ;;  k               1    5[COMRAM] unsigned char 
  1863 ;; Return value:  Size  Location     Type
  1864 ;;                  1    wreg      void 
  1865 ;; Registers used:
  1866 ;;		wreg
  1867 ;; Tracked objects:
  1868 ;;		On entry : 0/0
  1869 ;;		On exit  : 0/0
  1870 ;;		Unchanged: 0/0
  1871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1873 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1875 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1876 ;;Total ram usage:        1 bytes
  1877 ;; Hardware stack levels used:    1
  1878 ;; Hardware stack levels required when called:    3
  1879 ;; This function calls:
  1880 ;;		Nothing
  1881 ;; This function is called by:
  1882 ;;		_FRAME_SensorExcitationStatus
  1883 ;; This function uses a non-reentrant model
  1884 ;;
  1885                           
  1886                           	psect	text10
  1887  002796                     __ptext10:
  1888                           	opt callstack 0
  1889  002796                     _LOCK_Set:
  1890                           	opt callstack 24
  1891                           
  1892                           ;incstack = 0
  1893                           ;LOCK_Set@k stored from wreg
  1894  002796  6E06               	movwf	LOCK_Set@k,c
  1895                           
  1896                           ;LED.c: 86: LOCK = k;
  1897  002798  C006  F03A         	movff	LOCK_Set@k,_LOCK
  1898  00279C  0012               	return		;funcret
  1899  00279E                     __end_of_LOCK_Set:
  1900                           	opt callstack 0
  1901                           
  1902 ;; *************** function _LOCK_Get *****************
  1903 ;; Defined at:
  1904 ;;		line 100 in file "LED.c"
  1905 ;; Parameters:    Size  Location     Type
  1906 ;;		None
  1907 ;; Auto vars:     Size  Location     Type
  1908 ;;		None
  1909 ;; Return value:  Size  Location     Type
  1910 ;;                  1    wreg      unsigned char 
  1911 ;; Registers used:
  1912 ;;		wreg, status,2
  1913 ;; Tracked objects:
  1914 ;;		On entry : 0/0
  1915 ;;		On exit  : 0/0
  1916 ;;		Unchanged: 0/0
  1917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1921 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1922 ;;Total ram usage:        0 bytes
  1923 ;; Hardware stack levels used:    1
  1924 ;; Hardware stack levels required when called:    3
  1925 ;; This function calls:
  1926 ;;		Nothing
  1927 ;; This function is called by:
  1928 ;;		_FRAME_SensorExcitationStatus
  1929 ;; This function uses a non-reentrant model
  1930 ;;
  1931                           
  1932                           	psect	text11
  1933  0027A4                     __ptext11:
  1934                           	opt callstack 0
  1935  0027A4                     _LOCK_Get:
  1936                           	opt callstack 24
  1937                           
  1938                           ;LED.c: 102: return LOCK;
  1939                           
  1940                           ;incstack = 0
  1941  0027A4  503A               	movf	_LOCK,w,c
  1942  0027A6  0012               	return		;funcret
  1943  0027A8                     __end_of_LOCK_Get:
  1944                           	opt callstack 0
  1945                           
  1946 ;; *************** function _IsInNeighbors *****************
  1947 ;; Defined at:
  1948 ;;		line 133 in file "FRAME.c"
  1949 ;; Parameters:    Size  Location     Type
  1950 ;;  message_adre    2    5[COMRAM] unsigned int 
  1951 ;; Auto vars:     Size  Location     Type
  1952 ;;  i               2    0        unsigned short 
  1953 ;; Return value:  Size  Location     Type
  1954 ;;                  2    5[COMRAM] unsigned int 
  1955 ;; Registers used:
  1956 ;;		wreg, status,2, status,0
  1957 ;; Tracked objects:
  1958 ;;		On entry : 0/0
  1959 ;;		On exit  : 0/0
  1960 ;;		Unchanged: 0/0
  1961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1962 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1965 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1966 ;;Total ram usage:        2 bytes
  1967 ;; Hardware stack levels used:    1
  1968 ;; Hardware stack levels required when called:    3
  1969 ;; This function calls:
  1970 ;;		Nothing
  1971 ;; This function is called by:
  1972 ;;		_FRAME_SensorExcitationStatus
  1973 ;; This function uses a non-reentrant model
  1974 ;;
  1975                           
  1976                           	psect	text12
  1977  001B34                     __ptext12:
  1978                           	opt callstack 0
  1979  001B34                     _IsInNeighbors:
  1980                           	opt callstack 24
  1981                           
  1982                           ;FRAME.c: 135: WORD i;;FRAME.c: 137: if(NeightAdress1==message_adress)
  1983                           
  1984                           ;incstack = 0
  1985  001B34  5006               	movf	IsInNeighbors@message_adress,w,c
  1986  001B36  184B               	xorwf	_NeightAdress1,w,c	;volatile
  1987  001B38  E109               	bnz	l4109
  1988  001B3A  5007               	movf	IsInNeighbors@message_adress+1,w,c
  1989  001B3C  184C               	xorwf	_NeightAdress1+1,w,c	;volatile
  1990  001B3E  A4D8               	btfss	status,2,c
  1991  001B40  D005               	goto	l4109
  1992                           
  1993                           ;FRAME.c: 138: {;FRAME.c: 139: return 0b1;
  1994  001B42  0E00               	movlw	0
  1995  001B44  6E07               	movwf	?_IsInNeighbors+1,c
  1996  001B46  0E01               	movlw	1
  1997  001B48  6E06               	movwf	?_IsInNeighbors,c
  1998  001B4A  0012               	return	
  1999  001B4C                     l4109:
  2000                           
  2001                           ;FRAME.c: 140: };FRAME.c: 141: if(NeightAdress2==message_adress)
  2002  001B4C  5006               	movf	IsInNeighbors@message_adress,w,c
  2003  001B4E  1858               	xorwf	_NeightAdress2,w,c	;volatile
  2004  001B50  E109               	bnz	l4115
  2005  001B52  5007               	movf	IsInNeighbors@message_adress+1,w,c
  2006  001B54  1859               	xorwf	_NeightAdress2+1,w,c	;volatile
  2007  001B56  A4D8               	btfss	status,2,c
  2008  001B58  D005               	goto	l4115
  2009                           
  2010                           ;FRAME.c: 142: {;FRAME.c: 143: return 0b10;
  2011  001B5A  0E00               	movlw	0
  2012  001B5C  6E07               	movwf	?_IsInNeighbors+1,c
  2013  001B5E  0E02               	movlw	2
  2014  001B60  6E06               	movwf	?_IsInNeighbors,c
  2015  001B62  0012               	return	
  2016  001B64                     l4115:
  2017                           
  2018                           ;FRAME.c: 144: };FRAME.c: 145: if(NeightAdress3==message_adress)
  2019  001B64  5006               	movf	IsInNeighbors@message_adress,w,c
  2020  001B66  1849               	xorwf	_NeightAdress3,w,c	;volatile
  2021  001B68  E109               	bnz	l4121
  2022  001B6A  5007               	movf	IsInNeighbors@message_adress+1,w,c
  2023  001B6C  184A               	xorwf	_NeightAdress3+1,w,c	;volatile
  2024  001B6E  A4D8               	btfss	status,2,c
  2025  001B70  D005               	goto	l4121
  2026                           
  2027                           ;FRAME.c: 146: {;FRAME.c: 147: return 0b100;
  2028  001B72  0E00               	movlw	0
  2029  001B74  6E07               	movwf	?_IsInNeighbors+1,c
  2030  001B76  0E04               	movlw	4
  2031  001B78  6E06               	movwf	?_IsInNeighbors,c
  2032  001B7A  0012               	return	
  2033  001B7C                     l4121:
  2034                           
  2035                           ;FRAME.c: 148: };FRAME.c: 149: if(NeightAdress4==message_adress)
  2036  001B7C  5006               	movf	IsInNeighbors@message_adress,w,c
  2037  001B7E  1847               	xorwf	_NeightAdress4,w,c	;volatile
  2038  001B80  E109               	bnz	l4127
  2039  001B82  5007               	movf	IsInNeighbors@message_adress+1,w,c
  2040  001B84  1848               	xorwf	_NeightAdress4+1,w,c	;volatile
  2041  001B86  A4D8               	btfss	status,2,c
  2042  001B88  D005               	goto	l4127
  2043                           
  2044                           ;FRAME.c: 150: {;FRAME.c: 151: return 0b1000;
  2045  001B8A  0E00               	movlw	0
  2046  001B8C  6E07               	movwf	?_IsInNeighbors+1,c
  2047  001B8E  0E08               	movlw	8
  2048  001B90  6E06               	movwf	?_IsInNeighbors,c
  2049  001B92  0012               	return	
  2050  001B94                     l4127:
  2051                           
  2052                           ;FRAME.c: 152: };FRAME.c: 153: if(NeightAdress5==message_adress)
  2053  001B94  5006               	movf	IsInNeighbors@message_adress,w,c
  2054  001B96  1845               	xorwf	_NeightAdress5,w,c	;volatile
  2055  001B98  E109               	bnz	l4133
  2056  001B9A  5007               	movf	IsInNeighbors@message_adress+1,w,c
  2057  001B9C  1846               	xorwf	_NeightAdress5+1,w,c	;volatile
  2058  001B9E  A4D8               	btfss	status,2,c
  2059  001BA0  D005               	goto	l4133
  2060                           
  2061                           ;FRAME.c: 154: {;FRAME.c: 155: return 0b10000;
  2062  001BA2  0E00               	movlw	0
  2063  001BA4  6E07               	movwf	?_IsInNeighbors+1,c
  2064  001BA6  0E10               	movlw	16
  2065  001BA8  6E06               	movwf	?_IsInNeighbors,c
  2066  001BAA  0012               	return	
  2067  001BAC                     l4133:
  2068                           
  2069                           ;FRAME.c: 156: };FRAME.c: 157: if(NeightAdress6==message_adress)
  2070  001BAC  5006               	movf	IsInNeighbors@message_adress,w,c
  2071  001BAE  1843               	xorwf	_NeightAdress6,w,c	;volatile
  2072  001BB0  E109               	bnz	l4139
  2073  001BB2  5007               	movf	IsInNeighbors@message_adress+1,w,c
  2074  001BB4  1844               	xorwf	_NeightAdress6+1,w,c	;volatile
  2075  001BB6  A4D8               	btfss	status,2,c
  2076  001BB8  D005               	goto	l4139
  2077                           
  2078                           ;FRAME.c: 158: {;FRAME.c: 159: return 0b100000;
  2079  001BBA  0E00               	movlw	0
  2080  001BBC  6E07               	movwf	?_IsInNeighbors+1,c
  2081  001BBE  0E20               	movlw	32
  2082  001BC0  6E06               	movwf	?_IsInNeighbors,c
  2083  001BC2  0012               	return	
  2084  001BC4                     l4139:
  2085                           
  2086                           ;FRAME.c: 160: };FRAME.c: 161: if(NeightAdress7==message_adress)
  2087  001BC4  5006               	movf	IsInNeighbors@message_adress,w,c
  2088  001BC6  1841               	xorwf	_NeightAdress7,w,c	;volatile
  2089  001BC8  E109               	bnz	l4145
  2090  001BCA  5007               	movf	IsInNeighbors@message_adress+1,w,c
  2091  001BCC  1842               	xorwf	_NeightAdress7+1,w,c	;volatile
  2092  001BCE  A4D8               	btfss	status,2,c
  2093  001BD0  D005               	goto	l4145
  2094                           
  2095                           ;FRAME.c: 162: {;FRAME.c: 163: return 0b1000000;
  2096  001BD2  0E00               	movlw	0
  2097  001BD4  6E07               	movwf	?_IsInNeighbors+1,c
  2098  001BD6  0E40               	movlw	64
  2099  001BD8  6E06               	movwf	?_IsInNeighbors,c
  2100  001BDA  0012               	return	
  2101  001BDC                     l4145:
  2102                           
  2103                           ;FRAME.c: 164: };FRAME.c: 165: if(NeightAdress8==message_adress)
  2104  001BDC  5006               	movf	IsInNeighbors@message_adress,w,c
  2105  001BDE  183F               	xorwf	_NeightAdress8,w,c	;volatile
  2106  001BE0  E109               	bnz	l4151
  2107  001BE2  5007               	movf	IsInNeighbors@message_adress+1,w,c
  2108  001BE4  1840               	xorwf	_NeightAdress8+1,w,c	;volatile
  2109  001BE6  A4D8               	btfss	status,2,c
  2110  001BE8  D005               	goto	l4151
  2111                           
  2112                           ;FRAME.c: 166: {;FRAME.c: 167: return 0b10000000;
  2113  001BEA  0E00               	movlw	0
  2114  001BEC  6E07               	movwf	?_IsInNeighbors+1,c
  2115  001BEE  0E80               	movlw	128
  2116  001BF0  6E06               	movwf	?_IsInNeighbors,c
  2117  001BF2  0012               	return	
  2118  001BF4                     l4151:
  2119                           
  2120                           ;FRAME.c: 168: };FRAME.c: 183: return 0;
  2121  001BF4  0E00               	movlw	0
  2122  001BF6  6E07               	movwf	?_IsInNeighbors+1,c
  2123  001BF8  0E00               	movlw	0
  2124  001BFA  6E06               	movwf	?_IsInNeighbors,c
  2125  001BFC  0012               	return		;funcret
  2126  001BFE                     __end_of_IsInNeighbors:
  2127                           	opt callstack 0
  2128                           
  2129 ;; *************** function _FRAME_PrzypisanieDokarty *****************
  2130 ;; Defined at:
  2131 ;;		line 679 in file "FRAME.c"
  2132 ;; Parameters:    Size  Location     Type
  2133 ;;  message         2    5[COMRAM] PTR struct .
  2134 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2135 ;; Auto vars:     Size  Location     Type
  2136 ;;		None
  2137 ;; Return value:  Size  Location     Type
  2138 ;;                  1    wreg      void 
  2139 ;; Registers used:
  2140 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2141 ;; Tracked objects:
  2142 ;;		On entry : 0/0
  2143 ;;		On exit  : 0/0
  2144 ;;		Unchanged: 0/0
  2145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2146 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2148 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2149 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2150 ;;Total ram usage:        6 bytes
  2151 ;; Hardware stack levels used:    1
  2152 ;; Hardware stack levels required when called:    3
  2153 ;; This function calls:
  2154 ;;		Nothing
  2155 ;; This function is called by:
  2156 ;;		_FRAME_HandleCanFrame
  2157 ;; This function uses a non-reentrant model
  2158 ;;
  2159                           
  2160                           	psect	text13
  2161  001CAE                     __ptext13:
  2162                           	opt callstack 0
  2163  001CAE                     _FRAME_PrzypisanieDokarty:
  2164                           	opt callstack 25
  2165                           
  2166                           ;FRAME.c: 681: if(message->message_type == 0x02)
  2167                           
  2168                           ;incstack = 0
  2169  001CAE  EE20 F001          	lfsr	2,1
  2170  001CB2  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2171  001CB4  26D9               	addwf	fsr2l,f,c
  2172  001CB6  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2173  001CB8  22DA               	addwfc	fsr2h,f,c
  2174  001CBA  0E02               	movlw	2
  2175  001CBC  18DE               	xorwf	postinc2,w,c
  2176  001CBE  A4D8               	btfss	status,2,c
  2177  001CC0  D021               	goto	l4461
  2178                           
  2179                           ;FRAME.c: 682: {;FRAME.c: 683: message->data_length = 3;
  2180  001CC2  EE20 F010          	lfsr	2,16
  2181  001CC6  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2182  001CC8  26D9               	addwf	fsr2l,f,c
  2183  001CCA  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2184  001CCC  22DA               	addwfc	fsr2h,f,c
  2185  001CCE  0E03               	movlw	3
  2186  001CD0  6EDF               	movwf	indf2,c
  2187                           
  2188                           ;FRAME.c: 684: message->data[0] = (unsigned char)Dane->NrKarty >> 8 ;
  2189  001CD2  EE20 F008          	lfsr	2,8
  2190  001CD6  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2191  001CD8  26D9               	addwf	fsr2l,f,c
  2192  001CDA  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2193  001CDC  22DA               	addwfc	fsr2h,f,c
  2194  001CDE  0E00               	movlw	0
  2195  001CE0  6EDF               	movwf	indf2,c
  2196                           
  2197                           ;FRAME.c: 685: message->data[1] = (unsigned char)Dane->NrKarty ;
  2198  001CE2  EE20 F009          	lfsr	2,9
  2199  001CE6  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2200  001CE8  26D9               	addwf	fsr2l,f,c
  2201  001CEA  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2202  001CEC  22DA               	addwfc	fsr2h,f,c
  2203  001CEE  C040 FFDF          	movff	64,indf2
  2204                           
  2205                           ;FRAME.c: 686: message->data[2] = (unsigned char)Dane->Nr_WeWy ;
  2206  001CF2  EE20 F00A          	lfsr	2,10
  2207  001CF6  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2208  001CF8  26D9               	addwf	fsr2l,f,c
  2209  001CFA  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2210  001CFC  22DA               	addwfc	fsr2h,f,c
  2211  001CFE  C042 FFDF          	movff	66,indf2
  2212                           
  2213                           ;FRAME.c: 688: }
  2214  001D02  0012               	return	
  2215  001D04                     l4461:
  2216                           
  2217                           ;FRAME.c: 689: else;FRAME.c: 690: {;FRAME.c: 691: Dane->NrKarty = (message->data[0] << 8
      +                          ) | (message->data[1]);
  2218  001D04  EE20 F008          	lfsr	2,8
  2219  001D08  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2220  001D0A  26D9               	addwf	fsr2l,f,c
  2221  001D0C  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2222  001D0E  22DA               	addwfc	fsr2h,f,c
  2223  001D10  50DF               	movf	indf2,w,c
  2224  001D12  6E08               	movwf	??_FRAME_PrzypisanieDokarty& (0+255),c
  2225  001D14  5008               	movf	??_FRAME_PrzypisanieDokarty,w,c
  2226  001D16  6E0A               	movwf	(??_FRAME_PrzypisanieDokarty+2)& (0+255),c
  2227  001D18  6A09               	clrf	(??_FRAME_PrzypisanieDokarty+1)& (0+255),c
  2228  001D1A  EE20 F009          	lfsr	2,9
  2229  001D1E  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2230  001D20  26D9               	addwf	fsr2l,f,c
  2231  001D22  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2232  001D24  22DA               	addwfc	fsr2h,f,c
  2233  001D26  50DF               	movf	indf2,w,c
  2234  001D28  6E0B               	movwf	(??_FRAME_PrzypisanieDokarty+3)& (0+255),c
  2235  001D2A  500B               	movf	??_FRAME_PrzypisanieDokarty+3,w,c
  2236  001D2C  1009               	iorwf	??_FRAME_PrzypisanieDokarty+1,w,c
  2237  001D2E  6E40               	movwf	64,c
  2238  001D30  500A               	movf	??_FRAME_PrzypisanieDokarty+2,w,c
  2239  001D32  6E41               	movwf	65,c
  2240                           
  2241                           ;FRAME.c: 692: Dane->Nr_WeWy = (message->data[2]);
  2242  001D34  EE20 F00A          	lfsr	2,10
  2243  001D38  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2244  001D3A  26D9               	addwf	fsr2l,f,c
  2245  001D3C  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2246  001D3E  22DA               	addwfc	fsr2h,f,c
  2247  001D40  50DF               	movf	indf2,w,c
  2248  001D42  6E08               	movwf	??_FRAME_PrzypisanieDokarty& (0+255),c
  2249  001D44  5008               	movf	??_FRAME_PrzypisanieDokarty,w,c
  2250  001D46  6E42               	movwf	66,c
  2251  001D48  6A43               	clrf	67,c
  2252  001D4A  0012               	return		;funcret
  2253  001D4C                     __end_of_FRAME_PrzypisanieDokarty:
  2254                           	opt callstack 0
  2255                           
  2256 ;; *************** function _FRAME_Plot *****************
  2257 ;; Defined at:
  2258 ;;		line 564 in file "FRAME.c"
  2259 ;; Parameters:    Size  Location     Type
  2260 ;;  message         2   12[COMRAM] PTR struct .
  2261 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2262 ;; Auto vars:     Size  Location     Type
  2263 ;;		None
  2264 ;; Return value:  Size  Location     Type
  2265 ;;                  1    wreg      void 
  2266 ;; Registers used:
  2267 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2268 ;; Tracked objects:
  2269 ;;		On entry : 0/0
  2270 ;;		On exit  : 0/0
  2271 ;;		Unchanged: 0/0
  2272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2273 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2275 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2276 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2277 ;;Total ram usage:        3 bytes
  2278 ;; Hardware stack levels used:    1
  2279 ;; Hardware stack levels required when called:    4
  2280 ;; This function calls:
  2281 ;;		___lwdiv
  2282 ;; This function is called by:
  2283 ;;		_FRAME_HandleCanFrame
  2284 ;; This function uses a non-reentrant model
  2285 ;;
  2286                           
  2287                           	psect	text14
  2288  002234                     __ptext14:
  2289                           	opt callstack 0
  2290  002234                     _FRAME_Plot:
  2291                           	opt callstack 24
  2292                           
  2293                           ;FRAME.c: 567: if(message->message_type == 0x02)
  2294                           
  2295                           ;incstack = 0
  2296  002234  EE20 F001          	lfsr	2,1
  2297  002238  500D               	movf	FRAME_Plot@message,w,c
  2298  00223A  26D9               	addwf	fsr2l,f,c
  2299  00223C  500E               	movf	FRAME_Plot@message+1,w,c
  2300  00223E  22DA               	addwfc	fsr2h,f,c
  2301  002240  0E02               	movlw	2
  2302  002242  18DE               	xorwf	postinc2,w,c
  2303  002244  A4D8               	btfss	status,2,c
  2304  002246  D013               	goto	l4451
  2305                           
  2306                           ;FRAME.c: 568: {;FRAME.c: 569: message->data[0] = (BYTE)(Dane->timerRysowaniaWykresuU16/
      +                          10);
  2307  002248  EE20 F008          	lfsr	2,8
  2308  00224C  500D               	movf	FRAME_Plot@message,w,c
  2309  00224E  26D9               	addwf	fsr2l,f,c
  2310  002250  500E               	movf	FRAME_Plot@message+1,w,c
  2311  002252  22DA               	addwfc	fsr2h,f,c
  2312  002254  C00C F006          	movff	12,___lwdiv@dividend
  2313  002258  C00D F007          	movff	13,___lwdiv@dividend+1
  2314  00225C  0E00               	movlw	0
  2315  00225E  6E09               	movwf	___lwdiv@divisor+1,c
  2316  002260  0E0A               	movlw	10
  2317  002262  6E08               	movwf	___lwdiv@divisor,c
  2318  002264  EC46  F011         	call	___lwdiv	;wreg free
  2319  002268  5006               	movf	?___lwdiv,w,c
  2320  00226A  6EDF               	movwf	indf2,c
  2321                           
  2322                           ;FRAME.c: 570: }
  2323  00226C  0012               	return	
  2324  00226E                     l4451:
  2325                           
  2326                           ;FRAME.c: 571: else;FRAME.c: 572: {;FRAME.c: 573: Dane->timerRysowaniaWykresuU16 = (WORD
      +                          )message->data[0]*10;
  2327  00226E  EE20 F008          	lfsr	2,8
  2328  002272  500D               	movf	FRAME_Plot@message,w,c
  2329  002274  26D9               	addwf	fsr2l,f,c
  2330  002276  500E               	movf	FRAME_Plot@message+1,w,c
  2331  002278  22DA               	addwfc	fsr2h,f,c
  2332  00227A  50DF               	movf	indf2,w,c
  2333  00227C  6E0F               	movwf	??_FRAME_Plot& (0+255),c
  2334  00227E  500F               	movf	??_FRAME_Plot,w,c
  2335  002280  0D0A               	mullw	10
  2336  002282  CFF3 F00C          	movff	prodl,12
  2337  002286  CFF4 F00D          	movff	prodh,13
  2338  00228A  0012               	return		;funcret
  2339  00228C                     __end_of_FRAME_Plot:
  2340                           	opt callstack 0
  2341                           
  2342 ;; *************** function _FRAME_MapPosition *****************
  2343 ;; Defined at:
  2344 ;;		line 590 in file "FRAME.c"
  2345 ;; Parameters:    Size  Location     Type
  2346 ;;  message         2    5[COMRAM] PTR struct .
  2347 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2348 ;; Auto vars:     Size  Location     Type
  2349 ;;		None
  2350 ;; Return value:  Size  Location     Type
  2351 ;;                  1    wreg      void 
  2352 ;; Registers used:
  2353 ;;		None
  2354 ;; Tracked objects:
  2355 ;;		On entry : 0/0
  2356 ;;		On exit  : 0/0
  2357 ;;		Unchanged: 0/0
  2358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2359 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2362 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2363 ;;Total ram usage:        2 bytes
  2364 ;; Hardware stack levels used:    1
  2365 ;; Hardware stack levels required when called:    3
  2366 ;; This function calls:
  2367 ;;		Nothing
  2368 ;; This function is called by:
  2369 ;;		_FRAME_HandleCanFrame
  2370 ;; This function uses a non-reentrant model
  2371 ;;
  2372                           
  2373                           	psect	text15
  2374  0027A8                     __ptext15:
  2375                           	opt callstack 0
  2376  0027A8                     _FRAME_MapPosition:
  2377                           	opt callstack 25
  2378                           
  2379                           ;incstack = 0
  2380  0027A8  0012               	return		;funcret
  2381  0027AA                     __end_of_FRAME_MapPosition:
  2382                           	opt callstack 0
  2383                           
  2384 ;; *************** function _FRAME_ExcitationValue *****************
  2385 ;; Defined at:
  2386 ;;		line 228 in file "FRAME.c"
  2387 ;; Parameters:    Size  Location     Type
  2388 ;;  message         2    5[COMRAM] PTR struct .
  2389 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2390 ;; Auto vars:     Size  Location     Type
  2391 ;;		None
  2392 ;; Return value:  Size  Location     Type
  2393 ;;                  1    wreg      void 
  2394 ;; Registers used:
  2395 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2396 ;; Tracked objects:
  2397 ;;		On entry : 0/0
  2398 ;;		On exit  : 0/0
  2399 ;;		Unchanged: 0/0
  2400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2401 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2403 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2404 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2405 ;;Total ram usage:        3 bytes
  2406 ;; Hardware stack levels used:    1
  2407 ;; Hardware stack levels required when called:    3
  2408 ;; This function calls:
  2409 ;;		Nothing
  2410 ;; This function is called by:
  2411 ;;		_FRAME_HandleCanFrame
  2412 ;; This function uses a non-reentrant model
  2413 ;;
  2414                           
  2415                           	psect	text16
  2416  00243E                     __ptext16:
  2417                           	opt callstack 0
  2418  00243E                     _FRAME_ExcitationValue:
  2419                           	opt callstack 25
  2420                           
  2421                           ;FRAME.c: 230: if(message->message_type == 0x02)
  2422                           
  2423                           ;incstack = 0
  2424  00243E  EE20 F001          	lfsr	2,1
  2425  002442  5006               	movf	FRAME_ExcitationValue@message,w,c
  2426  002444  26D9               	addwf	fsr2l,f,c
  2427  002446  5007               	movf	FRAME_ExcitationValue@message+1,w,c
  2428  002448  22DA               	addwfc	fsr2h,f,c
  2429  00244A  0E02               	movlw	2
  2430  00244C  18DE               	xorwf	postinc2,w,c
  2431  00244E  A4D8               	btfss	status,2,c
  2432  002450  0012               	return	
  2433                           
  2434                           ;FRAME.c: 231: {;FRAME.c: 232: message->data_length = 1;
  2435  002452  EE20 F010          	lfsr	2,16
  2436  002456  5006               	movf	FRAME_ExcitationValue@message,w,c
  2437  002458  26D9               	addwf	fsr2l,f,c
  2438  00245A  5007               	movf	FRAME_ExcitationValue@message+1,w,c
  2439  00245C  22DA               	addwfc	fsr2h,f,c
  2440  00245E  0E01               	movlw	1
  2441  002460  6EDF               	movwf	indf2,c
  2442                           
  2443                           ;FRAME.c: 237: message->data[0] = 0xFF;
  2444  002462  EE20 F008          	lfsr	2,8
  2445  002466  5006               	movf	FRAME_ExcitationValue@message,w,c
  2446  002468  26D9               	addwf	fsr2l,f,c
  2447  00246A  5007               	movf	FRAME_ExcitationValue@message+1,w,c
  2448  00246C  22DA               	addwfc	fsr2h,f,c
  2449  00246E  0EFF               	movlw	255
  2450  002470  6EDF               	movwf	indf2,c
  2451                           
  2452                           ;FRAME.c: 238: }
  2453  002472  0012               	return		;funcret
  2454  002474                     __end_of_FRAME_ExcitationValue:
  2455                           	opt callstack 0
  2456                           
  2457 ;; *************** function _FRAME_ExcitationMultiplier *****************
  2458 ;; Defined at:
  2459 ;;		line 257 in file "FRAME.c"
  2460 ;; Parameters:    Size  Location     Type
  2461 ;;  message         2    5[COMRAM] PTR struct .
  2462 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2463 ;; Auto vars:     Size  Location     Type
  2464 ;;  i               2    8[COMRAM] unsigned short 
  2465 ;; Return value:  Size  Location     Type
  2466 ;;                  1    wreg      void 
  2467 ;; Registers used:
  2468 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2469 ;; Tracked objects:
  2470 ;;		On entry : 0/0
  2471 ;;		On exit  : 0/0
  2472 ;;		Unchanged: 0/0
  2473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2474 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2475 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2476 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2477 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2478 ;;Total ram usage:        5 bytes
  2479 ;; Hardware stack levels used:    1
  2480 ;; Hardware stack levels required when called:    3
  2481 ;; This function calls:
  2482 ;;		Nothing
  2483 ;; This function is called by:
  2484 ;;		_FRAME_HandleCanFrame
  2485 ;; This function uses a non-reentrant model
  2486 ;;
  2487                           
  2488                           	psect	text17
  2489  0022DE                     __ptext17:
  2490                           	opt callstack 0
  2491  0022DE                     _FRAME_ExcitationMultiplier:
  2492                           	opt callstack 25
  2493                           
  2494                           ;FRAME.c: 259: WORD i;;FRAME.c: 261: if(message->message_type == 0x02)
  2495                           
  2496                           ;incstack = 0
  2497  0022DE  EE20 F001          	lfsr	2,1
  2498  0022E2  5006               	movf	FRAME_ExcitationMultiplier@message,w,c
  2499  0022E4  26D9               	addwf	fsr2l,f,c
  2500  0022E6  5007               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  2501  0022E8  22DA               	addwfc	fsr2h,f,c
  2502  0022EA  0E02               	movlw	2
  2503  0022EC  18DE               	xorwf	postinc2,w,c
  2504  0022EE  A4D8               	btfss	status,2,c
  2505  0022F0  0012               	return	
  2506                           
  2507                           ;FRAME.c: 262: {;FRAME.c: 263: message->data_length = 1;
  2508  0022F2  EE20 F010          	lfsr	2,16
  2509  0022F6  5006               	movf	FRAME_ExcitationMultiplier@message,w,c
  2510  0022F8  26D9               	addwf	fsr2l,f,c
  2511  0022FA  5007               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  2512  0022FC  22DA               	addwfc	fsr2h,f,c
  2513  0022FE  0E01               	movlw	1
  2514  002300  6EDF               	movwf	indf2,c
  2515                           
  2516                           ;FRAME.c: 264: for(i=0; i<3; i++)
  2517  002302  0E00               	movlw	0
  2518  002304  6E0A               	movwf	FRAME_ExcitationMultiplier@i+1,c
  2519  002306  0E00               	movlw	0
  2520  002308  6E09               	movwf	FRAME_ExcitationMultiplier@i,c
  2521  00230A                     l4393:
  2522                           
  2523                           ;FRAME.c: 265: {
  2524  00230A  4A09               	infsnz	FRAME_ExcitationMultiplier@i,f,c
  2525  00230C  2A0A               	incf	FRAME_ExcitationMultiplier@i+1,f,c
  2526  00230E  500A               	movf	FRAME_ExcitationMultiplier@i+1,w,c
  2527  002310  E104               	bnz	u2730
  2528  002312  0E03               	movlw	3
  2529  002314  5C09               	subwf	FRAME_ExcitationMultiplier@i,w,c
  2530  002316  A0D8               	btfss	status,0,c
  2531  002318  D7F8               	goto	l4393
  2532  00231A                     u2730:
  2533                           
  2534                           ;FRAME.c: 268: };FRAME.c: 269: message->data[0] = 0xFF;
  2535  00231A  EE20 F008          	lfsr	2,8
  2536  00231E  5006               	movf	FRAME_ExcitationMultiplier@message,w,c
  2537  002320  26D9               	addwf	fsr2l,f,c
  2538  002322  5007               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  2539  002324  22DA               	addwfc	fsr2h,f,c
  2540  002326  0EFF               	movlw	255
  2541  002328  6EDF               	movwf	indf2,c
  2542                           
  2543                           ;FRAME.c: 270: }
  2544  00232A  0012               	return		;funcret
  2545  00232C                     __end_of_FRAME_ExcitationMultiplier:
  2546                           	opt callstack 0
  2547                           
  2548 ;; *************** function _FRAME_DeviceReset *****************
  2549 ;; Defined at:
  2550 ;;		line 411 in file "FRAME.c"
  2551 ;; Parameters:    Size  Location     Type
  2552 ;;  message         2   14[COMRAM] PTR struct .
  2553 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2554 ;; Auto vars:     Size  Location     Type
  2555 ;;		None
  2556 ;; Return value:  Size  Location     Type
  2557 ;;                  1    wreg      void 
  2558 ;; Registers used:
  2559 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2560 ;; Tracked objects:
  2561 ;;		On entry : 0/0
  2562 ;;		On exit  : 0/0
  2563 ;;		Unchanged: 0/0
  2564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2565 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2567 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2568 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2569 ;;Total ram usage:        3 bytes
  2570 ;; Hardware stack levels used:    1
  2571 ;; Hardware stack levels required when called:    6
  2572 ;; This function calls:
  2573 ;;		_FRAME_DataUpdateAndChangeOption
  2574 ;;		_WriteDataToEEPROM
  2575 ;; This function is called by:
  2576 ;;		_FRAME_HandleCanFrame
  2577 ;; This function uses a non-reentrant model
  2578 ;;
  2579                           
  2580                           	psect	text18
  2581  0017CA                     __ptext18:
  2582                           	opt callstack 0
  2583  0017CA                     _FRAME_DeviceReset:
  2584                           	opt callstack 22
  2585                           
  2586                           ;FRAME.c: 413: if(message->message_type == 0x02)
  2587                           
  2588                           ;incstack = 0
  2589  0017CA  EE20 F001          	lfsr	2,1
  2590  0017CE  500F               	movf	FRAME_DeviceReset@message,w,c
  2591  0017D0  26D9               	addwf	fsr2l,f,c
  2592  0017D2  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2593  0017D4  22DA               	addwfc	fsr2h,f,c
  2594  0017D6  0E02               	movlw	2
  2595  0017D8  18DE               	xorwf	postinc2,w,c
  2596  0017DA  A4D8               	btfss	status,2,c
  2597  0017DC  D057               	goto	l4415
  2598                           
  2599                           ;FRAME.c: 414: {;FRAME.c: 415: message->data_length = 8;
  2600  0017DE  EE20 F010          	lfsr	2,16
  2601  0017E2  500F               	movf	FRAME_DeviceReset@message,w,c
  2602  0017E4  26D9               	addwf	fsr2l,f,c
  2603  0017E6  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2604  0017E8  22DA               	addwfc	fsr2h,f,c
  2605  0017EA  0E08               	movlw	8
  2606  0017EC  6EDF               	movwf	indf2,c
  2607                           
  2608                           ;FRAME.c: 417: message->data[0] = (RCON>>6) & 0x01;
  2609  0017EE  EE20 F008          	lfsr	2,8
  2610  0017F2  500F               	movf	FRAME_DeviceReset@message,w,c
  2611  0017F4  26D9               	addwf	fsr2l,f,c
  2612  0017F6  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2613  0017F8  22DA               	addwfc	fsr2h,f,c
  2614  0017FA  44D0               	rlncf	4048,w,c	;volatile
  2615  0017FC  46E8               	rlncf	wreg,f,c
  2616  0017FE  0B03               	andlw	3
  2617  001800  0B01               	andlw	1
  2618  001802  6EDF               	movwf	indf2,c
  2619                           
  2620                           ;FRAME.c: 418: message->data[1] = Flagi.wykonanoZapisDoFlash;
  2621  001804  EE20 F009          	lfsr	2,9
  2622  001808  500F               	movf	FRAME_DeviceReset@message,w,c
  2623  00180A  26D9               	addwf	fsr2l,f,c
  2624  00180C  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2625  00180E  22DA               	addwfc	fsr2h,f,c
  2626  001810  0100               	movlb	0	; () banked
  2627  001812  A9C6               	btfss	_Flagi& (0+255),4,b
  2628  001814  D002               	goto	u2770
  2629  001816  0E01               	movlw	1
  2630  001818  D001               	goto	u2776
  2631  00181A                     u2770:
  2632  00181A  0E00               	movlw	0
  2633  00181C                     u2776:
  2634  00181C  6EDF               	movwf	indf2,c
  2635                           
  2636                           ;FRAME.c: 419: message->data[2] = Flagi.pomiarTla;
  2637  00181E  EE20 F00A          	lfsr	2,10
  2638  001822  500F               	movf	FRAME_DeviceReset@message,w,c
  2639  001824  26D9               	addwf	fsr2l,f,c
  2640  001826  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2641  001828  22DA               	addwfc	fsr2h,f,c
  2642  00182A  A1C6               	btfss	_Flagi& (0+255),0,b
  2643  00182C  D002               	goto	u2780
  2644  00182E  0E01               	movlw	1
  2645  001830  D001               	goto	u2786
  2646  001832                     u2780:
  2647  001832  0E00               	movlw	0
  2648  001834                     u2786:
  2649  001834  6EDF               	movwf	indf2,c
  2650                           
  2651                           ;FRAME.c: 420: message->data[3] = 0;
  2652  001836  EE20 F00B          	lfsr	2,11
  2653  00183A  500F               	movf	FRAME_DeviceReset@message,w,c
  2654  00183C  26D9               	addwf	fsr2l,f,c
  2655  00183E  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2656  001840  22DA               	addwfc	fsr2h,f,c
  2657  001842  0E00               	movlw	0
  2658  001844  6EDF               	movwf	indf2,c
  2659                           
  2660                           ;FRAME.c: 421: message->data[4] = Dane->rokU16;
  2661  001846  EE20 F00C          	lfsr	2,12
  2662  00184A  500F               	movf	FRAME_DeviceReset@message,w,c
  2663  00184C  26D9               	addwf	fsr2l,f,c
  2664  00184E  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2665  001850  22DA               	addwfc	fsr2h,f,c
  2666  001852  C036 FFDF          	movff	54,indf2
  2667                           
  2668                           ;FRAME.c: 422: message->data[5] = Dane->miesiacU16;
  2669  001856  EE20 F00D          	lfsr	2,13
  2670  00185A  500F               	movf	FRAME_DeviceReset@message,w,c
  2671  00185C  26D9               	addwf	fsr2l,f,c
  2672  00185E  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2673  001860  22DA               	addwfc	fsr2h,f,c
  2674  001862  C038 FFDF          	movff	56,indf2
  2675                           
  2676                           ;FRAME.c: 423: message->data[6] = Dane->dzienU16;
  2677  001866  EE20 F00E          	lfsr	2,14
  2678  00186A  500F               	movf	FRAME_DeviceReset@message,w,c
  2679  00186C  26D9               	addwf	fsr2l,f,c
  2680  00186E  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2681  001870  22DA               	addwfc	fsr2h,f,c
  2682  001872  C03A FFDF          	movff	58,indf2
  2683                           
  2684                           ;FRAME.c: 424: message->data[7] = Dane->godzinaU16;
  2685  001876  EE20 F00F          	lfsr	2,15
  2686  00187A  500F               	movf	FRAME_DeviceReset@message,w,c
  2687  00187C  26D9               	addwf	fsr2l,f,c
  2688  00187E  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2689  001880  22DA               	addwfc	fsr2h,f,c
  2690  001882  C03C FFDF          	movff	60,indf2
  2691                           
  2692                           ; BSR set to: 0
  2693                           ;FRAME.c: 425: RCON &= ~(1<<6);
  2694  001886  9CD0               	bcf	4048,6,c	;volatile
  2695                           
  2696                           ; BSR set to: 0
  2697                           ;FRAME.c: 426: Flagi.wykonanoZapisDoFlash = 0;
  2698  001888  99C6               	bcf	_Flagi& (0+255),4,b
  2699                           
  2700                           ;FRAME.c: 440: }
  2701  00188A  0012               	return	
  2702  00188C                     l4415:
  2703                           
  2704                           ;FRAME.c: 441: else;FRAME.c: 442: {;FRAME.c: 443: message->data_length = 1;
  2705  00188C  EE20 F010          	lfsr	2,16
  2706  001890  500F               	movf	FRAME_DeviceReset@message,w,c
  2707  001892  26D9               	addwf	fsr2l,f,c
  2708  001894  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2709  001896  22DA               	addwfc	fsr2h,f,c
  2710  001898  0E01               	movlw	1
  2711  00189A  6EDF               	movwf	indf2,c
  2712                           
  2713                           ;FRAME.c: 445: if(message->data[2])
  2714  00189C  EE20 F00A          	lfsr	2,10
  2715  0018A0  500F               	movf	FRAME_DeviceReset@message,w,c
  2716  0018A2  26D9               	addwf	fsr2l,f,c
  2717  0018A4  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2718  0018A6  22DA               	addwfc	fsr2h,f,c
  2719  0018A8  50DF               	movf	indf2,w,c
  2720  0018AA  B4D8               	btfsc	status,2,c
  2721  0018AC  D00F               	goto	l4425
  2722                           
  2723                           ;FRAME.c: 446: {;FRAME.c: 447: Flagi.pomiarTla = 1;
  2724  0018AE  0100               	movlb	0	; () banked
  2725  0018B0  81C6               	bsf	_Flagi& (0+255),0,b
  2726                           
  2727                           ; BSR set to: 0
  2728                           ;FRAME.c: 448: if(message->data[1])
  2729  0018B2  EE20 F009          	lfsr	2,9
  2730  0018B6  500F               	movf	FRAME_DeviceReset@message,w,c
  2731  0018B8  26D9               	addwf	fsr2l,f,c
  2732  0018BA  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2733  0018BC  22DA               	addwfc	fsr2h,f,c
  2734  0018BE  50DF               	movf	indf2,w,c
  2735  0018C0  B4D8               	btfsc	status,2,c
  2736  0018C2  D01E               	goto	l4433
  2737                           
  2738                           ; BSR set to: 0
  2739                           ;FRAME.c: 449: {;FRAME.c: 450: Flagi.zapisDoFlash = 1;
  2740  0018C4  87C6               	bsf	_Flagi& (0+255),3,b
  2741                           
  2742                           ; BSR set to: 0
  2743                           ;FRAME.c: 451: WriteDataToEEPROM();
  2744  0018C6  EC1B  F00D         	call	_WriteDataToEEPROM	;wreg free
  2745  0018CA  D01A               	goto	l4433
  2746  0018CC                     l4425:
  2747                           
  2748                           ;FRAME.c: 454: else;FRAME.c: 455: {;FRAME.c: 456: if(message->data[1])
  2749  0018CC  EE20 F009          	lfsr	2,9
  2750  0018D0  500F               	movf	FRAME_DeviceReset@message,w,c
  2751  0018D2  26D9               	addwf	fsr2l,f,c
  2752  0018D4  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2753  0018D6  22DA               	addwfc	fsr2h,f,c
  2754  0018D8  50DF               	movf	indf2,w,c
  2755  0018DA  B4D8               	btfsc	status,2,c
  2756  0018DC  D008               	goto	l4429
  2757                           
  2758                           ;FRAME.c: 457: {;FRAME.c: 458: FRAME_DataUpdateAndChangeOption(message);
  2759  0018DE  C00F  F006         	movff	FRAME_DeviceReset@message,FRAME_DataUpdateAndChangeOption@message
  2760  0018E2  C010  F007         	movff	FRAME_DeviceReset@message+1,FRAME_DataUpdateAndChangeOption@message+1
  2761  0018E6  ECED  F010         	call	_FRAME_DataUpdateAndChangeOption	;wreg free
  2762                           
  2763                           ;FRAME.c: 459: WriteDataToEEPROM();
  2764  0018EA  EC1B  F00D         	call	_WriteDataToEEPROM	;wreg free
  2765  0018EE                     l4429:
  2766                           
  2767                           ;FRAME.c: 461: };FRAME.c: 462: if(message->data[0])
  2768  0018EE  EE20 F008          	lfsr	2,8
  2769  0018F2  500F               	movf	FRAME_DeviceReset@message,w,c
  2770  0018F4  26D9               	addwf	fsr2l,f,c
  2771  0018F6  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2772  0018F8  22DA               	addwfc	fsr2h,f,c
  2773  0018FA  50DF               	movf	indf2,w,c
  2774  0018FC  A4D8               	btfss	status,2,c
  2775  0018FE  00FF               	reset		;# 
  2776  001900                     l4433:
  2777                           
  2778                           ;FRAME.c: 465: };FRAME.c: 466: };FRAME.c: 467: message->data[0] = 0xFF;
  2779  001900  EE20 F008          	lfsr	2,8
  2780  001904  500F               	movf	FRAME_DeviceReset@message,w,c
  2781  001906  26D9               	addwf	fsr2l,f,c
  2782  001908  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2783  00190A  22DA               	addwfc	fsr2h,f,c
  2784  00190C  0EFF               	movlw	255
  2785  00190E  6EDF               	movwf	indf2,c
  2786  001910  0012               	return		;funcret
  2787  001912                     __end_of_FRAME_DeviceReset:
  2788                           	opt callstack 0
  2789                           
  2790 ;; *************** function _WriteDataToEEPROM *****************
  2791 ;; Defined at:
  2792 ;;		line 539 in file "FRAME.c"
  2793 ;; Parameters:    Size  Location     Type
  2794 ;;		None
  2795 ;; Auto vars:     Size  Location     Type
  2796 ;;		None
  2797 ;; Return value:  Size  Location     Type
  2798 ;;                  1    wreg      void 
  2799 ;; Registers used:
  2800 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2801 ;; Tracked objects:
  2802 ;;		On entry : 0/0
  2803 ;;		On exit  : 0/0
  2804 ;;		Unchanged: 0/0
  2805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2810 ;;Total ram usage:        0 bytes
  2811 ;; Hardware stack levels used:    1
  2812 ;; Hardware stack levels required when called:    5
  2813 ;; This function calls:
  2814 ;;		_NVMWrite
  2815 ;; This function is called by:
  2816 ;;		_FRAME_DeviceReset
  2817 ;; This function uses a non-reentrant model
  2818 ;;
  2819                           
  2820                           	psect	text19
  2821  001A36                     __ptext19:
  2822                           	opt callstack 0
  2823  001A36                     _WriteDataToEEPROM:
  2824                           	opt callstack 22
  2825                           
  2826                           ;FRAME.c: 541: NVMWrite(&Init_Data,10,2);
  2827                           
  2828                           ;incstack = 0
  2829  001A36  0E56               	movlw	low _Init_Data
  2830  001A38  6E09               	movwf	NVMWrite@source,c
  2831  001A3A  0E00               	movlw	high _Init_Data
  2832  001A3C  6E0A               	movwf	NVMWrite@source+1,c
  2833  001A3E  0E00               	movlw	0
  2834  001A40  6E0C               	movwf	NVMWrite@addr+1,c
  2835  001A42  0E0A               	movlw	10
  2836  001A44  6E0B               	movwf	NVMWrite@addr,c
  2837  001A46  0E00               	movlw	0
  2838  001A48  6E0E               	movwf	NVMWrite@count+1,c
  2839  001A4A  0E02               	movlw	2
  2840  001A4C  6E0D               	movwf	NVMWrite@count,c
  2841  001A4E  EC3A  F012         	call	_NVMWrite	;wreg free
  2842                           
  2843                           ;FRAME.c: 542: NVMWrite(&NeightAdress1,13,2);
  2844  001A52  0E4B               	movlw	low _NeightAdress1
  2845  001A54  6E09               	movwf	NVMWrite@source,c
  2846  001A56  0E00               	movlw	high _NeightAdress1
  2847  001A58  6E0A               	movwf	NVMWrite@source+1,c
  2848  001A5A  0E00               	movlw	0
  2849  001A5C  6E0C               	movwf	NVMWrite@addr+1,c
  2850  001A5E  0E0D               	movlw	13
  2851  001A60  6E0B               	movwf	NVMWrite@addr,c
  2852  001A62  0E00               	movlw	0
  2853  001A64  6E0E               	movwf	NVMWrite@count+1,c
  2854  001A66  0E02               	movlw	2
  2855  001A68  6E0D               	movwf	NVMWrite@count,c
  2856  001A6A  EC3A  F012         	call	_NVMWrite	;wreg free
  2857                           
  2858                           ;FRAME.c: 543: NVMWrite(&NeightAdress2,16,2);
  2859  001A6E  0E58               	movlw	low _NeightAdress2
  2860  001A70  6E09               	movwf	NVMWrite@source,c
  2861  001A72  0E00               	movlw	high _NeightAdress2
  2862  001A74  6E0A               	movwf	NVMWrite@source+1,c
  2863  001A76  0E00               	movlw	0
  2864  001A78  6E0C               	movwf	NVMWrite@addr+1,c
  2865  001A7A  0E10               	movlw	16
  2866  001A7C  6E0B               	movwf	NVMWrite@addr,c
  2867  001A7E  0E00               	movlw	0
  2868  001A80  6E0E               	movwf	NVMWrite@count+1,c
  2869  001A82  0E02               	movlw	2
  2870  001A84  6E0D               	movwf	NVMWrite@count,c
  2871  001A86  EC3A  F012         	call	_NVMWrite	;wreg free
  2872                           
  2873                           ;FRAME.c: 544: NVMWrite(&NeightAdress3,19,2);
  2874  001A8A  0E49               	movlw	low _NeightAdress3
  2875  001A8C  6E09               	movwf	NVMWrite@source,c
  2876  001A8E  0E00               	movlw	high _NeightAdress3
  2877  001A90  6E0A               	movwf	NVMWrite@source+1,c
  2878  001A92  0E00               	movlw	0
  2879  001A94  6E0C               	movwf	NVMWrite@addr+1,c
  2880  001A96  0E13               	movlw	19
  2881  001A98  6E0B               	movwf	NVMWrite@addr,c
  2882  001A9A  0E00               	movlw	0
  2883  001A9C  6E0E               	movwf	NVMWrite@count+1,c
  2884  001A9E  0E02               	movlw	2
  2885  001AA0  6E0D               	movwf	NVMWrite@count,c
  2886  001AA2  EC3A  F012         	call	_NVMWrite	;wreg free
  2887                           
  2888                           ;FRAME.c: 545: NVMWrite(&NeightAdress4,22,2);
  2889  001AA6  0E47               	movlw	low _NeightAdress4
  2890  001AA8  6E09               	movwf	NVMWrite@source,c
  2891  001AAA  0E00               	movlw	high _NeightAdress4
  2892  001AAC  6E0A               	movwf	NVMWrite@source+1,c
  2893  001AAE  0E00               	movlw	0
  2894  001AB0  6E0C               	movwf	NVMWrite@addr+1,c
  2895  001AB2  0E16               	movlw	22
  2896  001AB4  6E0B               	movwf	NVMWrite@addr,c
  2897  001AB6  0E00               	movlw	0
  2898  001AB8  6E0E               	movwf	NVMWrite@count+1,c
  2899  001ABA  0E02               	movlw	2
  2900  001ABC  6E0D               	movwf	NVMWrite@count,c
  2901  001ABE  EC3A  F012         	call	_NVMWrite	;wreg free
  2902                           
  2903                           ;FRAME.c: 546: NVMWrite(&NeightAdress5,25,2);
  2904  001AC2  0E45               	movlw	low _NeightAdress5
  2905  001AC4  6E09               	movwf	NVMWrite@source,c
  2906  001AC6  0E00               	movlw	high _NeightAdress5
  2907  001AC8  6E0A               	movwf	NVMWrite@source+1,c
  2908  001ACA  0E00               	movlw	0
  2909  001ACC  6E0C               	movwf	NVMWrite@addr+1,c
  2910  001ACE  0E19               	movlw	25
  2911  001AD0  6E0B               	movwf	NVMWrite@addr,c
  2912  001AD2  0E00               	movlw	0
  2913  001AD4  6E0E               	movwf	NVMWrite@count+1,c
  2914  001AD6  0E02               	movlw	2
  2915  001AD8  6E0D               	movwf	NVMWrite@count,c
  2916  001ADA  EC3A  F012         	call	_NVMWrite	;wreg free
  2917                           
  2918                           ;FRAME.c: 547: NVMWrite(&NeightAdress6,28,2);
  2919  001ADE  0E43               	movlw	low _NeightAdress6
  2920  001AE0  6E09               	movwf	NVMWrite@source,c
  2921  001AE2  0E00               	movlw	high _NeightAdress6
  2922  001AE4  6E0A               	movwf	NVMWrite@source+1,c
  2923  001AE6  0E00               	movlw	0
  2924  001AE8  6E0C               	movwf	NVMWrite@addr+1,c
  2925  001AEA  0E1C               	movlw	28
  2926  001AEC  6E0B               	movwf	NVMWrite@addr,c
  2927  001AEE  0E00               	movlw	0
  2928  001AF0  6E0E               	movwf	NVMWrite@count+1,c
  2929  001AF2  0E02               	movlw	2
  2930  001AF4  6E0D               	movwf	NVMWrite@count,c
  2931  001AF6  EC3A  F012         	call	_NVMWrite	;wreg free
  2932                           
  2933                           ;FRAME.c: 548: NVMWrite(&NeightAdress7,31,2);
  2934  001AFA  0E41               	movlw	low _NeightAdress7
  2935  001AFC  6E09               	movwf	NVMWrite@source,c
  2936  001AFE  0E00               	movlw	high _NeightAdress7
  2937  001B00  6E0A               	movwf	NVMWrite@source+1,c
  2938  001B02  0E00               	movlw	0
  2939  001B04  6E0C               	movwf	NVMWrite@addr+1,c
  2940  001B06  0E1F               	movlw	31
  2941  001B08  6E0B               	movwf	NVMWrite@addr,c
  2942  001B0A  0E00               	movlw	0
  2943  001B0C  6E0E               	movwf	NVMWrite@count+1,c
  2944  001B0E  0E02               	movlw	2
  2945  001B10  6E0D               	movwf	NVMWrite@count,c
  2946  001B12  EC3A  F012         	call	_NVMWrite	;wreg free
  2947                           
  2948                           ;FRAME.c: 549: NVMWrite(&NeightAdress8,34,2);
  2949  001B16  0E3F               	movlw	low _NeightAdress8
  2950  001B18  6E09               	movwf	NVMWrite@source,c
  2951  001B1A  0E00               	movlw	high _NeightAdress8
  2952  001B1C  6E0A               	movwf	NVMWrite@source+1,c
  2953  001B1E  0E00               	movlw	0
  2954  001B20  6E0C               	movwf	NVMWrite@addr+1,c
  2955  001B22  0E22               	movlw	34
  2956  001B24  6E0B               	movwf	NVMWrite@addr,c
  2957  001B26  0E00               	movlw	0
  2958  001B28  6E0E               	movwf	NVMWrite@count+1,c
  2959  001B2A  0E02               	movlw	2
  2960  001B2C  6E0D               	movwf	NVMWrite@count,c
  2961  001B2E  EC3A  F012         	call	_NVMWrite	;wreg free
  2962  001B32  0012               	return		;funcret
  2963  001B34                     __end_of_WriteDataToEEPROM:
  2964                           	opt callstack 0
  2965                           
  2966 ;; *************** function _NVMWrite *****************
  2967 ;; Defined at:
  2968 ;;		line 148 in file "EEPROM.c"
  2969 ;; Parameters:    Size  Location     Type
  2970 ;;  source          2    8[COMRAM] PTR unsigned char 
  2971 ;;		 -> Init_Data(2), NeightAdress8(2), NeightAdress7(2), NeightAdress6(2), 
  2972 ;;		 -> NeightAdress5(2), NeightAdress4(2), NeightAdress3(2), NeightAdress2(2), 
  2973 ;;		 -> NeightAdress1(2), 
  2974 ;;  addr            2   10[COMRAM] unsigned short 
  2975 ;;  count           2   12[COMRAM] unsigned short 
  2976 ;; Auto vars:     Size  Location     Type
  2977 ;;		None
  2978 ;; Return value:  Size  Location     Type
  2979 ;;                  1    wreg      void 
  2980 ;; Registers used:
  2981 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2982 ;; Tracked objects:
  2983 ;;		On entry : 0/0
  2984 ;;		On exit  : 0/0
  2985 ;;		Unchanged: 0/0
  2986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2987 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2990 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2991 ;;Total ram usage:        6 bytes
  2992 ;; Hardware stack levels used:    1
  2993 ;; Hardware stack levels required when called:    4
  2994 ;; This function calls:
  2995 ;;		_WritetoEEPROM
  2996 ;; This function is called by:
  2997 ;;		_WriteDataToEEPROM
  2998 ;; This function uses a non-reentrant model
  2999 ;;
  3000                           
  3001                           	psect	text20
  3002  002474                     __ptext20:
  3003                           	opt callstack 0
  3004  002474                     _NVMWrite:
  3005                           	opt callstack 22
  3006                           
  3007                           ;EEPROM.c: 150: while(count > 0)
  3008                           
  3009                           ;incstack = 0
  3010  002474  D015               	goto	l3907
  3011  002476                     l937:
  3012  002476  B2A6               	btfsc	4006,1,c	;volsfr
  3013  002478  D7FE               	goto	l937
  3014                           
  3015                           ;EEPROM.c: 153: WritetoEEPROM(addr++,*source);
  3016  00247A  C00B  F006         	movff	NVMWrite@addr,WritetoEEPROM@Address
  3017  00247E  C00C  F007         	movff	NVMWrite@addr+1,WritetoEEPROM@Address+1
  3018  002482  C009  FFD9         	movff	NVMWrite@source,fsr2l
  3019  002486  C00A  FFDA         	movff	NVMWrite@source+1,fsr2h
  3020  00248A  50DF               	movf	indf2,w,c
  3021  00248C  6E08               	movwf	WritetoEEPROM@Data,c
  3022  00248E  ECA6  F012         	call	_WritetoEEPROM	;wreg free
  3023  002492  4A0B               	infsnz	NVMWrite@addr,f,c
  3024  002494  2A0C               	incf	NVMWrite@addr+1,f,c
  3025                           
  3026                           ;EEPROM.c: 154: count--;
  3027  002496  060D               	decf	NVMWrite@count,f,c
  3028  002498  A0D8               	btfss	status,0,c
  3029  00249A  060E               	decf	NVMWrite@count+1,f,c
  3030                           
  3031                           ;EEPROM.c: 155: source++;
  3032  00249C  4A09               	infsnz	NVMWrite@source,f,c
  3033  00249E  2A0A               	incf	NVMWrite@source+1,f,c
  3034  0024A0                     l3907:
  3035  0024A0  500D               	movf	NVMWrite@count,w,c
  3036  0024A2  100E               	iorwf	NVMWrite@count+1,w,c
  3037  0024A4  B4D8               	btfsc	status,2,c
  3038  0024A6  0012               	return	
  3039  0024A8  D7E6               	goto	l937
  3040  0024AA                     __end_of_NVMWrite:
  3041                           	opt callstack 0
  3042                           
  3043 ;; *************** function _WritetoEEPROM *****************
  3044 ;; Defined at:
  3045 ;;		line 95 in file "EEPROM.c"
  3046 ;; Parameters:    Size  Location     Type
  3047 ;;  Address         2    5[COMRAM] unsigned short 
  3048 ;;  Data            1    7[COMRAM] unsigned char 
  3049 ;; Auto vars:     Size  Location     Type
  3050 ;;		None
  3051 ;; Return value:  Size  Location     Type
  3052 ;;                  1    wreg      void 
  3053 ;; Registers used:
  3054 ;;		wreg, status,2
  3055 ;; Tracked objects:
  3056 ;;		On entry : 0/0
  3057 ;;		On exit  : 0/0
  3058 ;;		Unchanged: 0/0
  3059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3060 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3063 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3064 ;;Total ram usage:        3 bytes
  3065 ;; Hardware stack levels used:    1
  3066 ;; Hardware stack levels required when called:    3
  3067 ;; This function calls:
  3068 ;;		Nothing
  3069 ;; This function is called by:
  3070 ;;		_NVMWrite
  3071 ;; This function uses a non-reentrant model
  3072 ;;
  3073                           
  3074                           	psect	text21
  3075  00254C                     __ptext21:
  3076                           	opt callstack 0
  3077  00254C                     _WritetoEEPROM:
  3078                           	opt callstack 22
  3079                           
  3080                           ;EEPROM.c: 97: static BYTE GIE_Status;;EEPROM.c: 99: EEADRH = (BYTE)(Address>>8);
  3081                           
  3082                           ;incstack = 0
  3083  00254C  5007               	movf	WritetoEEPROM@Address+1,w,c
  3084  00254E  6EAA               	movwf	4010,c	;volatile
  3085                           
  3086                           ;EEPROM.c: 100: EEADR = (BYTE)Address;
  3087  002550  C006  FFA9         	movff	WritetoEEPROM@Address,4009	;volatile
  3088                           
  3089                           ;EEPROM.c: 101: EEDATA = Data;
  3090  002554  C008  FFA8         	movff	WritetoEEPROM@Data,4008	;volatile
  3091                           
  3092                           ;EEPROM.c: 102: EECON1bits.WREN = 1;
  3093  002558  84A6               	bsf	4006,2,c	;volsfr
  3094                           
  3095                           ;EEPROM.c: 103: GIE_Status = INTCONbits.GIE;
  3096  00255A  0E00               	movlw	0
  3097  00255C  BEF2               	btfsc	4082,7,c	;volatile
  3098  00255E  0E01               	movlw	1
  3099  002560  6E35               	movwf	WritetoEEPROM@GIE_Status,c
  3100                           
  3101                           ;EEPROM.c: 104: INTCONbits.GIE = 0;
  3102  002562  9EF2               	bcf	4082,7,c	;volatile
  3103                           
  3104                           ;EEPROM.c: 105: EECON2 = 0x55;
  3105  002564  0E55               	movlw	85
  3106  002566  6EA7               	movwf	4007,c	;volsfr
  3107                           
  3108                           ;EEPROM.c: 106: EECON2 = 0xAA;
  3109  002568  0EAA               	movlw	170
  3110  00256A  6EA7               	movwf	4007,c	;volsfr
  3111                           
  3112                           ;EEPROM.c: 107: EECON1bits.WR = 1;
  3113  00256C  82A6               	bsf	4006,1,c	;volsfr
  3114                           
  3115                           ;EEPROM.c: 108: INTCONbits.GIE = GIE_Status;
  3116  00256E  B035               	btfsc	WritetoEEPROM@GIE_Status,0,c
  3117  002570  D002               	bra	u2195
  3118  002572  9EF2               	bcf	4082,7,c	;volatile
  3119  002574  D001               	bra	u2196
  3120  002576                     u2195:
  3121  002576  8EF2               	bsf	4082,7,c	;volatile
  3122  002578                     u2196:
  3123                           
  3124                           ;EEPROM.c: 109: EECON1bits.WREN = 0;
  3125  002578  94A6               	bcf	4006,2,c	;volsfr
  3126  00257A                     l920:
  3127  00257A  B2A6               	btfsc	4006,1,c	;volsfr
  3128  00257C  D7FE               	goto	l920
  3129  00257E  0012               	return	
  3130  002580                     __end_of_WritetoEEPROM:
  3131                           	opt callstack 0
  3132                           
  3133 ;; *************** function _FRAME_DataUpdateAndChangeOption *****************
  3134 ;; Defined at:
  3135 ;;		line 390 in file "FRAME.c"
  3136 ;; Parameters:    Size  Location     Type
  3137 ;;  message         2    5[COMRAM] PTR struct .
  3138 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3139 ;; Auto vars:     Size  Location     Type
  3140 ;;		None
  3141 ;; Return value:  Size  Location     Type
  3142 ;;                  1    wreg      void 
  3143 ;; Registers used:
  3144 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3145 ;; Tracked objects:
  3146 ;;		On entry : 0/0
  3147 ;;		On exit  : 0/0
  3148 ;;		Unchanged: 0/0
  3149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3150 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3152 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3153 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3154 ;;Total ram usage:        3 bytes
  3155 ;; Hardware stack levels used:    1
  3156 ;; Hardware stack levels required when called:    3
  3157 ;; This function calls:
  3158 ;;		Nothing
  3159 ;; This function is called by:
  3160 ;;		_FRAME_DeviceReset
  3161 ;; This function uses a non-reentrant model
  3162 ;;
  3163                           
  3164                           	psect	text22
  3165  0021DA                     __ptext22:
  3166                           	opt callstack 0
  3167  0021DA                     _FRAME_DataUpdateAndChangeOption:
  3168                           	opt callstack 24
  3169                           
  3170                           ;FRAME.c: 393: Dane->rokU16 = message->data[4];
  3171                           
  3172                           ;incstack = 0
  3173  0021DA  EE20 F00C          	lfsr	2,12
  3174  0021DE  5006               	movf	FRAME_DataUpdateAndChangeOption@message,w,c
  3175  0021E0  26D9               	addwf	fsr2l,f,c
  3176  0021E2  5007               	movf	FRAME_DataUpdateAndChangeOption@message+1,w,c
  3177  0021E4  22DA               	addwfc	fsr2h,f,c
  3178  0021E6  50DF               	movf	indf2,w,c
  3179  0021E8  6E08               	movwf	??_FRAME_DataUpdateAndChangeOption& (0+255),c
  3180  0021EA  5008               	movf	??_FRAME_DataUpdateAndChangeOption,w,c
  3181  0021EC  6E36               	movwf	54,c
  3182  0021EE  6A37               	clrf	55,c
  3183                           
  3184                           ;FRAME.c: 394: Dane->miesiacU16 = message->data[5];
  3185  0021F0  EE20 F00D          	lfsr	2,13
  3186  0021F4  5006               	movf	FRAME_DataUpdateAndChangeOption@message,w,c
  3187  0021F6  26D9               	addwf	fsr2l,f,c
  3188  0021F8  5007               	movf	FRAME_DataUpdateAndChangeOption@message+1,w,c
  3189  0021FA  22DA               	addwfc	fsr2h,f,c
  3190  0021FC  50DF               	movf	indf2,w,c
  3191  0021FE  6E08               	movwf	??_FRAME_DataUpdateAndChangeOption& (0+255),c
  3192  002200  5008               	movf	??_FRAME_DataUpdateAndChangeOption,w,c
  3193  002202  6E38               	movwf	56,c
  3194  002204  6A39               	clrf	57,c
  3195                           
  3196                           ;FRAME.c: 395: Dane->dzienU16 = message->data[6];
  3197  002206  EE20 F00E          	lfsr	2,14
  3198  00220A  5006               	movf	FRAME_DataUpdateAndChangeOption@message,w,c
  3199  00220C  26D9               	addwf	fsr2l,f,c
  3200  00220E  5007               	movf	FRAME_DataUpdateAndChangeOption@message+1,w,c
  3201  002210  22DA               	addwfc	fsr2h,f,c
  3202  002212  50DF               	movf	indf2,w,c
  3203  002214  6E08               	movwf	??_FRAME_DataUpdateAndChangeOption& (0+255),c
  3204  002216  5008               	movf	??_FRAME_DataUpdateAndChangeOption,w,c
  3205  002218  6E3A               	movwf	58,c
  3206  00221A  6A3B               	clrf	59,c
  3207                           
  3208                           ;FRAME.c: 396: Dane->godzinaU16 = message->data[7];
  3209  00221C  EE20 F00F          	lfsr	2,15
  3210  002220  5006               	movf	FRAME_DataUpdateAndChangeOption@message,w,c
  3211  002222  26D9               	addwf	fsr2l,f,c
  3212  002224  5007               	movf	FRAME_DataUpdateAndChangeOption@message+1,w,c
  3213  002226  22DA               	addwfc	fsr2h,f,c
  3214  002228  50DF               	movf	indf2,w,c
  3215  00222A  6E08               	movwf	??_FRAME_DataUpdateAndChangeOption& (0+255),c
  3216  00222C  5008               	movf	??_FRAME_DataUpdateAndChangeOption,w,c
  3217  00222E  6E3C               	movwf	60,c
  3218  002230  6A3D               	clrf	61,c
  3219  002232  0012               	return		;funcret
  3220  002234                     __end_of_FRAME_DataUpdateAndChangeOption:
  3221                           	opt callstack 0
  3222                           
  3223 ;; *************** function _FRAME_AxisStatus *****************
  3224 ;; Defined at:
  3225 ;;		line 354 in file "FRAME.c"
  3226 ;; Parameters:    Size  Location     Type
  3227 ;;  message         2    5[COMRAM] PTR struct .
  3228 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3229 ;; Auto vars:     Size  Location     Type
  3230 ;;  i               2    0        unsigned short 
  3231 ;; Return value:  Size  Location     Type
  3232 ;;                  1    wreg      void 
  3233 ;; Registers used:
  3234 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3235 ;; Tracked objects:
  3236 ;;		On entry : 0/0
  3237 ;;		On exit  : 0/0
  3238 ;;		Unchanged: 0/0
  3239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3240 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3242 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3243 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3244 ;;Total ram usage:        3 bytes
  3245 ;; Hardware stack levels used:    1
  3246 ;; Hardware stack levels required when called:    3
  3247 ;; This function calls:
  3248 ;;		Nothing
  3249 ;; This function is called by:
  3250 ;;		_FRAME_HandleCanFrame
  3251 ;; This function uses a non-reentrant model
  3252 ;;
  3253                           
  3254                           	psect	text23
  3255  0024AA                     __ptext23:
  3256                           	opt callstack 0
  3257  0024AA                     _FRAME_AxisStatus:
  3258                           	opt callstack 25
  3259                           
  3260                           ;FRAME.c: 356: WORD i;;FRAME.c: 358: if(message->message_type == 0x02)
  3261                           
  3262                           ;incstack = 0
  3263  0024AA  EE20 F001          	lfsr	2,1
  3264  0024AE  5006               	movf	FRAME_AxisStatus@message,w,c
  3265  0024B0  26D9               	addwf	fsr2l,f,c
  3266  0024B2  5007               	movf	FRAME_AxisStatus@message+1,w,c
  3267  0024B4  22DA               	addwfc	fsr2h,f,c
  3268  0024B6  0E02               	movlw	2
  3269  0024B8  18DE               	xorwf	postinc2,w,c
  3270  0024BA  A4D8               	btfss	status,2,c
  3271  0024BC  0012               	return	
  3272                           
  3273                           ;FRAME.c: 359: {;FRAME.c: 360: message->data_length = 1;
  3274  0024BE  EE20 F010          	lfsr	2,16
  3275  0024C2  5006               	movf	FRAME_AxisStatus@message,w,c
  3276  0024C4  26D9               	addwf	fsr2l,f,c
  3277  0024C6  5007               	movf	FRAME_AxisStatus@message+1,w,c
  3278  0024C8  22DA               	addwfc	fsr2h,f,c
  3279  0024CA  0E01               	movlw	1
  3280  0024CC  6EDF               	movwf	indf2,c
  3281                           
  3282                           ;FRAME.c: 371: message->data[0] = 0xFF;
  3283  0024CE  EE20 F008          	lfsr	2,8
  3284  0024D2  5006               	movf	FRAME_AxisStatus@message,w,c
  3285  0024D4  26D9               	addwf	fsr2l,f,c
  3286  0024D6  5007               	movf	FRAME_AxisStatus@message+1,w,c
  3287  0024D8  22DA               	addwfc	fsr2h,f,c
  3288  0024DA  0EFF               	movlw	255
  3289  0024DC  6EDF               	movwf	indf2,c
  3290                           
  3291                           ;FRAME.c: 372: }
  3292  0024DE  0012               	return		;funcret
  3293  0024E0                     __end_of_FRAME_AxisStatus:
  3294                           	opt callstack 0
  3295                           
  3296 ;; *************** function _FRAME_AveragingTimes *****************
  3297 ;; Defined at:
  3298 ;;		line 290 in file "FRAME.c"
  3299 ;; Parameters:    Size  Location     Type
  3300 ;;  message         2    5[COMRAM] PTR struct .
  3301 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3302 ;; Auto vars:     Size  Location     Type
  3303 ;;		None
  3304 ;; Return value:  Size  Location     Type
  3305 ;;                  1    wreg      void 
  3306 ;; Registers used:
  3307 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3308 ;; Tracked objects:
  3309 ;;		On entry : 0/0
  3310 ;;		On exit  : 0/0
  3311 ;;		Unchanged: 0/0
  3312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3313 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3315 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3316 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3317 ;;Total ram usage:        3 bytes
  3318 ;; Hardware stack levels used:    1
  3319 ;; Hardware stack levels required when called:    3
  3320 ;; This function calls:
  3321 ;;		Nothing
  3322 ;; This function is called by:
  3323 ;;		_FRAME_HandleCanFrame
  3324 ;; This function uses a non-reentrant model
  3325 ;;
  3326                           
  3327                           	psect	text24
  3328  0024E0                     __ptext24:
  3329                           	opt callstack 0
  3330  0024E0                     _FRAME_AveragingTimes:
  3331                           	opt callstack 25
  3332                           
  3333                           ;FRAME.c: 292: if(message->message_type == 0x02)
  3334                           
  3335                           ;incstack = 0
  3336  0024E0  EE20 F001          	lfsr	2,1
  3337  0024E4  5006               	movf	FRAME_AveragingTimes@message,w,c
  3338  0024E6  26D9               	addwf	fsr2l,f,c
  3339  0024E8  5007               	movf	FRAME_AveragingTimes@message+1,w,c
  3340  0024EA  22DA               	addwfc	fsr2h,f,c
  3341  0024EC  0E02               	movlw	2
  3342  0024EE  18DE               	xorwf	postinc2,w,c
  3343  0024F0  A4D8               	btfss	status,2,c
  3344  0024F2  0012               	return	
  3345                           
  3346                           ;FRAME.c: 293: {;FRAME.c: 294: message->data_length = 1;
  3347  0024F4  EE20 F010          	lfsr	2,16
  3348  0024F8  5006               	movf	FRAME_AveragingTimes@message,w,c
  3349  0024FA  26D9               	addwf	fsr2l,f,c
  3350  0024FC  5007               	movf	FRAME_AveragingTimes@message+1,w,c
  3351  0024FE  22DA               	addwfc	fsr2h,f,c
  3352  002500  0E01               	movlw	1
  3353  002502  6EDF               	movwf	indf2,c
  3354                           
  3355                           ;FRAME.c: 302: message->data[0] = 0xFF;
  3356  002504  EE20 F008          	lfsr	2,8
  3357  002508  5006               	movf	FRAME_AveragingTimes@message,w,c
  3358  00250A  26D9               	addwf	fsr2l,f,c
  3359  00250C  5007               	movf	FRAME_AveragingTimes@message+1,w,c
  3360  00250E  22DA               	addwfc	fsr2h,f,c
  3361  002510  0EFF               	movlw	255
  3362  002512  6EDF               	movwf	indf2,c
  3363                           
  3364                           ;FRAME.c: 303: }
  3365  002514  0012               	return		;funcret
  3366  002516                     __end_of_FRAME_AveragingTimes:
  3367                           	opt callstack 0
  3368                           
  3369 ;; *************** function _FRAME_AnalogValue *****************
  3370 ;; Defined at:
  3371 ;;		line 648 in file "FRAME.c"
  3372 ;; Parameters:    Size  Location     Type
  3373 ;;  message         2    5[COMRAM] PTR struct .
  3374 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3375 ;;  set             2    7[COMRAM] unsigned short 
  3376 ;; Auto vars:     Size  Location     Type
  3377 ;;  i               2    0        unsigned short 
  3378 ;; Return value:  Size  Location     Type
  3379 ;;                  1    wreg      void 
  3380 ;; Registers used:
  3381 ;;		None
  3382 ;; Tracked objects:
  3383 ;;		On entry : 0/0
  3384 ;;		On exit  : 0/0
  3385 ;;		Unchanged: 0/0
  3386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3387 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3390 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3391 ;;Total ram usage:        4 bytes
  3392 ;; Hardware stack levels used:    1
  3393 ;; Hardware stack levels required when called:    3
  3394 ;; This function calls:
  3395 ;;		Nothing
  3396 ;; This function is called by:
  3397 ;;		_FRAME_HandleCanFrame
  3398 ;; This function uses a non-reentrant model
  3399 ;;
  3400                           
  3401                           	psect	text25
  3402  0027AA                     __ptext25:
  3403                           	opt callstack 0
  3404  0027AA                     _FRAME_AnalogValue:
  3405                           	opt callstack 25
  3406                           
  3407                           ;incstack = 0
  3408  0027AA  0012               	return		;funcret
  3409  0027AC                     __end_of_FRAME_AnalogValue:
  3410                           	opt callstack 0
  3411                           
  3412 ;; *************** function _FRAME_AdressOfNeighbors *****************
  3413 ;; Defined at:
  3414 ;;		line 706 in file "FRAME.c"
  3415 ;; Parameters:    Size  Location     Type
  3416 ;;  message         2    5[COMRAM] PTR struct .
  3417 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3418 ;;  nrRamki         2    7[COMRAM] unsigned short 
  3419 ;; Auto vars:     Size  Location     Type
  3420 ;;  kier            2   13[COMRAM] unsigned short 
  3421 ;;  it              2    0        unsigned short 
  3422 ;; Return value:  Size  Location     Type
  3423 ;;                  1    wreg      void 
  3424 ;; Registers used:
  3425 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3426 ;; Tracked objects:
  3427 ;;		On entry : 0/0
  3428 ;;		On exit  : 0/0
  3429 ;;		Unchanged: 0/0
  3430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3431 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3432 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3433 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3434 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3435 ;;Total ram usage:       10 bytes
  3436 ;; Hardware stack levels used:    1
  3437 ;; Hardware stack levels required when called:    4
  3438 ;; This function calls:
  3439 ;;		_CAN_SetupFilter_Ne
  3440 ;; This function is called by:
  3441 ;;		_FRAME_HandleCanFrame
  3442 ;; This function uses a non-reentrant model
  3443 ;;
  3444                           
  3445                           	psect	text26
  3446  000C62                     __ptext26:
  3447                           	opt callstack 0
  3448  000C62                     _FRAME_AdressOfNeighbors:
  3449                           	opt callstack 24
  3450                           
  3451                           ;FRAME.c: 708: WORD it;;FRAME.c: 711: WORD kier = (nrRamki-0x10);
  3452                           
  3453                           ;incstack = 0
  3454  000C62  0EF0               	movlw	240
  3455  000C64  2408               	addwf	FRAME_AdressOfNeighbors@nrRamki,w,c
  3456  000C66  6E0E               	movwf	FRAME_AdressOfNeighbors@kier,c
  3457  000C68  0EFF               	movlw	255
  3458  000C6A  2009               	addwfc	FRAME_AdressOfNeighbors@nrRamki+1,w,c
  3459  000C6C  6E0F               	movwf	FRAME_AdressOfNeighbors@kier+1,c
  3460                           
  3461                           ;FRAME.c: 712: if(message->message_type == 0x02)
  3462  000C6E  EE20 F001          	lfsr	2,1
  3463  000C72  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3464  000C74  26D9               	addwf	fsr2l,f,c
  3465  000C76  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3466  000C78  22DA               	addwfc	fsr2h,f,c
  3467  000C7A  0E02               	movlw	2
  3468  000C7C  18DE               	xorwf	postinc2,w,c
  3469  000C7E  A4D8               	btfss	status,2,c
  3470  000C80  D08E               	goto	l4475
  3471                           
  3472                           ;FRAME.c: 713: {;FRAME.c: 715: message->data_length = 8;
  3473  000C82  EE20 F010          	lfsr	2,16
  3474  000C86  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3475  000C88  26D9               	addwf	fsr2l,f,c
  3476  000C8A  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3477  000C8C  22DA               	addwfc	fsr2h,f,c
  3478  000C8E  0E08               	movlw	8
  3479  000C90  6EDF               	movwf	indf2,c
  3480                           
  3481                           ;FRAME.c: 717: if(kier == 0)
  3482  000C92  500E               	movf	FRAME_AdressOfNeighbors@kier,w,c
  3483  000C94  100F               	iorwf	FRAME_AdressOfNeighbors@kier+1,w,c
  3484  000C96  A4D8               	btfss	status,2,c
  3485  000C98  D041               	goto	l4473
  3486                           
  3487                           ;FRAME.c: 718: {;FRAME.c: 719: message->data[0] = (NeightAdress1>> 8);
  3488  000C9A  EE20 F008          	lfsr	2,8
  3489  000C9E  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3490  000CA0  26D9               	addwf	fsr2l,f,c
  3491  000CA2  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3492  000CA4  22DA               	addwfc	fsr2h,f,c
  3493  000CA6  504C               	movf	_NeightAdress1+1,w,c	;volatile
  3494  000CA8  6EDF               	movwf	indf2,c
  3495                           
  3496                           ;FRAME.c: 720: message->data[1] = NeightAdress1 & 0b11111111;
  3497  000CAA  EE20 F009          	lfsr	2,9
  3498  000CAE  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3499  000CB0  26D9               	addwf	fsr2l,f,c
  3500  000CB2  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3501  000CB4  22DA               	addwfc	fsr2h,f,c
  3502  000CB6  C04B  FFDF         	movff	_NeightAdress1,indf2	;volatile
  3503                           
  3504                           ;FRAME.c: 721: message->data[2] = (NeightAdress2>> 8);
  3505  000CBA  EE20 F00A          	lfsr	2,10
  3506  000CBE  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3507  000CC0  26D9               	addwf	fsr2l,f,c
  3508  000CC2  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3509  000CC4  22DA               	addwfc	fsr2h,f,c
  3510  000CC6  5059               	movf	_NeightAdress2+1,w,c	;volatile
  3511  000CC8  6EDF               	movwf	indf2,c
  3512                           
  3513                           ;FRAME.c: 722: message->data[3] = NeightAdress2 & 0b11111111;
  3514  000CCA  EE20 F00B          	lfsr	2,11
  3515  000CCE  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3516  000CD0  26D9               	addwf	fsr2l,f,c
  3517  000CD2  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3518  000CD4  22DA               	addwfc	fsr2h,f,c
  3519  000CD6  C058  FFDF         	movff	_NeightAdress2,indf2	;volatile
  3520                           
  3521                           ;FRAME.c: 723: message->data[4] = (NeightAdress3>> 8);
  3522  000CDA  EE20 F00C          	lfsr	2,12
  3523  000CDE  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3524  000CE0  26D9               	addwf	fsr2l,f,c
  3525  000CE2  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3526  000CE4  22DA               	addwfc	fsr2h,f,c
  3527  000CE6  504A               	movf	_NeightAdress3+1,w,c	;volatile
  3528  000CE8  6EDF               	movwf	indf2,c
  3529                           
  3530                           ;FRAME.c: 724: message->data[5] = NeightAdress3 & 0b11111111;
  3531  000CEA  EE20 F00D          	lfsr	2,13
  3532  000CEE  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3533  000CF0  26D9               	addwf	fsr2l,f,c
  3534  000CF2  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3535  000CF4  22DA               	addwfc	fsr2h,f,c
  3536  000CF6  C049  FFDF         	movff	_NeightAdress3,indf2	;volatile
  3537                           
  3538                           ;FRAME.c: 725: message->data[6] = (NeightAdress4>> 8);
  3539  000CFA  EE20 F00E          	lfsr	2,14
  3540  000CFE  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3541  000D00  26D9               	addwf	fsr2l,f,c
  3542  000D02  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3543  000D04  22DA               	addwfc	fsr2h,f,c
  3544  000D06  5048               	movf	_NeightAdress4+1,w,c	;volatile
  3545  000D08  6EDF               	movwf	indf2,c
  3546                           
  3547                           ;FRAME.c: 726: message->data[7] = NeightAdress4 & 0b11111111;
  3548  000D0A  EE20 F00F          	lfsr	2,15
  3549  000D0E  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3550  000D10  26D9               	addwf	fsr2l,f,c
  3551  000D12  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3552  000D14  22DA               	addwfc	fsr2h,f,c
  3553  000D16  C047  FFDF         	movff	_NeightAdress4,indf2	;volatile
  3554                           
  3555                           ;FRAME.c: 727: }
  3556  000D1A  0012               	return	
  3557  000D1C                     l4473:
  3558                           
  3559                           ;FRAME.c: 728: else;FRAME.c: 729: {;FRAME.c: 730: message->data[0] = (NeightAdress5>> 8)
      +                          ;
  3560  000D1C  EE20 F008          	lfsr	2,8
  3561  000D20  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3562  000D22  26D9               	addwf	fsr2l,f,c
  3563  000D24  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3564  000D26  22DA               	addwfc	fsr2h,f,c
  3565  000D28  5046               	movf	_NeightAdress5+1,w,c	;volatile
  3566  000D2A  6EDF               	movwf	indf2,c
  3567                           
  3568                           ;FRAME.c: 731: message->data[1] = NeightAdress5 & 0b11111111;
  3569  000D2C  EE20 F009          	lfsr	2,9
  3570  000D30  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3571  000D32  26D9               	addwf	fsr2l,f,c
  3572  000D34  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3573  000D36  22DA               	addwfc	fsr2h,f,c
  3574  000D38  C045  FFDF         	movff	_NeightAdress5,indf2	;volatile
  3575                           
  3576                           ;FRAME.c: 732: message->data[2] = (NeightAdress6>> 8);
  3577  000D3C  EE20 F00A          	lfsr	2,10
  3578  000D40  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3579  000D42  26D9               	addwf	fsr2l,f,c
  3580  000D44  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3581  000D46  22DA               	addwfc	fsr2h,f,c
  3582  000D48  5044               	movf	_NeightAdress6+1,w,c	;volatile
  3583  000D4A  6EDF               	movwf	indf2,c
  3584                           
  3585                           ;FRAME.c: 733: message->data[3] = NeightAdress6 & 0b11111111;
  3586  000D4C  EE20 F00B          	lfsr	2,11
  3587  000D50  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3588  000D52  26D9               	addwf	fsr2l,f,c
  3589  000D54  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3590  000D56  22DA               	addwfc	fsr2h,f,c
  3591  000D58  C043  FFDF         	movff	_NeightAdress6,indf2	;volatile
  3592                           
  3593                           ;FRAME.c: 734: message->data[4] = (NeightAdress7>> 8);
  3594  000D5C  EE20 F00C          	lfsr	2,12
  3595  000D60  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3596  000D62  26D9               	addwf	fsr2l,f,c
  3597  000D64  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3598  000D66  22DA               	addwfc	fsr2h,f,c
  3599  000D68  5042               	movf	_NeightAdress7+1,w,c	;volatile
  3600  000D6A  6EDF               	movwf	indf2,c
  3601                           
  3602                           ;FRAME.c: 735: message->data[5] = NeightAdress7 & 0b11111111;
  3603  000D6C  EE20 F00D          	lfsr	2,13
  3604  000D70  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3605  000D72  26D9               	addwf	fsr2l,f,c
  3606  000D74  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3607  000D76  22DA               	addwfc	fsr2h,f,c
  3608  000D78  C041  FFDF         	movff	_NeightAdress7,indf2	;volatile
  3609                           
  3610                           ;FRAME.c: 736: message->data[6] = (NeightAdress8>> 8);
  3611  000D7C  EE20 F00E          	lfsr	2,14
  3612  000D80  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3613  000D82  26D9               	addwf	fsr2l,f,c
  3614  000D84  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3615  000D86  22DA               	addwfc	fsr2h,f,c
  3616  000D88  5040               	movf	_NeightAdress8+1,w,c	;volatile
  3617  000D8A  6EDF               	movwf	indf2,c
  3618                           
  3619                           ;FRAME.c: 737: message->data[7] = NeightAdress8 & 0b11111111;
  3620  000D8C  EE20 F00F          	lfsr	2,15
  3621  000D90  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3622  000D92  26D9               	addwf	fsr2l,f,c
  3623  000D94  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3624  000D96  22DA               	addwfc	fsr2h,f,c
  3625  000D98  C03F  FFDF         	movff	_NeightAdress8,indf2	;volatile
  3626  000D9C  0012               	return	
  3627  000D9E                     l4475:
  3628                           
  3629                           ;FRAME.c: 743: else;FRAME.c: 744: {;FRAME.c: 747: if(kier == 0)
  3630  000D9E  500E               	movf	FRAME_AdressOfNeighbors@kier,w,c
  3631  000DA0  100F               	iorwf	FRAME_AdressOfNeighbors@kier+1,w,c
  3632  000DA2  A4D8               	btfss	status,2,c
  3633  000DA4  D063               	goto	l4481
  3634                           
  3635                           ;FRAME.c: 748: {;FRAME.c: 749: NeightAdress1 = (message->data[0] << 8)| message->data[1]
      +                          ;
  3636  000DA6  EE20 F008          	lfsr	2,8
  3637  000DAA  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3638  000DAC  26D9               	addwf	fsr2l,f,c
  3639  000DAE  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3640  000DB0  22DA               	addwfc	fsr2h,f,c
  3641  000DB2  50DF               	movf	indf2,w,c
  3642  000DB4  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3643  000DB6  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3644  000DB8  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3645  000DBA  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3646  000DBC  EE20 F009          	lfsr	2,9
  3647  000DC0  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3648  000DC2  26D9               	addwf	fsr2l,f,c
  3649  000DC4  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3650  000DC6  22DA               	addwfc	fsr2h,f,c
  3651  000DC8  50DF               	movf	indf2,w,c
  3652  000DCA  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3653  000DCC  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3654  000DCE  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3655  000DD0  6E4B               	movwf	_NeightAdress1,c	;volatile
  3656  000DD2  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3657  000DD4  6E4C               	movwf	_NeightAdress1+1,c	;volatile
  3658                           
  3659                           ;FRAME.c: 750: NeightAdress2 = (message->data[2] << 8)| message->data[3];
  3660  000DD6  EE20 F00A          	lfsr	2,10
  3661  000DDA  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3662  000DDC  26D9               	addwf	fsr2l,f,c
  3663  000DDE  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3664  000DE0  22DA               	addwfc	fsr2h,f,c
  3665  000DE2  50DF               	movf	indf2,w,c
  3666  000DE4  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3667  000DE6  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3668  000DE8  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3669  000DEA  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3670  000DEC  EE20 F00B          	lfsr	2,11
  3671  000DF0  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3672  000DF2  26D9               	addwf	fsr2l,f,c
  3673  000DF4  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3674  000DF6  22DA               	addwfc	fsr2h,f,c
  3675  000DF8  50DF               	movf	indf2,w,c
  3676  000DFA  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3677  000DFC  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3678  000DFE  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3679  000E00  6E58               	movwf	_NeightAdress2,c	;volatile
  3680  000E02  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3681  000E04  6E59               	movwf	_NeightAdress2+1,c	;volatile
  3682                           
  3683                           ;FRAME.c: 751: NeightAdress3 = (message->data[4] << 8)| message->data[5];
  3684  000E06  EE20 F00C          	lfsr	2,12
  3685  000E0A  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3686  000E0C  26D9               	addwf	fsr2l,f,c
  3687  000E0E  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3688  000E10  22DA               	addwfc	fsr2h,f,c
  3689  000E12  50DF               	movf	indf2,w,c
  3690  000E14  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3691  000E16  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3692  000E18  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3693  000E1A  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3694  000E1C  EE20 F00D          	lfsr	2,13
  3695  000E20  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3696  000E22  26D9               	addwf	fsr2l,f,c
  3697  000E24  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3698  000E26  22DA               	addwfc	fsr2h,f,c
  3699  000E28  50DF               	movf	indf2,w,c
  3700  000E2A  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3701  000E2C  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3702  000E2E  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3703  000E30  6E49               	movwf	_NeightAdress3,c	;volatile
  3704  000E32  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3705  000E34  6E4A               	movwf	_NeightAdress3+1,c	;volatile
  3706                           
  3707                           ;FRAME.c: 752: NeightAdress4 = (message->data[6] << 8)| message->data[7];
  3708  000E36  EE20 F00E          	lfsr	2,14
  3709  000E3A  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3710  000E3C  26D9               	addwf	fsr2l,f,c
  3711  000E3E  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3712  000E40  22DA               	addwfc	fsr2h,f,c
  3713  000E42  50DF               	movf	indf2,w,c
  3714  000E44  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3715  000E46  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3716  000E48  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3717  000E4A  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3718  000E4C  EE20 F00F          	lfsr	2,15
  3719  000E50  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3720  000E52  26D9               	addwf	fsr2l,f,c
  3721  000E54  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3722  000E56  22DA               	addwfc	fsr2h,f,c
  3723  000E58  50DF               	movf	indf2,w,c
  3724  000E5A  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3725  000E5C  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3726  000E5E  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3727  000E60  6E47               	movwf	_NeightAdress4,c	;volatile
  3728  000E62  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3729  000E64  6E48               	movwf	_NeightAdress4+1,c	;volatile
  3730  000E66                     l4479:
  3731                           
  3732                           ;FRAME.c: 753: CAN_SetupFilter_Ne();
  3733  000E66  ECA6  F00E         	call	_CAN_SetupFilter_Ne	;wreg free
  3734                           
  3735                           ;FRAME.c: 756: }
  3736  000E6A  0012               	return	
  3737  000E6C                     l4481:
  3738                           
  3739                           ;FRAME.c: 757: else;FRAME.c: 758: {;FRAME.c: 759: NeightAdress5 = (message->data[0] << 8
      +                          )| message->data[1];
  3740  000E6C  EE20 F008          	lfsr	2,8
  3741  000E70  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3742  000E72  26D9               	addwf	fsr2l,f,c
  3743  000E74  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3744  000E76  22DA               	addwfc	fsr2h,f,c
  3745  000E78  50DF               	movf	indf2,w,c
  3746  000E7A  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3747  000E7C  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3748  000E7E  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3749  000E80  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3750  000E82  EE20 F009          	lfsr	2,9
  3751  000E86  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3752  000E88  26D9               	addwf	fsr2l,f,c
  3753  000E8A  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3754  000E8C  22DA               	addwfc	fsr2h,f,c
  3755  000E8E  50DF               	movf	indf2,w,c
  3756  000E90  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3757  000E92  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3758  000E94  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3759  000E96  6E45               	movwf	_NeightAdress5,c	;volatile
  3760  000E98  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3761  000E9A  6E46               	movwf	_NeightAdress5+1,c	;volatile
  3762                           
  3763                           ;FRAME.c: 760: NeightAdress6 = (message->data[2] << 8)| message->data[3];
  3764  000E9C  EE20 F00A          	lfsr	2,10
  3765  000EA0  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3766  000EA2  26D9               	addwf	fsr2l,f,c
  3767  000EA4  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3768  000EA6  22DA               	addwfc	fsr2h,f,c
  3769  000EA8  50DF               	movf	indf2,w,c
  3770  000EAA  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3771  000EAC  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3772  000EAE  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3773  000EB0  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3774  000EB2  EE20 F00B          	lfsr	2,11
  3775  000EB6  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3776  000EB8  26D9               	addwf	fsr2l,f,c
  3777  000EBA  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3778  000EBC  22DA               	addwfc	fsr2h,f,c
  3779  000EBE  50DF               	movf	indf2,w,c
  3780  000EC0  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3781  000EC2  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3782  000EC4  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3783  000EC6  6E43               	movwf	_NeightAdress6,c	;volatile
  3784  000EC8  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3785  000ECA  6E44               	movwf	_NeightAdress6+1,c	;volatile
  3786                           
  3787                           ;FRAME.c: 761: NeightAdress7 = (message->data[4] << 8)| message->data[5];
  3788  000ECC  EE20 F00C          	lfsr	2,12
  3789  000ED0  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3790  000ED2  26D9               	addwf	fsr2l,f,c
  3791  000ED4  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3792  000ED6  22DA               	addwfc	fsr2h,f,c
  3793  000ED8  50DF               	movf	indf2,w,c
  3794  000EDA  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3795  000EDC  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3796  000EDE  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3797  000EE0  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3798  000EE2  EE20 F00D          	lfsr	2,13
  3799  000EE6  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3800  000EE8  26D9               	addwf	fsr2l,f,c
  3801  000EEA  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3802  000EEC  22DA               	addwfc	fsr2h,f,c
  3803  000EEE  50DF               	movf	indf2,w,c
  3804  000EF0  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3805  000EF2  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3806  000EF4  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3807  000EF6  6E41               	movwf	_NeightAdress7,c	;volatile
  3808  000EF8  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3809  000EFA  6E42               	movwf	_NeightAdress7+1,c	;volatile
  3810                           
  3811                           ;FRAME.c: 762: NeightAdress8 = (message->data[6] << 8)| message->data[7];
  3812  000EFC  EE20 F00E          	lfsr	2,14
  3813  000F00  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3814  000F02  26D9               	addwf	fsr2l,f,c
  3815  000F04  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3816  000F06  22DA               	addwfc	fsr2h,f,c
  3817  000F08  50DF               	movf	indf2,w,c
  3818  000F0A  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3819  000F0C  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3820  000F0E  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3821  000F10  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3822  000F12  EE20 F00F          	lfsr	2,15
  3823  000F16  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3824  000F18  26D9               	addwf	fsr2l,f,c
  3825  000F1A  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3826  000F1C  22DA               	addwfc	fsr2h,f,c
  3827  000F1E  50DF               	movf	indf2,w,c
  3828  000F20  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3829  000F22  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3830  000F24  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3831  000F26  6E3F               	movwf	_NeightAdress8,c	;volatile
  3832  000F28  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3833  000F2A  6E40               	movwf	_NeightAdress8+1,c	;volatile
  3834  000F2C  D79C               	goto	l4479
  3835  000F2E                     __end_of_FRAME_AdressOfNeighbors:
  3836                           	opt callstack 0
  3837                           
  3838 ;; *************** function _FRAME_AccelerometerStatus *****************
  3839 ;; Defined at:
  3840 ;;		line 197 in file "FRAME.c"
  3841 ;; Parameters:    Size  Location     Type
  3842 ;;  message         2    7[COMRAM] PTR struct .
  3843 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3844 ;; Auto vars:     Size  Location     Type
  3845 ;;		None
  3846 ;; Return value:  Size  Location     Type
  3847 ;;                  1    wreg      void 
  3848 ;; Registers used:
  3849 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3850 ;; Tracked objects:
  3851 ;;		On entry : 0/0
  3852 ;;		On exit  : 0/0
  3853 ;;		Unchanged: 0/0
  3854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3855 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3857 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3858 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3859 ;;Total ram usage:        3 bytes
  3860 ;; Hardware stack levels used:    1
  3861 ;; Hardware stack levels required when called:    4
  3862 ;; This function calls:
  3863 ;;		_MOCK_Klikniecie_Spadek
  3864 ;;		_MOCK_PrzyspieszenieX
  3865 ;;		_MOCK_PrzyspieszenieY
  3866 ;;		_MOCK_PrzyspieszenieZ
  3867 ;; This function is called by:
  3868 ;;		_FRAME_HandleCanFrame
  3869 ;; This function uses a non-reentrant model
  3870 ;;
  3871                           
  3872                           	psect	text27
  3873  001FD4                     __ptext27:
  3874                           	opt callstack 0
  3875  001FD4                     _FRAME_AccelerometerStatus:
  3876                           	opt callstack 24
  3877                           
  3878                           ;FRAME.c: 199: if(message->message_type == 0x02)
  3879                           
  3880                           ;incstack = 0
  3881  001FD4  EE20 F001          	lfsr	2,1
  3882  001FD8  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  3883  001FDA  26D9               	addwf	fsr2l,f,c
  3884  001FDC  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3885  001FDE  22DA               	addwfc	fsr2h,f,c
  3886  001FE0  0E02               	movlw	2
  3887  001FE2  18DE               	xorwf	postinc2,w,c
  3888  001FE4  A4D8               	btfss	status,2,c
  3889  001FE6  0012               	return	
  3890                           
  3891                           ;FRAME.c: 200: {;FRAME.c: 201: message->data_length = 4;
  3892  001FE8  EE20 F010          	lfsr	2,16
  3893  001FEC  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  3894  001FEE  26D9               	addwf	fsr2l,f,c
  3895  001FF0  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3896  001FF2  22DA               	addwfc	fsr2h,f,c
  3897  001FF4  0E04               	movlw	4
  3898  001FF6  6EDF               	movwf	indf2,c
  3899                           
  3900                           ;FRAME.c: 205: message->data[0] = MOCK_PrzyspieszenieX();
  3901  001FF8  EE20 F008          	lfsr	2,8
  3902  001FFC  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  3903  001FFE  26D9               	addwf	fsr2l,f,c
  3904  002000  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3905  002002  22DA               	addwfc	fsr2h,f,c
  3906  002004  ECAE  F013         	call	_MOCK_PrzyspieszenieX	;wreg free
  3907  002008  5006               	movf	?_MOCK_PrzyspieszenieX,w,c
  3908  00200A  6EDF               	movwf	indf2,c
  3909                           
  3910                           ;FRAME.c: 206: message->data[1] = MOCK_PrzyspieszenieY();
  3911  00200C  EE20 F009          	lfsr	2,9
  3912  002010  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  3913  002012  26D9               	addwf	fsr2l,f,c
  3914  002014  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3915  002016  22DA               	addwfc	fsr2h,f,c
  3916  002018  ECA9  F013         	call	_MOCK_PrzyspieszenieY	;wreg free
  3917  00201C  5006               	movf	?_MOCK_PrzyspieszenieY,w,c
  3918  00201E  6EDF               	movwf	indf2,c
  3919                           
  3920                           ;FRAME.c: 207: message->data[2] = MOCK_PrzyspieszenieZ();
  3921  002020  EE20 F00A          	lfsr	2,10
  3922  002024  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  3923  002026  26D9               	addwf	fsr2l,f,c
  3924  002028  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3925  00202A  22DA               	addwfc	fsr2h,f,c
  3926  00202C  ECA4  F013         	call	_MOCK_PrzyspieszenieZ	;wreg free
  3927  002030  5006               	movf	?_MOCK_PrzyspieszenieZ,w,c
  3928  002032  6EDF               	movwf	indf2,c
  3929                           
  3930                           ;FRAME.c: 208: message->data[3] = MOCK_Klikniecie_Spadek();
  3931  002034  EE20 F00B          	lfsr	2,11
  3932  002038  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  3933  00203A  26D9               	addwf	fsr2l,f,c
  3934  00203C  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3935  00203E  22DA               	addwfc	fsr2h,f,c
  3936  002040  ECB3  F013         	call	_MOCK_Klikniecie_Spadek	;wreg free
  3937  002044  5006               	movf	?_MOCK_Klikniecie_Spadek,w,c
  3938  002046  6EDF               	movwf	indf2,c
  3939                           
  3940                           ;FRAME.c: 209: }
  3941  002048  0012               	return		;funcret
  3942  00204A                     __end_of_FRAME_AccelerometerStatus:
  3943                           	opt callstack 0
  3944                           
  3945 ;; *************** function _MOCK_PrzyspieszenieZ *****************
  3946 ;; Defined at:
  3947 ;;		line 73 in file "MOC_Funct.c"
  3948 ;; Parameters:    Size  Location     Type
  3949 ;;		None
  3950 ;; Auto vars:     Size  Location     Type
  3951 ;;		None
  3952 ;; Return value:  Size  Location     Type
  3953 ;;                  2    5[COMRAM] unsigned int 
  3954 ;; Registers used:
  3955 ;;		wreg, status,2
  3956 ;; Tracked objects:
  3957 ;;		On entry : 0/0
  3958 ;;		On exit  : 0/0
  3959 ;;		Unchanged: 0/0
  3960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3961 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3964 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3965 ;;Total ram usage:        2 bytes
  3966 ;; Hardware stack levels used:    1
  3967 ;; Hardware stack levels required when called:    3
  3968 ;; This function calls:
  3969 ;;		Nothing
  3970 ;; This function is called by:
  3971 ;;		_FRAME_AccelerometerStatus
  3972 ;; This function uses a non-reentrant model
  3973 ;;
  3974                           
  3975                           	psect	text28
  3976  002748                     __ptext28:
  3977                           	opt callstack 0
  3978  002748                     _MOCK_PrzyspieszenieZ:
  3979                           	opt callstack 24
  3980                           
  3981                           ;MOC_Funct.c: 75: return 0xFE;
  3982                           
  3983                           ;incstack = 0
  3984  002748  0E00               	movlw	0
  3985  00274A  6E07               	movwf	?_MOCK_PrzyspieszenieZ+1,c
  3986  00274C  0EFE               	movlw	254
  3987  00274E  6E06               	movwf	?_MOCK_PrzyspieszenieZ,c
  3988  002750  0012               	return		;funcret
  3989  002752                     __end_of_MOCK_PrzyspieszenieZ:
  3990                           	opt callstack 0
  3991                           
  3992 ;; *************** function _MOCK_PrzyspieszenieY *****************
  3993 ;; Defined at:
  3994 ;;		line 69 in file "MOC_Funct.c"
  3995 ;; Parameters:    Size  Location     Type
  3996 ;;		None
  3997 ;; Auto vars:     Size  Location     Type
  3998 ;;		None
  3999 ;; Return value:  Size  Location     Type
  4000 ;;                  2    5[COMRAM] unsigned int 
  4001 ;; Registers used:
  4002 ;;		wreg, status,2
  4003 ;; Tracked objects:
  4004 ;;		On entry : 0/0
  4005 ;;		On exit  : 0/0
  4006 ;;		Unchanged: 0/0
  4007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4008 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4011 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4012 ;;Total ram usage:        2 bytes
  4013 ;; Hardware stack levels used:    1
  4014 ;; Hardware stack levels required when called:    3
  4015 ;; This function calls:
  4016 ;;		Nothing
  4017 ;; This function is called by:
  4018 ;;		_FRAME_AccelerometerStatus
  4019 ;; This function uses a non-reentrant model
  4020 ;;
  4021                           
  4022                           	psect	text29
  4023  002752                     __ptext29:
  4024                           	opt callstack 0
  4025  002752                     _MOCK_PrzyspieszenieY:
  4026                           	opt callstack 24
  4027                           
  4028                           ;MOC_Funct.c: 71: return 0xFE;
  4029                           
  4030                           ;incstack = 0
  4031  002752  0E00               	movlw	0
  4032  002754  6E07               	movwf	?_MOCK_PrzyspieszenieY+1,c
  4033  002756  0EFE               	movlw	254
  4034  002758  6E06               	movwf	?_MOCK_PrzyspieszenieY,c
  4035  00275A  0012               	return		;funcret
  4036  00275C                     __end_of_MOCK_PrzyspieszenieY:
  4037                           	opt callstack 0
  4038                           
  4039 ;; *************** function _MOCK_PrzyspieszenieX *****************
  4040 ;; Defined at:
  4041 ;;		line 64 in file "MOC_Funct.c"
  4042 ;; Parameters:    Size  Location     Type
  4043 ;;		None
  4044 ;; Auto vars:     Size  Location     Type
  4045 ;;		None
  4046 ;; Return value:  Size  Location     Type
  4047 ;;                  2    5[COMRAM] unsigned int 
  4048 ;; Registers used:
  4049 ;;		wreg, status,2
  4050 ;; Tracked objects:
  4051 ;;		On entry : 0/0
  4052 ;;		On exit  : 0/0
  4053 ;;		Unchanged: 0/0
  4054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4055 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4058 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4059 ;;Total ram usage:        2 bytes
  4060 ;; Hardware stack levels used:    1
  4061 ;; Hardware stack levels required when called:    3
  4062 ;; This function calls:
  4063 ;;		Nothing
  4064 ;; This function is called by:
  4065 ;;		_FRAME_AccelerometerStatus
  4066 ;; This function uses a non-reentrant model
  4067 ;;
  4068                           
  4069                           	psect	text30
  4070  00275C                     __ptext30:
  4071                           	opt callstack 0
  4072  00275C                     _MOCK_PrzyspieszenieX:
  4073                           	opt callstack 24
  4074                           
  4075                           ;MOC_Funct.c: 66: return 0xFE;
  4076                           
  4077                           ;incstack = 0
  4078  00275C  0E00               	movlw	0
  4079  00275E  6E07               	movwf	?_MOCK_PrzyspieszenieX+1,c
  4080  002760  0EFE               	movlw	254
  4081  002762  6E06               	movwf	?_MOCK_PrzyspieszenieX,c
  4082  002764  0012               	return		;funcret
  4083  002766                     __end_of_MOCK_PrzyspieszenieX:
  4084                           	opt callstack 0
  4085                           
  4086 ;; *************** function _MOCK_Klikniecie_Spadek *****************
  4087 ;; Defined at:
  4088 ;;		line 77 in file "MOC_Funct.c"
  4089 ;; Parameters:    Size  Location     Type
  4090 ;;		None
  4091 ;; Auto vars:     Size  Location     Type
  4092 ;;		None
  4093 ;; Return value:  Size  Location     Type
  4094 ;;                  2    5[COMRAM] unsigned int 
  4095 ;; Registers used:
  4096 ;;		wreg, status,2
  4097 ;; Tracked objects:
  4098 ;;		On entry : 0/0
  4099 ;;		On exit  : 0/0
  4100 ;;		Unchanged: 0/0
  4101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4102 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4105 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4106 ;;Total ram usage:        2 bytes
  4107 ;; Hardware stack levels used:    1
  4108 ;; Hardware stack levels required when called:    3
  4109 ;; This function calls:
  4110 ;;		Nothing
  4111 ;; This function is called by:
  4112 ;;		_FRAME_AccelerometerStatus
  4113 ;; This function uses a non-reentrant model
  4114 ;;
  4115                           
  4116                           	psect	text31
  4117  002766                     __ptext31:
  4118                           	opt callstack 0
  4119  002766                     _MOCK_Klikniecie_Spadek:
  4120                           	opt callstack 24
  4121                           
  4122                           ;MOC_Funct.c: 79: return 0b00000000;
  4123                           
  4124                           ;incstack = 0
  4125  002766  0E00               	movlw	0
  4126  002768  6E07               	movwf	?_MOCK_Klikniecie_Spadek+1,c
  4127  00276A  0E00               	movlw	0
  4128  00276C  6E06               	movwf	?_MOCK_Klikniecie_Spadek,c
  4129  00276E  0012               	return		;funcret
  4130  002770                     __end_of_MOCK_Klikniecie_Spadek:
  4131                           	opt callstack 0
  4132                           
  4133 ;; *************** function _CAN_SendFrame *****************
  4134 ;; Defined at:
  4135 ;;		line 247 in file "CAN.c"
  4136 ;; Parameters:    Size  Location     Type
  4137 ;;  message         2   10[COMRAM] PTR struct .
  4138 ;;		 -> TRM_DataTransmition@canMessage(17), 
  4139 ;; Auto vars:     Size  Location     Type
  4140 ;;		None
  4141 ;; Return value:  Size  Location     Type
  4142 ;;                  1    wreg      void 
  4143 ;; Registers used:
  4144 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4145 ;; Tracked objects:
  4146 ;;		On entry : 0/0
  4147 ;;		On exit  : 0/0
  4148 ;;		Unchanged: 0/0
  4149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4150 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4152 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4153 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4154 ;;Total ram usage:        5 bytes
  4155 ;; Hardware stack levels used:    1
  4156 ;; Hardware stack levels required when called:    4
  4157 ;; This function calls:
  4158 ;;		_CAN_MoveBuffIntoFrame
  4159 ;; This function is called by:
  4160 ;;		_FRAME_HandleCanFrame
  4161 ;; This function uses a non-reentrant model
  4162 ;;
  4163                           
  4164                           	psect	text32
  4165  001506                     __ptext32:
  4166                           	opt callstack 0
  4167  001506                     _CAN_SendFrame:
  4168                           	opt callstack 24
  4169                           
  4170                           ;CAN.c: 252: {;CAN.c: 253: ECANCON = 0x83;
  4171                           
  4172                           ;incstack = 0
  4173                           ;CAN.c: 251: for(;;)
  4174  001506  0E83               	movlw	131
  4175  001508  6E77               	movwf	3959,c	;volatile
  4176                           
  4177                           ;CAN.c: 254: if(!RXB0CONbits.FILHIT3)
  4178  00150A  A660               	btfss	3936,3,c	;volatile
  4179  00150C  D00A               	goto	l290
  4180                           
  4181                           ;CAN.c: 258: };CAN.c: 259: ECANCON = 0x84;
  4182  00150E  0E84               	movlw	132
  4183  001510  6E77               	movwf	3959,c	;volatile
  4184                           
  4185                           ;CAN.c: 260: if(!RXB0CONbits.FILHIT3)
  4186  001512  A660               	btfss	3936,3,c	;volatile
  4187  001514  D006               	goto	l290
  4188                           
  4189                           ;CAN.c: 264: };CAN.c: 265: ECANCON = 0x85;
  4190  001516  0E85               	movlw	133
  4191  001518  6E77               	movwf	3959,c	;volatile
  4192                           
  4193                           ;CAN.c: 266: if(!RXB0CONbits.FILHIT3)
  4194  00151A  A660               	btfss	3936,3,c	;volatile
  4195  00151C  D002               	goto	l290
  4196  00151E  D7F3               	goto	_CAN_SendFrame
  4197  001520                     l291:
  4198  001520  00FF               	reset		;# 
  4199  001522                     l290:
  4200  001522  B474               	btfsc	3956,2,c	;volatile
  4201  001524  D7FD               	goto	l291
  4202                           
  4203                           ;CAN.c: 276: };CAN.c: 277: DetectorLedRadar.timerRamkiTxCANU8 = 0;
  4204  001526  0E00               	movlw	0
  4205  001528  0100               	movlb	0	; () banked
  4206  00152A  6FCD               	movwf	(_DetectorLedRadar+2)& (0+255),b
  4207                           
  4208                           ; BSR set to: 0
  4209                           ;CAN.c: 278: RXB0EIDL = message->id.v[0];
  4210  00152C  EE20 F004          	lfsr	2,4
  4211  001530  500B               	movf	CAN_SendFrame@message,w,c
  4212  001532  26D9               	addwf	fsr2l,f,c
  4213  001534  500C               	movf	CAN_SendFrame@message+1,w,c
  4214  001536  22DA               	addwfc	fsr2h,f,c
  4215  001538  50DF               	movf	indf2,w,c
  4216  00153A  6E64               	movwf	3940,c	;volatile
  4217                           
  4218                           ; BSR set to: 0
  4219                           ;CAN.c: 279: RXB0EIDH = message->id.v[1];
  4220  00153C  EE20 F005          	lfsr	2,5
  4221  001540  500B               	movf	CAN_SendFrame@message,w,c
  4222  001542  26D9               	addwf	fsr2l,f,c
  4223  001544  500C               	movf	CAN_SendFrame@message+1,w,c
  4224  001546  22DA               	addwfc	fsr2h,f,c
  4225  001548  50DF               	movf	indf2,w,c
  4226  00154A  6E63               	movwf	3939,c	;volatile
  4227                           
  4228                           ; BSR set to: 0
  4229                           ;CAN.c: 280: RXB0SIDL = ((message->id.v[2]&0xFC)*8) | (message->id.v[2] & (0x03));
  4230  00154C  EE20 F006          	lfsr	2,6
  4231  001550  500B               	movf	CAN_SendFrame@message,w,c
  4232  001552  26D9               	addwf	fsr2l,f,c
  4233  001554  500C               	movf	CAN_SendFrame@message+1,w,c
  4234  001556  22DA               	addwfc	fsr2h,f,c
  4235  001558  50DF               	movf	indf2,w,c
  4236  00155A  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  4237  00155C  0E03               	movlw	3
  4238  00155E  160D               	andwf	??_CAN_SendFrame,f,c
  4239  001560  EE20 F006          	lfsr	2,6
  4240  001564  500B               	movf	CAN_SendFrame@message,w,c
  4241  001566  26D9               	addwf	fsr2l,f,c
  4242  001568  500C               	movf	CAN_SendFrame@message+1,w,c
  4243  00156A  22DA               	addwfc	fsr2h,f,c
  4244  00156C  50DF               	movf	indf2,w,c
  4245  00156E  0BFC               	andlw	252
  4246  001570  0D08               	mullw	8
  4247  001572  50F3               	movf	prodl,w,c
  4248  001574  100D               	iorwf	??_CAN_SendFrame,w,c
  4249  001576  6E62               	movwf	3938,c	;volatile
  4250                           
  4251                           ; BSR set to: 0
  4252                           ;CAN.c: 281: RXB0SIDLbits.EXID = 1;
  4253  001578  8662               	bsf	3938,3,c	;volatile
  4254                           
  4255                           ; BSR set to: 0
  4256                           ;CAN.c: 282: RXB0SIDH = (BYTE)(message->id.w[1]/32);
  4257  00157A  EE20 F006          	lfsr	2,6
  4258  00157E  500B               	movf	CAN_SendFrame@message,w,c
  4259  001580  26D9               	addwf	fsr2l,f,c
  4260  001582  500C               	movf	CAN_SendFrame@message+1,w,c
  4261  001584  22DA               	addwfc	fsr2h,f,c
  4262  001586  CFDE F00D          	movff	postinc2,??_CAN_SendFrame
  4263  00158A  CFDD F00E          	movff	postdec2,??_CAN_SendFrame+1
  4264  00158E  0E05               	movlw	5
  4265  001590  6E0F               	movwf	(??_CAN_SendFrame+2)& (0+255),c
  4266  001592                     u2615:
  4267  001592  90D8               	bcf	status,0,c
  4268  001594  320E               	rrcf	??_CAN_SendFrame+1,f,c
  4269  001596  320D               	rrcf	??_CAN_SendFrame,f,c
  4270  001598  2E0F               	decfsz	(??_CAN_SendFrame+2)& (0+255),f,c
  4271  00159A  D7FB               	goto	u2615
  4272  00159C  500D               	movf	??_CAN_SendFrame,w,c
  4273  00159E  6E61               	movwf	3937,c	;volatile
  4274                           
  4275                           ; BSR set to: 0
  4276                           ;CAN.c: 284: RXB0DLC = 0;
  4277  0015A0  0E00               	movlw	0
  4278  0015A2  6E65               	movwf	3941,c	;volatile
  4279                           
  4280                           ; BSR set to: 0
  4281                           ;CAN.c: 286: if(message->message_type==0x02)
  4282  0015A4  EE20 F001          	lfsr	2,1
  4283  0015A8  500B               	movf	CAN_SendFrame@message,w,c
  4284  0015AA  26D9               	addwf	fsr2l,f,c
  4285  0015AC  500C               	movf	CAN_SendFrame@message+1,w,c
  4286  0015AE  22DA               	addwfc	fsr2h,f,c
  4287  0015B0  0E02               	movlw	2
  4288  0015B2  18DE               	xorwf	postinc2,w,c
  4289  0015B4  A4D8               	btfss	status,2,c
  4290  0015B6  D002               	goto	l4285
  4291                           
  4292                           ; BSR set to: 0
  4293                           ;CAN.c: 287: {;CAN.c: 288: RXB0DLCbits.RXRTR = 1;
  4294  0015B8  8C65               	bsf	3941,6,c	;volatile
  4295                           
  4296                           ;CAN.c: 289: }
  4297  0015BA  D05A               	goto	l4289
  4298  0015BC                     l4285:
  4299                           
  4300                           ; BSR set to: 0
  4301                           ;CAN.c: 290: else;CAN.c: 291: {;CAN.c: 292: RXB0DLCbits.DLC0 = (message->data_length & 0
      +                          x0F);
  4302  0015BC  EE20 F010          	lfsr	2,16
  4303  0015C0  500B               	movf	CAN_SendFrame@message,w,c
  4304  0015C2  26D9               	addwf	fsr2l,f,c
  4305  0015C4  500C               	movf	CAN_SendFrame@message+1,w,c
  4306  0015C6  22DA               	addwfc	fsr2h,f,c
  4307  0015C8  50DF               	movf	indf2,w,c
  4308  0015CA  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  4309  0015CC  0E0F               	movlw	15
  4310  0015CE  160D               	andwf	??_CAN_SendFrame,f,c
  4311  0015D0  5065               	movf	3941,w,c	;volatile
  4312  0015D2  180D               	xorwf	??_CAN_SendFrame,w,c
  4313  0015D4  0BFE               	andlw	-2
  4314  0015D6  180D               	xorwf	??_CAN_SendFrame,w,c
  4315  0015D8  6E65               	movwf	3941,c	;volatile
  4316                           
  4317                           ;CAN.c: 293: RXB0DLCbits.DLC1 = ((message->data_length & 0x0F)>> 1);
  4318  0015DA  EE20 F010          	lfsr	2,16
  4319  0015DE  500B               	movf	CAN_SendFrame@message,w,c
  4320  0015E0  26D9               	addwf	fsr2l,f,c
  4321  0015E2  500C               	movf	CAN_SendFrame@message+1,w,c
  4322  0015E4  22DA               	addwfc	fsr2h,f,c
  4323  0015E6  50DF               	movf	indf2,w,c
  4324  0015E8  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  4325  0015EA  90D8               	bcf	status,0,c
  4326  0015EC  320D               	rrcf	??_CAN_SendFrame,f,c
  4327  0015EE  0E07               	movlw	7
  4328  0015F0  160D               	andwf	??_CAN_SendFrame,f,c
  4329  0015F2  460D               	rlncf	??_CAN_SendFrame,f,c
  4330  0015F4  5065               	movf	3941,w,c	;volatile
  4331  0015F6  180D               	xorwf	??_CAN_SendFrame,w,c
  4332  0015F8  0BFD               	andlw	-3
  4333  0015FA  180D               	xorwf	??_CAN_SendFrame,w,c
  4334  0015FC  6E65               	movwf	3941,c	;volatile
  4335                           
  4336                           ;CAN.c: 294: RXB0DLCbits.DLC2 = ((message->data_length & 0x0F)>> 2);
  4337  0015FE  EE20 F010          	lfsr	2,16
  4338  001602  500B               	movf	CAN_SendFrame@message,w,c
  4339  001604  26D9               	addwf	fsr2l,f,c
  4340  001606  500C               	movf	CAN_SendFrame@message+1,w,c
  4341  001608  22DA               	addwfc	fsr2h,f,c
  4342  00160A  50DF               	movf	indf2,w,c
  4343  00160C  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  4344  00160E  90D8               	bcf	status,0,c
  4345  001610  320D               	rrcf	??_CAN_SendFrame,f,c
  4346  001612  90D8               	bcf	status,0,c
  4347  001614  320D               	rrcf	??_CAN_SendFrame,f,c
  4348  001616  0E03               	movlw	3
  4349  001618  160D               	andwf	??_CAN_SendFrame,f,c
  4350  00161A  460D               	rlncf	??_CAN_SendFrame,f,c
  4351  00161C  460D               	rlncf	??_CAN_SendFrame,f,c
  4352  00161E  5065               	movf	3941,w,c	;volatile
  4353  001620  180D               	xorwf	??_CAN_SendFrame,w,c
  4354  001622  0BFB               	andlw	-5
  4355  001624  180D               	xorwf	??_CAN_SendFrame,w,c
  4356  001626  6E65               	movwf	3941,c	;volatile
  4357                           
  4358                           ;CAN.c: 295: RXB0DLCbits.DLC3 = ((message->data_length & 0x0F)>> 3);
  4359  001628  EE20 F010          	lfsr	2,16
  4360  00162C  500B               	movf	CAN_SendFrame@message,w,c
  4361  00162E  26D9               	addwf	fsr2l,f,c
  4362  001630  500C               	movf	CAN_SendFrame@message+1,w,c
  4363  001632  22DA               	addwfc	fsr2h,f,c
  4364  001634  50DF               	movf	indf2,w,c
  4365  001636  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  4366  001638  90D8               	bcf	status,0,c
  4367  00163A  320D               	rrcf	??_CAN_SendFrame,f,c
  4368  00163C  90D8               	bcf	status,0,c
  4369  00163E  320D               	rrcf	??_CAN_SendFrame,f,c
  4370  001640  90D8               	bcf	status,0,c
  4371  001642  320D               	rrcf	??_CAN_SendFrame,f,c
  4372  001644  0E01               	movlw	1
  4373  001646  160D               	andwf	??_CAN_SendFrame,f,c
  4374  001648  460D               	rlncf	??_CAN_SendFrame,f,c
  4375  00164A  460D               	rlncf	??_CAN_SendFrame,f,c
  4376  00164C  460D               	rlncf	??_CAN_SendFrame,f,c
  4377  00164E  5065               	movf	3941,w,c	;volatile
  4378  001650  180D               	xorwf	??_CAN_SendFrame,w,c
  4379  001652  0BF7               	andlw	-9
  4380  001654  180D               	xorwf	??_CAN_SendFrame,w,c
  4381  001656  6E65               	movwf	3941,c	;volatile
  4382                           
  4383                           ; BSR set to: 0
  4384                           ;CAN.c: 297: CAN_MoveBuffIntoFrame(&RXB0D0, message->data);
  4385  001658  0E66               	movlw	102
  4386  00165A  6E06               	movwf	CAN_MoveBuffIntoFrame@Ram,c
  4387  00165C  0E0F               	movlw	15
  4388  00165E  6E07               	movwf	CAN_MoveBuffIntoFrame@Ram+1,c
  4389  001660  0E08               	movlw	8
  4390  001662  240B               	addwf	CAN_SendFrame@message,w,c
  4391  001664  6E08               	movwf	CAN_MoveBuffIntoFrame@Buf,c
  4392  001666  0E00               	movlw	0
  4393  001668  200C               	addwfc	CAN_SendFrame@message+1,w,c
  4394  00166A  6E09               	movwf	CAN_MoveBuffIntoFrame@Buf+1,c
  4395  00166C  ECF4  F012         	call	_CAN_MoveBuffIntoFrame	;wreg free
  4396  001670                     l4289:
  4397                           
  4398                           ;CAN.c: 298: };CAN.c: 300: RXB0CONbits.FILHIT3 = 1;
  4399  001670  8660               	bsf	3936,3,c	;volatile
  4400                           
  4401                           ;CAN.c: 302: DetectorLedRadar.Flags.ramkaTx = 1;
  4402  001672  0100               	movlb	0	; () banked
  4403  001674  89CB               	bsf	_DetectorLedRadar& (0+255),4,b
  4404                           
  4405                           ; BSR set to: 0
  4406  001676  0012               	return		;funcret
  4407  001678                     __end_of_CAN_SendFrame:
  4408                           	opt callstack 0
  4409                           
  4410 ;; *************** function _CAN_GenID *****************
  4411 ;; Defined at:
  4412 ;;		line 446 in file "CAN.c"
  4413 ;; Parameters:    Size  Location     Type
  4414 ;;  message         2    5[COMRAM] PTR struct .
  4415 ;;		 -> TRM_DataTransmition@canMessage(17), 
  4416 ;;  frameID         1    7[COMRAM] unsigned char 
  4417 ;; Auto vars:     Size  Location     Type
  4418 ;;		None
  4419 ;; Return value:  Size  Location     Type
  4420 ;;                  1    wreg      void 
  4421 ;; Registers used:
  4422 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4423 ;; Tracked objects:
  4424 ;;		On entry : 0/0
  4425 ;;		On exit  : 0/0
  4426 ;;		Unchanged: 0/0
  4427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4428 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4430 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4431 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4432 ;;Total ram usage:        5 bytes
  4433 ;; Hardware stack levels used:    1
  4434 ;; Hardware stack levels required when called:    3
  4435 ;; This function calls:
  4436 ;;		Nothing
  4437 ;; This function is called by:
  4438 ;;		_FRAME_HandleCanFrame
  4439 ;; This function uses a non-reentrant model
  4440 ;;
  4441                           
  4442                           	psect	text33
  4443  001F5C                     __ptext33:
  4444                           	opt callstack 0
  4445  001F5C                     _CAN_GenID:
  4446                           	opt callstack 25
  4447                           
  4448                           ;CAN.c: 449: message->frame_type = 0x03;
  4449                           
  4450                           ; BSR set to: 0
  4451                           ;incstack = 0
  4452  001F5C  EE20 F002          	lfsr	2,2
  4453  001F60  5006               	movf	CAN_GenID@message,w,c
  4454  001F62  26D9               	addwf	fsr2l,f,c
  4455  001F64  5007               	movf	CAN_GenID@message+1,w,c
  4456  001F66  22DA               	addwfc	fsr2h,f,c
  4457  001F68  0E03               	movlw	3
  4458  001F6A  6EDF               	movwf	indf2,c
  4459                           
  4460                           ;CAN.c: 450: message->message_type = 0x01;
  4461  001F6C  EE20 F001          	lfsr	2,1
  4462  001F70  5006               	movf	CAN_GenID@message,w,c
  4463  001F72  26D9               	addwf	fsr2l,f,c
  4464  001F74  5007               	movf	CAN_GenID@message+1,w,c
  4465  001F76  22DA               	addwfc	fsr2h,f,c
  4466  001F78  0E01               	movlw	1
  4467  001F7A  6EDF               	movwf	indf2,c
  4468                           
  4469                           ;CAN.c: 451: message->id.w[1] = (WORD)frameID * (WORD)4;
  4470  001F7C  5008               	movf	CAN_GenID@frameID,w,c
  4471  001F7E  6E09               	movwf	??_CAN_GenID& (0+255),c
  4472  001F80  6A0A               	clrf	(??_CAN_GenID+1)& (0+255),c
  4473  001F82  90D8               	bcf	status,0,c
  4474  001F84  3609               	rlcf	??_CAN_GenID,f,c
  4475  001F86  360A               	rlcf	??_CAN_GenID+1,f,c
  4476  001F88  90D8               	bcf	status,0,c
  4477  001F8A  3609               	rlcf	??_CAN_GenID,f,c
  4478  001F8C  360A               	rlcf	??_CAN_GenID+1,f,c
  4479  001F8E  EE20 F006          	lfsr	2,6
  4480  001F92  5006               	movf	CAN_GenID@message,w,c
  4481  001F94  26D9               	addwf	fsr2l,f,c
  4482  001F96  5007               	movf	CAN_GenID@message+1,w,c
  4483  001F98  22DA               	addwfc	fsr2h,f,c
  4484  001F9A  C009  FFDE         	movff	??_CAN_GenID,postinc2
  4485  001F9E  C00A  FFDD         	movff	??_CAN_GenID+1,postdec2
  4486                           
  4487                           ;CAN.c: 452: message->id.w[0] = DaneCan.adresCAN;
  4488  001FA2  EE20 F004          	lfsr	2,4
  4489  001FA6  5006               	movf	CAN_GenID@message,w,c
  4490  001FA8  26D9               	addwf	fsr2l,f,c
  4491  001FAA  5007               	movf	CAN_GenID@message+1,w,c
  4492  001FAC  22DA               	addwfc	fsr2h,f,c
  4493  001FAE  C02D  FFDE         	movff	_DaneCan+2,postinc2
  4494  001FB2  C02E  FFDD         	movff	_DaneCan+3,postdec2
  4495                           
  4496                           ;CAN.c: 455: message ->id.bits.b16 = 0;
  4497  001FB6  EE20 F006          	lfsr	2,6
  4498  001FBA  5006               	movf	CAN_GenID@message,w,c
  4499  001FBC  26D9               	addwf	fsr2l,f,c
  4500  001FBE  5007               	movf	CAN_GenID@message+1,w,c
  4501  001FC0  22DA               	addwfc	fsr2h,f,c
  4502  001FC2  90DF               	bcf	indf2,0,c
  4503                           
  4504                           ;CAN.c: 456: message ->id.bits.b17 = 0;
  4505  001FC4  EE20 F006          	lfsr	2,6
  4506  001FC8  5006               	movf	CAN_GenID@message,w,c
  4507  001FCA  26D9               	addwf	fsr2l,f,c
  4508  001FCC  5007               	movf	CAN_GenID@message+1,w,c
  4509  001FCE  22DA               	addwfc	fsr2h,f,c
  4510  001FD0  92DF               	bcf	indf2,1,c
  4511  001FD2  0012               	return		;funcret
  4512  001FD4                     __end_of_CAN_GenID:
  4513                           	opt callstack 0
  4514                           
  4515 ;; *************** function _CAN_TakeFrame *****************
  4516 ;; Defined at:
  4517 ;;		line 311 in file "CAN.c"
  4518 ;; Parameters:    Size  Location     Type
  4519 ;;  message         2   13[COMRAM] PTR struct .
  4520 ;;		 -> TRM_DataTransmition@canMessage(17), 
  4521 ;; Auto vars:     Size  Location     Type
  4522 ;;  k               1   18[COMRAM] unsigned char 
  4523 ;;  tempCON         1   17[COMRAM] unsigned char 
  4524 ;; Return value:  Size  Location     Type
  4525 ;;                  1    wreg      enum E10294
  4526 ;; Registers used:
  4527 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4528 ;; Tracked objects:
  4529 ;;		On entry : 0/0
  4530 ;;		On exit  : 0/0
  4531 ;;		Unchanged: 0/0
  4532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4533 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4534 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4535 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4536 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4537 ;;Total ram usage:        6 bytes
  4538 ;; Hardware stack levels used:    1
  4539 ;; Hardware stack levels required when called:    4
  4540 ;; This function calls:
  4541 ;;		_CAN_MoveBuffIntoFrame
  4542 ;;		___awdiv
  4543 ;; This function is called by:
  4544 ;;		_TRM_DataTransmition
  4545 ;; This function uses a non-reentrant model
  4546 ;;
  4547                           
  4548                           	psect	text34
  4549  000F2E                     __ptext34:
  4550                           	opt callstack 0
  4551  000F2E                     _CAN_TakeFrame:
  4552                           	opt callstack 25
  4553                           
  4554                           ;CAN.c: 313: BYTE k, tempCON;;CAN.c: 315: k = CANCON&0x0F;
  4555                           
  4556                           ;incstack = 0
  4557  000F2E  506F               	movf	3951,w,c	;volatile
  4558  000F30  0B0F               	andlw	15
  4559  000F32  6E13               	movwf	CAN_TakeFrame@k,c
  4560                           
  4561                           ;CAN.c: 317: ECANCON = 0x90 | k;
  4562  000F34  5013               	movf	CAN_TakeFrame@k,w,c
  4563  000F36  0990               	iorlw	144
  4564  000F38  6E77               	movwf	3959,c	;volatile
  4565                           
  4566                           ;CAN.c: 320: switch(k)
  4567  000F3A  D018               	goto	l4563
  4568  000F3C                     l299:
  4569                           
  4570                           ;CAN.c: 323: tempCON = RXB0CON;
  4571  000F3C  CF60 F012          	movff	3936,CAN_TakeFrame@tempCON	;volatile
  4572                           
  4573                           ;CAN.c: 324: break;
  4574  000F40  D02E               	goto	l300
  4575  000F42                     l301:
  4576                           
  4577                           ;CAN.c: 326: tempCON = RXB1CON;
  4578  000F42  CF50 F012          	movff	3920,CAN_TakeFrame@tempCON	;volatile
  4579                           
  4580                           ;CAN.c: 327: break;
  4581  000F46  D02B               	goto	l300
  4582  000F48                     l302:
  4583                           
  4584                           ;CAN.c: 329: tempCON = B0CON;
  4585  000F48  CE20 F012          	movff	3616,CAN_TakeFrame@tempCON	;volatile
  4586                           
  4587                           ;CAN.c: 330: break;
  4588  000F4C  D028               	goto	l300
  4589  000F4E                     l303:
  4590                           
  4591                           ;CAN.c: 332: tempCON = B1CON;
  4592  000F4E  CE30 F012          	movff	3632,CAN_TakeFrame@tempCON	;volatile
  4593                           
  4594                           ;CAN.c: 333: break;
  4595  000F52  D025               	goto	l300
  4596  000F54                     l304:
  4597                           
  4598                           ;CAN.c: 335: tempCON = B2CON;
  4599  000F54  CE40 F012          	movff	3648,CAN_TakeFrame@tempCON	;volatile
  4600                           
  4601                           ;CAN.c: 336: break;
  4602  000F58  D022               	goto	l300
  4603  000F5A                     l305:
  4604                           
  4605                           ;CAN.c: 338: tempCON = B3CON;
  4606  000F5A  CE50 F012          	movff	3664,CAN_TakeFrame@tempCON	;volatile
  4607                           
  4608                           ;CAN.c: 339: break;
  4609  000F5E  D01F               	goto	l300
  4610  000F60                     l306:
  4611                           
  4612                           ;CAN.c: 341: tempCON = B4CON;
  4613  000F60  CE60 F012          	movff	3680,CAN_TakeFrame@tempCON	;volatile
  4614                           
  4615                           ;CAN.c: 342: break;
  4616  000F64  D01C               	goto	l300
  4617  000F66                     l307:
  4618                           
  4619                           ;CAN.c: 344: tempCON = B5CON;
  4620  000F66  CE70 F012          	movff	3696,CAN_TakeFrame@tempCON	;volatile
  4621                           
  4622                           ;CAN.c: 345: break;
  4623  000F6A  D019               	goto	l300
  4624  000F6C                     l4563:
  4625  000F6C  5013               	movf	CAN_TakeFrame@k,w,c
  4626                           
  4627                           ; Switch size 1, requested type "simple"
  4628                           ; Number of cases is 8, Range of values is 0 to 7
  4629                           ; switch strategies available:
  4630                           ; Name         Instructions Cycles
  4631                           ; simple_byte           25    13 (average)
  4632                           ;	Chosen strategy is simple_byte
  4633  000F6E  0A00               	xorlw	0	; case 0
  4634  000F70  B4D8               	btfsc	status,2,c
  4635  000F72  D7E4               	goto	l299
  4636  000F74  0A01               	xorlw	1	; case 1
  4637  000F76  B4D8               	btfsc	status,2,c
  4638  000F78  D7E4               	goto	l301
  4639  000F7A  0A03               	xorlw	3	; case 2
  4640  000F7C  B4D8               	btfsc	status,2,c
  4641  000F7E  D7E4               	goto	l302
  4642  000F80  0A01               	xorlw	1	; case 3
  4643  000F82  B4D8               	btfsc	status,2,c
  4644  000F84  D7E4               	goto	l303
  4645  000F86  0A07               	xorlw	7	; case 4
  4646  000F88  B4D8               	btfsc	status,2,c
  4647  000F8A  D7E4               	goto	l304
  4648  000F8C  0A01               	xorlw	1	; case 5
  4649  000F8E  B4D8               	btfsc	status,2,c
  4650  000F90  D7E4               	goto	l305
  4651  000F92  0A03               	xorlw	3	; case 6
  4652  000F94  B4D8               	btfsc	status,2,c
  4653  000F96  D7E4               	goto	l306
  4654  000F98  0A01               	xorlw	1	; case 7
  4655  000F9A  B4D8               	btfsc	status,2,c
  4656  000F9C  D7E4               	goto	l307
  4657  000F9E                     l300:
  4658                           
  4659                           ;CAN.c: 349: if((tempCON & 0x80) > 0)
  4660  000F9E  AE12               	btfss	CAN_TakeFrame@tempCON,7,c
  4661  000FA0  D09E               	goto	l4599
  4662                           
  4663                           ;CAN.c: 350: {;CAN.c: 351: message->buffer = RXB0CON & 0x1F;
  4664  000FA2  EE20 F003          	lfsr	2,3
  4665  000FA6  500E               	movf	CAN_TakeFrame@message,w,c
  4666  000FA8  26D9               	addwf	fsr2l,f,c
  4667  000FAA  500F               	movf	CAN_TakeFrame@message+1,w,c
  4668  000FAC  22DA               	addwfc	fsr2h,f,c
  4669  000FAE  5060               	movf	3936,w,c	;volatile
  4670  000FB0  0B1F               	andlw	31
  4671  000FB2  6EDF               	movwf	indf2,c
  4672                           
  4673                           ;CAN.c: 352: message->id.v[0] = RXB0EIDL;
  4674  000FB4  EE20 F004          	lfsr	2,4
  4675  000FB8  500E               	movf	CAN_TakeFrame@message,w,c
  4676  000FBA  26D9               	addwf	fsr2l,f,c
  4677  000FBC  500F               	movf	CAN_TakeFrame@message+1,w,c
  4678  000FBE  22DA               	addwfc	fsr2h,f,c
  4679  000FC0  CF64 FFDF          	movff	3940,indf2	;volatile
  4680                           
  4681                           ;CAN.c: 353: message->id.v[1] = RXB0EIDH;
  4682  000FC4  EE20 F005          	lfsr	2,5
  4683  000FC8  500E               	movf	CAN_TakeFrame@message,w,c
  4684  000FCA  26D9               	addwf	fsr2l,f,c
  4685  000FCC  500F               	movf	CAN_TakeFrame@message+1,w,c
  4686  000FCE  22DA               	addwfc	fsr2h,f,c
  4687  000FD0  CF63 FFDF          	movff	3939,indf2	;volatile
  4688                           
  4689                           ;CAN.c: 354: message->id.v[2] = (RXB0SIDL/8) | (RXB0SIDL&0x03);
  4690  000FD4  EE20 F006          	lfsr	2,6
  4691  000FD8  500E               	movf	CAN_TakeFrame@message,w,c
  4692  000FDA  26D9               	addwf	fsr2l,f,c
  4693  000FDC  500F               	movf	CAN_TakeFrame@message+1,w,c
  4694  000FDE  22DA               	addwfc	fsr2h,f,c
  4695  000FE0  CF62 F010          	movff	3938,??_CAN_TakeFrame	;volatile
  4696  000FE4  0E03               	movlw	3
  4697  000FE6  1610               	andwf	??_CAN_TakeFrame,f,c
  4698  000FE8  CF62 F006          	movff	3938,___awdiv@dividend	;volatile
  4699  000FEC  6A07               	clrf	___awdiv@dividend+1,c
  4700  000FEE  0E00               	movlw	0
  4701  000FF0  6E09               	movwf	___awdiv@divisor+1,c
  4702  000FF2  0E08               	movlw	8
  4703  000FF4  6E08               	movwf	___awdiv@divisor,c
  4704  000FF6  ECF1  F00E         	call	___awdiv	;wreg free
  4705  000FFA  5006               	movf	?___awdiv,w,c
  4706  000FFC  1010               	iorwf	??_CAN_TakeFrame,w,c
  4707  000FFE  6EDF               	movwf	indf2,c
  4708                           
  4709                           ;CAN.c: 355: message->id.w[1] |= (WORD)RXB0SIDH*32;
  4710  001000  5061               	movf	3937,w,c	;volatile
  4711  001002  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  4712  001004  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  4713  001006  0E05               	movlw	5
  4714  001008                     u3015:
  4715  001008  90D8               	bcf	status,0,c
  4716  00100A  3610               	rlcf	??_CAN_TakeFrame,f,c
  4717  00100C  3611               	rlcf	??_CAN_TakeFrame+1,f,c
  4718  00100E  2EE8               	decfsz	wreg,f,c
  4719  001010  D7FB               	goto	u3015
  4720  001012  EE20 F006          	lfsr	2,6
  4721  001016  500E               	movf	CAN_TakeFrame@message,w,c
  4722  001018  26D9               	addwf	fsr2l,f,c
  4723  00101A  500F               	movf	CAN_TakeFrame@message+1,w,c
  4724  00101C  22DA               	addwfc	fsr2h,f,c
  4725  00101E  5010               	movf	??_CAN_TakeFrame,w,c
  4726  001020  12DE               	iorwf	postinc2,f,c
  4727  001022  5011               	movf	??_CAN_TakeFrame+1,w,c
  4728  001024  12DD               	iorwf	postdec2,f,c
  4729                           
  4730                           ;CAN.c: 356: message->frame_type=0x03;
  4731  001026  EE20 F002          	lfsr	2,2
  4732  00102A  500E               	movf	CAN_TakeFrame@message,w,c
  4733  00102C  26D9               	addwf	fsr2l,f,c
  4734  00102E  500F               	movf	CAN_TakeFrame@message+1,w,c
  4735  001030  22DA               	addwfc	fsr2h,f,c
  4736  001032  0E03               	movlw	3
  4737  001034  6EDF               	movwf	indf2,c
  4738                           
  4739                           ;CAN.c: 360: if(RXB0DLCbits.RXRTR == 0)
  4740  001036  BC65               	btfsc	3941,6,c	;volatile
  4741  001038  D061               	goto	l4605
  4742                           
  4743                           ;CAN.c: 361: {;CAN.c: 362: message->message_type = 0x01;
  4744  00103A  EE20 F001          	lfsr	2,1
  4745  00103E  500E               	movf	CAN_TakeFrame@message,w,c
  4746  001040  26D9               	addwf	fsr2l,f,c
  4747  001042  500F               	movf	CAN_TakeFrame@message+1,w,c
  4748  001044  22DA               	addwfc	fsr2h,f,c
  4749  001046  0E01               	movlw	1
  4750  001048  6EDF               	movwf	indf2,c
  4751                           
  4752                           ;CAN.c: 363: message->data_length= RXB0DLC & 0x0F;
  4753  00104A  EE20 F010          	lfsr	2,16
  4754  00104E  500E               	movf	CAN_TakeFrame@message,w,c
  4755  001050  26D9               	addwf	fsr2l,f,c
  4756  001052  500F               	movf	CAN_TakeFrame@message+1,w,c
  4757  001054  22DA               	addwfc	fsr2h,f,c
  4758  001056  5065               	movf	3941,w,c	;volatile
  4759  001058  0B0F               	andlw	15
  4760  00105A  6EDF               	movwf	indf2,c
  4761                           
  4762                           ;CAN.c: 364: if(message->data_length > 8)
  4763  00105C  EE20 F010          	lfsr	2,16
  4764  001060  500E               	movf	CAN_TakeFrame@message,w,c
  4765  001062  26D9               	addwf	fsr2l,f,c
  4766  001064  500F               	movf	CAN_TakeFrame@message+1,w,c
  4767  001066  22DA               	addwfc	fsr2h,f,c
  4768  001068  0E08               	movlw	8
  4769  00106A  64DF               	cpfsgt	indf2,c
  4770  00106C  D03A               	goto	l4603
  4771  00106E  D01E               	goto	l4597
  4772  001070                     l4579:
  4773                           
  4774                           ;CAN.c: 370: RXB0CON = 0;
  4775  001070  0E00               	movlw	0
  4776  001072  6E60               	movwf	3936,c	;volatile
  4777                           
  4778                           ;CAN.c: 371: break;
  4779  001074  D034               	goto	l4599
  4780  001076                     l4581:
  4781                           
  4782                           ;CAN.c: 373: RXB1CON = 0;
  4783  001076  0E00               	movlw	0
  4784  001078  010F               	movlb	15	; () banked
  4785  00107A  D00E               	goto	L2
  4786  00107C                     l4583:
  4787                           
  4788                           ;CAN.c: 376: B0CON = 0;
  4789  00107C  0E00               	movlw	0
  4790  00107E  010E               	movlb	14	; () banked
  4791  001080  6F20               	movwf	32,b	;volatile
  4792                           
  4793                           ;CAN.c: 377: break;
  4794  001082  D02D               	goto	l4599
  4795  001084                     l4585:
  4796                           
  4797                           ;CAN.c: 379: B1CON = 0;
  4798  001084  0E00               	movlw	0
  4799  001086  010E               	movlb	14	; () banked
  4800  001088  6F30               	movwf	48,b	;volatile
  4801                           
  4802                           ;CAN.c: 380: break;
  4803  00108A  D029               	goto	l4599
  4804  00108C                     l4587:
  4805                           
  4806                           ;CAN.c: 382: B2CON = 0;
  4807  00108C  0E00               	movlw	0
  4808  00108E  010E               	movlb	14	; () banked
  4809  001090  6F40               	movwf	64,b	;volatile
  4810                           
  4811                           ;CAN.c: 383: break;
  4812  001092  D025               	goto	l4599
  4813  001094                     l4589:
  4814                           
  4815                           ;CAN.c: 385: B3CON = 0;
  4816  001094  0E00               	movlw	0
  4817  001096  010E               	movlb	14	; () banked
  4818  001098                     L2:
  4819  001098  6F50               	movwf	80,b	;volatile
  4820                           
  4821                           ;CAN.c: 386: break;
  4822  00109A  D021               	goto	l4599
  4823  00109C                     l4591:
  4824                           
  4825                           ;CAN.c: 388: B4CON = 0;
  4826  00109C  0E00               	movlw	0
  4827  00109E  010E               	movlb	14	; () banked
  4828  0010A0  6F60               	movwf	96,b	;volatile
  4829                           
  4830                           ;CAN.c: 389: break;
  4831  0010A2  D01D               	goto	l4599
  4832  0010A4                     l4593:
  4833                           
  4834                           ;CAN.c: 391: B5CON = 0;
  4835  0010A4  0E00               	movlw	0
  4836  0010A6  010E               	movlb	14	; () banked
  4837  0010A8  6F70               	movwf	112,b	;volatile
  4838                           
  4839                           ;CAN.c: 392: break;
  4840  0010AA  D019               	goto	l4599
  4841  0010AC                     l4597:
  4842  0010AC  5013               	movf	CAN_TakeFrame@k,w,c
  4843                           
  4844                           ; Switch size 1, requested type "simple"
  4845                           ; Number of cases is 8, Range of values is 0 to 7
  4846                           ; switch strategies available:
  4847                           ; Name         Instructions Cycles
  4848                           ; simple_byte           25    13 (average)
  4849                           ;	Chosen strategy is simple_byte
  4850  0010AE  0A00               	xorlw	0	; case 0
  4851  0010B0  B4D8               	btfsc	status,2,c
  4852  0010B2  D7DE               	goto	l4579
  4853  0010B4  0A01               	xorlw	1	; case 1
  4854  0010B6  B4D8               	btfsc	status,2,c
  4855  0010B8  D7DE               	goto	l4581
  4856  0010BA  0A03               	xorlw	3	; case 2
  4857  0010BC  B4D8               	btfsc	status,2,c
  4858  0010BE  D7DE               	goto	l4583
  4859  0010C0  0A01               	xorlw	1	; case 3
  4860  0010C2  B4D8               	btfsc	status,2,c
  4861  0010C4  D7DF               	goto	l4585
  4862  0010C6  0A07               	xorlw	7	; case 4
  4863  0010C8  B4D8               	btfsc	status,2,c
  4864  0010CA  D7E0               	goto	l4587
  4865  0010CC  0A01               	xorlw	1	; case 5
  4866  0010CE  B4D8               	btfsc	status,2,c
  4867  0010D0  D7E1               	goto	l4589
  4868  0010D2  0A03               	xorlw	3	; case 6
  4869  0010D4  B4D8               	btfsc	status,2,c
  4870  0010D6  D7E2               	goto	l4591
  4871  0010D8  0A01               	xorlw	1	; case 7
  4872  0010DA  B4D8               	btfsc	status,2,c
  4873  0010DC  D7E3               	goto	l4593
  4874  0010DE                     l4599:
  4875                           
  4876                           ;CAN.c: 394: return FALSE;
  4877  0010DE  0E00               	movlw	0
  4878  0010E0  0012               	return	
  4879  0010E2                     l4603:
  4880                           
  4881                           ;CAN.c: 395: };CAN.c: 396: CAN_MoveBuffIntoFrame(message->data, &RXB0D0);
  4882  0010E2  0E08               	movlw	8
  4883  0010E4  240E               	addwf	CAN_TakeFrame@message,w,c
  4884  0010E6  6E06               	movwf	CAN_MoveBuffIntoFrame@Ram,c
  4885  0010E8  0E00               	movlw	0
  4886  0010EA  200F               	addwfc	CAN_TakeFrame@message+1,w,c
  4887  0010EC  6E07               	movwf	CAN_MoveBuffIntoFrame@Ram+1,c
  4888  0010EE  0E66               	movlw	102
  4889  0010F0  6E08               	movwf	CAN_MoveBuffIntoFrame@Buf,c
  4890  0010F2  0E0F               	movlw	15
  4891  0010F4  6E09               	movwf	CAN_MoveBuffIntoFrame@Buf+1,c
  4892  0010F6  ECF4  F012         	call	_CAN_MoveBuffIntoFrame	;wreg free
  4893                           
  4894                           ;CAN.c: 397: }
  4895  0010FA  D027               	goto	l4625
  4896  0010FC                     l4605:
  4897                           
  4898                           ;CAN.c: 399: else;CAN.c: 400: {;CAN.c: 401: message->message_type=0x02;
  4899  0010FC  EE20 F001          	lfsr	2,1
  4900  001100  500E               	movf	CAN_TakeFrame@message,w,c
  4901  001102  26D9               	addwf	fsr2l,f,c
  4902  001104  500F               	movf	CAN_TakeFrame@message+1,w,c
  4903  001106  22DA               	addwfc	fsr2h,f,c
  4904  001108  0E02               	movlw	2
  4905  00110A  6EDF               	movwf	indf2,c
  4906  00110C  D01E               	goto	l4625
  4907  00110E                     l4607:
  4908                           
  4909                           ;CAN.c: 407: RXB0CON = 0;
  4910  00110E  0E00               	movlw	0
  4911  001110  6E60               	movwf	3936,c	;volatile
  4912                           
  4913                           ;CAN.c: 408: break;
  4914  001112  D034               	goto	l4627
  4915  001114                     l4609:
  4916                           
  4917                           ;CAN.c: 410: RXB1CON = 0;
  4918  001114  0E00               	movlw	0
  4919  001116  010F               	movlb	15	; () banked
  4920  001118  D00E               	goto	L3
  4921  00111A                     l4611:
  4922                           
  4923                           ;CAN.c: 413: B0CON = 0;
  4924  00111A  0E00               	movlw	0
  4925  00111C  010E               	movlb	14	; () banked
  4926  00111E  6F20               	movwf	32,b	;volatile
  4927                           
  4928                           ;CAN.c: 414: break;
  4929  001120  D02D               	goto	l4627
  4930  001122                     l4613:
  4931                           
  4932                           ;CAN.c: 416: B1CON = 0;
  4933  001122  0E00               	movlw	0
  4934  001124  010E               	movlb	14	; () banked
  4935  001126  6F30               	movwf	48,b	;volatile
  4936                           
  4937                           ;CAN.c: 417: break;
  4938  001128  D029               	goto	l4627
  4939  00112A                     l4615:
  4940                           
  4941                           ;CAN.c: 419: B2CON = 0;
  4942  00112A  0E00               	movlw	0
  4943  00112C  010E               	movlb	14	; () banked
  4944  00112E  6F40               	movwf	64,b	;volatile
  4945                           
  4946                           ;CAN.c: 420: break;
  4947  001130  D025               	goto	l4627
  4948  001132                     l4617:
  4949                           
  4950                           ;CAN.c: 422: B3CON = 0;
  4951  001132  0E00               	movlw	0
  4952  001134  010E               	movlb	14	; () banked
  4953  001136                     L3:
  4954  001136  6F50               	movwf	80,b	;volatile
  4955                           
  4956                           ;CAN.c: 423: break;
  4957  001138  D021               	goto	l4627
  4958  00113A                     l4619:
  4959                           
  4960                           ;CAN.c: 425: B4CON = 0;
  4961  00113A  0E00               	movlw	0
  4962  00113C  010E               	movlb	14	; () banked
  4963  00113E  6F60               	movwf	96,b	;volatile
  4964                           
  4965                           ;CAN.c: 426: break;
  4966  001140  D01D               	goto	l4627
  4967  001142                     l4621:
  4968                           
  4969                           ;CAN.c: 428: B5CON = 0;
  4970  001142  0E00               	movlw	0
  4971  001144  010E               	movlb	14	; () banked
  4972  001146  6F70               	movwf	112,b	;volatile
  4973                           
  4974                           ;CAN.c: 429: break;
  4975  001148  D019               	goto	l4627
  4976  00114A                     l4625:
  4977  00114A  5013               	movf	CAN_TakeFrame@k,w,c
  4978                           
  4979                           ; Switch size 1, requested type "simple"
  4980                           ; Number of cases is 8, Range of values is 0 to 7
  4981                           ; switch strategies available:
  4982                           ; Name         Instructions Cycles
  4983                           ; simple_byte           25    13 (average)
  4984                           ;	Chosen strategy is simple_byte
  4985  00114C  0A00               	xorlw	0	; case 0
  4986  00114E  B4D8               	btfsc	status,2,c
  4987  001150  D7DE               	goto	l4607
  4988  001152  0A01               	xorlw	1	; case 1
  4989  001154  B4D8               	btfsc	status,2,c
  4990  001156  D7DE               	goto	l4609
  4991  001158  0A03               	xorlw	3	; case 2
  4992  00115A  B4D8               	btfsc	status,2,c
  4993  00115C  D7DE               	goto	l4611
  4994  00115E  0A01               	xorlw	1	; case 3
  4995  001160  B4D8               	btfsc	status,2,c
  4996  001162  D7DF               	goto	l4613
  4997  001164  0A07               	xorlw	7	; case 4
  4998  001166  B4D8               	btfsc	status,2,c
  4999  001168  D7E0               	goto	l4615
  5000  00116A  0A01               	xorlw	1	; case 5
  5001  00116C  B4D8               	btfsc	status,2,c
  5002  00116E  D7E1               	goto	l4617
  5003  001170  0A03               	xorlw	3	; case 6
  5004  001172  B4D8               	btfsc	status,2,c
  5005  001174  D7E2               	goto	l4619
  5006  001176  0A01               	xorlw	1	; case 7
  5007  001178  B4D8               	btfsc	status,2,c
  5008  00117A  D7E3               	goto	l4621
  5009  00117C                     l4627:
  5010                           
  5011                           ;CAN.c: 431: return TRUE;
  5012  00117C  0E01               	movlw	1
  5013  00117E  0012               	return		;funcret
  5014  001180                     __end_of_CAN_TakeFrame:
  5015                           	opt callstack 0
  5016                           
  5017 ;; *************** function ___awdiv *****************
  5018 ;; Defined at:
  5019 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awdiv.c"
  5020 ;; Parameters:    Size  Location     Type
  5021 ;;  dividend        2    5[COMRAM] int 
  5022 ;;  divisor         2    7[COMRAM] int 
  5023 ;; Auto vars:     Size  Location     Type
  5024 ;;  quotient        2   11[COMRAM] int 
  5025 ;;  sign            1   10[COMRAM] unsigned char 
  5026 ;;  counter         1    9[COMRAM] unsigned char 
  5027 ;; Return value:  Size  Location     Type
  5028 ;;                  2    5[COMRAM] int 
  5029 ;; Registers used:
  5030 ;;		wreg, status,2, status,0
  5031 ;; Tracked objects:
  5032 ;;		On entry : 0/0
  5033 ;;		On exit  : 0/0
  5034 ;;		Unchanged: 0/0
  5035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5036 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5037 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5039 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5040 ;;Total ram usage:        8 bytes
  5041 ;; Hardware stack levels used:    1
  5042 ;; Hardware stack levels required when called:    3
  5043 ;; This function calls:
  5044 ;;		Nothing
  5045 ;; This function is called by:
  5046 ;;		_CAN_TakeFrame
  5047 ;;		_FRAME_HandleCanFrame
  5048 ;; This function uses a non-reentrant model
  5049 ;;
  5050                           
  5051                           	psect	text35
  5052  001DE2                     __ptext35:
  5053                           	opt callstack 0
  5054  001DE2                     ___awdiv:
  5055                           	opt callstack 25
  5056                           
  5057                           ;incstack = 0
  5058  001DE2  0E00               	movlw	0
  5059  001DE4  6E0B               	movwf	___awdiv@sign,c
  5060  001DE6  AE09               	btfss	___awdiv@divisor+1,7,c
  5061  001DE8  D006               	goto	l4507
  5062  001DEA  6C08               	negf	___awdiv@divisor,c
  5063  001DEC  1E09               	comf	___awdiv@divisor+1,f,c
  5064  001DEE  B0D8               	btfsc	status,0,c
  5065  001DF0  2A09               	incf	___awdiv@divisor+1,f,c
  5066  001DF2  0E01               	movlw	1
  5067  001DF4  6E0B               	movwf	___awdiv@sign,c
  5068  001DF6                     l4507:
  5069  001DF6  AE07               	btfss	___awdiv@dividend+1,7,c
  5070  001DF8  D006               	goto	l4513
  5071  001DFA  6C06               	negf	___awdiv@dividend,c
  5072  001DFC  1E07               	comf	___awdiv@dividend+1,f,c
  5073  001DFE  B0D8               	btfsc	status,0,c
  5074  001E00  2A07               	incf	___awdiv@dividend+1,f,c
  5075  001E02  0E01               	movlw	1
  5076  001E04  1A0B               	xorwf	___awdiv@sign,f,c
  5077  001E06                     l4513:
  5078  001E06  0E00               	movlw	0
  5079  001E08  6E0D               	movwf	___awdiv@quotient+1,c
  5080  001E0A  0E00               	movlw	0
  5081  001E0C  6E0C               	movwf	___awdiv@quotient,c
  5082  001E0E  5008               	movf	___awdiv@divisor,w,c
  5083  001E10  1009               	iorwf	___awdiv@divisor+1,w,c
  5084  001E12  B4D8               	btfsc	status,2,c
  5085  001E14  D01C               	goto	l4535
  5086  001E16  0E01               	movlw	1
  5087  001E18  6E0A               	movwf	___awdiv@counter,c
  5088  001E1A  D004               	goto	l4521
  5089  001E1C                     l4519:
  5090  001E1C  90D8               	bcf	status,0,c
  5091  001E1E  3608               	rlcf	___awdiv@divisor,f,c
  5092  001E20  3609               	rlcf	___awdiv@divisor+1,f,c
  5093  001E22  2A0A               	incf	___awdiv@counter,f,c
  5094  001E24                     l4521:
  5095  001E24  AE09               	btfss	___awdiv@divisor+1,7,c
  5096  001E26  D7FA               	goto	l4519
  5097  001E28                     u2950:
  5098  001E28  90D8               	bcf	status,0,c
  5099  001E2A  360C               	rlcf	___awdiv@quotient,f,c
  5100  001E2C  360D               	rlcf	___awdiv@quotient+1,f,c
  5101  001E2E  5008               	movf	___awdiv@divisor,w,c
  5102  001E30  5C06               	subwf	___awdiv@dividend,w,c
  5103  001E32  5009               	movf	___awdiv@divisor+1,w,c
  5104  001E34  5807               	subwfb	___awdiv@dividend+1,w,c
  5105  001E36  A0D8               	btfss	status,0,c
  5106  001E38  D005               	goto	l4531
  5107  001E3A  5008               	movf	___awdiv@divisor,w,c
  5108  001E3C  5E06               	subwf	___awdiv@dividend,f,c
  5109  001E3E  5009               	movf	___awdiv@divisor+1,w,c
  5110  001E40  5A07               	subwfb	___awdiv@dividend+1,f,c
  5111  001E42  800C               	bsf	___awdiv@quotient,0,c
  5112  001E44                     l4531:
  5113  001E44  90D8               	bcf	status,0,c
  5114  001E46  3209               	rrcf	___awdiv@divisor+1,f,c
  5115  001E48  3208               	rrcf	___awdiv@divisor,f,c
  5116  001E4A  2E0A               	decfsz	___awdiv@counter,f,c
  5117  001E4C  D7ED               	goto	u2950
  5118  001E4E                     l4535:
  5119  001E4E  500B               	movf	___awdiv@sign,w,c
  5120  001E50  B4D8               	btfsc	status,2,c
  5121  001E52  D004               	goto	l4539
  5122  001E54  6C0C               	negf	___awdiv@quotient,c
  5123  001E56  1E0D               	comf	___awdiv@quotient+1,f,c
  5124  001E58  B0D8               	btfsc	status,0,c
  5125  001E5A  2A0D               	incf	___awdiv@quotient+1,f,c
  5126  001E5C                     l4539:
  5127  001E5C  C00C  F006         	movff	___awdiv@quotient,?___awdiv
  5128  001E60  C00D  F007         	movff	___awdiv@quotient+1,?___awdiv+1
  5129  001E64  0012               	return		;funcret
  5130  001E66                     __end_of___awdiv:
  5131                           	opt callstack 0
  5132                           
  5133 ;; *************** function _CAN_MoveBuffIntoFrame *****************
  5134 ;; Defined at:
  5135 ;;		line 233 in file "CAN.c"
  5136 ;; Parameters:    Size  Location     Type
  5137 ;;  Ram             2    5[COMRAM] PTR unsigned char 
  5138 ;;		 -> TRM_DataTransmition@canMessage(17), RXB0D0(1), 
  5139 ;;  Buf             2    7[COMRAM] PTR unsigned char 
  5140 ;;		 -> TRM_DataTransmition@canMessage(17), RXB0D0(1), 
  5141 ;; Auto vars:     Size  Location     Type
  5142 ;;  i               1    9[COMRAM] unsigned char 
  5143 ;; Return value:  Size  Location     Type
  5144 ;;                  1    wreg      void 
  5145 ;; Registers used:
  5146 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5147 ;; Tracked objects:
  5148 ;;		On entry : 0/0
  5149 ;;		On exit  : 0/0
  5150 ;;		Unchanged: 0/0
  5151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5152 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5153 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5155 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5156 ;;Total ram usage:        5 bytes
  5157 ;; Hardware stack levels used:    1
  5158 ;; Hardware stack levels required when called:    3
  5159 ;; This function calls:
  5160 ;;		Nothing
  5161 ;; This function is called by:
  5162 ;;		_CAN_SendFrame
  5163 ;;		_CAN_TakeFrame
  5164 ;; This function uses a non-reentrant model
  5165 ;;
  5166                           
  5167                           	psect	text36
  5168  0025E8                     __ptext36:
  5169                           	opt callstack 0
  5170  0025E8                     _CAN_MoveBuffIntoFrame:
  5171                           	opt callstack 24
  5172                           
  5173                           ;CAN.c: 235: BYTE i;;CAN.c: 236: for(i=0; i<8; ++i)
  5174                           
  5175                           ;incstack = 0
  5176  0025E8  0E00               	movlw	0
  5177  0025EA  6E0A               	movwf	CAN_MoveBuffIntoFrame@i,c
  5178  0025EC                     l3949:
  5179                           
  5180                           ;CAN.c: 237: {;CAN.c: 238: Ram[i]=(*(Buf+i));
  5181  0025EC  500A               	movf	CAN_MoveBuffIntoFrame@i,w,c
  5182  0025EE  2408               	addwf	CAN_MoveBuffIntoFrame@Buf,w,c
  5183  0025F0  6ED9               	movwf	fsr2l,c
  5184  0025F2  0E00               	movlw	0
  5185  0025F4  2009               	addwfc	CAN_MoveBuffIntoFrame@Buf+1,w,c
  5186  0025F6  6EDA               	movwf	fsr2h,c
  5187  0025F8  500A               	movf	CAN_MoveBuffIntoFrame@i,w,c
  5188  0025FA  2406               	addwf	CAN_MoveBuffIntoFrame@Ram,w,c
  5189  0025FC  6EE1               	movwf	fsr1l,c
  5190  0025FE  0E00               	movlw	0
  5191  002600  2007               	addwfc	CAN_MoveBuffIntoFrame@Ram+1,w,c
  5192  002602  6EE2               	movwf	fsr1h,c
  5193  002604  CFDF FFE7          	movff	indf2,indf1
  5194  002608  2A0A               	incf	CAN_MoveBuffIntoFrame@i,f,c
  5195  00260A  0E07               	movlw	7
  5196  00260C  640A               	cpfsgt	CAN_MoveBuffIntoFrame@i,c
  5197  00260E  D7EE               	goto	l3949
  5198  002610  0012               	return	
  5199  002612                     __end_of_CAN_MoveBuffIntoFrame:
  5200                           	opt callstack 0
  5201                           
  5202 ;; *************** function _TMR1_Update_flag_Set *****************
  5203 ;; Defined at:
  5204 ;;		line 32 in file "TMR1.c"
  5205 ;; Parameters:    Size  Location     Type
  5206 ;;  a               2    5[COMRAM] unsigned int 
  5207 ;; Auto vars:     Size  Location     Type
  5208 ;;		None
  5209 ;; Return value:  Size  Location     Type
  5210 ;;                  1    wreg      void 
  5211 ;; Registers used:
  5212 ;;		None
  5213 ;; Tracked objects:
  5214 ;;		On entry : 0/0
  5215 ;;		On exit  : 0/0
  5216 ;;		Unchanged: 0/0
  5217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5218 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5221 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5222 ;;Total ram usage:        2 bytes
  5223 ;; Hardware stack levels used:    1
  5224 ;; Hardware stack levels required when called:    3
  5225 ;; This function calls:
  5226 ;;		Nothing
  5227 ;; This function is called by:
  5228 ;;		_main
  5229 ;; This function uses a non-reentrant model
  5230 ;;
  5231                           
  5232                           	psect	text37
  5233  002770                     __ptext37:
  5234                           	opt callstack 0
  5235  002770                     _TMR1_Update_flag_Set:
  5236                           	opt callstack 27
  5237                           
  5238                           ;TMR1.c: 34: TMR1_Update_flag = a;
  5239                           
  5240                           ;incstack = 0
  5241  002770  C006  F033         	movff	TMR1_Update_flag_Set@a,_TMR1_Update_flag
  5242  002774  C007  F034         	movff	TMR1_Update_flag_Set@a+1,_TMR1_Update_flag+1
  5243  002778  0012               	return		;funcret
  5244  00277A                     __end_of_TMR1_Update_flag_Set:
  5245                           	opt callstack 0
  5246                           
  5247 ;; *************** function _TMR1_Update_flag_Get *****************
  5248 ;; Defined at:
  5249 ;;		line 47 in file "TMR1.c"
  5250 ;; Parameters:    Size  Location     Type
  5251 ;;		None
  5252 ;; Auto vars:     Size  Location     Type
  5253 ;;		None
  5254 ;; Return value:  Size  Location     Type
  5255 ;;                  2    5[COMRAM] unsigned int 
  5256 ;; Registers used:
  5257 ;;		None
  5258 ;; Tracked objects:
  5259 ;;		On entry : 0/0
  5260 ;;		On exit  : 0/0
  5261 ;;		Unchanged: 0/0
  5262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5263 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5266 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5267 ;;Total ram usage:        2 bytes
  5268 ;; Hardware stack levels used:    1
  5269 ;; Hardware stack levels required when called:    3
  5270 ;; This function calls:
  5271 ;;		Nothing
  5272 ;; This function is called by:
  5273 ;;		_main
  5274 ;; This function uses a non-reentrant model
  5275 ;;
  5276                           
  5277                           	psect	text38
  5278  00277A                     __ptext38:
  5279                           	opt callstack 0
  5280  00277A                     _TMR1_Update_flag_Get:
  5281                           	opt callstack 27
  5282                           
  5283                           ;TMR1.c: 49: return TMR1_Update_flag;
  5284                           
  5285                           ;incstack = 0
  5286  00277A  C033  F006         	movff	_TMR1_Update_flag,?_TMR1_Update_flag_Get
  5287  00277E  C034  F007         	movff	_TMR1_Update_flag+1,?_TMR1_Update_flag_Get+1
  5288  002782  0012               	return		;funcret
  5289  002784                     __end_of_TMR1_Update_flag_Get:
  5290                           	opt callstack 0
  5291                           
  5292 ;; *************** function _RADAR_Use *****************
  5293 ;; Defined at:
  5294 ;;		line 16 in file "RADARMETADATA.c"
  5295 ;; Parameters:    Size  Location     Type
  5296 ;;		None
  5297 ;; Auto vars:     Size  Location     Type
  5298 ;;		None
  5299 ;; Return value:  Size  Location     Type
  5300 ;;                  1    wreg      void 
  5301 ;; Registers used:
  5302 ;;		None
  5303 ;; Tracked objects:
  5304 ;;		On entry : 0/0
  5305 ;;		On exit  : 0/0
  5306 ;;		Unchanged: 0/0
  5307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5312 ;;Total ram usage:        0 bytes
  5313 ;; Hardware stack levels used:    1
  5314 ;; Hardware stack levels required when called:    3
  5315 ;; This function calls:
  5316 ;;		Nothing
  5317 ;; This function is called by:
  5318 ;;		_main
  5319 ;; This function uses a non-reentrant model
  5320 ;;
  5321                           
  5322                           	psect	text39
  5323  002728                     __ptext39:
  5324                           	opt callstack 0
  5325  002728                     _RADAR_Use:
  5326                           	opt callstack 27
  5327                           
  5328                           ;RADARMETADATA.c: 18: if(Flagi.pomiarTla == 1)
  5329                           
  5330                           ;incstack = 0
  5331  002728  0100               	movlb	0	; () banked
  5332  00272A  A1C6               	btfss	_Flagi& (0+255),0,b
  5333  00272C  0012               	return	
  5334                           
  5335                           ; BSR set to: 0
  5336                           ;RADARMETADATA.c: 19: {;RADARMETADATA.c: 20: Flagi.detekcja = 0;
  5337  00272E  93C6               	bcf	_Flagi& (0+255),1,b
  5338                           
  5339                           ;RADARMETADATA.c: 21: Flagi.pomiarTla = 0;
  5340  002730  91C6               	bcf	_Flagi& (0+255),0,b
  5341                           
  5342                           ; BSR set to: 0
  5343  002732  0012               	return		;funcret
  5344  002734                     __end_of_RADAR_Use:
  5345                           	opt callstack 0
  5346                           
  5347 ;; *************** function _LED_Update *****************
  5348 ;; Defined at:
  5349 ;;		line 148 in file "LED.c"
  5350 ;; Parameters:    Size  Location     Type
  5351 ;;		None
  5352 ;; Auto vars:     Size  Location     Type
  5353 ;;		None
  5354 ;; Return value:  Size  Location     Type
  5355 ;;                  1    wreg      unsigned char 
  5356 ;; Registers used:
  5357 ;;		wreg, status,2, status,0, cstack
  5358 ;; Tracked objects:
  5359 ;;		On entry : 0/0
  5360 ;;		On exit  : 0/0
  5361 ;;		Unchanged: 0/0
  5362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5366 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5367 ;;Total ram usage:        0 bytes
  5368 ;; Hardware stack levels used:    1
  5369 ;; Hardware stack levels required when called:    5
  5370 ;; This function calls:
  5371 ;;		_LED_Control
  5372 ;;		_LED_Left
  5373 ;;		_LED_Light_Pos
  5374 ;;		_LED_Right
  5375 ;; This function is called by:
  5376 ;;		_main
  5377 ;; This function uses a non-reentrant model
  5378 ;;
  5379                           
  5380                           	psect	text40
  5381  001EE2                     __ptext40:
  5382                           	opt callstack 0
  5383  001EE2                     _LED_Update:
  5384                           	opt callstack 25
  5385                           
  5386                           ;LED.c: 150: static LED_RGA_type Red = RED;;LED.c: 151: static LED_RGA_type Green = GREE
      +                          N;;LED.c: 152: static UINT pos1 = 0b0000000001;;LED.c: 153: static UINT pos2 = 0b0000000
      +                          001;;LED.c: 155: if(LOCK == 0)
  5387                           
  5388                           ; BSR set to: 0
  5389                           ;incstack = 0
  5390  001EE2  503A               	movf	_LOCK,w,c
  5391  001EE4  A4D8               	btfss	status,2,c
  5392  001EE6  D013               	goto	l4823
  5393                           
  5394                           ;LED.c: 156: {;LED.c: 157: LED_Control(RED,0b0000000000);
  5395  001EE8  0E00               	movlw	0
  5396  001EEA  6E07               	movwf	LED_Control@diode+1,c
  5397  001EEC  0E00               	movlw	0
  5398  001EEE  6E06               	movwf	LED_Control@diode,c
  5399  001EF0  0E00               	movlw	0
  5400  001EF2  EC3C  F00B         	call	_LED_Control
  5401                           
  5402                           ;LED.c: 158: LED_Light_Pos(Green,pos2,Fulfillment_Lvl);
  5403  001EF6  C04F  F00D         	movff	LED_Update@pos2,LED_Light_Pos@pos
  5404  001EFA  C050  F00E         	movff	LED_Update@pos2+1,LED_Light_Pos@pos+1
  5405  001EFE  C053  F00F         	movff	_Fulfillment_Lvl,LED_Light_Pos@fulfillment
  5406  001F02  C054  F010         	movff	_Fulfillment_Lvl+1,LED_Light_Pos@fulfillment+1
  5407  001F06  5055               	movf	LED_Update@Green,w,c
  5408  001F08  ECFF  F00D         	call	_LED_Light_Pos
  5409                           
  5410                           ;LED.c: 160: }
  5411  001F0C  D012               	goto	l394
  5412  001F0E                     l4823:
  5413                           
  5414                           ;LED.c: 161: else;LED.c: 162: {;LED.c: 163: LED_Control(Green,0b0000000000);
  5415  001F0E  0E00               	movlw	0
  5416  001F10  6E07               	movwf	LED_Control@diode+1,c
  5417  001F12  0E00               	movlw	0
  5418  001F14  6E06               	movwf	LED_Control@diode,c
  5419  001F16  5055               	movf	LED_Update@Green,w,c
  5420  001F18  EC3C  F00B         	call	_LED_Control
  5421                           
  5422                           ;LED.c: 164: LED_Light_Pos(RED,pos1,Fulfillment_Lvl);
  5423  001F1C  C051  F00D         	movff	LED_Update@pos1,LED_Light_Pos@pos
  5424  001F20  C052  F00E         	movff	LED_Update@pos1+1,LED_Light_Pos@pos+1
  5425  001F24  C053  F00F         	movff	_Fulfillment_Lvl,LED_Light_Pos@fulfillment
  5426  001F28  C054  F010         	movff	_Fulfillment_Lvl+1,LED_Light_Pos@fulfillment+1
  5427  001F2C  0E00               	movlw	0
  5428  001F2E  ECFF  F00D         	call	_LED_Light_Pos
  5429  001F32                     l394:
  5430                           
  5431                           ;LED.c: 165: };LED.c: 166: pos1 = LED_Right(pos1);
  5432  001F32  C051  F006         	movff	LED_Update@pos1,LED_Right@a
  5433  001F36  C052  F007         	movff	LED_Update@pos1+1,LED_Right@a+1
  5434  001F3A  EC96  F011         	call	_LED_Right	;wreg free
  5435  001F3E  C006  F051         	movff	?_LED_Right,LED_Update@pos1
  5436  001F42  C007  F052         	movff	?_LED_Right+1,LED_Update@pos1+1
  5437                           
  5438                           ;LED.c: 167: pos2 = LED_Left(pos2);
  5439  001F46  C04F  F006         	movff	LED_Update@pos2,LED_Left@a
  5440  001F4A  C050  F007         	movff	LED_Update@pos2+1,LED_Left@a+1
  5441  001F4E  ECE1  F011         	call	_LED_Left	;wreg free
  5442  001F52  C006  F04F         	movff	?_LED_Left,LED_Update@pos2
  5443  001F56  C007  F050         	movff	?_LED_Left+1,LED_Update@pos2+1
  5444  001F5A  0012               	return		;funcret
  5445  001F5C                     __end_of_LED_Update:
  5446                           	opt callstack 0
  5447                           
  5448 ;; *************** function _LED_Light_Pos *****************
  5449 ;; Defined at:
  5450 ;;		line 239 in file "LED.c"
  5451 ;; Parameters:    Size  Location     Type
  5452 ;;  color           1    wreg     enum E10511
  5453 ;;  pos             2   12[COMRAM] unsigned int 
  5454 ;;  fulfillment     2   14[COMRAM] unsigned int 
  5455 ;; Auto vars:     Size  Location     Type
  5456 ;;  color           1   16[COMRAM] enum E10511
  5457 ;;  flage           2   21[COMRAM] unsigned int 
  5458 ;;  pos2            2   19[COMRAM] unsigned int 
  5459 ;;  LED_array       2   17[COMRAM] unsigned int 
  5460 ;; Return value:  Size  Location     Type
  5461 ;;                  2   12[COMRAM] unsigned int 
  5462 ;; Registers used:
  5463 ;;		wreg, status,2, status,0, cstack
  5464 ;; Tracked objects:
  5465 ;;		On entry : 0/0
  5466 ;;		On exit  : 0/0
  5467 ;;		Unchanged: 0/0
  5468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5469 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5470 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5472 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5473 ;;Total ram usage:       11 bytes
  5474 ;; Hardware stack levels used:    1
  5475 ;; Hardware stack levels required when called:    4
  5476 ;; This function calls:
  5477 ;;		_LED_Control
  5478 ;;		_LED_Left
  5479 ;;		_LED_Right
  5480 ;;		___lwdiv
  5481 ;; This function is called by:
  5482 ;;		_LED_Update
  5483 ;; This function uses a non-reentrant model
  5484 ;;
  5485                           
  5486                           	psect	text41
  5487  001BFE                     __ptext41:
  5488                           	opt callstack 0
  5489  001BFE                     _LED_Light_Pos:
  5490                           	opt callstack 25
  5491                           
  5492                           ;incstack = 0
  5493                           ;LED_Light_Pos@color stored from wreg
  5494  001BFE  6E11               	movwf	LED_Light_Pos@color,c
  5495                           
  5496                           ;LED.c: 241: UINT pos2 =pos;
  5497  001C00  C00D  F014         	movff	LED_Light_Pos@pos,LED_Light_Pos@pos2
  5498  001C04  C00E  F015         	movff	LED_Light_Pos@pos+1,LED_Light_Pos@pos2+1
  5499                           
  5500                           ;LED.c: 242: UINT LED_array = 0b0000000000;
  5501  001C08  0E00               	movlw	0
  5502  001C0A  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  5503  001C0C  0E00               	movlw	0
  5504  001C0E  6E12               	movwf	LED_Light_Pos@LED_array,c
  5505                           
  5506                           ;LED.c: 243: UINT flage = fulfillment/10;
  5507  001C10  C00F  F006         	movff	LED_Light_Pos@fulfillment,___lwdiv@dividend
  5508  001C14  C010  F007         	movff	LED_Light_Pos@fulfillment+1,___lwdiv@dividend+1
  5509  001C18  0E00               	movlw	0
  5510  001C1A  6E09               	movwf	___lwdiv@divisor+1,c
  5511  001C1C  0E0A               	movlw	10
  5512  001C1E  6E08               	movwf	___lwdiv@divisor,c
  5513  001C20  EC46  F011         	call	___lwdiv	;wreg free
  5514  001C24  C006  F016         	movff	?___lwdiv,LED_Light_Pos@flage
  5515  001C28  C007  F017         	movff	?___lwdiv+1,LED_Light_Pos@flage+1
  5516                           
  5517                           ;LED.c: 244: if(color == RED)
  5518  001C2C  5011               	movf	LED_Light_Pos@color,w,c
  5519  001C2E  B4D8               	btfsc	status,2,c
  5520  001C30  D017               	goto	l4653
  5521  001C32  D031               	goto	l4661
  5522  001C34                     l4647:
  5523                           
  5524                           ;LED.c: 247: {;LED.c: 248: LED_array = pos2|LED_array;
  5525  001C34  5012               	movf	LED_Light_Pos@LED_array,w,c
  5526  001C36  1014               	iorwf	LED_Light_Pos@pos2,w,c
  5527  001C38  6E12               	movwf	LED_Light_Pos@LED_array,c
  5528  001C3A  5013               	movf	LED_Light_Pos@LED_array+1,w,c
  5529  001C3C  1015               	iorwf	LED_Light_Pos@pos2+1,w,c
  5530  001C3E  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  5531                           
  5532                           ;LED.c: 249: pos2 = LED_Left(pos2);
  5533  001C40  C014  F006         	movff	LED_Light_Pos@pos2,LED_Left@a
  5534  001C44  C015  F007         	movff	LED_Light_Pos@pos2+1,LED_Left@a+1
  5535  001C48  ECE1  F011         	call	_LED_Left	;wreg free
  5536  001C4C  C006  F014         	movff	?_LED_Left,LED_Light_Pos@pos2
  5537  001C50  C007  F015         	movff	?_LED_Left+1,LED_Light_Pos@pos2+1
  5538                           
  5539                           ;LED.c: 250: flage = flage - 1;
  5540  001C54  0EFF               	movlw	255
  5541  001C56  2416               	addwf	LED_Light_Pos@flage,w,c
  5542  001C58  6E16               	movwf	LED_Light_Pos@flage,c
  5543  001C5A  0EFF               	movlw	255
  5544  001C5C  2017               	addwfc	LED_Light_Pos@flage+1,w,c
  5545  001C5E  6E17               	movwf	LED_Light_Pos@flage+1,c
  5546  001C60                     l4653:
  5547  001C60  5016               	movf	LED_Light_Pos@flage,w,c
  5548  001C62  1017               	iorwf	LED_Light_Pos@flage+1,w,c
  5549  001C64  B4D8               	btfsc	status,2,c
  5550  001C66  D01B               	goto	u3060
  5551  001C68  D7E5               	goto	l4647
  5552  001C6A                     l4655:
  5553                           
  5554                           ;LED.c: 256: {;LED.c: 257: LED_array = pos2|LED_array;
  5555  001C6A  5012               	movf	LED_Light_Pos@LED_array,w,c
  5556  001C6C  1014               	iorwf	LED_Light_Pos@pos2,w,c
  5557  001C6E  6E12               	movwf	LED_Light_Pos@LED_array,c
  5558  001C70  5013               	movf	LED_Light_Pos@LED_array+1,w,c
  5559  001C72  1015               	iorwf	LED_Light_Pos@pos2+1,w,c
  5560  001C74  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  5561                           
  5562                           ;LED.c: 258: pos2 = LED_Right(pos2);
  5563  001C76  C014  F006         	movff	LED_Light_Pos@pos2,LED_Right@a
  5564  001C7A  C015  F007         	movff	LED_Light_Pos@pos2+1,LED_Right@a+1
  5565  001C7E  EC96  F011         	call	_LED_Right	;wreg free
  5566  001C82  C006  F014         	movff	?_LED_Right,LED_Light_Pos@pos2
  5567  001C86  C007  F015         	movff	?_LED_Right+1,LED_Light_Pos@pos2+1
  5568                           
  5569                           ;LED.c: 259: flage = flage - 1;
  5570  001C8A  0EFF               	movlw	255
  5571  001C8C  2416               	addwf	LED_Light_Pos@flage,w,c
  5572  001C8E  6E16               	movwf	LED_Light_Pos@flage,c
  5573  001C90  0EFF               	movlw	255
  5574  001C92  2017               	addwfc	LED_Light_Pos@flage+1,w,c
  5575  001C94  6E17               	movwf	LED_Light_Pos@flage+1,c
  5576  001C96                     l4661:
  5577  001C96  5016               	movf	LED_Light_Pos@flage,w,c
  5578  001C98  1017               	iorwf	LED_Light_Pos@flage+1,w,c
  5579  001C9A  A4D8               	btfss	status,2,c
  5580  001C9C  D7E6               	goto	l4655
  5581  001C9E                     u3060:
  5582                           
  5583                           ;LED.c: 260: };LED.c: 261: };LED.c: 262: LED_Control(color, LED_array);
  5584  001C9E  C012  F006         	movff	LED_Light_Pos@LED_array,LED_Control@diode
  5585  001CA2  C013  F007         	movff	LED_Light_Pos@LED_array+1,LED_Control@diode+1
  5586  001CA6  5011               	movf	LED_Light_Pos@color,w,c
  5587  001CA8  EC3C  F00B         	call	_LED_Control
  5588  001CAC  0012               	return		;funcret
  5589  001CAE                     __end_of_LED_Light_Pos:
  5590                           	opt callstack 0
  5591                           
  5592 ;; *************** function ___lwdiv *****************
  5593 ;; Defined at:
  5594 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
  5595 ;; Parameters:    Size  Location     Type
  5596 ;;  dividend        2    5[COMRAM] unsigned int 
  5597 ;;  divisor         2    7[COMRAM] unsigned int 
  5598 ;; Auto vars:     Size  Location     Type
  5599 ;;  quotient        2   10[COMRAM] unsigned int 
  5600 ;;  counter         1    9[COMRAM] unsigned char 
  5601 ;; Return value:  Size  Location     Type
  5602 ;;                  2    5[COMRAM] unsigned int 
  5603 ;; Registers used:
  5604 ;;		wreg, status,2, status,0
  5605 ;; Tracked objects:
  5606 ;;		On entry : 0/0
  5607 ;;		On exit  : 0/0
  5608 ;;		Unchanged: 0/0
  5609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5610 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5611 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5613 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5614 ;;Total ram usage:        7 bytes
  5615 ;; Hardware stack levels used:    1
  5616 ;; Hardware stack levels required when called:    3
  5617 ;; This function calls:
  5618 ;;		Nothing
  5619 ;; This function is called by:
  5620 ;;		_LED_Light_Pos
  5621 ;;		_FRAME_Plot
  5622 ;; This function uses a non-reentrant model
  5623 ;;
  5624                           
  5625                           	psect	text42
  5626  00228C                     __ptext42:
  5627                           	opt callstack 0
  5628  00228C                     ___lwdiv:
  5629                           	opt callstack 24
  5630                           
  5631                           ;incstack = 0
  5632  00228C  0E00               	movlw	0
  5633  00228E  6E0C               	movwf	___lwdiv@quotient+1,c
  5634  002290  0E00               	movlw	0
  5635  002292  6E0B               	movwf	___lwdiv@quotient,c
  5636  002294  5008               	movf	___lwdiv@divisor,w,c
  5637  002296  1009               	iorwf	___lwdiv@divisor+1,w,c
  5638  002298  B4D8               	btfsc	status,2,c
  5639  00229A  D01C               	goto	l1445
  5640  00229C  0E01               	movlw	1
  5641  00229E  6E0A               	movwf	___lwdiv@counter,c
  5642  0022A0  D004               	goto	l4195
  5643  0022A2                     l4193:
  5644  0022A2  90D8               	bcf	status,0,c
  5645  0022A4  3608               	rlcf	___lwdiv@divisor,f,c
  5646  0022A6  3609               	rlcf	___lwdiv@divisor+1,f,c
  5647  0022A8  2A0A               	incf	___lwdiv@counter,f,c
  5648  0022AA                     l4195:
  5649  0022AA  AE09               	btfss	___lwdiv@divisor+1,7,c
  5650  0022AC  D7FA               	goto	l4193
  5651  0022AE                     u2550:
  5652  0022AE  90D8               	bcf	status,0,c
  5653  0022B0  360B               	rlcf	___lwdiv@quotient,f,c
  5654  0022B2  360C               	rlcf	___lwdiv@quotient+1,f,c
  5655  0022B4  5008               	movf	___lwdiv@divisor,w,c
  5656  0022B6  5C06               	subwf	___lwdiv@dividend,w,c
  5657  0022B8  5009               	movf	___lwdiv@divisor+1,w,c
  5658  0022BA  5807               	subwfb	___lwdiv@dividend+1,w,c
  5659  0022BC  A0D8               	btfss	status,0,c
  5660  0022BE  D005               	goto	l4205
  5661  0022C0  5008               	movf	___lwdiv@divisor,w,c
  5662  0022C2  5E06               	subwf	___lwdiv@dividend,f,c
  5663  0022C4  5009               	movf	___lwdiv@divisor+1,w,c
  5664  0022C6  5A07               	subwfb	___lwdiv@dividend+1,f,c
  5665  0022C8  800B               	bsf	___lwdiv@quotient,0,c
  5666  0022CA                     l4205:
  5667  0022CA  90D8               	bcf	status,0,c
  5668  0022CC  3209               	rrcf	___lwdiv@divisor+1,f,c
  5669  0022CE  3208               	rrcf	___lwdiv@divisor,f,c
  5670  0022D0  2E0A               	decfsz	___lwdiv@counter,f,c
  5671  0022D2  D7ED               	goto	u2550
  5672  0022D4                     l1445:
  5673  0022D4  C00B  F006         	movff	___lwdiv@quotient,?___lwdiv
  5674  0022D8  C00C  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5675  0022DC  0012               	return		;funcret
  5676  0022DE                     __end_of___lwdiv:
  5677                           	opt callstack 0
  5678                           
  5679 ;; *************** function _LED_Right *****************
  5680 ;; Defined at:
  5681 ;;		line 183 in file "LED.c"
  5682 ;; Parameters:    Size  Location     Type
  5683 ;;  a               2    5[COMRAM] unsigned int 
  5684 ;; Auto vars:     Size  Location     Type
  5685 ;;  b               2    9[COMRAM] unsigned int 
  5686 ;; Return value:  Size  Location     Type
  5687 ;;                  2    5[COMRAM] unsigned int 
  5688 ;; Registers used:
  5689 ;;		wreg, status,2, status,0
  5690 ;; Tracked objects:
  5691 ;;		On entry : 0/0
  5692 ;;		On exit  : 0/0
  5693 ;;		Unchanged: 0/0
  5694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5695 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5696 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5697 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5698 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5699 ;;Total ram usage:        6 bytes
  5700 ;; Hardware stack levels used:    1
  5701 ;; Hardware stack levels required when called:    3
  5702 ;; This function calls:
  5703 ;;		Nothing
  5704 ;; This function is called by:
  5705 ;;		_LED_Update
  5706 ;;		_LED_Light_Pos
  5707 ;; This function uses a non-reentrant model
  5708 ;;
  5709                           
  5710                           	psect	text43
  5711  00232C                     __ptext43:
  5712                           	opt callstack 0
  5713  00232C                     _LED_Right:
  5714                           	opt callstack 26
  5715                           
  5716                           ;LED.c: 185: if ((a & 0b0000000001) == 0b0000000001)
  5717                           
  5718                           ;incstack = 0
  5719  00232C  A006               	btfss	LED_Right@a,0,c
  5720  00232E  D018               	goto	l4309
  5721                           
  5722                           ;LED.c: 186: {;LED.c: 187: UINT b = a & 0b1111111110;
  5723  002330  0EFE               	movlw	254
  5724  002332  1406               	andwf	LED_Right@a,w,c
  5725  002334  6E0A               	movwf	LED_Right@b,c
  5726  002336  0E03               	movlw	3
  5727  002338  1407               	andwf	LED_Right@a+1,w,c
  5728  00233A  6E0B               	movwf	LED_Right@b+1,c
  5729                           
  5730                           ;LED.c: 188: b = b >> 1;
  5731  00233C  90D8               	bcf	status,0,c
  5732  00233E  300B               	rrcf	LED_Right@b+1,w,c
  5733  002340  6E08               	movwf	??_LED_Right& (0+255),c
  5734  002342  300A               	rrcf	LED_Right@b,w,c
  5735  002344  6E0A               	movwf	LED_Right@b,c
  5736  002346  C008  F00B         	movff	??_LED_Right,LED_Right@b+1
  5737                           
  5738                           ;LED.c: 189: b = b | 0b1000000000;
  5739  00234A  0E00               	movlw	0
  5740  00234C  100A               	iorwf	LED_Right@b,w,c
  5741  00234E  6E0A               	movwf	LED_Right@b,c
  5742  002350  0E02               	movlw	2
  5743  002352  100B               	iorwf	LED_Right@b+1,w,c
  5744  002354  6E0B               	movwf	LED_Right@b+1,c
  5745                           
  5746                           ;LED.c: 190: return b;
  5747  002356  C00A  F006         	movff	LED_Right@b,?_LED_Right
  5748  00235A  C00B  F007         	movff	LED_Right@b+1,?_LED_Right+1
  5749  00235E  0012               	return	
  5750  002360                     l4309:
  5751                           
  5752                           ;LED.c: 192: else;LED.c: 193: {;LED.c: 194: a =a >> 1;
  5753  002360  90D8               	bcf	status,0,c
  5754  002362  3007               	rrcf	LED_Right@a+1,w,c
  5755  002364  6E08               	movwf	??_LED_Right& (0+255),c
  5756  002366  3006               	rrcf	LED_Right@a,w,c
  5757  002368  6E06               	movwf	LED_Right@a,c
  5758  00236A  C008  F007         	movff	??_LED_Right,LED_Right@a+1
  5759                           
  5760                           ;LED.c: 195: return a;
  5761  00236E  C006  F006         	movff	LED_Right@a,?_LED_Right
  5762  002372  C007  F007         	movff	LED_Right@a+1,?_LED_Right+1
  5763  002376  0012               	return		;funcret
  5764  002378                     __end_of_LED_Right:
  5765                           	opt callstack 0
  5766                           
  5767 ;; *************** function _LED_Left *****************
  5768 ;; Defined at:
  5769 ;;		line 210 in file "LED.c"
  5770 ;; Parameters:    Size  Location     Type
  5771 ;;  a               2    5[COMRAM] unsigned int 
  5772 ;; Auto vars:     Size  Location     Type
  5773 ;;  b               2    7[COMRAM] unsigned int 
  5774 ;; Return value:  Size  Location     Type
  5775 ;;                  2    5[COMRAM] unsigned int 
  5776 ;; Registers used:
  5777 ;;		wreg, status,2, status,0
  5778 ;; Tracked objects:
  5779 ;;		On entry : 0/0
  5780 ;;		On exit  : 0/0
  5781 ;;		Unchanged: 0/0
  5782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5783 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5784 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5786 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5787 ;;Total ram usage:        4 bytes
  5788 ;; Hardware stack levels used:    1
  5789 ;; Hardware stack levels required when called:    3
  5790 ;; This function calls:
  5791 ;;		Nothing
  5792 ;; This function is called by:
  5793 ;;		_LED_Update
  5794 ;;		_LED_Light_Pos
  5795 ;; This function uses a non-reentrant model
  5796 ;;
  5797                           
  5798                           	psect	text44
  5799  0023C2                     __ptext44:
  5800                           	opt callstack 0
  5801  0023C2                     _LED_Left:
  5802                           	opt callstack 25
  5803                           
  5804                           ;LED.c: 212: if ((a & 0b1000000000) == 0b1000000000)
  5805                           
  5806                           ;incstack = 0
  5807  0023C2  A207               	btfss	LED_Left@a+1,1,c
  5808  0023C4  D015               	goto	l4325
  5809                           
  5810                           ;LED.c: 213: {;LED.c: 214: UINT b = a & 0b0111111111;
  5811  0023C6  0EFF               	movlw	255
  5812  0023C8  1406               	andwf	LED_Left@a,w,c
  5813  0023CA  6E08               	movwf	LED_Left@b,c
  5814  0023CC  0E01               	movlw	1
  5815  0023CE  1407               	andwf	LED_Left@a+1,w,c
  5816  0023D0  6E09               	movwf	LED_Left@b+1,c
  5817                           
  5818                           ;LED.c: 215: b = b << 1;
  5819  0023D2  90D8               	bcf	status,0,c
  5820  0023D4  3408               	rlcf	LED_Left@b,w,c
  5821  0023D6  6E08               	movwf	LED_Left@b,c
  5822  0023D8  3409               	rlcf	LED_Left@b+1,w,c
  5823  0023DA  6E09               	movwf	LED_Left@b+1,c
  5824                           
  5825                           ;LED.c: 216: b = b | 0b0000000001;
  5826  0023DC  0E01               	movlw	1
  5827  0023DE  1008               	iorwf	LED_Left@b,w,c
  5828  0023E0  6E08               	movwf	LED_Left@b,c
  5829  0023E2  5009               	movf	LED_Left@b+1,w,c
  5830  0023E4  6E09               	movwf	LED_Left@b+1,c
  5831                           
  5832                           ;LED.c: 217: return b;
  5833  0023E6  C008  F006         	movff	LED_Left@b,?_LED_Left
  5834  0023EA  C009  F007         	movff	LED_Left@b+1,?_LED_Left+1
  5835  0023EE  0012               	return	
  5836  0023F0                     l4325:
  5837                           
  5838                           ;LED.c: 219: else;LED.c: 220: {;LED.c: 221: a = a << 1;
  5839  0023F0  90D8               	bcf	status,0,c
  5840  0023F2  3406               	rlcf	LED_Left@a,w,c
  5841  0023F4  6E06               	movwf	LED_Left@a,c
  5842  0023F6  3407               	rlcf	LED_Left@a+1,w,c
  5843  0023F8  6E07               	movwf	LED_Left@a+1,c
  5844                           
  5845                           ;LED.c: 222: return a;
  5846  0023FA  C006  F006         	movff	LED_Left@a,?_LED_Left
  5847  0023FE  C007  F007         	movff	LED_Left@a+1,?_LED_Left+1
  5848  002402  0012               	return		;funcret
  5849  002404                     __end_of_LED_Left:
  5850                           	opt callstack 0
  5851                           
  5852 ;; *************** function _INI_All *****************
  5853 ;; Defined at:
  5854 ;;		line 54 in file "INI.c"
  5855 ;; Parameters:    Size  Location     Type
  5856 ;;		None
  5857 ;; Auto vars:     Size  Location     Type
  5858 ;;		None
  5859 ;; Return value:  Size  Location     Type
  5860 ;;                  1    wreg      void 
  5861 ;; Registers used:
  5862 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5863 ;; Tracked objects:
  5864 ;;		On entry : 0/0
  5865 ;;		On exit  : 0/0
  5866 ;;		Unchanged: 0/0
  5867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5872 ;;Total ram usage:        0 bytes
  5873 ;; Hardware stack levels used:    1
  5874 ;; Hardware stack levels required when called:    6
  5875 ;; This function calls:
  5876 ;;		_CAN_Setup
  5877 ;;		_INI_GlobalInterrupt
  5878 ;;		_INI_LED_Start
  5879 ;;		_INI_OUTPUT
  5880 ;;		_INI_Timer
  5881 ;;		_NVMInit
  5882 ;;		_ReadDataToEEPROM
  5883 ;; This function is called by:
  5884 ;;		_main
  5885 ;; This function uses a non-reentrant model
  5886 ;;
  5887                           
  5888                           	psect	text45
  5889  00265E                     __ptext45:
  5890                           	opt callstack 0
  5891  00265E                     _INI_All:
  5892                           	opt callstack 24
  5893                           
  5894                           ;INI.c: 57: WDTCONbits.SWDTEN = 1;
  5895                           
  5896                           ;incstack = 0
  5897  00265E  80D1               	bsf	4049,0,c	;volatile
  5898                           
  5899                           ;INI.c: 60: NVMInit();
  5900  002660  EC02  F012         	call	_NVMInit	;wreg free
  5901                           
  5902                           ;INI.c: 62: ReadDataToEEPROM();
  5903  002664  ECBC  F009         	call	_ReadDataToEEPROM	;wreg free
  5904  002668  0004               	clrwdt		;# 
  5905                           
  5906                           ;INI.c: 66: INI_OUTPUT();
  5907  00266A  EC40  F013         	call	_INI_OUTPUT	;wreg free
  5908                           
  5909                           ;INI.c: 68: CAN_Setup();
  5910  00266E  EC92  F010         	call	_CAN_Setup	;wreg free
  5911                           
  5912                           ;INI.c: 69: INI_GlobalInterrupt();
  5913  002672  EC86  F013         	call	_INI_GlobalInterrupt	;wreg free
  5914                           
  5915                           ;INI.c: 71: INI_Timer();
  5916  002676  EC5F  F013         	call	_INI_Timer	;wreg free
  5917                           
  5918                           ;INI.c: 73: INI_LED_Start();
  5919  00267A  ECDA  F012         	call	_INI_LED_Start	;wreg free
  5920  00267E  0012               	return		;funcret
  5921  002680                     __end_of_INI_All:
  5922                           	opt callstack 0
  5923                           
  5924 ;; *************** function _ReadDataToEEPROM *****************
  5925 ;; Defined at:
  5926 ;;		line 481 in file "FRAME.c"
  5927 ;; Parameters:    Size  Location     Type
  5928 ;;		None
  5929 ;; Auto vars:     Size  Location     Type
  5930 ;;		None
  5931 ;; Return value:  Size  Location     Type
  5932 ;;                  1    wreg      void 
  5933 ;; Registers used:
  5934 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5935 ;; Tracked objects:
  5936 ;;		On entry : 0/0
  5937 ;;		On exit  : 0/0
  5938 ;;		Unchanged: 0/0
  5939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5944 ;;Total ram usage:        0 bytes
  5945 ;; Hardware stack levels used:    1
  5946 ;; Hardware stack levels required when called:    5
  5947 ;; This function calls:
  5948 ;;		_NVMRead
  5949 ;; This function is called by:
  5950 ;;		_INI_All
  5951 ;; This function uses a non-reentrant model
  5952 ;;
  5953                           
  5954                           	psect	text46
  5955  001378                     __ptext46:
  5956                           	opt callstack 0
  5957  001378                     _ReadDataToEEPROM:
  5958                           	opt callstack 24
  5959                           
  5960                           ;FRAME.c: 484: NVMRead(&Init_Data,10,2);
  5961                           
  5962                           ;incstack = 0
  5963  001378  0E56               	movlw	low _Init_Data
  5964  00137A  6E08               	movwf	NVMRead@dest,c
  5965  00137C  0E00               	movlw	high _Init_Data
  5966  00137E  6E09               	movwf	NVMRead@dest+1,c
  5967  001380  0E00               	movlw	0
  5968  001382  6E0B               	movwf	NVMRead@addr+1,c
  5969  001384  0E0A               	movlw	10
  5970  001386  6E0A               	movwf	NVMRead@addr,c
  5971  001388  0E00               	movlw	0
  5972  00138A  6E0D               	movwf	NVMRead@count+1,c
  5973  00138C  0E02               	movlw	2
  5974  00138E  6E0C               	movwf	NVMRead@count,c
  5975  001390  ECC0  F012         	call	_NVMRead	;wreg free
  5976                           
  5977                           ;FRAME.c: 485: NVMRead(&NeightAdress1,13,2);
  5978  001394  0E4B               	movlw	low _NeightAdress1
  5979  001396  6E08               	movwf	NVMRead@dest,c
  5980  001398  0E00               	movlw	high _NeightAdress1
  5981  00139A  6E09               	movwf	NVMRead@dest+1,c
  5982  00139C  0E00               	movlw	0
  5983  00139E  6E0B               	movwf	NVMRead@addr+1,c
  5984  0013A0  0E0D               	movlw	13
  5985  0013A2  6E0A               	movwf	NVMRead@addr,c
  5986  0013A4  0E00               	movlw	0
  5987  0013A6  6E0D               	movwf	NVMRead@count+1,c
  5988  0013A8  0E02               	movlw	2
  5989  0013AA  6E0C               	movwf	NVMRead@count,c
  5990  0013AC  ECC0  F012         	call	_NVMRead	;wreg free
  5991                           
  5992                           ;FRAME.c: 486: if(NeightAdress1==0xFFFF)
  5993  0013B0  284B               	incf	_NeightAdress1,w,c	;volatile
  5994  0013B2  E107               	bnz	l4691
  5995  0013B4  284C               	incf	_NeightAdress1+1,w,c	;volatile
  5996  0013B6  A4D8               	btfss	status,2,c
  5997  0013B8  D004               	goto	l4691
  5998                           
  5999                           ;FRAME.c: 487: {;FRAME.c: 488: NeightAdress1=0x0000;
  6000  0013BA  0E00               	movlw	0
  6001  0013BC  6E4C               	movwf	_NeightAdress1+1,c	;volatile
  6002  0013BE  0E00               	movlw	0
  6003  0013C0  6E4B               	movwf	_NeightAdress1,c	;volatile
  6004  0013C2                     l4691:
  6005                           
  6006                           ;FRAME.c: 489: };FRAME.c: 490: NVMRead(&NeightAdress2,16,2);
  6007  0013C2  0E58               	movlw	low _NeightAdress2
  6008  0013C4  6E08               	movwf	NVMRead@dest,c
  6009  0013C6  0E00               	movlw	high _NeightAdress2
  6010  0013C8  6E09               	movwf	NVMRead@dest+1,c
  6011  0013CA  0E00               	movlw	0
  6012  0013CC  6E0B               	movwf	NVMRead@addr+1,c
  6013  0013CE  0E10               	movlw	16
  6014  0013D0  6E0A               	movwf	NVMRead@addr,c
  6015  0013D2  0E00               	movlw	0
  6016  0013D4  6E0D               	movwf	NVMRead@count+1,c
  6017  0013D6  0E02               	movlw	2
  6018  0013D8  6E0C               	movwf	NVMRead@count,c
  6019  0013DA  ECC0  F012         	call	_NVMRead	;wreg free
  6020                           
  6021                           ;FRAME.c: 491: if(NeightAdress2==0xFFFF)
  6022  0013DE  2858               	incf	_NeightAdress2,w,c	;volatile
  6023  0013E0  E107               	bnz	l4697
  6024  0013E2  2859               	incf	_NeightAdress2+1,w,c	;volatile
  6025  0013E4  A4D8               	btfss	status,2,c
  6026  0013E6  D004               	goto	l4697
  6027                           
  6028                           ;FRAME.c: 492: {;FRAME.c: 493: NeightAdress2=0x0000;
  6029  0013E8  0E00               	movlw	0
  6030  0013EA  6E59               	movwf	_NeightAdress2+1,c	;volatile
  6031  0013EC  0E00               	movlw	0
  6032  0013EE  6E58               	movwf	_NeightAdress2,c	;volatile
  6033  0013F0                     l4697:
  6034                           
  6035                           ;FRAME.c: 494: };FRAME.c: 495: NVMRead(&NeightAdress3,19,2);
  6036  0013F0  0E49               	movlw	low _NeightAdress3
  6037  0013F2  6E08               	movwf	NVMRead@dest,c
  6038  0013F4  0E00               	movlw	high _NeightAdress3
  6039  0013F6  6E09               	movwf	NVMRead@dest+1,c
  6040  0013F8  0E00               	movlw	0
  6041  0013FA  6E0B               	movwf	NVMRead@addr+1,c
  6042  0013FC  0E13               	movlw	19
  6043  0013FE  6E0A               	movwf	NVMRead@addr,c
  6044  001400  0E00               	movlw	0
  6045  001402  6E0D               	movwf	NVMRead@count+1,c
  6046  001404  0E02               	movlw	2
  6047  001406  6E0C               	movwf	NVMRead@count,c
  6048  001408  ECC0  F012         	call	_NVMRead	;wreg free
  6049                           
  6050                           ;FRAME.c: 496: if(NeightAdress3==0xFFFF)
  6051  00140C  2849               	incf	_NeightAdress3,w,c	;volatile
  6052  00140E  E107               	bnz	l4703
  6053  001410  284A               	incf	_NeightAdress3+1,w,c	;volatile
  6054  001412  A4D8               	btfss	status,2,c
  6055  001414  D004               	goto	l4703
  6056                           
  6057                           ;FRAME.c: 497: {;FRAME.c: 498: NeightAdress3=0x0000;
  6058  001416  0E00               	movlw	0
  6059  001418  6E4A               	movwf	_NeightAdress3+1,c	;volatile
  6060  00141A  0E00               	movlw	0
  6061  00141C  6E49               	movwf	_NeightAdress3,c	;volatile
  6062  00141E                     l4703:
  6063                           
  6064                           ;FRAME.c: 499: };FRAME.c: 500: NVMRead(&NeightAdress4,22,2);
  6065  00141E  0E47               	movlw	low _NeightAdress4
  6066  001420  6E08               	movwf	NVMRead@dest,c
  6067  001422  0E00               	movlw	high _NeightAdress4
  6068  001424  6E09               	movwf	NVMRead@dest+1,c
  6069  001426  0E00               	movlw	0
  6070  001428  6E0B               	movwf	NVMRead@addr+1,c
  6071  00142A  0E16               	movlw	22
  6072  00142C  6E0A               	movwf	NVMRead@addr,c
  6073  00142E  0E00               	movlw	0
  6074  001430  6E0D               	movwf	NVMRead@count+1,c
  6075  001432  0E02               	movlw	2
  6076  001434  6E0C               	movwf	NVMRead@count,c
  6077  001436  ECC0  F012         	call	_NVMRead	;wreg free
  6078                           
  6079                           ;FRAME.c: 501: if(NeightAdress4==0xFFFF)
  6080  00143A  2847               	incf	_NeightAdress4,w,c	;volatile
  6081  00143C  E107               	bnz	l4709
  6082  00143E  2848               	incf	_NeightAdress4+1,w,c	;volatile
  6083  001440  A4D8               	btfss	status,2,c
  6084  001442  D004               	goto	l4709
  6085                           
  6086                           ;FRAME.c: 502: {;FRAME.c: 503: NeightAdress4=0x0000;
  6087  001444  0E00               	movlw	0
  6088  001446  6E48               	movwf	_NeightAdress4+1,c	;volatile
  6089  001448  0E00               	movlw	0
  6090  00144A  6E47               	movwf	_NeightAdress4,c	;volatile
  6091  00144C                     l4709:
  6092                           
  6093                           ;FRAME.c: 504: };FRAME.c: 505: NVMRead(&NeightAdress5,25,2);
  6094  00144C  0E45               	movlw	low _NeightAdress5
  6095  00144E  6E08               	movwf	NVMRead@dest,c
  6096  001450  0E00               	movlw	high _NeightAdress5
  6097  001452  6E09               	movwf	NVMRead@dest+1,c
  6098  001454  0E00               	movlw	0
  6099  001456  6E0B               	movwf	NVMRead@addr+1,c
  6100  001458  0E19               	movlw	25
  6101  00145A  6E0A               	movwf	NVMRead@addr,c
  6102  00145C  0E00               	movlw	0
  6103  00145E  6E0D               	movwf	NVMRead@count+1,c
  6104  001460  0E02               	movlw	2
  6105  001462  6E0C               	movwf	NVMRead@count,c
  6106  001464  ECC0  F012         	call	_NVMRead	;wreg free
  6107                           
  6108                           ;FRAME.c: 506: if(NeightAdress5==0xFFFF)
  6109  001468  2845               	incf	_NeightAdress5,w,c	;volatile
  6110  00146A  E107               	bnz	l4715
  6111  00146C  2846               	incf	_NeightAdress5+1,w,c	;volatile
  6112  00146E  A4D8               	btfss	status,2,c
  6113  001470  D004               	goto	l4715
  6114                           
  6115                           ;FRAME.c: 507: {;FRAME.c: 508: NeightAdress5=0x0000;
  6116  001472  0E00               	movlw	0
  6117  001474  6E46               	movwf	_NeightAdress5+1,c	;volatile
  6118  001476  0E00               	movlw	0
  6119  001478  6E45               	movwf	_NeightAdress5,c	;volatile
  6120  00147A                     l4715:
  6121                           
  6122                           ;FRAME.c: 509: };FRAME.c: 510: NVMRead(&NeightAdress6,28,2);
  6123  00147A  0E43               	movlw	low _NeightAdress6
  6124  00147C  6E08               	movwf	NVMRead@dest,c
  6125  00147E  0E00               	movlw	high _NeightAdress6
  6126  001480  6E09               	movwf	NVMRead@dest+1,c
  6127  001482  0E00               	movlw	0
  6128  001484  6E0B               	movwf	NVMRead@addr+1,c
  6129  001486  0E1C               	movlw	28
  6130  001488  6E0A               	movwf	NVMRead@addr,c
  6131  00148A  0E00               	movlw	0
  6132  00148C  6E0D               	movwf	NVMRead@count+1,c
  6133  00148E  0E02               	movlw	2
  6134  001490  6E0C               	movwf	NVMRead@count,c
  6135  001492  ECC0  F012         	call	_NVMRead	;wreg free
  6136                           
  6137                           ;FRAME.c: 511: if(NeightAdress6==0xFFFF)
  6138  001496  2843               	incf	_NeightAdress6,w,c	;volatile
  6139  001498  E107               	bnz	l4721
  6140  00149A  2844               	incf	_NeightAdress6+1,w,c	;volatile
  6141  00149C  A4D8               	btfss	status,2,c
  6142  00149E  D004               	goto	l4721
  6143                           
  6144                           ;FRAME.c: 512: {;FRAME.c: 513: NeightAdress6=0x0000;
  6145  0014A0  0E00               	movlw	0
  6146  0014A2  6E44               	movwf	_NeightAdress6+1,c	;volatile
  6147  0014A4  0E00               	movlw	0
  6148  0014A6  6E43               	movwf	_NeightAdress6,c	;volatile
  6149  0014A8                     l4721:
  6150                           
  6151                           ;FRAME.c: 514: };FRAME.c: 515: NVMRead(&NeightAdress7,31,2);
  6152  0014A8  0E41               	movlw	low _NeightAdress7
  6153  0014AA  6E08               	movwf	NVMRead@dest,c
  6154  0014AC  0E00               	movlw	high _NeightAdress7
  6155  0014AE  6E09               	movwf	NVMRead@dest+1,c
  6156  0014B0  0E00               	movlw	0
  6157  0014B2  6E0B               	movwf	NVMRead@addr+1,c
  6158  0014B4  0E1F               	movlw	31
  6159  0014B6  6E0A               	movwf	NVMRead@addr,c
  6160  0014B8  0E00               	movlw	0
  6161  0014BA  6E0D               	movwf	NVMRead@count+1,c
  6162  0014BC  0E02               	movlw	2
  6163  0014BE  6E0C               	movwf	NVMRead@count,c
  6164  0014C0  ECC0  F012         	call	_NVMRead	;wreg free
  6165                           
  6166                           ;FRAME.c: 516: if(NeightAdress7==0xFFFF)
  6167  0014C4  2841               	incf	_NeightAdress7,w,c	;volatile
  6168  0014C6  E107               	bnz	l4727
  6169  0014C8  2842               	incf	_NeightAdress7+1,w,c	;volatile
  6170  0014CA  A4D8               	btfss	status,2,c
  6171  0014CC  D004               	goto	l4727
  6172                           
  6173                           ;FRAME.c: 517: {;FRAME.c: 518: NeightAdress7=0x0000;
  6174  0014CE  0E00               	movlw	0
  6175  0014D0  6E42               	movwf	_NeightAdress7+1,c	;volatile
  6176  0014D2  0E00               	movlw	0
  6177  0014D4  6E41               	movwf	_NeightAdress7,c	;volatile
  6178  0014D6                     l4727:
  6179                           
  6180                           ;FRAME.c: 519: };FRAME.c: 520: NVMRead(&NeightAdress8,34,2);
  6181  0014D6  0E3F               	movlw	low _NeightAdress8
  6182  0014D8  6E08               	movwf	NVMRead@dest,c
  6183  0014DA  0E00               	movlw	high _NeightAdress8
  6184  0014DC  6E09               	movwf	NVMRead@dest+1,c
  6185  0014DE  0E00               	movlw	0
  6186  0014E0  6E0B               	movwf	NVMRead@addr+1,c
  6187  0014E2  0E22               	movlw	34
  6188  0014E4  6E0A               	movwf	NVMRead@addr,c
  6189  0014E6  0E00               	movlw	0
  6190  0014E8  6E0D               	movwf	NVMRead@count+1,c
  6191  0014EA  0E02               	movlw	2
  6192  0014EC  6E0C               	movwf	NVMRead@count,c
  6193  0014EE  ECC0  F012         	call	_NVMRead	;wreg free
  6194                           
  6195                           ;FRAME.c: 521: if(NeightAdress8==0xFFFF)
  6196  0014F2  283F               	incf	_NeightAdress8,w,c	;volatile
  6197  0014F4  E107               	bnz	l641
  6198  0014F6  2840               	incf	_NeightAdress8+1,w,c	;volatile
  6199  0014F8  A4D8               	btfss	status,2,c
  6200  0014FA  0012               	return	
  6201                           
  6202                           ;FRAME.c: 522: {;FRAME.c: 523: NeightAdress8=0x0000;
  6203  0014FC  0E00               	movlw	0
  6204  0014FE  6E40               	movwf	_NeightAdress8+1,c	;volatile
  6205  001500  0E00               	movlw	0
  6206  001502  6E3F               	movwf	_NeightAdress8,c	;volatile
  6207  001504                     l641:
  6208  001504  0012               	return		;funcret
  6209  001506                     __end_of_ReadDataToEEPROM:
  6210                           	opt callstack 0
  6211                           
  6212 ;; *************** function _NVMRead *****************
  6213 ;; Defined at:
  6214 ;;		line 125 in file "EEPROM.c"
  6215 ;; Parameters:    Size  Location     Type
  6216 ;;  dest            2    7[COMRAM] PTR unsigned char 
  6217 ;;		 -> Init_Data(2), NeightAdress8(2), NeightAdress7(2), NeightAdress6(2), 
  6218 ;;		 -> NeightAdress5(2), NeightAdress4(2), NeightAdress3(2), NeightAdress2(2), 
  6219 ;;		 -> NeightAdress1(2), 
  6220 ;;  addr            2    9[COMRAM] unsigned short 
  6221 ;;  count           2   11[COMRAM] unsigned short 
  6222 ;; Auto vars:     Size  Location     Type
  6223 ;;		None
  6224 ;; Return value:  Size  Location     Type
  6225 ;;                  1    wreg      void 
  6226 ;; Registers used:
  6227 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6228 ;; Tracked objects:
  6229 ;;		On entry : 0/0
  6230 ;;		On exit  : 0/0
  6231 ;;		Unchanged: 0/0
  6232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6233 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6236 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6237 ;;Total ram usage:        6 bytes
  6238 ;; Hardware stack levels used:    1
  6239 ;; Hardware stack levels required when called:    4
  6240 ;; This function calls:
  6241 ;;		_ReadfromEEPROM
  6242 ;; This function is called by:
  6243 ;;		_ReadDataToEEPROM
  6244 ;; This function uses a non-reentrant model
  6245 ;;
  6246                           
  6247                           	psect	text47
  6248  002580                     __ptext47:
  6249                           	opt callstack 0
  6250  002580                     _NVMRead:
  6251                           	opt callstack 24
  6252                           
  6253                           ;EEPROM.c: 127: while( count > 0 )
  6254                           
  6255                           ;incstack = 0
  6256  002580  D014               	goto	l4445
  6257  002582                     l928:
  6258  002582  B2A6               	btfsc	4006,1,c	;volsfr
  6259  002584  D7FE               	goto	l928
  6260                           
  6261                           ;EEPROM.c: 130: *dest++ = ReadfromEEPROM(addr++);
  6262  002586  C00A  F006         	movff	NVMRead@addr,ReadfromEEPROM@Address
  6263  00258A  C00B  F007         	movff	NVMRead@addr+1,ReadfromEEPROM@Address+1
  6264  00258E  EC76  F013         	call	_ReadfromEEPROM	;wreg free
  6265  002592  C008  FFD9         	movff	NVMRead@dest,fsr2l
  6266  002596  C009  FFDA         	movff	NVMRead@dest+1,fsr2h
  6267  00259A  6EDF               	movwf	indf2,c
  6268  00259C  4A0A               	infsnz	NVMRead@addr,f,c
  6269  00259E  2A0B               	incf	NVMRead@addr+1,f,c
  6270  0025A0  4A08               	infsnz	NVMRead@dest,f,c
  6271  0025A2  2A09               	incf	NVMRead@dest+1,f,c
  6272                           
  6273                           ;EEPROM.c: 131: count--;
  6274  0025A4  060C               	decf	NVMRead@count,f,c
  6275  0025A6  A0D8               	btfss	status,0,c
  6276  0025A8  060D               	decf	NVMRead@count+1,f,c
  6277  0025AA                     l4445:
  6278  0025AA  500C               	movf	NVMRead@count,w,c
  6279  0025AC  100D               	iorwf	NVMRead@count+1,w,c
  6280  0025AE  B4D8               	btfsc	status,2,c
  6281  0025B0  0012               	return	
  6282  0025B2  D7E7               	goto	l928
  6283  0025B4                     __end_of_NVMRead:
  6284                           	opt callstack 0
  6285                           
  6286 ;; *************** function _ReadfromEEPROM *****************
  6287 ;; Defined at:
  6288 ;;		line 73 in file "EEPROM.c"
  6289 ;; Parameters:    Size  Location     Type
  6290 ;;  Address         2    5[COMRAM] unsigned short 
  6291 ;; Auto vars:     Size  Location     Type
  6292 ;;		None
  6293 ;; Return value:  Size  Location     Type
  6294 ;;                  1    wreg      unsigned char 
  6295 ;; Registers used:
  6296 ;;		wreg, status,2
  6297 ;; Tracked objects:
  6298 ;;		On entry : 0/0
  6299 ;;		On exit  : 0/0
  6300 ;;		Unchanged: 0/0
  6301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6302 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6305 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6306 ;;Total ram usage:        2 bytes
  6307 ;; Hardware stack levels used:    1
  6308 ;; Hardware stack levels required when called:    3
  6309 ;; This function calls:
  6310 ;;		Nothing
  6311 ;; This function is called by:
  6312 ;;		_NVMRead
  6313 ;; This function uses a non-reentrant model
  6314 ;;
  6315                           
  6316                           	psect	text48
  6317  0026EC                     __ptext48:
  6318                           	opt callstack 0
  6319  0026EC                     _ReadfromEEPROM:
  6320                           	opt callstack 24
  6321                           
  6322                           ;EEPROM.c: 75: EEADRH = (BYTE)(Address>>8);
  6323                           
  6324                           ;incstack = 0
  6325  0026EC  5007               	movf	ReadfromEEPROM@Address+1,w,c
  6326  0026EE  6EAA               	movwf	4010,c	;volatile
  6327                           
  6328                           ;EEPROM.c: 76: EEADR = (BYTE)Address;
  6329  0026F0  C006  FFA9         	movff	ReadfromEEPROM@Address,4009	;volatile
  6330                           
  6331                           ;EEPROM.c: 77: EECON1bits.RD = 1;
  6332  0026F4  80A6               	bsf	4006,0,c	;volsfr
  6333                           
  6334                           ;EEPROM.c: 78: EECON1bits.EEPGD = 0;
  6335  0026F6  9EA6               	bcf	4006,7,c	;volsfr
  6336                           
  6337                           ;EEPROM.c: 79: EECON1bits.CFGS = 0;
  6338  0026F8  9CA6               	bcf	4006,6,c	;volsfr
  6339                           
  6340                           ;EEPROM.c: 80: return EEDATA;
  6341  0026FA  50A8               	movf	4008,w,c	;volatile
  6342  0026FC  0012               	return		;funcret
  6343  0026FE                     __end_of_ReadfromEEPROM:
  6344                           	opt callstack 0
  6345                           
  6346 ;; *************** function _NVMInit *****************
  6347 ;; Defined at:
  6348 ;;		line 49 in file "EEPROM.c"
  6349 ;; Parameters:    Size  Location     Type
  6350 ;;		None
  6351 ;; Auto vars:     Size  Location     Type
  6352 ;;  NeightAdress    2    0        unsigned int 
  6353 ;;  result          1   13[COMRAM] enum E10294
  6354 ;; Return value:  Size  Location     Type
  6355 ;;                  1    wreg      enum E10294
  6356 ;; Registers used:
  6357 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6358 ;; Tracked objects:
  6359 ;;		On entry : 0/0
  6360 ;;		On exit  : 0/0
  6361 ;;		Unchanged: 0/0
  6362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6364 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6366 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6367 ;;Total ram usage:        3 bytes
  6368 ;; Hardware stack levels used:    1
  6369 ;; Hardware stack levels required when called:    4
  6370 ;; This function calls:
  6371 ;;		_NVMalloc
  6372 ;; This function is called by:
  6373 ;;		_INI_All
  6374 ;; This function uses a non-reentrant model
  6375 ;;
  6376                           
  6377                           	psect	text49
  6378  002404                     __ptext49:
  6379                           	opt callstack 0
  6380  002404                     _NVMInit:
  6381                           	opt callstack 25
  6382                           
  6383                           ;EEPROM.c: 51: BOOL result = TRUE;
  6384                           
  6385                           ;incstack = 0
  6386  002404  0E01               	movlw	1
  6387  002406  6E0E               	movwf	NVMInit@result,c
  6388                           
  6389                           ;EEPROM.c: 53: nextEEPosition = 0;
  6390  002408  0E00               	movlw	0
  6391  00240A  6E30               	movwf	_nextEEPosition+1,c
  6392  00240C  0E00               	movlw	0
  6393  00240E  6E2F               	movwf	_nextEEPosition,c
  6394                           
  6395                           ;EEPROM.c: 55: result &= NVMalloc(sizeof(KartaStruct), &ustawieniaKarty);
  6396  002410  0E00               	movlw	0
  6397  002412  6E07               	movwf	NVMalloc@size+1,c
  6398  002414  0E03               	movlw	3
  6399  002416  6E06               	movwf	NVMalloc@size,c
  6400  002418  0E3D               	movlw	low _ustawieniaKarty
  6401  00241A  6E08               	movwf	NVMalloc@location,c
  6402  00241C  0E00               	movlw	high _ustawieniaKarty
  6403  00241E  6E09               	movwf	NVMalloc@location+1,c
  6404  002420  EC8B  F012         	call	_NVMalloc	;wreg free
  6405  002424  160E               	andwf	NVMInit@result,f,c
  6406                           
  6407                           ;EEPROM.c: 56: result &= NVMalloc(8*sizeof(NeightAdress_Example), &neighborsAdress);
  6408  002426  0E00               	movlw	0
  6409  002428  6E07               	movwf	NVMalloc@size+1,c
  6410  00242A  0E10               	movlw	16
  6411  00242C  6E06               	movwf	NVMalloc@size,c
  6412  00242E  0E3B               	movlw	low _neighborsAdress
  6413  002430  6E08               	movwf	NVMalloc@location,c
  6414  002432  0E00               	movlw	high _neighborsAdress
  6415  002434  6E09               	movwf	NVMalloc@location+1,c
  6416  002436  EC8B  F012         	call	_NVMalloc	;wreg free
  6417  00243A  160E               	andwf	NVMInit@result,f,c
  6418  00243C  0012               	return		;funcret
  6419  00243E                     __end_of_NVMInit:
  6420                           	opt callstack 0
  6421                           
  6422 ;; *************** function _NVMalloc *****************
  6423 ;; Defined at:
  6424 ;;		line 24 in file "EEPROM.c"
  6425 ;; Parameters:    Size  Location     Type
  6426 ;;  size            2    5[COMRAM] unsigned short 
  6427 ;;  location        2    7[COMRAM] PTR unsigned short 
  6428 ;;		 -> neighborsAdress(2), ustawieniaKarty(2), 
  6429 ;; Auto vars:     Size  Location     Type
  6430 ;;		None
  6431 ;; Return value:  Size  Location     Type
  6432 ;;                  1    wreg      enum E10294
  6433 ;; Registers used:
  6434 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6435 ;; Tracked objects:
  6436 ;;		On entry : 0/0
  6437 ;;		On exit  : 0/0
  6438 ;;		Unchanged: 0/0
  6439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6440 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6442 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6443 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6444 ;;Total ram usage:        6 bytes
  6445 ;; Hardware stack levels used:    1
  6446 ;; Hardware stack levels required when called:    3
  6447 ;; This function calls:
  6448 ;;		Nothing
  6449 ;; This function is called by:
  6450 ;;		_NVMInit
  6451 ;; This function uses a non-reentrant model
  6452 ;;
  6453                           
  6454                           	psect	text50
  6455  002516                     __ptext50:
  6456                           	opt callstack 0
  6457  002516                     _NVMalloc:
  6458                           	opt callstack 25
  6459                           
  6460                           ;EEPROM.c: 28: if ((nextEEPosition + (WORD)size) > (WORD)0x400)
  6461                           
  6462                           ;incstack = 0
  6463  002516  5006               	movf	NVMalloc@size,w,c
  6464  002518  242F               	addwf	_nextEEPosition,w,c
  6465  00251A  6E0A               	movwf	??_NVMalloc& (0+255),c
  6466  00251C  5007               	movf	NVMalloc@size+1,w,c
  6467  00251E  2030               	addwfc	_nextEEPosition+1,w,c
  6468  002520  6E0B               	movwf	(??_NVMalloc+1)& (0+255),c
  6469  002522  040A               	decf	??_NVMalloc,w,c
  6470  002524  0E04               	movlw	4
  6471  002526  580B               	subwfb	??_NVMalloc+1,w,c
  6472  002528  A0D8               	btfss	status,0,c
  6473  00252A  D002               	goto	l4491
  6474                           
  6475                           ;EEPROM.c: 29: {;EEPROM.c: 30: return FALSE;
  6476  00252C  0E00               	movlw	0
  6477  00252E  0012               	return	
  6478  002530                     l4491:
  6479                           
  6480                           ;EEPROM.c: 31: };EEPROM.c: 33: *location = nextEEPosition;
  6481  002530  C008  FFD9         	movff	NVMalloc@location,fsr2l
  6482  002534  C009  FFDA         	movff	NVMalloc@location+1,fsr2h
  6483  002538  C02F  FFDE         	movff	_nextEEPosition,postinc2
  6484  00253C  C030  FFDD         	movff	_nextEEPosition+1,postdec2
  6485                           
  6486                           ;EEPROM.c: 34: nextEEPosition += size;
  6487  002540  5006               	movf	NVMalloc@size,w,c
  6488  002542  262F               	addwf	_nextEEPosition,f,c
  6489  002544  5007               	movf	NVMalloc@size+1,w,c
  6490  002546  2230               	addwfc	_nextEEPosition+1,f,c
  6491                           
  6492                           ;EEPROM.c: 35: return TRUE;
  6493  002548  0E01               	movlw	1
  6494  00254A  0012               	return		;funcret
  6495  00254C                     __end_of_NVMalloc:
  6496                           	opt callstack 0
  6497                           
  6498 ;; *************** function _INI_Timer *****************
  6499 ;; Defined at:
  6500 ;;		line 92 in file "TMR1.c"
  6501 ;; Parameters:    Size  Location     Type
  6502 ;;		None
  6503 ;; Auto vars:     Size  Location     Type
  6504 ;;		None
  6505 ;; Return value:  Size  Location     Type
  6506 ;;                  1    wreg      unsigned char 
  6507 ;; Registers used:
  6508 ;;		wreg, status,2
  6509 ;; Tracked objects:
  6510 ;;		On entry : 0/0
  6511 ;;		On exit  : 0/0
  6512 ;;		Unchanged: 0/0
  6513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6517 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6518 ;;Total ram usage:        0 bytes
  6519 ;; Hardware stack levels used:    1
  6520 ;; Hardware stack levels required when called:    3
  6521 ;; This function calls:
  6522 ;;		Nothing
  6523 ;; This function is called by:
  6524 ;;		_INI_All
  6525 ;; This function uses a non-reentrant model
  6526 ;;
  6527                           
  6528                           	psect	text51
  6529  0026BE                     __ptext51:
  6530                           	opt callstack 0
  6531  0026BE                     _INI_Timer:
  6532                           	opt callstack 26
  6533                           
  6534                           ;TMR1.c: 96: IRCF2 = 1;
  6535                           
  6536                           ;incstack = 0
  6537  0026BE  8CD3               	bsf	4051,6,c	;volatile
  6538                           
  6539                           ;TMR1.c: 97: IRCF1 = 1;
  6540  0026C0  8AD3               	bsf	4051,5,c	;volatile
  6541                           
  6542                           ;TMR1.c: 98: IRCF0 = 1;
  6543  0026C2  88D3               	bsf	4051,4,c	;volatile
  6544                           
  6545                           ;TMR1.c: 99: T1CON = 0b00111101;
  6546  0026C4  0E3D               	movlw	61
  6547  0026C6  6ECD               	movwf	4045,c	;volatile
  6548                           
  6549                           ;TMR1.c: 100: TMR1H= (UINT8)((0xFFFF - (((8000000/8)/4)/10)) >> 8);
  6550  0026C8  0E9E               	movlw	158
  6551  0026CA  6ECF               	movwf	4047,c	;volatile
  6552                           
  6553                           ;TMR1.c: 101: TMR1L=(UINT8)((0xFFFF - (((8000000/8)/4)/10)) & 0xFF);
  6554  0026CC  0E57               	movlw	87
  6555  0026CE  6ECE               	movwf	4046,c	;volatile
  6556                           
  6557                           ;TMR1.c: 102: TMR1IE=1;
  6558  0026D0  809D               	bsf	3997,0,c	;volatile
  6559                           
  6560                           ;TMR1.c: 103: TMR1ON = 1;
  6561  0026D2  80CD               	bsf	4045,0,c	;volatile
  6562  0026D4  0012               	return		;funcret
  6563  0026D6                     __end_of_INI_Timer:
  6564                           	opt callstack 0
  6565                           
  6566 ;; *************** function _INI_OUTPUT *****************
  6567 ;; Defined at:
  6568 ;;		line 29 in file "INI.c"
  6569 ;; Parameters:    Size  Location     Type
  6570 ;;		None
  6571 ;; Auto vars:     Size  Location     Type
  6572 ;;		None
  6573 ;; Return value:  Size  Location     Type
  6574 ;;                  1    wreg      void 
  6575 ;; Registers used:
  6576 ;;		wreg, status,2
  6577 ;; Tracked objects:
  6578 ;;		On entry : 0/0
  6579 ;;		On exit  : 0/0
  6580 ;;		Unchanged: 0/0
  6581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6586 ;;Total ram usage:        0 bytes
  6587 ;; Hardware stack levels used:    1
  6588 ;; Hardware stack levels required when called:    3
  6589 ;; This function calls:
  6590 ;;		Nothing
  6591 ;; This function is called by:
  6592 ;;		_INI_All
  6593 ;; This function uses a non-reentrant model
  6594 ;;
  6595                           
  6596                           	psect	text52
  6597  002680                     __ptext52:
  6598                           	opt callstack 0
  6599  002680                     _INI_OUTPUT:
  6600                           	opt callstack 26
  6601                           
  6602                           ;INI.c: 33: LATA = 0;
  6603                           
  6604                           ;incstack = 0
  6605  002680  0E00               	movlw	0
  6606  002682  6E89               	movwf	3977,c	;volatile
  6607                           
  6608                           ;INI.c: 34: LATB = 0;
  6609  002684  0E00               	movlw	0
  6610  002686  6E8A               	movwf	3978,c	;volatile
  6611                           
  6612                           ;INI.c: 35: LATC = 0;
  6613  002688  0E00               	movlw	0
  6614  00268A  6E8B               	movwf	3979,c	;volatile
  6615                           
  6616                           ;INI.c: 36: TRISA = 0x0C;
  6617  00268C  0E0C               	movlw	12
  6618  00268E  6E92               	movwf	3986,c	;volatile
  6619                           
  6620                           ;INI.c: 37: TRISB = 0b10001000;
  6621  002690  0E88               	movlw	136
  6622  002692  6E93               	movwf	3987,c	;volatile
  6623                           
  6624                           ;INI.c: 38: TRISC = 0xBF;
  6625  002694  0EBF               	movlw	191
  6626  002696  6E94               	movwf	3988,c	;volatile
  6627                           
  6628                           ;INI.c: 39: RCONbits.IPEN = 1;
  6629  002698  8ED0               	bsf	4048,7,c	;volatile
  6630                           
  6631                           ;INI.c: 42: DetectorLedRadar.Flags.inicjalizacja = 1;
  6632  00269A  0100               	movlb	0	; () banked
  6633  00269C  87CB               	bsf	_DetectorLedRadar& (0+255),3,b
  6634                           
  6635                           ; BSR set to: 0
  6636  00269E  0012               	return		;funcret
  6637  0026A0                     __end_of_INI_OUTPUT:
  6638                           	opt callstack 0
  6639                           
  6640 ;; *************** function _INI_LED_Start *****************
  6641 ;; Defined at:
  6642 ;;		line 274 in file "LED.c"
  6643 ;; Parameters:    Size  Location     Type
  6644 ;;		None
  6645 ;; Auto vars:     Size  Location     Type
  6646 ;;		None
  6647 ;; Return value:  Size  Location     Type
  6648 ;;                  1    wreg      void 
  6649 ;; Registers used:
  6650 ;;		wreg, status,2, status,0, cstack
  6651 ;; Tracked objects:
  6652 ;;		On entry : 0/0
  6653 ;;		On exit  : 0/0
  6654 ;;		Unchanged: 0/0
  6655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6660 ;;Total ram usage:        0 bytes
  6661 ;; Hardware stack levels used:    1
  6662 ;; Hardware stack levels required when called:    4
  6663 ;; This function calls:
  6664 ;;		_LED_Control
  6665 ;; This function is called by:
  6666 ;;		_INI_All
  6667 ;; This function uses a non-reentrant model
  6668 ;;
  6669                           
  6670                           	psect	text53
  6671  0025B4                     __ptext53:
  6672                           	opt callstack 0
  6673  0025B4                     _INI_LED_Start:
  6674                           	opt callstack 25
  6675                           
  6676                           ;LED.c: 276: TRISA = TRISA & 0b00000001;
  6677                           
  6678                           ; BSR set to: 0
  6679                           ;incstack = 0
  6680  0025B4  5092               	movf	3986,w,c	;volatile
  6681  0025B6  0B01               	andlw	1
  6682  0025B8  6E92               	movwf	3986,c	;volatile
  6683                           
  6684                           ;LED.c: 277: TRISB = TRISB & 0b11111100;
  6685  0025BA  5093               	movf	3987,w,c	;volatile
  6686  0025BC  0BFC               	andlw	252
  6687  0025BE  6E93               	movwf	3987,c	;volatile
  6688                           
  6689                           ;LED.c: 278: TRISE = TRISE & 0b11111000;
  6690  0025C0  5096               	movf	3990,w,c	;volatile
  6691  0025C2  0BF8               	andlw	248
  6692  0025C4  6E96               	movwf	3990,c	;volatile
  6693                           
  6694                           ;LED.c: 279: TRISD = TRISD & 0b00000000;
  6695  0025C6  0E00               	movlw	0
  6696  0025C8  6E95               	movwf	3989,c	;volatile
  6697                           
  6698                           ;LED.c: 280: LED_Control(RED,0b0000000000);
  6699  0025CA  0E00               	movlw	0
  6700  0025CC  6E07               	movwf	LED_Control@diode+1,c
  6701  0025CE  0E00               	movlw	0
  6702  0025D0  6E06               	movwf	LED_Control@diode,c
  6703  0025D2  0E00               	movlw	0
  6704  0025D4  EC3C  F00B         	call	_LED_Control
  6705                           
  6706                           ;LED.c: 281: LED_Control(GREEN,0b0000000000);
  6707  0025D8  0E00               	movlw	0
  6708  0025DA  6E07               	movwf	LED_Control@diode+1,c
  6709  0025DC  0E00               	movlw	0
  6710  0025DE  6E06               	movwf	LED_Control@diode,c
  6711  0025E0  0E01               	movlw	1
  6712  0025E2  EC3C  F00B         	call	_LED_Control
  6713  0025E6  0012               	return		;funcret
  6714  0025E8                     __end_of_INI_LED_Start:
  6715                           	opt callstack 0
  6716                           
  6717 ;; *************** function _LED_Control *****************
  6718 ;; Defined at:
  6719 ;;		line 299 in file "LED.c"
  6720 ;; Parameters:    Size  Location     Type
  6721 ;;  color           1    wreg     enum E10511
  6722 ;;  diode           2    5[COMRAM] unsigned int 
  6723 ;; Auto vars:     Size  Location     Type
  6724 ;;  color           1    9[COMRAM] enum E10511
  6725 ;;  cos             2    0        unsigned int 
  6726 ;; Return value:  Size  Location     Type
  6727 ;;                  1    wreg      unsigned char 
  6728 ;; Registers used:
  6729 ;;		wreg, status,2, status,0
  6730 ;; Tracked objects:
  6731 ;;		On entry : 0/0
  6732 ;;		On exit  : 0/0
  6733 ;;		Unchanged: 0/0
  6734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6735 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6736 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6738 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6739 ;;Total ram usage:        5 bytes
  6740 ;; Hardware stack levels used:    1
  6741 ;; Hardware stack levels required when called:    3
  6742 ;; This function calls:
  6743 ;;		Nothing
  6744 ;; This function is called by:
  6745 ;;		_LED_Error
  6746 ;;		_LED_Update
  6747 ;;		_LED_Light_Pos
  6748 ;;		_INI_LED_Start
  6749 ;;		_LED_Clear
  6750 ;; This function uses a non-reentrant model
  6751 ;;
  6752                           
  6753                           	psect	text54
  6754  001678                     __ptext54:
  6755                           	opt callstack 0
  6756  001678                     _LED_Control:
  6757                           	opt callstack 24
  6758                           
  6759                           ;incstack = 0
  6760                           ;LED_Control@color stored from wreg
  6761  001678  6E0A               	movwf	LED_Control@color,c
  6762                           
  6763                           ;LED.c: 302: if(color == RED)
  6764  00167A  500A               	movf	LED_Control@color,w,c
  6765  00167C  A4D8               	btfss	status,2,c
  6766  00167E  D050               	goto	l422
  6767                           
  6768                           ;LED.c: 303: {;LED.c: 305: if((diode & 0b0000000001)== 0b0000000001)
  6769  001680  A006               	btfss	LED_Control@diode,0,c
  6770  001682  D003               	goto	l3963
  6771                           
  6772                           ;LED.c: 306: {;LED.c: 307: LATD = LATD | ~0b11101111;
  6773  001684  508C               	movf	3980,w,c	;volatile
  6774  001686  0910               	iorlw	16
  6775  001688  D002               	goto	L4
  6776  00168A                     l3963:
  6777                           
  6778                           ;LED.c: 309: else;LED.c: 310: {;LED.c: 311: LATD = LATD &0b11101111;
  6779  00168A  508C               	movf	3980,w,c	;volatile
  6780  00168C  0BEF               	andlw	239
  6781  00168E                     L4:
  6782  00168E  6E8C               	movwf	3980,c	;volatile
  6783                           
  6784                           ;LED.c: 312: };LED.c: 314: if((diode & 0b0000000010) == 0b0000000010)
  6785  001690  A206               	btfss	LED_Control@diode,1,c
  6786  001692  D003               	goto	l3969
  6787                           
  6788                           ;LED.c: 315: {;LED.c: 316: LATD = LATD | ~0b10111111;
  6789  001694  508C               	movf	3980,w,c	;volatile
  6790  001696  0940               	iorlw	64
  6791  001698  D002               	goto	L5
  6792  00169A                     l3969:
  6793                           
  6794                           ;LED.c: 318: else;LED.c: 319: {;LED.c: 320: LATD = LATD & 0b10111111;
  6795  00169A  508C               	movf	3980,w,c	;volatile
  6796  00169C  0BBF               	andlw	191
  6797  00169E                     L5:
  6798  00169E  6E8C               	movwf	3980,c	;volatile
  6799                           
  6800                           ;LED.c: 321: };LED.c: 323: if((diode & 0b0000000100) == 0b0000000100)
  6801  0016A0  A406               	btfss	LED_Control@diode,2,c
  6802  0016A2  D003               	goto	l3975
  6803                           
  6804                           ;LED.c: 324: {;LED.c: 325: LATB = LATB | ~0b11111110;
  6805  0016A4  508A               	movf	3978,w,c	;volatile
  6806  0016A6  0901               	iorlw	1
  6807  0016A8  D002               	goto	L6
  6808  0016AA                     l3975:
  6809                           
  6810                           ;LED.c: 327: else;LED.c: 328: {;LED.c: 329: LATB = LATB & 0b11111110;
  6811  0016AA  508A               	movf	3978,w,c	;volatile
  6812  0016AC  0BFE               	andlw	254
  6813  0016AE                     L6:
  6814  0016AE  6E8A               	movwf	3978,c	;volatile
  6815                           
  6816                           ;LED.c: 330: };LED.c: 333: if((diode & 0b0000001000) == 0b0000001000)
  6817  0016B0  A606               	btfss	LED_Control@diode,3,c
  6818  0016B2  D003               	goto	l3981
  6819                           
  6820                           ;LED.c: 334: {;LED.c: 335: LATA = LATA | ~0b11111101;
  6821  0016B4  5089               	movf	3977,w,c	;volatile
  6822  0016B6  0902               	iorlw	2
  6823  0016B8  D002               	goto	L7
  6824  0016BA                     l3981:
  6825                           
  6826                           ;LED.c: 337: else;LED.c: 338: {;LED.c: 339: LATA = LATA & 0b11111101;
  6827  0016BA  5089               	movf	3977,w,c	;volatile
  6828  0016BC  0BFD               	andlw	253
  6829  0016BE                     L7:
  6830  0016BE  6E89               	movwf	3977,c	;volatile
  6831                           
  6832                           ;LED.c: 340: };LED.c: 343: if((diode & 0b0000010000) == 0b0000010000)
  6833  0016C0  A806               	btfss	LED_Control@diode,4,c
  6834  0016C2  D003               	goto	l3987
  6835                           
  6836                           ;LED.c: 344: {;LED.c: 345: LATA = LATA | ~0b11110111;
  6837  0016C4  5089               	movf	3977,w,c	;volatile
  6838  0016C6  0908               	iorlw	8
  6839  0016C8  D002               	goto	L8
  6840  0016CA                     l3987:
  6841                           
  6842                           ;LED.c: 347: else;LED.c: 348: {;LED.c: 349: LATA = LATA & 0b11110111;
  6843  0016CA  5089               	movf	3977,w,c	;volatile
  6844  0016CC  0BF7               	andlw	247
  6845  0016CE                     L8:
  6846  0016CE  6E89               	movwf	3977,c	;volatile
  6847                           
  6848                           ;LED.c: 350: };LED.c: 353: if((diode & 0b0000100000) == 0b0000100000)
  6849  0016D0  AA06               	btfss	LED_Control@diode,5,c
  6850  0016D2  D003               	goto	l3993
  6851                           
  6852                           ;LED.c: 354: {;LED.c: 355: LATA = LATA | ~0b11011111;
  6853  0016D4  5089               	movf	3977,w,c	;volatile
  6854  0016D6  0920               	iorlw	32
  6855  0016D8  D002               	goto	L9
  6856  0016DA                     l3993:
  6857                           
  6858                           ;LED.c: 357: else;LED.c: 358: {;LED.c: 359: LATA = LATA & 0b11011111;
  6859  0016DA  5089               	movf	3977,w,c	;volatile
  6860  0016DC  0BDF               	andlw	223
  6861  0016DE                     L9:
  6862  0016DE  6E89               	movwf	3977,c	;volatile
  6863                           
  6864                           ;LED.c: 360: };LED.c: 362: if((diode & 0b0001000000) == 0b0001000000)
  6865  0016E0  AC06               	btfss	LED_Control@diode,6,c
  6866  0016E2  D003               	goto	l3999
  6867                           
  6868                           ;LED.c: 363: {;LED.c: 364: LATE = LATE | ~0b11111101;
  6869  0016E4  508D               	movf	3981,w,c	;volatile
  6870  0016E6  0902               	iorlw	2
  6871  0016E8  D002               	goto	L10
  6872  0016EA                     l3999:
  6873                           
  6874                           ;LED.c: 366: else;LED.c: 367: {;LED.c: 368: LATE = LATE & 0b11111101;
  6875  0016EA  508D               	movf	3981,w,c	;volatile
  6876  0016EC  0BFD               	andlw	253
  6877  0016EE                     L10:
  6878  0016EE  6E8D               	movwf	3981,c	;volatile
  6879                           
  6880                           ;LED.c: 369: };LED.c: 371: if((diode & 0b0010000000) == 0b0010000000)
  6881  0016F0  AE06               	btfss	LED_Control@diode,7,c
  6882  0016F2  D003               	goto	l4005
  6883                           
  6884                           ;LED.c: 372: {;LED.c: 373: LATA = LATA | ~0b01111111;
  6885  0016F4  5089               	movf	3977,w,c	;volatile
  6886  0016F6  0980               	iorlw	128
  6887  0016F8  D002               	goto	L11
  6888  0016FA                     l4005:
  6889                           
  6890                           ;LED.c: 375: else;LED.c: 376: {;LED.c: 377: LATA = LATA & 0b01111111;
  6891  0016FA  5089               	movf	3977,w,c	;volatile
  6892  0016FC  0B7F               	andlw	127
  6893  0016FE                     L11:
  6894  0016FE  6E89               	movwf	3977,c	;volatile
  6895                           
  6896                           ;LED.c: 378: };LED.c: 381: if((diode & 0b0100000000) == 0b0100000000)
  6897  001700  A007               	btfss	LED_Control@diode+1,0,c
  6898  001702  D003               	goto	l4011
  6899                           
  6900                           ;LED.c: 382: {;LED.c: 383: LATD = LATD | ~0b11111110;
  6901  001704  508C               	movf	3980,w,c	;volatile
  6902  001706  0901               	iorlw	1
  6903  001708  D002               	goto	L12
  6904  00170A                     l4011:
  6905                           
  6906                           ;LED.c: 385: else;LED.c: 386: {;LED.c: 387: LATD = LATD & 0b11111110;
  6907  00170A  508C               	movf	3980,w,c	;volatile
  6908  00170C  0BFE               	andlw	254
  6909  00170E                     L12:
  6910  00170E  6E8C               	movwf	3980,c	;volatile
  6911                           
  6912                           ;LED.c: 388: };LED.c: 390: if((diode & 0b1000000000) == 0b1000000000)
  6913  001710  A207               	btfss	LED_Control@diode+1,1,c
  6914  001712  D003               	goto	l4017
  6915                           
  6916                           ;LED.c: 391: {;LED.c: 392: LATD = LATD | ~0b11111011;
  6917  001714  508C               	movf	3980,w,c	;volatile
  6918  001716  0904               	iorlw	4
  6919  001718  D002               	goto	L13
  6920  00171A                     l4017:
  6921                           
  6922                           ;LED.c: 394: else;LED.c: 395: {;LED.c: 396: LATD = LATD & 0b11111011;
  6923  00171A  508C               	movf	3980,w,c	;volatile
  6924  00171C  0BFB               	andlw	251
  6925  00171E                     L13:
  6926  00171E  6E8C               	movwf	3980,c	;volatile
  6927  001720                     l422:
  6928                           
  6929                           ;LED.c: 397: };LED.c: 399: };LED.c: 401: if(color == GREEN)
  6930  001720  040A               	decf	LED_Control@color,w,c
  6931  001722  A4D8               	btfss	status,2,c
  6932  001724  0012               	return	
  6933                           
  6934                           ;LED.c: 402: {;LED.c: 404: if((diode & 0b0000000001) == 0b0000000001)
  6935  001726  A006               	btfss	LED_Control@diode,0,c
  6936  001728  D003               	goto	l4023
  6937                           
  6938                           ;LED.c: 405: {;LED.c: 406: LATD = LATD | ~0b11011111;
  6939  00172A  508C               	movf	3980,w,c	;volatile
  6940  00172C  0920               	iorlw	32
  6941  00172E  D002               	goto	L14
  6942  001730                     l4023:
  6943                           
  6944                           ;LED.c: 408: else;LED.c: 409: {;LED.c: 410: LATD = LATD & 0b11011111;
  6945  001730  508C               	movf	3980,w,c	;volatile
  6946  001732  0BDF               	andlw	223
  6947  001734                     L14:
  6948  001734  6E8C               	movwf	3980,c	;volatile
  6949                           
  6950                           ;LED.c: 411: };LED.c: 414: if((diode & 0b0000000010) == 0b0000000010)
  6951  001736  A206               	btfss	LED_Control@diode,1,c
  6952  001738  D003               	goto	l4029
  6953                           
  6954                           ;LED.c: 415: {;LED.c: 416: LATD = LATD | ~0b01111111;
  6955  00173A  508C               	movf	3980,w,c	;volatile
  6956  00173C  0980               	iorlw	128
  6957  00173E  D002               	goto	L15
  6958  001740                     l4029:
  6959                           
  6960                           ;LED.c: 418: else;LED.c: 419: {;LED.c: 420: LATD = LATD & 0b01111111;
  6961  001740  508C               	movf	3980,w,c	;volatile
  6962  001742  0B7F               	andlw	127
  6963  001744                     L15:
  6964  001744  6E8C               	movwf	3980,c	;volatile
  6965                           
  6966                           ;LED.c: 421: };LED.c: 424: if((diode & 0b0000000100) == 0b0000000100)
  6967  001746  A406               	btfss	LED_Control@diode,2,c
  6968  001748  D003               	goto	l4035
  6969                           
  6970                           ;LED.c: 425: {;LED.c: 426: LATB = LATB | ~0b11111101;
  6971  00174A  508A               	movf	3978,w,c	;volatile
  6972  00174C  0902               	iorlw	2
  6973  00174E  D002               	goto	L16
  6974  001750                     l4035:
  6975                           
  6976                           ;LED.c: 428: else;LED.c: 429: {;LED.c: 430: LATB = LATB & 0b11111101;
  6977  001750  508A               	movf	3978,w,c	;volatile
  6978  001752  0BFD               	andlw	253
  6979  001754                     L16:
  6980  001754  6E8A               	movwf	3978,c	;volatile
  6981                           
  6982                           ;LED.c: 431: };LED.c: 433: if((diode & 0b0000001000) == 0b0000001000)
  6983  001756  A606               	btfss	LED_Control@diode,3,c
  6984  001758  D003               	goto	l4041
  6985                           
  6986                           ;LED.c: 434: {;LED.c: 435: LATA = LATA | ~0b11111011;
  6987  00175A  5089               	movf	3977,w,c	;volatile
  6988  00175C  0904               	iorlw	4
  6989  00175E  D002               	goto	L17
  6990  001760                     l4041:
  6991                           
  6992                           ;LED.c: 437: else;LED.c: 438: {;LED.c: 439: LATA = LATA & 0b11111011;
  6993  001760  5089               	movf	3977,w,c	;volatile
  6994  001762  0BFB               	andlw	251
  6995  001764                     L17:
  6996  001764  6E89               	movwf	3977,c	;volatile
  6997                           
  6998                           ;LED.c: 440: };LED.c: 443: if((diode & 0b0000010000) == 0b0000010000)
  6999  001766  A806               	btfss	LED_Control@diode,4,c
  7000  001768  D003               	goto	l4047
  7001                           
  7002                           ;LED.c: 444: {;LED.c: 445: LATA = LATA | ~0b11101111;
  7003  00176A  5089               	movf	3977,w,c	;volatile
  7004  00176C  0910               	iorlw	16
  7005  00176E  D002               	goto	L18
  7006  001770                     l4047:
  7007                           
  7008                           ;LED.c: 447: else;LED.c: 448: {;LED.c: 449: LATA = LATA & 0b11101111;
  7009  001770  5089               	movf	3977,w,c	;volatile
  7010  001772  0BEF               	andlw	239
  7011  001774                     L18:
  7012  001774  6E89               	movwf	3977,c	;volatile
  7013                           
  7014                           ;LED.c: 450: };LED.c: 453: if((diode & 0b0000100000) == 0b0000100000)
  7015  001776  AA06               	btfss	LED_Control@diode,5,c
  7016  001778  D003               	goto	l4053
  7017                           
  7018                           ;LED.c: 454: {;LED.c: 455: LATE = LATE | ~0b11111110;
  7019  00177A  508D               	movf	3981,w,c	;volatile
  7020  00177C  0901               	iorlw	1
  7021  00177E  D002               	goto	L19
  7022  001780                     l4053:
  7023                           
  7024                           ;LED.c: 457: else;LED.c: 458: {;LED.c: 459: LATE = LATE & 0b11111110;
  7025  001780  508D               	movf	3981,w,c	;volatile
  7026  001782  0BFE               	andlw	254
  7027  001784                     L19:
  7028  001784  6E8D               	movwf	3981,c	;volatile
  7029                           
  7030                           ;LED.c: 460: };LED.c: 463: if((diode & 0b0001000000) == 0b0001000000)
  7031  001786  AC06               	btfss	LED_Control@diode,6,c
  7032  001788  D003               	goto	l4059
  7033                           
  7034                           ;LED.c: 464: {;LED.c: 465: LATE = LATE | ~0b11111011;
  7035  00178A  508D               	movf	3981,w,c	;volatile
  7036  00178C  0904               	iorlw	4
  7037  00178E  D002               	goto	L20
  7038  001790                     l4059:
  7039                           
  7040                           ;LED.c: 467: else;LED.c: 468: {;LED.c: 469: LATE = LATE & 0b11111011;
  7041  001790  508D               	movf	3981,w,c	;volatile
  7042  001792  0BFB               	andlw	251
  7043  001794                     L20:
  7044  001794  6E8D               	movwf	3981,c	;volatile
  7045                           
  7046                           ;LED.c: 470: };LED.c: 472: if((diode & 0b0010000000) == 0b0010000000)
  7047  001796  AE06               	btfss	LED_Control@diode,7,c
  7048  001798  D003               	goto	l4065
  7049                           
  7050                           ;LED.c: 473: {;LED.c: 474: LATA = LATA | ~0b10111111;
  7051  00179A  5089               	movf	3977,w,c	;volatile
  7052  00179C  0940               	iorlw	64
  7053  00179E  D002               	goto	L21
  7054  0017A0                     l4065:
  7055                           
  7056                           ;LED.c: 476: else;LED.c: 477: {;LED.c: 478: LATA = LATA & 0b10111111;
  7057  0017A0  5089               	movf	3977,w,c	;volatile
  7058  0017A2  0BBF               	andlw	191
  7059  0017A4                     L21:
  7060  0017A4  6E89               	movwf	3977,c	;volatile
  7061                           
  7062                           ;LED.c: 479: };LED.c: 481: if((diode & 0b0100000000) == 0b0100000000)
  7063  0017A6  A007               	btfss	LED_Control@diode+1,0,c
  7064  0017A8  D003               	goto	l4071
  7065                           
  7066                           ;LED.c: 482: {;LED.c: 483: LATD = LATD | ~0b11111101;
  7067  0017AA  508C               	movf	3980,w,c	;volatile
  7068  0017AC  0902               	iorlw	2
  7069  0017AE  D002               	goto	L22
  7070  0017B0                     l4071:
  7071                           
  7072                           ;LED.c: 485: else;LED.c: 486: {;LED.c: 487: LATD = LATD & 0b11111101;
  7073  0017B0  508C               	movf	3980,w,c	;volatile
  7074  0017B2  0BFD               	andlw	253
  7075  0017B4                     L22:
  7076  0017B4  6E8C               	movwf	3980,c	;volatile
  7077                           
  7078                           ;LED.c: 488: };LED.c: 490: if((diode & 0b1000000000) == 0b1000000000)
  7079  0017B6  A207               	btfss	LED_Control@diode+1,1,c
  7080  0017B8  D004               	goto	l4077
  7081                           
  7082                           ;LED.c: 491: {;LED.c: 492: LATD = LATD | ~0b11110111;
  7083  0017BA  508C               	movf	3980,w,c	;volatile
  7084  0017BC  0908               	iorlw	8
  7085  0017BE  6E8C               	movwf	3980,c	;volatile
  7086                           
  7087                           ;LED.c: 493: }
  7088  0017C0  0012               	return	
  7089  0017C2                     l4077:
  7090                           
  7091                           ;LED.c: 494: else;LED.c: 495: {;LED.c: 496: LATD = LATD &0b11110111;
  7092  0017C2  508C               	movf	3980,w,c	;volatile
  7093  0017C4  0BF7               	andlw	247
  7094  0017C6  6E8C               	movwf	3980,c	;volatile
  7095  0017C8  0012               	return		;funcret
  7096  0017CA                     __end_of_LED_Control:
  7097                           	opt callstack 0
  7098                           
  7099 ;; *************** function _INI_GlobalInterrupt *****************
  7100 ;; Defined at:
  7101 ;;		line 78 in file "INI.c"
  7102 ;; Parameters:    Size  Location     Type
  7103 ;;		None
  7104 ;; Auto vars:     Size  Location     Type
  7105 ;;		None
  7106 ;; Return value:  Size  Location     Type
  7107 ;;                  1    wreg      void 
  7108 ;; Registers used:
  7109 ;;		None
  7110 ;; Tracked objects:
  7111 ;;		On entry : 0/0
  7112 ;;		On exit  : 0/0
  7113 ;;		Unchanged: 0/0
  7114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7118 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7119 ;;Total ram usage:        0 bytes
  7120 ;; Hardware stack levels used:    1
  7121 ;; Hardware stack levels required when called:    3
  7122 ;; This function calls:
  7123 ;;		Nothing
  7124 ;; This function is called by:
  7125 ;;		_INI_All
  7126 ;; This function uses a non-reentrant model
  7127 ;;
  7128                           
  7129                           	psect	text55
  7130  00270C                     __ptext55:
  7131                           	opt callstack 0
  7132  00270C                     _INI_GlobalInterrupt:
  7133                           	opt callstack 26
  7134                           
  7135                           ;INI.c: 80: INTCONbits.GIEH=1;
  7136                           
  7137                           ;incstack = 0
  7138  00270C  8EF2               	bsf	4082,7,c	;volatile
  7139                           
  7140                           ;INI.c: 81: INTCONbits.GIEL=1;
  7141  00270E  8CF2               	bsf	4082,6,c	;volatile
  7142                           
  7143                           ;INI.c: 82: RCONbits.IPEN=1;
  7144  002710  8ED0               	bsf	4048,7,c	;volatile
  7145                           
  7146                           ;INI.c: 83: IPEN =1;
  7147  002712  8ED0               	bsf	4048,7,c	;volatile
  7148                           
  7149                           ;INI.c: 85: PEIE=1;
  7150  002714  8CF2               	bsf	4082,6,c	;volatile
  7151                           
  7152                           ;INI.c: 86: TMR1IP = 0;
  7153  002716  909F               	bcf	3999,0,c	;volatile
  7154  002718  0012               	return		;funcret
  7155  00271A                     __end_of_INI_GlobalInterrupt:
  7156                           	opt callstack 0
  7157                           
  7158 ;; *************** function _CAN_Setup *****************
  7159 ;; Defined at:
  7160 ;;		line 24 in file "CAN.c"
  7161 ;; Parameters:    Size  Location     Type
  7162 ;;		None
  7163 ;; Auto vars:     Size  Location     Type
  7164 ;;		None
  7165 ;; Return value:  Size  Location     Type
  7166 ;;                  1    wreg      void 
  7167 ;; Registers used:
  7168 ;;		wreg, status,2, status,0, cstack
  7169 ;; Tracked objects:
  7170 ;;		On entry : 0/0
  7171 ;;		On exit  : 0/0
  7172 ;;		Unchanged: 0/0
  7173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7176 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7177 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7178 ;;Total ram usage:        1 bytes
  7179 ;; Hardware stack levels used:    1
  7180 ;; Hardware stack levels required when called:    5
  7181 ;; This function calls:
  7182 ;;		_CAN_SetupClock
  7183 ;;		_CAN_SetupMask
  7184 ;; This function is called by:
  7185 ;;		_INI_All
  7186 ;; This function uses a non-reentrant model
  7187 ;;
  7188                           
  7189                           	psect	text56
  7190  002124                     __ptext56:
  7191                           	opt callstack 0
  7192  002124                     _CAN_Setup:
  7193                           	opt callstack 24
  7194                           
  7195                           ;CAN.c: 29: CANCON = 0x80;
  7196                           
  7197                           ;incstack = 0
  7198  002124  0E80               	movlw	128
  7199  002126  6E6F               	movwf	3951,c	;volatile
  7200  002128                     l4545:
  7201  002128  506E               	movf	3950,w,c	;volatile
  7202  00212A  0BE0               	andlw	224
  7203  00212C  0A80               	xorlw	128
  7204  00212E  A4D8               	btfss	status,2,c
  7205  002130  D7FB               	goto	l4545
  7206                           
  7207                           ;CAN.c: 33: };CAN.c: 35: BSEL0 = 0;
  7208  002132  0E00               	movlw	0
  7209  002134  010D               	movlb	13	; () banked
  7210  002136  6FF8               	movwf	248,b	;volatile
  7211                           
  7212                           ;CAN.c: 36: TXB0CON = 0;
  7213  002138  0E00               	movlw	0
  7214  00213A  010F               	movlb	15	; () banked
  7215  00213C  6F40               	movwf	64,b	;volatile
  7216                           
  7217                           ;CAN.c: 37: RXB0CON = 0;
  7218  00213E  0E00               	movlw	0
  7219  002140  6E60               	movwf	3936,c	;volatile
  7220                           
  7221                           ;CAN.c: 38: RXB1CON = 0;
  7222  002142  0E00               	movlw	0
  7223  002144  6F50               	movwf	80,b	;volatile
  7224                           
  7225                           ;CAN.c: 39: B0CON = 0;
  7226  002146  0E00               	movlw	0
  7227  002148  010E               	movlb	14	; () banked
  7228  00214A  6F20               	movwf	32,b	;volatile
  7229                           
  7230                           ;CAN.c: 40: B1CON = 0;
  7231  00214C  0E00               	movlw	0
  7232  00214E  6F30               	movwf	48,b	;volatile
  7233                           
  7234                           ;CAN.c: 41: PIE3 = 0;
  7235  002150  0E00               	movlw	0
  7236  002152  6EA3               	movwf	4003,c	;volatile
  7237                           
  7238                           ; BSR set to: 14
  7239                           ;CAN.c: 42: IPR3 = 0xFF;
  7240  002154  68A5               	setf	4005,c	;volatile
  7241                           
  7242                           ;CAN.c: 43: PIR3 = 0x00;
  7243  002156  0E00               	movlw	0
  7244  002158  6EA4               	movwf	4004,c	;volatile
  7245                           
  7246                           ;CAN.c: 44: BIE0 = 0;
  7247  00215A  0E00               	movlw	0
  7248  00215C  010D               	movlb	13	; () banked
  7249  00215E  6FFA               	movwf	250,b	;volatile
  7250                           
  7251                           ;CAN.c: 48: ECANCON = 0x90;
  7252  002160  0E90               	movlw	144
  7253  002162  6E77               	movwf	3959,c	;volatile
  7254                           
  7255                           ; BSR set to: 13
  7256                           ;CAN.c: 51: CAN_SetupClock();
  7257  002164  EC09  F013         	call	_CAN_SetupClock	;wreg free
  7258                           
  7259                           ;CAN.c: 54: CAN_SetupMask();
  7260  002168  EC25  F010         	call	_CAN_SetupMask	;wreg free
  7261                           
  7262                           ;CAN.c: 56: CIOCON = 0xff;
  7263  00216C  6873               	setf	3955,c	;volatile
  7264                           
  7265                           ;CAN.c: 62: CANCON = 0x00;
  7266  00216E  0E00               	movlw	0
  7267  002170  6E6F               	movwf	3951,c	;volatile
  7268  002172                     l4557:
  7269  002172  CF6E F006          	movff	3950,??_CAN_Setup	;volatile
  7270  002176  0EE0               	movlw	224
  7271  002178  1606               	andwf	??_CAN_Setup,f,c
  7272  00217A  B4D8               	btfsc	status,2,c
  7273  00217C  0012               	return	
  7274  00217E  D7F9               	goto	l4557
  7275  002180                     __end_of_CAN_Setup:
  7276                           	opt callstack 0
  7277                           
  7278 ;; *************** function _CAN_SetupMask *****************
  7279 ;; Defined at:
  7280 ;;		line 84 in file "CAN.c"
  7281 ;; Parameters:    Size  Location     Type
  7282 ;;		None
  7283 ;; Auto vars:     Size  Location     Type
  7284 ;;		None
  7285 ;; Return value:  Size  Location     Type
  7286 ;;                  1    wreg      void 
  7287 ;; Registers used:
  7288 ;;		wreg, status,2, cstack
  7289 ;; Tracked objects:
  7290 ;;		On entry : 0/0
  7291 ;;		On exit  : 0/0
  7292 ;;		Unchanged: 0/0
  7293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7298 ;;Total ram usage:        0 bytes
  7299 ;; Hardware stack levels used:    1
  7300 ;; Hardware stack levels required when called:    4
  7301 ;; This function calls:
  7302 ;;		_CAN_SetupFilter_Ne
  7303 ;; This function is called by:
  7304 ;;		_CAN_Setup
  7305 ;; This function uses a non-reentrant model
  7306 ;;
  7307                           
  7308                           	psect	text57
  7309  00204A                     __ptext57:
  7310                           	opt callstack 0
  7311  00204A                     _CAN_SetupMask:
  7312                           	opt callstack 24
  7313                           
  7314                           ;CAN.c: 86: MSEL0 = 0x50;
  7315                           
  7316                           ;incstack = 0
  7317  00204A  0E50               	movlw	80
  7318  00204C  010D               	movlb	13	; () banked
  7319  00204E  6FF0               	movwf	240,b	;volatile
  7320                           
  7321                           ;CAN.c: 87: MSEL1 = 0x55;
  7322  002050  0E55               	movlw	85
  7323  002052  6FF1               	movwf	241,b	;volatile
  7324                           
  7325                           ;CAN.c: 88: MSEL2 = 0x55;
  7326  002054  0E55               	movlw	85
  7327  002056  6FF2               	movwf	242,b	;volatile
  7328                           
  7329                           ;CAN.c: 89: MSEL3 = 0x55;
  7330  002058  0E55               	movlw	85
  7331  00205A  6FF3               	movwf	243,b	;volatile
  7332                           
  7333                           ;CAN.c: 92: RXM0SIDH = 0b00000000;
  7334  00205C  0E00               	movlw	0
  7335  00205E  010F               	movlb	15	; () banked
  7336  002060  6F18               	movwf	24,b	;volatile
  7337                           
  7338                           ;CAN.c: 93: RXM0SIDL = 0b00001011;
  7339  002062  0E0B               	movlw	11
  7340  002064  6F19               	movwf	25,b	;volatile
  7341                           
  7342                           ; BSR set to: 15
  7343                           ;CAN.c: 94: RXM0EIDH = 0xFF;
  7344  002066  691A               	setf	26,b	;volatile
  7345                           
  7346                           ; BSR set to: 15
  7347                           ;CAN.c: 95: RXM0EIDL = 0xFF;
  7348  002068  691B               	setf	27,b	;volatile
  7349                           
  7350                           ; BSR set to: 15
  7351                           ;CAN.c: 98: RXM1SIDH = 0xFF;
  7352  00206A  691C               	setf	28,b	;volatile
  7353                           
  7354                           ; BSR set to: 15
  7355                           ;CAN.c: 99: RXM1SIDL = 0xFF;
  7356  00206C  691D               	setf	29,b	;volatile
  7357                           
  7358                           ; BSR set to: 15
  7359                           ;CAN.c: 100: RXM1EIDH = 0xFF;
  7360  00206E  691E               	setf	30,b	;volatile
  7361                           
  7362                           ; BSR set to: 15
  7363                           ;CAN.c: 101: RXM1EIDL = 0xFF;
  7364  002070  691F               	setf	31,b	;volatile
  7365                           
  7366                           ;CAN.c: 104: RXM0SIDH = 0x00;
  7367  002072  0E00               	movlw	0
  7368  002074  6F18               	movwf	24,b	;volatile
  7369                           
  7370                           ;CAN.c: 105: RXM0SIDL = 0x00;
  7371  002076  0E00               	movlw	0
  7372  002078  6F19               	movwf	25,b	;volatile
  7373                           
  7374                           ;CAN.c: 110: RXF0SIDH = 0x00;
  7375  00207A  0E00               	movlw	0
  7376  00207C  6F00               	movwf	0,b	;volatile
  7377                           
  7378                           ;CAN.c: 111: RXF0SIDL = 0x01;
  7379  00207E  0E01               	movlw	1
  7380  002080  6F01               	movwf	1,b	;volatile
  7381                           
  7382                           ; BSR set to: 15
  7383                           ;CAN.c: 112: RXF0SIDLbits.EXIDEN = 1;
  7384  002082  8701               	bsf	1,3,b	;volatile
  7385                           
  7386                           ;CAN.c: 113: RXF0EIDH = (BYTE)(DaneCan.adresCAN>>8);
  7387  002084  502E               	movf	_DaneCan+3,w,c
  7388  002086  6F02               	movwf	2,b	;volatile
  7389                           
  7390                           ; BSR set to: 15
  7391                           ;CAN.c: 115: RXF0EIDL = (BYTE)DaneCan.adresCAN;
  7392  002088  C02D  FF03         	movff	_DaneCan+2,3843	;volatile
  7393                           
  7394                           ;CAN.c: 117: RXF1SIDH = 0x00;
  7395  00208C  0E00               	movlw	0
  7396  00208E  6F04               	movwf	4,b	;volatile
  7397                           
  7398                           ;CAN.c: 118: RXF1SIDL = 0x01;
  7399  002090  0E01               	movlw	1
  7400  002092  6F05               	movwf	5,b	;volatile
  7401                           
  7402                           ; BSR set to: 15
  7403                           ;CAN.c: 119: RXF1SIDLbits.EXIDEN = 1;
  7404  002094  8705               	bsf	5,3,b	;volatile
  7405                           
  7406                           ;CAN.c: 120: RXF1EIDH = 0x7F;
  7407  002096  0E7F               	movlw	127
  7408  002098  6F06               	movwf	6,b	;volatile
  7409                           
  7410                           ; BSR set to: 15
  7411                           ;CAN.c: 121: RXF1EIDL = 0xFF;
  7412  00209A  6907               	setf	7,b	;volatile
  7413                           
  7414                           ; BSR set to: 15
  7415                           ;CAN.c: 123: CAN_SetupFilter_Ne();
  7416  00209C  ECA6  F00E         	call	_CAN_SetupFilter_Ne	;wreg free
  7417                           
  7418                           ;CAN.c: 126: RXFBCON0 = 0b00000000;
  7419  0020A0  0E00               	movlw	0
  7420  0020A2  010D               	movlb	13	; () banked
  7421  0020A4  6FE0               	movwf	224,b	;volatile
  7422                           
  7423                           ; BSR set to: 13
  7424                           ;CAN.c: 128: RXFBCON1 = 0b00010001;
  7425  0020A6  0E11               	movlw	17
  7426  0020A8  6FE1               	movwf	225,b	;volatile
  7427                           
  7428                           ; BSR set to: 13
  7429                           ;CAN.c: 130: RXFBCON2 = 0b00010001;
  7430  0020AA  0E11               	movlw	17
  7431  0020AC  6FE2               	movwf	226,b	;volatile
  7432                           
  7433                           ; BSR set to: 13
  7434                           ;CAN.c: 132: RXFBCON3 = 0b00010001;
  7435  0020AE  0E11               	movlw	17
  7436  0020B0  6FE3               	movwf	227,b	;volatile
  7437                           
  7438                           ; BSR set to: 13
  7439                           ;CAN.c: 134: RXFBCON4 = 0b00010001;
  7440  0020B2  0E11               	movlw	17
  7441  0020B4  6FE4               	movwf	228,b	;volatile
  7442                           
  7443                           ; BSR set to: 13
  7444                           ;CAN.c: 136: RXFCON0 = 0b11111111;
  7445  0020B6  69D4               	setf	212,b	;volatile
  7446                           
  7447                           ; BSR set to: 13
  7448                           ;CAN.c: 137: RXFCON1 = 0b00000011;
  7449  0020B8  0E03               	movlw	3
  7450  0020BA  6FD5               	movwf	213,b	;volatile
  7451                           
  7452                           ; BSR set to: 13
  7453  0020BC  0012               	return		;funcret
  7454  0020BE                     __end_of_CAN_SetupMask:
  7455                           	opt callstack 0
  7456                           
  7457 ;; *************** function _CAN_SetupFilter_Ne *****************
  7458 ;; Defined at:
  7459 ;;		line 141 in file "CAN.c"
  7460 ;; Parameters:    Size  Location     Type
  7461 ;;		None
  7462 ;; Auto vars:     Size  Location     Type
  7463 ;;		None
  7464 ;; Return value:  Size  Location     Type
  7465 ;;                  1    wreg      void 
  7466 ;; Registers used:
  7467 ;;		wreg, status,2
  7468 ;; Tracked objects:
  7469 ;;		On entry : 0/0
  7470 ;;		On exit  : 0/0
  7471 ;;		Unchanged: 0/0
  7472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7477 ;;Total ram usage:        0 bytes
  7478 ;; Hardware stack levels used:    1
  7479 ;; Hardware stack levels required when called:    3
  7480 ;; This function calls:
  7481 ;;		Nothing
  7482 ;; This function is called by:
  7483 ;;		_CAN_SetupMask
  7484 ;;		_FRAME_AdressOfNeighbors
  7485 ;; This function uses a non-reentrant model
  7486 ;;
  7487                           
  7488                           	psect	text58
  7489  001D4C                     __ptext58:
  7490                           	opt callstack 0
  7491  001D4C                     _CAN_SetupFilter_Ne:
  7492                           	opt callstack 24
  7493                           
  7494                           ;CAN.c: 145: RXF2SIDH = 0;
  7495                           
  7496                           ; BSR set to: 13
  7497                           ;incstack = 0
  7498  001D4C  0E00               	movlw	0
  7499  001D4E  010F               	movlb	15	; () banked
  7500  001D50  6F08               	movwf	8,b	;volatile
  7501                           
  7502                           ;CAN.c: 146: RXF2SIDL = 0x20;
  7503  001D52  0E20               	movlw	32
  7504  001D54  6F09               	movwf	9,b	;volatile
  7505                           
  7506                           ; BSR set to: 15
  7507                           ;CAN.c: 147: RXF2SIDLbits.EXIDEN = 1;
  7508  001D56  8709               	bsf	9,3,b	;volatile
  7509                           
  7510                           ;CAN.c: 148: RXF2EIDH = (BYTE)(NeightAdress1>>8);
  7511  001D58  504C               	movf	_NeightAdress1+1,w,c	;volatile
  7512  001D5A  6F0A               	movwf	10,b	;volatile
  7513                           
  7514                           ; BSR set to: 15
  7515                           ;CAN.c: 149: RXF2EIDL = (BYTE)(NeightAdress1 & 0xFF);
  7516  001D5C  C04B  FF0B         	movff	_NeightAdress1,3851	;volatile
  7517                           
  7518                           ;CAN.c: 152: RXF3SIDH = 0;
  7519  001D60  0E00               	movlw	0
  7520  001D62  6F0C               	movwf	12,b	;volatile
  7521                           
  7522                           ;CAN.c: 153: RXF3SIDL = 0x20;
  7523  001D64  0E20               	movlw	32
  7524  001D66  6F0D               	movwf	13,b	;volatile
  7525                           
  7526                           ; BSR set to: 15
  7527                           ;CAN.c: 154: RXF3SIDLbits.EXIDEN = 1;
  7528  001D68  870D               	bsf	13,3,b	;volatile
  7529                           
  7530                           ;CAN.c: 155: RXF3EIDH = (BYTE)(NeightAdress2>>8);
  7531  001D6A  5059               	movf	_NeightAdress2+1,w,c	;volatile
  7532  001D6C  6F0E               	movwf	14,b	;volatile
  7533                           
  7534                           ; BSR set to: 15
  7535                           ;CAN.c: 156: RXF3EIDL = (BYTE)(NeightAdress2 & 0xFF);
  7536  001D6E  C058  FF0F         	movff	_NeightAdress2,3855	;volatile
  7537                           
  7538                           ;CAN.c: 158: RXF4SIDH = 0;
  7539  001D72  0E00               	movlw	0
  7540  001D74  6F10               	movwf	16,b	;volatile
  7541                           
  7542                           ;CAN.c: 159: RXF4SIDL = 0x20;
  7543  001D76  0E20               	movlw	32
  7544  001D78  6F11               	movwf	17,b	;volatile
  7545                           
  7546                           ; BSR set to: 15
  7547                           ;CAN.c: 160: RXF4SIDLbits.EXIDEN = 1;
  7548  001D7A  8711               	bsf	17,3,b	;volatile
  7549                           
  7550                           ;CAN.c: 161: RXF4EIDH = (BYTE)(NeightAdress3>>8);
  7551  001D7C  504A               	movf	_NeightAdress3+1,w,c	;volatile
  7552  001D7E  6F12               	movwf	18,b	;volatile
  7553                           
  7554                           ; BSR set to: 15
  7555                           ;CAN.c: 162: RXF4EIDL = (BYTE)(NeightAdress3 & 0xFF);
  7556  001D80  C049  FF13         	movff	_NeightAdress3,3859	;volatile
  7557                           
  7558                           ;CAN.c: 164: RXF5SIDH = 0;
  7559  001D84  0E00               	movlw	0
  7560  001D86  6F14               	movwf	20,b	;volatile
  7561                           
  7562                           ;CAN.c: 165: RXF5SIDL = 0x20;
  7563  001D88  0E20               	movlw	32
  7564  001D8A  6F15               	movwf	21,b	;volatile
  7565                           
  7566                           ; BSR set to: 15
  7567                           ;CAN.c: 166: RXF5SIDLbits.EXIDEN = 1;
  7568  001D8C  8715               	bsf	21,3,b	;volatile
  7569                           
  7570                           ;CAN.c: 167: RXF5EIDH = (BYTE)(NeightAdress4>>8);
  7571  001D8E  5048               	movf	_NeightAdress4+1,w,c	;volatile
  7572  001D90  6F16               	movwf	22,b	;volatile
  7573                           
  7574                           ; BSR set to: 15
  7575                           ;CAN.c: 168: RXF5EIDL = (BYTE)(NeightAdress4 & 0xFF);
  7576  001D92  C047  FF17         	movff	_NeightAdress4,3863	;volatile
  7577                           
  7578                           ;CAN.c: 170: RXF6SIDH = 0;
  7579  001D96  0E00               	movlw	0
  7580  001D98  010D               	movlb	13	; () banked
  7581  001D9A  6F60               	movwf	96,b	;volatile
  7582                           
  7583                           ;CAN.c: 171: RXF6SIDL = 0x20;
  7584  001D9C  0E20               	movlw	32
  7585  001D9E  6F61               	movwf	97,b	;volatile
  7586                           
  7587                           ; BSR set to: 13
  7588                           ;CAN.c: 172: RXF6SIDLbits.EXIDEN = 1;
  7589  001DA0  8761               	bsf	97,3,b	;volatile
  7590                           
  7591                           ;CAN.c: 173: RXF6EIDH = (BYTE)(NeightAdress5>>8);
  7592  001DA2  5046               	movf	_NeightAdress5+1,w,c	;volatile
  7593  001DA4  6F62               	movwf	98,b	;volatile
  7594                           
  7595                           ; BSR set to: 13
  7596                           ;CAN.c: 174: RXF6EIDL = (BYTE)(NeightAdress5 & 0xFF);
  7597  001DA6  C045  FD63         	movff	_NeightAdress5,3427	;volatile
  7598                           
  7599                           ;CAN.c: 176: RXF7SIDH = 0;
  7600  001DAA  0E00               	movlw	0
  7601  001DAC  6F64               	movwf	100,b	;volatile
  7602                           
  7603                           ;CAN.c: 177: RXF7SIDL = 0x20;
  7604  001DAE  0E20               	movlw	32
  7605  001DB0  6F65               	movwf	101,b	;volatile
  7606                           
  7607                           ; BSR set to: 13
  7608                           ;CAN.c: 178: RXF7SIDLbits.EXIDEN = 1;
  7609  001DB2  8765               	bsf	101,3,b	;volatile
  7610                           
  7611                           ;CAN.c: 179: RXF7EIDH = (BYTE)(NeightAdress6>>8);
  7612  001DB4  5044               	movf	_NeightAdress6+1,w,c	;volatile
  7613  001DB6  6F66               	movwf	102,b	;volatile
  7614                           
  7615                           ; BSR set to: 13
  7616                           ;CAN.c: 180: RXF7EIDL = (BYTE)(NeightAdress6 & 0xFF);
  7617  001DB8  C043  FD67         	movff	_NeightAdress6,3431	;volatile
  7618                           
  7619                           ;CAN.c: 182: RXF8SIDH = 0;
  7620  001DBC  0E00               	movlw	0
  7621  001DBE  6F68               	movwf	104,b	;volatile
  7622                           
  7623                           ;CAN.c: 183: RXF8SIDL = 0x20;
  7624  001DC0  0E20               	movlw	32
  7625  001DC2  6F69               	movwf	105,b	;volatile
  7626                           
  7627                           ; BSR set to: 13
  7628                           ;CAN.c: 184: RXF8SIDLbits.EXIDEN = 1;
  7629  001DC4  8769               	bsf	105,3,b	;volatile
  7630                           
  7631                           ;CAN.c: 185: RXF8EIDH = (BYTE)(NeightAdress7>>8);
  7632  001DC6  5042               	movf	_NeightAdress7+1,w,c	;volatile
  7633  001DC8  6F6A               	movwf	106,b	;volatile
  7634                           
  7635                           ; BSR set to: 13
  7636                           ;CAN.c: 186: RXF8EIDL = (BYTE)(NeightAdress7 & 0xFF);
  7637  001DCA  C041  FD6B         	movff	_NeightAdress7,3435	;volatile
  7638                           
  7639                           ;CAN.c: 188: RXF9SIDH = 0;
  7640  001DCE  0E00               	movlw	0
  7641  001DD0  6F70               	movwf	112,b	;volatile
  7642                           
  7643                           ;CAN.c: 189: RXF9SIDL = 0x20;
  7644  001DD2  0E20               	movlw	32
  7645  001DD4  6F71               	movwf	113,b	;volatile
  7646                           
  7647                           ; BSR set to: 13
  7648                           ;CAN.c: 190: RXF9SIDLbits.EXIDEN = 1;
  7649  001DD6  8771               	bsf	113,3,b	;volatile
  7650                           
  7651                           ;CAN.c: 191: RXF9EIDH = (BYTE)(NeightAdress8>>8);
  7652  001DD8  5040               	movf	_NeightAdress8+1,w,c	;volatile
  7653  001DDA  6F72               	movwf	114,b	;volatile
  7654                           
  7655                           ; BSR set to: 13
  7656                           ;CAN.c: 192: RXF9EIDL = (BYTE)(NeightAdress8 & 0xFF);
  7657  001DDC  C03F  FD73         	movff	_NeightAdress8,3443	;volatile
  7658                           
  7659                           ; BSR set to: 13
  7660  001DE0  0012               	return		;funcret
  7661  001DE2                     __end_of_CAN_SetupFilter_Ne:
  7662                           	opt callstack 0
  7663                           
  7664 ;; *************** function _CAN_SetupClock *****************
  7665 ;; Defined at:
  7666 ;;		line 200 in file "CAN.c"
  7667 ;; Parameters:    Size  Location     Type
  7668 ;;		None
  7669 ;; Auto vars:     Size  Location     Type
  7670 ;;		None
  7671 ;; Return value:  Size  Location     Type
  7672 ;;                  1    wreg      void 
  7673 ;; Registers used:
  7674 ;;		None
  7675 ;; Tracked objects:
  7676 ;;		On entry : 0/0
  7677 ;;		On exit  : 0/0
  7678 ;;		Unchanged: 0/0
  7679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7683 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7684 ;;Total ram usage:        0 bytes
  7685 ;; Hardware stack levels used:    1
  7686 ;; Hardware stack levels required when called:    3
  7687 ;; This function calls:
  7688 ;;		Nothing
  7689 ;; This function is called by:
  7690 ;;		_CAN_Setup
  7691 ;; This function uses a non-reentrant model
  7692 ;;
  7693                           
  7694                           	psect	text59
  7695  002612                     __ptext59:
  7696                           	opt callstack 0
  7697  002612                     _CAN_SetupClock:
  7698                           	opt callstack 25
  7699                           
  7700                           ;CAN.c: 202: BRGCON1bits.BRP0 = (((32000000/4)/(2*20*50000))-1) & 0b000001;
  7701                           
  7702                           ; BSR set to: 13
  7703                           ;incstack = 0
  7704  002612  8070               	bsf	3952,0,c	;volatile
  7705                           
  7706                           ;CAN.c: 203: BRGCON1bits.BRP1 = ((((32000000/4)/(2*20*50000))-1) >> 1) & 0b000001;
  7707  002614  8270               	bsf	3952,1,c	;volatile
  7708                           
  7709                           ;CAN.c: 204: BRGCON1bits.BRP2 = ((((32000000/4)/(2*20*50000))-1) >> 2) & 0b000001;
  7710  002616  9470               	bcf	3952,2,c	;volatile
  7711                           
  7712                           ;CAN.c: 205: BRGCON1bits.BRP3 = ((((32000000/4)/(2*20*50000))-1) >> 3) & 0b000001;
  7713  002618  9670               	bcf	3952,3,c	;volatile
  7714                           
  7715                           ;CAN.c: 206: BRGCON1bits.BRP4 = ((((32000000/4)/(2*20*50000))-1) >> 4) & 0b000001;
  7716  00261A  9870               	bcf	3952,4,c	;volatile
  7717                           
  7718                           ;CAN.c: 207: BRGCON1bits.BRP5 = ((((32000000/4)/(2*20*50000))-1) >> 5) & 0b000001;
  7719  00261C  9A70               	bcf	3952,5,c	;volatile
  7720                           
  7721                           ;CAN.c: 209: BRGCON1bits.SJW0 = 1;
  7722  00261E  8C70               	bsf	3952,6,c	;volatile
  7723                           
  7724                           ;CAN.c: 210: BRGCON1bits.SJW1 = 1;
  7725  002620  8E70               	bsf	3952,7,c	;volatile
  7726                           
  7727                           ;CAN.c: 212: BRGCON2bits.SEG1PH0 = 1;
  7728  002622  8671               	bsf	3953,3,c	;volatile
  7729                           
  7730                           ;CAN.c: 213: BRGCON2bits.SEG1PH1 = 1;
  7731  002624  8871               	bsf	3953,4,c	;volatile
  7732                           
  7733                           ;CAN.c: 214: BRGCON2bits.SEG1PH2 = 1;
  7734  002626  8A71               	bsf	3953,5,c	;volatile
  7735                           
  7736                           ;CAN.c: 216: BRGCON2bits.PRSEG2 = 1;
  7737  002628  8471               	bsf	3953,2,c	;volatile
  7738                           
  7739                           ;CAN.c: 217: BRGCON2bits.PRSEG1 = 0;
  7740  00262A  9271               	bcf	3953,1,c	;volatile
  7741                           
  7742                           ;CAN.c: 218: BRGCON2bits.PRSEG0 = 0;
  7743  00262C  9071               	bcf	3953,0,c	;volatile
  7744                           
  7745                           ;CAN.c: 220: BRGCON3bits.SEG2PH0 = 1;
  7746  00262E  8072               	bsf	3954,0,c	;volatile
  7747                           
  7748                           ;CAN.c: 221: BRGCON3bits.SEG2PH1 = 0;
  7749  002630  9272               	bcf	3954,1,c	;volatile
  7750                           
  7751                           ;CAN.c: 222: BRGCON3bits.SEG2PH2 = 1;
  7752  002632  8472               	bsf	3954,2,c	;volatile
  7753                           
  7754                           ;CAN.c: 224: BRGCON2bits.SAM = 1;
  7755  002634  8C71               	bsf	3953,6,c	;volatile
  7756                           
  7757                           ;CAN.c: 225: BRGCON2bits.SEG2PHTS = 1;
  7758  002636  8E71               	bsf	3953,7,c	;volatile
  7759  002638  0012               	return		;funcret
  7760  00263A                     __end_of_CAN_SetupClock:
  7761                           	opt callstack 0
  7762                           
  7763 ;; *************** function _FLASH_Read *****************
  7764 ;; Defined at:
  7765 ;;		line 28 in file "FLASH.c"
  7766 ;; Parameters:    Size  Location     Type
  7767 ;;  addr            4    5[COMRAM] long 
  7768 ;; Auto vars:     Size  Location     Type
  7769 ;;		None
  7770 ;; Return value:  Size  Location     Type
  7771 ;;                  2    5[COMRAM] unsigned int 
  7772 ;; Registers used:
  7773 ;;		None
  7774 ;; Tracked objects:
  7775 ;;		On entry : 0/0
  7776 ;;		On exit  : 0/0
  7777 ;;		Unchanged: 0/0
  7778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7779 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7782 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7783 ;;Total ram usage:        4 bytes
  7784 ;; Hardware stack levels used:    1
  7785 ;; Hardware stack levels required when called:    3
  7786 ;; This function calls:
  7787 ;;		Nothing
  7788 ;; This function is called by:
  7789 ;;		_main
  7790 ;; This function uses a non-reentrant model
  7791 ;;
  7792                           
  7793                           	psect	text60
  7794  0026D6                     __ptext60:
  7795                           	opt callstack 0
  7796  0026D6                     _FLASH_Read:
  7797                           	opt callstack 27
  7798                           
  7799                           ;FLASH.c: 30: TBLPTR = addr;
  7800                           
  7801                           ;incstack = 0
  7802  0026D6  C006  FFF6         	movff	FLASH_Read@addr,tblptrl	;volatile
  7803  0026DA  C007  FFF7         	movff	FLASH_Read@addr+1,tblptrh	;volatile
  7804  0026DE  C008  FFF8         	movff	FLASH_Read@addr+2,tblptru	;volatile
  7805  0026E2  0008               	tblrd		*	; ;# 
  7806                           
  7807                           ;FLASH.c: 32: return TABLAT;
  7808  0026E4  CFF5 F006          	movff	tablat,?_FLASH_Read	;volatile
  7809  0026E8  6A07               	clrf	?_FLASH_Read+1,c
  7810  0026EA  0012               	return		;funcret
  7811  0026EC                     __end_of_FLASH_Read:
  7812                           	opt callstack 0
  7813                           
  7814 ;; *************** function _ISR_low *****************
  7815 ;; Defined at:
  7816 ;;		line 16 in file "ISR.c"
  7817 ;; Parameters:    Size  Location     Type
  7818 ;;		None
  7819 ;; Auto vars:     Size  Location     Type
  7820 ;;		None
  7821 ;; Return value:  Size  Location     Type
  7822 ;;                  1    wreg      void 
  7823 ;; Registers used:
  7824 ;;		wreg, status,2, status,0, cstack
  7825 ;; Tracked objects:
  7826 ;;		On entry : 0/0
  7827 ;;		On exit  : 0/0
  7828 ;;		Unchanged: 0/0
  7829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7832 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7833 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7834 ;;Total ram usage:        3 bytes
  7835 ;; Hardware stack levels used:    1
  7836 ;; Hardware stack levels required when called:    2
  7837 ;; This function calls:
  7838 ;;		_TMR1_Timer_reset
  7839 ;;		i1_TMR1_Update_flag_Set
  7840 ;; This function is called by:
  7841 ;;		Interrupt level 1
  7842 ;; This function uses a non-reentrant model
  7843 ;;
  7844                           
  7845                           	psect	intcodelo
  7846  000C18                     __pintcodelo:
  7847                           	opt callstack 0
  7848  000C18                     _ISR_low:
  7849                           	opt callstack 22
  7850                           
  7851                           ;incstack = 0
  7852  000C18  805A               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  7853  000C1A  CFD8 F003          	movff	status,??_ISR_low
  7854  000C1E  CFE8 F004          	movff	wreg,??_ISR_low+1
  7855  000C22  CFE0 F005          	movff	bsr,??_ISR_low+2
  7856                           
  7857                           ;ISR.c: 21: if(TMR1IF==1)
  7858  000C26  A09E               	btfss	3998,0,c	;volatile
  7859  000C28  D012               	goto	i1l783
  7860                           
  7861                           ;ISR.c: 22: {;ISR.c: 23: TMR1_Timer_reset();
  7862  000C2A  EC1D  F013         	call	_TMR1_Timer_reset	;wreg free
  7863                           
  7864                           ;ISR.c: 26: static BYTE ramkaStanuU8=0;;ISR.c: 29: TMR1_Update_flag_Set(1);
  7865  000C2E  0E00               	movlw	0
  7866  000C30  6E02               	movwf	i1TMR1_Update_flag_Set@a+1,c
  7867  000C32  0E01               	movlw	1
  7868  000C34  6E01               	movwf	i1TMR1_Update_flag_Set@a,c
  7869  000C36  ECC2  F013         	call	i1_TMR1_Update_flag_Set	;wreg free
  7870                           
  7871                           ;ISR.c: 31: DetectorLedRadar.Flags.obsluzWeWy = 1;
  7872  000C3A  0100               	movlb	0	; () banked
  7873  000C3C  81CB               	bsf	_DetectorLedRadar& (0+255),0,b
  7874                           
  7875                           ; BSR set to: 0
  7876                           ;ISR.c: 33: if(++ramkaStanuU8 > (2*10))
  7877  000C3E  2A38               	incf	ISR_low@ramkaStanuU8,f,c
  7878  000C40  0E14               	movlw	20
  7879  000C42  6438               	cpfsgt	ISR_low@ramkaStanuU8,c
  7880  000C44  D003               	goto	i1l3873
  7881                           
  7882                           ; BSR set to: 0
  7883                           ;ISR.c: 34: {;ISR.c: 35: ramkaStanuU8 = 0;
  7884  000C46  0E00               	movlw	0
  7885  000C48  6E38               	movwf	ISR_low@ramkaStanuU8,c
  7886                           
  7887                           ; BSR set to: 0
  7888                           ;ISR.c: 36: DaneCan.Flags.wyslijRamkeStanu = 1;
  7889  000C4A  802B               	bsf	_DaneCan,0,c
  7890  000C4C                     i1l3873:
  7891                           
  7892                           ; BSR set to: 0
  7893                           ;ISR.c: 37: };ISR.c: 41: TMR1IF=0;
  7894  000C4C  909E               	bcf	3998,0,c	;volatile
  7895  000C4E                     i1l783:
  7896  000C4E  C005  FFE0         	movff	??_ISR_low+2,bsr
  7897  000C52  C004  FFE8         	movff	??_ISR_low+1,wreg
  7898  000C56  C003  FFD8         	movff	??_ISR_low,status
  7899  000C5A  905A               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  7900  000C5C  0010               	retfie	
  7901  000C5E                     __end_of_ISR_low:
  7902                           	opt callstack 0
  7903                           
  7904 ;; *************** function i1_TMR1_Update_flag_Set *****************
  7905 ;; Defined at:
  7906 ;;		line 32 in file "TMR1.c"
  7907 ;; Parameters:    Size  Location     Type
  7908 ;;  a               2    0[COMRAM] unsigned int 
  7909 ;; Auto vars:     Size  Location     Type
  7910 ;;		None
  7911 ;; Return value:  Size  Location     Type
  7912 ;;                  1    wreg      void 
  7913 ;; Registers used:
  7914 ;;		None
  7915 ;; Tracked objects:
  7916 ;;		On entry : 0/0
  7917 ;;		On exit  : 0/0
  7918 ;;		Unchanged: 0/0
  7919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7920 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7923 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7924 ;;Total ram usage:        2 bytes
  7925 ;; Hardware stack levels used:    1
  7926 ;; Hardware stack levels required when called:    1
  7927 ;; This function calls:
  7928 ;;		Nothing
  7929 ;; This function is called by:
  7930 ;;		_ISR_low
  7931 ;; This function uses a non-reentrant model
  7932 ;;
  7933                           
  7934                           	psect	text62
  7935  002784                     __ptext62:
  7936                           	opt callstack 0
  7937  002784                     i1_TMR1_Update_flag_Set:
  7938                           	opt callstack 22
  7939                           
  7940                           ;TMR1.c: 34: TMR1_Update_flag = a;
  7941                           
  7942                           ;incstack = 0
  7943  002784  C001  F033         	movff	i1TMR1_Update_flag_Set@a,_TMR1_Update_flag
  7944  002788  C002  F034         	movff	i1TMR1_Update_flag_Set@a+1,_TMR1_Update_flag+1
  7945  00278C  0012               	return		;funcret
  7946  00278E                     __end_ofi1_TMR1_Update_flag_Set:
  7947                           	opt callstack 0
  7948                           
  7949 ;; *************** function _TMR1_Timer_reset *****************
  7950 ;; Defined at:
  7951 ;;		line 63 in file "TMR1.c"
  7952 ;; Parameters:    Size  Location     Type
  7953 ;;		None
  7954 ;; Auto vars:     Size  Location     Type
  7955 ;;  t1H             1    1[COMRAM] volatile unsigned char 
  7956 ;;  t1L             1    0[COMRAM] volatile unsigned char 
  7957 ;; Return value:  Size  Location     Type
  7958 ;;                  1    wreg      unsigned char 
  7959 ;; Registers used:
  7960 ;;		wreg, status,2, status,0
  7961 ;; Tracked objects:
  7962 ;;		On entry : 0/0
  7963 ;;		On exit  : 0/0
  7964 ;;		Unchanged: 0/0
  7965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7967 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7969 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7970 ;;Total ram usage:        2 bytes
  7971 ;; Hardware stack levels used:    1
  7972 ;; Hardware stack levels required when called:    1
  7973 ;; This function calls:
  7974 ;;		Nothing
  7975 ;; This function is called by:
  7976 ;;		_ISR_low
  7977 ;; This function uses a non-reentrant model
  7978 ;;
  7979                           
  7980                           	psect	text63
  7981  00263A                     __ptext63:
  7982                           	opt callstack 0
  7983  00263A                     _TMR1_Timer_reset:
  7984                           	opt callstack 22
  7985                           
  7986                           ;TMR1.c: 69: volatile BYTE t1L = 0, t1H = 0;
  7987                           
  7988                           ;incstack = 0
  7989  00263A  0E00               	movlw	0
  7990  00263C  6E01               	movwf	TMR1_Timer_reset@t1L,c	;volatile
  7991  00263E  0E00               	movlw	0
  7992  002640  6E02               	movwf	TMR1_Timer_reset@t1H,c	;volatile
  7993                           
  7994                           ;TMR1.c: 70: t1L = TMR1L;
  7995  002642  CFCE F001          	movff	4046,TMR1_Timer_reset@t1L	;volatile
  7996                           
  7997                           ;TMR1.c: 71: t1H = TMR1H;
  7998  002646  CFCF F002          	movff	4047,TMR1_Timer_reset@t1H	;volatile
  7999                           
  8000                           ;TMR1.c: 72: __nop();
  8001  00264A  F000               	nop	
  8002                           
  8003                           ;TMR1.c: 73: t1H += (UINT8)((0xFFFF - (((8000000/8)/4)/10)) >> 8);
  8004  00264C  0E9E               	movlw	158
  8005  00264E  2602               	addwf	TMR1_Timer_reset@t1H,f,c	;volatile
  8006                           
  8007                           ;TMR1.c: 74: t1L += (UINT8)((0xFFFF - (((8000000/8)/4)/10)) & 0xFF);
  8008  002650  0E57               	movlw	87
  8009  002652  2601               	addwf	TMR1_Timer_reset@t1L,f,c	;volatile
  8010                           
  8011                           ;TMR1.c: 75: TMR1H = t1H;
  8012  002654  C002  FFCF         	movff	TMR1_Timer_reset@t1H,4047	;volatile
  8013                           
  8014                           ;TMR1.c: 76: TMR1L = 0x5B;
  8015  002658  0E5B               	movlw	91
  8016  00265A  6ECE               	movwf	4046,c	;volatile
  8017  00265C  0012               	return		;funcret
  8018  00265E                     __end_of_TMR1_Timer_reset:
  8019                           	opt callstack 0
  8020                           
  8021 ;; *************** function _ISR_high *****************
  8022 ;; Defined at:
  8023 ;;		line 53 in file "ISR.c"
  8024 ;; Parameters:    Size  Location     Type
  8025 ;;		None
  8026 ;; Auto vars:     Size  Location     Type
  8027 ;;		None
  8028 ;; Return value:  Size  Location     Type
  8029 ;;                  1    wreg      void 
  8030 ;; Registers used:
  8031 ;;		None
  8032 ;; Tracked objects:
  8033 ;;		On entry : 0/0
  8034 ;;		On exit  : 0/0
  8035 ;;		Unchanged: 0/0
  8036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8041 ;;Total ram usage:        0 bytes
  8042 ;; Hardware stack levels used:    1
  8043 ;; This function calls:
  8044 ;;		Nothing
  8045 ;; This function is called by:
  8046 ;;		Interrupt level 2
  8047 ;; This function uses a non-reentrant model
  8048 ;;
  8049                           
  8050                           	psect	intcode
  8051  000C08                     __pintcode:
  8052                           	opt callstack 0
  8053  000C08                     _ISR_high:
  8054                           	opt callstack 22
  8055                           
  8056                           ;incstack = 0
  8057  000C08  825A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  8058  000C0A  EDCF  F013         	call	int_func,f	;refresh shadow registers
  8059                           
  8060                           	psect	intcode_body
  8061  00279E                     __pintcode_body:
  8062                           	opt callstack 22
  8063  00279E                     int_func:
  8064                           	opt callstack 22
  8065  00279E  0006               	pop		; remove dummy address from shadow register refresh
  8066  0027A0  925A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  8067  0027A2  0011               	retfie		f
  8068  0027A4                     __end_of_ISR_high:
  8069                           	opt callstack 0
  8070  0000                     
  8071                           	psect	rparam
  8072  0000                     
  8073                           	psect	temp
  8074  00005A                     btemp:
  8075                           	opt callstack 0
  8076  00005A                     	ds	1
  8077  0000                     int$flags	set	btemp
  8078  0000                     wtemp8	set	btemp+1
  8079  0000                     ttemp5	set	btemp+1
  8080  0000                     ttemp6	set	btemp+4
  8081  0000                     ttemp7	set	btemp+8
  8082                           tosu	equ	0xFFF
  8083                           tosh	equ	0xFFE
  8084                           tosl	equ	0xFFD
  8085                           stkptr	equ	0xFFC
  8086                           pclatu	equ	0xFFB
  8087                           pclath	equ	0xFFA
  8088                           pcl	equ	0xFF9
  8089                           tblptru	equ	0xFF8
  8090                           tblptrh	equ	0xFF7
  8091                           tblptrl	equ	0xFF6
  8092                           tablat	equ	0xFF5
  8093                           prodh	equ	0xFF4
  8094                           prodl	equ	0xFF3
  8095                           indf0	equ	0xFEF
  8096                           postinc0	equ	0xFEE
  8097                           postdec0	equ	0xFED
  8098                           preinc0	equ	0xFEC
  8099                           plusw0	equ	0xFEB
  8100                           fsr0h	equ	0xFEA
  8101                           fsr0l	equ	0xFE9
  8102                           wreg	equ	0xFE8
  8103                           indf1	equ	0xFE7
  8104                           postinc1	equ	0xFE6
  8105                           postdec1	equ	0xFE5
  8106                           preinc1	equ	0xFE4
  8107                           plusw1	equ	0xFE3
  8108                           fsr1h	equ	0xFE2
  8109                           fsr1l	equ	0xFE1
  8110                           bsr	equ	0xFE0
  8111                           indf2	equ	0xFDF
  8112                           postinc2	equ	0xFDE
  8113                           postdec2	equ	0xFDD
  8114                           preinc2	equ	0xFDC
  8115                           plusw2	equ	0xFDB
  8116                           fsr2h	equ	0xFDA
  8117                           fsr2l	equ	0xFD9
  8118                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        13
    BSS         692
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     42      89
    BANK0           160      2     116
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    FRAME_AnalogValue@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_MapPosition@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    NVMWrite@source	PTR unsigned char  size(2) Largest target is 2
		 -> Init_Data(COMRAM[2]), NeightAdress8(COMRAM[2]), NeightAdress7(COMRAM[2]), NeightAdress6(COMRAM[2]), 
		 -> NeightAdress5(COMRAM[2]), NeightAdress4(COMRAM[2]), NeightAdress3(COMRAM[2]), NeightAdress2(COMRAM[2]), 
		 -> NeightAdress1(COMRAM[2]), 

    NVMRead@dest	PTR unsigned char  size(2) Largest target is 2
		 -> Init_Data(COMRAM[2]), NeightAdress8(COMRAM[2]), NeightAdress7(COMRAM[2]), NeightAdress6(COMRAM[2]), 
		 -> NeightAdress5(COMRAM[2]), NeightAdress4(COMRAM[2]), NeightAdress3(COMRAM[2]), NeightAdress2(COMRAM[2]), 
		 -> NeightAdress1(COMRAM[2]), 

    NVMalloc@location	PTR unsigned short  size(2) Largest target is 2
		 -> neighborsAdress(COMRAM[2]), ustawieniaKarty(COMRAM[2]), 

    FRAME_HandleCanFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_AdressOfNeighbors@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_PrzypisanieDokarty@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_SoftwareVersion@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_Plot@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_DeviceReset@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_DataUpdateAndChangeOption@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    Dane	PTR struct DaneStruct size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    FRAME_AxisStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_AveragingTimes@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_ExcitationMultiplier@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_ExcitationValue@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_AccelerometerStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_SensorExcitationStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_GenID@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_TakeFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_SendFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_MoveBuffIntoFrame@Buf	PTR unsigned char  size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), RXB0D0(SFR_3[1]), 

    CAN_MoveBuffIntoFrame@Ram	PTR unsigned char  size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), RXB0D0(SFR_3[1]), 


Critical Paths under _main in COMRAM

    _main->_TRM_DataTransmition
    _TRM_DataTransmition->_FRAME_HandleCanFrame
    _FRAME_HandleCanFrame->_FRAME_DeviceReset
    _LED_Error->_LED_Control
    _FRAME_SensorExcitationStatus->_IsInNeighbors
    _FRAME_SensorExcitationStatus->_MOC_Aktualna_Temperatura
    _FRAME_SensorExcitationStatus->_MOC_Frame_Counter
    _FRAME_SensorExcitationStatus->_MOC_NOTWORK
    _FRAME_SensorExcitationStatus->_MOC_Wynikowa_wartosc_roznicowa
    _FRAME_Plot->___lwdiv
    _WriteDataToEEPROM->_NVMWrite
    _NVMWrite->_WritetoEEPROM
    _FRAME_AccelerometerStatus->_MOCK_Klikniecie_Spadek
    _FRAME_AccelerometerStatus->_MOCK_PrzyspieszenieX
    _FRAME_AccelerometerStatus->_MOCK_PrzyspieszenieY
    _FRAME_AccelerometerStatus->_MOCK_PrzyspieszenieZ
    _CAN_SendFrame->_CAN_MoveBuffIntoFrame
    _CAN_TakeFrame->___awdiv
    _LED_Update->_LED_Light_Pos
    _LED_Light_Pos->___lwdiv
    _INI_All->_NVMInit
    _ReadDataToEEPROM->_NVMRead
    _NVMRead->_ReadfromEEPROM
    _NVMInit->_NVMalloc
    _INI_LED_Start->_LED_Control

Critical Paths under _ISR_low in COMRAM

    _ISR_low->_TMR1_Timer_reset
    _ISR_low->i1_TMR1_Update_flag_Set

Critical Paths under _ISR_high in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR_low in BANK0

    None.

Critical Paths under _ISR_high in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_low in BANK1

    None.

Critical Paths under _ISR_high in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_low in BANK2

    None.

Critical Paths under _ISR_high in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_low in BANK3

    None.

Critical Paths under _ISR_high in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_low in BANK4

    None.

Critical Paths under _ISR_high in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_low in BANK5

    None.

Critical Paths under _ISR_high in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_low in BANK6

    None.

Critical Paths under _ISR_high in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_low in BANK7

    None.

Critical Paths under _ISR_high in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_low in BANK8

    None.

Critical Paths under _ISR_high in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_low in BANK9

    None.

Critical Paths under _ISR_high in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_low in BANK10

    None.

Critical Paths under _ISR_high in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_low in BANK11

    None.

Critical Paths under _ISR_high in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_low in BANK12

    None.

Critical Paths under _ISR_high in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   32150
                                              0 BANK0      2     2      0
                         _FLASH_Read
                            _INI_All
                         _LED_Update
                          _RADAR_Use
               _TMR1_Update_flag_Get
               _TMR1_Update_flag_Set
                _TRM_DataTransmition
 ---------------------------------------------------------------------------------
 (1) _TRM_DataTransmition                                 18    18      0   18698
                                             25 COMRAM    17    17      0
                      _CAN_TakeFrame
               _FRAME_HandleCanFrame
 ---------------------------------------------------------------------------------
 (2) _FRAME_HandleCanFrame                                 8     6      2   15647
                                             17 COMRAM     8     6      2
                          _CAN_GenID
                      _CAN_SendFrame
          _FRAME_AccelerometerStatus
            _FRAME_AdressOfNeighbors
                  _FRAME_AnalogValue
               _FRAME_AveragingTimes
                   _FRAME_AxisStatus
                  _FRAME_DeviceReset
         _FRAME_ExcitationMultiplier
              _FRAME_ExcitationValue
                  _FRAME_MapPosition
                         _FRAME_Plot
           _FRAME_PrzypisanieDokarty
       _FRAME_SensorExcitationStatus
              _FRAME_SoftwareVersion
                          _LED_Error
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) _LED_Error                                            0     0      0    1756
                        _LED_Control
 ---------------------------------------------------------------------------------
 (3) _FRAME_SoftwareVersion                                3     1      2     305
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_SensorExcitationStatus                         6     4      2     892
                                              7 COMRAM     6     4      2
                      _IsInNeighbors
                           _LOCK_Get
                           _LOCK_Set
           _MOC_Aktualna_Temperatura
                  _MOC_Frame_Counter
                        _MOC_NOTWORK
     _MOC_Wynikowa_wartosc_roznicowa
 ---------------------------------------------------------------------------------
 (4) _MOC_Wynikowa_wartosc_roznicowa                       2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_NOTWORK                                          2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_Frame_Counter                                    2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_Aktualna_Temperatura                             2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _LOCK_Set                                             1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _LOCK_Get                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _IsInNeighbors                                        4     2      2     367
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_PrzypisanieDokarty                             6     4      2     367
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_Plot                                           3     1      2     929
                                             12 COMRAM     3     1      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) _FRAME_MapPosition                                    2     0      2     119
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_ExcitationValue                                3     1      2     212
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_ExcitationMultiplier                           5     3      2     280
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_DeviceReset                                    3     1      2    4535
                                             14 COMRAM     3     1      2
    _FRAME_DataUpdateAndChangeOption
                  _WriteDataToEEPROM
 ---------------------------------------------------------------------------------
 (4) _WriteDataToEEPROM                                    0     0      0    3646
                           _NVMWrite
 ---------------------------------------------------------------------------------
 (5) _NVMWrite                                             6     0      6    3646
                                              8 COMRAM     6     0      6
                      _WritetoEEPROM
 ---------------------------------------------------------------------------------
 (6) _WritetoEEPROM                                        3     0      3     331
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (4) _FRAME_DataUpdateAndChangeOption                      3     1      2     243
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AxisStatus                                     5     3      2     212
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AveragingTimes                                 3     1      2     212
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AnalogValue                                    6     2      4     238
                                              5 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _FRAME_AdressOfNeighbors                             12     8      4    1626
                                              5 COMRAM    10     6      4
                 _CAN_SetupFilter_Ne
 ---------------------------------------------------------------------------------
 (3) _FRAME_AccelerometerStatus                            3     1      2     305
                                              7 COMRAM     3     1      2
             _MOCK_Klikniecie_Spadek
               _MOCK_PrzyspieszenieX
               _MOCK_PrzyspieszenieY
               _MOCK_PrzyspieszenieZ
 ---------------------------------------------------------------------------------
 (4) _MOCK_PrzyspieszenieZ                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOCK_PrzyspieszenieY                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOCK_PrzyspieszenieX                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOCK_Klikniecie_Spadek                               2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _CAN_SendFrame                                        5     3      2    1128
                                             10 COMRAM     5     3      2
              _CAN_MoveBuffIntoFrame
 ---------------------------------------------------------------------------------
 (3) _CAN_GenID                                            5     2      3     455
                                              5 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (2) _CAN_TakeFrame                                        6     4      2    2121
                                             13 COMRAM     6     4      2
              _CAN_MoveBuffIntoFrame
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     811
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _CAN_MoveBuffIntoFrame                                5     1      4     668
                                              5 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) _TMR1_Update_flag_Set                                 2     0      2     234
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR1_Update_flag_Get                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _RADAR_Use                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_Update                                           0     0      0    7072
                        _LED_Control
                           _LED_Left
                      _LED_Light_Pos
                          _LED_Right
 ---------------------------------------------------------------------------------
 (2) _LED_Light_Pos                                       11     7      4    4382
                                             12 COMRAM    11     7      4
                        _LED_Control
                           _LED_Left
                          _LED_Right
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     717
                                              5 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _LED_Right                                            6     4      2     467
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _LED_Left                                             4     2      2     467
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _INI_All                                              0     0      0    5840
                          _CAN_Setup
                _INI_GlobalInterrupt
                      _INI_LED_Start
                         _INI_OUTPUT
                          _INI_Timer
                            _NVMInit
                   _ReadDataToEEPROM
 ---------------------------------------------------------------------------------
 (2) _ReadDataToEEPROM                                     0     0      0    3496
                            _NVMRead
 ---------------------------------------------------------------------------------
 (3) _NVMRead                                              6     0      6    3496
                                              7 COMRAM     6     0      6
                     _ReadfromEEPROM
 ---------------------------------------------------------------------------------
 (4) _ReadfromEEPROM                                       2     0      2     181
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _NVMInit                                              3     3      0     588
                                             11 COMRAM     3     3      0
                           _NVMalloc
 ---------------------------------------------------------------------------------
 (3) _NVMalloc                                             6     2      4     569
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _INI_Timer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INI_OUTPUT                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INI_LED_Start                                        0     0      0    1756
                        _LED_Control
 ---------------------------------------------------------------------------------
 (4) _LED_Control                                          5     3      2    1756
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _INI_GlobalInterrupt                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CAN_Setup                                            1     1      0       0
                                              5 COMRAM     1     1      0
                     _CAN_SetupClock
                      _CAN_SetupMask
 ---------------------------------------------------------------------------------
 (3) _CAN_SetupMask                                        0     0      0       0
                 _CAN_SetupFilter_Ne
 ---------------------------------------------------------------------------------
 (4) _CAN_SetupFilter_Ne                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CAN_SetupClock                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _FLASH_Read                                           4     0      4     269
                                              5 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR_low                                              3     3      0      76
                                              2 COMRAM     3     3      0
                   _TMR1_Timer_reset
             i1_TMR1_Update_flag_Set
 ---------------------------------------------------------------------------------
 (8) i1_TMR1_Update_flag_Set                               2     0      2      48
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (8) _TMR1_Timer_reset                                     2     2      0      28
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_high                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FLASH_Read
   _INI_All
     _CAN_Setup
       _CAN_SetupClock
       _CAN_SetupMask
         _CAN_SetupFilter_Ne
     _INI_GlobalInterrupt
     _INI_LED_Start
       _LED_Control
     _INI_OUTPUT
     _INI_Timer
     _NVMInit
       _NVMalloc
     _ReadDataToEEPROM
       _NVMRead
         _ReadfromEEPROM
   _LED_Update
     _LED_Control
     _LED_Left
     _LED_Light_Pos
       _LED_Control
       _LED_Left
       _LED_Right
       ___lwdiv
     _LED_Right
   _RADAR_Use
   _TMR1_Update_flag_Get
   _TMR1_Update_flag_Set
   _TRM_DataTransmition
     _CAN_TakeFrame
       _CAN_MoveBuffIntoFrame
       ___awdiv
     _FRAME_HandleCanFrame
       _CAN_GenID
       _CAN_SendFrame
         _CAN_MoveBuffIntoFrame
       _FRAME_AccelerometerStatus
         _MOCK_Klikniecie_Spadek
         _MOCK_PrzyspieszenieX
         _MOCK_PrzyspieszenieY
         _MOCK_PrzyspieszenieZ
       _FRAME_AdressOfNeighbors
         _CAN_SetupFilter_Ne
       _FRAME_AnalogValue
       _FRAME_AveragingTimes
       _FRAME_AxisStatus
       _FRAME_DeviceReset
         _FRAME_DataUpdateAndChangeOption
         _WriteDataToEEPROM
           _NVMWrite
             _WritetoEEPROM
       _FRAME_ExcitationMultiplier
       _FRAME_ExcitationValue
       _FRAME_MapPosition
       _FRAME_Plot
         ___lwdiv
       _FRAME_PrzypisanieDokarty
       _FRAME_SensorExcitationStatus
         _IsInNeighbors
         _LOCK_Get
         _LOCK_Set
         _MOC_Aktualna_Temperatura
         _MOC_Frame_Counter
         _MOC_NOTWORK
         _MOC_Wynikowa_wartosc_roznicowa
       _FRAME_SoftwareVersion
       _LED_Error
         _LED_Control
       ___awdiv

 _ISR_low (ROOT)
   _TMR1_Timer_reset
   i1_TMR1_Update_flag_Set

 _ISR_high (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0     220      31       16.4%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      2      74       5       72.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2A      59       1       94.7%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      CD      20        0.0%
DATA                 0      0     2ED       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Fri Aug 02 14:29:26 2019

               __end_of_FRAME_DeviceReset 1912                     ?_FRAME_AveragingTimes 0006  
                            ___awdiv@sign 000B                                        bsr 000FE0  
                             __CFG_BORV$3 000000                         ?_FRAME_AxisStatus 0006  
                       _FRAME_MapPosition 27A8                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            NVMRead@count 000C                              __CFG_CP3$OFF 000000  
                       WritetoEEPROM@Data 0008                        __size_of_CAN_GenID 0078  
                                     l300 0F9E                                       l301 0F42  
                                     l302 0F48                                       l303 0F4E  
                                     l304 0F54                                       l305 0F5A  
                                     l306 0F60                                       l307 0F66  
                                     l422 1720                                       l290 1522  
                                     l291 1520                               ?_LED_Update 0001  
                                     l641 1504                                       l394 1F32  
                                     l299 0F3C                                       l920 257A  
                                     l928 2582                                       l696 1372  
                                     l937 2476                                       l697 136A  
                            __CFG_CPB$OFF 000000                        ??_FRAME_AxisStatus 0008  
                            __CFG_CPD$OFF 000000                        ?_FRAME_MapPosition 0006  
                      __size_of_CAN_Setup 005C                              ?_LED_Control 0006  
                                     wreg 000FE8                     __end_of_CAN_TakeFrame 1180  
                             ?_INI_OUTPUT 0001                    __size_of_INI_LED_Start 0034  
                           NVMInit@result 000E                  ??_MOCK_Klikniecie_Spadek 0008  
                   __end_of_CAN_SendFrame 1678                              __CFG_LVP$OFF 000000  
                         _neighborsAdress 003B                 TRM_DataTransmition@weWyU8 0037  
            __size_of_INI_GlobalInterrupt 000E                       ??_FRAME_MapPosition 0008  
                            __CFG_WDT$OFF 000000                                      l4011 170A  
                                    l4005 16FA                                      l1445 22D4  
                                    l4023 1730                                      l4041 1760  
                                    l4017 171A                                      l4121 1B7C  
                                    l4035 1750                           __end_of_INI_All 2680  
                                    l4115 1B64                                      l4053 1780  
                                    l4029 1740                                      l4205 22CA  
                                    l4133 1BAC                                      l4109 1B4C  
                                    l4071 17B0                                      l4047 1770  
                                    l4151 1BF4                                      l4127 1B94  
                                    l4065 17A0                                      l4145 1BDC  
                                    l4059 1790                                      l4139 1BC4  
                                    l4077 17C2                                      l4325 23F0  
                                    l4309 2360                                      l4415 188C  
                                    l4193 22A2                                      l4521 1E24  
                                    l4513 1E06                                      l4433 1900  
                                    l4425 18CC                                      l4361 1A22  
                                    l4353 19FA                                      l4195 22AA  
                                    l4531 1E44                                      l4507 1DF6  
                                    l4611 111A                                      l4603 10E2  
                                    l4451 226E                                      l4347 19B4  
                                    l4445 25AA                                      l4621 1142  
                                    l4613 1122                                      l4605 10FC  
                                    l4285 15BC                                      l4429 18EE  
                                    l4461 1D04                                      l4703 141E  
                                    l4519 1E1C                                      l4535 1E4E  
                                    l4615 112A                                      l4607 110E  
                                    l4545 2128                                      l4721 14A8  
                                    l4617 1132                                      l4609 1114  
                                    l4625 114A                                      l4289 1670  
                                    l4481 0E6C                                      l4473 0D1C  
                                    l4393 230A                                      l4491 2530  
                                    l4715 147A                                      l4539 1E5C  
                                    l4619 113A                                      l4627 117C  
                                    l4563 0F6C                                      l4475 0D9E  
                                    l3907 24A0                                      l4557 2172  
                                    l4709 144C                                      l4653 1C60  
                                    l4661 1C96                                      l4581 1076  
                                    l4741 11C2                                      l4727 14D6  
                                    l4655 1C6A                                      l4647 1C34  
                                    l4823 1F0E                                      l4591 109C  
                                    l4583 107C                                      l4479 0E66  
                                    l4751 1208                                      l4743 11D0  
                                    l4593 10A4                                      l4585 1084  
                                    l4761 125A                                      l4753 1216  
                                    l4745 11DE                                      l3963 168A  
                                    l4691 13C2                                      l4587 108C  
                                    l4579 1070                                      l4763 1268  
                                    l4755 1224                                      l4747 11EC  
                                    l4771 12F0                                      l4739 11B4  
                                    l3981 16BA                                      l3949 25EC  
                                    l4589 1094                                      l4597 10AC  
                                    l4765 127E                                      l4757 1232  
                                    l4749 11FA                                      _BIE0 000DFA  
                                    l3975 16AA                                      l4599 10DE  
                                    l4759 1240                                      l4839 23A2  
                                    l4863 1EB4                                      l3993 16DA  
                                    l3969 169A                                      l4697 13F0  
                                    l4769 1294                                      l4873 1ED6  
                                    l3987 16CA                                      l3999 16EA  
                       _MOC_Frame_Counter 26FE                                      _LATA 000F89  
                                    _LATB 000F8A                                      u3015 1008  
                                    _LATC 000F8B                                      _LATD 000F8C  
                                    _LATE 000F8D                                      u3060 1C9E  
                                    u2195 2576                                      u2196 2578  
                                    u2550 22AE                                      u2615 1592  
                                    _IPR3 000FA5                                      _IPEN 007E87  
                                    _PIE3 000FA3                                      u2730 231A  
                                    u2770 181A                                      _PEIE 007F96  
                                    u2780 1832                                      _LOCK 003A  
                                    u2950 1E28                                      u2776 181C  
                                    u2786 1834                                      _PIR3 000FA4  
                                    _RCON 000FD0               ??_FRAME_AccelerometerStatus 000A  
                                    _Dane 00D0                           __end_of_ISR_low 0C5E  
                        LED_Control@diode 0006                      FRAME_AnalogValue@set 0008  
                      ?_MOC_Frame_Counter 0006                                      _main 1E66  
                        LED_Control@color 000A                           __end_of_NVMInit 243E  
                         __end_of_NVMRead 25B4                                      fsr1h 000FE2  
                                    fsr2h 000FDA                                      indf1 000FE7  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    fsr2l 000FD9                                      btemp 005A  
                          _CAN_SetupClock 2612                                      prodh 000FF4  
                                    prodl 000FF3                     __end_of_CAN_SetupMask 20BE  
           __size_of_TMR1_Update_flag_Get 000A                                      start 0C5E  
           __size_of_TMR1_Update_flag_Set 000A                        __size_of_RADAR_Use 000C  
                      __size_of_LED_Error 001E                             __CFG_IESO$OFF 000000  
                      __size_of_LED_Right 004C             __size_of_FRAME_HandleCanFrame 01F8  
                           _LED_Light_Pos 1BFE                             __CFG_MCLRE$ON 000000  
                            ___param_bank 000000                       ??_MOC_Frame_Counter 0008  
              ??_MOC_Aktualna_Temperatura 0008         FRAME_HandleCanFrame@identyfikator 0019  
                     __size_of_FLASH_Read 0016                        __size_of_INI_Timer 0018  
               __end_of_FRAME_MapPosition 27AA                             _NeightAdress1 004B  
                           _NeightAdress2 0058                             _NeightAdress3 0049  
                           _NeightAdress4 0047                             _NeightAdress5 0045  
                           _NeightAdress6 0043                             _NeightAdress7 0041  
                           _NeightAdress8 003F                          __end_of_LED_Left 2404  
           __size_of_MOCK_PrzyspieszenieX 000A             __size_of_MOCK_PrzyspieszenieY 000A  
           __size_of_MOCK_PrzyspieszenieZ 000A                     ReadfromEEPROM@Address 0006  
                                   _B0CON 000E20                                     _B1CON 000E30  
                                   _B2CON 000E40                                     _B3CON 000E50  
                                   _B4CON 000E60                                     _B5CON 000E70  
                        __end_of_LOCK_Get 27A8                                     ?_main 0001  
                        __end_of_LOCK_Set 279E                           __end_of___awdiv 1E66  
                                   _EEADR 000FA9                                     _BSEL0 000DF8  
                         ___awdiv@divisor 0008                                     _T1CON 000FCD  
                                   _IRCF0 007E9C                                     _IRCF1 007E9D  
       FRAME_ExcitationMultiplier@message 0006                                     _IRCF2 007E9E  
                         __end_of___lwdiv 22DE                                     i1l783 0C4E  
                     __size_of_FRAME_Plot 0058                           ___awdiv@counter 000A  
                                   _MSEL0 000DF0                                     _MSEL1 000DF1  
                                   _MSEL2 000DF2                                     _MSEL3 000DF3  
                                   _TMR1H 000FCF                                     _TMR1L 000FCE  
                                   _TRISA 000F92                                     _TRISB 000F93  
                                   _TRISC 000F94                                     _TRISD 000F95  
                                   _TRISE 000F96                             __CFG_PWRT$OFF 000000  
                                   _Flagi 00C6                    ?_CAN_MoveBuffIntoFrame 0006  
                           __CFG_WRT0$OFF 000000                __size_of_FRAME_AnalogValue 0002  
                           __CFG_WRT1$OFF 000000                             __CFG_WRT2$OFF 000000  
                           __CFG_WRT3$OFF 000000                            __CFG_EBTR0$OFF 000000  
                          __CFG_FCMEN$OFF 000000                            __CFG_EBTR1$OFF 000000  
                          __CFG_EBTR2$OFF 000000                            __CFG_EBTR3$OFF 000000  
                        __end_of_ISR_high 27A4                             __CFG_WRTB$OFF 000000  
                           __CFG_WRTC$OFF 000000                             __CFG_WRTD$OFF 000000  
               __end_of_MOC_Frame_Counter 270C                            __CFG_EBTRB$OFF 000000  
                 i1TMR1_Update_flag_Set@a 0001                              ?_MOC_NOTWORK 0006  
               __size_of_ReadDataToEEPROM 018E                          __end_of_NVMWrite 24AA  
                        __end_of_NVMalloc 254C                                     tablat 000FF5  
                  __end_of_CAN_SetupClock 263A                                     ttemp5 005B  
                                   ttemp6 005E                                     ttemp7 0062  
                                   status 000FD8                                     wtemp8 005B  
                       __end_of_CAN_GenID 1FD4                            __CFG_PBADEN$ON 000000  
                     __size_of_LED_Update 007A                            ?_LED_Light_Pos 000D  
                        _TMR1_Timer_reset 263A                         __end_of_CAN_Setup 2180  
                           _INI_LED_Start 25B4                     _FRAME_ExcitationValue 243E  
        FRAME_AccelerometerStatus@message 0008                           __initialization 2180  
                     __size_of_INI_OUTPUT 0020                          CAN_GenID@frameID 0008  
                            __end_of_main 1EE2                    ??_FRAME_AveragingTimes 0008  
              __size_of_FRAME_DeviceReset 0148                  ?_FRAME_AdressOfNeighbors 0006  
                  __size_of_WritetoEEPROM 0034                          CAN_GenID@message 0006  
               _FRAME_AccelerometerStatus 1FD4                                    ??_main 002B  
                  CAN_MoveBuffIntoFrame@i 000A                             __activetblptr 000002  
                            NVMWrite@addr 000B                          _TMR1_Update_flag 0033  
                 WritetoEEPROM@GIE_Status 0035                     __end_of_IsInNeighbors 1BFE  
                         _wartosciSasiada 00D4                         __end_of_RADAR_Use 2734  
                               ??_INI_All 000F                         __end_of_LED_Error 26BE  
                       __end_of_LED_Right 2378                      WritetoEEPROM@Address 0006  
         __size_of_MOCK_Klikniecie_Spadek 000A                                 ??_ISR_low 0003  
                               ??_NVMInit 000C                                 ??_NVMRead 000E  
                                  _CANCON 000F6F                                    _EEADRH 000FAA  
                                  _EEDATA 000FA8                                    _EECON2 000FA7  
                        ___awdiv@dividend 0006               FRAME_ExcitationMultiplier@i 0009  
                                  _CIOCON 000F73                           __CFG_BBSIZ$1024 000000  
                       __end_of_INI_Timer 26D6                                    i1l3873 0C4C  
                                  _TABLAT 000FF5                           ?_CAN_SetupClock 0001  
                                  _TBLPTR 000FF6                                    _RXB0D0 000F66  
                                  _TMR1IE 007CE8                                    _TMR1IF 007CF0  
                                  _TMR1IP 007CF8                                    _TMR1ON 007E68  
            ??_FRAME_ExcitationMultiplier 0008                            ?_INI_LED_Start 0001  
                          __CFG_XINST$OFF 000000                                 ??___awdiv 000A  
                          __CFG_STVREN$ON 000000                          LED_Light_Pos@pos 000D  
              __size_of_FRAME_MapPosition 0002                                 ??___lwdiv 000A  
                                  clear_0 21A8                                    clear_1 21BA  
                                  clear_2 21C6                          ___awdiv@quotient 000C  
                            NVMalloc@size 0006                ??_FRAME_PrzypisanieDokarty 0008  
                ??i1_TMR1_Update_flag_Set 0003                           __CFG_BOREN$BOHW 000000  
                 __size_of_ReadfromEEPROM 0012                              __pdataCOMRAM 004D  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8                              ??_FLASH_Read 000A  
     __size_of_FRAME_ExcitationMultiplier 004E                __size_of_MOC_Frame_Counter 000E  
                    __size_of_LED_Control 0152                             _WritetoEEPROM 254C  
                FRAME_MapPosition@message 0006                            FLASH_Read@addr 0006  
                   TMR1_Update_flag_Set@a 0006                                __accesstop 0060  
                 __end_of__initialization 21CC                              ??_FRAME_Plot 000F  
                     ISR_low@ramkaStanuU8 0038                                 ?_LED_Left 0006  
                         ??_LED_Light_Pos 0011                             ___rparam_used 000001  
                  ?_FRAME_ExcitationValue 0006                                 ?_LOCK_Get 0001  
                               ?_LOCK_Set 0001           __end_of_FRAME_AdressOfNeighbors 0F2E  
                  _MOCK_Klikniecie_Spadek 2766                            __pcstackCOMRAM 0001  
                               LED_Left@a 0006                                 LED_Left@b 0008  
                     _INI_GlobalInterrupt 270C                                 ?_ISR_high 0001  
                      __end_of_FLASH_Read 26EC                                 ?_NVMWrite 0009  
                               ?_NVMalloc 0006                              ??_LED_Update 0018  
             __end_of_TRM_DataTransmition 23C2                     _FRAME_SoftwareVersion 20BE  
                      __end_of_FRAME_Plot 228C                              ??_INI_OUTPUT 0006  
                               LOCK_Set@k 0006                   FRAME_AxisStatus@message 0006  
             IsInNeighbors@message_adress 0006                            ?_WritetoEEPROM 0006  
                    ?_INI_GlobalInterrupt 0001                          _ReadDataToEEPROM 1378  
               __size_of_FRAME_AxisStatus 0036                                __pbssBANK0 0060  
             __size_of_CAN_SetupFilter_Ne 0096                             NVMWrite@count 000D  
                    __size_of_MOC_NOTWORK 0008                           ??_INI_LED_Start 000B  
                              ??_LED_Left 0008                                ??_LOCK_Get 0006  
                              ??_LOCK_Set 0006                        __end_of_LED_Update 1F5C  
                      __end_of_INI_OUTPUT 26A0                                ??_ISR_high 0001  
                     TMR1_Timer_reset@t1H 0002                       TMR1_Timer_reset@t1L 0001  
                                 _ECANCON 000F77                                   _CANSTAT 000F6E  
                              ??_NVMWrite 000F                   ??_CAN_MoveBuffIntoFrame 000A  
                              ??_NVMalloc 000A              __end_of_TMR1_Update_flag_Get 2784  
            __end_of_TMR1_Update_flag_Set 277A           __size_ofi1_TMR1_Update_flag_Set 000A  
            __end_of_FRAME_HandleCanFrame 1378                                   _INI_All 265E  
                __end_of_TMR1_Timer_reset 265E                                   _RXB0DLC 000F65  
                                 _RXB0CON 000F60                                   _RXB1CON 000F50  
                   ??_INI_GlobalInterrupt 0006                                   _TXB0CON 000F40  
                                 _ISR_low 0C18                                   _RXFCON0 000DD4  
                                 _RXFCON1 000DD5                                   _NVMInit 2404  
                                 _NVMRead 2580                                   _DaneCan 002B  
            __end_of_MOCK_PrzyspieszenieX 2766              __end_of_MOCK_PrzyspieszenieY 275C  
            __end_of_MOCK_PrzyspieszenieZ 2752        __end_of_FRAME_ExcitationMultiplier 232C  
              _FRAME_ExcitationMultiplier 22DE               FRAME_HandleCanFrame@message 0012  
                                 __Hparam 0000          ??_MOC_Wynikowa_wartosc_roznicowa 0008  
         ?_MOC_Wynikowa_wartosc_roznicowa 0006                                   __Lparam 0000  
                  __size_of_CAN_TakeFrame 0252                                 _CAN_GenID 1F5C  
                                 ___awdiv 1DE2                                 _CAN_Setup 2124  
                  __size_of_CAN_SendFrame 0172                                   ___lwdiv 228C  
                       LED_Light_Pos@pos2 0014                                   __pcinit 2180  
                                 __ramtop 0D00    FRAME_DataUpdateAndChangeOption@message 0006  
                                 __ptext0 1E66                                   __ptext1 2378  
                                 __ptext2 1180                                   __ptext3 26A0  
                                 __ptext4 20BE                                   __ptext5 1912  
                                 __ptext6 2734                                   __ptext7 278E  
                                 __ptext8 26FE                                   __ptext9 273E  
                  ?_FRAME_SoftwareVersion 0006                            _ReadfromEEPROM 26EC  
                         ??_WritetoEEPROM 0009                    __size_of_CAN_SetupMask 0074  
       __size_of_MOC_Aktualna_Temperatura 000A            FRAME_AdressOfNeighbors@nrRamki 0008  
               ?_MOC_Aktualna_Temperatura 0006          __size_of_FRAME_AdressOfNeighbors 02CC  
                        ??_CAN_SetupClock 0006            FRAME_AdressOfNeighbors@message 0006  
                                 main@adr 00D2                                 _RADAR_Use 2728  
                               _LED_Error 26A0                            __pintcode_body 279E  
                               _LED_Right 232C                      end_of_initialization 21CC  
    FRAME_SensorExcitationStatus@statwect 0031                             __Lmediumconst 0000  
                                 int_func 279E                                 _INI_Timer 26BE  
                  i1_TMR1_Update_flag_Set 2784          TRM_DataTransmition@czujnikWeWyU8 0036  
                              ?_CAN_GenID 0006                                   postdec1 000FE5  
                                 postdec2 000FDD                                   postinc0 000FEE  
                                 postinc2 000FDE                                ?_CAN_Setup 0001  
           __size_of_FRAME_AveragingTimes 0036                    __end_of_ReadfromEEPROM 26FE  
                    CAN_SendFrame@message 000B                          NVMalloc@location 0008  
                           LED_Update@Red 0039                             _CAN_TakeFrame 0F2E  
                             NVMRead@addr 000A                             _CAN_SendFrame 1506  
                              ?_RADAR_Use 0001                                ?_LED_Error 0001  
                             NVMRead@dest 0008               FRAME_AdressOfNeighbors@kier 000E  
                              ?_LED_Right 0006                          _FRAME_AxisStatus 24AA  
                 ??_FRAME_ExcitationValue 0008                                ?_INI_Timer 0001  
                 ?_MOCK_Klikniecie_Spadek 0006                           _ramkaCanRxKarty 0060  
                    _TMR1_Update_flag_Get 277A                           _ramkaCanTxKarty 00B5  
                    _TMR1_Update_flag_Set 2770                             _CAN_SetupMask 204A  
                       __size_of_LED_Left 0042                      _FRAME_HandleCanFrame 1180  
                  __size_of_IsInNeighbors 00CA                         __size_of_LOCK_Get 0004  
                       __size_of_LOCK_Set 0008                         _WriteDataToEEPROM 1A36  
                __end_of_ReadDataToEEPROM 1506                            CAN_TakeFrame@k 0013  
                      ?_WriteDataToEEPROM 0001                           ?_ReadfromEEPROM 0006  
                           __pidataCOMRAM 271A                         __size_of_ISR_high 1B9C  
                    _MOCK_PrzyspieszenieX 275C                      _MOCK_PrzyspieszenieY 2752  
                    _MOCK_PrzyspieszenieZ 2748                                LED_Right@a 0006  
                              LED_Right@b 000A                     MOC_Frame_Counter@zeta 004D  
                       __size_of_NVMWrite 0036                             ??_LED_Control 0008  
                     ??_WriteDataToEEPROM 000F                         __size_of_NVMalloc 0036  
                     start_initialization 2180                            ?_CAN_TakeFrame 000E  
                               _Init_Data 0056                            ?_CAN_SendFrame 000B  
         FRAME_SensorExcitationStatus@tru 000C            __end_of_MOCK_Klikniecie_Spadek 2770  
                        __CFG_OSC$IRCIO67 000000         __size_of_FRAME_PrzypisanieDokarty 009E  
               ?_FRAME_PrzypisanieDokarty 0006                     ?_TMR1_Update_flag_Get 0006  
                   ?_TMR1_Update_flag_Set 0006                            ?_CAN_SetupMask 0001  
                   __end_of_LED_Light_Pos 1CAE                     ?_FRAME_HandleCanFrame 0012  
               __end_of_WriteDataToEEPROM 1B34                               ??_CAN_GenID 0009  
                             ??_CAN_Setup 0006                          __CFG_LPT1OSC$OFF 000000  
                   ?_MOCK_PrzyspieszenieX 0006                     ?_MOCK_PrzyspieszenieY 0006  
                   ?_MOCK_PrzyspieszenieZ 0006                  CAN_MoveBuffIntoFrame@Buf 0008  
    __end_of_FRAME_SensorExcitationStatus 1A36     __size_of_FRAME_SensorExcitationStatus 0124  
                CAN_MoveBuffIntoFrame@Ram 0006              _FRAME_SensorExcitationStatus 1912  
          __size_of_CAN_MoveBuffIntoFrame 002A                               __pbssBIGRAM 00D4  
           __end_of_CAN_MoveBuffIntoFrame 2612                           _Fulfillment_Lvl 0053  
                             __pbssCOMRAM 002B                                  ?_INI_All 0001  
                 _FRAME_AdressOfNeighbors 0C62                             __pcstackBANK0 00D2  
                           _IsInNeighbors 1B34                         ?_TMR1_Timer_reset 0001  
                         _ustawieniaKarty 003D                               _BRGCON1bits 000F70  
                             _BRGCON2bits 000F71                               _BRGCON3bits 000F72  
                                ?_ISR_low 0001   __end_of_FRAME_DataUpdateAndChangeOption 2234  
__size_of_FRAME_DataUpdateAndChangeOption 005A         ??_FRAME_DataUpdateAndChangeOption 0008  
        ?_FRAME_DataUpdateAndChangeOption 0006           _FRAME_DataUpdateAndChangeOption 21DA  
                           ??_MOC_NOTWORK 0008                __end_of_CAN_SetupFilter_Ne 1DE2  
                                ?_NVMInit 0001                                  ?_NVMRead 0008  
                      ??_TMR1_Timer_reset 0001                               ??_RADAR_Use 0006  
                             ??_LED_Error 000B                            NVMWrite@source 0009  
                             ??_LED_Right 0008              __size_of_TRM_DataTransmition 004A  
                     __end_of_LED_Control 17CA               ?_FRAME_ExcitationMultiplier 0006  
                             ??_INI_Timer 0006                     __end_of_INI_LED_Start 25E8  
                        ___lwdiv@dividend 0006                                 __pintcode 0C08  
                                ?___awdiv 0006                   ??_FRAME_SoftwareVersion 0008  
        __end_of_MOC_Aktualna_Temperatura 2748                                  ?___lwdiv 0006  
                       FRAME_Plot@message 000D                               __pintcodelo 0C18  
             __end_of_INI_GlobalInterrupt 271A                           ??_CAN_TakeFrame 0010  
           ?_FRAME_SensorExcitationStatus 0008    __end_of_MOC_Wynikowa_wartosc_roznicowa 273E  
 __size_of_MOC_Wynikowa_wartosc_roznicowa 000A            _MOC_Wynikowa_wartosc_roznicowa 2734  
                             _COMSTATbits 000F74                            ?_IsInNeighbors 0006  
                         ??_CAN_SendFrame 000D                          ___lwdiv@quotient 000B  
                 ?i1_TMR1_Update_flag_Set 0001               FRAME_AveragingTimes@message 0006  
                  ??_TMR1_Update_flag_Get 0008                    ??_TMR1_Update_flag_Set 0008  
                         ??_CAN_SetupMask 0006                                  _LED_Left 23C2  
                  ??_FRAME_HandleCanFrame 0014                      CAN_TakeFrame@message 000E  
                     __end_of_MOC_NOTWORK 2796                                  _LOCK_Get 27A4  
                    CAN_TakeFrame@tempCON 0012                                  _LOCK_Set 2796  
              __size_of_WriteDataToEEPROM 00FE                                  _RXB0EIDH 000F63  
                                _RXB0EIDL 000F64                                  _RCONbits 000FD0  
                        __CFG_WDTPS$32768 000000                                  _RXB0SIDH 000F61  
                                _RXB0SIDL 000F62                                  _RXF0EIDH 000F02  
                                _RXF0EIDL 000F03                                  _RXF1EIDH 000F06  
                                _RXF1EIDL 000F07                                  _RXF2EIDH 000F0A  
                                _RXF2EIDL 000F0B                                  _RXF3EIDH 000F0E  
                                _RXF3EIDL 000F0F                                  _RXF4EIDH 000F12  
                                _RXF4EIDL 000F13                                  _RXF5EIDH 000F16  
                                _RXF5EIDL 000F17                                  _RXF6EIDH 000D62  
                                _RXF6EIDL 000D63                                  _RXF0SIDH 000F00  
                                _RXF7EIDH 000D66                                  _RXF0SIDL 000F01  
                                _RXF7EIDL 000D67                                  _RXF1SIDH 000F04  
                                _RXF8EIDH 000D6A                                  _RXF1SIDL 000F05  
                                _RXF8EIDL 000D6B                                  _RXF2SIDH 000F08  
                                _RXF9EIDH 000D72                                  _RXF2SIDL 000F09  
                                _RXF9EIDL 000D73                                  _RXF3SIDH 000F0C  
                                _RXF3SIDL 000F0D                                  _ISR_high 0C08  
                                _RXF4SIDH 000F10                                  _RXF4SIDL 000F11  
                                _RXF5SIDH 000F14                                  _RXF5SIDL 000F15  
                                _RXF6SIDH 000D60                                  _RXF6SIDL 000D61  
                                _RXM0EIDH 000F1A                                  _RXF7SIDH 000D64  
                                _RXM0EIDL 000F1B                                  _RXF7SIDL 000D65  
                                _RXM1EIDH 000F1E                                  _RXF8SIDH 000D68  
                                _RXM1EIDL 000F1F                                  _RXF8SIDL 000D69  
                                _RXF9SIDH 000D70                    ??_MOCK_PrzyspieszenieX 0008  
                  ??_MOCK_PrzyspieszenieY 0008                                  _RXF9SIDL 000D71  
                  ??_MOCK_PrzyspieszenieZ 0008                                  _RXFBCON0 000DE0  
                                _RXFBCON1 000DE1                                  _RXFBCON2 000DE2  
                                _RXFBCON3 000DE3                                  _RXFBCON4 000DE4  
                                _RXM0SIDH 000F18                                  _RXM0SIDL 000F19  
                                _RXM1SIDH 000F1C                                  _RXM1SIDL 000F1D  
                __end_of_FRAME_AxisStatus 24E0                                  _NVMWrite 2474  
                                _NVMalloc 2516                 ??_FRAME_AdressOfNeighbors 000A  
                        _DetectorLedRadar 00CB                               _LED_Control 1678  
                        __size_of_INI_All 0022              FRAME_ExcitationValue@message 0006  
                   __end_of_WritetoEEPROM 2580            __end_ofi1_TMR1_Update_flag_Set 278E  
                          _nextEEPosition 002F                                 copy_data0 2194  
                        __size_of_ISR_low 0046        __size_of_FRAME_AccelerometerStatus 0076  
            __end_of_FRAME_AveragingTimes 2516                          __size_of_NVMInit 003A  
                        __size_of_NVMRead 0034                ?_FRAME_AccelerometerStatus 0008  
          __size_of_FRAME_ExcitationValue 0036             __end_of_FRAME_ExcitationValue 2474  
                              _EECON1bits 000FA6                                  __Hrparam 0000  
                            _RXB0SIDLbits 000F62                          ??_ReadfromEEPROM 0008  
                                __Lrparam 0000                         ?_ReadDataToEEPROM 0001  
                        __size_of___awdiv 0084                          __size_of___lwdiv 0052  
                      ??_ReadDataToEEPROM 000E                           ??_IsInNeighbors 0008  
                _MOC_Aktualna_Temperatura 273E           FRAME_PrzypisanieDokarty@message 0006  
                      LED_Light_Pos@flage 0016                        LED_Light_Pos@color 0011  
        __end_of_FRAME_PrzypisanieDokarty 1D4C                              _RXF0SIDLbits 000F01  
                FRAME_AnalogValue@message 0006                           ___lwdiv@divisor 0008  
                            _RXF1SIDLbits 000F05                                _FLASH_Read 26D6  
                         ___lwdiv@counter 000A                                  __ptext10 2796  
                                __ptext11 27A4                                  __ptext20 2474  
                                __ptext12 1B34                                  __ptext21 254C  
                                __ptext13 1CAE                                  __ptext30 275C  
                                __ptext22 21DA                                  __ptext14 2234  
                                __ptext31 2766                                  __ptext23 24AA  
                                __ptext15 27A8                                  __ptext40 1EE2  
                                __ptext32 1506                                  __ptext24 24E0  
                                __ptext16 243E                                  __ptext41 1BFE  
                                __ptext33 1F5C                                  __ptext25 27AA  
                                __ptext17 22DE                                  __ptext50 2516  
                                __ptext42 228C                                  __ptext34 0F2E  
                                __ptext26 0C62                                  __ptext18 17CA  
                                __ptext51 26BE                                  __ptext43 232C  
                                __ptext35 1DE2                                  __ptext27 1FD4  
                                __ptext19 1A36                                  __ptext60 26D6  
                                __ptext52 2680                                  __ptext44 23C2  
                                __ptext36 25E8                                  __ptext28 2748  
          ??_FRAME_SensorExcitationStatus 000A                                  __ptext53 25B4  
                                __ptext45 265E                                  __ptext37 2770  
                                __ptext29 2752                                  __ptext62 2784  
                                __ptext54 1678                                  __ptext46 1378  
                                __ptext38 277A                                  __ptext63 263A  
                                __ptext55 270C                                  __ptext47 2580  
                                __ptext39 2728                                  __ptext56 2124  
                                __ptext48 26EC                                  __ptext57 204A  
                                __ptext49 2404                                  __ptext58 1D4C  
                                __ptext59 2612             TRM_DataTransmition@canMessage 001A  
                            _RXF2SIDLbits 000F09                               _MOC_NOTWORK 278E  
                            _RXF3SIDLbits 000F0D                 FRAME_HandleCanFrame@ident 0017  
                            _RXF4SIDLbits 000F11                  FRAME_DeviceReset@message 000F  
       __end_of_FRAME_AccelerometerStatus 204A                              _RXF5SIDLbits 000F15  
                              _FRAME_Plot 2234                             __size_of_main 007C  
                            _RXF6SIDLbits 000D61                              _RXF7SIDLbits 000D65  
                 __size_of_CAN_SetupClock 0028                              _RXF8SIDLbits 000D69  
                            _RXF9SIDLbits 000D71                                  int$flags 005A  
                     _TRM_DataTransmition 2378                               _RXB0DLCbits 000F65  
                              _LED_Update 1EE2                               _RXB0CONbits 000F60  
                              _INTCONbits 000FF2                                _INI_OUTPUT 2680  
                       _FRAME_AnalogValue 27AA                      ?_TRM_DataTransmition 0001  
            FRAME_SoftwareVersion@message 0006                                  intlevel1 0000  
                                intlevel2 0000                           _czujnikiNaMapie 00CE  
                      ?_FRAME_AnalogValue 0006       FRAME_SensorExcitationStatus@message 0008  
                             _TXB0CONbits 000F40                       ??_FRAME_AnalogValue 000A  
               __size_of_TMR1_Timer_reset 0024                        _CAN_SetupFilter_Ne 1D4C  
                LED_Light_Pos@fulfillment 000F                      _FRAME_AveragingTimes 24E0  
                     ?_CAN_SetupFilter_Ne 0001            __size_of_FRAME_SoftwareVersion 0066  
                       _FRAME_DeviceReset 17CA             __end_of_FRAME_SoftwareVersion 2124  
                      ?_FRAME_DeviceReset 000F                           LED_Update@Green 0055  
               __end_of_FRAME_AnalogValue 27AC                    __size_of_LED_Light_Pos 00B0  
                             ?_FLASH_Read 0006                     _CAN_MoveBuffIntoFrame 25E8  
                              _WDTCONbits 000FD1                       ??_FRAME_DeviceReset 0011  
                   ??_TRM_DataTransmition 001A                  _FRAME_PrzypisanieDokarty 1CAE  
                  LED_Light_Pos@LED_array 0012                      ??_CAN_SetupFilter_Ne 0006  
                          LED_Update@pos1 0051                            LED_Update@pos2 004F  
                             ?_FRAME_Plot 000D  
