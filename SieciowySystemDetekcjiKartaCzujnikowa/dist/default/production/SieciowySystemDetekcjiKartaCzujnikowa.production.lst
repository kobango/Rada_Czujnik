

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Jul 23 13:26:19 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4680
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1
    56                           	psect	text44,global,reloc=2,class=CODE,delta=1
    57                           	psect	text45,global,reloc=2,class=CODE,delta=1
    58                           	psect	text46,global,reloc=2,class=CODE,delta=1
    59                           	psect	text47,global,reloc=2,class=CODE,delta=1
    60                           	psect	text48,global,reloc=2,class=CODE,delta=1
    61                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    62                           	psect	text50,global,reloc=2,class=CODE,delta=1
    63                           	psect	text51,global,reloc=2,class=CODE,delta=1
    64                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    65                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    66                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    67                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    68                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    69  0000                     
    70                           ; Version 2.05
    71                           ; Generated 20/12/2018 GMT
    72                           ; 
    73                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    74                           ; All rights reserved.
    75                           ; 
    76                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    77                           ; 
    78                           ; Redistribution and use in source and binary forms, with or without modification, are
    79                           ; permitted provided that the following conditions are met:
    80                           ; 
    81                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    82                           ;        conditions and the following disclaimer.
    83                           ; 
    84                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    85                           ;        of conditions and the following disclaimer in the documentation and/or other
    86                           ;        materials provided with the distribution.
    87                           ; 
    88                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    89                           ;        software without specific prior written permission.
    90                           ; 
    91                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    92                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    93                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    94                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    95                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    96                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    97                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    98                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    99                           ; 
   100                           ; 
   101                           ; Code-generator required, PIC18F4680 Definitions
   102                           ; 
   103                           ; SFR Addresses
   104  0000                     
   105                           	psect	idataCOMRAM
   106  0014C6                     __pidataCOMRAM:
   107                           	opt callstack 0
   108                           
   109                           ;initializer for MOC_Frame_Counter@zeta
   110  0014C6  0011               	dw	17
   111                           
   112                           ;initializer for LED_Update@pos2
   113  0014C8  0001               	dw	1
   114                           
   115                           ;initializer for LED_Update@pos1
   116  0014CA  0001               	dw	1
   117                           
   118                           ;initializer for _Fulfillment_Lvl
   119  0014CC  0014               	dw	20
   120                           
   121                           ;initializer for LED_Update@Green
   122  0014CE  01                 	db	1
   123  0000                     _RXFCON0	set	3540
   124  0000                     _MSEL3	set	3571
   125  0000                     _MSEL2	set	3570
   126  0000                     _MSEL1	set	3569
   127  0000                     _MSEL0	set	3568
   128  0000                     _BIE0	set	3578
   129  0000                     _BSEL0	set	3576
   130  0000                     _B5CON	set	3696
   131  0000                     _B4CON	set	3680
   132  0000                     _B3CON	set	3664
   133  0000                     _B2CON	set	3648
   134  0000                     _B1CON	set	3632
   135  0000                     _B0CON	set	3616
   136  0000                     _TXB0CONbits	set	3904
   137  0000                     _RXF3EIDL	set	3855
   138  0000                     _RXF3EIDH	set	3854
   139  0000                     _RXF3SIDL	set	3853
   140  0000                     _RXF3SIDH	set	3852
   141  0000                     _RXF2EIDL	set	3851
   142  0000                     _RXF2EIDH	set	3850
   143  0000                     _RXF2SIDLbits	set	3849
   144  0000                     _RXF2SIDL	set	3849
   145  0000                     _RXF2SIDH	set	3848
   146  0000                     _RXF1EIDL	set	3847
   147  0000                     _RXF1EIDH	set	3846
   148  0000                     _RXF1SIDLbits	set	3845
   149  0000                     _RXF1SIDL	set	3845
   150  0000                     _RXF1SIDH	set	3844
   151  0000                     _RXF0EIDL	set	3843
   152  0000                     _RXF0EIDH	set	3842
   153  0000                     _RXF0SIDLbits	set	3841
   154  0000                     _RXF0SIDL	set	3841
   155  0000                     _RXF0SIDH	set	3840
   156  0000                     _RXM1EIDL	set	3871
   157  0000                     _RXM1EIDH	set	3870
   158  0000                     _RXM1SIDL	set	3869
   159  0000                     _RXM1SIDH	set	3868
   160  0000                     _RXM0EIDL	set	3867
   161  0000                     _RXM0EIDH	set	3866
   162  0000                     _RXM0SIDL	set	3865
   163  0000                     _RXM0SIDH	set	3864
   164  0000                     _RXB1CON	set	3920
   165  0000                     _TXB0CON	set	3904
   166  0000                     _INTCONbits	set	4082
   167  0000                     _WDTCONbits	set	4049
   168  0000                     _RCONbits	set	4048
   169  0000                     _TRISC	set	3988
   170  0000                     _LATC	set	3979
   171  0000                     _T1CON	set	4045
   172  0000                     _TMR1H	set	4047
   173  0000                     _TMR1L	set	4046
   174  0000                     _LATE	set	3981
   175  0000                     _LATA	set	3977
   176  0000                     _LATB	set	3978
   177  0000                     _LATD	set	3980
   178  0000                     _TRISD	set	3989
   179  0000                     _TRISE	set	3990
   180  0000                     _TRISB	set	3987
   181  0000                     _TRISA	set	3986
   182  0000                     _RXB0DLCbits	set	3941
   183  0000                     _RXB0DLC	set	3941
   184  0000                     _RXB0SIDH	set	3937
   185  0000                     _RXB0SIDLbits	set	3938
   186  0000                     _RXB0SIDL	set	3938
   187  0000                     _RXB0EIDH	set	3939
   188  0000                     _RXB0EIDL	set	3940
   189  0000                     _COMSTATbits	set	3956
   190  0000                     _RXB0CONbits	set	3936
   191  0000                     _BRGCON3bits	set	3954
   192  0000                     _BRGCON2bits	set	3953
   193  0000                     _BRGCON1bits	set	3952
   194  0000                     _CIOCON	set	3955
   195  0000                     _ECANCON	set	3959
   196  0000                     _PIR3	set	4004
   197  0000                     _IPR3	set	4005
   198  0000                     _PIE3	set	4003
   199  0000                     _RXB0CON	set	3936
   200  0000                     _CANSTAT	set	3950
   201  0000                     _CANCON	set	3951
   202  0000                     _RCON	set	4048
   203  0000                     _RXB0D0	set	3942
   204  0000                     _TMR1IF	set	31984
   205  0000                     _TMR1IP	set	31992
   206  0000                     _PEIE	set	32662
   207  0000                     _IPEN	set	32391
   208  0000                     _TMR1ON	set	32360
   209  0000                     _TMR1IE	set	31976
   210  0000                     _IRCF0	set	32412
   211  0000                     _IRCF1	set	32413
   212  0000                     _IRCF2	set	32414
   213                           
   214                           ; #config settings
   215  0000                     
   216                           	psect	cinit
   217  000FEA                     __pcinit:
   218                           	opt callstack 0
   219  000FEA                     start_initialization:
   220                           	opt callstack 0
   221  000FEA                     __initialization:
   222                           	opt callstack 0
   223                           
   224                           ; Initialize objects allocated to COMRAM (9 bytes)
   225                           ; load TBLPTR registers with __pidataCOMRAM
   226  000FEA  0EC6               	movlw	low __pidataCOMRAM
   227  000FEC  6EF6               	movwf	tblptrl,c
   228  000FEE  0E14               	movlw	high __pidataCOMRAM
   229  000FF0  6EF7               	movwf	tblptrh,c
   230  000FF2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   231  000FF4  6EF8               	movwf	tblptru,c
   232  000FF6  EE00  F050         	lfsr	0,__pdataCOMRAM
   233  000FFA  EE10 F009          	lfsr	1,9
   234  000FFE                     copy_data0:
   235  000FFE  0009               	tblrd		*+
   236  001000  CFF5 FFEE          	movff	tablat,postinc0
   237  001004  50E5               	movf	postdec1,w,c
   238  001006  50E1               	movf	fsr1l,w,c
   239  001008  E1FA               	bnz	copy_data0
   240                           
   241                           ; Clear objects allocated to BIGRAM (544 bytes)
   242  00100A  EE00  F0DB         	lfsr	0,__pbssBIGRAM
   243  00100E  EE12 F020          	lfsr	1,544
   244  001012                     clear_0:
   245  001012  6AEE               	clrf	postinc0,c
   246  001014  50E5               	movf	postdec1,w,c
   247  001016  50E1               	movf	fsr1l,w,c
   248  001018  E1FC               	bnz	clear_0
   249  00101A  50E2               	movf	fsr1h,w,c
   250  00101C  E1FA               	bnz	clear_0
   251                           
   252                           ; Clear objects allocated to BANK0 (123 bytes)
   253  00101E  EE00  F060         	lfsr	0,__pbssBANK0
   254  001022  0E7B               	movlw	123
   255  001024                     clear_1:
   256  001024  6AEE               	clrf	postinc0,c
   257  001026  06E8               	decf	wreg,f,c
   258  001028  E1FD               	bnz	clear_1
   259                           
   260                           ; Clear objects allocated to COMRAM (16 bytes)
   261  00102A  EE00  F040         	lfsr	0,__pbssCOMRAM
   262  00102E  0E10               	movlw	16
   263  001030                     clear_2:
   264  001030  6AEE               	clrf	postinc0,c
   265  001032  06E8               	decf	wreg,f,c
   266  001034  E1FD               	bnz	clear_2
   267  001036                     end_of_initialization:
   268                           	opt callstack 0
   269  001036                     __end_of__initialization:
   270                           	opt callstack 0
   271  001036  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   272  001038  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   273  00103A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   274  00103C  6EF8               	movwf	tblptru,c
   275  00103E  0100               	movlb	0
   276  001040  EF90  F009         	goto	_main	;jump to C main() function
   277                           
   278                           	psect	bssCOMRAM
   279  000040                     __pbssCOMRAM:
   280                           	opt callstack 0
   281  000040                     _DaneCan:
   282                           	opt callstack 0
   283  000040                     	ds	4
   284  000044                     _DetectorLedRadar:
   285                           	opt callstack 0
   286  000044                     	ds	3
   287  000047                     _TMR1_Update_flag:
   288                           	opt callstack 0
   289  000047                     	ds	2
   290  000049                     _Dane:
   291                           	opt callstack 0
   292  000049                     	ds	2
   293  00004B                     	ds	1
   294  00004C                     	ds	1
   295  00004D                     ISR_low@ramkaStanuU8:
   296                           	opt callstack 0
   297  00004D                     	ds	1
   298  00004E                     	ds	1
   299  00004F                     _LOCK:
   300                           	opt callstack 0
   301  00004F                     	ds	1
   302                           
   303                           	psect	dataCOMRAM
   304  000050                     __pdataCOMRAM:
   305                           	opt callstack 0
   306  000050                     MOC_Frame_Counter@zeta:
   307                           	opt callstack 0
   308  000050                     	ds	2
   309  000052                     LED_Update@pos2:
   310                           	opt callstack 0
   311  000052                     	ds	2
   312  000054                     LED_Update@pos1:
   313                           	opt callstack 0
   314  000054                     	ds	2
   315  000056                     _Fulfillment_Lvl:
   316                           	opt callstack 0
   317  000056                     	ds	2
   318  000058                     LED_Update@Green:
   319                           	opt callstack 0
   320  000058                     	ds	1
   321                           
   322                           	psect	bssBANK0
   323  000060                     __pbssBANK0:
   324                           	opt callstack 0
   325  000060                     _ramkaCanRxKarty:
   326                           	opt callstack 0
   327  000060                     	ds	85
   328  0000B5                     _ramkaCanTxKarty:
   329                           	opt callstack 0
   330  0000B5                     	ds	17
   331  0000C6                     _NeightAdress:
   332                           	opt callstack 0
   333  0000C6                     	ds	16
   334  0000D6                     _Flagi:
   335                           	opt callstack 0
   336  0000D6                     	ds	5
   337                           
   338                           	psect	bssBIGRAM
   339  0000DB                     __pbssBIGRAM:
   340                           	opt callstack 0
   341  0000DB                     _wartosciSasiada:
   342                           	opt callstack 0
   343  0000DB                     	ds	544
   344                           
   345                           	psect	cstackCOMRAM
   346  000001                     __pcstackCOMRAM:
   347                           	opt callstack 0
   348  000001                     TMR1_Timer_reset@t1L:
   349                           	opt callstack 0
   350  000001                     i1TMR1_Update_flag_Set@a:
   351                           	opt callstack 0
   352                           
   353                           ; 2 bytes @ 0x0
   354  000001                     	ds	1
   355  000002                     TMR1_Timer_reset@t1H:
   356                           	opt callstack 0
   357                           
   358                           ; 1 bytes @ 0x1
   359  000002                     	ds	1
   360  000003                     ??_ISR_low:
   361  000003                     
   362                           ; 1 bytes @ 0x2
   363  000003                     	ds	3
   364  000006                     ??_CAN_Setup:
   365  000006                     ?_TMR1_Update_flag_Get:
   366                           	opt callstack 0
   367  000006                     ?_LED_Right:
   368                           	opt callstack 0
   369  000006                     ?_LED_Left:
   370                           	opt callstack 0
   371  000006                     ?_MOC_Wynikowa_wartosc_roznicowa:
   372                           	opt callstack 0
   373  000006                     ?_MOC_Frame_Counter:
   374                           	opt callstack 0
   375  000006                     ?_MOC_Aktualna_Temperatura:
   376                           	opt callstack 0
   377  000006                     ?_MOC_NOTWORK:
   378                           	opt callstack 0
   379  000006                     ?_MOCK_PrzyspieszenieX:
   380                           	opt callstack 0
   381  000006                     ?_MOCK_PrzyspieszenieY:
   382                           	opt callstack 0
   383  000006                     ?_MOCK_PrzyspieszenieZ:
   384                           	opt callstack 0
   385  000006                     ?_MOCK_Klikniecie_Spadek:
   386                           	opt callstack 0
   387  000006                     ?___awdiv:
   388                           	opt callstack 0
   389  000006                     ?___lwdiv:
   390                           	opt callstack 0
   391  000006                     LOCK_Set@k:
   392                           	opt callstack 0
   393  000006                     CAN_MoveBuffIntoFrame@Ram:
   394                           	opt callstack 0
   395  000006                     CAN_GenID@message:
   396                           	opt callstack 0
   397  000006                     LED_Right@a:
   398                           	opt callstack 0
   399  000006                     LED_Left@a:
   400                           	opt callstack 0
   401  000006                     LED_Control@diode:
   402                           	opt callstack 0
   403  000006                     TMR1_Update_flag_Set@a:
   404                           	opt callstack 0
   405  000006                     FRAME_ExcitationValue@message:
   406                           	opt callstack 0
   407  000006                     FRAME_ExcitationMultiplier@message:
   408                           	opt callstack 0
   409  000006                     FRAME_AveragingTimes@message:
   410                           	opt callstack 0
   411  000006                     FRAME_AxisStatus@message:
   412                           	opt callstack 0
   413  000006                     FRAME_DeviceReset@message:
   414                           	opt callstack 0
   415  000006                     FRAME_MapPosition@message:
   416                           	opt callstack 0
   417  000006                     FRAME_SoftwareVersion@message:
   418                           	opt callstack 0
   419  000006                     FRAME_AnalogValue@message:
   420                           	opt callstack 0
   421  000006                     FRAME_PrzypisanieDokarty@message:
   422                           	opt callstack 0
   423  000006                     FRAME_AdressOfNeighbors@message:
   424                           	opt callstack 0
   425  000006                     ___awdiv@dividend:
   426                           	opt callstack 0
   427  000006                     ___lwdiv@dividend:
   428                           	opt callstack 0
   429                           
   430                           ; 2 bytes @ 0x5
   431  000006                     	ds	2
   432  000008                     ??_LED_Right:
   433  000008                     CAN_GenID@frameID:
   434                           	opt callstack 0
   435  000008                     CAN_MoveBuffIntoFrame@Buf:
   436                           	opt callstack 0
   437  000008                     LED_Left@b:
   438                           	opt callstack 0
   439  000008                     FRAME_AccelerometerStatus@message:
   440                           	opt callstack 0
   441  000008                     FRAME_AnalogValue@set:
   442                           	opt callstack 0
   443  000008                     FRAME_AdressOfNeighbors@nrRamki:
   444                           	opt callstack 0
   445  000008                     ___awdiv@divisor:
   446                           	opt callstack 0
   447  000008                     ___lwdiv@divisor:
   448                           	opt callstack 0
   449                           
   450                           ; 2 bytes @ 0x7
   451  000008                     	ds	1
   452  000009                     ??_CAN_GenID:
   453  000009                     FRAME_ExcitationMultiplier@i:
   454                           	opt callstack 0
   455                           
   456                           ; 2 bytes @ 0x8
   457  000009                     	ds	1
   458  00000A                     ??_FRAME_AdressOfNeighbors:
   459  00000A                     CAN_MoveBuffIntoFrame@i:
   460                           	opt callstack 0
   461  00000A                     LED_Control@color:
   462                           	opt callstack 0
   463  00000A                     ___awdiv@counter:
   464                           	opt callstack 0
   465  00000A                     LED_Right@b:
   466                           	opt callstack 0
   467  00000A                     ___lwdiv@quotient:
   468                           	opt callstack 0
   469                           
   470                           ; 2 bytes @ 0x9
   471  00000A                     	ds	1
   472  00000B                     ___awdiv@sign:
   473                           	opt callstack 0
   474  00000B                     CAN_SendFrame@message:
   475                           	opt callstack 0
   476  00000B                     FRAME_SensorExcitationStatus@message:
   477                           	opt callstack 0
   478                           
   479                           ; 2 bytes @ 0xA
   480  00000B                     	ds	1
   481  00000C                     ___lwdiv@counter:
   482                           	opt callstack 0
   483  00000C                     ___awdiv@quotient:
   484                           	opt callstack 0
   485                           
   486                           ; 2 bytes @ 0xB
   487  00000C                     	ds	1
   488  00000D                     ??_CAN_SendFrame:
   489  00000D                     LED_Light_Pos@pos:
   490                           	opt callstack 0
   491  00000D                     FRAME_Plot@message:
   492                           	opt callstack 0
   493                           
   494                           ; 2 bytes @ 0xC
   495  00000D                     	ds	1
   496  00000E                     CAN_TakeFrame@message:
   497                           	opt callstack 0
   498                           
   499                           ; 2 bytes @ 0xD
   500  00000E                     	ds	1
   501  00000F                     ??_FRAME_Plot:
   502  00000F                     LED_Light_Pos@fulfillment:
   503                           	opt callstack 0
   504                           
   505                           ; 2 bytes @ 0xE
   506  00000F                     	ds	1
   507  000010                     ??_CAN_TakeFrame:
   508                           
   509                           ; 1 bytes @ 0xF
   510  000010                     	ds	1
   511  000011                     LED_Light_Pos@color:
   512                           	opt callstack 0
   513                           
   514                           ; 1 bytes @ 0x10
   515  000011                     	ds	1
   516  000012                     CAN_TakeFrame@tempCON:
   517                           	opt callstack 0
   518  000012                     LED_Light_Pos@LED_array:
   519                           	opt callstack 0
   520                           
   521                           ; 2 bytes @ 0x11
   522  000012                     	ds	1
   523  000013                     CAN_TakeFrame@k:
   524                           	opt callstack 0
   525  000013                     FRAME_SensorExcitationStatus@Satrun_prime:
   526                           	opt callstack 0
   527                           
   528                           ; 2 bytes @ 0x12
   529  000013                     	ds	1
   530  000014                     LED_Light_Pos@pos2:
   531                           	opt callstack 0
   532                           
   533                           ; 2 bytes @ 0x13
   534  000014                     	ds	1
   535  000015                     FRAME_SensorExcitationStatus@Satrun_prime_2155:
   536                           	opt callstack 0
   537                           
   538                           ; 2 bytes @ 0x14
   539  000015                     	ds	1
   540  000016                     LED_Light_Pos@flage:
   541                           	opt callstack 0
   542                           
   543                           ; 2 bytes @ 0x15
   544  000016                     	ds	1
   545  000017                     FRAME_SensorExcitationStatus@Saturn:
   546                           	opt callstack 0
   547                           
   548                           ; 2 bytes @ 0x16
   549  000017                     	ds	1
   550  000018                     
   551                           ; 1 bytes @ 0x17
   552  000018                     	ds	1
   553  000019                     FRAME_SensorExcitationStatus@iterator_beta:
   554                           	opt callstack 0
   555                           
   556                           ; 2 bytes @ 0x18
   557  000019                     	ds	3
   558  00001C                     FRAME_AdressOfNeighbors@uranos:
   559                           	opt callstack 0
   560                           
   561                           ; 2 bytes @ 0x1B
   562  00001C                     	ds	2
   563  00001E                     FRAME_AdressOfNeighbors@kier_3191:
   564                           	opt callstack 0
   565                           
   566                           ; 2 bytes @ 0x1D
   567  00001E                     	ds	2
   568  000020                     FRAME_AdressOfNeighbors@gaja:
   569                           	opt callstack 0
   570                           
   571                           ; 2 bytes @ 0x1F
   572  000020                     	ds	2
   573  000022                     FRAME_AdressOfNeighbors@kier:
   574                           	opt callstack 0
   575                           
   576                           ; 2 bytes @ 0x21
   577  000022                     	ds	2
   578  000024                     FRAME_AdressOfNeighbors@iterator_alfa:
   579                           	opt callstack 0
   580                           
   581                           ; 2 bytes @ 0x23
   582  000024                     	ds	2
   583  000026                     FRAME_HandleCanFrame@message:
   584                           	opt callstack 0
   585                           
   586                           ; 2 bytes @ 0x25
   587  000026                     	ds	2
   588  000028                     ??_FRAME_HandleCanFrame:
   589                           
   590                           ; 1 bytes @ 0x27
   591  000028                     	ds	4
   592  00002C                     FRAME_HandleCanFrame@ident:
   593                           	opt callstack 0
   594                           
   595                           ; 2 bytes @ 0x2B
   596  00002C                     	ds	2
   597  00002E                     FRAME_HandleCanFrame@identyfikator:
   598                           	opt callstack 0
   599                           
   600                           ; 1 bytes @ 0x2D
   601  00002E                     	ds	1
   602  00002F                     TRM_DataTransmition@canMessage:
   603                           	opt callstack 0
   604                           
   605                           ; 17 bytes @ 0x2E
   606  00002F                     	ds	17
   607  000040                     
   608                           ; 1 bytes @ 0x3F
   609 ;;
   610 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   611 ;;
   612 ;; *************** function _main *****************
   613 ;; Defined at:
   614 ;;		line 94 in file "main.c"
   615 ;; Parameters:    Size  Location     Type
   616 ;;		None
   617 ;; Auto vars:     Size  Location     Type
   618 ;;		None
   619 ;; Return value:  Size  Location     Type
   620 ;;                  1    wreg      void 
   621 ;; Registers used:
   622 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   623 ;; Tracked objects:
   624 ;;		On entry : 0/0
   625 ;;		On exit  : 0/0
   626 ;;		Unchanged: 0/0
   627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   632 ;;Total ram usage:        0 bytes
   633 ;; Hardware stack levels required when called:    8
   634 ;; This function calls:
   635 ;;		_INI_All
   636 ;;		_LED_Update
   637 ;;		_TMR1_Update_flag_Get
   638 ;;		_TMR1_Update_flag_Set
   639 ;;		_TRM_DataTransmition
   640 ;; This function is called by:
   641 ;;		Startup code after reset
   642 ;; This function uses a non-reentrant model
   643 ;;
   644                           
   645                           	psect	text0
   646  001320                     __ptext0:
   647                           	opt callstack 0
   648  001320                     _main:
   649                           	opt callstack 23
   650                           
   651                           ;main.c: 96:     INI_All();
   652                           
   653                           ;incstack = 0
   654  001320  EC0F  F00A         	call	_INI_All	;wreg free
   655                           
   656                           ;main.c: 98:     RCON = 0xFF;
   657  001324  68D0               	setf	4048,c	;volatile
   658  001326                     l3109:
   659                           
   660                           ;main.c: 101:     {;main.c: 102:         if(DetectorLedRadar.Flags.obsluzWeWy == 1)
   661  001326  B044               	btfsc	_DetectorLedRadar,0,c
   662                           
   663                           ;main.c: 103:         {;main.c: 104:             DetectorLedRadar.Flags.obsluzWeWy = 0;
   664  001328  9044               	bcf	_DetectorLedRadar,0,c
   665                           
   666                           ;main.c: 108:         if(TMR1_Update_flag_Get()==1)
   667  00132A  EC59  F00A         	call	_TMR1_Update_flag_Get	;wreg free
   668  00132E  0406               	decf	?_TMR1_Update_flag_Get,w,c
   669  001330  1007               	iorwf	?_TMR1_Update_flag_Get+1,w,c
   670  001332  A4D8               	btfss	status,2,c
   671  001334  D008               	goto	l3119
   672                           
   673                           ;main.c: 109:         {;main.c: 110:             LED_Update();
   674  001336  EC1C  F007         	call	_LED_Update	;wreg free
   675                           
   676                           ;main.c: 111:             TMR1_Update_flag_Set(0);
   677  00133A  0E00               	movlw	0
   678  00133C  6E07               	movwf	TMR1_Update_flag_Set@a+1,c
   679  00133E  0E00               	movlw	0
   680  001340  6E06               	movwf	TMR1_Update_flag_Set@a,c
   681  001342  EC54  F00A         	call	_TMR1_Update_flag_Set	;wreg free
   682  001346                     l3119:
   683                           
   684                           ;main.c: 115:         TRM_DataTransmition();
   685  001346  ECC4  F008         	call	_TRM_DataTransmition	;wreg free
   686  00134A  0004               	clrwdt		;# 
   687                           
   688                           ;main.c: 117:     }
   689  00134C  D7EC               	goto	l3109
   690  00134E                     __end_of_main:
   691                           	opt callstack 0
   692                           
   693 ;; *************** function _TRM_DataTransmition *****************
   694 ;; Defined at:
   695 ;;		line 19 in file "TRM.c"
   696 ;; Parameters:    Size  Location     Type
   697 ;;		None
   698 ;; Auto vars:     Size  Location     Type
   699 ;;  canMessage     17   46[COMRAM] struct .
   700 ;;  i               1    0        unsigned char 
   701 ;; Return value:  Size  Location     Type
   702 ;;                  1    wreg      void 
   703 ;; Registers used:
   704 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   705 ;; Tracked objects:
   706 ;;		On entry : 0/0
   707 ;;		On exit  : 0/0
   708 ;;		Unchanged: 0/0
   709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   711 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   713 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   714 ;;Total ram usage:       17 bytes
   715 ;; Hardware stack levels used:    1
   716 ;; Hardware stack levels required when called:    7
   717 ;; This function calls:
   718 ;;		_CAN_TakeFrame
   719 ;;		_FRAME_HandleCanFrame
   720 ;; This function is called by:
   721 ;;		_main
   722 ;; This function uses a non-reentrant model
   723 ;;
   724                           
   725                           	psect	text1
   726  001188                     __ptext1:
   727                           	opt callstack 0
   728  001188                     _TRM_DataTransmition:
   729                           	opt callstack 23
   730                           
   731                           ;TRM.c: 21:     static BYTE weWyU8 = 0, czujnikWeWyU8 = 0;;TRM.c: 22:     BYTE i;;TRM.c:
      +                           23:     mID canMessage;;TRM.c: 26:     if(DaneCan.Flags.wyslijRamkeStanu)
   732                           
   733                           ;incstack = 0
   734  001188  A040               	btfss	_DaneCan,0,c
   735  00118A  D013               	goto	l3077
   736                           
   737                           ;TRM.c: 27:     {;TRM.c: 29:         canMessage.message_type = 0x02;
   738  00118C  0E02               	movlw	2
   739  00118E  6E30               	movwf	TRM_DataTransmition@canMessage+1,c
   740                           
   741                           ;TRM.c: 30:         canMessage.id.Val = 0;
   742  001190  0E00               	movlw	0
   743  001192  6E33               	movwf	TRM_DataTransmition@canMessage+4,c
   744  001194  0E00               	movlw	0
   745  001196  6E34               	movwf	TRM_DataTransmition@canMessage+5,c
   746  001198  0E00               	movlw	0
   747  00119A  6E35               	movwf	TRM_DataTransmition@canMessage+6,c
   748  00119C  0E00               	movlw	0
   749  00119E  6E36               	movwf	TRM_DataTransmition@canMessage+7,c
   750                           
   751                           ;TRM.c: 31:         canMessage.id.v[2] = 0x01 *4;
   752  0011A0  0E04               	movlw	4
   753  0011A2  6E35               	movwf	TRM_DataTransmition@canMessage+6,c
   754                           
   755                           ;TRM.c: 32:         FRAME_HandleCanFrame(&canMessage);
   756  0011A4  0E2F               	movlw	low TRM_DataTransmition@canMessage
   757  0011A6  6E26               	movwf	FRAME_HandleCanFrame@message,c
   758  0011A8  0E00               	movlw	high TRM_DataTransmition@canMessage
   759  0011AA  6E27               	movwf	FRAME_HandleCanFrame@message+1,c
   760  0011AC  EC84  F002         	call	_FRAME_HandleCanFrame	;wreg free
   761                           
   762                           ;TRM.c: 49:         DaneCan.Flags.wyslijRamkeStanu = 0;
   763  0011B0  9040               	bcf	_DaneCan,0,c
   764  0011B2                     l3077:
   765                           
   766                           ;TRM.c: 59:     if(CAN_TakeFrame(&canMessage))
   767  0011B2  0E2F               	movlw	low TRM_DataTransmition@canMessage
   768  0011B4  6E0E               	movwf	CAN_TakeFrame@message,c
   769  0011B6  0E00               	movlw	high TRM_DataTransmition@canMessage
   770  0011B8  6E0F               	movwf	CAN_TakeFrame@message+1,c
   771  0011BA  EC30  F000         	call	_CAN_TakeFrame	;wreg free
   772  0011BE  0900               	iorlw	0
   773  0011C0  B4D8               	btfsc	status,2,c
   774  0011C2  0012               	return	
   775                           
   776                           ;TRM.c: 64:         {;TRM.c: 66:             FRAME_HandleCanFrame(&canMessage);
   777  0011C4  0E2F               	movlw	low TRM_DataTransmition@canMessage
   778  0011C6  6E26               	movwf	FRAME_HandleCanFrame@message,c
   779  0011C8  0E00               	movlw	high TRM_DataTransmition@canMessage
   780  0011CA  6E27               	movwf	FRAME_HandleCanFrame@message+1,c
   781  0011CC  EC84  F002         	call	_FRAME_HandleCanFrame	;wreg free
   782                           
   783                           ;TRM.c: 67:         }
   784  0011D0  0012               	return		;funcret
   785  0011D2                     __end_of_TRM_DataTransmition:
   786                           	opt callstack 0
   787                           
   788 ;; *************** function _FRAME_HandleCanFrame *****************
   789 ;; Defined at:
   790 ;;		line 530 in file "FRAME.c"
   791 ;; Parameters:    Size  Location     Type
   792 ;;  message         2   37[COMRAM] PTR struct .
   793 ;;		 -> TRM_DataTransmition@canMessage(17), 
   794 ;; Auto vars:     Size  Location     Type
   795 ;;  ident           2   43[COMRAM] unsigned short 
   796 ;;  alfa            2    0        int 
   797 ;;  identyfikato    1   45[COMRAM] unsigned char 
   798 ;; Return value:  Size  Location     Type
   799 ;;                  1    wreg      void 
   800 ;; Registers used:
   801 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   802 ;; Tracked objects:
   803 ;;		On entry : 0/0
   804 ;;		On exit  : 0/0
   805 ;;		Unchanged: 0/0
   806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   807 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   808 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   809 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   810 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   811 ;;Total ram usage:        9 bytes
   812 ;; Hardware stack levels used:    1
   813 ;; Hardware stack levels required when called:    6
   814 ;; This function calls:
   815 ;;		_CAN_GenID
   816 ;;		_CAN_SendFrame
   817 ;;		_FRAME_AccelerometerStatus
   818 ;;		_FRAME_AdressOfNeighbors
   819 ;;		_FRAME_AnalogValue
   820 ;;		_FRAME_AveragingTimes
   821 ;;		_FRAME_AxisStatus
   822 ;;		_FRAME_DeviceReset
   823 ;;		_FRAME_ExcitationMultiplier
   824 ;;		_FRAME_ExcitationValue
   825 ;;		_FRAME_MapPosition
   826 ;;		_FRAME_Plot
   827 ;;		_FRAME_PrzypisanieDokarty
   828 ;;		_FRAME_SensorExcitationStatus
   829 ;;		_FRAME_SoftwareVersion
   830 ;;		_LED_Error
   831 ;;		___awdiv
   832 ;; This function is called by:
   833 ;;		_TRM_DataTransmition
   834 ;; This function uses a non-reentrant model
   835 ;;
   836                           
   837                           	psect	text2
   838  000508                     __ptext2:
   839                           	opt callstack 0
   840  000508                     _FRAME_HandleCanFrame:
   841                           	opt callstack 23
   842                           
   843                           ;FRAME.c: 530: void FRAME_HandleCanFrame(mID * message);FRAME.c: 531: {;FRAME.c: 532:   
      +                            BYTE identyfikator = (BYTE) message->id.v[2]/4;
   844                           
   845                           ;incstack = 0
   846  000508  EE20 F006          	lfsr	2,6
   847  00050C  5026               	movf	FRAME_HandleCanFrame@message,w,c
   848  00050E  26D9               	addwf	fsr2l,f,c
   849  000510  5027               	movf	FRAME_HandleCanFrame@message+1,w,c
   850  000512  22DA               	addwfc	fsr2h,f,c
   851  000514  50DF               	movf	indf2,w,c
   852  000516  6E28               	movwf	??_FRAME_HandleCanFrame& (0+255),c
   853  000518  5028               	movf	??_FRAME_HandleCanFrame,w,c
   854  00051A  6E06               	movwf	___awdiv@dividend,c
   855  00051C  6A07               	clrf	___awdiv@dividend+1,c
   856  00051E  0E00               	movlw	0
   857  000520  6E09               	movwf	___awdiv@divisor+1,c
   858  000522  0E04               	movlw	4
   859  000524  6E08               	movwf	___awdiv@divisor,c
   860  000526  ECDA  F006         	call	___awdiv	;wreg free
   861  00052A  5006               	movf	?___awdiv,w,c
   862  00052C  6E2E               	movwf	FRAME_HandleCanFrame@identyfikator,c
   863                           
   864                           ;FRAME.c: 535:     if(identyfikator != 0x01)
   865  00052E  042E               	decf	FRAME_HandleCanFrame@identyfikator,w,c
   866  000530  B4D8               	btfsc	status,2,c
   867  000532  D078               	goto	l3025
   868                           
   869                           ;FRAME.c: 536:     {;FRAME.c: 537:         WORD ident = identyfikator;
   870  000534  C02E  F02C         	movff	FRAME_HandleCanFrame@identyfikator,FRAME_HandleCanFrame@ident
   871  000538  6A2D               	clrf	FRAME_HandleCanFrame@ident+1,c
   872  00053A  D074               	goto	l3025
   873  00053C                     l2995:
   874                           
   875                           ;FRAME.c: 544:             FRAME_SensorExcitationStatus(message);
   876  00053C  C026  F00B         	movff	FRAME_HandleCanFrame@message,FRAME_SensorExcitationStatus@message
   877  000540  C027  F00C         	movff	FRAME_HandleCanFrame@message+1,FRAME_SensorExcitationStatus@message+1
   878  000544  ECEB  F004         	call	_FRAME_SensorExcitationStatus	;wreg free
   879                           
   880                           ;FRAME.c: 545:             break;
   881  000548  D0A2               	goto	l3027
   882  00054A                     l2997:
   883                           
   884                           ;FRAME.c: 547:             FRAME_AccelerometerStatus(message);
   885  00054A  C026  F008         	movff	FRAME_HandleCanFrame@message,FRAME_AccelerometerStatus@message
   886  00054E  C027  F009         	movff	FRAME_HandleCanFrame@message+1,FRAME_AccelerometerStatus@message+1
   887  000552  EC59  F007         	call	_FRAME_AccelerometerStatus	;wreg free
   888                           
   889                           ;FRAME.c: 548:             break;
   890  000556  D09B               	goto	l3027
   891  000558                     l2999:
   892                           
   893                           ;FRAME.c: 550:             FRAME_ExcitationValue(message);
   894  000558  C026  F006         	movff	FRAME_HandleCanFrame@message,FRAME_ExcitationValue@message
   895  00055C  C027  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_ExcitationValue@message+1
   896  000560  EC25  F009         	call	_FRAME_ExcitationValue	;wreg free
   897                           
   898                           ;FRAME.c: 551:             break;
   899  000564  D094               	goto	l3027
   900  000566                     l3001:
   901                           
   902                           ;FRAME.c: 553:             FRAME_ExcitationMultiplier(message);
   903  000566  C026  F006         	movff	FRAME_HandleCanFrame@message,FRAME_ExcitationMultiplier@message
   904  00056A  C027  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_ExcitationMultiplier@message+1
   905  00056E  EC77  F008         	call	_FRAME_ExcitationMultiplier	;wreg free
   906                           
   907                           ;FRAME.c: 554:             break;
   908  000572  D08D               	goto	l3027
   909  000574                     l3003:
   910                           
   911                           ;FRAME.c: 556:             FRAME_AveragingTimes(message);
   912  000574  C026  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AveragingTimes@message
   913  000578  C027  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AveragingTimes@message+1
   914  00057C  EC5B  F009         	call	_FRAME_AveragingTimes	;wreg free
   915                           
   916                           ;FRAME.c: 557:             break;
   917  000580  D086               	goto	l3027
   918  000582                     l3005:
   919                           
   920                           ;FRAME.c: 559:             FRAME_AxisStatus(message);
   921  000582  C026  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AxisStatus@message
   922  000586  C027  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AxisStatus@message+1
   923  00058A  EC40  F009         	call	_FRAME_AxisStatus	;wreg free
   924                           
   925                           ;FRAME.c: 560:             break;
   926  00058E  D07F               	goto	l3027
   927  000590                     l3007:
   928                           
   929                           ;FRAME.c: 562:             FRAME_DeviceReset(message);
   930  000590  C026  F006         	movff	FRAME_HandleCanFrame@message,FRAME_DeviceReset@message
   931  000594  C027  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_DeviceReset@message+1
   932  000598  EC80  F005         	call	_FRAME_DeviceReset	;wreg free
   933                           
   934                           ;FRAME.c: 563:             break;
   935  00059C  D078               	goto	l3027
   936  00059E                     l3009:
   937                           
   938                           ;FRAME.c: 565:             FRAME_Plot(message);
   939  00059E  C026  F00D         	movff	FRAME_HandleCanFrame@message,FRAME_Plot@message
   940  0005A2  C027  F00E         	movff	FRAME_HandleCanFrame@message+1,FRAME_Plot@message+1
   941  0005A6  EC22  F008         	call	_FRAME_Plot	;wreg free
   942                           
   943                           ;FRAME.c: 566:             break;
   944  0005AA  D071               	goto	l3027
   945  0005AC                     l3011:
   946                           
   947                           ;FRAME.c: 568:             FRAME_MapPosition(message);
   948  0005AC  C026  F006         	movff	FRAME_HandleCanFrame@message,FRAME_MapPosition@message
   949  0005B0  C027  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_MapPosition@message+1
   950  0005B4  EC75  F00A         	call	_FRAME_MapPosition	;wreg free
   951                           
   952                           ;FRAME.c: 569:             break;
   953  0005B8  D06A               	goto	l3027
   954  0005BA                     l3013:
   955                           
   956                           ;FRAME.c: 571:             FRAME_SoftwareVersion(message);
   957  0005BA  C026  F006         	movff	FRAME_HandleCanFrame@message,FRAME_SoftwareVersion@message
   958  0005BE  C027  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_SoftwareVersion@message+1
   959  0005C2  EC94  F007         	call	_FRAME_SoftwareVersion	;wreg free
   960                           
   961                           ;FRAME.c: 572:             break;
   962  0005C6  D063               	goto	l3027
   963  0005C8                     l3015:
   964                           
   965                           ;FRAME.c: 575:             FRAME_AnalogValue(message, identyfikator - 0x0C);
   966  0005C8  C026  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AnalogValue@message
   967  0005CC  C027  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AnalogValue@message+1
   968  0005D0  0EF4               	movlw	244
   969  0005D2  242E               	addwf	FRAME_HandleCanFrame@identyfikator,w,c
   970  0005D4  6E08               	movwf	FRAME_AnalogValue@set,c
   971  0005D6  6A09               	clrf	FRAME_AnalogValue@set+1,c
   972  0005D8  0EFF               	movlw	255
   973  0005DA  2209               	addwfc	FRAME_AnalogValue@set+1,f,c
   974  0005DC  EC76  F00A         	call	_FRAME_AnalogValue	;wreg free
   975                           
   976                           ;FRAME.c: 576:             break;
   977  0005E0  D056               	goto	l3027
   978  0005E2                     l3017:
   979                           
   980                           ;FRAME.c: 578:             FRAME_PrzypisanieDokarty(message);
   981  0005E2  C026  F006         	movff	FRAME_HandleCanFrame@message,FRAME_PrzypisanieDokarty@message
   982  0005E6  C027  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_PrzypisanieDokarty@message+1
   983  0005EA  EC0A  F009         	call	_FRAME_PrzypisanieDokarty	;wreg free
   984                           
   985                           ;FRAME.c: 579:             break;
   986  0005EE  D04F               	goto	l3027
   987  0005F0                     l3019:
   988                           
   989                           ;FRAME.c: 581:             FRAME_AdressOfNeighbors(message, identyfikator - 0x10);
   990  0005F0  C026  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AdressOfNeighbors@message
   991  0005F4  C027  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AdressOfNeighbors@message+1
   992  0005F8  0EF0               	movlw	240
   993  0005FA  242E               	addwf	FRAME_HandleCanFrame@identyfikator,w,c
   994  0005FC  6E08               	movwf	FRAME_AdressOfNeighbors@nrRamki,c
   995  0005FE  6A09               	clrf	FRAME_AdressOfNeighbors@nrRamki+1,c
   996  000600  0EFF               	movlw	255
   997  000602  2209               	addwfc	FRAME_AdressOfNeighbors@nrRamki+1,f,c
   998  000604  EC6E  F001         	call	_FRAME_AdressOfNeighbors	;wreg free
   999                           
  1000                           ;FRAME.c: 582:             break;
  1001  000608  D042               	goto	l3027
  1002  00060A                     l3021:
  1003                           
  1004                           ;FRAME.c: 584:             FRAME_AdressOfNeighbors(message, identyfikator - 0x11);
  1005  00060A  C026  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AdressOfNeighbors@message
  1006  00060E  C027  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AdressOfNeighbors@message+1
  1007  000612  0EEF               	movlw	239
  1008  000614  242E               	addwf	FRAME_HandleCanFrame@identyfikator,w,c
  1009  000616  6E08               	movwf	FRAME_AdressOfNeighbors@nrRamki,c
  1010  000618  6A09               	clrf	FRAME_AdressOfNeighbors@nrRamki+1,c
  1011  00061A  0EFF               	movlw	255
  1012  00061C  2209               	addwfc	FRAME_AdressOfNeighbors@nrRamki+1,f,c
  1013  00061E  EC6E  F001         	call	_FRAME_AdressOfNeighbors	;wreg free
  1014                           
  1015                           ;FRAME.c: 585:             break;
  1016  000622  D035               	goto	l3027
  1017  000624                     l3025:
  1018  000624  502E               	movf	FRAME_HandleCanFrame@identyfikator,w,c
  1019  000626  6E28               	movwf	??_FRAME_HandleCanFrame& (0+255),c
  1020  000628  6A29               	clrf	(??_FRAME_HandleCanFrame+1)& (0+255),c
  1021                           
  1022                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1023                           ; Switch size 1, requested type "simple"
  1024                           ; Number of cases is 1, Range of values is 0 to 0
  1025                           ; switch strategies available:
  1026                           ; Name         Instructions Cycles
  1027                           ; simple_byte            4     3 (average)
  1028                           ;	Chosen strategy is simple_byte
  1029  00062A  5029               	movf	??_FRAME_HandleCanFrame+1,w,c
  1030  00062C  0A00               	xorlw	0	; case 0
  1031  00062E  A4D8               	btfss	status,2,c
  1032  000630  D02E               	goto	l3027
  1033                           
  1034                           ; Switch size 1, requested type "simple"
  1035                           ; Number of cases is 15, Range of values is 1 to 17
  1036                           ; switch strategies available:
  1037                           ; Name         Instructions Cycles
  1038                           ; simple_byte           46    24 (average)
  1039                           ;	Chosen strategy is simple_byte
  1040  000632  5028               	movf	??_FRAME_HandleCanFrame,w,c
  1041  000634  0A01               	xorlw	1	; case 1
  1042  000636  B4D8               	btfsc	status,2,c
  1043  000638  D781               	goto	l2995
  1044  00063A  0A03               	xorlw	3	; case 2
  1045  00063C  B4D8               	btfsc	status,2,c
  1046  00063E  D785               	goto	l2997
  1047  000640  0A01               	xorlw	1	; case 3
  1048  000642  B4D8               	btfsc	status,2,c
  1049  000644  D789               	goto	l2999
  1050  000646  0A07               	xorlw	7	; case 4
  1051  000648  B4D8               	btfsc	status,2,c
  1052  00064A  D78D               	goto	l3001
  1053  00064C  0A01               	xorlw	1	; case 5
  1054  00064E  B4D8               	btfsc	status,2,c
  1055  000650  D791               	goto	l3003
  1056  000652  0A03               	xorlw	3	; case 6
  1057  000654  B4D8               	btfsc	status,2,c
  1058  000656  D795               	goto	l3005
  1059  000658  0A01               	xorlw	1	; case 7
  1060  00065A  B4D8               	btfsc	status,2,c
  1061  00065C  D799               	goto	l3007
  1062  00065E  0A0E               	xorlw	14	; case 9
  1063  000660  B4D8               	btfsc	status,2,c
  1064  000662  D79D               	goto	l3009
  1065  000664  0A03               	xorlw	3	; case 10
  1066  000666  B4D8               	btfsc	status,2,c
  1067  000668  D7A1               	goto	l3011
  1068  00066A  0A01               	xorlw	1	; case 11
  1069  00066C  B4D8               	btfsc	status,2,c
  1070  00066E  D7A5               	goto	l3013
  1071  000670  0A07               	xorlw	7	; case 12
  1072  000672  B4D8               	btfsc	status,2,c
  1073  000674  D7A9               	goto	l3015
  1074  000676  0A01               	xorlw	1	; case 13
  1075  000678  B4D8               	btfsc	status,2,c
  1076  00067A  D7A6               	goto	l3015
  1077  00067C  0A02               	xorlw	2	; case 15
  1078  00067E  B4D8               	btfsc	status,2,c
  1079  000680  D7B0               	goto	l3017
  1080  000682  0A1F               	xorlw	31	; case 16
  1081  000684  B4D8               	btfsc	status,2,c
  1082  000686  D7B4               	goto	l3019
  1083  000688  0A01               	xorlw	1	; case 17
  1084  00068A  B4D8               	btfsc	status,2,c
  1085  00068C  D7BE               	goto	l3021
  1086  00068E                     l3027:
  1087                           
  1088                           ;FRAME.c: 594:     if(message->message_type == 0x02)
  1089  00068E  EE20 F001          	lfsr	2,1
  1090  000692  5026               	movf	FRAME_HandleCanFrame@message,w,c
  1091  000694  26D9               	addwf	fsr2l,f,c
  1092  000696  5027               	movf	FRAME_HandleCanFrame@message+1,w,c
  1093  000698  22DA               	addwfc	fsr2h,f,c
  1094  00069A  0E02               	movlw	2
  1095  00069C  18DE               	xorwf	postinc2,w,c
  1096  00069E  A4D8               	btfss	status,2,c
  1097  0006A0  0012               	return	
  1098                           
  1099                           ;FRAME.c: 595:     {;FRAME.c: 597:         message->frame_type = 0x03;
  1100  0006A2  EE20 F002          	lfsr	2,2
  1101  0006A6  5026               	movf	FRAME_HandleCanFrame@message,w,c
  1102  0006A8  26D9               	addwf	fsr2l,f,c
  1103  0006AA  5027               	movf	FRAME_HandleCanFrame@message+1,w,c
  1104  0006AC  22DA               	addwfc	fsr2h,f,c
  1105  0006AE  0E03               	movlw	3
  1106  0006B0  6EDF               	movwf	indf2,c
  1107                           
  1108                           ;FRAME.c: 598:         message->message_type = 0x01;
  1109  0006B2  EE20 F001          	lfsr	2,1
  1110  0006B6  5026               	movf	FRAME_HandleCanFrame@message,w,c
  1111  0006B8  26D9               	addwf	fsr2l,f,c
  1112  0006BA  5027               	movf	FRAME_HandleCanFrame@message+1,w,c
  1113  0006BC  22DA               	addwfc	fsr2h,f,c
  1114  0006BE  0E01               	movlw	1
  1115  0006C0  6EDF               	movwf	indf2,c
  1116                           
  1117                           ;FRAME.c: 599:         message->id.Val = 0;
  1118  0006C2  EE20 F004          	lfsr	2,4
  1119  0006C6  5026               	movf	FRAME_HandleCanFrame@message,w,c
  1120  0006C8  26D9               	addwf	fsr2l,f,c
  1121  0006CA  5027               	movf	FRAME_HandleCanFrame@message+1,w,c
  1122  0006CC  22DA               	addwfc	fsr2h,f,c
  1123  0006CE  6ADE               	clrf	postinc2,c
  1124  0006D0  6ADE               	clrf	postinc2,c
  1125  0006D2  6ADE               	clrf	postinc2,c
  1126  0006D4  6ADD               	clrf	postdec2,c
  1127                           
  1128                           ;FRAME.c: 601:         message->id.v[2] = identyfikator*4;
  1129  0006D6  502E               	movf	FRAME_HandleCanFrame@identyfikator,w,c
  1130  0006D8  0D04               	mullw	4
  1131  0006DA  EE20 F006          	lfsr	2,6
  1132  0006DE  5026               	movf	FRAME_HandleCanFrame@message,w,c
  1133  0006E0  26D9               	addwf	fsr2l,f,c
  1134  0006E2  5027               	movf	FRAME_HandleCanFrame@message+1,w,c
  1135  0006E4  22DA               	addwfc	fsr2h,f,c
  1136  0006E6  CFF3 FFDF          	movff	prodl,indf2
  1137                           
  1138                           ;FRAME.c: 602:         CAN_GenID(message,identyfikator);
  1139  0006EA  C026  F006         	movff	FRAME_HandleCanFrame@message,CAN_GenID@message
  1140  0006EE  C027  F007         	movff	FRAME_HandleCanFrame@message+1,CAN_GenID@message+1
  1141  0006F2  C02E  F008         	movff	FRAME_HandleCanFrame@identyfikator,CAN_GenID@frameID
  1142  0006F6  EC4A  F006         	call	_CAN_GenID	;wreg free
  1143                           
  1144                           ;FRAME.c: 603:         CAN_SendFrame(message);
  1145  0006FA  C026  F00B         	movff	FRAME_HandleCanFrame@message,CAN_SendFrame@message
  1146  0006FE  C027  F00C         	movff	FRAME_HandleCanFrame@message+1,CAN_SendFrame@message+1
  1147  000702  EC8B  F003         	call	_CAN_SendFrame	;wreg free
  1148                           
  1149                           ;FRAME.c: 614:        while(RXB0CONbits.FILHIT3)
  1150  000706  D004               	goto	l544
  1151  000708                     l545:
  1152                           
  1153                           ;FRAME.c: 615:        {;FRAME.c: 616:            if(TXB0CONbits.TXERR == 1){
  1154  000708  010F               	movlb	15	; () banked
  1155  00070A  B940               	btfsc	64,4,b	;volatile
  1156                           
  1157                           ; BSR set to: 15
  1158                           ;FRAME.c: 617:                LED_Error();
  1159  00070C  ECE2  F009         	call	_LED_Error	;wreg free
  1160  000710                     l544:
  1161                           
  1162                           ;FRAME.c: 614:        while(RXB0CONbits.FILHIT3)
  1163  000710  A660               	btfss	3936,3,c	;volatile
  1164  000712  0012               	return	
  1165  000714  D7F9               	goto	l545
  1166  000716                     __end_of_FRAME_HandleCanFrame:
  1167                           	opt callstack 0
  1168                           
  1169 ;; *************** function _FRAME_SoftwareVersion *****************
  1170 ;; Defined at:
  1171 ;;		line 411 in file "FRAME.c"
  1172 ;; Parameters:    Size  Location     Type
  1173 ;;  message         2    5[COMRAM] PTR struct .
  1174 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1175 ;; Auto vars:     Size  Location     Type
  1176 ;;		None
  1177 ;; Return value:  Size  Location     Type
  1178 ;;                  1    wreg      void 
  1179 ;; Registers used:
  1180 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1181 ;; Tracked objects:
  1182 ;;		On entry : 0/0
  1183 ;;		On exit  : 0/0
  1184 ;;		Unchanged: 0/0
  1185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1186 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1188 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1189 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1190 ;;Total ram usage:        3 bytes
  1191 ;; Hardware stack levels used:    1
  1192 ;; Hardware stack levels required when called:    3
  1193 ;; This function calls:
  1194 ;;		Nothing
  1195 ;; This function is called by:
  1196 ;;		_FRAME_HandleCanFrame
  1197 ;; This function uses a non-reentrant model
  1198 ;;
  1199                           
  1200                           	psect	text3
  1201  000F28                     __ptext3:
  1202                           	opt callstack 0
  1203  000F28                     _FRAME_SoftwareVersion:
  1204                           	opt callstack 25
  1205                           
  1206                           ;FRAME.c: 411: static void FRAME_SoftwareVersion(mID *message);FRAME.c: 412: {;FRAME.c: 
      +                          414:     if(message->message_type == 0x02)
  1207                           
  1208                           ;incstack = 0
  1209  000F28  EE20 F001          	lfsr	2,1
  1210  000F2C  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1211  000F2E  26D9               	addwf	fsr2l,f,c
  1212  000F30  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1213  000F32  22DA               	addwfc	fsr2h,f,c
  1214  000F34  0E02               	movlw	2
  1215  000F36  18DE               	xorwf	postinc2,w,c
  1216  000F38  A4D8               	btfss	status,2,c
  1217  000F3A  0012               	return	
  1218                           
  1219                           ;FRAME.c: 415:     {;FRAME.c: 416:         message->data_length = 4;
  1220  000F3C  EE20 F010          	lfsr	2,16
  1221  000F40  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1222  000F42  26D9               	addwf	fsr2l,f,c
  1223  000F44  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1224  000F46  22DA               	addwfc	fsr2h,f,c
  1225  000F48  0E04               	movlw	4
  1226  000F4A  6EDF               	movwf	indf2,c
  1227                           
  1228                           ;FRAME.c: 417:         message->data[0] = (unsigned char)(Dane->wersjaOprogramowaniaU16 
      +                          >> 8);
  1229  000F4C  EE20 F008          	lfsr	2,8
  1230  000F50  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1231  000F52  26D9               	addwf	fsr2l,f,c
  1232  000F54  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1233  000F56  22DA               	addwfc	fsr2h,f,c
  1234  000F58  5005               	movf	5,w,c
  1235  000F5A  6EDF               	movwf	indf2,c
  1236                           
  1237                           ;FRAME.c: 418:         message->data[1] = (unsigned char)Dane->wersjaOprogramowaniaU16;
  1238  000F5C  EE20 F009          	lfsr	2,9
  1239  000F60  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1240  000F62  26D9               	addwf	fsr2l,f,c
  1241  000F64  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1242  000F66  22DA               	addwfc	fsr2h,f,c
  1243  000F68  C004 FFDF          	movff	4,indf2
  1244                           
  1245                           ;FRAME.c: 419:         message->data[2] = (unsigned char)(Dane->wersjaSprzetuU16 >> 8);
  1246  000F6C  EE20 F00A          	lfsr	2,10
  1247  000F70  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1248  000F72  26D9               	addwf	fsr2l,f,c
  1249  000F74  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1250  000F76  22DA               	addwfc	fsr2h,f,c
  1251  000F78  500B               	movf	11,w,c
  1252  000F7A  6EDF               	movwf	indf2,c
  1253                           
  1254                           ;FRAME.c: 420:         message->data[3] = (unsigned char)Dane->wersjaSprzetuU16;
  1255  000F7C  EE20 F00B          	lfsr	2,11
  1256  000F80  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1257  000F82  26D9               	addwf	fsr2l,f,c
  1258  000F84  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1259  000F86  22DA               	addwfc	fsr2h,f,c
  1260  000F88  C00A FFDF          	movff	10,indf2
  1261                           
  1262                           ;FRAME.c: 421:     }
  1263  000F8C  0012               	return		;funcret
  1264  000F8E                     __end_of_FRAME_SoftwareVersion:
  1265                           	opt callstack 0
  1266                           
  1267 ;; *************** function _FRAME_SensorExcitationStatus *****************
  1268 ;; Defined at:
  1269 ;;		line 35 in file "FRAME.c"
  1270 ;; Parameters:    Size  Location     Type
  1271 ;;  message         2   10[COMRAM] PTR struct .
  1272 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1273 ;; Auto vars:     Size  Location     Type
  1274 ;;  Satrun_prime    2   20[COMRAM] int 
  1275 ;;  terra           2    0        int 
  1276 ;;  Satrun_prime    2   18[COMRAM] int 
  1277 ;;  terra           2    0        int 
  1278 ;;  iterator_bet    2   24[COMRAM] unsigned short 
  1279 ;;  Saturn          2   22[COMRAM] int 
  1280 ;; Return value:  Size  Location     Type
  1281 ;;                  1    wreg      void 
  1282 ;; Registers used:
  1283 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1284 ;; Tracked objects:
  1285 ;;		On entry : 0/0
  1286 ;;		On exit  : 0/0
  1287 ;;		Unchanged: 0/0
  1288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1289 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1290 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1291 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1292 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1293 ;;Total ram usage:       16 bytes
  1294 ;; Hardware stack levels used:    1
  1295 ;; Hardware stack levels required when called:    5
  1296 ;; This function calls:
  1297 ;;		_LED_Clear
  1298 ;;		_LED_Error
  1299 ;;		_LOCK_Get
  1300 ;;		_LOCK_Set
  1301 ;;		_MOC_Aktualna_Temperatura
  1302 ;;		_MOC_Frame_Counter
  1303 ;;		_MOC_NOTWORK
  1304 ;;		_MOC_Wynikowa_wartosc_roznicowa
  1305 ;; This function is called by:
  1306 ;;		_FRAME_HandleCanFrame
  1307 ;; This function uses a non-reentrant model
  1308 ;;
  1309                           
  1310                           	psect	text4
  1311  0009D6                     __ptext4:
  1312                           	opt callstack 0
  1313  0009D6                     _FRAME_SensorExcitationStatus:
  1314                           	opt callstack 23
  1315                           
  1316                           ;FRAME.c: 35: static void FRAME_SensorExcitationStatus(mID *message);FRAME.c: 36: {;FRAM
      +                          E.c: 37:     if(message->message_type == 0x02)
  1317                           
  1318                           ;incstack = 0
  1319  0009D6  EE20 F001          	lfsr	2,1
  1320  0009DA  500B               	movf	FRAME_SensorExcitationStatus@message,w,c
  1321  0009DC  26D9               	addwf	fsr2l,f,c
  1322  0009DE  500C               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1323  0009E0  22DA               	addwfc	fsr2h,f,c
  1324  0009E2  0E02               	movlw	2
  1325  0009E4  18DE               	xorwf	postinc2,w,c
  1326  0009E6  A4D8               	btfss	status,2,c
  1327  0009E8  D047               	goto	l442
  1328                           
  1329                           ;FRAME.c: 38:     {;FRAME.c: 39:         message->data_length = 6;
  1330  0009EA  EE20 F010          	lfsr	2,16
  1331  0009EE  500B               	movf	FRAME_SensorExcitationStatus@message,w,c
  1332  0009F0  26D9               	addwf	fsr2l,f,c
  1333  0009F2  500C               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1334  0009F4  22DA               	addwfc	fsr2h,f,c
  1335  0009F6  0E06               	movlw	6
  1336  0009F8  6EDF               	movwf	indf2,c
  1337                           
  1338                           ;FRAME.c: 45:         message->data[0] = LOCK_Get();
  1339  0009FA  EE20 F008          	lfsr	2,8
  1340  0009FE  500B               	movf	FRAME_SensorExcitationStatus@message,w,c
  1341  000A00  26D9               	addwf	fsr2l,f,c
  1342  000A02  500C               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1343  000A04  22DA               	addwfc	fsr2h,f,c
  1344  000A06  EC73  F00A         	call	_LOCK_Get	;wreg free
  1345  000A0A  6EDF               	movwf	indf2,c
  1346                           
  1347                           ;FRAME.c: 46:         message->data[1] = MOC_Wynikowa_wartosc_roznicowa() >> 8 ;
  1348  000A0C  EE20 F009          	lfsr	2,9
  1349  000A10  500B               	movf	FRAME_SensorExcitationStatus@message,w,c
  1350  000A12  26D9               	addwf	fsr2l,f,c
  1351  000A14  500C               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1352  000A16  22DA               	addwfc	fsr2h,f,c
  1353  000A18  EC36  F00A         	call	_MOC_Wynikowa_wartosc_roznicowa	;wreg free
  1354  000A1C  C007  F006         	movff	?_MOC_Wynikowa_wartosc_roznicowa+1,?_MOC_Wynikowa_wartosc_roznicowa
  1355  000A20  6A07               	clrf	?_MOC_Wynikowa_wartosc_roznicowa+1,c
  1356  000A22  5006               	movf	?_MOC_Wynikowa_wartosc_roznicowa,w,c
  1357  000A24  6EDF               	movwf	indf2,c
  1358                           
  1359                           ;FRAME.c: 47:         message->data[2] = MOC_Wynikowa_wartosc_roznicowa() & 0x00FF;
  1360  000A26  EE20 F00A          	lfsr	2,10
  1361  000A2A  500B               	movf	FRAME_SensorExcitationStatus@message,w,c
  1362  000A2C  26D9               	addwf	fsr2l,f,c
  1363  000A2E  500C               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1364  000A30  22DA               	addwfc	fsr2h,f,c
  1365  000A32  EC36  F00A         	call	_MOC_Wynikowa_wartosc_roznicowa	;wreg free
  1366  000A36  5006               	movf	?_MOC_Wynikowa_wartosc_roznicowa,w,c
  1367  000A38  6EDF               	movwf	indf2,c
  1368                           
  1369                           ;FRAME.c: 48:         message->data[3] = MOC_Frame_Counter();
  1370  000A3A  EE20 F00B          	lfsr	2,11
  1371  000A3E  500B               	movf	FRAME_SensorExcitationStatus@message,w,c
  1372  000A40  26D9               	addwf	fsr2l,f,c
  1373  000A42  500C               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1374  000A44  22DA               	addwfc	fsr2h,f,c
  1375  000A46  EC28  F00A         	call	_MOC_Frame_Counter	;wreg free
  1376  000A4A  5006               	movf	?_MOC_Frame_Counter,w,c
  1377  000A4C  6EDF               	movwf	indf2,c
  1378                           
  1379                           ;FRAME.c: 49:         message->data[4] = MOC_Aktualna_Temperatura();
  1380  000A4E  EE20 F00C          	lfsr	2,12
  1381  000A52  500B               	movf	FRAME_SensorExcitationStatus@message,w,c
  1382  000A54  26D9               	addwf	fsr2l,f,c
  1383  000A56  500C               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1384  000A58  22DA               	addwfc	fsr2h,f,c
  1385  000A5A  EC3B  F00A         	call	_MOC_Aktualna_Temperatura	;wreg free
  1386  000A5E  5006               	movf	?_MOC_Aktualna_Temperatura,w,c
  1387  000A60  6EDF               	movwf	indf2,c
  1388                           
  1389                           ;FRAME.c: 50:         message->data[5] = MOC_NOTWORK();
  1390  000A62  EE20 F00D          	lfsr	2,13
  1391  000A66  500B               	movf	FRAME_SensorExcitationStatus@message,w,c
  1392  000A68  26D9               	addwf	fsr2l,f,c
  1393  000A6A  500C               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1394  000A6C  22DA               	addwfc	fsr2h,f,c
  1395  000A6E  EC68  F00A         	call	_MOC_NOTWORK	;wreg free
  1396  000A72  5006               	movf	?_MOC_NOTWORK,w,c
  1397  000A74  6EDF               	movwf	indf2,c
  1398                           
  1399                           ;FRAME.c: 60:     }
  1400  000A76  0012               	return	
  1401  000A78                     l442:
  1402                           
  1403                           ;FRAME.c: 62:     {;FRAME.c: 64:         WORD iterator_beta;;FRAME.c: 65:         int Sa
      +                          turn = NeightAdress[0];
  1404  000A78  C0C6  F017         	movff	_NeightAdress,FRAME_SensorExcitationStatus@Saturn	;volatile
  1405  000A7C  C0C7  F018         	movff	_NeightAdress+1,FRAME_SensorExcitationStatus@Saturn+1	;volatile
  1406                           
  1407                           ;FRAME.c: 67:         if(Saturn == 12)
  1408  000A80  0E0C               	movlw	12
  1409  000A82  1817               	xorwf	FRAME_SensorExcitationStatus@Saturn,w,c
  1410  000A84  1018               	iorwf	FRAME_SensorExcitationStatus@Saturn+1,w,c
  1411  000A86  A4D8               	btfss	status,2,c
  1412  000A88  D013               	goto	l444
  1413                           
  1414                           ;FRAME.c: 68:         {;FRAME.c: 69:             int Satrun_prime = Saturn;
  1415  000A8A  C017  F013         	movff	FRAME_SensorExcitationStatus@Saturn,FRAME_SensorExcitationStatus@Satrun_prime
  1416  000A8E  C018  F014         	movff	FRAME_SensorExcitationStatus@Saturn+1,FRAME_SensorExcitationStatus@Satrun_prime+1
  1417                           
  1418                           ;FRAME.c: 71:             for(iterator_beta=0;iterator_beta<400;iterator_beta++)
  1419  000A92  0E00               	movlw	0
  1420  000A94  6E1A               	movwf	FRAME_SensorExcitationStatus@iterator_beta+1,c
  1421  000A96  0E00               	movlw	0
  1422  000A98  6E19               	movwf	FRAME_SensorExcitationStatus@iterator_beta,c
  1423  000A9A                     l2671:
  1424                           
  1425                           ;FRAME.c: 72:             {;FRAME.c: 73:             LED_Clear();
  1426  000A9A  ECF1  F009         	call	_LED_Clear	;wreg free
  1427                           
  1428                           ;FRAME.c: 74:             }
  1429  000A9E  4A19               	infsnz	FRAME_SensorExcitationStatus@iterator_beta,f,c
  1430  000AA0  2A1A               	incf	FRAME_SensorExcitationStatus@iterator_beta+1,f,c
  1431  000AA2  0E90               	movlw	144
  1432  000AA4  5C19               	subwf	FRAME_SensorExcitationStatus@iterator_beta,w,c
  1433  000AA6  0E01               	movlw	1
  1434  000AA8  581A               	subwfb	FRAME_SensorExcitationStatus@iterator_beta+1,w,c
  1435  000AAA  B0D8               	btfsc	status,0,c
  1436  000AAC  D013               	goto	u1200
  1437  000AAE  D7F5               	goto	l2671
  1438  000AB0                     l444:
  1439                           
  1440                           ;FRAME.c: 79:         {;FRAME.c: 80:             int Satrun_prime = Saturn;
  1441  000AB0  C017  F015         	movff	FRAME_SensorExcitationStatus@Saturn,FRAME_SensorExcitationStatus@Satrun_prime_215
      +                          5
  1442  000AB4  C018  F016         	movff	FRAME_SensorExcitationStatus@Saturn+1,FRAME_SensorExcitationStatus@Satrun_prime_2
      +                          155+1
  1443                           
  1444                           ;FRAME.c: 81:             for(iterator_beta=0;iterator_beta<400;iterator_beta++)
  1445  000AB8  0E00               	movlw	0
  1446  000ABA  6E1A               	movwf	FRAME_SensorExcitationStatus@iterator_beta+1,c
  1447  000ABC  0E00               	movlw	0
  1448  000ABE  6E19               	movwf	FRAME_SensorExcitationStatus@iterator_beta,c
  1449  000AC0                     l2683:
  1450                           
  1451                           ;FRAME.c: 82:             {;FRAME.c: 83:             LED_Error();
  1452  000AC0  ECE2  F009         	call	_LED_Error	;wreg free
  1453                           
  1454                           ;FRAME.c: 84:             }
  1455  000AC4  4A19               	infsnz	FRAME_SensorExcitationStatus@iterator_beta,f,c
  1456  000AC6  2A1A               	incf	FRAME_SensorExcitationStatus@iterator_beta+1,f,c
  1457  000AC8  0E90               	movlw	144
  1458  000ACA  5C19               	subwf	FRAME_SensorExcitationStatus@iterator_beta,w,c
  1459  000ACC  0E01               	movlw	1
  1460  000ACE  581A               	subwfb	FRAME_SensorExcitationStatus@iterator_beta+1,w,c
  1461  000AD0  A0D8               	btfss	status,0,c
  1462  000AD2  D7F6               	goto	l2683
  1463  000AD4                     u1200:
  1464                           
  1465                           ;FRAME.c: 88:         if(0x12b==message->id.w[0])
  1466  000AD4  EE20 F004          	lfsr	2,4
  1467  000AD8  500B               	movf	FRAME_SensorExcitationStatus@message,w,c
  1468  000ADA  26D9               	addwf	fsr2l,f,c
  1469  000ADC  500C               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1470  000ADE  22DA               	addwfc	fsr2h,f,c
  1471  000AE0  0E2B               	movlw	43
  1472  000AE2  18DE               	xorwf	postinc2,w,c
  1473  000AE4  E10C               	bnz	l451
  1474  000AE6  04DE               	decf	postinc2,w,c
  1475  000AE8  A4D8               	btfss	status,2,c
  1476  000AEA  0012               	return	
  1477                           
  1478                           ;FRAME.c: 89:         {;FRAME.c: 90:         LOCK_Set(message->data[0]);
  1479  000AEC  EE20 F008          	lfsr	2,8
  1480  000AF0  500B               	movf	FRAME_SensorExcitationStatus@message,w,c
  1481  000AF2  26D9               	addwf	fsr2l,f,c
  1482  000AF4  500C               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1483  000AF6  22DA               	addwfc	fsr2h,f,c
  1484  000AF8  50DF               	movf	indf2,w,c
  1485  000AFA  EC6C  F00A         	call	_LOCK_Set
  1486  000AFE                     l451:
  1487  000AFE  0012               	return		;funcret
  1488  000B00                     __end_of_FRAME_SensorExcitationStatus:
  1489                           	opt callstack 0
  1490                           
  1491 ;; *************** function _MOC_Wynikowa_wartosc_roznicowa *****************
  1492 ;; Defined at:
  1493 ;;		line 33 in file "MOC_Funct.c"
  1494 ;; Parameters:    Size  Location     Type
  1495 ;;		None
  1496 ;; Auto vars:     Size  Location     Type
  1497 ;;		None
  1498 ;; Return value:  Size  Location     Type
  1499 ;;                  2    5[COMRAM] unsigned int 
  1500 ;; Registers used:
  1501 ;;		wreg, status,2
  1502 ;; Tracked objects:
  1503 ;;		On entry : 0/0
  1504 ;;		On exit  : 0/0
  1505 ;;		Unchanged: 0/0
  1506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1507 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1510 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1511 ;;Total ram usage:        2 bytes
  1512 ;; Hardware stack levels used:    1
  1513 ;; Hardware stack levels required when called:    3
  1514 ;; This function calls:
  1515 ;;		Nothing
  1516 ;; This function is called by:
  1517 ;;		_FRAME_SensorExcitationStatus
  1518 ;; This function uses a non-reentrant model
  1519 ;;
  1520                           
  1521                           	psect	text5
  1522  00146C                     __ptext5:
  1523                           	opt callstack 0
  1524  00146C                     _MOC_Wynikowa_wartosc_roznicowa:
  1525                           	opt callstack 24
  1526                           
  1527                           ;MOC_Funct.c: 35:     return 0x0220;
  1528                           
  1529                           ;incstack = 0
  1530  00146C  0E02               	movlw	2
  1531  00146E  6E07               	movwf	?_MOC_Wynikowa_wartosc_roznicowa+1,c
  1532  001470  0E20               	movlw	32
  1533  001472  6E06               	movwf	?_MOC_Wynikowa_wartosc_roznicowa,c
  1534  001474  0012               	return		;funcret
  1535  001476                     __end_of_MOC_Wynikowa_wartosc_roznicowa:
  1536                           	opt callstack 0
  1537                           
  1538 ;; *************** function _MOC_NOTWORK *****************
  1539 ;; Defined at:
  1540 ;;		line 47 in file "MOC_Funct.c"
  1541 ;; Parameters:    Size  Location     Type
  1542 ;;		None
  1543 ;; Auto vars:     Size  Location     Type
  1544 ;;		None
  1545 ;; Return value:  Size  Location     Type
  1546 ;;                  2    5[COMRAM] unsigned int 
  1547 ;; Registers used:
  1548 ;;		wreg, status,2
  1549 ;; Tracked objects:
  1550 ;;		On entry : 0/0
  1551 ;;		On exit  : 0/0
  1552 ;;		Unchanged: 0/0
  1553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1554 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1557 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1558 ;;Total ram usage:        2 bytes
  1559 ;; Hardware stack levels used:    1
  1560 ;; Hardware stack levels required when called:    3
  1561 ;; This function calls:
  1562 ;;		Nothing
  1563 ;; This function is called by:
  1564 ;;		_FRAME_SensorExcitationStatus
  1565 ;; This function uses a non-reentrant model
  1566 ;;
  1567                           
  1568                           	psect	text6
  1569  0014D0                     __ptext6:
  1570                           	opt callstack 0
  1571  0014D0                     _MOC_NOTWORK:
  1572                           	opt callstack 24
  1573                           
  1574                           ;MOC_Funct.c: 49:     return 0xFF;
  1575                           
  1576                           ;incstack = 0
  1577  0014D0  0E00               	movlw	0
  1578  0014D2  6E07               	movwf	?_MOC_NOTWORK+1,c
  1579  0014D4  6806               	setf	?_MOC_NOTWORK,c
  1580  0014D6  0012               	return		;funcret
  1581  0014D8                     __end_of_MOC_NOTWORK:
  1582                           	opt callstack 0
  1583                           
  1584 ;; *************** function _MOC_Frame_Counter *****************
  1585 ;; Defined at:
  1586 ;;		line 38 in file "MOC_Funct.c"
  1587 ;; Parameters:    Size  Location     Type
  1588 ;;		None
  1589 ;; Auto vars:     Size  Location     Type
  1590 ;;		None
  1591 ;; Return value:  Size  Location     Type
  1592 ;;                  2    5[COMRAM] unsigned int 
  1593 ;; Registers used:
  1594 ;;		wreg, status,2, status,0
  1595 ;; Tracked objects:
  1596 ;;		On entry : 0/0
  1597 ;;		On exit  : 0/0
  1598 ;;		Unchanged: 0/0
  1599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1600 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1603 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1604 ;;Total ram usage:        2 bytes
  1605 ;; Hardware stack levels used:    1
  1606 ;; Hardware stack levels required when called:    3
  1607 ;; This function calls:
  1608 ;;		Nothing
  1609 ;; This function is called by:
  1610 ;;		_FRAME_SensorExcitationStatus
  1611 ;; This function uses a non-reentrant model
  1612 ;;
  1613                           
  1614                           	psect	text7
  1615  001450                     __ptext7:
  1616                           	opt callstack 0
  1617  001450                     _MOC_Frame_Counter:
  1618                           	opt callstack 24
  1619                           
  1620                           ;MOC_Funct.c: 40:     static UINT zeta = 0x11;;MOC_Funct.c: 41:     return zeta++;
  1621                           
  1622                           ;incstack = 0
  1623  001450  5050               	movf	MOC_Frame_Counter@zeta,w,c
  1624  001452  6E06               	movwf	?_MOC_Frame_Counter,c
  1625  001454  5051               	movf	MOC_Frame_Counter@zeta+1,w,c
  1626  001456  6E07               	movwf	?_MOC_Frame_Counter+1,c
  1627  001458  4A50               	infsnz	MOC_Frame_Counter@zeta,f,c
  1628  00145A  2A51               	incf	MOC_Frame_Counter@zeta+1,f,c
  1629  00145C  0012               	return		;funcret
  1630  00145E                     __end_of_MOC_Frame_Counter:
  1631                           	opt callstack 0
  1632                           
  1633 ;; *************** function _MOC_Aktualna_Temperatura *****************
  1634 ;; Defined at:
  1635 ;;		line 43 in file "MOC_Funct.c"
  1636 ;; Parameters:    Size  Location     Type
  1637 ;;		None
  1638 ;; Auto vars:     Size  Location     Type
  1639 ;;		None
  1640 ;; Return value:  Size  Location     Type
  1641 ;;                  2    5[COMRAM] unsigned int 
  1642 ;; Registers used:
  1643 ;;		wreg, status,2
  1644 ;; Tracked objects:
  1645 ;;		On entry : 0/0
  1646 ;;		On exit  : 0/0
  1647 ;;		Unchanged: 0/0
  1648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1649 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1652 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1653 ;;Total ram usage:        2 bytes
  1654 ;; Hardware stack levels used:    1
  1655 ;; Hardware stack levels required when called:    3
  1656 ;; This function calls:
  1657 ;;		Nothing
  1658 ;; This function is called by:
  1659 ;;		_FRAME_SensorExcitationStatus
  1660 ;; This function uses a non-reentrant model
  1661 ;;
  1662                           
  1663                           	psect	text8
  1664  001476                     __ptext8:
  1665                           	opt callstack 0
  1666  001476                     _MOC_Aktualna_Temperatura:
  1667                           	opt callstack 24
  1668                           
  1669                           ;MOC_Funct.c: 45:     return 0x1B;
  1670                           
  1671                           ;incstack = 0
  1672  001476  0E00               	movlw	0
  1673  001478  6E07               	movwf	?_MOC_Aktualna_Temperatura+1,c
  1674  00147A  0E1B               	movlw	27
  1675  00147C  6E06               	movwf	?_MOC_Aktualna_Temperatura,c
  1676  00147E  0012               	return		;funcret
  1677  001480                     __end_of_MOC_Aktualna_Temperatura:
  1678                           	opt callstack 0
  1679                           
  1680 ;; *************** function _LOCK_Set *****************
  1681 ;; Defined at:
  1682 ;;		line 52 in file "LED.c"
  1683 ;; Parameters:    Size  Location     Type
  1684 ;;  k               1    wreg     unsigned char 
  1685 ;; Auto vars:     Size  Location     Type
  1686 ;;  k               1    5[COMRAM] unsigned char 
  1687 ;; Return value:  Size  Location     Type
  1688 ;;                  1    wreg      void 
  1689 ;; Registers used:
  1690 ;;		wreg
  1691 ;; Tracked objects:
  1692 ;;		On entry : 0/0
  1693 ;;		On exit  : 0/0
  1694 ;;		Unchanged: 0/0
  1695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1697 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1699 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1700 ;;Total ram usage:        1 bytes
  1701 ;; Hardware stack levels used:    1
  1702 ;; Hardware stack levels required when called:    3
  1703 ;; This function calls:
  1704 ;;		Nothing
  1705 ;; This function is called by:
  1706 ;;		_FRAME_SensorExcitationStatus
  1707 ;; This function uses a non-reentrant model
  1708 ;;
  1709                           
  1710                           	psect	text9
  1711  0014D8                     __ptext9:
  1712                           	opt callstack 0
  1713  0014D8                     _LOCK_Set:
  1714                           	opt callstack 24
  1715                           
  1716                           ;incstack = 0
  1717                           ;LOCK_Set@k stored from wreg
  1718  0014D8  6E06               	movwf	LOCK_Set@k,c
  1719                           
  1720                           ;LED.c: 52: void LOCK_Set(BYTE k);LED.c: 53: {;LED.c: 54:     LOCK = k;
  1721  0014DA  C006  F04F         	movff	LOCK_Set@k,_LOCK
  1722  0014DE  0012               	return		;funcret
  1723  0014E0                     __end_of_LOCK_Set:
  1724                           	opt callstack 0
  1725                           
  1726 ;; *************** function _LOCK_Get *****************
  1727 ;; Defined at:
  1728 ;;		line 57 in file "LED.c"
  1729 ;; Parameters:    Size  Location     Type
  1730 ;;		None
  1731 ;; Auto vars:     Size  Location     Type
  1732 ;;		None
  1733 ;; Return value:  Size  Location     Type
  1734 ;;                  1    wreg      unsigned char 
  1735 ;; Registers used:
  1736 ;;		wreg, status,2
  1737 ;; Tracked objects:
  1738 ;;		On entry : 0/0
  1739 ;;		On exit  : 0/0
  1740 ;;		Unchanged: 0/0
  1741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1745 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1746 ;;Total ram usage:        0 bytes
  1747 ;; Hardware stack levels used:    1
  1748 ;; Hardware stack levels required when called:    3
  1749 ;; This function calls:
  1750 ;;		Nothing
  1751 ;; This function is called by:
  1752 ;;		_FRAME_SensorExcitationStatus
  1753 ;; This function uses a non-reentrant model
  1754 ;;
  1755                           
  1756                           	psect	text10
  1757  0014E6                     __ptext10:
  1758                           	opt callstack 0
  1759  0014E6                     _LOCK_Get:
  1760                           	opt callstack 24
  1761                           
  1762                           ;LED.c: 59:     return LOCK;
  1763                           
  1764                           ;incstack = 0
  1765  0014E6  504F               	movf	_LOCK,w,c
  1766  0014E8  0012               	return		;funcret
  1767  0014EA                     __end_of_LOCK_Get:
  1768                           	opt callstack 0
  1769                           
  1770 ;; *************** function _LED_Error *****************
  1771 ;; Defined at:
  1772 ;;		line 37 in file "LED.c"
  1773 ;; Parameters:    Size  Location     Type
  1774 ;;		None
  1775 ;; Auto vars:     Size  Location     Type
  1776 ;;		None
  1777 ;; Return value:  Size  Location     Type
  1778 ;;                  2  265[None  ] unsigned int 
  1779 ;; Registers used:
  1780 ;;		wreg, status,2, status,0, cstack
  1781 ;; Tracked objects:
  1782 ;;		On entry : 0/0
  1783 ;;		On exit  : 0/0
  1784 ;;		Unchanged: 0/0
  1785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1790 ;;Total ram usage:        0 bytes
  1791 ;; Hardware stack levels used:    1
  1792 ;; Hardware stack levels required when called:    4
  1793 ;; This function calls:
  1794 ;;		_LED_Control
  1795 ;; This function is called by:
  1796 ;;		_FRAME_SensorExcitationStatus
  1797 ;;		_FRAME_HandleCanFrame
  1798 ;; This function uses a non-reentrant model
  1799 ;;
  1800                           
  1801                           	psect	text11
  1802  0013C4                     __ptext11:
  1803                           	opt callstack 0
  1804  0013C4                     _LED_Error:
  1805                           	opt callstack 24
  1806                           
  1807                           ;LED.c: 39:     LED_Control(RED,0b1010101010);
  1808                           
  1809                           ;incstack = 0
  1810  0013C4  0E02               	movlw	2
  1811  0013C6  6E07               	movwf	LED_Control@diode+1,c
  1812  0013C8  0EAA               	movlw	170
  1813  0013CA  6E06               	movwf	LED_Control@diode,c
  1814  0013CC  0E00               	movlw	0
  1815  0013CE  EC42  F004         	call	_LED_Control
  1816                           
  1817                           ;LED.c: 40:     LED_Control(GREEN,0b0000000000);
  1818  0013D2  0E00               	movlw	0
  1819  0013D4  6E07               	movwf	LED_Control@diode+1,c
  1820  0013D6  0E00               	movlw	0
  1821  0013D8  6E06               	movwf	LED_Control@diode,c
  1822  0013DA  0E01               	movlw	1
  1823  0013DC  EC42  F004         	call	_LED_Control
  1824  0013E0  0012               	return		;funcret
  1825  0013E2                     __end_of_LED_Error:
  1826                           	opt callstack 0
  1827                           
  1828 ;; *************** function _LED_Clear *****************
  1829 ;; Defined at:
  1830 ;;		line 45 in file "LED.c"
  1831 ;; Parameters:    Size  Location     Type
  1832 ;;		None
  1833 ;; Auto vars:     Size  Location     Type
  1834 ;;		None
  1835 ;; Return value:  Size  Location     Type
  1836 ;;                  2  268[None  ] unsigned int 
  1837 ;; Registers used:
  1838 ;;		wreg, status,2, status,0, cstack
  1839 ;; Tracked objects:
  1840 ;;		On entry : 0/0
  1841 ;;		On exit  : 0/0
  1842 ;;		Unchanged: 0/0
  1843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1848 ;;Total ram usage:        0 bytes
  1849 ;; Hardware stack levels used:    1
  1850 ;; Hardware stack levels required when called:    4
  1851 ;; This function calls:
  1852 ;;		_LED_Control
  1853 ;; This function is called by:
  1854 ;;		_FRAME_SensorExcitationStatus
  1855 ;; This function uses a non-reentrant model
  1856 ;;
  1857                           
  1858                           	psect	text12
  1859  0013E2                     __ptext12:
  1860                           	opt callstack 0
  1861  0013E2                     _LED_Clear:
  1862                           	opt callstack 23
  1863                           
  1864                           ;LED.c: 47:     LED_Control(RED,0b0000000000);
  1865                           
  1866                           ;incstack = 0
  1867  0013E2  0E00               	movlw	0
  1868  0013E4  6E07               	movwf	LED_Control@diode+1,c
  1869  0013E6  0E00               	movlw	0
  1870  0013E8  6E06               	movwf	LED_Control@diode,c
  1871  0013EA  0E00               	movlw	0
  1872  0013EC  EC42  F004         	call	_LED_Control
  1873                           
  1874                           ;LED.c: 48:     LED_Control(GREEN,0b1010101010);
  1875  0013F0  0E02               	movlw	2
  1876  0013F2  6E07               	movwf	LED_Control@diode+1,c
  1877  0013F4  0EAA               	movlw	170
  1878  0013F6  6E06               	movwf	LED_Control@diode,c
  1879  0013F8  0E01               	movlw	1
  1880  0013FA  EC42  F004         	call	_LED_Control
  1881  0013FE  0012               	return		;funcret
  1882  001400                     __end_of_LED_Clear:
  1883                           	opt callstack 0
  1884                           
  1885 ;; *************** function _FRAME_PrzypisanieDokarty *****************
  1886 ;; Defined at:
  1887 ;;		line 460 in file "FRAME.c"
  1888 ;; Parameters:    Size  Location     Type
  1889 ;;  message         2    5[COMRAM] PTR struct .
  1890 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1891 ;; Auto vars:     Size  Location     Type
  1892 ;;		None
  1893 ;; Return value:  Size  Location     Type
  1894 ;;                  1    wreg      void 
  1895 ;; Registers used:
  1896 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1897 ;; Tracked objects:
  1898 ;;		On entry : 0/0
  1899 ;;		On exit  : 0/0
  1900 ;;		Unchanged: 0/0
  1901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1902 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1904 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1905 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1906 ;;Total ram usage:        3 bytes
  1907 ;; Hardware stack levels used:    1
  1908 ;; Hardware stack levels required when called:    3
  1909 ;; This function calls:
  1910 ;;		Nothing
  1911 ;; This function is called by:
  1912 ;;		_FRAME_HandleCanFrame
  1913 ;; This function uses a non-reentrant model
  1914 ;;
  1915                           
  1916                           	psect	text13
  1917  001214                     __ptext13:
  1918                           	opt callstack 0
  1919  001214                     _FRAME_PrzypisanieDokarty:
  1920                           	opt callstack 25
  1921                           
  1922                           ;FRAME.c: 460: static void FRAME_PrzypisanieDokarty(mID *message);FRAME.c: 461: {;FRAME.
      +                          c: 462:     if(message->message_type == 0x02)
  1923                           
  1924                           ;incstack = 0
  1925  001214  EE20 F001          	lfsr	2,1
  1926  001218  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  1927  00121A  26D9               	addwf	fsr2l,f,c
  1928  00121C  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  1929  00121E  22DA               	addwfc	fsr2h,f,c
  1930  001220  0E02               	movlw	2
  1931  001222  18DE               	xorwf	postinc2,w,c
  1932  001224  A4D8               	btfss	status,2,c
  1933  001226  0012               	return	
  1934                           
  1935                           ;FRAME.c: 463:     {;FRAME.c: 464:         message->data_length = 1;
  1936  001228  EE20 F010          	lfsr	2,16
  1937  00122C  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  1938  00122E  26D9               	addwf	fsr2l,f,c
  1939  001230  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  1940  001232  22DA               	addwfc	fsr2h,f,c
  1941  001234  0E01               	movlw	1
  1942  001236  6EDF               	movwf	indf2,c
  1943                           
  1944                           ;FRAME.c: 465:         message->data[0] = 0xFF;
  1945  001238  EE20 F008          	lfsr	2,8
  1946  00123C  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  1947  00123E  26D9               	addwf	fsr2l,f,c
  1948  001240  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  1949  001242  22DA               	addwfc	fsr2h,f,c
  1950  001244  0EFF               	movlw	255
  1951  001246  6EDF               	movwf	indf2,c
  1952                           
  1953                           ;FRAME.c: 466:     }
  1954  001248  0012               	return		;funcret
  1955  00124A                     __end_of_FRAME_PrzypisanieDokarty:
  1956                           	opt callstack 0
  1957                           
  1958 ;; *************** function _FRAME_Plot *****************
  1959 ;; Defined at:
  1960 ;;		line 365 in file "FRAME.c"
  1961 ;; Parameters:    Size  Location     Type
  1962 ;;  message         2   12[COMRAM] PTR struct .
  1963 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1964 ;; Auto vars:     Size  Location     Type
  1965 ;;		None
  1966 ;; Return value:  Size  Location     Type
  1967 ;;                  1    wreg      void 
  1968 ;; Registers used:
  1969 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1970 ;; Tracked objects:
  1971 ;;		On entry : 0/0
  1972 ;;		On exit  : 0/0
  1973 ;;		Unchanged: 0/0
  1974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1975 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1977 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1978 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1979 ;;Total ram usage:        3 bytes
  1980 ;; Hardware stack levels used:    1
  1981 ;; Hardware stack levels required when called:    4
  1982 ;; This function calls:
  1983 ;;		___lwdiv
  1984 ;; This function is called by:
  1985 ;;		_FRAME_HandleCanFrame
  1986 ;; This function uses a non-reentrant model
  1987 ;;
  1988                           
  1989                           	psect	text14
  1990  001044                     __ptext14:
  1991                           	opt callstack 0
  1992  001044                     _FRAME_Plot:
  1993                           	opt callstack 24
  1994                           
  1995                           ;FRAME.c: 365: static void FRAME_Plot(mID *message);FRAME.c: 366: {;FRAME.c: 368:     if
      +                          (message->message_type == 0x02)
  1996                           
  1997                           ;incstack = 0
  1998  001044  EE20 F001          	lfsr	2,1
  1999  001048  500D               	movf	FRAME_Plot@message,w,c
  2000  00104A  26D9               	addwf	fsr2l,f,c
  2001  00104C  500E               	movf	FRAME_Plot@message+1,w,c
  2002  00104E  22DA               	addwfc	fsr2h,f,c
  2003  001050  0E02               	movlw	2
  2004  001052  18DE               	xorwf	postinc2,w,c
  2005  001054  A4D8               	btfss	status,2,c
  2006  001056  D013               	goto	l2747
  2007                           
  2008                           ;FRAME.c: 369:     {;FRAME.c: 370:         message->data[0] = (BYTE)(Dane->timerRysowani
      +                          aWykresuU16/10);
  2009  001058  EE20 F008          	lfsr	2,8
  2010  00105C  500D               	movf	FRAME_Plot@message,w,c
  2011  00105E  26D9               	addwf	fsr2l,f,c
  2012  001060  500E               	movf	FRAME_Plot@message+1,w,c
  2013  001062  22DA               	addwfc	fsr2h,f,c
  2014  001064  C00C F006          	movff	12,___lwdiv@dividend
  2015  001068  C00D F007          	movff	13,___lwdiv@dividend+1
  2016  00106C  0E00               	movlw	0
  2017  00106E  6E09               	movwf	___lwdiv@divisor+1,c
  2018  001070  0E0A               	movlw	10
  2019  001072  6E08               	movwf	___lwdiv@divisor,c
  2020  001074  EC4E  F008         	call	___lwdiv	;wreg free
  2021  001078  5006               	movf	?___lwdiv,w,c
  2022  00107A  6EDF               	movwf	indf2,c
  2023                           
  2024                           ;FRAME.c: 371:     }
  2025  00107C  0012               	return	
  2026  00107E                     l2747:
  2027                           
  2028                           ;FRAME.c: 373:     {;FRAME.c: 374:         Dane->timerRysowaniaWykresuU16 = (WORD)messag
      +                          e->data[0]*10;
  2029  00107E  EE20 F008          	lfsr	2,8
  2030  001082  500D               	movf	FRAME_Plot@message,w,c
  2031  001084  26D9               	addwf	fsr2l,f,c
  2032  001086  500E               	movf	FRAME_Plot@message+1,w,c
  2033  001088  22DA               	addwfc	fsr2h,f,c
  2034  00108A  50DF               	movf	indf2,w,c
  2035  00108C  6E0F               	movwf	??_FRAME_Plot& (0+255),c
  2036  00108E  500F               	movf	??_FRAME_Plot,w,c
  2037  001090  0D0A               	mullw	10
  2038  001092  CFF3 F00C          	movff	prodl,12
  2039  001096  CFF4 F00D          	movff	prodh,13
  2040  00109A  0012               	return		;funcret
  2041  00109C                     __end_of_FRAME_Plot:
  2042                           	opt callstack 0
  2043                           
  2044 ;; *************** function _FRAME_MapPosition *****************
  2045 ;; Defined at:
  2046 ;;		line 386 in file "FRAME.c"
  2047 ;; Parameters:    Size  Location     Type
  2048 ;;  message         2    5[COMRAM] PTR struct .
  2049 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2050 ;; Auto vars:     Size  Location     Type
  2051 ;;		None
  2052 ;; Return value:  Size  Location     Type
  2053 ;;                  1    wreg      void 
  2054 ;; Registers used:
  2055 ;;		None
  2056 ;; Tracked objects:
  2057 ;;		On entry : 0/0
  2058 ;;		On exit  : 0/0
  2059 ;;		Unchanged: 0/0
  2060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2061 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2064 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2065 ;;Total ram usage:        2 bytes
  2066 ;; Hardware stack levels used:    1
  2067 ;; Hardware stack levels required when called:    3
  2068 ;; This function calls:
  2069 ;;		Nothing
  2070 ;; This function is called by:
  2071 ;;		_FRAME_HandleCanFrame
  2072 ;; This function uses a non-reentrant model
  2073 ;;
  2074                           
  2075                           	psect	text15
  2076  0014EA                     __ptext15:
  2077                           	opt callstack 0
  2078  0014EA                     _FRAME_MapPosition:
  2079                           	opt callstack 25
  2080                           
  2081                           ;incstack = 0
  2082  0014EA  0012               	return		;funcret
  2083  0014EC                     __end_of_FRAME_MapPosition:
  2084                           	opt callstack 0
  2085                           
  2086 ;; *************** function _FRAME_ExcitationValue *****************
  2087 ;; Defined at:
  2088 ;;		line 143 in file "FRAME.c"
  2089 ;; Parameters:    Size  Location     Type
  2090 ;;  message         2    5[COMRAM] PTR struct .
  2091 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2092 ;; Auto vars:     Size  Location     Type
  2093 ;;		None
  2094 ;; Return value:  Size  Location     Type
  2095 ;;                  1    wreg      void 
  2096 ;; Registers used:
  2097 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2098 ;; Tracked objects:
  2099 ;;		On entry : 0/0
  2100 ;;		On exit  : 0/0
  2101 ;;		Unchanged: 0/0
  2102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2103 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2105 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2106 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2107 ;;Total ram usage:        3 bytes
  2108 ;; Hardware stack levels used:    1
  2109 ;; Hardware stack levels required when called:    3
  2110 ;; This function calls:
  2111 ;;		Nothing
  2112 ;; This function is called by:
  2113 ;;		_FRAME_HandleCanFrame
  2114 ;; This function uses a non-reentrant model
  2115 ;;
  2116                           
  2117                           	psect	text16
  2118  00124A                     __ptext16:
  2119                           	opt callstack 0
  2120  00124A                     _FRAME_ExcitationValue:
  2121                           	opt callstack 25
  2122                           
  2123                           ;FRAME.c: 143: static void FRAME_ExcitationValue(mID *message);FRAME.c: 144: {;FRAME.c: 
      +                          145:     if(message->message_type == 0x02)
  2124                           
  2125                           ;incstack = 0
  2126  00124A  EE20 F001          	lfsr	2,1
  2127  00124E  5006               	movf	FRAME_ExcitationValue@message,w,c
  2128  001250  26D9               	addwf	fsr2l,f,c
  2129  001252  5007               	movf	FRAME_ExcitationValue@message+1,w,c
  2130  001254  22DA               	addwfc	fsr2h,f,c
  2131  001256  0E02               	movlw	2
  2132  001258  18DE               	xorwf	postinc2,w,c
  2133  00125A  A4D8               	btfss	status,2,c
  2134  00125C  0012               	return	
  2135                           
  2136                           ;FRAME.c: 146:     {;FRAME.c: 147:         message->data_length = 1;
  2137  00125E  EE20 F010          	lfsr	2,16
  2138  001262  5006               	movf	FRAME_ExcitationValue@message,w,c
  2139  001264  26D9               	addwf	fsr2l,f,c
  2140  001266  5007               	movf	FRAME_ExcitationValue@message+1,w,c
  2141  001268  22DA               	addwfc	fsr2h,f,c
  2142  00126A  0E01               	movlw	1
  2143  00126C  6EDF               	movwf	indf2,c
  2144                           
  2145                           ;FRAME.c: 152:         message->data[0] = 0xFF;
  2146  00126E  EE20 F008          	lfsr	2,8
  2147  001272  5006               	movf	FRAME_ExcitationValue@message,w,c
  2148  001274  26D9               	addwf	fsr2l,f,c
  2149  001276  5007               	movf	FRAME_ExcitationValue@message+1,w,c
  2150  001278  22DA               	addwfc	fsr2h,f,c
  2151  00127A  0EFF               	movlw	255
  2152  00127C  6EDF               	movwf	indf2,c
  2153                           
  2154                           ;FRAME.c: 153:     }
  2155  00127E  0012               	return		;funcret
  2156  001280                     __end_of_FRAME_ExcitationValue:
  2157                           	opt callstack 0
  2158                           
  2159 ;; *************** function _FRAME_ExcitationMultiplier *****************
  2160 ;; Defined at:
  2161 ;;		line 167 in file "FRAME.c"
  2162 ;; Parameters:    Size  Location     Type
  2163 ;;  message         2    5[COMRAM] PTR struct .
  2164 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2165 ;; Auto vars:     Size  Location     Type
  2166 ;;  i               2    8[COMRAM] unsigned short 
  2167 ;; Return value:  Size  Location     Type
  2168 ;;                  1    wreg      void 
  2169 ;; Registers used:
  2170 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2171 ;; Tracked objects:
  2172 ;;		On entry : 0/0
  2173 ;;		On exit  : 0/0
  2174 ;;		Unchanged: 0/0
  2175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2176 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2177 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2178 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2179 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2180 ;;Total ram usage:        5 bytes
  2181 ;; Hardware stack levels used:    1
  2182 ;; Hardware stack levels required when called:    3
  2183 ;; This function calls:
  2184 ;;		Nothing
  2185 ;; This function is called by:
  2186 ;;		_FRAME_HandleCanFrame
  2187 ;; This function uses a non-reentrant model
  2188 ;;
  2189                           
  2190                           	psect	text17
  2191  0010EE                     __ptext17:
  2192                           	opt callstack 0
  2193  0010EE                     _FRAME_ExcitationMultiplier:
  2194                           	opt callstack 25
  2195                           
  2196                           ;FRAME.c: 167: static void FRAME_ExcitationMultiplier(mID *message);FRAME.c: 168: {;FRAM
      +                          E.c: 169:     WORD i;;FRAME.c: 171:     if(message->message_type == 0x02)
  2197                           
  2198                           ;incstack = 0
  2199  0010EE  EE20 F001          	lfsr	2,1
  2200  0010F2  5006               	movf	FRAME_ExcitationMultiplier@message,w,c
  2201  0010F4  26D9               	addwf	fsr2l,f,c
  2202  0010F6  5007               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  2203  0010F8  22DA               	addwfc	fsr2h,f,c
  2204  0010FA  0E02               	movlw	2
  2205  0010FC  18DE               	xorwf	postinc2,w,c
  2206  0010FE  A4D8               	btfss	status,2,c
  2207  001100  0012               	return	
  2208                           
  2209                           ;FRAME.c: 172:     {;FRAME.c: 173:         message->data_length = 1;
  2210  001102  EE20 F010          	lfsr	2,16
  2211  001106  5006               	movf	FRAME_ExcitationMultiplier@message,w,c
  2212  001108  26D9               	addwf	fsr2l,f,c
  2213  00110A  5007               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  2214  00110C  22DA               	addwfc	fsr2h,f,c
  2215  00110E  0E01               	movlw	1
  2216  001110  6EDF               	movwf	indf2,c
  2217                           
  2218                           ;FRAME.c: 174:         for(i=0; i<3; i++)
  2219  001112  0E00               	movlw	0
  2220  001114  6E0A               	movwf	FRAME_ExcitationMultiplier@i+1,c
  2221  001116  0E00               	movlw	0
  2222  001118  6E09               	movwf	FRAME_ExcitationMultiplier@i,c
  2223  00111A                     l2719:
  2224                           
  2225                           ;FRAME.c: 175:         {;FRAME.c: 178:         }
  2226  00111A  4A09               	infsnz	FRAME_ExcitationMultiplier@i,f,c
  2227  00111C  2A0A               	incf	FRAME_ExcitationMultiplier@i+1,f,c
  2228  00111E  500A               	movf	FRAME_ExcitationMultiplier@i+1,w,c
  2229  001120  E104               	bnz	u1250
  2230  001122  0E03               	movlw	3
  2231  001124  5C09               	subwf	FRAME_ExcitationMultiplier@i,w,c
  2232  001126  A0D8               	btfss	status,0,c
  2233  001128  D7F8               	goto	l2719
  2234  00112A                     u1250:
  2235                           
  2236                           ;FRAME.c: 179:         message->data[0] = 0xFF;
  2237  00112A  EE20 F008          	lfsr	2,8
  2238  00112E  5006               	movf	FRAME_ExcitationMultiplier@message,w,c
  2239  001130  26D9               	addwf	fsr2l,f,c
  2240  001132  5007               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  2241  001134  22DA               	addwfc	fsr2h,f,c
  2242  001136  0EFF               	movlw	255
  2243  001138  6EDF               	movwf	indf2,c
  2244                           
  2245                           ;FRAME.c: 180:     }
  2246  00113A  0012               	return		;funcret
  2247  00113C                     __end_of_FRAME_ExcitationMultiplier:
  2248                           	opt callstack 0
  2249                           
  2250 ;; *************** function _FRAME_DeviceReset *****************
  2251 ;; Defined at:
  2252 ;;		line 301 in file "FRAME.c"
  2253 ;; Parameters:    Size  Location     Type
  2254 ;;  message         2    5[COMRAM] PTR struct .
  2255 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2256 ;; Auto vars:     Size  Location     Type
  2257 ;;		None
  2258 ;; Return value:  Size  Location     Type
  2259 ;;                  1    wreg      void 
  2260 ;; Registers used:
  2261 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2262 ;; Tracked objects:
  2263 ;;		On entry : 0/0
  2264 ;;		On exit  : 0/0
  2265 ;;		Unchanged: 0/0
  2266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2267 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2269 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2270 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2271 ;;Total ram usage:        3 bytes
  2272 ;; Hardware stack levels used:    1
  2273 ;; Hardware stack levels required when called:    3
  2274 ;; This function calls:
  2275 ;;		Nothing
  2276 ;; This function is called by:
  2277 ;;		_FRAME_HandleCanFrame
  2278 ;; This function uses a non-reentrant model
  2279 ;;
  2280                           
  2281                           	psect	text18
  2282  000B00                     __ptext18:
  2283                           	opt callstack 0
  2284  000B00                     _FRAME_DeviceReset:
  2285                           	opt callstack 25
  2286                           
  2287                           ;FRAME.c: 301: static void FRAME_DeviceReset(mID *message);FRAME.c: 302: {;FRAME.c: 303:
      +                               if(message->message_type == 0x02)
  2288                           
  2289                           ;incstack = 0
  2290  000B00  EE20 F001          	lfsr	2,1
  2291  000B04  5006               	movf	FRAME_DeviceReset@message,w,c
  2292  000B06  26D9               	addwf	fsr2l,f,c
  2293  000B08  5007               	movf	FRAME_DeviceReset@message+1,w,c
  2294  000B0A  22DA               	addwfc	fsr2h,f,c
  2295  000B0C  0E02               	movlw	2
  2296  000B0E  18DE               	xorwf	postinc2,w,c
  2297  000B10  A4D8               	btfss	status,2,c
  2298  000B12  D057               	goto	l2741
  2299                           
  2300                           ;FRAME.c: 304:     {;FRAME.c: 305:         message->data_length = 1;
  2301  000B14  EE20 F010          	lfsr	2,16
  2302  000B18  5006               	movf	FRAME_DeviceReset@message,w,c
  2303  000B1A  26D9               	addwf	fsr2l,f,c
  2304  000B1C  5007               	movf	FRAME_DeviceReset@message+1,w,c
  2305  000B1E  22DA               	addwfc	fsr2h,f,c
  2306  000B20  0E01               	movlw	1
  2307  000B22  6EDF               	movwf	indf2,c
  2308                           
  2309                           ;FRAME.c: 307:         message->data[0] = (RCON>>6) & 0x01;
  2310  000B24  EE20 F008          	lfsr	2,8
  2311  000B28  5006               	movf	FRAME_DeviceReset@message,w,c
  2312  000B2A  26D9               	addwf	fsr2l,f,c
  2313  000B2C  5007               	movf	FRAME_DeviceReset@message+1,w,c
  2314  000B2E  22DA               	addwfc	fsr2h,f,c
  2315  000B30  44D0               	rlncf	4048,w,c	;volatile
  2316  000B32  46E8               	rlncf	wreg,f,c
  2317  000B34  0B03               	andlw	3
  2318  000B36  0B01               	andlw	1
  2319  000B38  6EDF               	movwf	indf2,c
  2320                           
  2321                           ;FRAME.c: 308:         message->data[1] = Flagi.wykonanoZapisDoFlash;
  2322  000B3A  EE20 F009          	lfsr	2,9
  2323  000B3E  5006               	movf	FRAME_DeviceReset@message,w,c
  2324  000B40  26D9               	addwf	fsr2l,f,c
  2325  000B42  5007               	movf	FRAME_DeviceReset@message+1,w,c
  2326  000B44  22DA               	addwfc	fsr2h,f,c
  2327  000B46  0100               	movlb	0	; () banked
  2328  000B48  A9D6               	btfss	_Flagi& (0+255),4,b
  2329  000B4A  D002               	goto	u1290
  2330  000B4C  0E01               	movlw	1
  2331  000B4E  D001               	goto	u1296
  2332  000B50                     u1290:
  2333  000B50  0E00               	movlw	0
  2334  000B52                     u1296:
  2335  000B52  6EDF               	movwf	indf2,c
  2336                           
  2337                           ;FRAME.c: 309:         message->data[2] = Flagi.pomiarTla;
  2338  000B54  EE20 F00A          	lfsr	2,10
  2339  000B58  5006               	movf	FRAME_DeviceReset@message,w,c
  2340  000B5A  26D9               	addwf	fsr2l,f,c
  2341  000B5C  5007               	movf	FRAME_DeviceReset@message+1,w,c
  2342  000B5E  22DA               	addwfc	fsr2h,f,c
  2343  000B60  A1D6               	btfss	_Flagi& (0+255),0,b
  2344  000B62  D002               	goto	u1300
  2345  000B64  0E01               	movlw	1
  2346  000B66  D001               	goto	u1306
  2347  000B68                     u1300:
  2348  000B68  0E00               	movlw	0
  2349  000B6A                     u1306:
  2350  000B6A  6EDF               	movwf	indf2,c
  2351                           
  2352                           ;FRAME.c: 310:         message->data[3] = 0;
  2353  000B6C  EE20 F00B          	lfsr	2,11
  2354  000B70  5006               	movf	FRAME_DeviceReset@message,w,c
  2355  000B72  26D9               	addwf	fsr2l,f,c
  2356  000B74  5007               	movf	FRAME_DeviceReset@message+1,w,c
  2357  000B76  22DA               	addwfc	fsr2h,f,c
  2358  000B78  0E00               	movlw	0
  2359  000B7A  6EDF               	movwf	indf2,c
  2360                           
  2361                           ;FRAME.c: 311:         message->data[4] = Dane->rokU16;
  2362  000B7C  EE20 F00C          	lfsr	2,12
  2363  000B80  5006               	movf	FRAME_DeviceReset@message,w,c
  2364  000B82  26D9               	addwf	fsr2l,f,c
  2365  000B84  5007               	movf	FRAME_DeviceReset@message+1,w,c
  2366  000B86  22DA               	addwfc	fsr2h,f,c
  2367  000B88  C036 FFDF          	movff	54,indf2
  2368                           
  2369                           ;FRAME.c: 312:         message->data[5] = Dane->miesiacU16;
  2370  000B8C  EE20 F00D          	lfsr	2,13
  2371  000B90  5006               	movf	FRAME_DeviceReset@message,w,c
  2372  000B92  26D9               	addwf	fsr2l,f,c
  2373  000B94  5007               	movf	FRAME_DeviceReset@message+1,w,c
  2374  000B96  22DA               	addwfc	fsr2h,f,c
  2375  000B98  C038 FFDF          	movff	56,indf2
  2376                           
  2377                           ;FRAME.c: 313:         message->data[6] = Dane->dzienU16;
  2378  000B9C  EE20 F00E          	lfsr	2,14
  2379  000BA0  5006               	movf	FRAME_DeviceReset@message,w,c
  2380  000BA2  26D9               	addwf	fsr2l,f,c
  2381  000BA4  5007               	movf	FRAME_DeviceReset@message+1,w,c
  2382  000BA6  22DA               	addwfc	fsr2h,f,c
  2383  000BA8  C03A FFDF          	movff	58,indf2
  2384                           
  2385                           ;FRAME.c: 314:         message->data[7] = Dane->godzinaU16;
  2386  000BAC  EE20 F00F          	lfsr	2,15
  2387  000BB0  5006               	movf	FRAME_DeviceReset@message,w,c
  2388  000BB2  26D9               	addwf	fsr2l,f,c
  2389  000BB4  5007               	movf	FRAME_DeviceReset@message+1,w,c
  2390  000BB6  22DA               	addwfc	fsr2h,f,c
  2391  000BB8  C03C FFDF          	movff	60,indf2
  2392                           
  2393                           ; BSR set to: 0
  2394                           ;FRAME.c: 315:         RCON &= ~(1<<6);
  2395  000BBC  9CD0               	bcf	4048,6,c	;volatile
  2396                           
  2397                           ; BSR set to: 0
  2398                           ;FRAME.c: 316:         Flagi.wykonanoZapisDoFlash = 0;
  2399  000BBE  99D6               	bcf	_Flagi& (0+255),4,b
  2400                           
  2401                           ;FRAME.c: 330:     }
  2402  000BC0  0012               	return	
  2403  000BC2                     l2741:
  2404                           
  2405                           ;FRAME.c: 332:     {;FRAME.c: 333:         message->data_length = 1;
  2406  000BC2  EE20 F010          	lfsr	2,16
  2407  000BC6  5006               	movf	FRAME_DeviceReset@message,w,c
  2408  000BC8  26D9               	addwf	fsr2l,f,c
  2409  000BCA  5007               	movf	FRAME_DeviceReset@message+1,w,c
  2410  000BCC  22DA               	addwfc	fsr2h,f,c
  2411  000BCE  0E01               	movlw	1
  2412  000BD0  6EDF               	movwf	indf2,c
  2413                           
  2414                           ;FRAME.c: 355:         message->data[0] = 0xFF;
  2415  000BD2  EE20 F008          	lfsr	2,8
  2416  000BD6  5006               	movf	FRAME_DeviceReset@message,w,c
  2417  000BD8  26D9               	addwf	fsr2l,f,c
  2418  000BDA  5007               	movf	FRAME_DeviceReset@message+1,w,c
  2419  000BDC  22DA               	addwfc	fsr2h,f,c
  2420  000BDE  0EFF               	movlw	255
  2421  000BE0  6EDF               	movwf	indf2,c
  2422  000BE2  0012               	return		;funcret
  2423  000BE4                     __end_of_FRAME_DeviceReset:
  2424                           	opt callstack 0
  2425                           
  2426 ;; *************** function _FRAME_AxisStatus *****************
  2427 ;; Defined at:
  2428 ;;		line 254 in file "FRAME.c"
  2429 ;; Parameters:    Size  Location     Type
  2430 ;;  message         2    5[COMRAM] PTR struct .
  2431 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2432 ;; Auto vars:     Size  Location     Type
  2433 ;;  i               2    0        unsigned short 
  2434 ;; Return value:  Size  Location     Type
  2435 ;;                  1    wreg      void 
  2436 ;; Registers used:
  2437 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2438 ;; Tracked objects:
  2439 ;;		On entry : 0/0
  2440 ;;		On exit  : 0/0
  2441 ;;		Unchanged: 0/0
  2442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2443 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2445 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2446 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2447 ;;Total ram usage:        3 bytes
  2448 ;; Hardware stack levels used:    1
  2449 ;; Hardware stack levels required when called:    3
  2450 ;; This function calls:
  2451 ;;		Nothing
  2452 ;; This function is called by:
  2453 ;;		_FRAME_HandleCanFrame
  2454 ;; This function uses a non-reentrant model
  2455 ;;
  2456                           
  2457                           	psect	text19
  2458  001280                     __ptext19:
  2459                           	opt callstack 0
  2460  001280                     _FRAME_AxisStatus:
  2461                           	opt callstack 25
  2462                           
  2463                           ;FRAME.c: 254: static void FRAME_AxisStatus(mID *message);FRAME.c: 255: {;FRAME.c: 256: 
      +                              WORD i;;FRAME.c: 258:     if(message->message_type == 0x02)
  2464                           
  2465                           ;incstack = 0
  2466  001280  EE20 F001          	lfsr	2,1
  2467  001284  5006               	movf	FRAME_AxisStatus@message,w,c
  2468  001286  26D9               	addwf	fsr2l,f,c
  2469  001288  5007               	movf	FRAME_AxisStatus@message+1,w,c
  2470  00128A  22DA               	addwfc	fsr2h,f,c
  2471  00128C  0E02               	movlw	2
  2472  00128E  18DE               	xorwf	postinc2,w,c
  2473  001290  A4D8               	btfss	status,2,c
  2474  001292  0012               	return	
  2475                           
  2476                           ;FRAME.c: 259:     {;FRAME.c: 260:         message->data_length = 1;
  2477  001294  EE20 F010          	lfsr	2,16
  2478  001298  5006               	movf	FRAME_AxisStatus@message,w,c
  2479  00129A  26D9               	addwf	fsr2l,f,c
  2480  00129C  5007               	movf	FRAME_AxisStatus@message+1,w,c
  2481  00129E  22DA               	addwfc	fsr2h,f,c
  2482  0012A0  0E01               	movlw	1
  2483  0012A2  6EDF               	movwf	indf2,c
  2484                           
  2485                           ;FRAME.c: 271:         message->data[0] = 0xFF;
  2486  0012A4  EE20 F008          	lfsr	2,8
  2487  0012A8  5006               	movf	FRAME_AxisStatus@message,w,c
  2488  0012AA  26D9               	addwf	fsr2l,f,c
  2489  0012AC  5007               	movf	FRAME_AxisStatus@message+1,w,c
  2490  0012AE  22DA               	addwfc	fsr2h,f,c
  2491  0012B0  0EFF               	movlw	255
  2492  0012B2  6EDF               	movwf	indf2,c
  2493                           
  2494                           ;FRAME.c: 272:     }
  2495  0012B4  0012               	return		;funcret
  2496  0012B6                     __end_of_FRAME_AxisStatus:
  2497                           	opt callstack 0
  2498                           
  2499 ;; *************** function _FRAME_AveragingTimes *****************
  2500 ;; Defined at:
  2501 ;;		line 195 in file "FRAME.c"
  2502 ;; Parameters:    Size  Location     Type
  2503 ;;  message         2    5[COMRAM] PTR struct .
  2504 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2505 ;; Auto vars:     Size  Location     Type
  2506 ;;		None
  2507 ;; Return value:  Size  Location     Type
  2508 ;;                  1    wreg      void 
  2509 ;; Registers used:
  2510 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2511 ;; Tracked objects:
  2512 ;;		On entry : 0/0
  2513 ;;		On exit  : 0/0
  2514 ;;		Unchanged: 0/0
  2515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2516 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2518 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2519 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2520 ;;Total ram usage:        3 bytes
  2521 ;; Hardware stack levels used:    1
  2522 ;; Hardware stack levels required when called:    3
  2523 ;; This function calls:
  2524 ;;		Nothing
  2525 ;; This function is called by:
  2526 ;;		_FRAME_HandleCanFrame
  2527 ;; This function uses a non-reentrant model
  2528 ;;
  2529                           
  2530                           	psect	text20
  2531  0012B6                     __ptext20:
  2532                           	opt callstack 0
  2533  0012B6                     _FRAME_AveragingTimes:
  2534                           	opt callstack 25
  2535                           
  2536                           ;FRAME.c: 195: static void FRAME_AveragingTimes(mID *message);FRAME.c: 196: {;FRAME.c: 1
      +                          97:     if(message->message_type == 0x02)
  2537                           
  2538                           ;incstack = 0
  2539  0012B6  EE20 F001          	lfsr	2,1
  2540  0012BA  5006               	movf	FRAME_AveragingTimes@message,w,c
  2541  0012BC  26D9               	addwf	fsr2l,f,c
  2542  0012BE  5007               	movf	FRAME_AveragingTimes@message+1,w,c
  2543  0012C0  22DA               	addwfc	fsr2h,f,c
  2544  0012C2  0E02               	movlw	2
  2545  0012C4  18DE               	xorwf	postinc2,w,c
  2546  0012C6  A4D8               	btfss	status,2,c
  2547  0012C8  0012               	return	
  2548                           
  2549                           ;FRAME.c: 198:     {;FRAME.c: 199:         message->data_length = 1;
  2550  0012CA  EE20 F010          	lfsr	2,16
  2551  0012CE  5006               	movf	FRAME_AveragingTimes@message,w,c
  2552  0012D0  26D9               	addwf	fsr2l,f,c
  2553  0012D2  5007               	movf	FRAME_AveragingTimes@message+1,w,c
  2554  0012D4  22DA               	addwfc	fsr2h,f,c
  2555  0012D6  0E01               	movlw	1
  2556  0012D8  6EDF               	movwf	indf2,c
  2557                           
  2558                           ;FRAME.c: 207:         message->data[0] = 0xFF;
  2559  0012DA  EE20 F008          	lfsr	2,8
  2560  0012DE  5006               	movf	FRAME_AveragingTimes@message,w,c
  2561  0012E0  26D9               	addwf	fsr2l,f,c
  2562  0012E2  5007               	movf	FRAME_AveragingTimes@message+1,w,c
  2563  0012E4  22DA               	addwfc	fsr2h,f,c
  2564  0012E6  0EFF               	movlw	255
  2565  0012E8  6EDF               	movwf	indf2,c
  2566                           
  2567                           ;FRAME.c: 208:     }
  2568  0012EA  0012               	return		;funcret
  2569  0012EC                     __end_of_FRAME_AveragingTimes:
  2570                           	opt callstack 0
  2571                           
  2572 ;; *************** function _FRAME_AnalogValue *****************
  2573 ;; Defined at:
  2574 ;;		line 434 in file "FRAME.c"
  2575 ;; Parameters:    Size  Location     Type
  2576 ;;  message         2    5[COMRAM] PTR struct .
  2577 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2578 ;;  set             2    7[COMRAM] unsigned short 
  2579 ;; Auto vars:     Size  Location     Type
  2580 ;;  i               2    0        unsigned short 
  2581 ;; Return value:  Size  Location     Type
  2582 ;;                  1    wreg      void 
  2583 ;; Registers used:
  2584 ;;		None
  2585 ;; Tracked objects:
  2586 ;;		On entry : 0/0
  2587 ;;		On exit  : 0/0
  2588 ;;		Unchanged: 0/0
  2589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2590 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2593 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2594 ;;Total ram usage:        4 bytes
  2595 ;; Hardware stack levels used:    1
  2596 ;; Hardware stack levels required when called:    3
  2597 ;; This function calls:
  2598 ;;		Nothing
  2599 ;; This function is called by:
  2600 ;;		_FRAME_HandleCanFrame
  2601 ;; This function uses a non-reentrant model
  2602 ;;
  2603                           
  2604                           	psect	text21
  2605  0014EC                     __ptext21:
  2606                           	opt callstack 0
  2607  0014EC                     _FRAME_AnalogValue:
  2608                           	opt callstack 25
  2609                           
  2610                           ;incstack = 0
  2611  0014EC  0012               	return		;funcret
  2612  0014EE                     __end_of_FRAME_AnalogValue:
  2613                           	opt callstack 0
  2614                           
  2615 ;; *************** function _FRAME_AdressOfNeighbors *****************
  2616 ;; Defined at:
  2617 ;;		line 478 in file "FRAME.c"
  2618 ;; Parameters:    Size  Location     Type
  2619 ;;  message         2    5[COMRAM] PTR struct .
  2620 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2621 ;;  nrRamki         2    7[COMRAM] unsigned short 
  2622 ;; Auto vars:     Size  Location     Type
  2623 ;;  gaja            2   31[COMRAM] unsigned short 
  2624 ;;  kier            2   29[COMRAM] unsigned short 
  2625 ;;  uranos          2   27[COMRAM] unsigned short 
  2626 ;;  zeta_secodus    2    0        unsigned short 
  2627 ;;  zeta            2    0        unsigned short 
  2628 ;;  iterator_alf    2   35[COMRAM] unsigned short 
  2629 ;;  kier            2   33[COMRAM] unsigned short 
  2630 ;; Return value:  Size  Location     Type
  2631 ;;                  1    wreg      void 
  2632 ;; Registers used:
  2633 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2634 ;; Tracked objects:
  2635 ;;		On entry : 0/0
  2636 ;;		On exit  : 0/0
  2637 ;;		Unchanged: 0/0
  2638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2639 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2640 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2641 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2642 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2643 ;;Total ram usage:       32 bytes
  2644 ;; Hardware stack levels used:    1
  2645 ;; Hardware stack levels required when called:    3
  2646 ;; This function calls:
  2647 ;;		Nothing
  2648 ;; This function is called by:
  2649 ;;		_FRAME_HandleCanFrame
  2650 ;; This function uses a non-reentrant model
  2651 ;;
  2652                           
  2653                           	psect	text22
  2654  0002DC                     __ptext22:
  2655                           	opt callstack 0
  2656  0002DC                     _FRAME_AdressOfNeighbors:
  2657                           	opt callstack 25
  2658                           
  2659                           ;FRAME.c: 478: static void FRAME_AdressOfNeighbors(mID *message, WORD nrRamki);FRAME.c: 
      +                          479: {;FRAME.c: 480:     WORD iterator_alfa;;FRAME.c: 483:     WORD kier = (nrRamki-0x10
      +                          );
  2660                           
  2661                           ;incstack = 0
  2662  0002DC  0EF0               	movlw	240
  2663  0002DE  2408               	addwf	FRAME_AdressOfNeighbors@nrRamki,w,c
  2664  0002E0  6E22               	movwf	FRAME_AdressOfNeighbors@kier,c
  2665  0002E2  0EFF               	movlw	255
  2666  0002E4  2009               	addwfc	FRAME_AdressOfNeighbors@nrRamki+1,w,c
  2667  0002E6  6E23               	movwf	FRAME_AdressOfNeighbors@kier+1,c
  2668                           
  2669                           ;FRAME.c: 484:     if(message->message_type == 0x02)
  2670  0002E8  EE20 F001          	lfsr	2,1
  2671  0002EC  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  2672  0002EE  26D9               	addwf	fsr2l,f,c
  2673  0002F0  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  2674  0002F2  22DA               	addwfc	fsr2h,f,c
  2675  0002F4  0E02               	movlw	2
  2676  0002F6  18DE               	xorwf	postinc2,w,c
  2677  0002F8  A4D8               	btfss	status,2,c
  2678  0002FA  D072               	goto	l2777
  2679                           
  2680                           ;FRAME.c: 485:     {;FRAME.c: 487:         message->data_length = 8;
  2681  0002FC  EE20 F010          	lfsr	2,16
  2682  000300  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  2683  000302  26D9               	addwf	fsr2l,f,c
  2684  000304  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  2685  000306  22DA               	addwfc	fsr2h,f,c
  2686  000308  0E08               	movlw	8
  2687  00030A  6EDF               	movwf	indf2,c
  2688                           
  2689                           ;FRAME.c: 488:         for(iterator_alfa=0; iterator_alfa<4; iterator_alfa++)
  2690  00030C  0E00               	movlw	0
  2691  00030E  6E25               	movwf	FRAME_AdressOfNeighbors@iterator_alfa+1,c
  2692  000310  0E00               	movlw	0
  2693  000312  6E24               	movwf	FRAME_AdressOfNeighbors@iterator_alfa,c
  2694  000314                     l2769:
  2695                           
  2696                           ;FRAME.c: 489:         {;FRAME.c: 490:             message->data[(2*iterator_alfa)] = ((
      +                          BYTE)NeightAdress[(iterator_alfa+(4*kier))] >> 8);
  2697  000314  C022  F00A         	movff	FRAME_AdressOfNeighbors@kier,??_FRAME_AdressOfNeighbors
  2698  000318  C023  F00B         	movff	FRAME_AdressOfNeighbors@kier+1,??_FRAME_AdressOfNeighbors+1
  2699  00031C  90D8               	bcf	status,0,c
  2700  00031E  360A               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  2701  000320  360B               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  2702  000322  90D8               	bcf	status,0,c
  2703  000324  360A               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  2704  000326  360B               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  2705  000328  5024               	movf	FRAME_AdressOfNeighbors@iterator_alfa,w,c
  2706  00032A  260A               	addwf	??_FRAME_AdressOfNeighbors,f,c
  2707  00032C  5025               	movf	FRAME_AdressOfNeighbors@iterator_alfa+1,w,c
  2708  00032E  220B               	addwfc	??_FRAME_AdressOfNeighbors+1,f,c
  2709  000330  90D8               	bcf	status,0,c
  2710  000332  360A               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  2711  000334  360B               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  2712  000336  0EC6               	movlw	low _NeightAdress
  2713  000338  240A               	addwf	??_FRAME_AdressOfNeighbors,w,c
  2714  00033A  6ED9               	movwf	fsr2l,c
  2715  00033C  0E00               	movlw	high _NeightAdress
  2716  00033E  200B               	addwfc	??_FRAME_AdressOfNeighbors+1,w,c
  2717  000340  6EDA               	movwf	fsr2h,c
  2718  000342  C024  F00A         	movff	FRAME_AdressOfNeighbors@iterator_alfa,??_FRAME_AdressOfNeighbors
  2719  000346  C025  F00B         	movff	FRAME_AdressOfNeighbors@iterator_alfa+1,??_FRAME_AdressOfNeighbors+1
  2720  00034A  90D8               	bcf	status,0,c
  2721  00034C  360A               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  2722  00034E  360B               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  2723  000350  C006  F00C         	movff	FRAME_AdressOfNeighbors@message,??_FRAME_AdressOfNeighbors+2
  2724  000354  C007  F00D         	movff	FRAME_AdressOfNeighbors@message+1,??_FRAME_AdressOfNeighbors+3
  2725  000358  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  2726  00035A  260C               	addwf	??_FRAME_AdressOfNeighbors+2,f,c
  2727  00035C  500B               	movf	??_FRAME_AdressOfNeighbors+1,w,c
  2728  00035E  220D               	addwfc	??_FRAME_AdressOfNeighbors+3,f,c
  2729  000360  0E08               	movlw	8
  2730  000362  240C               	addwf	??_FRAME_AdressOfNeighbors+2,w,c
  2731  000364  6ED9               	movwf	fsr2l,c
  2732  000366  0E00               	movlw	0
  2733  000368  200D               	addwfc	??_FRAME_AdressOfNeighbors+3,w,c
  2734  00036A  6EDA               	movwf	fsr2h,c
  2735  00036C  0E00               	movlw	0
  2736  00036E  6EDF               	movwf	indf2,c
  2737                           
  2738                           ;FRAME.c: 491:             message->data[((2*iterator_alfa)+1)] = (BYTE)NeightAdress[(it
      +                          erator_alfa+(4*kier))];
  2739  000370  C022  F00A         	movff	FRAME_AdressOfNeighbors@kier,??_FRAME_AdressOfNeighbors
  2740  000374  C023  F00B         	movff	FRAME_AdressOfNeighbors@kier+1,??_FRAME_AdressOfNeighbors+1
  2741  000378  90D8               	bcf	status,0,c
  2742  00037A  360A               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  2743  00037C  360B               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  2744  00037E  90D8               	bcf	status,0,c
  2745  000380  360A               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  2746  000382  360B               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  2747  000384  5024               	movf	FRAME_AdressOfNeighbors@iterator_alfa,w,c
  2748  000386  260A               	addwf	??_FRAME_AdressOfNeighbors,f,c
  2749  000388  5025               	movf	FRAME_AdressOfNeighbors@iterator_alfa+1,w,c
  2750  00038A  220B               	addwfc	??_FRAME_AdressOfNeighbors+1,f,c
  2751  00038C  90D8               	bcf	status,0,c
  2752  00038E  360A               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  2753  000390  360B               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  2754  000392  0EC6               	movlw	low _NeightAdress
  2755  000394  240A               	addwf	??_FRAME_AdressOfNeighbors,w,c
  2756  000396  6ED9               	movwf	fsr2l,c
  2757  000398  0E00               	movlw	high _NeightAdress
  2758  00039A  200B               	addwfc	??_FRAME_AdressOfNeighbors+1,w,c
  2759  00039C  6EDA               	movwf	fsr2h,c
  2760  00039E  C024  F00C         	movff	FRAME_AdressOfNeighbors@iterator_alfa,??_FRAME_AdressOfNeighbors+2
  2761  0003A2  C025  F00D         	movff	FRAME_AdressOfNeighbors@iterator_alfa+1,??_FRAME_AdressOfNeighbors+3
  2762  0003A6  90D8               	bcf	status,0,c
  2763  0003A8  360C               	rlcf	??_FRAME_AdressOfNeighbors+2,f,c
  2764  0003AA  360D               	rlcf	??_FRAME_AdressOfNeighbors+3,f,c
  2765  0003AC  C006  F00E         	movff	FRAME_AdressOfNeighbors@message,??_FRAME_AdressOfNeighbors+4
  2766  0003B0  C007  F00F         	movff	FRAME_AdressOfNeighbors@message+1,??_FRAME_AdressOfNeighbors+5
  2767  0003B4  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  2768  0003B6  260E               	addwf	??_FRAME_AdressOfNeighbors+4,f,c
  2769  0003B8  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  2770  0003BA  220F               	addwfc	??_FRAME_AdressOfNeighbors+5,f,c
  2771  0003BC  0E09               	movlw	9
  2772  0003BE  240E               	addwf	??_FRAME_AdressOfNeighbors+4,w,c
  2773  0003C0  6EE1               	movwf	fsr1l,c
  2774  0003C2  0E00               	movlw	0
  2775  0003C4  200F               	addwfc	??_FRAME_AdressOfNeighbors+5,w,c
  2776  0003C6  6EE2               	movwf	fsr1h,c
  2777  0003C8  CFDF FFE7          	movff	indf2,indf1
  2778                           
  2779                           ;FRAME.c: 492:         }
  2780  0003CC  4A24               	infsnz	FRAME_AdressOfNeighbors@iterator_alfa,f,c
  2781  0003CE  2A25               	incf	FRAME_AdressOfNeighbors@iterator_alfa+1,f,c
  2782  0003D0  5025               	movf	FRAME_AdressOfNeighbors@iterator_alfa+1,w,c
  2783  0003D2  E105               	bnz	u1350
  2784  0003D4  0E04               	movlw	4
  2785  0003D6  5C24               	subwf	FRAME_AdressOfNeighbors@iterator_alfa,w,c
  2786  0003D8  B0D8               	btfsc	status,0,c
  2787  0003DA  0012               	return	
  2788  0003DC  D79B               	goto	l2769
  2789  0003DE                     u1350:
  2790  0003DE  0012               	return	
  2791  0003E0                     l2777:
  2792                           
  2793                           ;FRAME.c: 496:     {;FRAME.c: 497:         WORD uranos = (message->data[2] << 8 ) | mess
      +                          age->data[3];
  2794  0003E0  EE20 F00A          	lfsr	2,10
  2795  0003E4  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  2796  0003E6  26D9               	addwf	fsr2l,f,c
  2797  0003E8  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  2798  0003EA  22DA               	addwfc	fsr2h,f,c
  2799  0003EC  50DF               	movf	indf2,w,c
  2800  0003EE  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  2801  0003F0  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  2802  0003F2  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  2803  0003F4  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  2804  0003F6  EE20 F00B          	lfsr	2,11
  2805  0003FA  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  2806  0003FC  26D9               	addwf	fsr2l,f,c
  2807  0003FE  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  2808  000400  22DA               	addwfc	fsr2h,f,c
  2809  000402  50DF               	movf	indf2,w,c
  2810  000404  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  2811  000406  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  2812  000408  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  2813  00040A  6E1C               	movwf	FRAME_AdressOfNeighbors@uranos,c
  2814  00040C  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  2815  00040E  6E1D               	movwf	FRAME_AdressOfNeighbors@uranos+1,c
  2816                           
  2817                           ;FRAME.c: 500:         WORD kier = (nrRamki-0x10);
  2818  000410  0EF0               	movlw	240
  2819  000412  2408               	addwf	FRAME_AdressOfNeighbors@nrRamki,w,c
  2820  000414  6E1E               	movwf	FRAME_AdressOfNeighbors@kier_3191,c
  2821  000416  0EFF               	movlw	255
  2822  000418  2009               	addwfc	FRAME_AdressOfNeighbors@nrRamki+1,w,c
  2823  00041A  6E1F               	movwf	FRAME_AdressOfNeighbors@kier_3191+1,c
  2824                           
  2825                           ;FRAME.c: 502:          WORD gaja = message->data[0] << 8 | message->data[1];
  2826  00041C  EE20 F008          	lfsr	2,8
  2827  000420  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  2828  000422  26D9               	addwf	fsr2l,f,c
  2829  000424  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  2830  000426  22DA               	addwfc	fsr2h,f,c
  2831  000428  50DF               	movf	indf2,w,c
  2832  00042A  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  2833  00042C  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  2834  00042E  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  2835  000430  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  2836  000432  EE20 F009          	lfsr	2,9
  2837  000436  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  2838  000438  26D9               	addwf	fsr2l,f,c
  2839  00043A  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  2840  00043C  22DA               	addwfc	fsr2h,f,c
  2841  00043E  50DF               	movf	indf2,w,c
  2842  000440  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  2843  000442  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  2844  000444  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  2845  000446  6E20               	movwf	FRAME_AdressOfNeighbors@gaja,c
  2846  000448  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  2847  00044A  6E21               	movwf	FRAME_AdressOfNeighbors@gaja+1,c
  2848                           
  2849                           ;FRAME.c: 515:          for(iterator_alfa=0; iterator_alfa<4;iterator_alfa++)
  2850  00044C  0E00               	movlw	0
  2851  00044E  6E25               	movwf	FRAME_AdressOfNeighbors@iterator_alfa+1,c
  2852  000450  0E00               	movlw	0
  2853  000452  6E24               	movwf	FRAME_AdressOfNeighbors@iterator_alfa,c
  2854  000454                     l2793:
  2855                           
  2856                           ;FRAME.c: 516:          {;FRAME.c: 517:              NeightAdress[(iterator_alfa+(4*kier
      +                          ))] = (message->data[2*iterator_alfa] << 8)| message->data[((2*iterator_alfa)+1)];
  2857  000454  C024  F00A         	movff	FRAME_AdressOfNeighbors@iterator_alfa,??_FRAME_AdressOfNeighbors
  2858  000458  C025  F00B         	movff	FRAME_AdressOfNeighbors@iterator_alfa+1,??_FRAME_AdressOfNeighbors+1
  2859  00045C  90D8               	bcf	status,0,c
  2860  00045E  360A               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  2861  000460  360B               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  2862  000462  C006  F00C         	movff	FRAME_AdressOfNeighbors@message,??_FRAME_AdressOfNeighbors+2
  2863  000466  C007  F00D         	movff	FRAME_AdressOfNeighbors@message+1,??_FRAME_AdressOfNeighbors+3
  2864  00046A  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  2865  00046C  260C               	addwf	??_FRAME_AdressOfNeighbors+2,f,c
  2866  00046E  500B               	movf	??_FRAME_AdressOfNeighbors+1,w,c
  2867  000470  220D               	addwfc	??_FRAME_AdressOfNeighbors+3,f,c
  2868  000472  0E08               	movlw	8
  2869  000474  240C               	addwf	??_FRAME_AdressOfNeighbors+2,w,c
  2870  000476  6ED9               	movwf	fsr2l,c
  2871  000478  0E00               	movlw	0
  2872  00047A  200D               	addwfc	??_FRAME_AdressOfNeighbors+3,w,c
  2873  00047C  6EDA               	movwf	fsr2h,c
  2874  00047E  50DF               	movf	indf2,w,c
  2875  000480  6E0E               	movwf	(??_FRAME_AdressOfNeighbors+4)& (0+255),c
  2876  000482  500E               	movf	??_FRAME_AdressOfNeighbors+4,w,c
  2877  000484  6E10               	movwf	(??_FRAME_AdressOfNeighbors+6)& (0+255),c
  2878  000486  6A0F               	clrf	(??_FRAME_AdressOfNeighbors+5)& (0+255),c
  2879  000488  C024  F011         	movff	FRAME_AdressOfNeighbors@iterator_alfa,??_FRAME_AdressOfNeighbors+7
  2880  00048C  C025  F012         	movff	FRAME_AdressOfNeighbors@iterator_alfa+1,??_FRAME_AdressOfNeighbors+8
  2881  000490  90D8               	bcf	status,0,c
  2882  000492  3611               	rlcf	??_FRAME_AdressOfNeighbors+7,f,c
  2883  000494  3612               	rlcf	??_FRAME_AdressOfNeighbors+8,f,c
  2884  000496  C006  F013         	movff	FRAME_AdressOfNeighbors@message,??_FRAME_AdressOfNeighbors+9
  2885  00049A  C007  F014         	movff	FRAME_AdressOfNeighbors@message+1,??_FRAME_AdressOfNeighbors+10
  2886  00049E  5011               	movf	??_FRAME_AdressOfNeighbors+7,w,c
  2887  0004A0  2613               	addwf	??_FRAME_AdressOfNeighbors+9,f,c
  2888  0004A2  5012               	movf	??_FRAME_AdressOfNeighbors+8,w,c
  2889  0004A4  2214               	addwfc	??_FRAME_AdressOfNeighbors+10,f,c
  2890  0004A6  0E09               	movlw	9
  2891  0004A8  2413               	addwf	??_FRAME_AdressOfNeighbors+9,w,c
  2892  0004AA  6ED9               	movwf	fsr2l,c
  2893  0004AC  0E00               	movlw	0
  2894  0004AE  2014               	addwfc	??_FRAME_AdressOfNeighbors+10,w,c
  2895  0004B0  6EDA               	movwf	fsr2h,c
  2896  0004B2  50DF               	movf	indf2,w,c
  2897  0004B4  6E15               	movwf	(??_FRAME_AdressOfNeighbors+11)& (0+255),c
  2898  0004B6  5015               	movf	??_FRAME_AdressOfNeighbors+11,w,c
  2899  0004B8  120F               	iorwf	??_FRAME_AdressOfNeighbors+5,f,c
  2900  0004BA  0E00               	movlw	0
  2901  0004BC  1210               	iorwf	??_FRAME_AdressOfNeighbors+6,f,c
  2902  0004BE  C01E  F016         	movff	FRAME_AdressOfNeighbors@kier_3191,??_FRAME_AdressOfNeighbors+12
  2903  0004C2  C01F  F017         	movff	FRAME_AdressOfNeighbors@kier_3191+1,??_FRAME_AdressOfNeighbors+13
  2904  0004C6  90D8               	bcf	status,0,c
  2905  0004C8  3616               	rlcf	??_FRAME_AdressOfNeighbors+12,f,c
  2906  0004CA  3617               	rlcf	??_FRAME_AdressOfNeighbors+13,f,c
  2907  0004CC  90D8               	bcf	status,0,c
  2908  0004CE  3616               	rlcf	??_FRAME_AdressOfNeighbors+12,f,c
  2909  0004D0  3617               	rlcf	??_FRAME_AdressOfNeighbors+13,f,c
  2910  0004D2  5024               	movf	FRAME_AdressOfNeighbors@iterator_alfa,w,c
  2911  0004D4  2616               	addwf	??_FRAME_AdressOfNeighbors+12,f,c
  2912  0004D6  5025               	movf	FRAME_AdressOfNeighbors@iterator_alfa+1,w,c
  2913  0004D8  2217               	addwfc	??_FRAME_AdressOfNeighbors+13,f,c
  2914  0004DA  90D8               	bcf	status,0,c
  2915  0004DC  3616               	rlcf	??_FRAME_AdressOfNeighbors+12,f,c
  2916  0004DE  3617               	rlcf	??_FRAME_AdressOfNeighbors+13,f,c
  2917  0004E0  0EC6               	movlw	low _NeightAdress
  2918  0004E2  2416               	addwf	??_FRAME_AdressOfNeighbors+12,w,c
  2919  0004E4  6ED9               	movwf	fsr2l,c
  2920  0004E6  0E00               	movlw	high _NeightAdress
  2921  0004E8  2017               	addwfc	??_FRAME_AdressOfNeighbors+13,w,c
  2922  0004EA  6EDA               	movwf	fsr2h,c
  2923  0004EC  C00F  FFDE         	movff	??_FRAME_AdressOfNeighbors+5,postinc2
  2924  0004F0  C010  FFDD         	movff	??_FRAME_AdressOfNeighbors+6,postdec2
  2925                           
  2926                           ;FRAME.c: 518:          }
  2927  0004F4  4A24               	infsnz	FRAME_AdressOfNeighbors@iterator_alfa,f,c
  2928  0004F6  2A25               	incf	FRAME_AdressOfNeighbors@iterator_alfa+1,f,c
  2929  0004F8  5025               	movf	FRAME_AdressOfNeighbors@iterator_alfa+1,w,c
  2930  0004FA  E105               	bnz	u1360
  2931  0004FC  0E04               	movlw	4
  2932  0004FE  5C24               	subwf	FRAME_AdressOfNeighbors@iterator_alfa,w,c
  2933  000500  B0D8               	btfsc	status,0,c
  2934  000502  0012               	return	
  2935  000504  D7A7               	goto	l2793
  2936  000506                     u1360:
  2937  000506  0012               	return		;funcret
  2938  000508                     __end_of_FRAME_AdressOfNeighbors:
  2939                           	opt callstack 0
  2940                           
  2941 ;; *************** function _FRAME_AccelerometerStatus *****************
  2942 ;; Defined at:
  2943 ;;		line 118 in file "FRAME.c"
  2944 ;; Parameters:    Size  Location     Type
  2945 ;;  message         2    7[COMRAM] PTR struct .
  2946 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2947 ;; Auto vars:     Size  Location     Type
  2948 ;;		None
  2949 ;; Return value:  Size  Location     Type
  2950 ;;                  1    wreg      void 
  2951 ;; Registers used:
  2952 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2953 ;; Tracked objects:
  2954 ;;		On entry : 0/0
  2955 ;;		On exit  : 0/0
  2956 ;;		Unchanged: 0/0
  2957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2958 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2960 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2961 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2962 ;;Total ram usage:        3 bytes
  2963 ;; Hardware stack levels used:    1
  2964 ;; Hardware stack levels required when called:    4
  2965 ;; This function calls:
  2966 ;;		_MOCK_Klikniecie_Spadek
  2967 ;;		_MOCK_PrzyspieszenieX
  2968 ;;		_MOCK_PrzyspieszenieY
  2969 ;;		_MOCK_PrzyspieszenieZ
  2970 ;; This function is called by:
  2971 ;;		_FRAME_HandleCanFrame
  2972 ;; This function uses a non-reentrant model
  2973 ;;
  2974                           
  2975                           	psect	text23
  2976  000EB2                     __ptext23:
  2977                           	opt callstack 0
  2978  000EB2                     _FRAME_AccelerometerStatus:
  2979                           	opt callstack 24
  2980                           
  2981                           ;FRAME.c: 118: static void FRAME_AccelerometerStatus(mID *message);FRAME.c: 119: {;FRAME
      +                          .c: 120:     if(message->message_type == 0x02)
  2982                           
  2983                           ;incstack = 0
  2984  000EB2  EE20 F001          	lfsr	2,1
  2985  000EB6  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  2986  000EB8  26D9               	addwf	fsr2l,f,c
  2987  000EBA  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  2988  000EBC  22DA               	addwfc	fsr2h,f,c
  2989  000EBE  0E02               	movlw	2
  2990  000EC0  18DE               	xorwf	postinc2,w,c
  2991  000EC2  A4D8               	btfss	status,2,c
  2992  000EC4  0012               	return	
  2993                           
  2994                           ;FRAME.c: 121:     {;FRAME.c: 122:         message->data_length = 4;
  2995  000EC6  EE20 F010          	lfsr	2,16
  2996  000ECA  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  2997  000ECC  26D9               	addwf	fsr2l,f,c
  2998  000ECE  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  2999  000ED0  22DA               	addwfc	fsr2h,f,c
  3000  000ED2  0E04               	movlw	4
  3001  000ED4  6EDF               	movwf	indf2,c
  3002                           
  3003                           ;FRAME.c: 126:         message->data[0] = MOCK_PrzyspieszenieX();
  3004  000ED6  EE20 F008          	lfsr	2,8
  3005  000EDA  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  3006  000EDC  26D9               	addwf	fsr2l,f,c
  3007  000EDE  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3008  000EE0  22DA               	addwfc	fsr2h,f,c
  3009  000EE2  EC4A  F00A         	call	_MOCK_PrzyspieszenieX	;wreg free
  3010  000EE6  5006               	movf	?_MOCK_PrzyspieszenieX,w,c
  3011  000EE8  6EDF               	movwf	indf2,c
  3012                           
  3013                           ;FRAME.c: 127:         message->data[1] = MOCK_PrzyspieszenieY();
  3014  000EEA  EE20 F009          	lfsr	2,9
  3015  000EEE  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  3016  000EF0  26D9               	addwf	fsr2l,f,c
  3017  000EF2  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3018  000EF4  22DA               	addwfc	fsr2h,f,c
  3019  000EF6  EC45  F00A         	call	_MOCK_PrzyspieszenieY	;wreg free
  3020  000EFA  5006               	movf	?_MOCK_PrzyspieszenieY,w,c
  3021  000EFC  6EDF               	movwf	indf2,c
  3022                           
  3023                           ;FRAME.c: 128:         message->data[2] = MOCK_PrzyspieszenieZ();
  3024  000EFE  EE20 F00A          	lfsr	2,10
  3025  000F02  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  3026  000F04  26D9               	addwf	fsr2l,f,c
  3027  000F06  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3028  000F08  22DA               	addwfc	fsr2h,f,c
  3029  000F0A  EC40  F00A         	call	_MOCK_PrzyspieszenieZ	;wreg free
  3030  000F0E  5006               	movf	?_MOCK_PrzyspieszenieZ,w,c
  3031  000F10  6EDF               	movwf	indf2,c
  3032                           
  3033                           ;FRAME.c: 129:         message->data[3] = MOCK_Klikniecie_Spadek();
  3034  000F12  EE20 F00B          	lfsr	2,11
  3035  000F16  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  3036  000F18  26D9               	addwf	fsr2l,f,c
  3037  000F1A  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3038  000F1C  22DA               	addwfc	fsr2h,f,c
  3039  000F1E  EC4F  F00A         	call	_MOCK_Klikniecie_Spadek	;wreg free
  3040  000F22  5006               	movf	?_MOCK_Klikniecie_Spadek,w,c
  3041  000F24  6EDF               	movwf	indf2,c
  3042                           
  3043                           ;FRAME.c: 130:     }
  3044  000F26  0012               	return		;funcret
  3045  000F28                     __end_of_FRAME_AccelerometerStatus:
  3046                           	opt callstack 0
  3047                           
  3048 ;; *************** function _MOCK_PrzyspieszenieZ *****************
  3049 ;; Defined at:
  3050 ;;		line 72 in file "MOC_Funct.c"
  3051 ;; Parameters:    Size  Location     Type
  3052 ;;		None
  3053 ;; Auto vars:     Size  Location     Type
  3054 ;;		None
  3055 ;; Return value:  Size  Location     Type
  3056 ;;                  2    5[COMRAM] unsigned int 
  3057 ;; Registers used:
  3058 ;;		wreg, status,2
  3059 ;; Tracked objects:
  3060 ;;		On entry : 0/0
  3061 ;;		On exit  : 0/0
  3062 ;;		Unchanged: 0/0
  3063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3064 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3067 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3068 ;;Total ram usage:        2 bytes
  3069 ;; Hardware stack levels used:    1
  3070 ;; Hardware stack levels required when called:    3
  3071 ;; This function calls:
  3072 ;;		Nothing
  3073 ;; This function is called by:
  3074 ;;		_FRAME_AccelerometerStatus
  3075 ;; This function uses a non-reentrant model
  3076 ;;
  3077                           
  3078                           	psect	text24
  3079  001480                     __ptext24:
  3080                           	opt callstack 0
  3081  001480                     _MOCK_PrzyspieszenieZ:
  3082                           	opt callstack 24
  3083                           
  3084                           ;MOC_Funct.c: 74:     return 0xFE;
  3085                           
  3086                           ;incstack = 0
  3087  001480  0E00               	movlw	0
  3088  001482  6E07               	movwf	?_MOCK_PrzyspieszenieZ+1,c
  3089  001484  0EFE               	movlw	254
  3090  001486  6E06               	movwf	?_MOCK_PrzyspieszenieZ,c
  3091  001488  0012               	return		;funcret
  3092  00148A                     __end_of_MOCK_PrzyspieszenieZ:
  3093                           	opt callstack 0
  3094                           
  3095 ;; *************** function _MOCK_PrzyspieszenieY *****************
  3096 ;; Defined at:
  3097 ;;		line 68 in file "MOC_Funct.c"
  3098 ;; Parameters:    Size  Location     Type
  3099 ;;		None
  3100 ;; Auto vars:     Size  Location     Type
  3101 ;;		None
  3102 ;; Return value:  Size  Location     Type
  3103 ;;                  2    5[COMRAM] unsigned int 
  3104 ;; Registers used:
  3105 ;;		wreg, status,2
  3106 ;; Tracked objects:
  3107 ;;		On entry : 0/0
  3108 ;;		On exit  : 0/0
  3109 ;;		Unchanged: 0/0
  3110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3111 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3114 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3115 ;;Total ram usage:        2 bytes
  3116 ;; Hardware stack levels used:    1
  3117 ;; Hardware stack levels required when called:    3
  3118 ;; This function calls:
  3119 ;;		Nothing
  3120 ;; This function is called by:
  3121 ;;		_FRAME_AccelerometerStatus
  3122 ;; This function uses a non-reentrant model
  3123 ;;
  3124                           
  3125                           	psect	text25
  3126  00148A                     __ptext25:
  3127                           	opt callstack 0
  3128  00148A                     _MOCK_PrzyspieszenieY:
  3129                           	opt callstack 24
  3130                           
  3131                           ;MOC_Funct.c: 70:     return 0xFE;
  3132                           
  3133                           ;incstack = 0
  3134  00148A  0E00               	movlw	0
  3135  00148C  6E07               	movwf	?_MOCK_PrzyspieszenieY+1,c
  3136  00148E  0EFE               	movlw	254
  3137  001490  6E06               	movwf	?_MOCK_PrzyspieszenieY,c
  3138  001492  0012               	return		;funcret
  3139  001494                     __end_of_MOCK_PrzyspieszenieY:
  3140                           	opt callstack 0
  3141                           
  3142 ;; *************** function _MOCK_PrzyspieszenieX *****************
  3143 ;; Defined at:
  3144 ;;		line 63 in file "MOC_Funct.c"
  3145 ;; Parameters:    Size  Location     Type
  3146 ;;		None
  3147 ;; Auto vars:     Size  Location     Type
  3148 ;;		None
  3149 ;; Return value:  Size  Location     Type
  3150 ;;                  2    5[COMRAM] unsigned int 
  3151 ;; Registers used:
  3152 ;;		wreg, status,2
  3153 ;; Tracked objects:
  3154 ;;		On entry : 0/0
  3155 ;;		On exit  : 0/0
  3156 ;;		Unchanged: 0/0
  3157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3158 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3161 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3162 ;;Total ram usage:        2 bytes
  3163 ;; Hardware stack levels used:    1
  3164 ;; Hardware stack levels required when called:    3
  3165 ;; This function calls:
  3166 ;;		Nothing
  3167 ;; This function is called by:
  3168 ;;		_FRAME_AccelerometerStatus
  3169 ;; This function uses a non-reentrant model
  3170 ;;
  3171                           
  3172                           	psect	text26
  3173  001494                     __ptext26:
  3174                           	opt callstack 0
  3175  001494                     _MOCK_PrzyspieszenieX:
  3176                           	opt callstack 24
  3177                           
  3178                           ;MOC_Funct.c: 65:     return 0xFE;
  3179                           
  3180                           ;incstack = 0
  3181  001494  0E00               	movlw	0
  3182  001496  6E07               	movwf	?_MOCK_PrzyspieszenieX+1,c
  3183  001498  0EFE               	movlw	254
  3184  00149A  6E06               	movwf	?_MOCK_PrzyspieszenieX,c
  3185  00149C  0012               	return		;funcret
  3186  00149E                     __end_of_MOCK_PrzyspieszenieX:
  3187                           	opt callstack 0
  3188                           
  3189 ;; *************** function _MOCK_Klikniecie_Spadek *****************
  3190 ;; Defined at:
  3191 ;;		line 76 in file "MOC_Funct.c"
  3192 ;; Parameters:    Size  Location     Type
  3193 ;;		None
  3194 ;; Auto vars:     Size  Location     Type
  3195 ;;		None
  3196 ;; Return value:  Size  Location     Type
  3197 ;;                  2    5[COMRAM] unsigned int 
  3198 ;; Registers used:
  3199 ;;		wreg, status,2
  3200 ;; Tracked objects:
  3201 ;;		On entry : 0/0
  3202 ;;		On exit  : 0/0
  3203 ;;		Unchanged: 0/0
  3204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3205 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3208 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3209 ;;Total ram usage:        2 bytes
  3210 ;; Hardware stack levels used:    1
  3211 ;; Hardware stack levels required when called:    3
  3212 ;; This function calls:
  3213 ;;		Nothing
  3214 ;; This function is called by:
  3215 ;;		_FRAME_AccelerometerStatus
  3216 ;; This function uses a non-reentrant model
  3217 ;;
  3218                           
  3219                           	psect	text27
  3220  00149E                     __ptext27:
  3221                           	opt callstack 0
  3222  00149E                     _MOCK_Klikniecie_Spadek:
  3223                           	opt callstack 24
  3224                           
  3225                           ;MOC_Funct.c: 78:     return 0b00000000;
  3226                           
  3227                           ;incstack = 0
  3228  00149E  0E00               	movlw	0
  3229  0014A0  6E07               	movwf	?_MOCK_Klikniecie_Spadek+1,c
  3230  0014A2  0E00               	movlw	0
  3231  0014A4  6E06               	movwf	?_MOCK_Klikniecie_Spadek,c
  3232  0014A6  0012               	return		;funcret
  3233  0014A8                     __end_of_MOCK_Klikniecie_Spadek:
  3234                           	opt callstack 0
  3235                           
  3236 ;; *************** function _CAN_SendFrame *****************
  3237 ;; Defined at:
  3238 ;;		line 196 in file "CAN.c"
  3239 ;; Parameters:    Size  Location     Type
  3240 ;;  message         2   10[COMRAM] PTR struct .
  3241 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3242 ;; Auto vars:     Size  Location     Type
  3243 ;;		None
  3244 ;; Return value:  Size  Location     Type
  3245 ;;                  1    wreg      void 
  3246 ;; Registers used:
  3247 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3248 ;; Tracked objects:
  3249 ;;		On entry : 0/0
  3250 ;;		On exit  : 0/0
  3251 ;;		Unchanged: 0/0
  3252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3253 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3255 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3256 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3257 ;;Total ram usage:        5 bytes
  3258 ;; Hardware stack levels used:    1
  3259 ;; Hardware stack levels required when called:    4
  3260 ;; This function calls:
  3261 ;;		_CAN_MoveBuffIntoFrame
  3262 ;; This function is called by:
  3263 ;;		_FRAME_HandleCanFrame
  3264 ;; This function uses a non-reentrant model
  3265 ;;
  3266                           
  3267                           	psect	text28
  3268  000716                     __ptext28:
  3269                           	opt callstack 0
  3270  000716                     _CAN_SendFrame:
  3271                           	opt callstack 24
  3272                           
  3273                           ;CAN.c: 201:     {;CAN.c: 202:         ECANCON = 0x83;
  3274                           
  3275                           ;incstack = 0
  3276                           ;CAN.c: 196: void CAN_SendFrame(mID * message);CAN.c: 197: {;CAN.c: 200:     for(;;)
  3277  000716  0E83               	movlw	131
  3278  000718  6E77               	movwf	3959,c	;volatile
  3279                           
  3280                           ;CAN.c: 203:         if(!RXB0CONbits.FILHIT3)
  3281  00071A  A660               	btfss	3936,3,c	;volatile
  3282  00071C  D00A               	goto	l189
  3283                           
  3284                           ;CAN.c: 208:         ECANCON = 0x84;
  3285  00071E  0E84               	movlw	132
  3286  000720  6E77               	movwf	3959,c	;volatile
  3287                           
  3288                           ;CAN.c: 209:         if(!RXB0CONbits.FILHIT3)
  3289  000722  A660               	btfss	3936,3,c	;volatile
  3290  000724  D006               	goto	l189
  3291                           
  3292                           ;CAN.c: 214:         ECANCON = 0x85;
  3293  000726  0E85               	movlw	133
  3294  000728  6E77               	movwf	3959,c	;volatile
  3295                           
  3296                           ;CAN.c: 215:         if(!RXB0CONbits.FILHIT3)
  3297  00072A  A660               	btfss	3936,3,c	;volatile
  3298  00072C  D002               	goto	l189
  3299  00072E  D7F3               	goto	_CAN_SendFrame
  3300  000730                     l190:
  3301  000730  00FF               	reset		;# 
  3302  000732                     l189:
  3303                           
  3304                           ;CAN.c: 222:     while(COMSTATbits.TXWARN)
  3305  000732  B474               	btfsc	3956,2,c	;volatile
  3306  000734  D7FD               	goto	l190
  3307                           
  3308                           ;CAN.c: 226:     DetectorLedRadar.timerRamkiTxCANU8 = 0;
  3309  000736  0E00               	movlw	0
  3310  000738  6E46               	movwf	_DetectorLedRadar+2,c
  3311                           
  3312                           ;CAN.c: 227:     RXB0EIDL = message->id.v[0];
  3313  00073A  EE20 F004          	lfsr	2,4
  3314  00073E  500B               	movf	CAN_SendFrame@message,w,c
  3315  000740  26D9               	addwf	fsr2l,f,c
  3316  000742  500C               	movf	CAN_SendFrame@message+1,w,c
  3317  000744  22DA               	addwfc	fsr2h,f,c
  3318  000746  50DF               	movf	indf2,w,c
  3319  000748  6E64               	movwf	3940,c	;volatile
  3320                           
  3321                           ;CAN.c: 228:     RXB0EIDH = message->id.v[1];
  3322  00074A  EE20 F005          	lfsr	2,5
  3323  00074E  500B               	movf	CAN_SendFrame@message,w,c
  3324  000750  26D9               	addwf	fsr2l,f,c
  3325  000752  500C               	movf	CAN_SendFrame@message+1,w,c
  3326  000754  22DA               	addwfc	fsr2h,f,c
  3327  000756  50DF               	movf	indf2,w,c
  3328  000758  6E63               	movwf	3939,c	;volatile
  3329                           
  3330                           ;CAN.c: 229:     RXB0SIDL = ((message->id.v[2]&0xFC)*8) | (message->id.v[2] & (0x03));
  3331  00075A  EE20 F006          	lfsr	2,6
  3332  00075E  500B               	movf	CAN_SendFrame@message,w,c
  3333  000760  26D9               	addwf	fsr2l,f,c
  3334  000762  500C               	movf	CAN_SendFrame@message+1,w,c
  3335  000764  22DA               	addwfc	fsr2h,f,c
  3336  000766  50DF               	movf	indf2,w,c
  3337  000768  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  3338  00076A  0E03               	movlw	3
  3339  00076C  160D               	andwf	??_CAN_SendFrame,f,c
  3340  00076E  EE20 F006          	lfsr	2,6
  3341  000772  500B               	movf	CAN_SendFrame@message,w,c
  3342  000774  26D9               	addwf	fsr2l,f,c
  3343  000776  500C               	movf	CAN_SendFrame@message+1,w,c
  3344  000778  22DA               	addwfc	fsr2h,f,c
  3345  00077A  50DF               	movf	indf2,w,c
  3346  00077C  0BFC               	andlw	252
  3347  00077E  0D08               	mullw	8
  3348  000780  50F3               	movf	prodl,w,c
  3349  000782  100D               	iorwf	??_CAN_SendFrame,w,c
  3350  000784  6E62               	movwf	3938,c	;volatile
  3351                           
  3352                           ;CAN.c: 230:     RXB0SIDLbits.EXID = 1;
  3353  000786  8662               	bsf	3938,3,c	;volatile
  3354                           
  3355                           ;CAN.c: 231:     RXB0SIDH = (BYTE)(message->id.w[1]/32);
  3356  000788  EE20 F006          	lfsr	2,6
  3357  00078C  500B               	movf	CAN_SendFrame@message,w,c
  3358  00078E  26D9               	addwf	fsr2l,f,c
  3359  000790  500C               	movf	CAN_SendFrame@message+1,w,c
  3360  000792  22DA               	addwfc	fsr2h,f,c
  3361  000794  CFDE F00D          	movff	postinc2,??_CAN_SendFrame
  3362  000798  CFDD F00E          	movff	postdec2,??_CAN_SendFrame+1
  3363  00079C  0E05               	movlw	5
  3364  00079E  6E0F               	movwf	(??_CAN_SendFrame+2)& (0+255),c
  3365  0007A0                     u1135:
  3366  0007A0  90D8               	bcf	status,0,c
  3367  0007A2  320E               	rrcf	??_CAN_SendFrame+1,f,c
  3368  0007A4  320D               	rrcf	??_CAN_SendFrame,f,c
  3369  0007A6  2E0F               	decfsz	(??_CAN_SendFrame+2)& (0+255),f,c
  3370  0007A8  D7FB               	goto	u1135
  3371  0007AA  500D               	movf	??_CAN_SendFrame,w,c
  3372  0007AC  6E61               	movwf	3937,c	;volatile
  3373                           
  3374                           ;CAN.c: 233:     RXB0DLC = 0;
  3375  0007AE  0E00               	movlw	0
  3376  0007B0  6E65               	movwf	3941,c	;volatile
  3377                           
  3378                           ;CAN.c: 235:     if(message->message_type==0x02)
  3379  0007B2  EE20 F001          	lfsr	2,1
  3380  0007B6  500B               	movf	CAN_SendFrame@message,w,c
  3381  0007B8  26D9               	addwf	fsr2l,f,c
  3382  0007BA  500C               	movf	CAN_SendFrame@message+1,w,c
  3383  0007BC  22DA               	addwfc	fsr2h,f,c
  3384  0007BE  0E02               	movlw	2
  3385  0007C0  18DE               	xorwf	postinc2,w,c
  3386  0007C2  A4D8               	btfss	status,2,c
  3387  0007C4  D002               	goto	l2603
  3388                           
  3389                           ;CAN.c: 236:     {;CAN.c: 237:         RXB0DLCbits.RXRTR = 1;
  3390  0007C6  8C65               	bsf	3941,6,c	;volatile
  3391                           
  3392                           ;CAN.c: 238:     }
  3393  0007C8  D05A               	goto	l2607
  3394  0007CA                     l2603:
  3395                           
  3396                           ;CAN.c: 240:     {;CAN.c: 241:         RXB0DLCbits.DLC0 = (message->data_length & 0x0F);
  3397  0007CA  EE20 F010          	lfsr	2,16
  3398  0007CE  500B               	movf	CAN_SendFrame@message,w,c
  3399  0007D0  26D9               	addwf	fsr2l,f,c
  3400  0007D2  500C               	movf	CAN_SendFrame@message+1,w,c
  3401  0007D4  22DA               	addwfc	fsr2h,f,c
  3402  0007D6  50DF               	movf	indf2,w,c
  3403  0007D8  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  3404  0007DA  0E0F               	movlw	15
  3405  0007DC  160D               	andwf	??_CAN_SendFrame,f,c
  3406  0007DE  5065               	movf	3941,w,c	;volatile
  3407  0007E0  180D               	xorwf	??_CAN_SendFrame,w,c
  3408  0007E2  0BFE               	andlw	-2
  3409  0007E4  180D               	xorwf	??_CAN_SendFrame,w,c
  3410  0007E6  6E65               	movwf	3941,c	;volatile
  3411                           
  3412                           ;CAN.c: 242:         RXB0DLCbits.DLC1 = ((message->data_length & 0x0F)>> 1);
  3413  0007E8  EE20 F010          	lfsr	2,16
  3414  0007EC  500B               	movf	CAN_SendFrame@message,w,c
  3415  0007EE  26D9               	addwf	fsr2l,f,c
  3416  0007F0  500C               	movf	CAN_SendFrame@message+1,w,c
  3417  0007F2  22DA               	addwfc	fsr2h,f,c
  3418  0007F4  50DF               	movf	indf2,w,c
  3419  0007F6  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  3420  0007F8  90D8               	bcf	status,0,c
  3421  0007FA  320D               	rrcf	??_CAN_SendFrame,f,c
  3422  0007FC  0E07               	movlw	7
  3423  0007FE  160D               	andwf	??_CAN_SendFrame,f,c
  3424  000800  460D               	rlncf	??_CAN_SendFrame,f,c
  3425  000802  5065               	movf	3941,w,c	;volatile
  3426  000804  180D               	xorwf	??_CAN_SendFrame,w,c
  3427  000806  0BFD               	andlw	-3
  3428  000808  180D               	xorwf	??_CAN_SendFrame,w,c
  3429  00080A  6E65               	movwf	3941,c	;volatile
  3430                           
  3431                           ;CAN.c: 243:         RXB0DLCbits.DLC2 = ((message->data_length & 0x0F)>> 2);
  3432  00080C  EE20 F010          	lfsr	2,16
  3433  000810  500B               	movf	CAN_SendFrame@message,w,c
  3434  000812  26D9               	addwf	fsr2l,f,c
  3435  000814  500C               	movf	CAN_SendFrame@message+1,w,c
  3436  000816  22DA               	addwfc	fsr2h,f,c
  3437  000818  50DF               	movf	indf2,w,c
  3438  00081A  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  3439  00081C  90D8               	bcf	status,0,c
  3440  00081E  320D               	rrcf	??_CAN_SendFrame,f,c
  3441  000820  90D8               	bcf	status,0,c
  3442  000822  320D               	rrcf	??_CAN_SendFrame,f,c
  3443  000824  0E03               	movlw	3
  3444  000826  160D               	andwf	??_CAN_SendFrame,f,c
  3445  000828  460D               	rlncf	??_CAN_SendFrame,f,c
  3446  00082A  460D               	rlncf	??_CAN_SendFrame,f,c
  3447  00082C  5065               	movf	3941,w,c	;volatile
  3448  00082E  180D               	xorwf	??_CAN_SendFrame,w,c
  3449  000830  0BFB               	andlw	-5
  3450  000832  180D               	xorwf	??_CAN_SendFrame,w,c
  3451  000834  6E65               	movwf	3941,c	;volatile
  3452                           
  3453                           ;CAN.c: 244:         RXB0DLCbits.DLC3 = ((message->data_length & 0x0F)>> 3);
  3454  000836  EE20 F010          	lfsr	2,16
  3455  00083A  500B               	movf	CAN_SendFrame@message,w,c
  3456  00083C  26D9               	addwf	fsr2l,f,c
  3457  00083E  500C               	movf	CAN_SendFrame@message+1,w,c
  3458  000840  22DA               	addwfc	fsr2h,f,c
  3459  000842  50DF               	movf	indf2,w,c
  3460  000844  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  3461  000846  90D8               	bcf	status,0,c
  3462  000848  320D               	rrcf	??_CAN_SendFrame,f,c
  3463  00084A  90D8               	bcf	status,0,c
  3464  00084C  320D               	rrcf	??_CAN_SendFrame,f,c
  3465  00084E  90D8               	bcf	status,0,c
  3466  000850  320D               	rrcf	??_CAN_SendFrame,f,c
  3467  000852  0E01               	movlw	1
  3468  000854  160D               	andwf	??_CAN_SendFrame,f,c
  3469  000856  460D               	rlncf	??_CAN_SendFrame,f,c
  3470  000858  460D               	rlncf	??_CAN_SendFrame,f,c
  3471  00085A  460D               	rlncf	??_CAN_SendFrame,f,c
  3472  00085C  5065               	movf	3941,w,c	;volatile
  3473  00085E  180D               	xorwf	??_CAN_SendFrame,w,c
  3474  000860  0BF7               	andlw	-9
  3475  000862  180D               	xorwf	??_CAN_SendFrame,w,c
  3476  000864  6E65               	movwf	3941,c	;volatile
  3477                           
  3478                           ;CAN.c: 246:         CAN_MoveBuffIntoFrame(&RXB0D0, message->data);
  3479  000866  0E66               	movlw	102
  3480  000868  6E06               	movwf	CAN_MoveBuffIntoFrame@Ram,c
  3481  00086A  0E0F               	movlw	15
  3482  00086C  6E07               	movwf	CAN_MoveBuffIntoFrame@Ram+1,c
  3483  00086E  0E08               	movlw	8
  3484  000870  240B               	addwf	CAN_SendFrame@message,w,c
  3485  000872  6E08               	movwf	CAN_MoveBuffIntoFrame@Buf,c
  3486  000874  0E00               	movlw	0
  3487  000876  200C               	addwfc	CAN_SendFrame@message+1,w,c
  3488  000878  6E09               	movwf	CAN_MoveBuffIntoFrame@Buf+1,c
  3489  00087A  ECA7  F009         	call	_CAN_MoveBuffIntoFrame	;wreg free
  3490  00087E                     l2607:
  3491                           
  3492                           ;CAN.c: 249:     RXB0CONbits.FILHIT3 = 1;
  3493  00087E  8660               	bsf	3936,3,c	;volatile
  3494                           
  3495                           ;CAN.c: 251:     DetectorLedRadar.Flags.ramkaTx = 1;
  3496  000880  8844               	bsf	_DetectorLedRadar,4,c
  3497  000882  0012               	return		;funcret
  3498  000884                     __end_of_CAN_SendFrame:
  3499                           	opt callstack 0
  3500                           
  3501 ;; *************** function _CAN_GenID *****************
  3502 ;; Defined at:
  3503 ;;		line 395 in file "CAN.c"
  3504 ;; Parameters:    Size  Location     Type
  3505 ;;  message         2    5[COMRAM] PTR struct .
  3506 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3507 ;;  frameID         1    7[COMRAM] unsigned char 
  3508 ;; Auto vars:     Size  Location     Type
  3509 ;;		None
  3510 ;; Return value:  Size  Location     Type
  3511 ;;                  1    wreg      void 
  3512 ;; Registers used:
  3513 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3514 ;; Tracked objects:
  3515 ;;		On entry : 0/0
  3516 ;;		On exit  : 0/0
  3517 ;;		Unchanged: 0/0
  3518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3519 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3521 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3522 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3523 ;;Total ram usage:        7 bytes
  3524 ;; Hardware stack levels used:    1
  3525 ;; Hardware stack levels required when called:    3
  3526 ;; This function calls:
  3527 ;;		Nothing
  3528 ;; This function is called by:
  3529 ;;		_FRAME_HandleCanFrame
  3530 ;; This function uses a non-reentrant model
  3531 ;;
  3532                           
  3533                           	psect	text29
  3534  000C94                     __ptext29:
  3535                           	opt callstack 0
  3536  000C94                     _CAN_GenID:
  3537                           	opt callstack 25
  3538                           
  3539                           ;CAN.c: 395: void CAN_GenID(mID * message, BYTE frameID);CAN.c: 396: {;CAN.c: 398:     m
      +                          essage->frame_type = 0x03;
  3540                           
  3541                           ;incstack = 0
  3542  000C94  EE20 F002          	lfsr	2,2
  3543  000C98  5006               	movf	CAN_GenID@message,w,c
  3544  000C9A  26D9               	addwf	fsr2l,f,c
  3545  000C9C  5007               	movf	CAN_GenID@message+1,w,c
  3546  000C9E  22DA               	addwfc	fsr2h,f,c
  3547  000CA0  0E03               	movlw	3
  3548  000CA2  6EDF               	movwf	indf2,c
  3549                           
  3550                           ;CAN.c: 399:     message->message_type = 0x01;
  3551  000CA4  EE20 F001          	lfsr	2,1
  3552  000CA8  5006               	movf	CAN_GenID@message,w,c
  3553  000CAA  26D9               	addwf	fsr2l,f,c
  3554  000CAC  5007               	movf	CAN_GenID@message+1,w,c
  3555  000CAE  22DA               	addwfc	fsr2h,f,c
  3556  000CB0  0E01               	movlw	1
  3557  000CB2  6EDF               	movwf	indf2,c
  3558                           
  3559                           ;CAN.c: 400:     message->id.w[1] = (WORD)frameID * (WORD)4;
  3560  000CB4  5008               	movf	CAN_GenID@frameID,w,c
  3561  000CB6  6E09               	movwf	??_CAN_GenID& (0+255),c
  3562  000CB8  6A0A               	clrf	(??_CAN_GenID+1)& (0+255),c
  3563  000CBA  90D8               	bcf	status,0,c
  3564  000CBC  3609               	rlcf	??_CAN_GenID,f,c
  3565  000CBE  360A               	rlcf	??_CAN_GenID+1,f,c
  3566  000CC0  90D8               	bcf	status,0,c
  3567  000CC2  3609               	rlcf	??_CAN_GenID,f,c
  3568  000CC4  360A               	rlcf	??_CAN_GenID+1,f,c
  3569  000CC6  EE20 F006          	lfsr	2,6
  3570  000CCA  5006               	movf	CAN_GenID@message,w,c
  3571  000CCC  26D9               	addwf	fsr2l,f,c
  3572  000CCE  5007               	movf	CAN_GenID@message+1,w,c
  3573  000CD0  22DA               	addwfc	fsr2h,f,c
  3574  000CD2  C009  FFDE         	movff	??_CAN_GenID,postinc2
  3575  000CD6  C00A  FFDD         	movff	??_CAN_GenID+1,postdec2
  3576                           
  3577                           ;CAN.c: 401:     message->id.w[0] = DaneCan.adresCAN + 0x012c;
  3578  000CDA  0E2C               	movlw	44
  3579  000CDC  6E09               	movwf	??_CAN_GenID& (0+255),c
  3580  000CDE  0E01               	movlw	1
  3581  000CE0  6E0A               	movwf	(??_CAN_GenID+1)& (0+255),c
  3582  000CE2  EE20  F042         	lfsr	2,_DaneCan+2
  3583  000CE6  CFDE F00B          	movff	postinc2,??_CAN_GenID+2
  3584  000CEA  CFDD F00C          	movff	postdec2,??_CAN_GenID+3
  3585  000CEE  5009               	movf	??_CAN_GenID,w,c
  3586  000CF0  260B               	addwf	??_CAN_GenID+2,f,c
  3587  000CF2  500A               	movf	??_CAN_GenID+1,w,c
  3588  000CF4  220C               	addwfc	??_CAN_GenID+3,f,c
  3589  000CF6  EE20 F004          	lfsr	2,4
  3590  000CFA  5006               	movf	CAN_GenID@message,w,c
  3591  000CFC  26D9               	addwf	fsr2l,f,c
  3592  000CFE  5007               	movf	CAN_GenID@message+1,w,c
  3593  000D00  22DA               	addwfc	fsr2h,f,c
  3594  000D02  C00B  FFDE         	movff	??_CAN_GenID+2,postinc2
  3595  000D06  C00C  FFDD         	movff	??_CAN_GenID+3,postdec2
  3596                           
  3597                           ;CAN.c: 404:     message ->id.bits.b16 = 0;
  3598  000D0A  EE20 F006          	lfsr	2,6
  3599  000D0E  5006               	movf	CAN_GenID@message,w,c
  3600  000D10  26D9               	addwf	fsr2l,f,c
  3601  000D12  5007               	movf	CAN_GenID@message+1,w,c
  3602  000D14  22DA               	addwfc	fsr2h,f,c
  3603  000D16  90DF               	bcf	indf2,0,c
  3604                           
  3605                           ;CAN.c: 405:     message ->id.bits.b17 = 0;
  3606  000D18  EE20 F006          	lfsr	2,6
  3607  000D1C  5006               	movf	CAN_GenID@message,w,c
  3608  000D1E  26D9               	addwf	fsr2l,f,c
  3609  000D20  5007               	movf	CAN_GenID@message+1,w,c
  3610  000D22  22DA               	addwfc	fsr2h,f,c
  3611  000D24  92DF               	bcf	indf2,1,c
  3612  000D26  0012               	return		;funcret
  3613  000D28                     __end_of_CAN_GenID:
  3614                           	opt callstack 0
  3615                           
  3616 ;; *************** function _CAN_TakeFrame *****************
  3617 ;; Defined at:
  3618 ;;		line 260 in file "CAN.c"
  3619 ;; Parameters:    Size  Location     Type
  3620 ;;  message         2   13[COMRAM] PTR struct .
  3621 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3622 ;; Auto vars:     Size  Location     Type
  3623 ;;  k               1   18[COMRAM] unsigned char 
  3624 ;;  tempCON         1   17[COMRAM] unsigned char 
  3625 ;; Return value:  Size  Location     Type
  3626 ;;                  1    wreg      enum E10433
  3627 ;; Registers used:
  3628 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3629 ;; Tracked objects:
  3630 ;;		On entry : 0/0
  3631 ;;		On exit  : 0/0
  3632 ;;		Unchanged: 0/0
  3633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3634 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3635 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3636 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3637 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3638 ;;Total ram usage:        6 bytes
  3639 ;; Hardware stack levels used:    1
  3640 ;; Hardware stack levels required when called:    4
  3641 ;; This function calls:
  3642 ;;		_CAN_MoveBuffIntoFrame
  3643 ;;		___awdiv
  3644 ;; This function is called by:
  3645 ;;		_TRM_DataTransmition
  3646 ;; This function uses a non-reentrant model
  3647 ;;
  3648                           
  3649                           	psect	text30
  3650  000060                     __ptext30:
  3651                           	opt callstack 0
  3652  000060                     _CAN_TakeFrame:
  3653                           	opt callstack 25
  3654                           
  3655                           ;CAN.c: 260: BOOL CAN_TakeFrame(mID * message);CAN.c: 261: {;CAN.c: 262:     BYTE k, tem
      +                          pCON;;CAN.c: 264:     k = CANCON&0x0F;
  3656                           
  3657                           ;incstack = 0
  3658  000060  506F               	movf	3951,w,c	;volatile
  3659  000062  0B0F               	andlw	15
  3660  000064  6E13               	movwf	CAN_TakeFrame@k,c
  3661                           
  3662                           ;CAN.c: 266:     ECANCON = 0x90 | k;
  3663  000066  5013               	movf	CAN_TakeFrame@k,w,c
  3664  000068  0990               	iorlw	144
  3665  00006A  6E77               	movwf	3959,c	;volatile
  3666                           
  3667                           ;CAN.c: 269:     switch(k)
  3668  00006C  D018               	goto	l2865
  3669  00006E                     l198:
  3670                           
  3671                           ;CAN.c: 272:             tempCON = RXB0CON;
  3672  00006E  CF60 F012          	movff	3936,CAN_TakeFrame@tempCON	;volatile
  3673                           
  3674                           ;CAN.c: 273:             break;
  3675  000072  D035               	goto	l199
  3676  000074                     l200:
  3677                           
  3678                           ;CAN.c: 275:             tempCON = RXB1CON;
  3679  000074  CF50 F012          	movff	3920,CAN_TakeFrame@tempCON	;volatile
  3680                           
  3681                           ;CAN.c: 276:             break;
  3682  000078  D032               	goto	l199
  3683  00007A                     l201:
  3684                           
  3685                           ;CAN.c: 278:             tempCON = B0CON;
  3686  00007A  CE20 F012          	movff	3616,CAN_TakeFrame@tempCON	;volatile
  3687                           
  3688                           ;CAN.c: 279:             break;
  3689  00007E  D02F               	goto	l199
  3690  000080                     l202:
  3691                           
  3692                           ;CAN.c: 281:             tempCON = B1CON;
  3693  000080  CE30 F012          	movff	3632,CAN_TakeFrame@tempCON	;volatile
  3694                           
  3695                           ;CAN.c: 282:             break;
  3696  000084  D02C               	goto	l199
  3697  000086                     l203:
  3698                           
  3699                           ;CAN.c: 284:             tempCON = B2CON;
  3700  000086  CE40 F012          	movff	3648,CAN_TakeFrame@tempCON	;volatile
  3701                           
  3702                           ;CAN.c: 285:             break;
  3703  00008A  D029               	goto	l199
  3704  00008C                     l204:
  3705                           
  3706                           ;CAN.c: 287:             tempCON = B3CON;
  3707  00008C  CE50 F012          	movff	3664,CAN_TakeFrame@tempCON	;volatile
  3708                           
  3709                           ;CAN.c: 288:             break;
  3710  000090  D026               	goto	l199
  3711  000092                     l205:
  3712                           
  3713                           ;CAN.c: 290:             tempCON = B4CON;
  3714  000092  CE60 F012          	movff	3680,CAN_TakeFrame@tempCON	;volatile
  3715                           
  3716                           ;CAN.c: 291:             break;
  3717  000096  D023               	goto	l199
  3718  000098                     l206:
  3719                           
  3720                           ;CAN.c: 293:             tempCON = B5CON;
  3721  000098  CE70 F012          	movff	3696,CAN_TakeFrame@tempCON	;volatile
  3722                           
  3723                           ;CAN.c: 294:             break;
  3724  00009C  D020               	goto	l199
  3725  00009E                     l2865:
  3726  00009E  5013               	movf	CAN_TakeFrame@k,w,c
  3727  0000A0  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  3728  0000A2  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  3729                           
  3730                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3731                           ; Switch size 1, requested type "simple"
  3732                           ; Number of cases is 1, Range of values is 0 to 0
  3733                           ; switch strategies available:
  3734                           ; Name         Instructions Cycles
  3735                           ; simple_byte            4     3 (average)
  3736                           ;	Chosen strategy is simple_byte
  3737  0000A4  5011               	movf	??_CAN_TakeFrame+1,w,c
  3738  0000A6  0A00               	xorlw	0	; case 0
  3739  0000A8  A4D8               	btfss	status,2,c
  3740  0000AA  D019               	goto	l199
  3741                           
  3742                           ; Switch size 1, requested type "simple"
  3743                           ; Number of cases is 8, Range of values is 0 to 7
  3744                           ; switch strategies available:
  3745                           ; Name         Instructions Cycles
  3746                           ; simple_byte           25    13 (average)
  3747                           ;	Chosen strategy is simple_byte
  3748  0000AC  5010               	movf	??_CAN_TakeFrame,w,c
  3749  0000AE  0A00               	xorlw	0	; case 0
  3750  0000B0  B4D8               	btfsc	status,2,c
  3751  0000B2  D7DD               	goto	l198
  3752  0000B4  0A01               	xorlw	1	; case 1
  3753  0000B6  B4D8               	btfsc	status,2,c
  3754  0000B8  D7DD               	goto	l200
  3755  0000BA  0A03               	xorlw	3	; case 2
  3756  0000BC  B4D8               	btfsc	status,2,c
  3757  0000BE  D7DD               	goto	l201
  3758  0000C0  0A01               	xorlw	1	; case 3
  3759  0000C2  B4D8               	btfsc	status,2,c
  3760  0000C4  D7DD               	goto	l202
  3761  0000C6  0A07               	xorlw	7	; case 4
  3762  0000C8  B4D8               	btfsc	status,2,c
  3763  0000CA  D7DD               	goto	l203
  3764  0000CC  0A01               	xorlw	1	; case 5
  3765  0000CE  B4D8               	btfsc	status,2,c
  3766  0000D0  D7DD               	goto	l204
  3767  0000D2  0A03               	xorlw	3	; case 6
  3768  0000D4  B4D8               	btfsc	status,2,c
  3769  0000D6  D7DD               	goto	l205
  3770  0000D8  0A01               	xorlw	1	; case 7
  3771  0000DA  B4D8               	btfsc	status,2,c
  3772  0000DC  D7DD               	goto	l206
  3773  0000DE                     l199:
  3774                           
  3775                           ;CAN.c: 298:     if((tempCON & 0x80) > 0)
  3776  0000DE  AE12               	btfss	CAN_TakeFrame@tempCON,7,c
  3777  0000E0  D0A5               	goto	l2901
  3778                           
  3779                           ;CAN.c: 299:     {;CAN.c: 300:         message->buffer = RXB0CON & 0x1F;
  3780  0000E2  EE20 F003          	lfsr	2,3
  3781  0000E6  500E               	movf	CAN_TakeFrame@message,w,c
  3782  0000E8  26D9               	addwf	fsr2l,f,c
  3783  0000EA  500F               	movf	CAN_TakeFrame@message+1,w,c
  3784  0000EC  22DA               	addwfc	fsr2h,f,c
  3785  0000EE  5060               	movf	3936,w,c	;volatile
  3786  0000F0  0B1F               	andlw	31
  3787  0000F2  6EDF               	movwf	indf2,c
  3788                           
  3789                           ;CAN.c: 301:         message->id.v[0] = RXB0EIDL;
  3790  0000F4  EE20 F004          	lfsr	2,4
  3791  0000F8  500E               	movf	CAN_TakeFrame@message,w,c
  3792  0000FA  26D9               	addwf	fsr2l,f,c
  3793  0000FC  500F               	movf	CAN_TakeFrame@message+1,w,c
  3794  0000FE  22DA               	addwfc	fsr2h,f,c
  3795  000100  CF64 FFDF          	movff	3940,indf2	;volatile
  3796                           
  3797                           ;CAN.c: 302:         message->id.v[1] = RXB0EIDH;
  3798  000104  EE20 F005          	lfsr	2,5
  3799  000108  500E               	movf	CAN_TakeFrame@message,w,c
  3800  00010A  26D9               	addwf	fsr2l,f,c
  3801  00010C  500F               	movf	CAN_TakeFrame@message+1,w,c
  3802  00010E  22DA               	addwfc	fsr2h,f,c
  3803  000110  CF63 FFDF          	movff	3939,indf2	;volatile
  3804                           
  3805                           ;CAN.c: 303:         message->id.v[2] = (RXB0SIDL/8) | (RXB0SIDL&0x03);
  3806  000114  EE20 F006          	lfsr	2,6
  3807  000118  500E               	movf	CAN_TakeFrame@message,w,c
  3808  00011A  26D9               	addwf	fsr2l,f,c
  3809  00011C  500F               	movf	CAN_TakeFrame@message+1,w,c
  3810  00011E  22DA               	addwfc	fsr2h,f,c
  3811  000120  CF62 F010          	movff	3938,??_CAN_TakeFrame	;volatile
  3812  000124  0E03               	movlw	3
  3813  000126  1610               	andwf	??_CAN_TakeFrame,f,c
  3814  000128  CF62 F006          	movff	3938,___awdiv@dividend	;volatile
  3815  00012C  6A07               	clrf	___awdiv@dividend+1,c
  3816  00012E  0E00               	movlw	0
  3817  000130  6E09               	movwf	___awdiv@divisor+1,c
  3818  000132  0E08               	movlw	8
  3819  000134  6E08               	movwf	___awdiv@divisor,c
  3820  000136  ECDA  F006         	call	___awdiv	;wreg free
  3821  00013A  5006               	movf	?___awdiv,w,c
  3822  00013C  1010               	iorwf	??_CAN_TakeFrame,w,c
  3823  00013E  6EDF               	movwf	indf2,c
  3824                           
  3825                           ;CAN.c: 304:         message->id.w[1] |= (WORD)RXB0SIDH*32;
  3826  000140  5061               	movf	3937,w,c	;volatile
  3827  000142  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  3828  000144  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  3829  000146  0E05               	movlw	5
  3830  000148                     u1465:
  3831  000148  90D8               	bcf	status,0,c
  3832  00014A  3610               	rlcf	??_CAN_TakeFrame,f,c
  3833  00014C  3611               	rlcf	??_CAN_TakeFrame+1,f,c
  3834  00014E  2EE8               	decfsz	wreg,f,c
  3835  000150  D7FB               	goto	u1465
  3836  000152  EE20 F006          	lfsr	2,6
  3837  000156  500E               	movf	CAN_TakeFrame@message,w,c
  3838  000158  26D9               	addwf	fsr2l,f,c
  3839  00015A  500F               	movf	CAN_TakeFrame@message+1,w,c
  3840  00015C  22DA               	addwfc	fsr2h,f,c
  3841  00015E  5010               	movf	??_CAN_TakeFrame,w,c
  3842  000160  12DE               	iorwf	postinc2,f,c
  3843  000162  5011               	movf	??_CAN_TakeFrame+1,w,c
  3844  000164  12DD               	iorwf	postdec2,f,c
  3845                           
  3846                           ;CAN.c: 305:         message->frame_type=0x03;
  3847  000166  EE20 F002          	lfsr	2,2
  3848  00016A  500E               	movf	CAN_TakeFrame@message,w,c
  3849  00016C  26D9               	addwf	fsr2l,f,c
  3850  00016E  500F               	movf	CAN_TakeFrame@message+1,w,c
  3851  000170  22DA               	addwfc	fsr2h,f,c
  3852  000172  0E03               	movlw	3
  3853  000174  6EDF               	movwf	indf2,c
  3854                           
  3855                           ;CAN.c: 309:         if(RXB0DLCbits.RXRTR == 0)
  3856  000176  BC65               	btfsc	3941,6,c	;volatile
  3857  000178  D068               	goto	l2907
  3858                           
  3859                           ;CAN.c: 310:         {;CAN.c: 311:             message->message_type = 0x01;
  3860  00017A  EE20 F001          	lfsr	2,1
  3861  00017E  500E               	movf	CAN_TakeFrame@message,w,c
  3862  000180  26D9               	addwf	fsr2l,f,c
  3863  000182  500F               	movf	CAN_TakeFrame@message+1,w,c
  3864  000184  22DA               	addwfc	fsr2h,f,c
  3865  000186  0E01               	movlw	1
  3866  000188  6EDF               	movwf	indf2,c
  3867                           
  3868                           ;CAN.c: 312:             message->data_length= RXB0DLC & 0x0F;
  3869  00018A  EE20 F010          	lfsr	2,16
  3870  00018E  500E               	movf	CAN_TakeFrame@message,w,c
  3871  000190  26D9               	addwf	fsr2l,f,c
  3872  000192  500F               	movf	CAN_TakeFrame@message+1,w,c
  3873  000194  22DA               	addwfc	fsr2h,f,c
  3874  000196  5065               	movf	3941,w,c	;volatile
  3875  000198  0B0F               	andlw	15
  3876  00019A  6EDF               	movwf	indf2,c
  3877                           
  3878                           ;CAN.c: 313:             if(message->data_length > 8)
  3879  00019C  EE20 F010          	lfsr	2,16
  3880  0001A0  500E               	movf	CAN_TakeFrame@message,w,c
  3881  0001A2  26D9               	addwf	fsr2l,f,c
  3882  0001A4  500F               	movf	CAN_TakeFrame@message+1,w,c
  3883  0001A6  22DA               	addwfc	fsr2h,f,c
  3884  0001A8  0E08               	movlw	8
  3885  0001AA  64DF               	cpfsgt	indf2,c
  3886  0001AC  D041               	goto	l2905
  3887  0001AE  D01E               	goto	l2899
  3888  0001B0                     l2881:
  3889                           
  3890                           ;CAN.c: 319:                         RXB0CON = 0;
  3891  0001B0  0E00               	movlw	0
  3892  0001B2  6E60               	movwf	3936,c	;volatile
  3893                           
  3894                           ;CAN.c: 320:                         break;
  3895  0001B4  D03B               	goto	l2901
  3896  0001B6                     l2883:
  3897                           
  3898                           ;CAN.c: 322:                         RXB1CON = 0;
  3899  0001B6  0E00               	movlw	0
  3900  0001B8  010F               	movlb	15	; () banked
  3901  0001BA  D00E               	goto	L1
  3902  0001BC                     l2885:
  3903                           
  3904                           ;CAN.c: 325:                         B0CON = 0;
  3905  0001BC  0E00               	movlw	0
  3906  0001BE  010E               	movlb	14	; () banked
  3907  0001C0  6F20               	movwf	32,b	;volatile
  3908                           
  3909                           ;CAN.c: 326:                         break;
  3910  0001C2  D034               	goto	l2901
  3911  0001C4                     l2887:
  3912                           
  3913                           ;CAN.c: 328:                         B1CON = 0;
  3914  0001C4  0E00               	movlw	0
  3915  0001C6  010E               	movlb	14	; () banked
  3916  0001C8  6F30               	movwf	48,b	;volatile
  3917                           
  3918                           ;CAN.c: 329:                         break;
  3919  0001CA  D030               	goto	l2901
  3920  0001CC                     l2889:
  3921                           
  3922                           ;CAN.c: 331:                         B2CON = 0;
  3923  0001CC  0E00               	movlw	0
  3924  0001CE  010E               	movlb	14	; () banked
  3925  0001D0  6F40               	movwf	64,b	;volatile
  3926                           
  3927                           ;CAN.c: 332:                         break;
  3928  0001D2  D02C               	goto	l2901
  3929  0001D4                     l2891:
  3930                           
  3931                           ;CAN.c: 334:                         B3CON = 0;
  3932  0001D4  0E00               	movlw	0
  3933  0001D6  010E               	movlb	14	; () banked
  3934  0001D8                     L1:
  3935  0001D8  6F50               	movwf	80,b	;volatile
  3936                           
  3937                           ;CAN.c: 335:                         break;
  3938  0001DA  D028               	goto	l2901
  3939  0001DC                     l2893:
  3940                           
  3941                           ;CAN.c: 337:                         B4CON = 0;
  3942  0001DC  0E00               	movlw	0
  3943  0001DE  010E               	movlb	14	; () banked
  3944  0001E0  6F60               	movwf	96,b	;volatile
  3945                           
  3946                           ;CAN.c: 338:                         break;
  3947  0001E2  D024               	goto	l2901
  3948  0001E4                     l2895:
  3949                           
  3950                           ;CAN.c: 340:                         B5CON = 0;
  3951  0001E4  0E00               	movlw	0
  3952  0001E6  010E               	movlb	14	; () banked
  3953  0001E8  6F70               	movwf	112,b	;volatile
  3954                           
  3955                           ;CAN.c: 341:                         break;
  3956  0001EA  D020               	goto	l2901
  3957  0001EC                     l2899:
  3958  0001EC  5013               	movf	CAN_TakeFrame@k,w,c
  3959  0001EE  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  3960  0001F0  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  3961                           
  3962                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3963                           ; Switch size 1, requested type "simple"
  3964                           ; Number of cases is 1, Range of values is 0 to 0
  3965                           ; switch strategies available:
  3966                           ; Name         Instructions Cycles
  3967                           ; simple_byte            4     3 (average)
  3968                           ;	Chosen strategy is simple_byte
  3969  0001F2  5011               	movf	??_CAN_TakeFrame+1,w,c
  3970  0001F4  0A00               	xorlw	0	; case 0
  3971  0001F6  A4D8               	btfss	status,2,c
  3972  0001F8  D019               	goto	l2901
  3973                           
  3974                           ; Switch size 1, requested type "simple"
  3975                           ; Number of cases is 8, Range of values is 0 to 7
  3976                           ; switch strategies available:
  3977                           ; Name         Instructions Cycles
  3978                           ; simple_byte           25    13 (average)
  3979                           ;	Chosen strategy is simple_byte
  3980  0001FA  5010               	movf	??_CAN_TakeFrame,w,c
  3981  0001FC  0A00               	xorlw	0	; case 0
  3982  0001FE  B4D8               	btfsc	status,2,c
  3983  000200  D7D7               	goto	l2881
  3984  000202  0A01               	xorlw	1	; case 1
  3985  000204  B4D8               	btfsc	status,2,c
  3986  000206  D7D7               	goto	l2883
  3987  000208  0A03               	xorlw	3	; case 2
  3988  00020A  B4D8               	btfsc	status,2,c
  3989  00020C  D7D7               	goto	l2885
  3990  00020E  0A01               	xorlw	1	; case 3
  3991  000210  B4D8               	btfsc	status,2,c
  3992  000212  D7D8               	goto	l2887
  3993  000214  0A07               	xorlw	7	; case 4
  3994  000216  B4D8               	btfsc	status,2,c
  3995  000218  D7D9               	goto	l2889
  3996  00021A  0A01               	xorlw	1	; case 5
  3997  00021C  B4D8               	btfsc	status,2,c
  3998  00021E  D7DA               	goto	l2891
  3999  000220  0A03               	xorlw	3	; case 6
  4000  000222  B4D8               	btfsc	status,2,c
  4001  000224  D7DB               	goto	l2893
  4002  000226  0A01               	xorlw	1	; case 7
  4003  000228  B4D8               	btfsc	status,2,c
  4004  00022A  D7DC               	goto	l2895
  4005  00022C                     l2901:
  4006                           
  4007                           ;CAN.c: 343:                 return FALSE;
  4008  00022C  0E00               	movlw	0
  4009  00022E  0012               	return	
  4010  000230                     l2905:
  4011                           
  4012                           ;CAN.c: 345:             CAN_MoveBuffIntoFrame(message->data, &RXB0D0);
  4013  000230  0E08               	movlw	8
  4014  000232  240E               	addwf	CAN_TakeFrame@message,w,c
  4015  000234  6E06               	movwf	CAN_MoveBuffIntoFrame@Ram,c
  4016  000236  0E00               	movlw	0
  4017  000238  200F               	addwfc	CAN_TakeFrame@message+1,w,c
  4018  00023A  6E07               	movwf	CAN_MoveBuffIntoFrame@Ram+1,c
  4019  00023C  0E66               	movlw	102
  4020  00023E  6E08               	movwf	CAN_MoveBuffIntoFrame@Buf,c
  4021  000240  0E0F               	movlw	15
  4022  000242  6E09               	movwf	CAN_MoveBuffIntoFrame@Buf+1,c
  4023  000244  ECA7  F009         	call	_CAN_MoveBuffIntoFrame	;wreg free
  4024                           
  4025                           ;CAN.c: 346:         }
  4026  000248  D027               	goto	l2927
  4027  00024A                     l2907:
  4028                           
  4029                           ;CAN.c: 349:         {;CAN.c: 350:             message->message_type=0x02;
  4030  00024A  EE20 F001          	lfsr	2,1
  4031  00024E  500E               	movf	CAN_TakeFrame@message,w,c
  4032  000250  26D9               	addwf	fsr2l,f,c
  4033  000252  500F               	movf	CAN_TakeFrame@message+1,w,c
  4034  000254  22DA               	addwfc	fsr2h,f,c
  4035  000256  0E02               	movlw	2
  4036  000258  6EDF               	movwf	indf2,c
  4037  00025A  D01E               	goto	l2927
  4038  00025C                     l2909:
  4039                           
  4040                           ;CAN.c: 356:                 RXB0CON = 0;
  4041  00025C  0E00               	movlw	0
  4042  00025E  6E60               	movwf	3936,c	;volatile
  4043                           
  4044                           ;CAN.c: 357:                 break;
  4045  000260  D03B               	goto	l2929
  4046  000262                     l2911:
  4047                           
  4048                           ;CAN.c: 359:                 RXB1CON = 0;
  4049  000262  0E00               	movlw	0
  4050  000264  010F               	movlb	15	; () banked
  4051  000266  D00E               	goto	L2
  4052  000268                     l2913:
  4053                           
  4054                           ;CAN.c: 362:                 B0CON = 0;
  4055  000268  0E00               	movlw	0
  4056  00026A  010E               	movlb	14	; () banked
  4057  00026C  6F20               	movwf	32,b	;volatile
  4058                           
  4059                           ;CAN.c: 363:                 break;
  4060  00026E  D034               	goto	l2929
  4061  000270                     l2915:
  4062                           
  4063                           ;CAN.c: 365:                 B1CON = 0;
  4064  000270  0E00               	movlw	0
  4065  000272  010E               	movlb	14	; () banked
  4066  000274  6F30               	movwf	48,b	;volatile
  4067                           
  4068                           ;CAN.c: 366:                 break;
  4069  000276  D030               	goto	l2929
  4070  000278                     l2917:
  4071                           
  4072                           ;CAN.c: 368:                 B2CON = 0;
  4073  000278  0E00               	movlw	0
  4074  00027A  010E               	movlb	14	; () banked
  4075  00027C  6F40               	movwf	64,b	;volatile
  4076                           
  4077                           ;CAN.c: 369:                 break;
  4078  00027E  D02C               	goto	l2929
  4079  000280                     l2919:
  4080                           
  4081                           ;CAN.c: 371:                 B3CON = 0;
  4082  000280  0E00               	movlw	0
  4083  000282  010E               	movlb	14	; () banked
  4084  000284                     L2:
  4085  000284  6F50               	movwf	80,b	;volatile
  4086                           
  4087                           ;CAN.c: 372:                 break;
  4088  000286  D028               	goto	l2929
  4089  000288                     l2921:
  4090                           
  4091                           ;CAN.c: 374:                 B4CON = 0;
  4092  000288  0E00               	movlw	0
  4093  00028A  010E               	movlb	14	; () banked
  4094  00028C  6F60               	movwf	96,b	;volatile
  4095                           
  4096                           ;CAN.c: 375:                 break;
  4097  00028E  D024               	goto	l2929
  4098  000290                     l2923:
  4099                           
  4100                           ;CAN.c: 377:                 B5CON = 0;
  4101  000290  0E00               	movlw	0
  4102  000292  010E               	movlb	14	; () banked
  4103  000294  6F70               	movwf	112,b	;volatile
  4104                           
  4105                           ;CAN.c: 378:                 break;
  4106  000296  D020               	goto	l2929
  4107  000298                     l2927:
  4108  000298  5013               	movf	CAN_TakeFrame@k,w,c
  4109  00029A  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  4110  00029C  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  4111                           
  4112                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4113                           ; Switch size 1, requested type "simple"
  4114                           ; Number of cases is 1, Range of values is 0 to 0
  4115                           ; switch strategies available:
  4116                           ; Name         Instructions Cycles
  4117                           ; simple_byte            4     3 (average)
  4118                           ;	Chosen strategy is simple_byte
  4119  00029E  5011               	movf	??_CAN_TakeFrame+1,w,c
  4120  0002A0  0A00               	xorlw	0	; case 0
  4121  0002A2  A4D8               	btfss	status,2,c
  4122  0002A4  D019               	goto	l2929
  4123                           
  4124                           ; Switch size 1, requested type "simple"
  4125                           ; Number of cases is 8, Range of values is 0 to 7
  4126                           ; switch strategies available:
  4127                           ; Name         Instructions Cycles
  4128                           ; simple_byte           25    13 (average)
  4129                           ;	Chosen strategy is simple_byte
  4130  0002A6  5010               	movf	??_CAN_TakeFrame,w,c
  4131  0002A8  0A00               	xorlw	0	; case 0
  4132  0002AA  B4D8               	btfsc	status,2,c
  4133  0002AC  D7D7               	goto	l2909
  4134  0002AE  0A01               	xorlw	1	; case 1
  4135  0002B0  B4D8               	btfsc	status,2,c
  4136  0002B2  D7D7               	goto	l2911
  4137  0002B4  0A03               	xorlw	3	; case 2
  4138  0002B6  B4D8               	btfsc	status,2,c
  4139  0002B8  D7D7               	goto	l2913
  4140  0002BA  0A01               	xorlw	1	; case 3
  4141  0002BC  B4D8               	btfsc	status,2,c
  4142  0002BE  D7D8               	goto	l2915
  4143  0002C0  0A07               	xorlw	7	; case 4
  4144  0002C2  B4D8               	btfsc	status,2,c
  4145  0002C4  D7D9               	goto	l2917
  4146  0002C6  0A01               	xorlw	1	; case 5
  4147  0002C8  B4D8               	btfsc	status,2,c
  4148  0002CA  D7DA               	goto	l2919
  4149  0002CC  0A03               	xorlw	3	; case 6
  4150  0002CE  B4D8               	btfsc	status,2,c
  4151  0002D0  D7DB               	goto	l2921
  4152  0002D2  0A01               	xorlw	1	; case 7
  4153  0002D4  B4D8               	btfsc	status,2,c
  4154  0002D6  D7DC               	goto	l2923
  4155  0002D8                     l2929:
  4156                           
  4157                           ;CAN.c: 380:         return TRUE;
  4158  0002D8  0E01               	movlw	1
  4159  0002DA  0012               	return		;funcret
  4160  0002DC                     __end_of_CAN_TakeFrame:
  4161                           	opt callstack 0
  4162                           
  4163 ;; *************** function ___awdiv *****************
  4164 ;; Defined at:
  4165 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  4166 ;; Parameters:    Size  Location     Type
  4167 ;;  dividend        2    5[COMRAM] int 
  4168 ;;  divisor         2    7[COMRAM] int 
  4169 ;; Auto vars:     Size  Location     Type
  4170 ;;  quotient        2   11[COMRAM] int 
  4171 ;;  sign            1   10[COMRAM] unsigned char 
  4172 ;;  counter         1    9[COMRAM] unsigned char 
  4173 ;; Return value:  Size  Location     Type
  4174 ;;                  2    5[COMRAM] int 
  4175 ;; Registers used:
  4176 ;;		wreg, status,2, status,0
  4177 ;; Tracked objects:
  4178 ;;		On entry : 0/0
  4179 ;;		On exit  : 0/0
  4180 ;;		Unchanged: 0/0
  4181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4182 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4183 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4185 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4186 ;;Total ram usage:        8 bytes
  4187 ;; Hardware stack levels used:    1
  4188 ;; Hardware stack levels required when called:    3
  4189 ;; This function calls:
  4190 ;;		Nothing
  4191 ;; This function is called by:
  4192 ;;		_CAN_TakeFrame
  4193 ;;		_FRAME_HandleCanFrame
  4194 ;; This function uses a non-reentrant model
  4195 ;;
  4196                           
  4197                           	psect	text31
  4198  000DB4                     __ptext31:
  4199                           	opt callstack 0
  4200  000DB4                     ___awdiv:
  4201                           	opt callstack 25
  4202                           
  4203                           ;incstack = 0
  4204  000DB4  0E00               	movlw	0
  4205  000DB6  6E0B               	movwf	___awdiv@sign,c
  4206  000DB8  AE09               	btfss	___awdiv@divisor+1,7,c
  4207  000DBA  D006               	goto	l2807
  4208  000DBC  6C08               	negf	___awdiv@divisor,c
  4209  000DBE  1E09               	comf	___awdiv@divisor+1,f,c
  4210  000DC0  B0D8               	btfsc	status,0,c
  4211  000DC2  2A09               	incf	___awdiv@divisor+1,f,c
  4212  000DC4  0E01               	movlw	1
  4213  000DC6  6E0B               	movwf	___awdiv@sign,c
  4214  000DC8                     l2807:
  4215  000DC8  AE07               	btfss	___awdiv@dividend+1,7,c
  4216  000DCA  D006               	goto	l2813
  4217  000DCC  6C06               	negf	___awdiv@dividend,c
  4218  000DCE  1E07               	comf	___awdiv@dividend+1,f,c
  4219  000DD0  B0D8               	btfsc	status,0,c
  4220  000DD2  2A07               	incf	___awdiv@dividend+1,f,c
  4221  000DD4  0E01               	movlw	1
  4222  000DD6  1A0B               	xorwf	___awdiv@sign,f,c
  4223  000DD8                     l2813:
  4224  000DD8  0E00               	movlw	0
  4225  000DDA  6E0D               	movwf	___awdiv@quotient+1,c
  4226  000DDC  0E00               	movlw	0
  4227  000DDE  6E0C               	movwf	___awdiv@quotient,c
  4228  000DE0  5008               	movf	___awdiv@divisor,w,c
  4229  000DE2  1009               	iorwf	___awdiv@divisor+1,w,c
  4230  000DE4  B4D8               	btfsc	status,2,c
  4231  000DE6  D01C               	goto	l2835
  4232  000DE8  0E01               	movlw	1
  4233  000DEA  6E0A               	movwf	___awdiv@counter,c
  4234  000DEC  D004               	goto	l2821
  4235  000DEE                     l2819:
  4236  000DEE  90D8               	bcf	status,0,c
  4237  000DF0  3608               	rlcf	___awdiv@divisor,f,c
  4238  000DF2  3609               	rlcf	___awdiv@divisor+1,f,c
  4239  000DF4  2A0A               	incf	___awdiv@counter,f,c
  4240  000DF6                     l2821:
  4241  000DF6  AE09               	btfss	___awdiv@divisor+1,7,c
  4242  000DF8  D7FA               	goto	l2819
  4243  000DFA                     u1400:
  4244  000DFA  90D8               	bcf	status,0,c
  4245  000DFC  360C               	rlcf	___awdiv@quotient,f,c
  4246  000DFE  360D               	rlcf	___awdiv@quotient+1,f,c
  4247  000E00  5008               	movf	___awdiv@divisor,w,c
  4248  000E02  5C06               	subwf	___awdiv@dividend,w,c
  4249  000E04  5009               	movf	___awdiv@divisor+1,w,c
  4250  000E06  5807               	subwfb	___awdiv@dividend+1,w,c
  4251  000E08  A0D8               	btfss	status,0,c
  4252  000E0A  D005               	goto	l2831
  4253  000E0C  5008               	movf	___awdiv@divisor,w,c
  4254  000E0E  5E06               	subwf	___awdiv@dividend,f,c
  4255  000E10  5009               	movf	___awdiv@divisor+1,w,c
  4256  000E12  5A07               	subwfb	___awdiv@dividend+1,f,c
  4257  000E14  800C               	bsf	___awdiv@quotient,0,c
  4258  000E16                     l2831:
  4259  000E16  90D8               	bcf	status,0,c
  4260  000E18  3209               	rrcf	___awdiv@divisor+1,f,c
  4261  000E1A  3208               	rrcf	___awdiv@divisor,f,c
  4262  000E1C  2E0A               	decfsz	___awdiv@counter,f,c
  4263  000E1E  D7ED               	goto	u1400
  4264  000E20                     l2835:
  4265  000E20  500B               	movf	___awdiv@sign,w,c
  4266  000E22  B4D8               	btfsc	status,2,c
  4267  000E24  D004               	goto	l2839
  4268  000E26  6C0C               	negf	___awdiv@quotient,c
  4269  000E28  1E0D               	comf	___awdiv@quotient+1,f,c
  4270  000E2A  B0D8               	btfsc	status,0,c
  4271  000E2C  2A0D               	incf	___awdiv@quotient+1,f,c
  4272  000E2E                     l2839:
  4273  000E2E  C00C  F006         	movff	___awdiv@quotient,?___awdiv
  4274  000E32  C00D  F007         	movff	___awdiv@quotient+1,?___awdiv+1
  4275  000E36  0012               	return		;funcret
  4276  000E38                     __end_of___awdiv:
  4277                           	opt callstack 0
  4278                           
  4279 ;; *************** function _CAN_MoveBuffIntoFrame *****************
  4280 ;; Defined at:
  4281 ;;		line 182 in file "CAN.c"
  4282 ;; Parameters:    Size  Location     Type
  4283 ;;  Ram             2    5[COMRAM] PTR unsigned char 
  4284 ;;		 -> TRM_DataTransmition@canMessage(17), RXB0D0(1), 
  4285 ;;  Buf             2    7[COMRAM] PTR unsigned char 
  4286 ;;		 -> TRM_DataTransmition@canMessage(17), RXB0D0(1), 
  4287 ;; Auto vars:     Size  Location     Type
  4288 ;;  i               1    9[COMRAM] unsigned char 
  4289 ;; Return value:  Size  Location     Type
  4290 ;;                  1    wreg      void 
  4291 ;; Registers used:
  4292 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4293 ;; Tracked objects:
  4294 ;;		On entry : 0/0
  4295 ;;		On exit  : 0/0
  4296 ;;		Unchanged: 0/0
  4297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4298 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4299 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4301 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4302 ;;Total ram usage:        5 bytes
  4303 ;; Hardware stack levels used:    1
  4304 ;; Hardware stack levels required when called:    3
  4305 ;; This function calls:
  4306 ;;		Nothing
  4307 ;; This function is called by:
  4308 ;;		_CAN_SendFrame
  4309 ;;		_CAN_TakeFrame
  4310 ;; This function uses a non-reentrant model
  4311 ;;
  4312                           
  4313                           	psect	text32
  4314  00134E                     __ptext32:
  4315                           	opt callstack 0
  4316  00134E                     _CAN_MoveBuffIntoFrame:
  4317                           	opt callstack 24
  4318                           
  4319                           ;CAN.c: 182: static void CAN_MoveBuffIntoFrame(BYTE* Ram, BYTE* Buf);CAN.c: 183: {;CAN.c
      +                          : 184:     BYTE i;;CAN.c: 185:     for(i=0; i<8; ++i)
  4320                           
  4321                           ;incstack = 0
  4322  00134E  0E00               	movlw	0
  4323  001350  6E0A               	movwf	CAN_MoveBuffIntoFrame@i,c
  4324  001352                     l2445:
  4325                           
  4326                           ;CAN.c: 186:     {;CAN.c: 187:         Ram[i]=(*(Buf+i));
  4327  001352  500A               	movf	CAN_MoveBuffIntoFrame@i,w,c
  4328  001354  2408               	addwf	CAN_MoveBuffIntoFrame@Buf,w,c
  4329  001356  6ED9               	movwf	fsr2l,c
  4330  001358  0E00               	movlw	0
  4331  00135A  2009               	addwfc	CAN_MoveBuffIntoFrame@Buf+1,w,c
  4332  00135C  6EDA               	movwf	fsr2h,c
  4333  00135E  500A               	movf	CAN_MoveBuffIntoFrame@i,w,c
  4334  001360  2406               	addwf	CAN_MoveBuffIntoFrame@Ram,w,c
  4335  001362  6EE1               	movwf	fsr1l,c
  4336  001364  0E00               	movlw	0
  4337  001366  2007               	addwfc	CAN_MoveBuffIntoFrame@Ram+1,w,c
  4338  001368  6EE2               	movwf	fsr1h,c
  4339  00136A  CFDF FFE7          	movff	indf2,indf1
  4340                           
  4341                           ;CAN.c: 188:     }
  4342  00136E  2A0A               	incf	CAN_MoveBuffIntoFrame@i,f,c
  4343  001370  0E07               	movlw	7
  4344  001372  640A               	cpfsgt	CAN_MoveBuffIntoFrame@i,c
  4345  001374  D7EE               	goto	l2445
  4346  001376  0012               	return	
  4347  001378                     __end_of_CAN_MoveBuffIntoFrame:
  4348                           	opt callstack 0
  4349                           
  4350 ;; *************** function _TMR1_Update_flag_Set *****************
  4351 ;; Defined at:
  4352 ;;		line 32 in file "TMR1.c"
  4353 ;; Parameters:    Size  Location     Type
  4354 ;;  a               2    5[COMRAM] unsigned int 
  4355 ;; Auto vars:     Size  Location     Type
  4356 ;;		None
  4357 ;; Return value:  Size  Location     Type
  4358 ;;                  1    wreg      void 
  4359 ;; Registers used:
  4360 ;;		None
  4361 ;; Tracked objects:
  4362 ;;		On entry : 0/0
  4363 ;;		On exit  : 0/0
  4364 ;;		Unchanged: 0/0
  4365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4366 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4369 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4370 ;;Total ram usage:        2 bytes
  4371 ;; Hardware stack levels used:    1
  4372 ;; Hardware stack levels required when called:    3
  4373 ;; This function calls:
  4374 ;;		Nothing
  4375 ;; This function is called by:
  4376 ;;		_main
  4377 ;; This function uses a non-reentrant model
  4378 ;;
  4379                           
  4380                           	psect	text33
  4381  0014A8                     __ptext33:
  4382                           	opt callstack 0
  4383  0014A8                     _TMR1_Update_flag_Set:
  4384                           	opt callstack 27
  4385                           
  4386                           ;TMR1.c: 32: void TMR1_Update_flag_Set(UINT a);TMR1.c: 33: {;TMR1.c: 34:     TMR1_Update
      +                          _flag = a;
  4387                           
  4388                           ;incstack = 0
  4389  0014A8  C006  F047         	movff	TMR1_Update_flag_Set@a,_TMR1_Update_flag
  4390  0014AC  C007  F048         	movff	TMR1_Update_flag_Set@a+1,_TMR1_Update_flag+1
  4391  0014B0  0012               	return		;funcret
  4392  0014B2                     __end_of_TMR1_Update_flag_Set:
  4393                           	opt callstack 0
  4394                           
  4395 ;; *************** function _TMR1_Update_flag_Get *****************
  4396 ;; Defined at:
  4397 ;;		line 47 in file "TMR1.c"
  4398 ;; Parameters:    Size  Location     Type
  4399 ;;		None
  4400 ;; Auto vars:     Size  Location     Type
  4401 ;;		None
  4402 ;; Return value:  Size  Location     Type
  4403 ;;                  2    5[COMRAM] unsigned int 
  4404 ;; Registers used:
  4405 ;;		None
  4406 ;; Tracked objects:
  4407 ;;		On entry : 0/0
  4408 ;;		On exit  : 0/0
  4409 ;;		Unchanged: 0/0
  4410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4411 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4414 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4415 ;;Total ram usage:        2 bytes
  4416 ;; Hardware stack levels used:    1
  4417 ;; Hardware stack levels required when called:    3
  4418 ;; This function calls:
  4419 ;;		Nothing
  4420 ;; This function is called by:
  4421 ;;		_main
  4422 ;; This function uses a non-reentrant model
  4423 ;;
  4424                           
  4425                           	psect	text34
  4426  0014B2                     __ptext34:
  4427                           	opt callstack 0
  4428  0014B2                     _TMR1_Update_flag_Get:
  4429                           	opt callstack 27
  4430                           
  4431                           ;TMR1.c: 49:     return TMR1_Update_flag;
  4432                           
  4433                           ;incstack = 0
  4434  0014B2  C047  F006         	movff	_TMR1_Update_flag,?_TMR1_Update_flag_Get
  4435  0014B6  C048  F007         	movff	_TMR1_Update_flag+1,?_TMR1_Update_flag_Get+1
  4436  0014BA  0012               	return		;funcret
  4437  0014BC                     __end_of_TMR1_Update_flag_Get:
  4438                           	opt callstack 0
  4439                           
  4440 ;; *************** function _LED_Update *****************
  4441 ;; Defined at:
  4442 ;;		line 105 in file "LED.c"
  4443 ;; Parameters:    Size  Location     Type
  4444 ;;		None
  4445 ;; Auto vars:     Size  Location     Type
  4446 ;;		None
  4447 ;; Return value:  Size  Location     Type
  4448 ;;                  1    wreg      unsigned char 
  4449 ;; Registers used:
  4450 ;;		wreg, status,2, status,0, cstack
  4451 ;; Tracked objects:
  4452 ;;		On entry : 0/0
  4453 ;;		On exit  : 0/0
  4454 ;;		Unchanged: 0/0
  4455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4460 ;;Total ram usage:        0 bytes
  4461 ;; Hardware stack levels used:    1
  4462 ;; Hardware stack levels required when called:    5
  4463 ;; This function calls:
  4464 ;;		_LED_Control
  4465 ;;		_LED_Left
  4466 ;;		_LED_Light_Pos
  4467 ;;		_LED_Right
  4468 ;; This function is called by:
  4469 ;;		_main
  4470 ;; This function uses a non-reentrant model
  4471 ;;
  4472                           
  4473                           	psect	text35
  4474  000E38                     __ptext35:
  4475                           	opt callstack 0
  4476  000E38                     _LED_Update:
  4477                           	opt callstack 25
  4478                           
  4479                           ;LED.c: 107:     static LED_RGA_type Red = RED;;LED.c: 108:     static LED_RGA_type Gree
      +                          n = GREEN;;LED.c: 109:     static UINT pos1 = 0b0000000001;;LED.c: 110:     static UINT 
      +                          pos2 = 0b0000000001;;LED.c: 112:     if(LOCK == 0)
  4480                           
  4481                           ;incstack = 0
  4482  000E38  504F               	movf	_LOCK,w,c
  4483  000E3A  A4D8               	btfss	status,2,c
  4484  000E3C  D013               	goto	l3061
  4485                           
  4486                           ;LED.c: 113:     {;LED.c: 114:     LED_Control(RED,0b0000000000);
  4487  000E3E  0E00               	movlw	0
  4488  000E40  6E07               	movwf	LED_Control@diode+1,c
  4489  000E42  0E00               	movlw	0
  4490  000E44  6E06               	movwf	LED_Control@diode,c
  4491  000E46  0E00               	movlw	0
  4492  000E48  EC42  F004         	call	_LED_Control
  4493                           
  4494                           ;LED.c: 115:     LED_Light_Pos(Green,pos2,Fulfillment_Lvl);
  4495  000E4C  C052  F00D         	movff	LED_Update@pos2,LED_Light_Pos@pos
  4496  000E50  C053  F00E         	movff	LED_Update@pos2+1,LED_Light_Pos@pos+1
  4497  000E54  C056  F00F         	movff	_Fulfillment_Lvl,LED_Light_Pos@fulfillment
  4498  000E58  C057  F010         	movff	_Fulfillment_Lvl+1,LED_Light_Pos@fulfillment+1
  4499  000E5C  5058               	movf	LED_Update@Green,w,c
  4500  000E5E  ECF2  F005         	call	_LED_Light_Pos
  4501                           
  4502                           ;LED.c: 117:     }
  4503  000E62  D012               	goto	l293
  4504  000E64                     l3061:
  4505                           
  4506                           ;LED.c: 119:     {;LED.c: 120:     LED_Control(Green,0b0000000000);
  4507  000E64  0E00               	movlw	0
  4508  000E66  6E07               	movwf	LED_Control@diode+1,c
  4509  000E68  0E00               	movlw	0
  4510  000E6A  6E06               	movwf	LED_Control@diode,c
  4511  000E6C  5058               	movf	LED_Update@Green,w,c
  4512  000E6E  EC42  F004         	call	_LED_Control
  4513                           
  4514                           ;LED.c: 121:     LED_Light_Pos(RED,pos1,Fulfillment_Lvl);
  4515  000E72  C054  F00D         	movff	LED_Update@pos1,LED_Light_Pos@pos
  4516  000E76  C055  F00E         	movff	LED_Update@pos1+1,LED_Light_Pos@pos+1
  4517  000E7A  C056  F00F         	movff	_Fulfillment_Lvl,LED_Light_Pos@fulfillment
  4518  000E7E  C057  F010         	movff	_Fulfillment_Lvl+1,LED_Light_Pos@fulfillment+1
  4519  000E82  0E00               	movlw	0
  4520  000E84  ECF2  F005         	call	_LED_Light_Pos
  4521  000E88                     l293:
  4522                           
  4523                           ;LED.c: 123:     pos1 = LED_Right(pos1);
  4524  000E88  C054  F006         	movff	LED_Update@pos1,LED_Right@a
  4525  000E8C  C055  F007         	movff	LED_Update@pos1+1,LED_Right@a+1
  4526  000E90  EC9E  F008         	call	_LED_Right	;wreg free
  4527  000E94  C006  F054         	movff	?_LED_Right,LED_Update@pos1
  4528  000E98  C007  F055         	movff	?_LED_Right+1,LED_Update@pos1+1
  4529                           
  4530                           ;LED.c: 124:     pos2 = LED_Left(pos2);
  4531  000E9C  C052  F006         	movff	LED_Update@pos2,LED_Left@a
  4532  000EA0  C053  F007         	movff	LED_Update@pos2+1,LED_Left@a+1
  4533  000EA4  ECE9  F008         	call	_LED_Left	;wreg free
  4534  000EA8  C006  F052         	movff	?_LED_Left,LED_Update@pos2
  4535  000EAC  C007  F053         	movff	?_LED_Left+1,LED_Update@pos2+1
  4536  000EB0  0012               	return		;funcret
  4537  000EB2                     __end_of_LED_Update:
  4538                           	opt callstack 0
  4539                           
  4540 ;; *************** function _LED_Light_Pos *****************
  4541 ;; Defined at:
  4542 ;;		line 196 in file "LED.c"
  4543 ;; Parameters:    Size  Location     Type
  4544 ;;  color           1    wreg     enum E10644
  4545 ;;  pos             2   12[COMRAM] unsigned int 
  4546 ;;  fulfillment     2   14[COMRAM] unsigned int 
  4547 ;; Auto vars:     Size  Location     Type
  4548 ;;  color           1   16[COMRAM] enum E10644
  4549 ;;  flage           2   21[COMRAM] unsigned int 
  4550 ;;  pos2            2   19[COMRAM] unsigned int 
  4551 ;;  LED_array       2   17[COMRAM] unsigned int 
  4552 ;; Return value:  Size  Location     Type
  4553 ;;                  2   12[COMRAM] unsigned int 
  4554 ;; Registers used:
  4555 ;;		wreg, status,2, status,0, cstack
  4556 ;; Tracked objects:
  4557 ;;		On entry : 0/0
  4558 ;;		On exit  : 0/0
  4559 ;;		Unchanged: 0/0
  4560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4561 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4562 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4564 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4565 ;;Total ram usage:       11 bytes
  4566 ;; Hardware stack levels used:    1
  4567 ;; Hardware stack levels required when called:    4
  4568 ;; This function calls:
  4569 ;;		_LED_Control
  4570 ;;		_LED_Left
  4571 ;;		_LED_Right
  4572 ;;		___lwdiv
  4573 ;; This function is called by:
  4574 ;;		_LED_Update
  4575 ;; This function uses a non-reentrant model
  4576 ;;
  4577                           
  4578                           	psect	text36
  4579  000BE4                     __ptext36:
  4580                           	opt callstack 0
  4581  000BE4                     _LED_Light_Pos:
  4582                           	opt callstack 25
  4583                           
  4584                           ;incstack = 0
  4585                           ;LED_Light_Pos@color stored from wreg
  4586  000BE4  6E11               	movwf	LED_Light_Pos@color,c
  4587                           
  4588                           ;LED.c: 196: UINT LED_Light_Pos(LED_RGA_type color,UINT pos, UINT fulfillment);LED.c: 19
      +                          7: {;LED.c: 198:     UINT pos2 =pos;
  4589  000BE6  C00D  F014         	movff	LED_Light_Pos@pos,LED_Light_Pos@pos2
  4590  000BEA  C00E  F015         	movff	LED_Light_Pos@pos+1,LED_Light_Pos@pos2+1
  4591                           
  4592                           ;LED.c: 199:     UINT LED_array = 0b0000000000;
  4593  000BEE  0E00               	movlw	0
  4594  000BF0  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  4595  000BF2  0E00               	movlw	0
  4596  000BF4  6E12               	movwf	LED_Light_Pos@LED_array,c
  4597                           
  4598                           ;LED.c: 200:     UINT flage = fulfillment/10;
  4599  000BF6  C00F  F006         	movff	LED_Light_Pos@fulfillment,___lwdiv@dividend
  4600  000BFA  C010  F007         	movff	LED_Light_Pos@fulfillment+1,___lwdiv@dividend+1
  4601  000BFE  0E00               	movlw	0
  4602  000C00  6E09               	movwf	___lwdiv@divisor+1,c
  4603  000C02  0E0A               	movlw	10
  4604  000C04  6E08               	movwf	___lwdiv@divisor,c
  4605  000C06  EC4E  F008         	call	___lwdiv	;wreg free
  4606  000C0A  C006  F016         	movff	?___lwdiv,LED_Light_Pos@flage
  4607  000C0E  C007  F017         	movff	?___lwdiv+1,LED_Light_Pos@flage+1
  4608                           
  4609                           ;LED.c: 201:     if(color == RED)
  4610  000C12  5011               	movf	LED_Light_Pos@color,w,c
  4611  000C14  B4D8               	btfsc	status,2,c
  4612  000C16  D017               	goto	l2967
  4613  000C18  D031               	goto	l2975
  4614  000C1A                     l2961:
  4615                           
  4616                           ;LED.c: 204:         {;LED.c: 205:             LED_array = pos2|LED_array;
  4617  000C1A  5012               	movf	LED_Light_Pos@LED_array,w,c
  4618  000C1C  1014               	iorwf	LED_Light_Pos@pos2,w,c
  4619  000C1E  6E12               	movwf	LED_Light_Pos@LED_array,c
  4620  000C20  5013               	movf	LED_Light_Pos@LED_array+1,w,c
  4621  000C22  1015               	iorwf	LED_Light_Pos@pos2+1,w,c
  4622  000C24  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  4623                           
  4624                           ;LED.c: 206:             pos2 = LED_Left(pos2);
  4625  000C26  C014  F006         	movff	LED_Light_Pos@pos2,LED_Left@a
  4626  000C2A  C015  F007         	movff	LED_Light_Pos@pos2+1,LED_Left@a+1
  4627  000C2E  ECE9  F008         	call	_LED_Left	;wreg free
  4628  000C32  C006  F014         	movff	?_LED_Left,LED_Light_Pos@pos2
  4629  000C36  C007  F015         	movff	?_LED_Left+1,LED_Light_Pos@pos2+1
  4630                           
  4631                           ;LED.c: 207:             flage = flage - 1;
  4632  000C3A  0EFF               	movlw	255
  4633  000C3C  2416               	addwf	LED_Light_Pos@flage,w,c
  4634  000C3E  6E16               	movwf	LED_Light_Pos@flage,c
  4635  000C40  0EFF               	movlw	255
  4636  000C42  2017               	addwfc	LED_Light_Pos@flage+1,w,c
  4637  000C44  6E17               	movwf	LED_Light_Pos@flage+1,c
  4638  000C46                     l2967:
  4639                           
  4640                           ;LED.c: 203:         while(flage>0)
  4641  000C46  5016               	movf	LED_Light_Pos@flage,w,c
  4642  000C48  1017               	iorwf	LED_Light_Pos@flage+1,w,c
  4643  000C4A  B4D8               	btfsc	status,2,c
  4644  000C4C  D01B               	goto	u1510
  4645  000C4E  D7E5               	goto	l2961
  4646  000C50                     l2969:
  4647                           
  4648                           ;LED.c: 213:         {;LED.c: 214:             LED_array = pos2|LED_array;
  4649  000C50  5012               	movf	LED_Light_Pos@LED_array,w,c
  4650  000C52  1014               	iorwf	LED_Light_Pos@pos2,w,c
  4651  000C54  6E12               	movwf	LED_Light_Pos@LED_array,c
  4652  000C56  5013               	movf	LED_Light_Pos@LED_array+1,w,c
  4653  000C58  1015               	iorwf	LED_Light_Pos@pos2+1,w,c
  4654  000C5A  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  4655                           
  4656                           ;LED.c: 215:             pos2 = LED_Right(pos2);
  4657  000C5C  C014  F006         	movff	LED_Light_Pos@pos2,LED_Right@a
  4658  000C60  C015  F007         	movff	LED_Light_Pos@pos2+1,LED_Right@a+1
  4659  000C64  EC9E  F008         	call	_LED_Right	;wreg free
  4660  000C68  C006  F014         	movff	?_LED_Right,LED_Light_Pos@pos2
  4661  000C6C  C007  F015         	movff	?_LED_Right+1,LED_Light_Pos@pos2+1
  4662                           
  4663                           ;LED.c: 216:             flage = flage - 1;
  4664  000C70  0EFF               	movlw	255
  4665  000C72  2416               	addwf	LED_Light_Pos@flage,w,c
  4666  000C74  6E16               	movwf	LED_Light_Pos@flage,c
  4667  000C76  0EFF               	movlw	255
  4668  000C78  2017               	addwfc	LED_Light_Pos@flage+1,w,c
  4669  000C7A  6E17               	movwf	LED_Light_Pos@flage+1,c
  4670  000C7C                     l2975:
  4671                           
  4672                           ;LED.c: 212:         while(flage>0)
  4673  000C7C  5016               	movf	LED_Light_Pos@flage,w,c
  4674  000C7E  1017               	iorwf	LED_Light_Pos@flage+1,w,c
  4675  000C80  A4D8               	btfss	status,2,c
  4676  000C82  D7E6               	goto	l2969
  4677  000C84                     u1510:
  4678                           
  4679                           ;LED.c: 219:     LED_Control(color, LED_array);
  4680  000C84  C012  F006         	movff	LED_Light_Pos@LED_array,LED_Control@diode
  4681  000C88  C013  F007         	movff	LED_Light_Pos@LED_array+1,LED_Control@diode+1
  4682  000C8C  5011               	movf	LED_Light_Pos@color,w,c
  4683  000C8E  EC42  F004         	call	_LED_Control
  4684  000C92  0012               	return		;funcret
  4685  000C94                     __end_of_LED_Light_Pos:
  4686                           	opt callstack 0
  4687                           
  4688 ;; *************** function ___lwdiv *****************
  4689 ;; Defined at:
  4690 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwdiv.c"
  4691 ;; Parameters:    Size  Location     Type
  4692 ;;  dividend        2    5[COMRAM] unsigned int 
  4693 ;;  divisor         2    7[COMRAM] unsigned int 
  4694 ;; Auto vars:     Size  Location     Type
  4695 ;;  quotient        2    9[COMRAM] unsigned int 
  4696 ;;  counter         1   11[COMRAM] unsigned char 
  4697 ;; Return value:  Size  Location     Type
  4698 ;;                  2    5[COMRAM] unsigned int 
  4699 ;; Registers used:
  4700 ;;		wreg, status,2, status,0
  4701 ;; Tracked objects:
  4702 ;;		On entry : 0/0
  4703 ;;		On exit  : 0/0
  4704 ;;		Unchanged: 0/0
  4705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4706 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4707 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4709 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4710 ;;Total ram usage:        7 bytes
  4711 ;; Hardware stack levels used:    1
  4712 ;; Hardware stack levels required when called:    3
  4713 ;; This function calls:
  4714 ;;		Nothing
  4715 ;; This function is called by:
  4716 ;;		_LED_Light_Pos
  4717 ;;		_FRAME_Plot
  4718 ;; This function uses a non-reentrant model
  4719 ;;
  4720                           
  4721                           	psect	text37
  4722  00109C                     __ptext37:
  4723                           	opt callstack 0
  4724  00109C                     ___lwdiv:
  4725                           	opt callstack 24
  4726                           
  4727                           ;incstack = 0
  4728  00109C  0E00               	movlw	0
  4729  00109E  6E0B               	movwf	___lwdiv@quotient+1,c
  4730  0010A0  0E00               	movlw	0
  4731  0010A2  6E0A               	movwf	___lwdiv@quotient,c
  4732  0010A4  5008               	movf	___lwdiv@divisor,w,c
  4733  0010A6  1009               	iorwf	___lwdiv@divisor+1,w,c
  4734  0010A8  B4D8               	btfsc	status,2,c
  4735  0010AA  D01C               	goto	l1175
  4736  0010AC  0E01               	movlw	1
  4737  0010AE  6E0C               	movwf	___lwdiv@counter,c
  4738  0010B0  D004               	goto	l2505
  4739  0010B2                     l2503:
  4740  0010B2  90D8               	bcf	status,0,c
  4741  0010B4  3608               	rlcf	___lwdiv@divisor,f,c
  4742  0010B6  3609               	rlcf	___lwdiv@divisor+1,f,c
  4743  0010B8  2A0C               	incf	___lwdiv@counter,f,c
  4744  0010BA                     l2505:
  4745  0010BA  AE09               	btfss	___lwdiv@divisor+1,7,c
  4746  0010BC  D7FA               	goto	l2503
  4747  0010BE                     u1070:
  4748  0010BE  90D8               	bcf	status,0,c
  4749  0010C0  360A               	rlcf	___lwdiv@quotient,f,c
  4750  0010C2  360B               	rlcf	___lwdiv@quotient+1,f,c
  4751  0010C4  5008               	movf	___lwdiv@divisor,w,c
  4752  0010C6  5C06               	subwf	___lwdiv@dividend,w,c
  4753  0010C8  5009               	movf	___lwdiv@divisor+1,w,c
  4754  0010CA  5807               	subwfb	___lwdiv@dividend+1,w,c
  4755  0010CC  A0D8               	btfss	status,0,c
  4756  0010CE  D005               	goto	l2515
  4757  0010D0  5008               	movf	___lwdiv@divisor,w,c
  4758  0010D2  5E06               	subwf	___lwdiv@dividend,f,c
  4759  0010D4  5009               	movf	___lwdiv@divisor+1,w,c
  4760  0010D6  5A07               	subwfb	___lwdiv@dividend+1,f,c
  4761  0010D8  800A               	bsf	___lwdiv@quotient,0,c
  4762  0010DA                     l2515:
  4763  0010DA  90D8               	bcf	status,0,c
  4764  0010DC  3209               	rrcf	___lwdiv@divisor+1,f,c
  4765  0010DE  3208               	rrcf	___lwdiv@divisor,f,c
  4766  0010E0  2E0C               	decfsz	___lwdiv@counter,f,c
  4767  0010E2  D7ED               	goto	u1070
  4768  0010E4                     l1175:
  4769  0010E4  C00A  F006         	movff	___lwdiv@quotient,?___lwdiv
  4770  0010E8  C00B  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4771  0010EC  0012               	return		;funcret
  4772  0010EE                     __end_of___lwdiv:
  4773                           	opt callstack 0
  4774                           
  4775 ;; *************** function _LED_Right *****************
  4776 ;; Defined at:
  4777 ;;		line 140 in file "LED.c"
  4778 ;; Parameters:    Size  Location     Type
  4779 ;;  a               2    5[COMRAM] unsigned int 
  4780 ;; Auto vars:     Size  Location     Type
  4781 ;;  b               2    9[COMRAM] unsigned int 
  4782 ;; Return value:  Size  Location     Type
  4783 ;;                  2    5[COMRAM] unsigned int 
  4784 ;; Registers used:
  4785 ;;		wreg, status,2, status,0
  4786 ;; Tracked objects:
  4787 ;;		On entry : 0/0
  4788 ;;		On exit  : 0/0
  4789 ;;		Unchanged: 0/0
  4790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4791 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4792 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4793 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4794 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4795 ;;Total ram usage:        6 bytes
  4796 ;; Hardware stack levels used:    1
  4797 ;; Hardware stack levels required when called:    3
  4798 ;; This function calls:
  4799 ;;		Nothing
  4800 ;; This function is called by:
  4801 ;;		_LED_Update
  4802 ;;		_LED_Light_Pos
  4803 ;; This function uses a non-reentrant model
  4804 ;;
  4805                           
  4806                           	psect	text38
  4807  00113C                     __ptext38:
  4808                           	opt callstack 0
  4809  00113C                     _LED_Right:
  4810                           	opt callstack 26
  4811                           
  4812                           ;LED.c: 140: UINT LED_Right(UINT a);LED.c: 141: {;LED.c: 142:     if ((a & 0b0000000001)
      +                           == 0b0000000001)
  4813                           
  4814                           ;incstack = 0
  4815  00113C  A006               	btfss	LED_Right@a,0,c
  4816  00113E  D018               	goto	l2623
  4817                           
  4818                           ;LED.c: 143:     {;LED.c: 144:         UINT b = a & 0b1111111110;
  4819  001140  0EFE               	movlw	254
  4820  001142  1406               	andwf	LED_Right@a,w,c
  4821  001144  6E0A               	movwf	LED_Right@b,c
  4822  001146  0E03               	movlw	3
  4823  001148  1407               	andwf	LED_Right@a+1,w,c
  4824  00114A  6E0B               	movwf	LED_Right@b+1,c
  4825                           
  4826                           ;LED.c: 145:         b = b >> 1;
  4827  00114C  90D8               	bcf	status,0,c
  4828  00114E  300B               	rrcf	LED_Right@b+1,w,c
  4829  001150  6E08               	movwf	??_LED_Right& (0+255),c
  4830  001152  300A               	rrcf	LED_Right@b,w,c
  4831  001154  6E0A               	movwf	LED_Right@b,c
  4832  001156  C008  F00B         	movff	??_LED_Right,LED_Right@b+1
  4833                           
  4834                           ;LED.c: 146:         b = b | 0b1000000000;
  4835  00115A  0E00               	movlw	0
  4836  00115C  100A               	iorwf	LED_Right@b,w,c
  4837  00115E  6E0A               	movwf	LED_Right@b,c
  4838  001160  0E02               	movlw	2
  4839  001162  100B               	iorwf	LED_Right@b+1,w,c
  4840  001164  6E0B               	movwf	LED_Right@b+1,c
  4841                           
  4842                           ;LED.c: 147:         return b;
  4843  001166  C00A  F006         	movff	LED_Right@b,?_LED_Right
  4844  00116A  C00B  F007         	movff	LED_Right@b+1,?_LED_Right+1
  4845  00116E  0012               	return	
  4846  001170                     l2623:
  4847                           
  4848                           ;LED.c: 150:     {;LED.c: 151:         a =a >> 1;
  4849  001170  90D8               	bcf	status,0,c
  4850  001172  3007               	rrcf	LED_Right@a+1,w,c
  4851  001174  6E08               	movwf	??_LED_Right& (0+255),c
  4852  001176  3006               	rrcf	LED_Right@a,w,c
  4853  001178  6E06               	movwf	LED_Right@a,c
  4854  00117A  C008  F007         	movff	??_LED_Right,LED_Right@a+1
  4855                           
  4856                           ;LED.c: 152:         return a;
  4857  00117E  C006  F006         	movff	LED_Right@a,?_LED_Right
  4858  001182  C007  F007         	movff	LED_Right@a+1,?_LED_Right+1
  4859  001186  0012               	return		;funcret
  4860  001188                     __end_of_LED_Right:
  4861                           	opt callstack 0
  4862                           
  4863 ;; *************** function _LED_Left *****************
  4864 ;; Defined at:
  4865 ;;		line 167 in file "LED.c"
  4866 ;; Parameters:    Size  Location     Type
  4867 ;;  a               2    5[COMRAM] unsigned int 
  4868 ;; Auto vars:     Size  Location     Type
  4869 ;;  b               2    7[COMRAM] unsigned int 
  4870 ;; Return value:  Size  Location     Type
  4871 ;;                  2    5[COMRAM] unsigned int 
  4872 ;; Registers used:
  4873 ;;		wreg, status,2, status,0
  4874 ;; Tracked objects:
  4875 ;;		On entry : 0/0
  4876 ;;		On exit  : 0/0
  4877 ;;		Unchanged: 0/0
  4878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4879 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4880 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4882 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4883 ;;Total ram usage:        4 bytes
  4884 ;; Hardware stack levels used:    1
  4885 ;; Hardware stack levels required when called:    3
  4886 ;; This function calls:
  4887 ;;		Nothing
  4888 ;; This function is called by:
  4889 ;;		_LED_Update
  4890 ;;		_LED_Light_Pos
  4891 ;; This function uses a non-reentrant model
  4892 ;;
  4893                           
  4894                           	psect	text39
  4895  0011D2                     __ptext39:
  4896                           	opt callstack 0
  4897  0011D2                     _LED_Left:
  4898                           	opt callstack 25
  4899                           
  4900                           ;LED.c: 167: UINT LED_Left(UINT a);LED.c: 168: {;LED.c: 169:     if ((a & 0b1000000000) 
      +                          == 0b1000000000)
  4901                           
  4902                           ;incstack = 0
  4903  0011D2  A207               	btfss	LED_Left@a+1,1,c
  4904  0011D4  D015               	goto	l2639
  4905                           
  4906                           ;LED.c: 170:     {;LED.c: 171:         UINT b = a & 0b0111111111;
  4907  0011D6  0EFF               	movlw	255
  4908  0011D8  1406               	andwf	LED_Left@a,w,c
  4909  0011DA  6E08               	movwf	LED_Left@b,c
  4910  0011DC  0E01               	movlw	1
  4911  0011DE  1407               	andwf	LED_Left@a+1,w,c
  4912  0011E0  6E09               	movwf	LED_Left@b+1,c
  4913                           
  4914                           ;LED.c: 172:         b = b << 1;
  4915  0011E2  90D8               	bcf	status,0,c
  4916  0011E4  3408               	rlcf	LED_Left@b,w,c
  4917  0011E6  6E08               	movwf	LED_Left@b,c
  4918  0011E8  3409               	rlcf	LED_Left@b+1,w,c
  4919  0011EA  6E09               	movwf	LED_Left@b+1,c
  4920                           
  4921                           ;LED.c: 173:         b = b | 0b0000000001;
  4922  0011EC  0E01               	movlw	1
  4923  0011EE  1008               	iorwf	LED_Left@b,w,c
  4924  0011F0  6E08               	movwf	LED_Left@b,c
  4925  0011F2  5009               	movf	LED_Left@b+1,w,c
  4926  0011F4  6E09               	movwf	LED_Left@b+1,c
  4927                           
  4928                           ;LED.c: 174:         return b;
  4929  0011F6  C008  F006         	movff	LED_Left@b,?_LED_Left
  4930  0011FA  C009  F007         	movff	LED_Left@b+1,?_LED_Left+1
  4931  0011FE  0012               	return	
  4932  001200                     l2639:
  4933                           
  4934                           ;LED.c: 177:     {;LED.c: 178:         a = a << 1;
  4935  001200  90D8               	bcf	status,0,c
  4936  001202  3406               	rlcf	LED_Left@a,w,c
  4937  001204  6E06               	movwf	LED_Left@a,c
  4938  001206  3407               	rlcf	LED_Left@a+1,w,c
  4939  001208  6E07               	movwf	LED_Left@a+1,c
  4940                           
  4941                           ;LED.c: 179:         return a;
  4942  00120A  C006  F006         	movff	LED_Left@a,?_LED_Left
  4943  00120E  C007  F007         	movff	LED_Left@a+1,?_LED_Left+1
  4944  001212  0012               	return		;funcret
  4945  001214                     __end_of_LED_Left:
  4946                           	opt callstack 0
  4947                           
  4948 ;; *************** function _INI_All *****************
  4949 ;; Defined at:
  4950 ;;		line 52 in file "INI.c"
  4951 ;; Parameters:    Size  Location     Type
  4952 ;;		None
  4953 ;; Auto vars:     Size  Location     Type
  4954 ;;		None
  4955 ;; Return value:  Size  Location     Type
  4956 ;;                  1    wreg      void 
  4957 ;; Registers used:
  4958 ;;		wreg, status,2, status,0, cstack
  4959 ;; Tracked objects:
  4960 ;;		On entry : 0/0
  4961 ;;		On exit  : 0/0
  4962 ;;		Unchanged: 0/0
  4963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4968 ;;Total ram usage:        0 bytes
  4969 ;; Hardware stack levels used:    1
  4970 ;; Hardware stack levels required when called:    5
  4971 ;; This function calls:
  4972 ;;		_CAN_Setup
  4973 ;;		_INI_GlobalInterrupt
  4974 ;;		_INI_LED_Start
  4975 ;;		_INI_OUTPUT
  4976 ;;		_INI_Timer
  4977 ;; This function is called by:
  4978 ;;		_main
  4979 ;; This function uses a non-reentrant model
  4980 ;;
  4981                           
  4982                           	psect	text40
  4983  00141E                     __ptext40:
  4984                           	opt callstack 0
  4985  00141E                     _INI_All:
  4986                           	opt callstack 25
  4987                           
  4988                           ;INI.c: 55:     WDTCONbits.SWDTEN = 1;
  4989                           
  4990                           ;incstack = 0
  4991  00141E  80D1               	bsf	4049,0,c	;volatile
  4992  001420  0004               	clrwdt		;# 
  4993                           
  4994                           ;INI.c: 64:     INI_OUTPUT();
  4995  001422  EC00  F00A         	call	_INI_OUTPUT	;wreg free
  4996                           
  4997                           ;INI.c: 66:     CAN_Setup();
  4998  001426  ECC7  F007         	call	_CAN_Setup	;wreg free
  4999                           
  5000                           ;INI.c: 67:     INI_GlobalInterrupt();
  5001  00142A  EC2F  F00A         	call	_INI_GlobalInterrupt	;wreg free
  5002                           
  5003                           ;INI.c: 69:     INI_Timer();
  5004  00142E  EC1C  F00A         	call	_INI_Timer	;wreg free
  5005                           
  5006                           ;INI.c: 71:     INI_LED_Start();
  5007  001432  EC76  F009         	call	_INI_LED_Start	;wreg free
  5008  001436  0012               	return		;funcret
  5009  001438                     __end_of_INI_All:
  5010                           	opt callstack 0
  5011                           
  5012 ;; *************** function _INI_Timer *****************
  5013 ;; Defined at:
  5014 ;;		line 92 in file "TMR1.c"
  5015 ;; Parameters:    Size  Location     Type
  5016 ;;		None
  5017 ;; Auto vars:     Size  Location     Type
  5018 ;;		None
  5019 ;; Return value:  Size  Location     Type
  5020 ;;                  1    wreg      unsigned char 
  5021 ;; Registers used:
  5022 ;;		wreg, status,2
  5023 ;; Tracked objects:
  5024 ;;		On entry : 0/0
  5025 ;;		On exit  : 0/0
  5026 ;;		Unchanged: 0/0
  5027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5032 ;;Total ram usage:        0 bytes
  5033 ;; Hardware stack levels used:    1
  5034 ;; Hardware stack levels required when called:    3
  5035 ;; This function calls:
  5036 ;;		Nothing
  5037 ;; This function is called by:
  5038 ;;		_INI_All
  5039 ;; This function uses a non-reentrant model
  5040 ;;
  5041                           
  5042                           	psect	text41
  5043  001438                     __ptext41:
  5044                           	opt callstack 0
  5045  001438                     _INI_Timer:
  5046                           	opt callstack 26
  5047                           
  5048                           ;TMR1.c: 96:     IRCF2 = 1;
  5049                           
  5050                           ;incstack = 0
  5051  001438  8CD3               	bsf	4051,6,c	;volatile
  5052                           
  5053                           ;TMR1.c: 97:     IRCF1 = 1;
  5054  00143A  8AD3               	bsf	4051,5,c	;volatile
  5055                           
  5056                           ;TMR1.c: 98:     IRCF0 = 1;
  5057  00143C  88D3               	bsf	4051,4,c	;volatile
  5058                           
  5059                           ;TMR1.c: 99:     T1CON = 0b00111101;
  5060  00143E  0E3D               	movlw	61
  5061  001440  6ECD               	movwf	4045,c	;volatile
  5062                           
  5063                           ;TMR1.c: 100:     TMR1H= (UINT8)((0xFFFF - (((8000000/8)/4)/10)) >> 8);
  5064  001442  0E9E               	movlw	158
  5065  001444  6ECF               	movwf	4047,c	;volatile
  5066                           
  5067                           ;TMR1.c: 101:     TMR1L=(UINT8)((0xFFFF - (((8000000/8)/4)/10)) & 0xFF);
  5068  001446  0E57               	movlw	87
  5069  001448  6ECE               	movwf	4046,c	;volatile
  5070                           
  5071                           ;TMR1.c: 102:     TMR1IE=1;
  5072  00144A  809D               	bsf	3997,0,c	;volatile
  5073                           
  5074                           ;TMR1.c: 103:     TMR1ON = 1;
  5075  00144C  80CD               	bsf	4045,0,c	;volatile
  5076  00144E  0012               	return		;funcret
  5077  001450                     __end_of_INI_Timer:
  5078                           	opt callstack 0
  5079                           
  5080 ;; *************** function _INI_OUTPUT *****************
  5081 ;; Defined at:
  5082 ;;		line 27 in file "INI.c"
  5083 ;; Parameters:    Size  Location     Type
  5084 ;;		None
  5085 ;; Auto vars:     Size  Location     Type
  5086 ;;		None
  5087 ;; Return value:  Size  Location     Type
  5088 ;;                  1    wreg      void 
  5089 ;; Registers used:
  5090 ;;		wreg, status,2
  5091 ;; Tracked objects:
  5092 ;;		On entry : 0/0
  5093 ;;		On exit  : 0/0
  5094 ;;		Unchanged: 0/0
  5095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5099 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5100 ;;Total ram usage:        0 bytes
  5101 ;; Hardware stack levels used:    1
  5102 ;; Hardware stack levels required when called:    3
  5103 ;; This function calls:
  5104 ;;		Nothing
  5105 ;; This function is called by:
  5106 ;;		_INI_All
  5107 ;; This function uses a non-reentrant model
  5108 ;;
  5109                           
  5110                           	psect	text42
  5111  001400                     __ptext42:
  5112                           	opt callstack 0
  5113  001400                     _INI_OUTPUT:
  5114                           	opt callstack 26
  5115                           
  5116                           ;INI.c: 31:     LATA = 0;
  5117                           
  5118                           ;incstack = 0
  5119  001400  0E00               	movlw	0
  5120  001402  6E89               	movwf	3977,c	;volatile
  5121                           
  5122                           ;INI.c: 32:     LATB = 0;
  5123  001404  0E00               	movlw	0
  5124  001406  6E8A               	movwf	3978,c	;volatile
  5125                           
  5126                           ;INI.c: 33:     LATC = 0;
  5127  001408  0E00               	movlw	0
  5128  00140A  6E8B               	movwf	3979,c	;volatile
  5129                           
  5130                           ;INI.c: 34:     TRISA = 0x0C;
  5131  00140C  0E0C               	movlw	12
  5132  00140E  6E92               	movwf	3986,c	;volatile
  5133                           
  5134                           ;INI.c: 35:     TRISB = 0b10001000;
  5135  001410  0E88               	movlw	136
  5136  001412  6E93               	movwf	3987,c	;volatile
  5137                           
  5138                           ;INI.c: 36:     TRISC = 0xBF;
  5139  001414  0EBF               	movlw	191
  5140  001416  6E94               	movwf	3988,c	;volatile
  5141                           
  5142                           ;INI.c: 37:     RCONbits.IPEN = 1;
  5143  001418  8ED0               	bsf	4048,7,c	;volatile
  5144                           
  5145                           ;INI.c: 40:     DetectorLedRadar.Flags.inicjalizacja = 1;
  5146  00141A  8644               	bsf	_DetectorLedRadar,3,c
  5147  00141C  0012               	return		;funcret
  5148  00141E                     __end_of_INI_OUTPUT:
  5149                           	opt callstack 0
  5150                           
  5151 ;; *************** function _INI_LED_Start *****************
  5152 ;; Defined at:
  5153 ;;		line 231 in file "LED.c"
  5154 ;; Parameters:    Size  Location     Type
  5155 ;;		None
  5156 ;; Auto vars:     Size  Location     Type
  5157 ;;		None
  5158 ;; Return value:  Size  Location     Type
  5159 ;;                  1    wreg      void 
  5160 ;; Registers used:
  5161 ;;		wreg, status,2, status,0, cstack
  5162 ;; Tracked objects:
  5163 ;;		On entry : 0/0
  5164 ;;		On exit  : 0/0
  5165 ;;		Unchanged: 0/0
  5166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5170 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5171 ;;Total ram usage:        0 bytes
  5172 ;; Hardware stack levels used:    1
  5173 ;; Hardware stack levels required when called:    4
  5174 ;; This function calls:
  5175 ;;		_LED_Control
  5176 ;; This function is called by:
  5177 ;;		_INI_All
  5178 ;; This function uses a non-reentrant model
  5179 ;;
  5180                           
  5181                           	psect	text43
  5182  0012EC                     __ptext43:
  5183                           	opt callstack 0
  5184  0012EC                     _INI_LED_Start:
  5185                           	opt callstack 25
  5186                           
  5187                           ;LED.c: 233:     TRISA = TRISA & 0b00000001;
  5188                           
  5189                           ;incstack = 0
  5190  0012EC  5092               	movf	3986,w,c	;volatile
  5191  0012EE  0B01               	andlw	1
  5192  0012F0  6E92               	movwf	3986,c	;volatile
  5193                           
  5194                           ;LED.c: 234:     TRISB = TRISB & 0b11111100;
  5195  0012F2  5093               	movf	3987,w,c	;volatile
  5196  0012F4  0BFC               	andlw	252
  5197  0012F6  6E93               	movwf	3987,c	;volatile
  5198                           
  5199                           ;LED.c: 235:     TRISE = TRISE & 0b11111000;
  5200  0012F8  5096               	movf	3990,w,c	;volatile
  5201  0012FA  0BF8               	andlw	248
  5202  0012FC  6E96               	movwf	3990,c	;volatile
  5203                           
  5204                           ;LED.c: 236:     TRISD = TRISD & 0b00000000;
  5205  0012FE  0E00               	movlw	0
  5206  001300  6E95               	movwf	3989,c	;volatile
  5207                           
  5208                           ;LED.c: 237:     LED_Control(RED,0b0000000000);
  5209  001302  0E00               	movlw	0
  5210  001304  6E07               	movwf	LED_Control@diode+1,c
  5211  001306  0E00               	movlw	0
  5212  001308  6E06               	movwf	LED_Control@diode,c
  5213  00130A  0E00               	movlw	0
  5214  00130C  EC42  F004         	call	_LED_Control
  5215                           
  5216                           ;LED.c: 238:     LED_Control(GREEN,0b0000000000);
  5217  001310  0E00               	movlw	0
  5218  001312  6E07               	movwf	LED_Control@diode+1,c
  5219  001314  0E00               	movlw	0
  5220  001316  6E06               	movwf	LED_Control@diode,c
  5221  001318  0E01               	movlw	1
  5222  00131A  EC42  F004         	call	_LED_Control
  5223  00131E  0012               	return		;funcret
  5224  001320                     __end_of_INI_LED_Start:
  5225                           	opt callstack 0
  5226                           
  5227 ;; *************** function _LED_Control *****************
  5228 ;; Defined at:
  5229 ;;		line 256 in file "LED.c"
  5230 ;; Parameters:    Size  Location     Type
  5231 ;;  color           1    wreg     enum E10644
  5232 ;;  diode           2    5[COMRAM] unsigned int 
  5233 ;; Auto vars:     Size  Location     Type
  5234 ;;  color           1    9[COMRAM] enum E10644
  5235 ;;  cos             2    0        unsigned int 
  5236 ;; Return value:  Size  Location     Type
  5237 ;;                  1    wreg      unsigned char 
  5238 ;; Registers used:
  5239 ;;		wreg, status,2, status,0
  5240 ;; Tracked objects:
  5241 ;;		On entry : 0/0
  5242 ;;		On exit  : 0/0
  5243 ;;		Unchanged: 0/0
  5244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5245 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5246 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5248 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5249 ;;Total ram usage:        5 bytes
  5250 ;; Hardware stack levels used:    1
  5251 ;; Hardware stack levels required when called:    3
  5252 ;; This function calls:
  5253 ;;		Nothing
  5254 ;; This function is called by:
  5255 ;;		_LED_Error
  5256 ;;		_LED_Clear
  5257 ;;		_LED_Update
  5258 ;;		_LED_Light_Pos
  5259 ;;		_INI_LED_Start
  5260 ;; This function uses a non-reentrant model
  5261 ;;
  5262                           
  5263                           	psect	text44
  5264  000884                     __ptext44:
  5265                           	opt callstack 0
  5266  000884                     _LED_Control:
  5267                           	opt callstack 24
  5268                           
  5269                           ;incstack = 0
  5270                           ;LED_Control@color stored from wreg
  5271  000884  6E0A               	movwf	LED_Control@color,c
  5272                           
  5273                           ;LED.c: 259:     if(color == RED)
  5274  000886  500A               	movf	LED_Control@color,w,c
  5275  000888  A4D8               	btfss	status,2,c
  5276  00088A  D050               	goto	l321
  5277                           
  5278                           ;LED.c: 260:     {;LED.c: 262:         if((diode & 0b0000000001)== 0b0000000001)
  5279  00088C  A006               	btfss	LED_Control@diode,0,c
  5280  00088E  D003               	goto	l2321
  5281                           
  5282                           ;LED.c: 263:         {;LED.c: 264:             LATD = LATD | ~0b11101111;
  5283  000890  508C               	movf	3980,w,c	;volatile
  5284  000892  0910               	iorlw	16
  5285  000894  D002               	goto	L3
  5286  000896                     l2321:
  5287                           
  5288                           ;LED.c: 267:         {;LED.c: 268:             LATD = LATD &0b11101111;
  5289  000896  508C               	movf	3980,w,c	;volatile
  5290  000898  0BEF               	andlw	239
  5291  00089A                     L3:
  5292  00089A  6E8C               	movwf	3980,c	;volatile
  5293                           
  5294                           ;LED.c: 271:         if((diode & 0b0000000010) == 0b0000000010)
  5295  00089C  A206               	btfss	LED_Control@diode,1,c
  5296  00089E  D003               	goto	l2327
  5297                           
  5298                           ;LED.c: 272:         {;LED.c: 273:             LATD = LATD | ~0b10111111;
  5299  0008A0  508C               	movf	3980,w,c	;volatile
  5300  0008A2  0940               	iorlw	64
  5301  0008A4  D002               	goto	L4
  5302  0008A6                     l2327:
  5303                           
  5304                           ;LED.c: 276:         {;LED.c: 277:             LATD = LATD & 0b10111111;
  5305  0008A6  508C               	movf	3980,w,c	;volatile
  5306  0008A8  0BBF               	andlw	191
  5307  0008AA                     L4:
  5308  0008AA  6E8C               	movwf	3980,c	;volatile
  5309                           
  5310                           ;LED.c: 280:         if((diode & 0b0000000100) == 0b0000000100)
  5311  0008AC  A406               	btfss	LED_Control@diode,2,c
  5312  0008AE  D003               	goto	l2333
  5313                           
  5314                           ;LED.c: 281:         {;LED.c: 282:             LATB = LATB | ~0b11111110;
  5315  0008B0  508A               	movf	3978,w,c	;volatile
  5316  0008B2  0901               	iorlw	1
  5317  0008B4  D002               	goto	L5
  5318  0008B6                     l2333:
  5319                           
  5320                           ;LED.c: 285:         {;LED.c: 286:             LATB = LATB & 0b11111110;
  5321  0008B6  508A               	movf	3978,w,c	;volatile
  5322  0008B8  0BFE               	andlw	254
  5323  0008BA                     L5:
  5324  0008BA  6E8A               	movwf	3978,c	;volatile
  5325                           
  5326                           ;LED.c: 290:         if((diode & 0b0000001000) == 0b0000001000)
  5327  0008BC  A606               	btfss	LED_Control@diode,3,c
  5328  0008BE  D003               	goto	l2339
  5329                           
  5330                           ;LED.c: 291:         {;LED.c: 292:             LATA = LATA | ~0b11111101;
  5331  0008C0  5089               	movf	3977,w,c	;volatile
  5332  0008C2  0902               	iorlw	2
  5333  0008C4  D002               	goto	L6
  5334  0008C6                     l2339:
  5335                           
  5336                           ;LED.c: 295:         {;LED.c: 296:             LATA = LATA & 0b11111101;
  5337  0008C6  5089               	movf	3977,w,c	;volatile
  5338  0008C8  0BFD               	andlw	253
  5339  0008CA                     L6:
  5340  0008CA  6E89               	movwf	3977,c	;volatile
  5341                           
  5342                           ;LED.c: 300:         if((diode & 0b0000010000) == 0b0000010000)
  5343  0008CC  A806               	btfss	LED_Control@diode,4,c
  5344  0008CE  D003               	goto	l2345
  5345                           
  5346                           ;LED.c: 301:         {;LED.c: 302:             LATA = LATA | ~0b11110111;
  5347  0008D0  5089               	movf	3977,w,c	;volatile
  5348  0008D2  0908               	iorlw	8
  5349  0008D4  D002               	goto	L7
  5350  0008D6                     l2345:
  5351                           
  5352                           ;LED.c: 305:         {;LED.c: 306:             LATA = LATA & 0b11110111;
  5353  0008D6  5089               	movf	3977,w,c	;volatile
  5354  0008D8  0BF7               	andlw	247
  5355  0008DA                     L7:
  5356  0008DA  6E89               	movwf	3977,c	;volatile
  5357                           
  5358                           ;LED.c: 310:         if((diode & 0b0000100000) == 0b0000100000)
  5359  0008DC  AA06               	btfss	LED_Control@diode,5,c
  5360  0008DE  D003               	goto	l2351
  5361                           
  5362                           ;LED.c: 311:         {;LED.c: 312:             LATA = LATA | ~0b11011111;
  5363  0008E0  5089               	movf	3977,w,c	;volatile
  5364  0008E2  0920               	iorlw	32
  5365  0008E4  D002               	goto	L8
  5366  0008E6                     l2351:
  5367                           
  5368                           ;LED.c: 315:         {;LED.c: 316:             LATA = LATA & 0b11011111;
  5369  0008E6  5089               	movf	3977,w,c	;volatile
  5370  0008E8  0BDF               	andlw	223
  5371  0008EA                     L8:
  5372  0008EA  6E89               	movwf	3977,c	;volatile
  5373                           
  5374                           ;LED.c: 319:         if((diode & 0b0001000000) == 0b0001000000)
  5375  0008EC  AC06               	btfss	LED_Control@diode,6,c
  5376  0008EE  D003               	goto	l2357
  5377                           
  5378                           ;LED.c: 320:         {;LED.c: 321:             LATE = LATE | ~0b11111101;
  5379  0008F0  508D               	movf	3981,w,c	;volatile
  5380  0008F2  0902               	iorlw	2
  5381  0008F4  D002               	goto	L9
  5382  0008F6                     l2357:
  5383                           
  5384                           ;LED.c: 324:         {;LED.c: 325:             LATE = LATE & 0b11111101;
  5385  0008F6  508D               	movf	3981,w,c	;volatile
  5386  0008F8  0BFD               	andlw	253
  5387  0008FA                     L9:
  5388  0008FA  6E8D               	movwf	3981,c	;volatile
  5389                           
  5390                           ;LED.c: 328:         if((diode & 0b0010000000) == 0b0010000000)
  5391  0008FC  AE06               	btfss	LED_Control@diode,7,c
  5392  0008FE  D003               	goto	l2363
  5393                           
  5394                           ;LED.c: 329:         {;LED.c: 330:             LATA = LATA | ~0b01111111;
  5395  000900  5089               	movf	3977,w,c	;volatile
  5396  000902  0980               	iorlw	128
  5397  000904  D002               	goto	L10
  5398  000906                     l2363:
  5399                           
  5400                           ;LED.c: 333:         {;LED.c: 334:             LATA = LATA & 0b01111111;
  5401  000906  5089               	movf	3977,w,c	;volatile
  5402  000908  0B7F               	andlw	127
  5403  00090A                     L10:
  5404  00090A  6E89               	movwf	3977,c	;volatile
  5405                           
  5406                           ;LED.c: 338:         if((diode & 0b0100000000) == 0b0100000000)
  5407  00090C  A007               	btfss	LED_Control@diode+1,0,c
  5408  00090E  D003               	goto	l2369
  5409                           
  5410                           ;LED.c: 339:         {;LED.c: 340:             LATD = LATD | ~0b11111110;
  5411  000910  508C               	movf	3980,w,c	;volatile
  5412  000912  0901               	iorlw	1
  5413  000914  D002               	goto	L11
  5414  000916                     l2369:
  5415                           
  5416                           ;LED.c: 343:         {;LED.c: 344:             LATD = LATD & 0b11111110;
  5417  000916  508C               	movf	3980,w,c	;volatile
  5418  000918  0BFE               	andlw	254
  5419  00091A                     L11:
  5420  00091A  6E8C               	movwf	3980,c	;volatile
  5421                           
  5422                           ;LED.c: 347:         if((diode & 0b1000000000) == 0b1000000000)
  5423  00091C  A207               	btfss	LED_Control@diode+1,1,c
  5424  00091E  D003               	goto	l2375
  5425                           
  5426                           ;LED.c: 348:         {;LED.c: 349:             LATD = LATD | ~0b11111011;
  5427  000920  508C               	movf	3980,w,c	;volatile
  5428  000922  0904               	iorlw	4
  5429  000924  D002               	goto	L12
  5430  000926                     l2375:
  5431                           
  5432                           ;LED.c: 352:         {;LED.c: 353:             LATD = LATD & 0b11111011;
  5433  000926  508C               	movf	3980,w,c	;volatile
  5434  000928  0BFB               	andlw	251
  5435  00092A                     L12:
  5436  00092A  6E8C               	movwf	3980,c	;volatile
  5437  00092C                     l321:
  5438                           
  5439                           ;LED.c: 358:     if(color == GREEN)
  5440  00092C  040A               	decf	LED_Control@color,w,c
  5441  00092E  A4D8               	btfss	status,2,c
  5442  000930  0012               	return	
  5443                           
  5444                           ;LED.c: 359:     {;LED.c: 361:         if((diode & 0b0000000001) == 0b0000000001)
  5445  000932  A006               	btfss	LED_Control@diode,0,c
  5446  000934  D003               	goto	l2381
  5447                           
  5448                           ;LED.c: 362:         {;LED.c: 363:             LATD = LATD | ~0b11011111;
  5449  000936  508C               	movf	3980,w,c	;volatile
  5450  000938  0920               	iorlw	32
  5451  00093A  D002               	goto	L13
  5452  00093C                     l2381:
  5453                           
  5454                           ;LED.c: 366:         {;LED.c: 367:             LATD = LATD & 0b11011111;
  5455  00093C  508C               	movf	3980,w,c	;volatile
  5456  00093E  0BDF               	andlw	223
  5457  000940                     L13:
  5458  000940  6E8C               	movwf	3980,c	;volatile
  5459                           
  5460                           ;LED.c: 371:         if((diode & 0b0000000010) == 0b0000000010)
  5461  000942  A206               	btfss	LED_Control@diode,1,c
  5462  000944  D003               	goto	l2387
  5463                           
  5464                           ;LED.c: 372:         {;LED.c: 373:             LATD = LATD | ~0b01111111;
  5465  000946  508C               	movf	3980,w,c	;volatile
  5466  000948  0980               	iorlw	128
  5467  00094A  D002               	goto	L14
  5468  00094C                     l2387:
  5469                           
  5470                           ;LED.c: 376:         {;LED.c: 377:             LATD = LATD & 0b01111111;
  5471  00094C  508C               	movf	3980,w,c	;volatile
  5472  00094E  0B7F               	andlw	127
  5473  000950                     L14:
  5474  000950  6E8C               	movwf	3980,c	;volatile
  5475                           
  5476                           ;LED.c: 381:         if((diode & 0b0000000100) == 0b0000000100)
  5477  000952  A406               	btfss	LED_Control@diode,2,c
  5478  000954  D003               	goto	l2393
  5479                           
  5480                           ;LED.c: 382:         {;LED.c: 383:             LATB = LATB | ~0b11111101;
  5481  000956  508A               	movf	3978,w,c	;volatile
  5482  000958  0902               	iorlw	2
  5483  00095A  D002               	goto	L15
  5484  00095C                     l2393:
  5485                           
  5486                           ;LED.c: 386:         {;LED.c: 387:             LATB = LATB & 0b11111101;
  5487  00095C  508A               	movf	3978,w,c	;volatile
  5488  00095E  0BFD               	andlw	253
  5489  000960                     L15:
  5490  000960  6E8A               	movwf	3978,c	;volatile
  5491                           
  5492                           ;LED.c: 390:         if((diode & 0b0000001000) == 0b0000001000)
  5493  000962  A606               	btfss	LED_Control@diode,3,c
  5494  000964  D003               	goto	l2399
  5495                           
  5496                           ;LED.c: 391:         {;LED.c: 392:             LATA = LATA | ~0b11111011;
  5497  000966  5089               	movf	3977,w,c	;volatile
  5498  000968  0904               	iorlw	4
  5499  00096A  D002               	goto	L16
  5500  00096C                     l2399:
  5501                           
  5502                           ;LED.c: 395:         {;LED.c: 396:             LATA = LATA & 0b11111011;
  5503  00096C  5089               	movf	3977,w,c	;volatile
  5504  00096E  0BFB               	andlw	251
  5505  000970                     L16:
  5506  000970  6E89               	movwf	3977,c	;volatile
  5507                           
  5508                           ;LED.c: 400:         if((diode & 0b0000010000) == 0b0000010000)
  5509  000972  A806               	btfss	LED_Control@diode,4,c
  5510  000974  D003               	goto	l2405
  5511                           
  5512                           ;LED.c: 401:         {;LED.c: 402:             LATA = LATA | ~0b11101111;
  5513  000976  5089               	movf	3977,w,c	;volatile
  5514  000978  0910               	iorlw	16
  5515  00097A  D002               	goto	L17
  5516  00097C                     l2405:
  5517                           
  5518                           ;LED.c: 405:         {;LED.c: 406:             LATA = LATA & 0b11101111;
  5519  00097C  5089               	movf	3977,w,c	;volatile
  5520  00097E  0BEF               	andlw	239
  5521  000980                     L17:
  5522  000980  6E89               	movwf	3977,c	;volatile
  5523                           
  5524                           ;LED.c: 410:         if((diode & 0b0000100000) == 0b0000100000)
  5525  000982  AA06               	btfss	LED_Control@diode,5,c
  5526  000984  D003               	goto	l2411
  5527                           
  5528                           ;LED.c: 411:         {;LED.c: 412:             LATE = LATE | ~0b11111110;
  5529  000986  508D               	movf	3981,w,c	;volatile
  5530  000988  0901               	iorlw	1
  5531  00098A  D002               	goto	L18
  5532  00098C                     l2411:
  5533                           
  5534                           ;LED.c: 415:         {;LED.c: 416:             LATE = LATE & 0b11111110;
  5535  00098C  508D               	movf	3981,w,c	;volatile
  5536  00098E  0BFE               	andlw	254
  5537  000990                     L18:
  5538  000990  6E8D               	movwf	3981,c	;volatile
  5539                           
  5540                           ;LED.c: 420:         if((diode & 0b0001000000) == 0b0001000000)
  5541  000992  AC06               	btfss	LED_Control@diode,6,c
  5542  000994  D003               	goto	l2417
  5543                           
  5544                           ;LED.c: 421:         {;LED.c: 422:             LATE = LATE | ~0b11111011;
  5545  000996  508D               	movf	3981,w,c	;volatile
  5546  000998  0904               	iorlw	4
  5547  00099A  D002               	goto	L19
  5548  00099C                     l2417:
  5549                           
  5550                           ;LED.c: 425:         {;LED.c: 426:             LATE = LATE & 0b11111011;
  5551  00099C  508D               	movf	3981,w,c	;volatile
  5552  00099E  0BFB               	andlw	251
  5553  0009A0                     L19:
  5554  0009A0  6E8D               	movwf	3981,c	;volatile
  5555                           
  5556                           ;LED.c: 429:         if((diode & 0b0010000000) == 0b0010000000)
  5557  0009A2  AE06               	btfss	LED_Control@diode,7,c
  5558  0009A4  D003               	goto	l2423
  5559                           
  5560                           ;LED.c: 430:         {;LED.c: 431:             LATA = LATA | ~0b10111111;
  5561  0009A6  5089               	movf	3977,w,c	;volatile
  5562  0009A8  0940               	iorlw	64
  5563  0009AA  D002               	goto	L20
  5564  0009AC                     l2423:
  5565                           
  5566                           ;LED.c: 434:         {;LED.c: 435:             LATA = LATA & 0b10111111;
  5567  0009AC  5089               	movf	3977,w,c	;volatile
  5568  0009AE  0BBF               	andlw	191
  5569  0009B0                     L20:
  5570  0009B0  6E89               	movwf	3977,c	;volatile
  5571                           
  5572                           ;LED.c: 438:         if((diode & 0b0100000000) == 0b0100000000)
  5573  0009B2  A007               	btfss	LED_Control@diode+1,0,c
  5574  0009B4  D003               	goto	l2429
  5575                           
  5576                           ;LED.c: 439:         {;LED.c: 440:             LATD = LATD | ~0b11111101;
  5577  0009B6  508C               	movf	3980,w,c	;volatile
  5578  0009B8  0902               	iorlw	2
  5579  0009BA  D002               	goto	L21
  5580  0009BC                     l2429:
  5581                           
  5582                           ;LED.c: 443:         {;LED.c: 444:             LATD = LATD & 0b11111101;
  5583  0009BC  508C               	movf	3980,w,c	;volatile
  5584  0009BE  0BFD               	andlw	253
  5585  0009C0                     L21:
  5586  0009C0  6E8C               	movwf	3980,c	;volatile
  5587                           
  5588                           ;LED.c: 447:         if((diode & 0b1000000000) == 0b1000000000)
  5589  0009C2  A207               	btfss	LED_Control@diode+1,1,c
  5590  0009C4  D004               	goto	l2435
  5591                           
  5592                           ;LED.c: 448:         {;LED.c: 449:             LATD = LATD | ~0b11110111;
  5593  0009C6  508C               	movf	3980,w,c	;volatile
  5594  0009C8  0908               	iorlw	8
  5595  0009CA  6E8C               	movwf	3980,c	;volatile
  5596                           
  5597                           ;LED.c: 450:         }
  5598  0009CC  0012               	return	
  5599  0009CE                     l2435:
  5600                           
  5601                           ;LED.c: 452:         {;LED.c: 453:             LATD = LATD &0b11110111;
  5602  0009CE  508C               	movf	3980,w,c	;volatile
  5603  0009D0  0BF7               	andlw	247
  5604  0009D2  6E8C               	movwf	3980,c	;volatile
  5605  0009D4  0012               	return		;funcret
  5606  0009D6                     __end_of_LED_Control:
  5607                           	opt callstack 0
  5608                           
  5609 ;; *************** function _INI_GlobalInterrupt *****************
  5610 ;; Defined at:
  5611 ;;		line 74 in file "INI.c"
  5612 ;; Parameters:    Size  Location     Type
  5613 ;;		None
  5614 ;; Auto vars:     Size  Location     Type
  5615 ;;		None
  5616 ;; Return value:  Size  Location     Type
  5617 ;;                  1    wreg      void 
  5618 ;; Registers used:
  5619 ;;		None
  5620 ;; Tracked objects:
  5621 ;;		On entry : 0/0
  5622 ;;		On exit  : 0/0
  5623 ;;		Unchanged: 0/0
  5624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5629 ;;Total ram usage:        0 bytes
  5630 ;; Hardware stack levels used:    1
  5631 ;; Hardware stack levels required when called:    3
  5632 ;; This function calls:
  5633 ;;		Nothing
  5634 ;; This function is called by:
  5635 ;;		_INI_All
  5636 ;; This function uses a non-reentrant model
  5637 ;;
  5638                           
  5639                           	psect	text45
  5640  00145E                     __ptext45:
  5641                           	opt callstack 0
  5642  00145E                     _INI_GlobalInterrupt:
  5643                           	opt callstack 26
  5644                           
  5645                           ;INI.c: 76: INTCONbits.GIEH=1;
  5646                           
  5647                           ;incstack = 0
  5648  00145E  8EF2               	bsf	4082,7,c	;volatile
  5649                           
  5650                           ;INI.c: 77: INTCONbits.GIEL=1;
  5651  001460  8CF2               	bsf	4082,6,c	;volatile
  5652                           
  5653                           ;INI.c: 78: RCONbits.IPEN=1;
  5654  001462  8ED0               	bsf	4048,7,c	;volatile
  5655                           
  5656                           ;INI.c: 79: IPEN =1;
  5657  001464  8ED0               	bsf	4048,7,c	;volatile
  5658                           
  5659                           ;INI.c: 81: PEIE=1;
  5660  001466  8CF2               	bsf	4082,6,c	;volatile
  5661                           
  5662                           ;INI.c: 82: TMR1IP = 0;
  5663  001468  909F               	bcf	3999,0,c	;volatile
  5664  00146A  0012               	return		;funcret
  5665  00146C                     __end_of_INI_GlobalInterrupt:
  5666                           	opt callstack 0
  5667                           
  5668 ;; *************** function _CAN_Setup *****************
  5669 ;; Defined at:
  5670 ;;		line 23 in file "CAN.c"
  5671 ;; Parameters:    Size  Location     Type
  5672 ;;		None
  5673 ;; Auto vars:     Size  Location     Type
  5674 ;;		None
  5675 ;; Return value:  Size  Location     Type
  5676 ;;                  1    wreg      void 
  5677 ;; Registers used:
  5678 ;;		wreg, status,2, status,0, cstack
  5679 ;; Tracked objects:
  5680 ;;		On entry : 0/0
  5681 ;;		On exit  : 0/0
  5682 ;;		Unchanged: 0/0
  5683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5686 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5687 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5688 ;;Total ram usage:        1 bytes
  5689 ;; Hardware stack levels used:    1
  5690 ;; Hardware stack levels required when called:    4
  5691 ;; This function calls:
  5692 ;;		_CAN_SetupClock
  5693 ;;		_CAN_SetupMask
  5694 ;; This function is called by:
  5695 ;;		_INI_All
  5696 ;; This function uses a non-reentrant model
  5697 ;;
  5698                           
  5699                           	psect	text46
  5700  000F8E                     __ptext46:
  5701                           	opt callstack 0
  5702  000F8E                     _CAN_Setup:
  5703                           	opt callstack 25
  5704                           
  5705                           ;CAN.c: 28:     CANCON = 0x80;
  5706                           
  5707                           ;incstack = 0
  5708  000F8E  0E80               	movlw	128
  5709  000F90  6E6F               	movwf	3951,c	;volatile
  5710  000F92                     l2845:
  5711                           
  5712                           ;CAN.c: 29:     while((CANSTAT & 0xE0)!=0x80)
  5713  000F92  506E               	movf	3950,w,c	;volatile
  5714  000F94  0BE0               	andlw	224
  5715  000F96  0A80               	xorlw	128
  5716  000F98  A4D8               	btfss	status,2,c
  5717  000F9A  D7FB               	goto	l2845
  5718                           
  5719                           ;CAN.c: 34:     BSEL0 = 0;
  5720  000F9C  0E00               	movlw	0
  5721  000F9E  010D               	movlb	13	; () banked
  5722  000FA0  6FF8               	movwf	248,b	;volatile
  5723                           
  5724                           ;CAN.c: 35:     TXB0CON = 0;
  5725  000FA2  0E00               	movlw	0
  5726  000FA4  010F               	movlb	15	; () banked
  5727  000FA6  6F40               	movwf	64,b	;volatile
  5728                           
  5729                           ;CAN.c: 36:     RXB0CON = 0;
  5730  000FA8  0E00               	movlw	0
  5731  000FAA  6E60               	movwf	3936,c	;volatile
  5732                           
  5733                           ;CAN.c: 37:     RXB1CON = 0;
  5734  000FAC  0E00               	movlw	0
  5735  000FAE  6F50               	movwf	80,b	;volatile
  5736                           
  5737                           ;CAN.c: 38:     B0CON = 0;
  5738  000FB0  0E00               	movlw	0
  5739  000FB2  010E               	movlb	14	; () banked
  5740  000FB4  6F20               	movwf	32,b	;volatile
  5741                           
  5742                           ;CAN.c: 39:     B1CON = 0;
  5743  000FB6  0E00               	movlw	0
  5744  000FB8  6F30               	movwf	48,b	;volatile
  5745                           
  5746                           ;CAN.c: 40:     PIE3 = 0;
  5747  000FBA  0E00               	movlw	0
  5748  000FBC  6EA3               	movwf	4003,c	;volatile
  5749                           
  5750                           ; BSR set to: 14
  5751                           ;CAN.c: 41:     IPR3 = 0xFF;
  5752  000FBE  68A5               	setf	4005,c	;volatile
  5753                           
  5754                           ;CAN.c: 42:     PIR3 = 0x00;
  5755  000FC0  0E00               	movlw	0
  5756  000FC2  6EA4               	movwf	4004,c	;volatile
  5757                           
  5758                           ;CAN.c: 43:     BIE0 = 0;
  5759  000FC4  0E00               	movlw	0
  5760  000FC6  010D               	movlb	13	; () banked
  5761  000FC8  6FFA               	movwf	250,b	;volatile
  5762                           
  5763                           ;CAN.c: 46:     ECANCON = 0x90;
  5764  000FCA  0E90               	movlw	144
  5765  000FCC  6E77               	movwf	3959,c	;volatile
  5766                           
  5767                           ; BSR set to: 13
  5768                           ;CAN.c: 49:     CAN_SetupClock();
  5769  000FCE  ECBC  F009         	call	_CAN_SetupClock	;wreg free
  5770                           
  5771                           ;CAN.c: 52:     CAN_SetupMask();
  5772  000FD2  EC94  F006         	call	_CAN_SetupMask	;wreg free
  5773                           
  5774                           ;CAN.c: 54:     CIOCON = 0xff;
  5775  000FD6  6873               	setf	3955,c	;volatile
  5776                           
  5777                           ;CAN.c: 60:     CANCON = 0x00;
  5778  000FD8  0E00               	movlw	0
  5779  000FDA  6E6F               	movwf	3951,c	;volatile
  5780  000FDC                     l2859:
  5781                           
  5782                           ;CAN.c: 61:     while((CANSTAT & 0xE0) != 0x00)
  5783  000FDC  CF6E F006          	movff	3950,??_CAN_Setup	;volatile
  5784  000FE0  0EE0               	movlw	224
  5785  000FE2  1606               	andwf	??_CAN_Setup,f,c
  5786  000FE4  B4D8               	btfsc	status,2,c
  5787  000FE6  0012               	return	
  5788  000FE8  D7F9               	goto	l2859
  5789  000FEA                     __end_of_CAN_Setup:
  5790                           	opt callstack 0
  5791                           
  5792 ;; *************** function _CAN_SetupMask *****************
  5793 ;; Defined at:
  5794 ;;		line 82 in file "CAN.c"
  5795 ;; Parameters:    Size  Location     Type
  5796 ;;		None
  5797 ;; Auto vars:     Size  Location     Type
  5798 ;;		None
  5799 ;; Return value:  Size  Location     Type
  5800 ;;                  1    wreg      void 
  5801 ;; Registers used:
  5802 ;;		wreg, status,2, status,0
  5803 ;; Tracked objects:
  5804 ;;		On entry : 0/0
  5805 ;;		On exit  : 0/0
  5806 ;;		Unchanged: 0/0
  5807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5812 ;;Total ram usage:        0 bytes
  5813 ;; Hardware stack levels used:    1
  5814 ;; Hardware stack levels required when called:    3
  5815 ;; This function calls:
  5816 ;;		Nothing
  5817 ;; This function is called by:
  5818 ;;		_CAN_Setup
  5819 ;; This function uses a non-reentrant model
  5820 ;;
  5821                           
  5822                           	psect	text47
  5823  000D28                     __ptext47:
  5824                           	opt callstack 0
  5825  000D28                     _CAN_SetupMask:
  5826                           	opt callstack 25
  5827                           
  5828                           ;CAN.c: 84:     MSEL0 = 0x50;
  5829                           
  5830                           ;incstack = 0
  5831  000D28  0E50               	movlw	80
  5832  000D2A  010D               	movlb	13	; () banked
  5833  000D2C  6FF0               	movwf	240,b	;volatile
  5834                           
  5835                           ;CAN.c: 85:     MSEL1 = 0x55;
  5836  000D2E  0E55               	movlw	85
  5837  000D30  6FF1               	movwf	241,b	;volatile
  5838                           
  5839                           ;CAN.c: 86:     MSEL2 = 0x55;
  5840  000D32  0E55               	movlw	85
  5841  000D34  6FF2               	movwf	242,b	;volatile
  5842                           
  5843                           ;CAN.c: 87:     MSEL3 = 0x55;
  5844  000D36  0E55               	movlw	85
  5845  000D38  6FF3               	movwf	243,b	;volatile
  5846                           
  5847                           ;CAN.c: 90:     RXM0SIDH = 0b00000000;
  5848  000D3A  0E00               	movlw	0
  5849  000D3C  010F               	movlb	15	; () banked
  5850  000D3E  6F18               	movwf	24,b	;volatile
  5851                           
  5852                           ;CAN.c: 91:     RXM0SIDL = 0b00001011;
  5853  000D40  0E0B               	movlw	11
  5854  000D42  6F19               	movwf	25,b	;volatile
  5855                           
  5856                           ; BSR set to: 15
  5857                           ;CAN.c: 92:     RXM0EIDH = 0xFF;
  5858  000D44  691A               	setf	26,b	;volatile
  5859                           
  5860                           ; BSR set to: 15
  5861                           ;CAN.c: 93:     RXM0EIDL = 0xFF;
  5862  000D46  691B               	setf	27,b	;volatile
  5863                           
  5864                           ; BSR set to: 15
  5865                           ;CAN.c: 96:     RXM1SIDH = 0xFF;
  5866  000D48  691C               	setf	28,b	;volatile
  5867                           
  5868                           ; BSR set to: 15
  5869                           ;CAN.c: 97:     RXM1SIDL = 0xFF;
  5870  000D4A  691D               	setf	29,b	;volatile
  5871                           
  5872                           ;CAN.c: 98:     RXM1EIDH = 0;
  5873  000D4C  0E00               	movlw	0
  5874  000D4E  6F1E               	movwf	30,b	;volatile
  5875                           
  5876                           ;CAN.c: 99:     RXM1EIDL = 0;
  5877  000D50  0E00               	movlw	0
  5878  000D52  6F1F               	movwf	31,b	;volatile
  5879                           
  5880                           ;CAN.c: 102:     RXM0SIDH = 0x00;
  5881  000D54  0E00               	movlw	0
  5882  000D56  6F18               	movwf	24,b	;volatile
  5883                           
  5884                           ;CAN.c: 103:     RXM0SIDL = 0x00;
  5885  000D58  0E00               	movlw	0
  5886  000D5A  6F19               	movwf	25,b	;volatile
  5887                           
  5888                           ;CAN.c: 104:     RXM0EIDH = 0;
  5889  000D5C  0E00               	movlw	0
  5890  000D5E  6F1A               	movwf	26,b	;volatile
  5891                           
  5892                           ;CAN.c: 105:     RXM0EIDL = 0;
  5893  000D60  0E00               	movlw	0
  5894  000D62  6F1B               	movwf	27,b	;volatile
  5895                           
  5896                           ;CAN.c: 108:     RXF0SIDH = 0x00;
  5897  000D64  0E00               	movlw	0
  5898  000D66  6F00               	movwf	0,b	;volatile
  5899                           
  5900                           ;CAN.c: 109:     RXF0SIDL = 0x01;
  5901  000D68  0E01               	movlw	1
  5902  000D6A  6F01               	movwf	1,b	;volatile
  5903                           
  5904                           ; BSR set to: 15
  5905                           ;CAN.c: 110:     RXF0SIDLbits.EXIDEN = 1;
  5906  000D6C  8701               	bsf	1,3,b	;volatile
  5907                           
  5908                           ;CAN.c: 111:     RXF0EIDH = (BYTE)(DaneCan.adresCAN>>8);
  5909  000D6E  5043               	movf	_DaneCan+3,w,c
  5910  000D70  6F02               	movwf	2,b	;volatile
  5911                           
  5912                           ; BSR set to: 15
  5913                           ;CAN.c: 112:  RXF0EIDH |= 0x40;
  5914  000D72  8D02               	bsf	2,6,b	;volatile
  5915                           
  5916                           ; BSR set to: 15
  5917                           ;CAN.c: 113:     RXF0EIDL = (BYTE)DaneCan.adresCAN;
  5918  000D74  C042  FF03         	movff	_DaneCan+2,3843	;volatile
  5919                           
  5920                           ; BSR set to: 15
  5921                           ;CAN.c: 115:     RXF1SIDH = 0x00;
  5922  000D78  0E00               	movlw	0
  5923  000D7A  6F04               	movwf	4,b	;volatile
  5924                           
  5925                           ; BSR set to: 15
  5926                           ;CAN.c: 116:     RXF1SIDL = 0x01;
  5927  000D7C  0E01               	movlw	1
  5928  000D7E  6F05               	movwf	5,b	;volatile
  5929                           
  5930                           ; BSR set to: 15
  5931                           ;CAN.c: 117:     RXF1SIDLbits.EXIDEN = 1;
  5932  000D80  8705               	bsf	5,3,b	;volatile
  5933                           
  5934                           ; BSR set to: 15
  5935                           ;CAN.c: 118:     RXF1EIDH = 0x7F;
  5936  000D82  0E7F               	movlw	127
  5937  000D84  6F06               	movwf	6,b	;volatile
  5938                           
  5939                           ; BSR set to: 15
  5940                           ;CAN.c: 119:     RXF1EIDL = 0xFF;
  5941  000D86  6907               	setf	7,b	;volatile
  5942                           
  5943                           ; BSR set to: 15
  5944                           ;CAN.c: 122:     RXF2SIDH = 0;
  5945  000D88  0E00               	movlw	0
  5946  000D8A  6F08               	movwf	8,b	;volatile
  5947                           
  5948                           ; BSR set to: 15
  5949                           ;CAN.c: 123:     RXF2SIDL = 0x20;
  5950  000D8C  0E20               	movlw	32
  5951  000D8E  6F09               	movwf	9,b	;volatile
  5952                           
  5953                           ; BSR set to: 15
  5954                           ;CAN.c: 124:     RXF2SIDLbits.EXIDEN = 1;
  5955  000D90  8709               	bsf	9,3,b	;volatile
  5956                           
  5957                           ; BSR set to: 15
  5958                           ;CAN.c: 125:     RXF2EIDH = 0;
  5959  000D92  0E00               	movlw	0
  5960  000D94  6F0A               	movwf	10,b	;volatile
  5961                           
  5962                           ; BSR set to: 15
  5963                           ;CAN.c: 126:     RXF2EIDL = 0;
  5964  000D96  0E00               	movlw	0
  5965  000D98  6F0B               	movwf	11,b	;volatile
  5966                           
  5967                           ; BSR set to: 15
  5968                           ;CAN.c: 129:     RXF3SIDH = 0x00;
  5969  000D9A  0E00               	movlw	0
  5970  000D9C  6F0C               	movwf	12,b	;volatile
  5971                           
  5972                           ; BSR set to: 15
  5973                           ;CAN.c: 130:     RXF3SIDL = 0x00;
  5974  000D9E  0E00               	movlw	0
  5975  000DA0  6F0D               	movwf	13,b	;volatile
  5976                           
  5977                           ; BSR set to: 15
  5978                           ;CAN.c: 131:     RXF3EIDH = 0x00;
  5979  000DA2  0E00               	movlw	0
  5980  000DA4  6F0E               	movwf	14,b	;volatile
  5981                           
  5982                           ; BSR set to: 15
  5983                           ;CAN.c: 132:  RXF3EIDH |= 0x00;
  5984  000DA6  510E               	movf	14,w,b	;volatile
  5985                           
  5986                           ; BSR set to: 15
  5987                           ;CAN.c: 133:     RXF3EIDL = 0x00;
  5988  000DA8  0E00               	movlw	0
  5989  000DAA  6F0F               	movwf	15,b	;volatile
  5990                           
  5991                           ; BSR set to: 15
  5992                           ;CAN.c: 140:     RXFCON0 = 0x0F;
  5993  000DAC  0E0F               	movlw	15
  5994  000DAE  010D               	movlb	13	; () banked
  5995  000DB0  6FD4               	movwf	212,b	;volatile
  5996                           
  5997                           ; BSR set to: 13
  5998  000DB2  0012               	return		;funcret
  5999  000DB4                     __end_of_CAN_SetupMask:
  6000                           	opt callstack 0
  6001                           
  6002 ;; *************** function _CAN_SetupClock *****************
  6003 ;; Defined at:
  6004 ;;		line 149 in file "CAN.c"
  6005 ;; Parameters:    Size  Location     Type
  6006 ;;		None
  6007 ;; Auto vars:     Size  Location     Type
  6008 ;;		None
  6009 ;; Return value:  Size  Location     Type
  6010 ;;                  1    wreg      void 
  6011 ;; Registers used:
  6012 ;;		None
  6013 ;; Tracked objects:
  6014 ;;		On entry : 0/0
  6015 ;;		On exit  : 0/0
  6016 ;;		Unchanged: 0/0
  6017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6021 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6022 ;;Total ram usage:        0 bytes
  6023 ;; Hardware stack levels used:    1
  6024 ;; Hardware stack levels required when called:    3
  6025 ;; This function calls:
  6026 ;;		Nothing
  6027 ;; This function is called by:
  6028 ;;		_CAN_Setup
  6029 ;; This function uses a non-reentrant model
  6030 ;;
  6031                           
  6032                           	psect	text48
  6033  001378                     __ptext48:
  6034                           	opt callstack 0
  6035  001378                     _CAN_SetupClock:
  6036                           	opt callstack 25
  6037                           
  6038                           ;CAN.c: 151:     BRGCON1bits.BRP0 = (((32000000/4)/(2*20*50000))-1) & 0b000001;
  6039                           
  6040                           ; BSR set to: 13
  6041                           ;incstack = 0
  6042  001378  8070               	bsf	3952,0,c	;volatile
  6043                           
  6044                           ;CAN.c: 152:     BRGCON1bits.BRP1 = ((((32000000/4)/(2*20*50000))-1) >> 1) & 0b000001;
  6045  00137A  8270               	bsf	3952,1,c	;volatile
  6046                           
  6047                           ;CAN.c: 153:     BRGCON1bits.BRP2 = ((((32000000/4)/(2*20*50000))-1) >> 2) & 0b000001;
  6048  00137C  9470               	bcf	3952,2,c	;volatile
  6049                           
  6050                           ;CAN.c: 154:     BRGCON1bits.BRP3 = ((((32000000/4)/(2*20*50000))-1) >> 3) & 0b000001;
  6051  00137E  9670               	bcf	3952,3,c	;volatile
  6052                           
  6053                           ;CAN.c: 155:     BRGCON1bits.BRP4 = ((((32000000/4)/(2*20*50000))-1) >> 4) & 0b000001;
  6054  001380  9870               	bcf	3952,4,c	;volatile
  6055                           
  6056                           ;CAN.c: 156:     BRGCON1bits.BRP5 = ((((32000000/4)/(2*20*50000))-1) >> 5) & 0b000001;
  6057  001382  9A70               	bcf	3952,5,c	;volatile
  6058                           
  6059                           ;CAN.c: 158:     BRGCON1bits.SJW0 = 1;
  6060  001384  8C70               	bsf	3952,6,c	;volatile
  6061                           
  6062                           ;CAN.c: 159:     BRGCON1bits.SJW1 = 1;
  6063  001386  8E70               	bsf	3952,7,c	;volatile
  6064                           
  6065                           ;CAN.c: 161:     BRGCON2bits.SEG1PH0 = 1;
  6066  001388  8671               	bsf	3953,3,c	;volatile
  6067                           
  6068                           ;CAN.c: 162:     BRGCON2bits.SEG1PH1 = 1;
  6069  00138A  8871               	bsf	3953,4,c	;volatile
  6070                           
  6071                           ;CAN.c: 163:     BRGCON2bits.SEG1PH2 = 1;
  6072  00138C  8A71               	bsf	3953,5,c	;volatile
  6073                           
  6074                           ;CAN.c: 165:     BRGCON2bits.PRSEG2 = 1;
  6075  00138E  8471               	bsf	3953,2,c	;volatile
  6076                           
  6077                           ;CAN.c: 166:     BRGCON2bits.PRSEG1 = 0;
  6078  001390  9271               	bcf	3953,1,c	;volatile
  6079                           
  6080                           ;CAN.c: 167:     BRGCON2bits.PRSEG0 = 0;
  6081  001392  9071               	bcf	3953,0,c	;volatile
  6082                           
  6083                           ;CAN.c: 169:     BRGCON3bits.SEG2PH0 = 1;
  6084  001394  8072               	bsf	3954,0,c	;volatile
  6085                           
  6086                           ;CAN.c: 170:     BRGCON3bits.SEG2PH1 = 0;
  6087  001396  9272               	bcf	3954,1,c	;volatile
  6088                           
  6089                           ;CAN.c: 171:     BRGCON3bits.SEG2PH2 = 1;
  6090  001398  8472               	bsf	3954,2,c	;volatile
  6091                           
  6092                           ;CAN.c: 173:     BRGCON2bits.SAM = 1;
  6093  00139A  8C71               	bsf	3953,6,c	;volatile
  6094                           
  6095                           ;CAN.c: 174:     BRGCON2bits.SEG2PHTS = 1;
  6096  00139C  8E71               	bsf	3953,7,c	;volatile
  6097  00139E  0012               	return		;funcret
  6098  0013A0                     __end_of_CAN_SetupClock:
  6099                           	opt callstack 0
  6100                           
  6101 ;; *************** function _ISR_low *****************
  6102 ;; Defined at:
  6103 ;;		line 16 in file "ISR.c"
  6104 ;; Parameters:    Size  Location     Type
  6105 ;;		None
  6106 ;; Auto vars:     Size  Location     Type
  6107 ;;		None
  6108 ;; Return value:  Size  Location     Type
  6109 ;;                  1    wreg      void 
  6110 ;; Registers used:
  6111 ;;		wreg, status,2, status,0, cstack
  6112 ;; Tracked objects:
  6113 ;;		On entry : 0/0
  6114 ;;		On exit  : 0/0
  6115 ;;		Unchanged: 0/0
  6116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6119 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6120 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6121 ;;Total ram usage:        3 bytes
  6122 ;; Hardware stack levels used:    1
  6123 ;; Hardware stack levels required when called:    2
  6124 ;; This function calls:
  6125 ;;		_TMR1_Timer_reset
  6126 ;;		i1_TMR1_Update_flag_Set
  6127 ;; This function is called by:
  6128 ;;		Interrupt level 1
  6129 ;; This function uses a non-reentrant model
  6130 ;;
  6131                           
  6132                           	psect	intcodelo
  6133  000018                     __pintcodelo:
  6134                           	opt callstack 0
  6135  000018                     _ISR_low:
  6136                           	opt callstack 23
  6137                           
  6138                           ;incstack = 0
  6139  000018  8059               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  6140  00001A  CFD8 F003          	movff	status,??_ISR_low
  6141  00001E  CFE8 F004          	movff	wreg,??_ISR_low+1
  6142  000022  CFE0 F005          	movff	bsr,??_ISR_low+2
  6143                           
  6144                           ;ISR.c: 21:     if(TMR1IF==1)
  6145  000026  A09E               	btfss	3998,0,c	;volatile
  6146  000028  D011               	goto	i1l611
  6147                           
  6148                           ;ISR.c: 22:         {;ISR.c: 23:             TMR1_Timer_reset();
  6149  00002A  ECD0  F009         	call	_TMR1_Timer_reset	;wreg free
  6150                           
  6151                           ;ISR.c: 26:             static BYTE ramkaStanuU8=0;;ISR.c: 29:             TMR1_Update_f
      +                          lag_Set(1);
  6152  00002E  0E00               	movlw	0
  6153  000030  6E02               	movwf	i1TMR1_Update_flag_Set@a+1,c
  6154  000032  0E01               	movlw	1
  6155  000034  6E01               	movwf	i1TMR1_Update_flag_Set@a,c
  6156  000036  EC5E  F00A         	call	i1_TMR1_Update_flag_Set	;wreg free
  6157                           
  6158                           ;ISR.c: 31:             DetectorLedRadar.Flags.obsluzWeWy = 1;
  6159  00003A  8044               	bsf	_DetectorLedRadar,0,c
  6160                           
  6161                           ;ISR.c: 33:             if(++ramkaStanuU8 > (2*10))
  6162  00003C  2A4D               	incf	ISR_low@ramkaStanuU8,f,c
  6163  00003E  0E14               	movlw	20
  6164  000040  644D               	cpfsgt	ISR_low@ramkaStanuU8,c
  6165  000042  D003               	goto	i1l3149
  6166                           
  6167                           ;ISR.c: 34:                 {;ISR.c: 35:                     ramkaStanuU8 = 0;
  6168  000044  0E00               	movlw	0
  6169  000046  6E4D               	movwf	ISR_low@ramkaStanuU8,c
  6170                           
  6171                           ;ISR.c: 36:                     DaneCan.Flags.wyslijRamkeStanu = 1;
  6172  000048  8040               	bsf	_DaneCan,0,c
  6173  00004A                     i1l3149:
  6174                           
  6175                           ;ISR.c: 41:             TMR1IF=0;
  6176  00004A  909E               	bcf	3998,0,c	;volatile
  6177  00004C                     i1l611:
  6178  00004C  C005  FFE0         	movff	??_ISR_low+2,bsr
  6179  000050  C004  FFE8         	movff	??_ISR_low+1,wreg
  6180  000054  C003  FFD8         	movff	??_ISR_low,status
  6181  000058  9059               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  6182  00005A  0010               	retfie	
  6183  00005C                     __end_of_ISR_low:
  6184                           	opt callstack 0
  6185                           
  6186 ;; *************** function i1_TMR1_Update_flag_Set *****************
  6187 ;; Defined at:
  6188 ;;		line 32 in file "TMR1.c"
  6189 ;; Parameters:    Size  Location     Type
  6190 ;;  a               2    0[COMRAM] unsigned int 
  6191 ;; Auto vars:     Size  Location     Type
  6192 ;;		None
  6193 ;; Return value:  Size  Location     Type
  6194 ;;                  1    wreg      void 
  6195 ;; Registers used:
  6196 ;;		None
  6197 ;; Tracked objects:
  6198 ;;		On entry : 0/0
  6199 ;;		On exit  : 0/0
  6200 ;;		Unchanged: 0/0
  6201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6202 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6205 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6206 ;;Total ram usage:        2 bytes
  6207 ;; Hardware stack levels used:    1
  6208 ;; Hardware stack levels required when called:    1
  6209 ;; This function calls:
  6210 ;;		Nothing
  6211 ;; This function is called by:
  6212 ;;		_ISR_low
  6213 ;; This function uses a non-reentrant model
  6214 ;;
  6215                           
  6216                           	psect	text50
  6217  0014BC                     __ptext50:
  6218                           	opt callstack 0
  6219  0014BC                     i1_TMR1_Update_flag_Set:
  6220                           	opt callstack 23
  6221                           
  6222                           ;TMR1.c: 32: void TMR1_Update_flag_Set(UINT a);TMR1.c: 33: {;TMR1.c: 34:     TMR1_Update
      +                          _flag = a;
  6223                           
  6224                           ;incstack = 0
  6225  0014BC  C001  F047         	movff	i1TMR1_Update_flag_Set@a,_TMR1_Update_flag
  6226  0014C0  C002  F048         	movff	i1TMR1_Update_flag_Set@a+1,_TMR1_Update_flag+1
  6227  0014C4  0012               	return		;funcret
  6228  0014C6                     __end_ofi1_TMR1_Update_flag_Set:
  6229                           	opt callstack 0
  6230                           
  6231 ;; *************** function _TMR1_Timer_reset *****************
  6232 ;; Defined at:
  6233 ;;		line 63 in file "TMR1.c"
  6234 ;; Parameters:    Size  Location     Type
  6235 ;;		None
  6236 ;; Auto vars:     Size  Location     Type
  6237 ;;  t1H             1    1[COMRAM] volatile unsigned char 
  6238 ;;  t1L             1    0[COMRAM] volatile unsigned char 
  6239 ;; Return value:  Size  Location     Type
  6240 ;;                  1    wreg      unsigned char 
  6241 ;; Registers used:
  6242 ;;		wreg, status,2, status,0
  6243 ;; Tracked objects:
  6244 ;;		On entry : 0/0
  6245 ;;		On exit  : 0/0
  6246 ;;		Unchanged: 0/0
  6247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6249 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6251 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6252 ;;Total ram usage:        2 bytes
  6253 ;; Hardware stack levels used:    1
  6254 ;; Hardware stack levels required when called:    1
  6255 ;; This function calls:
  6256 ;;		Nothing
  6257 ;; This function is called by:
  6258 ;;		_ISR_low
  6259 ;; This function uses a non-reentrant model
  6260 ;;
  6261                           
  6262                           	psect	text51
  6263  0013A0                     __ptext51:
  6264                           	opt callstack 0
  6265  0013A0                     _TMR1_Timer_reset:
  6266                           	opt callstack 23
  6267                           
  6268                           ;TMR1.c: 69:     volatile BYTE t1L = 0, t1H = 0;
  6269                           
  6270                           ;incstack = 0
  6271  0013A0  0E00               	movlw	0
  6272  0013A2  6E01               	movwf	TMR1_Timer_reset@t1L,c	;volatile
  6273  0013A4  0E00               	movlw	0
  6274  0013A6  6E02               	movwf	TMR1_Timer_reset@t1H,c	;volatile
  6275                           
  6276                           ;TMR1.c: 70:     t1L = TMR1L;
  6277  0013A8  CFCE F001          	movff	4046,TMR1_Timer_reset@t1L	;volatile
  6278                           
  6279                           ;TMR1.c: 71:     t1H = TMR1H;
  6280  0013AC  CFCF F002          	movff	4047,TMR1_Timer_reset@t1H	;volatile
  6281                           
  6282                           ;TMR1.c: 72:     __nop();
  6283  0013B0  F000               	nop	
  6284                           
  6285                           ;TMR1.c: 73:     t1H += (UINT8)((0xFFFF - (((8000000/8)/4)/10)) >> 8);
  6286  0013B2  0E9E               	movlw	158
  6287  0013B4  2602               	addwf	TMR1_Timer_reset@t1H,f,c	;volatile
  6288                           
  6289                           ;TMR1.c: 74:     t1L += (UINT8)((0xFFFF - (((8000000/8)/4)/10)) & 0xFF);
  6290  0013B6  0E57               	movlw	87
  6291  0013B8  2601               	addwf	TMR1_Timer_reset@t1L,f,c	;volatile
  6292                           
  6293                           ;TMR1.c: 75:     TMR1H = t1H;
  6294  0013BA  C002  FFCF         	movff	TMR1_Timer_reset@t1H,4047	;volatile
  6295                           
  6296                           ;TMR1.c: 76:     TMR1L = 0x5B;
  6297  0013BE  0E5B               	movlw	91
  6298  0013C0  6ECE               	movwf	4046,c	;volatile
  6299  0013C2  0012               	return		;funcret
  6300  0013C4                     __end_of_TMR1_Timer_reset:
  6301                           	opt callstack 0
  6302                           
  6303 ;; *************** function _ISR_high *****************
  6304 ;; Defined at:
  6305 ;;		line 53 in file "ISR.c"
  6306 ;; Parameters:    Size  Location     Type
  6307 ;;		None
  6308 ;; Auto vars:     Size  Location     Type
  6309 ;;		None
  6310 ;; Return value:  Size  Location     Type
  6311 ;;                  1    wreg      void 
  6312 ;; Registers used:
  6313 ;;		None
  6314 ;; Tracked objects:
  6315 ;;		On entry : 0/0
  6316 ;;		On exit  : 0/0
  6317 ;;		Unchanged: 0/0
  6318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6323 ;;Total ram usage:        0 bytes
  6324 ;; Hardware stack levels used:    1
  6325 ;; This function calls:
  6326 ;;		Nothing
  6327 ;; This function is called by:
  6328 ;;		Interrupt level 2
  6329 ;; This function uses a non-reentrant model
  6330 ;;
  6331                           
  6332                           	psect	intcode
  6333  000008                     __pintcode:
  6334                           	opt callstack 0
  6335  000008                     _ISR_high:
  6336                           	opt callstack 23
  6337                           
  6338                           ;incstack = 0
  6339  000008  8259               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6340  00000A  ED70  F00A         	call	int_func,f	;refresh shadow registers
  6341                           
  6342                           	psect	intcode_body
  6343  0014E0                     __pintcode_body:
  6344                           	opt callstack 23
  6345  0014E0                     int_func:
  6346                           	opt callstack 23
  6347  0014E0  0006               	pop		; remove dummy address from shadow register refresh
  6348  0014E2  9259               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  6349  0014E4  0011               	retfie		f
  6350  0014E6                     __end_of_ISR_high:
  6351                           	opt callstack 0
  6352  0000                     
  6353                           	psect	rparam
  6354  0000                     
  6355                           	psect	temp
  6356  000059                     btemp:
  6357                           	opt callstack 0
  6358  000059                     	ds	1
  6359  0000                     int$flags	set	btemp
  6360  0000                     wtemp8	set	btemp+1
  6361  0000                     ttemp5	set	btemp+1
  6362  0000                     ttemp6	set	btemp+4
  6363  0000                     ttemp7	set	btemp+8
  6364                           tosu	equ	0xFFF
  6365                           tosh	equ	0xFFE
  6366                           tosl	equ	0xFFD
  6367                           stkptr	equ	0xFFC
  6368                           pclatu	equ	0xFFB
  6369                           pclath	equ	0xFFA
  6370                           pcl	equ	0xFF9
  6371                           tblptru	equ	0xFF8
  6372                           tblptrh	equ	0xFF7
  6373                           tblptrl	equ	0xFF6
  6374                           tablat	equ	0xFF5
  6375                           prodh	equ	0xFF4
  6376                           prodl	equ	0xFF3
  6377                           indf0	equ	0xFEF
  6378                           postinc0	equ	0xFEE
  6379                           postdec0	equ	0xFED
  6380                           preinc0	equ	0xFEC
  6381                           plusw0	equ	0xFEB
  6382                           fsr0h	equ	0xFEA
  6383                           fsr0l	equ	0xFE9
  6384                           wreg	equ	0xFE8
  6385                           indf1	equ	0xFE7
  6386                           postinc1	equ	0xFE6
  6387                           postdec1	equ	0xFE5
  6388                           preinc1	equ	0xFE4
  6389                           plusw1	equ	0xFE3
  6390                           fsr1h	equ	0xFE2
  6391                           fsr1l	equ	0xFE1
  6392                           bsr	equ	0xFE0
  6393                           indf2	equ	0xFDF
  6394                           postinc2	equ	0xFDE
  6395                           postdec2	equ	0xFDD
  6396                           preinc2	equ	0xFDC
  6397                           plusw2	equ	0xFDB
  6398                           fsr2h	equ	0xFDA
  6399                           fsr2l	equ	0xFD9
  6400                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        9
    BSS         683
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     63      88
    BANK0           160      0     123
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    FRAME_AnalogValue@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_MapPosition@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_HandleCanFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_AdressOfNeighbors@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_PrzypisanieDokarty@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_SoftwareVersion@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_Plot@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    Dane	PTR struct DaneStruct size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    FRAME_DeviceReset@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_AxisStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_AveragingTimes@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_ExcitationMultiplier@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_ExcitationValue@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_AccelerometerStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_SensorExcitationStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_GenID@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_TakeFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_SendFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_MoveBuffIntoFrame@Buf	PTR unsigned char  size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), RXB0D0(SFR_3[1]), 

    CAN_MoveBuffIntoFrame@Ram	PTR unsigned char  size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), RXB0D0(SFR_3[1]), 


Critical Paths under _main in COMRAM

    _main->_TRM_DataTransmition
    _TRM_DataTransmition->_FRAME_HandleCanFrame
    _FRAME_HandleCanFrame->_FRAME_AdressOfNeighbors
    _LED_Error->_LED_Control
    _LED_Clear->_LED_Control
    _FRAME_Plot->___lwdiv
    _FRAME_AccelerometerStatus->_MOCK_Klikniecie_Spadek
    _FRAME_AccelerometerStatus->_MOCK_PrzyspieszenieX
    _FRAME_AccelerometerStatus->_MOCK_PrzyspieszenieY
    _FRAME_AccelerometerStatus->_MOCK_PrzyspieszenieZ
    _CAN_SendFrame->_CAN_MoveBuffIntoFrame
    _CAN_TakeFrame->___awdiv
    _LED_Update->_LED_Light_Pos
    _LED_Light_Pos->___lwdiv
    _INI_LED_Start->_LED_Control

Critical Paths under _ISR_low in COMRAM

    _ISR_low->_TMR1_Timer_reset
    _ISR_low->i1_TMR1_Update_flag_Set

Critical Paths under _ISR_high in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR_low in BANK0

    None.

Critical Paths under _ISR_high in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_low in BANK1

    None.

Critical Paths under _ISR_high in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_low in BANK2

    None.

Critical Paths under _ISR_high in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_low in BANK3

    None.

Critical Paths under _ISR_high in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_low in BANK4

    None.

Critical Paths under _ISR_high in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_low in BANK5

    None.

Critical Paths under _ISR_high in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_low in BANK6

    None.

Critical Paths under _ISR_high in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_low in BANK7

    None.

Critical Paths under _ISR_high in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_low in BANK8

    None.

Critical Paths under _ISR_high in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_low in BANK9

    None.

Critical Paths under _ISR_high in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_low in BANK10

    None.

Critical Paths under _ISR_high in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_low in BANK11

    None.

Critical Paths under _ISR_high in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_low in BANK12

    None.

Critical Paths under _ISR_high in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   20672
                            _INI_All
                         _LED_Update
               _TMR1_Update_flag_Get
               _TMR1_Update_flag_Set
                _TRM_DataTransmition
 ---------------------------------------------------------------------------------
 (1) _TRM_DataTransmition                                 18    18      0   13447
                                             46 COMRAM    17    17      0
                      _CAN_TakeFrame
               _FRAME_HandleCanFrame
 ---------------------------------------------------------------------------------
 (2) _FRAME_HandleCanFrame                                 9     7      2   11463
                                             37 COMRAM     9     7      2
                          _CAN_GenID
                      _CAN_SendFrame
          _FRAME_AccelerometerStatus
            _FRAME_AdressOfNeighbors
                  _FRAME_AnalogValue
               _FRAME_AveragingTimes
                   _FRAME_AxisStatus
                  _FRAME_DeviceReset
         _FRAME_ExcitationMultiplier
              _FRAME_ExcitationValue
                  _FRAME_MapPosition
                         _FRAME_Plot
           _FRAME_PrzypisanieDokarty
       _FRAME_SensorExcitationStatus
              _FRAME_SoftwareVersion
                          _LED_Error
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) _FRAME_SoftwareVersion                                3     1      2     235
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_SensorExcitationStatus                        16    14      2    3376
                                             10 COMRAM    16    14      2
                          _LED_Clear
                          _LED_Error
                           _LOCK_Get
                           _LOCK_Set
           _MOC_Aktualna_Temperatura
                  _MOC_Frame_Counter
                        _MOC_NOTWORK
     _MOC_Wynikowa_wartosc_roznicowa
 ---------------------------------------------------------------------------------
 (4) _MOC_Wynikowa_wartosc_roznicowa                       2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_NOTWORK                                          2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_Frame_Counter                                    2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_Aktualna_Temperatura                             2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _LOCK_Set                                             1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _LOCK_Get                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _LED_Error                                            0     0      0    1412
                        _LED_Control
 ---------------------------------------------------------------------------------
 (4) _LED_Clear                                            0     0      0    1412
                        _LED_Control
 ---------------------------------------------------------------------------------
 (3) _FRAME_PrzypisanieDokarty                             3     1      2     169
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_Plot                                           3     1      2     743
                                             12 COMRAM     3     1      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) _FRAME_MapPosition                                    2     0      2     103
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_ExcitationValue                                3     1      2     169
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_ExcitationMultiplier                           5     3      2     215
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_DeviceReset                                    3     1      2     367
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AxisStatus                                     5     3      2     169
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AveragingTimes                                 3     1      2     169
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AnalogValue                                    6     2      4     206
                                              5 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _FRAME_AdressOfNeighbors                             32    28      4    1038
                                              5 COMRAM    32    28      4
 ---------------------------------------------------------------------------------
 (3) _FRAME_AccelerometerStatus                            3     1      2     235
                                              7 COMRAM     3     1      2
             _MOCK_Klikniecie_Spadek
               _MOCK_PrzyspieszenieX
               _MOCK_PrzyspieszenieY
               _MOCK_PrzyspieszenieZ
 ---------------------------------------------------------------------------------
 (4) _MOCK_PrzyspieszenieZ                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOCK_PrzyspieszenieY                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOCK_PrzyspieszenieX                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOCK_Klikniecie_Spadek                               2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _CAN_SendFrame                                        5     3      2     891
                                             10 COMRAM     5     3      2
              _CAN_MoveBuffIntoFrame
 ---------------------------------------------------------------------------------
 (3) _CAN_GenID                                            7     4      3     360
                                              5 COMRAM     7     4      3
 ---------------------------------------------------------------------------------
 (2) _CAN_TakeFrame                                        6     4      2    1622
                                             13 COMRAM     6     4      2
              _CAN_MoveBuffIntoFrame
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     612
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _CAN_MoveBuffIntoFrame                                5     1      4     546
                                              5 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) _TMR1_Update_flag_Set                                 2     0      2     202
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR1_Update_flag_Get                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _LED_Update                                           0     0      0    5611
                        _LED_Control
                           _LED_Left
                      _LED_Light_Pos
                          _LED_Right
 ---------------------------------------------------------------------------------
 (2) _LED_Light_Pos                                       11     7      4    3471
                                             12 COMRAM    11     7      4
                        _LED_Control
                           _LED_Left
                          _LED_Right
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     574
                                              5 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _LED_Right                                            6     4      2     364
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _LED_Left                                             4     2      2     364
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _INI_All                                              0     0      0    1412
                          _CAN_Setup
                _INI_GlobalInterrupt
                      _INI_LED_Start
                         _INI_OUTPUT
                          _INI_Timer
 ---------------------------------------------------------------------------------
 (2) _INI_Timer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INI_OUTPUT                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INI_LED_Start                                        0     0      0    1412
                        _LED_Control
 ---------------------------------------------------------------------------------
 (4) _LED_Control                                          5     3      2    1412
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _INI_GlobalInterrupt                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CAN_Setup                                            1     1      0       0
                                              5 COMRAM     1     1      0
                     _CAN_SetupClock
                      _CAN_SetupMask
 ---------------------------------------------------------------------------------
 (3) _CAN_SetupMask                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CAN_SetupClock                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR_low                                              3     3      0      76
                                              2 COMRAM     3     3      0
                   _TMR1_Timer_reset
             i1_TMR1_Update_flag_Set
 ---------------------------------------------------------------------------------
 (7) i1_TMR1_Update_flag_Set                               2     0      2      48
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (7) _TMR1_Timer_reset                                     2     2      0      28
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _ISR_high                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _INI_All
     _CAN_Setup
       _CAN_SetupClock
       _CAN_SetupMask
     _INI_GlobalInterrupt
     _INI_LED_Start
       _LED_Control
     _INI_OUTPUT
     _INI_Timer
   _LED_Update
     _LED_Control
     _LED_Left
     _LED_Light_Pos
       _LED_Control
       _LED_Left
       _LED_Right
       ___lwdiv
     _LED_Right
   _TMR1_Update_flag_Get
   _TMR1_Update_flag_Set
   _TRM_DataTransmition
     _CAN_TakeFrame
       _CAN_MoveBuffIntoFrame
       ___awdiv
     _FRAME_HandleCanFrame
       _CAN_GenID
       _CAN_SendFrame
         _CAN_MoveBuffIntoFrame
       _FRAME_AccelerometerStatus
         _MOCK_Klikniecie_Spadek
         _MOCK_PrzyspieszenieX
         _MOCK_PrzyspieszenieY
         _MOCK_PrzyspieszenieZ
       _FRAME_AdressOfNeighbors
       _FRAME_AnalogValue
       _FRAME_AveragingTimes
       _FRAME_AxisStatus
       _FRAME_DeviceReset
       _FRAME_ExcitationMultiplier
       _FRAME_ExcitationValue
       _FRAME_MapPosition
       _FRAME_Plot
         ___lwdiv
       _FRAME_PrzypisanieDokarty
       _FRAME_SensorExcitationStatus
         _LED_Clear
           _LED_Control
         _LED_Error
           _LED_Control
         _LOCK_Get
         _LOCK_Set
         _MOC_Aktualna_Temperatura
         _MOC_Frame_Counter
         _MOC_NOTWORK
         _MOC_Wynikowa_wartosc_roznicowa
       _FRAME_SoftwareVersion
       _LED_Error
         _LED_Control
       ___awdiv

 _ISR_low (ROOT)
   _TMR1_Timer_reset
   i1_TMR1_Update_flag_Set

 _ISR_high (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0     220      31       16.4%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      7B       5       76.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3F      58       1       93.6%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D3      20        0.0%
DATA                 0      0     2F3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Jul 23 13:26:19 2019

                    __end_of_FRAME_DeviceReset 0BE4                          ?_FRAME_AveragingTimes 0006  
                                 ___awdiv@sign 000B                                             bsr 000FE0  
                                  __CFG_BORV$3 000000                              ?_FRAME_AxisStatus 0006  
                            _FRAME_MapPosition 14EA                                   __CFG_CP0$OFF 000000  
                                 __CFG_CP1$OFF 000000                                   __CFG_CP2$OFF 000000  
                                 __CFG_CP3$OFF 000000                             __size_of_CAN_GenID 0094  
                                          l200 0074                                            l201 007A  
                                          l202 0080                                            l203 0086  
                                          l204 008C                                            l205 0092  
                                          l206 0098                                            l321 092C  
                                          l190 0730                                            l442 0A78  
                                          l451 0AFE                                            l444 0AB0  
                                          l293 0E88                                            l189 0732  
                                          l198 006E                                            l199 00DE  
                                          l544 0710                                    ?_LED_Update 0001  
                                          l545 0708                                   __CFG_CPB$OFF 000000  
                           ??_FRAME_AxisStatus 0008                                   __CFG_CPD$OFF 000000  
                           ?_FRAME_MapPosition 0006                             __size_of_CAN_Setup 005C  
                                 ?_LED_Control 0006                                            wreg 000FE8  
                        __end_of_CAN_TakeFrame 02DC                                    ?_INI_OUTPUT 0001  
                       __size_of_INI_LED_Start 0034                       ??_MOCK_Klikniecie_Spadek 0008  
                        __end_of_CAN_SendFrame 0884                                   __CFG_LVP$OFF 000000  
                    TRM_DataTransmition@weWyU8 004C                   __size_of_INI_GlobalInterrupt 000E  
                          ??_FRAME_MapPosition 0008                                   __CFG_WDT$OFF 000000  
                                         l3001 0566                                           l3011 05AC  
                                         l3003 0574                                           l3021 060A  
                                         l3013 05BA                                           l3005 0582  
                                         l1175 10E4                                           l3015 05C8  
                                         l3007 0590                                           l2321 0896  
                                         l3017 05E2                                           l3009 059E  
                                         l3025 0624                                           l2411 098C  
                                         l3019 05F0                                           l3027 068E  
                                         l2405 097C                                           l2333 08B6  
                                         l3061 0E64                                           l3109 1326  
                                         l2423 09AC                                           l2351 08E6  
                                         l2327 08A6                                           l2503 10B2  
                                         l3119 1346                                           l2417 099C  
                                         l2345 08D6                                           l2505 10BA  
                                         l2435 09CE                                           l2363 0906  
                                         l2339 08C6                                __end_of_INI_All 1438  
                                         l2515 10DA                                           l2603 07CA  
                                         l2429 09BC                                           l2381 093C  
                                         l2357 08F6                                           l2445 1352  
                                         l3077 11B2                                           l2375 0926  
                                         l2623 1170                                           l2607 087E  
                                         l2393 095C                                           l2369 0916  
                                         l2387 094C                                           l2821 0DF6  
                                         l2813 0DD8                                           l2901 022C  
                                         l2741 0BC2                                           l2399 096C  
                                         l2639 1200                                           l2831 0E16  
                                         l2807 0DC8                                           l2911 0262  
                                         l2719 111A                                           l2671 0A9A  
                                         l2921 0288                                           l2913 0268  
                                         l2905 0230                                           l2819 0DEE  
                                         l2835 0E20                                           l2923 0290  
                                         l2915 0270                                           l2907 024A  
                                         l2747 107E                                           l2683 0AC0  
                                         l2845 0F92                                           l2917 0278  
                                         l2909 025C                                           l2839 0E2E  
                                         l2919 0280                                           l2927 0298  
                                         l2961 0C1A                                           l2929 02D8  
                                         l2881 01B0                                           l2865 009E  
                                         l2793 0454                                           l2769 0314  
                                         l2777 03E0                                           l2859 0FDC  
                                         l2891 01D4                                           l2883 01B6  
                                         l2893 01DC                                           l2885 01BC  
                                         l2967 0C46                                           l2975 0C7C  
                                         l2895 01E4                                           l2887 01C4  
                                         l2969 0C50                                           l2889 01CC  
                                         l2899 01EC                                           l2995 053C  
                                         l2997 054A                                           _BIE0 000DFA  
                                         l2999 0558                              _MOC_Frame_Counter 1450  
                                         u1200 0AD4                                           u1300 0B68  
                                         u1070 10BE                                           u1135 07A0  
                                         u1400 0DFA                                           u1306 0B6A  
                                         u1250 112A                                           _LATA 000F89  
                                         u1510 0C84                                           u1350 03DE  
                                         _LATB 000F8A                                           _LATC 000F8B  
                                         u1360 0506                                           _LATD 000F8C  
                                         _LATE 000F8D                                           u1290 0B50  
                                         u1296 0B52                                           u1465 0148  
                                         _IPR3 000FA5                                           _IPEN 007E87  
                                         _PIE3 000FA3                                           _PEIE 007F96  
                                         _LOCK 004F                                           _PIR3 000FA4  
                                         _RCON 000FD0                    ??_FRAME_AccelerometerStatus 000A  
                                         _Dane 0049                                __end_of_ISR_low 005C  
                             LED_Control@diode 0006                           FRAME_AnalogValue@set 0008  
                           ?_MOC_Frame_Counter 0006                                           _main 1320  
                             LED_Control@color 000A                                           fsr1h 000FE2  
                                         fsr2h 000FDA                                           indf1 000FE7  
                                         indf2 000FDF                                           fsr1l 000FE1  
                                         fsr2l 000FD9                                           btemp 0059  
                               _CAN_SetupClock 1378                             __size_of_LED_Clear 001E  
                                         prodh 000FF4                                           prodl 000FF3  
                        __end_of_CAN_SetupMask 0DB4                  __size_of_TMR1_Update_flag_Get 000A  
                                         start 005C                  __size_of_TMR1_Update_flag_Set 000A  
                           __size_of_LED_Error 001E                                  __CFG_IESO$OFF 000000  
                           __size_of_LED_Right 004C                  __size_of_FRAME_HandleCanFrame 020E  
                                _LED_Light_Pos 0BE4                                  __CFG_MCLRE$ON 000000  
                                 ___param_bank 000000                            ??_MOC_Frame_Counter 0008  
                   ??_MOC_Aktualna_Temperatura 0008              FRAME_HandleCanFrame@identyfikator 002E  
                           __size_of_INI_Timer 0018                      __end_of_FRAME_MapPosition 14EC  
                             __end_of_LED_Left 1214                  __size_of_MOCK_PrzyspieszenieX 000A  
                __size_of_MOCK_PrzyspieszenieY 000A                  __size_of_MOCK_PrzyspieszenieZ 000A  
                                        _B0CON 000E20                                          _B1CON 000E30  
                                        _B2CON 000E40                                          _B3CON 000E50  
                                        _B4CON 000E60                                          _B5CON 000E70  
                             __end_of_LOCK_Get 14EA                                          ?_main 0001  
                             __end_of_LOCK_Set 14E0                                __end_of___awdiv 0E38  
                                        _BSEL0 000DF8                                ___awdiv@divisor 0008  
                                        _T1CON 000FCD                                          _IRCF0 007E9C  
                                        _IRCF1 007E9D              FRAME_ExcitationMultiplier@message 0006  
                                        _IRCF2 007E9E                                __end_of___lwdiv 10EE  
                                        i1l611 004C                            __size_of_FRAME_Plot 0058  
                              ___awdiv@counter 000A                                          _MSEL0 000DF0  
                                        _MSEL1 000DF1                                          _MSEL2 000DF2  
                                        _MSEL3 000DF3                                          _TMR1H 000FCF  
                                        _TMR1L 000FCE                                          _TRISA 000F92  
                                        _TRISB 000F93                                          _TRISC 000F94  
                                        _TRISD 000F95                                          _TRISE 000F96  
                                __CFG_PWRT$OFF 000000                                          _Flagi 00D6  
                       ?_CAN_MoveBuffIntoFrame 0006                                  __CFG_WRT0$OFF 000000  
                   __size_of_FRAME_AnalogValue 0002                                  __CFG_WRT1$OFF 000000  
                                __CFG_WRT2$OFF 000000                                  __CFG_WRT3$OFF 000000  
                               __CFG_EBTR0$OFF 000000                                 __CFG_FCMEN$OFF 000000  
                               __CFG_EBTR1$OFF 000000                                 __CFG_EBTR2$OFF 000000  
                               __CFG_EBTR3$OFF 000000                               __end_of_ISR_high 14E6  
                                __CFG_WRTB$OFF 000000                                  __CFG_WRTC$OFF 000000  
                                __CFG_WRTD$OFF 000000                      __end_of_MOC_Frame_Counter 145E  
                               __CFG_EBTRB$OFF 000000                        i1TMR1_Update_flag_Set@a 0001  
                                 ?_MOC_NOTWORK 0006                                          tablat 000FF5  
                       __end_of_CAN_SetupClock 13A0                                          ttemp5 005A  
                                        ttemp6 005D                                          ttemp7 0061  
                                        status 000FD8                                          wtemp8 005A  
                            __end_of_CAN_GenID 0D28                                 __CFG_PBADEN$ON 000000  
                          __size_of_LED_Update 007A                                 ?_LED_Light_Pos 000D  
                             _TMR1_Timer_reset 13A0                              __end_of_CAN_Setup 0FEA  
                                _INI_LED_Start 12EC                          _FRAME_ExcitationValue 124A  
             FRAME_AccelerometerStatus@message 0008                                __initialization 0FEA  
                          __size_of_INI_OUTPUT 001E                               CAN_GenID@frameID 0008  
                                 __end_of_main 134E                         ??_FRAME_AveragingTimes 0008  
                   __size_of_FRAME_DeviceReset 00E4                       ?_FRAME_AdressOfNeighbors 0006  
                             CAN_GenID@message 0006                      _FRAME_AccelerometerStatus 0EB2  
    FRAME_SensorExcitationStatus@iterator_beta 0019                                         ??_main 0040  
                       CAN_MoveBuffIntoFrame@i 000A                                  __activetblptr 000002  
                             _TMR1_Update_flag 0047                              __end_of_LED_Clear 1400  
                              _wartosciSasiada 00DB                                      ??_INI_All 000B  
                            __end_of_LED_Error 13E2                              __end_of_LED_Right 1188  
              __size_of_MOCK_Klikniecie_Spadek 000A                                      ??_ISR_low 0003  
                                       _CANCON 000F6F                               ___awdiv@dividend 0006  
                  FRAME_ExcitationMultiplier@i 0009                                         _CIOCON 000F73  
                              __CFG_BBSIZ$1024 000000                              __end_of_INI_Timer 1450  
                                       i1l3149 004A                                ?_CAN_SetupClock 0001  
                                       _RXB0D0 000F66                                         _TMR1IE 007CE8  
                                       _TMR1IF 007CF0                                         _TMR1IP 007CF8  
                                       _TMR1ON 007E68                   ??_FRAME_ExcitationMultiplier 0008  
                               ?_INI_LED_Start 0001                                 __CFG_XINST$OFF 000000  
                                    ??___awdiv 000A                                 __CFG_STVREN$ON 000000  
                             LED_Light_Pos@pos 000D                     __size_of_FRAME_MapPosition 0002  
                                    ??___lwdiv 000A                                         clear_0 1012  
                                       clear_1 1024                                         clear_2 1030  
                             ___awdiv@quotient 000C                     ??_FRAME_PrzypisanieDokarty 0008  
                     ??i1_TMR1_Update_flag_Set 0003                  FRAME_AdressOfNeighbors@uranos 001C  
                              __CFG_BOREN$BOHW 000000                                   __pdataCOMRAM 0050  
                                       tblptrh 000FF7                                         tblptrl 000FF6  
                                       tblptru 000FF8            __size_of_FRAME_ExcitationMultiplier 004E  
                   __size_of_MOC_Frame_Counter 000E                           __size_of_LED_Control 0152  
                     FRAME_MapPosition@message 0006                          TMR1_Update_flag_Set@a 0006  
                                   __accesstop 0060                        __end_of__initialization 1036  
                                 ??_FRAME_Plot 000F                            ISR_low@ramkaStanuU8 004D  
                                    ?_LED_Left 0006                                ??_LED_Light_Pos 0011  
                                ___rparam_used 000001                         ?_FRAME_ExcitationValue 0006  
                                    ?_LOCK_Get 0001                                      ?_LOCK_Set 0001  
              __end_of_FRAME_AdressOfNeighbors 0508                         _MOCK_Klikniecie_Spadek 149E  
                               __pcstackCOMRAM 0001                                      LED_Left@a 0006  
                                    LED_Left@b 0008                            _INI_GlobalInterrupt 145E  
                                    ?_ISR_high 0001                                   ??_LED_Update 0018  
                  __end_of_TRM_DataTransmition 11D2                          _FRAME_SoftwareVersion 0F28  
                           __end_of_FRAME_Plot 109C                                   ??_INI_OUTPUT 0006  
                                    LOCK_Set@k 0006                        FRAME_AxisStatus@message 0006  
                         ?_INI_GlobalInterrupt 0001                      __size_of_FRAME_AxisStatus 0036  
                                   __pbssBANK0 0060                           __size_of_MOC_NOTWORK 0008  
                              ??_INI_LED_Start 000B                                     ??_LED_Left 0008  
                                   ??_LOCK_Get 0006                                     ??_LOCK_Set 0006  
                           __end_of_LED_Update 0EB2                             __end_of_INI_OUTPUT 141E  
                                   ??_ISR_high 0001                            TMR1_Timer_reset@t1H 0002  
                          TMR1_Timer_reset@t1L 0001                                        _ECANCON 000F77  
                                      _CANSTAT 000F6E                        ??_CAN_MoveBuffIntoFrame 000A  
                 __end_of_TMR1_Update_flag_Get 14BC                   __end_of_TMR1_Update_flag_Set 14B2  
              __size_ofi1_TMR1_Update_flag_Set 000A                   __end_of_FRAME_HandleCanFrame 0716  
                                      _INI_All 141E                       __end_of_TMR1_Timer_reset 13C4  
                                      _RXB0DLC 000F65                                        _RXB0CON 000F60  
                                      _RXB1CON 000F50                          ??_INI_GlobalInterrupt 0006  
                                      _TXB0CON 000F40                                        _ISR_low 0018  
                                      _RXFCON0 000DD4                                        _DaneCan 0040  
                 __end_of_MOCK_PrzyspieszenieX 149E                   __end_of_MOCK_PrzyspieszenieY 1494  
                 __end_of_MOCK_PrzyspieszenieZ 148A             __end_of_FRAME_ExcitationMultiplier 113C  
                   _FRAME_ExcitationMultiplier 10EE                    FRAME_HandleCanFrame@message 0026  
                                      __Hparam 0000               ??_MOC_Wynikowa_wartosc_roznicowa 0008  
              ?_MOC_Wynikowa_wartosc_roznicowa 0006                                        __Lparam 0000  
                       __size_of_CAN_TakeFrame 027C                                      _CAN_GenID 0C94  
                                      ___awdiv 0DB4                                      _CAN_Setup 0F8E  
                       __size_of_CAN_SendFrame 016E                                        ___lwdiv 109C  
                            LED_Light_Pos@pos2 0014                                        __pcinit 0FEA  
                                      __ramtop 0D00                                        __ptext0 1320  
                                      __ptext1 1188                                        __ptext2 0508  
                                      __ptext3 0F28                                        __ptext4 09D6  
                                      __ptext5 146C                                        __ptext6 14D0  
                                      __ptext7 1450                                        __ptext8 1476  
                                      __ptext9 14D8                         ?_FRAME_SoftwareVersion 0006  
                       __size_of_CAN_SetupMask 008C              __size_of_MOC_Aktualna_Temperatura 000A  
               FRAME_AdressOfNeighbors@nrRamki 0008                      ?_MOC_Aktualna_Temperatura 0006  
             __size_of_FRAME_AdressOfNeighbors 022C                               ??_CAN_SetupClock 0006  
               FRAME_AdressOfNeighbors@message 0006                                      _LED_Clear 13E2  
                                    _LED_Error 13C4                                 __pintcode_body 14E0  
                                    _LED_Right 113C                           end_of_initialization 1036  
                                __Lmediumconst 0000                                        int_func 14E0  
                                    _INI_Timer 1438                         i1_TMR1_Update_flag_Set 14BC  
             TRM_DataTransmition@czujnikWeWyU8 004B                                     ?_CAN_GenID 0006  
                                      postdec1 000FE5                                        postdec2 000FDD  
                                      postinc0 000FEE                                        postinc2 000FDE  
                                   ?_CAN_Setup 0001                  __size_of_FRAME_AveragingTimes 0036  
                         CAN_SendFrame@message 000B                                  LED_Update@Red 004E  
                                _CAN_TakeFrame 0060                                     ?_LED_Clear 0001  
                                _CAN_SendFrame 0716                    FRAME_AdressOfNeighbors@gaja 0020  
                                   ?_LED_Error 0001                    FRAME_AdressOfNeighbors@kier 0022  
                                   ?_LED_Right 0006                               _FRAME_AxisStatus 1280  
                      ??_FRAME_ExcitationValue 0008                                     ?_INI_Timer 0001  
                      ?_MOCK_Klikniecie_Spadek 0006                                _ramkaCanRxKarty 0060  
                         _TMR1_Update_flag_Get 14B2                                _ramkaCanTxKarty 00B5  
                         _TMR1_Update_flag_Set 14A8                                  _CAN_SetupMask 0D28  
                            __size_of_LED_Left 0042                           _FRAME_HandleCanFrame 0508  
                            __size_of_LOCK_Get 0004                              __size_of_LOCK_Set 0008  
                                 _NeightAdress 00C6                                 CAN_TakeFrame@k 0013  
                                __pidataCOMRAM 14C6                              __size_of_ISR_high 14DE  
                         _MOCK_PrzyspieszenieX 1494                           _MOCK_PrzyspieszenieY 148A  
                         _MOCK_PrzyspieszenieZ 1480                                     LED_Right@a 0006  
                                   LED_Right@b 000A                          MOC_Frame_Counter@zeta 0050  
                                ??_LED_Control 0008                            start_initialization 0FEA  
                               ?_CAN_TakeFrame 000E                                 ?_CAN_SendFrame 000B  
               __end_of_MOCK_Klikniecie_Spadek 14A8                               __CFG_OSC$IRCIO67 000000  
            __size_of_FRAME_PrzypisanieDokarty 0036                      ?_FRAME_PrzypisanieDokarty 0006  
                        ?_TMR1_Update_flag_Get 0006                          ?_TMR1_Update_flag_Set 0006  
                               ?_CAN_SetupMask 0001                          __end_of_LED_Light_Pos 0C94  
                        ?_FRAME_HandleCanFrame 0026                                    ??_CAN_GenID 0009  
                                  ??_CAN_Setup 0006                               __CFG_LPT1OSC$OFF 000000  
                        ?_MOCK_PrzyspieszenieX 0006                          ?_MOCK_PrzyspieszenieY 0006  
                        ?_MOCK_PrzyspieszenieZ 0006                       CAN_MoveBuffIntoFrame@Buf 0008  
         __end_of_FRAME_SensorExcitationStatus 0B00          __size_of_FRAME_SensorExcitationStatus 012A  
                     CAN_MoveBuffIntoFrame@Ram 0006                   _FRAME_SensorExcitationStatus 09D6  
FRAME_SensorExcitationStatus@Satrun_prime_2155 0015                 __size_of_CAN_MoveBuffIntoFrame 002A  
                                  __pbssBIGRAM 00DB                  __end_of_CAN_MoveBuffIntoFrame 1378  
                              _Fulfillment_Lvl 0056                                    __pbssCOMRAM 0040  
                                     ?_INI_All 0001                        _FRAME_AdressOfNeighbors 02DC  
                            ?_TMR1_Timer_reset 0001                                    _BRGCON1bits 000F70  
                                  _BRGCON2bits 000F71                                    _BRGCON3bits 000F72  
                                     ?_ISR_low 0001                                    ??_LED_Clear 000B  
                                ??_MOC_NOTWORK 0008                             ??_TMR1_Timer_reset 0001  
                                  ??_LED_Error 000B                                    ??_LED_Right 0008  
                 __size_of_TRM_DataTransmition 004A                            __end_of_LED_Control 09D6  
                  ?_FRAME_ExcitationMultiplier 0006                                    ??_INI_Timer 0006  
                        __end_of_INI_LED_Start 1320                               ___lwdiv@dividend 0006  
                                    __pintcode 0008                                       ?___awdiv 0006  
                      ??_FRAME_SoftwareVersion 0008               __end_of_MOC_Aktualna_Temperatura 1480  
                                     ?___lwdiv 0006                              FRAME_Plot@message 000D  
                                  __pintcodelo 0018                    __end_of_INI_GlobalInterrupt 146C  
                              ??_CAN_TakeFrame 0010                  ?_FRAME_SensorExcitationStatus 000B  
       __end_of_MOC_Wynikowa_wartosc_roznicowa 1476        __size_of_MOC_Wynikowa_wartosc_roznicowa 000A  
               _MOC_Wynikowa_wartosc_roznicowa 146C                                    _COMSTATbits 000F74  
                              ??_CAN_SendFrame 000D                               ___lwdiv@quotient 000A  
                      ?i1_TMR1_Update_flag_Set 0001                    FRAME_AveragingTimes@message 0006  
                       ??_TMR1_Update_flag_Get 0008                         ??_TMR1_Update_flag_Set 0008  
                              ??_CAN_SetupMask 0006                                       _LED_Left 11D2  
                       ??_FRAME_HandleCanFrame 0028                           CAN_TakeFrame@message 000E  
                          __end_of_MOC_NOTWORK 14D8                                       _LOCK_Get 14E6  
                         CAN_TakeFrame@tempCON 0012                                       _LOCK_Set 14D8  
                                     _RXB0EIDH 000F63                                       _RXB0EIDL 000F64  
                                     _RCONbits 000FD0                               __CFG_WDTPS$32768 000000  
                                     _RXB0SIDH 000F61                                       _RXB0SIDL 000F62  
                                     _RXF0EIDH 000F02                                       _RXF0EIDL 000F03  
                                     _RXF1EIDH 000F06                                       _RXF1EIDL 000F07  
                                     _RXF2EIDH 000F0A                                       _RXF2EIDL 000F0B  
                                     _RXF3EIDH 000F0E                                       _RXF3EIDL 000F0F  
                                     _RXF0SIDH 000F00                                       _RXF0SIDL 000F01  
                                     _RXF1SIDH 000F04                                       _RXF1SIDL 000F05  
                                     _RXF2SIDH 000F08                                       _RXF2SIDL 000F09  
                                     _RXF3SIDH 000F0C                                       _RXF3SIDL 000F0D  
                                     _ISR_high 0008                                       _RXM0EIDH 000F1A  
                                     _RXM0EIDL 000F1B                                       _RXM1EIDH 000F1E  
                                     _RXM1EIDL 000F1F                         ??_MOCK_PrzyspieszenieX 0008  
                       ??_MOCK_PrzyspieszenieY 0008                         ??_MOCK_PrzyspieszenieZ 0008  
                                     _RXM0SIDH 000F18                                       _RXM0SIDL 000F19  
                                     _RXM1SIDH 000F1C                                       _RXM1SIDL 000F1D  
                     __end_of_FRAME_AxisStatus 12B6                      ??_FRAME_AdressOfNeighbors 000A  
                             _DetectorLedRadar 0044                                    _LED_Control 0884  
                             __size_of_INI_All 001A                   FRAME_ExcitationValue@message 0006  
               __end_ofi1_TMR1_Update_flag_Set 14C6                                      copy_data0 0FFE  
                             __size_of_ISR_low 0044             __size_of_FRAME_AccelerometerStatus 0076  
                 __end_of_FRAME_AveragingTimes 12EC                     ?_FRAME_AccelerometerStatus 0008  
               __size_of_FRAME_ExcitationValue 0036                  __end_of_FRAME_ExcitationValue 1280  
                                     __Hrparam 0000                                   _RXB0SIDLbits 000F62  
                                     __Lrparam 0000                               __size_of___awdiv 0084  
                             __size_of___lwdiv 0052                       _MOC_Aktualna_Temperatura 1476  
              FRAME_PrzypisanieDokarty@message 0006                             LED_Light_Pos@flage 0016  
                           LED_Light_Pos@color 0011               __end_of_FRAME_PrzypisanieDokarty 124A  
                                 _RXF0SIDLbits 000F01                       FRAME_AnalogValue@message 0006  
                              ___lwdiv@divisor 0008                                   _RXF1SIDLbits 000F05  
                              ___lwdiv@counter 000C                                       __ptext10 14E6  
                                     __ptext11 13C4                                       __ptext20 12B6  
                                     __ptext12 13E2                                       __ptext21 14EC  
                                     __ptext13 1214                                       __ptext30 0060  
                                     __ptext22 02DC                                       __ptext14 1044  
                                     __ptext31 0DB4                                       __ptext23 0EB2  
                                     __ptext15 14EA                                       __ptext40 141E  
                                     __ptext32 134E                                       __ptext24 1480  
                                     __ptext16 124A                                       __ptext41 1438  
                                     __ptext33 14A8                                       __ptext25 148A  
                                     __ptext17 10EE                                       __ptext50 14BC  
                                     __ptext42 1400                                       __ptext34 14B2  
                                     __ptext26 1494                                       __ptext18 0B00  
                                     __ptext51 13A0                                       __ptext43 12EC  
                                     __ptext35 0E38                                       __ptext27 149E  
                                     __ptext19 1280                                       __ptext44 0884  
                                     __ptext36 0BE4                                       __ptext28 0716  
               ??_FRAME_SensorExcitationStatus 000D                                       __ptext45 145E  
                                     __ptext37 109C                                       __ptext29 0C94  
                                     __ptext46 0F8E                                       __ptext38 113C  
                                     __ptext47 0D28                                       __ptext39 11D2  
                                     __ptext48 1378                  TRM_DataTransmition@canMessage 002F  
                                 _RXF2SIDLbits 000F09                                    _MOC_NOTWORK 14D0  
                    FRAME_HandleCanFrame@ident 002C                       FRAME_DeviceReset@message 0006  
            __end_of_FRAME_AccelerometerStatus 0F28                                     _FRAME_Plot 1044  
                                __size_of_main 002E                        __size_of_CAN_SetupClock 0028  
     FRAME_SensorExcitationStatus@Satrun_prime 0013                                       int$flags 0059  
                          _TRM_DataTransmition 1188                                    _RXB0DLCbits 000F65  
                                   _LED_Update 0E38                                    _RXB0CONbits 000F60  
                                   _INTCONbits 000FF2                                     _INI_OUTPUT 1400  
             FRAME_AdressOfNeighbors@kier_3191 001E                              _FRAME_AnalogValue 14EC  
                         ?_TRM_DataTransmition 0001                   FRAME_SoftwareVersion@message 0006  
                                     intlevel1 0000                                       intlevel2 0000  
                           ?_FRAME_AnalogValue 0006            FRAME_SensorExcitationStatus@message 000B  
                                  _TXB0CONbits 000F40                            ??_FRAME_AnalogValue 000A  
                    __size_of_TMR1_Timer_reset 0024             FRAME_SensorExcitationStatus@Saturn 0017  
                     LED_Light_Pos@fulfillment 000F                           _FRAME_AveragingTimes 12B6  
               __size_of_FRAME_SoftwareVersion 0066                              _FRAME_DeviceReset 0B00  
                __end_of_FRAME_SoftwareVersion 0F8E                             ?_FRAME_DeviceReset 0006  
                              LED_Update@Green 0058                      __end_of_FRAME_AnalogValue 14EE  
         FRAME_AdressOfNeighbors@iterator_alfa 0024                         __size_of_LED_Light_Pos 00B0  
                        _CAN_MoveBuffIntoFrame 134E                                     _WDTCONbits 000FD1  
                          ??_FRAME_DeviceReset 0008                          ??_TRM_DataTransmition 002F  
                     _FRAME_PrzypisanieDokarty 1214                         LED_Light_Pos@LED_array 0012  
                               LED_Update@pos1 0054                                 LED_Update@pos2 0052  
                                  ?_FRAME_Plot 000D  
