

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Fri Jul 26 09:29:09 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4680
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1
    67                           	psect	text54,global,reloc=2,class=CODE,delta=1
    68                           	psect	text55,global,reloc=2,class=CODE,delta=1
    69                           	psect	text56,global,reloc=2,class=CODE,delta=1
    70                           	psect	text57,global,reloc=2,class=CODE,delta=1
    71                           	psect	text58,global,reloc=2,class=CODE,delta=1
    72                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    73                           	psect	text60,global,reloc=2,class=CODE,delta=1
    74                           	psect	text61,global,reloc=2,class=CODE,delta=1
    75                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    76                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    77                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    78                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    79                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    80  0000                     
    81                           ; Version 2.05
    82                           ; Generated 20/12/2018 GMT
    83                           ; 
    84                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    85                           ; All rights reserved.
    86                           ; 
    87                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    88                           ; 
    89                           ; Redistribution and use in source and binary forms, with or without modification, are
    90                           ; permitted provided that the following conditions are met:
    91                           ; 
    92                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    93                           ;        conditions and the following disclaimer.
    94                           ; 
    95                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    96                           ;        of conditions and the following disclaimer in the documentation and/or other
    97                           ;        materials provided with the distribution.
    98                           ; 
    99                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   100                           ;        software without specific prior written permission.
   101                           ; 
   102                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   103                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   104                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   105                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   106                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   107                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   108                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   109                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   110                           ; 
   111                           ; 
   112                           ; Code-generator required, PIC18F4680 Definitions
   113                           ; 
   114                           ; SFR Addresses
   115  0000                     
   116                           	psect	idataCOMRAM
   117  001A12                     __pidataCOMRAM:
   118                           	opt callstack 0
   119                           
   120                           ;initializer for MOC_Frame_Counter@zeta
   121  001A12  0011               	dw	17
   122                           
   123                           ;initializer for LED_Update@pos2
   124  001A14  0001               	dw	1
   125                           
   126                           ;initializer for LED_Update@pos1
   127  001A16  0001               	dw	1
   128                           
   129                           ;initializer for _Fulfillment_Lvl
   130  001A18  0014               	dw	20
   131                           
   132                           ;initializer for LED_Update@Green
   133  001A1A  01                 	db	1
   134                           
   135                           ;initializer for _NeightAdress2
   136  001A1B  006F               	dw	111
   137                           
   138                           ;initializer for _NeightAdress1
   139  001A1D  000A               	dw	10
   140  0000                     _RXF9EIDL	set	3443
   141  0000                     _RXF9EIDH	set	3442
   142  0000                     _RXF9SIDLbits	set	3441
   143  0000                     _RXF9SIDL	set	3441
   144  0000                     _RXF9SIDH	set	3440
   145  0000                     _RXF8EIDL	set	3435
   146  0000                     _RXF8EIDH	set	3434
   147  0000                     _RXF8SIDLbits	set	3433
   148  0000                     _RXF8SIDL	set	3433
   149  0000                     _RXF8SIDH	set	3432
   150  0000                     _RXF7EIDL	set	3431
   151  0000                     _RXF7EIDH	set	3430
   152  0000                     _RXF7SIDLbits	set	3429
   153  0000                     _RXF7SIDL	set	3429
   154  0000                     _RXF7SIDH	set	3428
   155  0000                     _RXF6EIDL	set	3427
   156  0000                     _RXF6EIDH	set	3426
   157  0000                     _RXF6SIDLbits	set	3425
   158  0000                     _RXF6SIDL	set	3425
   159  0000                     _RXF6SIDH	set	3424
   160  0000                     _RXFBCON4	set	3556
   161  0000                     _RXFBCON3	set	3555
   162  0000                     _RXFBCON2	set	3554
   163  0000                     _RXFBCON1	set	3553
   164  0000                     _RXFBCON0	set	3552
   165  0000                     _MSEL3	set	3571
   166  0000                     _MSEL2	set	3570
   167  0000                     _MSEL1	set	3569
   168  0000                     _MSEL0	set	3568
   169  0000                     _BIE0	set	3578
   170  0000                     _BSEL0	set	3576
   171  0000                     _B5CON	set	3696
   172  0000                     _B4CON	set	3680
   173  0000                     _B3CON	set	3664
   174  0000                     _B2CON	set	3648
   175  0000                     _B1CON	set	3632
   176  0000                     _B0CON	set	3616
   177  0000                     _TXB0CONbits	set	3904
   178  0000                     _RXF5EIDL	set	3863
   179  0000                     _RXF5EIDH	set	3862
   180  0000                     _RXF5SIDLbits	set	3861
   181  0000                     _RXF5SIDL	set	3861
   182  0000                     _RXF5SIDH	set	3860
   183  0000                     _RXF4EIDL	set	3859
   184  0000                     _RXF4EIDH	set	3858
   185  0000                     _RXF4SIDLbits	set	3857
   186  0000                     _RXF4SIDL	set	3857
   187  0000                     _RXF4SIDH	set	3856
   188  0000                     _RXF3EIDL	set	3855
   189  0000                     _RXF3EIDH	set	3854
   190  0000                     _RXF3SIDLbits	set	3853
   191  0000                     _RXF3SIDL	set	3853
   192  0000                     _RXF3SIDH	set	3852
   193  0000                     _RXF2EIDL	set	3851
   194  0000                     _RXF2EIDH	set	3850
   195  0000                     _RXF2SIDLbits	set	3849
   196  0000                     _RXF2SIDL	set	3849
   197  0000                     _RXF2SIDH	set	3848
   198  0000                     _RXF1EIDL	set	3847
   199  0000                     _RXF1EIDH	set	3846
   200  0000                     _RXF1SIDLbits	set	3845
   201  0000                     _RXF1SIDL	set	3845
   202  0000                     _RXF1SIDH	set	3844
   203  0000                     _RXF0EIDL	set	3843
   204  0000                     _RXF0EIDH	set	3842
   205  0000                     _RXF0SIDLbits	set	3841
   206  0000                     _RXF0SIDL	set	3841
   207  0000                     _RXF0SIDH	set	3840
   208  0000                     _RXM1EIDL	set	3871
   209  0000                     _RXM1EIDH	set	3870
   210  0000                     _RXM1SIDL	set	3869
   211  0000                     _RXM1SIDH	set	3868
   212  0000                     _RXM0EIDL	set	3867
   213  0000                     _RXM0EIDH	set	3866
   214  0000                     _RXM0SIDL	set	3865
   215  0000                     _RXM0SIDH	set	3864
   216  0000                     _RXB1CON	set	3920
   217  0000                     _TXB0CON	set	3904
   218  0000                     _EECON2	set	4007
   219  0000                     _EEDATA	set	4008
   220  0000                     _EECON1bits	set	4006
   221  0000                     _EEADR	set	4009
   222  0000                     _EEADRH	set	4010
   223  0000                     _INTCONbits	set	4082
   224  0000                     _WDTCONbits	set	4049
   225  0000                     _RCONbits	set	4048
   226  0000                     _TRISC	set	3988
   227  0000                     _LATC	set	3979
   228  0000                     _T1CON	set	4045
   229  0000                     _TMR1H	set	4047
   230  0000                     _TMR1L	set	4046
   231  0000                     _LATE	set	3981
   232  0000                     _LATA	set	3977
   233  0000                     _LATB	set	3978
   234  0000                     _LATD	set	3980
   235  0000                     _TRISD	set	3989
   236  0000                     _TRISE	set	3990
   237  0000                     _TRISB	set	3987
   238  0000                     _TRISA	set	3986
   239  0000                     _RXB0DLCbits	set	3941
   240  0000                     _RXB0DLC	set	3941
   241  0000                     _RXB0SIDH	set	3937
   242  0000                     _RXB0SIDLbits	set	3938
   243  0000                     _RXB0SIDL	set	3938
   244  0000                     _RXB0EIDH	set	3939
   245  0000                     _RXB0EIDL	set	3940
   246  0000                     _COMSTATbits	set	3956
   247  0000                     _RXB0CONbits	set	3936
   248  0000                     _BRGCON3bits	set	3954
   249  0000                     _BRGCON2bits	set	3953
   250  0000                     _BRGCON1bits	set	3952
   251  0000                     _CIOCON	set	3955
   252  0000                     _ECANCON	set	3959
   253  0000                     _PIR3	set	4004
   254  0000                     _IPR3	set	4005
   255  0000                     _PIE3	set	4003
   256  0000                     _RXB0CON	set	3936
   257  0000                     _CANSTAT	set	3950
   258  0000                     _CANCON	set	3951
   259  0000                     _RCON	set	4048
   260  0000                     _RXB0D0	set	3942
   261  0000                     _TMR1IF	set	31984
   262  0000                     _TMR1IP	set	31992
   263  0000                     _PEIE	set	32662
   264  0000                     _IPEN	set	32391
   265  0000                     _TMR1ON	set	32360
   266  0000                     _TMR1IE	set	31976
   267  0000                     _IRCF0	set	32412
   268  0000                     _IRCF1	set	32413
   269  0000                     _IRCF2	set	32414
   270                           
   271                           ; #config settings
   272  0000                     
   273                           	psect	cinit
   274  00145C                     __pcinit:
   275                           	opt callstack 0
   276  00145C                     start_initialization:
   277                           	opt callstack 0
   278  00145C                     __initialization:
   279                           	opt callstack 0
   280                           
   281                           ; Initialize objects allocated to COMRAM (13 bytes)
   282                           ; load TBLPTR registers with __pidataCOMRAM
   283  00145C  0E12               	movlw	low __pidataCOMRAM
   284  00145E  6EF6               	movwf	tblptrl,c
   285  001460  0E1A               	movlw	high __pidataCOMRAM
   286  001462  6EF7               	movwf	tblptrh,c
   287  001464  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   288  001466  6EF8               	movwf	tblptru,c
   289  001468  EE00  F03F         	lfsr	0,__pdataCOMRAM
   290  00146C  EE10 F00D          	lfsr	1,13
   291  001470                     copy_data0:
   292  001470  0009               	tblrd		*+
   293  001472  CFF5 FFEE          	movff	tablat,postinc0
   294  001476  50E5               	movf	postdec1,w,c
   295  001478  50E1               	movf	fsr1l,w,c
   296  00147A  E1FA               	bnz	copy_data0
   297                           
   298                           ; Clear objects allocated to BIGRAM (544 bytes)
   299  00147C  EE00  F0DF         	lfsr	0,__pbssBIGRAM
   300  001480  EE12 F020          	lfsr	1,544
   301  001484                     clear_0:
   302  001484  6AEE               	clrf	postinc0,c
   303  001486  50E5               	movf	postdec1,w,c
   304  001488  50E1               	movf	fsr1l,w,c
   305  00148A  E1FC               	bnz	clear_0
   306  00148C  50E2               	movf	fsr1h,w,c
   307  00148E  E1FA               	bnz	clear_0
   308                           
   309                           ; Clear objects allocated to BANK0 (110 bytes)
   310  001490  EE00  F060         	lfsr	0,__pbssBANK0
   311  001494  0E6E               	movlw	110
   312  001496                     clear_1:
   313  001496  6AEE               	clrf	postinc0,c
   314  001498  06E8               	decf	wreg,f,c
   315  00149A  E1FD               	bnz	clear_1
   316                           
   317                           ; Clear objects allocated to COMRAM (36 bytes)
   318  00149C  EE00  F001         	lfsr	0,__pbssCOMRAM
   319  0014A0  0E24               	movlw	36
   320  0014A2                     clear_2:
   321  0014A2  6AEE               	clrf	postinc0,c
   322  0014A4  06E8               	decf	wreg,f,c
   323  0014A6  E1FD               	bnz	clear_2
   324  0014A8                     end_of_initialization:
   325                           	opt callstack 0
   326  0014A8                     __end_of__initialization:
   327                           	opt callstack 0
   328  0014A8  904C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   329  0014AA  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   330  0014AC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   331  0014AE  6EF8               	movwf	tblptru,c
   332  0014B0  0100               	movlb	0
   333  0014B2  EF63  F00C         	goto	_main	;jump to C main() function
   334                           
   335                           	psect	bssCOMRAM
   336  000001                     __pbssCOMRAM:
   337                           	opt callstack 0
   338  000001                     _DaneCan:
   339                           	opt callstack 0
   340  000001                     	ds	4
   341  000005                     _nextEEPosition:
   342                           	opt callstack 0
   343  000005                     	ds	2
   344  000007                     _czujnikiNaMapie:
   345                           	opt callstack 0
   346  000007                     	ds	2
   347  000009                     FRAME_SensorExcitationStatus@statwect:
   348                           	opt callstack 0
   349  000009                     	ds	2
   350  00000B                     _TMR1_Update_flag:
   351                           	opt callstack 0
   352  00000B                     	ds	2
   353  00000D                     _Dane:
   354                           	opt callstack 0
   355  00000D                     	ds	2
   356  00000F                     WritetoEEPROM@GIE_Status:
   357                           	opt callstack 0
   358  00000F                     	ds	1
   359  000010                     	ds	1
   360  000011                     	ds	1
   361  000012                     ISR_low@ramkaStanuU8:
   362                           	opt callstack 0
   363  000012                     	ds	1
   364  000013                     	ds	1
   365  000014                     _LOCK:
   366                           	opt callstack 0
   367  000014                     	ds	1
   368  000015                     _neighborsAdress:
   369                           	opt callstack 0
   370  000015                     	ds	2
   371  000017                     _ustawieniaKarty:
   372                           	opt callstack 0
   373  000017                     	ds	2
   374  000019                     _NeightAdress8:
   375                           	opt callstack 0
   376  000019                     	ds	2
   377  00001B                     _NeightAdress7:
   378                           	opt callstack 0
   379  00001B                     	ds	2
   380  00001D                     _NeightAdress6:
   381                           	opt callstack 0
   382  00001D                     	ds	2
   383  00001F                     _NeightAdress5:
   384                           	opt callstack 0
   385  00001F                     	ds	2
   386  000021                     _NeightAdress4:
   387                           	opt callstack 0
   388  000021                     	ds	2
   389  000023                     _NeightAdress3:
   390                           	opt callstack 0
   391  000023                     	ds	2
   392                           
   393                           	psect	dataCOMRAM
   394  00003F                     __pdataCOMRAM:
   395                           	opt callstack 0
   396  00003F                     MOC_Frame_Counter@zeta:
   397                           	opt callstack 0
   398  00003F                     	ds	2
   399  000041                     LED_Update@pos2:
   400                           	opt callstack 0
   401  000041                     	ds	2
   402  000043                     LED_Update@pos1:
   403                           	opt callstack 0
   404  000043                     	ds	2
   405  000045                     _Fulfillment_Lvl:
   406                           	opt callstack 0
   407  000045                     	ds	2
   408  000047                     LED_Update@Green:
   409                           	opt callstack 0
   410  000047                     	ds	1
   411  000048                     _NeightAdress2:
   412                           	opt callstack 0
   413  000048                     	ds	2
   414  00004A                     _NeightAdress1:
   415                           	opt callstack 0
   416  00004A                     	ds	2
   417                           
   418                           	psect	bssBANK0
   419  000060                     __pbssBANK0:
   420                           	opt callstack 0
   421  000060                     _ramkaCanRxKarty:
   422                           	opt callstack 0
   423  000060                     	ds	85
   424  0000B5                     _ramkaCanTxKarty:
   425                           	opt callstack 0
   426  0000B5                     	ds	17
   427  0000C6                     _Flagi:
   428                           	opt callstack 0
   429  0000C6                     	ds	5
   430  0000CB                     _DetectorLedRadar:
   431                           	opt callstack 0
   432  0000CB                     	ds	3
   433                           
   434                           	psect	bssBIGRAM
   435  0000DF                     __pbssBIGRAM:
   436                           	opt callstack 0
   437  0000DF                     _wartosciSasiada:
   438                           	opt callstack 0
   439  0000DF                     	ds	544
   440                           
   441                           	psect	cstackBANK0
   442  0000CE                     __pcstackBANK0:
   443                           	opt callstack 0
   444  0000CE                     TRM_DataTransmition@canMessage:
   445                           	opt callstack 0
   446                           
   447                           ; 17 bytes @ 0x0
   448  0000CE                     	ds	17
   449                           
   450                           	psect	cstackCOMRAM
   451  000025                     __pcstackCOMRAM:
   452                           	opt callstack 0
   453  000025                     TMR1_Timer_reset@t1L:
   454                           	opt callstack 0
   455  000025                     i1TMR1_Update_flag_Set@a:
   456                           	opt callstack 0
   457                           
   458                           ; 2 bytes @ 0x0
   459  000025                     	ds	1
   460  000026                     TMR1_Timer_reset@t1H:
   461                           	opt callstack 0
   462                           
   463                           ; 1 bytes @ 0x1
   464  000026                     	ds	1
   465  000027                     ??_ISR_low:
   466  000027                     
   467                           ; 1 bytes @ 0x2
   468  000027                     	ds	3
   469  00002A                     ??_CAN_Setup:
   470  00002A                     ?_TMR1_Update_flag_Get:
   471                           	opt callstack 0
   472  00002A                     ?_LED_Right:
   473                           	opt callstack 0
   474  00002A                     ?_LED_Left:
   475                           	opt callstack 0
   476  00002A                     ?_MOC_Wynikowa_wartosc_roznicowa:
   477                           	opt callstack 0
   478  00002A                     ?_MOC_Frame_Counter:
   479                           	opt callstack 0
   480  00002A                     ?_MOC_Aktualna_Temperatura:
   481                           	opt callstack 0
   482  00002A                     ?_MOC_NOTWORK:
   483                           	opt callstack 0
   484  00002A                     ?_IsInNeighbors:
   485                           	opt callstack 0
   486  00002A                     ?_MOCK_PrzyspieszenieX:
   487                           	opt callstack 0
   488  00002A                     ?_MOCK_PrzyspieszenieY:
   489                           	opt callstack 0
   490  00002A                     ?_MOCK_PrzyspieszenieZ:
   491                           	opt callstack 0
   492  00002A                     ?_MOCK_Klikniecie_Spadek:
   493                           	opt callstack 0
   494  00002A                     ?___awdiv:
   495                           	opt callstack 0
   496  00002A                     ?___lwdiv:
   497                           	opt callstack 0
   498  00002A                     LOCK_Set@k:
   499                           	opt callstack 0
   500  00002A                     CAN_MoveBuffIntoFrame@Ram:
   501                           	opt callstack 0
   502  00002A                     CAN_GenID@message:
   503                           	opt callstack 0
   504  00002A                     LED_Right@a:
   505                           	opt callstack 0
   506  00002A                     LED_Left@a:
   507                           	opt callstack 0
   508  00002A                     LED_Control@diode:
   509                           	opt callstack 0
   510  00002A                     TMR1_Update_flag_Set@a:
   511                           	opt callstack 0
   512  00002A                     IsInNeighbors@message_adress:
   513                           	opt callstack 0
   514  00002A                     FRAME_ExcitationValue@message:
   515                           	opt callstack 0
   516  00002A                     FRAME_ExcitationMultiplier@message:
   517                           	opt callstack 0
   518  00002A                     FRAME_AveragingTimes@message:
   519                           	opt callstack 0
   520  00002A                     FRAME_AxisStatus@message:
   521                           	opt callstack 0
   522  00002A                     FRAME_DataUpdateAndChangeOption@message:
   523                           	opt callstack 0
   524  00002A                     FRAME_MapPosition@message:
   525                           	opt callstack 0
   526  00002A                     FRAME_SoftwareVersion@message:
   527                           	opt callstack 0
   528  00002A                     FRAME_AnalogValue@message:
   529                           	opt callstack 0
   530  00002A                     FRAME_PrzypisanieDokarty@message:
   531                           	opt callstack 0
   532  00002A                     FRAME_AdressOfNeighbors@message:
   533                           	opt callstack 0
   534  00002A                     NVMalloc@size:
   535                           	opt callstack 0
   536  00002A                     ReadfromEEPROM@Address:
   537                           	opt callstack 0
   538  00002A                     WritetoEEPROM@Address:
   539                           	opt callstack 0
   540  00002A                     ___awdiv@dividend:
   541                           	opt callstack 0
   542  00002A                     ___lwdiv@dividend:
   543                           	opt callstack 0
   544                           
   545                           ; 2 bytes @ 0x5
   546  00002A                     	ds	2
   547  00002C                     ??_LED_Right:
   548  00002C                     ??_FRAME_DataUpdateAndChangeOption:
   549  00002C                     ??_FRAME_PrzypisanieDokarty:
   550  00002C                     CAN_GenID@frameID:
   551                           	opt callstack 0
   552  00002C                     WritetoEEPROM@Data:
   553                           	opt callstack 0
   554  00002C                     CAN_MoveBuffIntoFrame@Buf:
   555                           	opt callstack 0
   556  00002C                     LED_Left@b:
   557                           	opt callstack 0
   558  00002C                     FRAME_SensorExcitationStatus@message:
   559                           	opt callstack 0
   560  00002C                     FRAME_AccelerometerStatus@message:
   561                           	opt callstack 0
   562  00002C                     FRAME_AnalogValue@set:
   563                           	opt callstack 0
   564  00002C                     FRAME_AdressOfNeighbors@nrRamki:
   565                           	opt callstack 0
   566  00002C                     NVMalloc@location:
   567                           	opt callstack 0
   568  00002C                     NVMRead@dest:
   569                           	opt callstack 0
   570  00002C                     ___awdiv@divisor:
   571                           	opt callstack 0
   572  00002C                     ___lwdiv@divisor:
   573                           	opt callstack 0
   574                           
   575                           ; 2 bytes @ 0x7
   576  00002C                     	ds	1
   577  00002D                     ??_CAN_GenID:
   578  00002D                     FRAME_ExcitationMultiplier@i:
   579                           	opt callstack 0
   580  00002D                     NVMWrite@source:
   581                           	opt callstack 0
   582                           
   583                           ; 2 bytes @ 0x8
   584  00002D                     	ds	1
   585  00002E                     ??_FRAME_SensorExcitationStatus:
   586  00002E                     ??_FRAME_AdressOfNeighbors:
   587  00002E                     ??_NVMalloc:
   588  00002E                     CAN_MoveBuffIntoFrame@i:
   589                           	opt callstack 0
   590  00002E                     LED_Control@color:
   591                           	opt callstack 0
   592  00002E                     ___awdiv@counter:
   593                           	opt callstack 0
   594  00002E                     ___lwdiv@counter:
   595                           	opt callstack 0
   596  00002E                     LED_Right@b:
   597                           	opt callstack 0
   598  00002E                     NVMRead@addr:
   599                           	opt callstack 0
   600                           
   601                           ; 2 bytes @ 0x9
   602  00002E                     	ds	1
   603  00002F                     ___awdiv@sign:
   604                           	opt callstack 0
   605  00002F                     CAN_SendFrame@message:
   606                           	opt callstack 0
   607  00002F                     NVMWrite@addr:
   608                           	opt callstack 0
   609  00002F                     ___lwdiv@quotient:
   610                           	opt callstack 0
   611                           
   612                           ; 2 bytes @ 0xA
   613  00002F                     	ds	1
   614  000030                     NVMInit@result:
   615                           	opt callstack 0
   616  000030                     FRAME_SensorExcitationStatus@tru:
   617                           	opt callstack 0
   618  000030                     NVMRead@count:
   619                           	opt callstack 0
   620  000030                     ___awdiv@quotient:
   621                           	opt callstack 0
   622                           
   623                           ; 2 bytes @ 0xB
   624  000030                     	ds	1
   625  000031                     ??_CAN_SendFrame:
   626  000031                     LED_Light_Pos@pos:
   627                           	opt callstack 0
   628  000031                     FRAME_Plot@message:
   629                           	opt callstack 0
   630  000031                     NVMWrite@count:
   631                           	opt callstack 0
   632                           
   633                           ; 2 bytes @ 0xC
   634  000031                     	ds	1
   635  000032                     CAN_TakeFrame@message:
   636                           	opt callstack 0
   637  000032                     FRAME_AdressOfNeighbors@kier:
   638                           	opt callstack 0
   639                           
   640                           ; 2 bytes @ 0xD
   641  000032                     	ds	1
   642  000033                     ??_FRAME_Plot:
   643  000033                     LED_Light_Pos@fulfillment:
   644                           	opt callstack 0
   645  000033                     FRAME_DeviceReset@message:
   646                           	opt callstack 0
   647                           
   648                           ; 2 bytes @ 0xE
   649  000033                     	ds	1
   650  000034                     ??_CAN_TakeFrame:
   651                           
   652                           ; 1 bytes @ 0xF
   653  000034                     	ds	1
   654  000035                     LED_Light_Pos@color:
   655                           	opt callstack 0
   656                           
   657                           ; 1 bytes @ 0x10
   658  000035                     	ds	1
   659  000036                     CAN_TakeFrame@tempCON:
   660                           	opt callstack 0
   661  000036                     LED_Light_Pos@LED_array:
   662                           	opt callstack 0
   663  000036                     FRAME_HandleCanFrame@message:
   664                           	opt callstack 0
   665                           
   666                           ; 2 bytes @ 0x11
   667  000036                     	ds	1
   668  000037                     CAN_TakeFrame@k:
   669                           	opt callstack 0
   670                           
   671                           ; 1 bytes @ 0x12
   672  000037                     	ds	1
   673  000038                     ??_FRAME_HandleCanFrame:
   674  000038                     LED_Light_Pos@pos2:
   675                           	opt callstack 0
   676                           
   677                           ; 2 bytes @ 0x13
   678  000038                     	ds	2
   679  00003A                     LED_Light_Pos@flage:
   680                           	opt callstack 0
   681                           
   682                           ; 2 bytes @ 0x15
   683  00003A                     	ds	2
   684  00003C                     FRAME_HandleCanFrame@ident:
   685                           	opt callstack 0
   686                           
   687                           ; 2 bytes @ 0x17
   688  00003C                     	ds	2
   689  00003E                     FRAME_HandleCanFrame@identyfikator:
   690                           	opt callstack 0
   691                           
   692                           ; 1 bytes @ 0x19
   693  00003E                     	ds	1
   694  00003F                     
   695                           ; 1 bytes @ 0x1A
   696 ;;
   697 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   698 ;;
   699 ;; *************** function _main *****************
   700 ;; Defined at:
   701 ;;		line 97 in file "main.c"
   702 ;; Parameters:    Size  Location     Type
   703 ;;		None
   704 ;; Auto vars:     Size  Location     Type
   705 ;;		None
   706 ;; Return value:  Size  Location     Type
   707 ;;                  1    wreg      void 
   708 ;; Registers used:
   709 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   710 ;; Tracked objects:
   711 ;;		On entry : 0/0
   712 ;;		On exit  : 0/0
   713 ;;		Unchanged: 0/0
   714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   719 ;;Total ram usage:        0 bytes
   720 ;; Hardware stack levels required when called:    9
   721 ;; This function calls:
   722 ;;		_INI_All
   723 ;;		_LED_Update
   724 ;;		_TMR1_Update_flag_Get
   725 ;;		_TMR1_Update_flag_Set
   726 ;;		_TRM_DataTransmition
   727 ;; This function is called by:
   728 ;;		Startup code after reset
   729 ;; This function uses a non-reentrant model
   730 ;;
   731                           
   732                           	psect	text0
   733  0018C6                     __ptext0:
   734                           	opt callstack 0
   735  0018C6                     _main:
   736                           	opt callstack 22
   737                           
   738                           ;main.c: 99:     INI_All();
   739                           
   740                           ;incstack = 0
   741  0018C6  ECB6  F00C         	call	_INI_All	;wreg free
   742                           
   743                           ;main.c: 101:     RCON = 0xFF;
   744  0018CA  68D0               	setf	4048,c	;volatile
   745  0018CC                     l4587:
   746                           
   747                           ;main.c: 104:     {;main.c: 105:         if(DetectorLedRadar.Flags.obsluzWeWy == 1)
   748  0018CC  0100               	movlb	0	; () banked
   749  0018CE  B1CB               	btfsc	_DetectorLedRadar& (0+255),0,b
   750                           
   751                           ; BSR set to: 0
   752                           ;main.c: 106:         {;main.c: 107:             DetectorLedRadar.Flags.obsluzWeWy = 0;
   753  0018D0  91CB               	bcf	_DetectorLedRadar& (0+255),0,b
   754                           
   755                           ; BSR set to: 0
   756                           ;main.c: 111:         if(TMR1_Update_flag_Get()==1)
   757  0018D2  EC33  F00D         	call	_TMR1_Update_flag_Get	;wreg free
   758  0018D6  042A               	decf	?_TMR1_Update_flag_Get,w,c
   759  0018D8  102B               	iorwf	?_TMR1_Update_flag_Get+1,w,c
   760  0018DA  A4D8               	btfss	status,2,c
   761  0018DC  D008               	goto	l4597
   762                           
   763                           ;main.c: 112:         {;main.c: 113:             LED_Update();
   764  0018DE  ECDE  F008         	call	_LED_Update	;wreg free
   765                           
   766                           ;main.c: 114:             TMR1_Update_flag_Set(0);
   767  0018E2  0E00               	movlw	0
   768  0018E4  6E2B               	movwf	TMR1_Update_flag_Set@a+1,c
   769  0018E6  0E00               	movlw	0
   770  0018E8  6E2A               	movwf	TMR1_Update_flag_Set@a,c
   771  0018EA  EC2E  F00D         	call	_TMR1_Update_flag_Set	;wreg free
   772  0018EE                     l4597:
   773                           
   774                           ;main.c: 119:         TRM_DataTransmition();
   775  0018EE  EC04  F00B         	call	_TRM_DataTransmition	;wreg free
   776  0018F2  0004               	clrwdt		;# 
   777                           
   778                           ;main.c: 121:     }
   779  0018F4  D7EB               	goto	l4587
   780  0018F6                     __end_of_main:
   781                           	opt callstack 0
   782                           
   783 ;; *************** function _TRM_DataTransmition *****************
   784 ;; Defined at:
   785 ;;		line 19 in file "TRM.c"
   786 ;; Parameters:    Size  Location     Type
   787 ;;		None
   788 ;; Auto vars:     Size  Location     Type
   789 ;;  canMessage     17    0[BANK0 ] struct .
   790 ;;  i               1    0        unsigned char 
   791 ;; Return value:  Size  Location     Type
   792 ;;                  1    wreg      void 
   793 ;; Registers used:
   794 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   795 ;; Tracked objects:
   796 ;;		On entry : 0/0
   797 ;;		On exit  : 0/0
   798 ;;		Unchanged: 0/0
   799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   801 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
   802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   803 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
   804 ;;Total ram usage:       17 bytes
   805 ;; Hardware stack levels used:    1
   806 ;; Hardware stack levels required when called:    8
   807 ;; This function calls:
   808 ;;		_CAN_TakeFrame
   809 ;;		_FRAME_HandleCanFrame
   810 ;; This function is called by:
   811 ;;		_main
   812 ;; This function uses a non-reentrant model
   813 ;;
   814                           
   815                           	psect	text1
   816  001608                     __ptext1:
   817                           	opt callstack 0
   818  001608                     _TRM_DataTransmition:
   819                           	opt callstack 22
   820                           
   821                           ;TRM.c: 21:     static BYTE weWyU8 = 0, czujnikWeWyU8 = 0;;TRM.c: 22:     BYTE i;;TRM.c:
      +                           23:     mID canMessage;;TRM.c: 26:     if(DaneCan.Flags.wyslijRamkeStanu)
   822                           
   823                           ;incstack = 0
   824  001608  A001               	btfss	_DaneCan,0,c
   825  00160A  D014               	goto	l4573
   826                           
   827                           ;TRM.c: 27:     {;TRM.c: 29:         canMessage.message_type = 0x02;
   828  00160C  0E02               	movlw	2
   829  00160E  0100               	movlb	0	; () banked
   830  001610  6FCF               	movwf	(TRM_DataTransmition@canMessage+1)& (0+255),b
   831                           
   832                           ;TRM.c: 30:         canMessage.id.Val = 0;
   833  001612  0E00               	movlw	0
   834  001614  6FD2               	movwf	(TRM_DataTransmition@canMessage+4)& (0+255),b
   835  001616  0E00               	movlw	0
   836  001618  6FD3               	movwf	(TRM_DataTransmition@canMessage+5)& (0+255),b
   837  00161A  0E00               	movlw	0
   838  00161C  6FD4               	movwf	(TRM_DataTransmition@canMessage+6)& (0+255),b
   839  00161E  0E00               	movlw	0
   840  001620  6FD5               	movwf	(TRM_DataTransmition@canMessage+7)& (0+255),b
   841                           
   842                           ;TRM.c: 31:         canMessage.id.v[2] = 0x01 *4;
   843  001622  0E04               	movlw	4
   844  001624  6FD4               	movwf	(TRM_DataTransmition@canMessage+6)& (0+255),b
   845                           
   846                           ; BSR set to: 0
   847                           ;TRM.c: 32:         FRAME_HandleCanFrame(&canMessage);
   848  001626  0ECE               	movlw	low TRM_DataTransmition@canMessage
   849  001628  6E36               	movwf	FRAME_HandleCanFrame@message,c
   850  00162A  0E00               	movlw	high TRM_DataTransmition@canMessage
   851  00162C  6E37               	movwf	FRAME_HandleCanFrame@message+1,c
   852  00162E  ECD5  F002         	call	_FRAME_HandleCanFrame	;wreg free
   853                           
   854                           ;TRM.c: 49:         DaneCan.Flags.wyslijRamkeStanu = 0;
   855  001632  9001               	bcf	_DaneCan,0,c
   856  001634                     l4573:
   857                           
   858                           ;TRM.c: 59:     if(CAN_TakeFrame(&canMessage))
   859  001634  0ECE               	movlw	low TRM_DataTransmition@canMessage
   860  001636  6E32               	movwf	CAN_TakeFrame@message,c
   861  001638  0E00               	movlw	high TRM_DataTransmition@canMessage
   862  00163A  6E33               	movwf	CAN_TakeFrame@message+1,c
   863  00163C  EC97  F001         	call	_CAN_TakeFrame	;wreg free
   864  001640  0900               	iorlw	0
   865  001642  B4D8               	btfsc	status,2,c
   866  001644  0012               	return	
   867                           
   868                           ;TRM.c: 64:         {;TRM.c: 66:             FRAME_HandleCanFrame(&canMessage);
   869  001646  0ECE               	movlw	low TRM_DataTransmition@canMessage
   870  001648  6E36               	movwf	FRAME_HandleCanFrame@message,c
   871  00164A  0E00               	movlw	high TRM_DataTransmition@canMessage
   872  00164C  6E37               	movwf	FRAME_HandleCanFrame@message+1,c
   873  00164E  ECD5  F002         	call	_FRAME_HandleCanFrame	;wreg free
   874                           
   875                           ;TRM.c: 67:         }
   876  001652  0012               	return		;funcret
   877  001654                     __end_of_TRM_DataTransmition:
   878                           	opt callstack 0
   879                           
   880 ;; *************** function _FRAME_HandleCanFrame *****************
   881 ;; Defined at:
   882 ;;		line 650 in file "FRAME.c"
   883 ;; Parameters:    Size  Location     Type
   884 ;;  message         2   17[COMRAM] PTR struct .
   885 ;;		 -> TRM_DataTransmition@canMessage(17), 
   886 ;; Auto vars:     Size  Location     Type
   887 ;;  ident           2   23[COMRAM] unsigned short 
   888 ;;  alfa            2    0        int 
   889 ;;  identyfikato    1   25[COMRAM] unsigned char 
   890 ;; Return value:  Size  Location     Type
   891 ;;                  1    wreg      void 
   892 ;; Registers used:
   893 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   894 ;; Tracked objects:
   895 ;;		On entry : 0/0
   896 ;;		On exit  : 0/0
   897 ;;		Unchanged: 0/0
   898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   899 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   900 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   901 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   902 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   903 ;;Total ram usage:        9 bytes
   904 ;; Hardware stack levels used:    1
   905 ;; Hardware stack levels required when called:    7
   906 ;; This function calls:
   907 ;;		_CAN_GenID
   908 ;;		_CAN_SendFrame
   909 ;;		_FRAME_AccelerometerStatus
   910 ;;		_FRAME_AdressOfNeighbors
   911 ;;		_FRAME_AnalogValue
   912 ;;		_FRAME_AveragingTimes
   913 ;;		_FRAME_AxisStatus
   914 ;;		_FRAME_DeviceReset
   915 ;;		_FRAME_ExcitationMultiplier
   916 ;;		_FRAME_ExcitationValue
   917 ;;		_FRAME_MapPosition
   918 ;;		_FRAME_Plot
   919 ;;		_FRAME_PrzypisanieDokarty
   920 ;;		_FRAME_SensorExcitationStatus
   921 ;;		_FRAME_SoftwareVersion
   922 ;;		_LED_Error
   923 ;;		___awdiv
   924 ;; This function is called by:
   925 ;;		_TRM_DataTransmition
   926 ;; This function uses a non-reentrant model
   927 ;;
   928                           
   929                           	psect	text2
   930  0005AA                     __ptext2:
   931                           	opt callstack 0
   932  0005AA                     _FRAME_HandleCanFrame:
   933                           	opt callstack 22
   934                           
   935                           ;FRAME.c: 650: void FRAME_HandleCanFrame(mID * message);FRAME.c: 651: {;FRAME.c: 652:   
      +                            BYTE identyfikator = (BYTE) message->id.v[2]/4;
   936                           
   937                           ;incstack = 0
   938  0005AA  EE20 F006          	lfsr	2,6
   939  0005AE  5036               	movf	FRAME_HandleCanFrame@message,w,c
   940  0005B0  26D9               	addwf	fsr2l,f,c
   941  0005B2  5037               	movf	FRAME_HandleCanFrame@message+1,w,c
   942  0005B4  22DA               	addwfc	fsr2h,f,c
   943  0005B6  50DF               	movf	indf2,w,c
   944  0005B8  6E38               	movwf	??_FRAME_HandleCanFrame& (0+255),c
   945  0005BA  5038               	movf	??_FRAME_HandleCanFrame,w,c
   946  0005BC  6E2A               	movwf	___awdiv@dividend,c
   947  0005BE  6A2B               	clrf	___awdiv@dividend+1,c
   948  0005C0  0E00               	movlw	0
   949  0005C2  6E2D               	movwf	___awdiv@divisor+1,c
   950  0005C4  0E04               	movlw	4
   951  0005C6  6E2C               	movwf	___awdiv@divisor,c
   952  0005C8  EC9C  F008         	call	___awdiv	;wreg free
   953  0005CC  502A               	movf	?___awdiv,w,c
   954  0005CE  6E3E               	movwf	FRAME_HandleCanFrame@identyfikator,c
   955                           
   956                           ;FRAME.c: 655:     if(identyfikator != 0x01)
   957  0005D0  043E               	decf	FRAME_HandleCanFrame@identyfikator,w,c
   958  0005D2  B4D8               	btfsc	status,2,c
   959  0005D4  D074               	goto	l4523
   960                           
   961                           ;FRAME.c: 656:     {;FRAME.c: 657:         WORD ident = identyfikator;
   962  0005D6  C03E  F03C         	movff	FRAME_HandleCanFrame@identyfikator,FRAME_HandleCanFrame@ident
   963  0005DA  6A3D               	clrf	FRAME_HandleCanFrame@ident+1,c
   964  0005DC  D070               	goto	l4523
   965  0005DE                     l4493:
   966                           
   967                           ;FRAME.c: 664:             FRAME_SensorExcitationStatus(message);
   968  0005DE  C036  F02C         	movff	FRAME_HandleCanFrame@message,FRAME_SensorExcitationStatus@message
   969  0005E2  C037  F02D         	movff	FRAME_HandleCanFrame@message+1,FRAME_SensorExcitationStatus@message+1
   970  0005E6  ECDD  F005         	call	_FRAME_SensorExcitationStatus	;wreg free
   971                           
   972                           ;FRAME.c: 665:             break;
   973  0005EA  D09E               	goto	l4525
   974  0005EC                     l4495:
   975                           
   976                           ;FRAME.c: 667:             FRAME_AccelerometerStatus(message);
   977  0005EC  C036  F02C         	movff	FRAME_HandleCanFrame@message,FRAME_AccelerometerStatus@message
   978  0005F0  C037  F02D         	movff	FRAME_HandleCanFrame@message+1,FRAME_AccelerometerStatus@message+1
   979  0005F4  EC57  F009         	call	_FRAME_AccelerometerStatus	;wreg free
   980                           
   981                           ;FRAME.c: 668:             break;
   982  0005F8  D097               	goto	l4525
   983  0005FA                     l4497:
   984                           
   985                           ;FRAME.c: 670:             FRAME_ExcitationValue(message);
   986  0005FA  C036  F02A         	movff	FRAME_HandleCanFrame@message,FRAME_ExcitationValue@message
   987  0005FE  C037  F02B         	movff	FRAME_HandleCanFrame@message+1,FRAME_ExcitationValue@message+1
   988  000602  EC8E  F00B         	call	_FRAME_ExcitationValue	;wreg free
   989                           
   990                           ;FRAME.c: 671:             break;
   991  000606  D090               	goto	l4525
   992  000608                     l4499:
   993                           
   994                           ;FRAME.c: 673:             FRAME_ExcitationMultiplier(message);
   995  000608  C036  F02A         	movff	FRAME_HandleCanFrame@message,FRAME_ExcitationMultiplier@message
   996  00060C  C037  F02B         	movff	FRAME_HandleCanFrame@message+1,FRAME_ExcitationMultiplier@message+1
   997  000610  ECDD  F00A         	call	_FRAME_ExcitationMultiplier	;wreg free
   998                           
   999                           ;FRAME.c: 674:             break;
  1000  000614  D089               	goto	l4525
  1001  000616                     l4501:
  1002                           
  1003                           ;FRAME.c: 676:             FRAME_AveragingTimes(message);
  1004  000616  C036  F02A         	movff	FRAME_HandleCanFrame@message,FRAME_AveragingTimes@message
  1005  00061A  C037  F02B         	movff	FRAME_HandleCanFrame@message+1,FRAME_AveragingTimes@message+1
  1006  00061E  ECDF  F00B         	call	_FRAME_AveragingTimes	;wreg free
  1007                           
  1008                           ;FRAME.c: 677:             break;
  1009  000622  D082               	goto	l4525
  1010  000624                     l4503:
  1011                           
  1012                           ;FRAME.c: 679:             FRAME_AxisStatus(message);
  1013  000624  C036  F02A         	movff	FRAME_HandleCanFrame@message,FRAME_AxisStatus@message
  1014  000628  C037  F02B         	movff	FRAME_HandleCanFrame@message+1,FRAME_AxisStatus@message+1
  1015  00062C  ECC4  F00B         	call	_FRAME_AxisStatus	;wreg free
  1016                           
  1017                           ;FRAME.c: 680:             break;
  1018  000630  D07B               	goto	l4525
  1019  000632                     l4505:
  1020                           
  1021                           ;FRAME.c: 682:             FRAME_DeviceReset(message);
  1022  000632  C036  F033         	movff	FRAME_HandleCanFrame@message,FRAME_DeviceReset@message
  1023  000636  C037  F034         	movff	FRAME_HandleCanFrame@message+1,FRAME_DeviceReset@message+1
  1024  00063A  EC3A  F005         	call	_FRAME_DeviceReset	;wreg free
  1025                           
  1026                           ;FRAME.c: 683:             break;
  1027  00063E  D074               	goto	l4525
  1028  000640                     l4507:
  1029                           
  1030                           ;FRAME.c: 685:             FRAME_Plot(message);
  1031  000640  C036  F031         	movff	FRAME_HandleCanFrame@message,FRAME_Plot@message
  1032  000644  C037  F032         	movff	FRAME_HandleCanFrame@message+1,FRAME_Plot@message+1
  1033  000648  EC88  F00A         	call	_FRAME_Plot	;wreg free
  1034                           
  1035                           ;FRAME.c: 686:             break;
  1036  00064C  D06D               	goto	l4525
  1037  00064E                     l4509:
  1038                           
  1039                           ;FRAME.c: 688:             FRAME_MapPosition(message);
  1040  00064E  C036  F02A         	movff	FRAME_HandleCanFrame@message,FRAME_MapPosition@message
  1041  000652  C037  F02B         	movff	FRAME_HandleCanFrame@message+1,FRAME_MapPosition@message+1
  1042  000656  EC4A  F00D         	call	_FRAME_MapPosition	;wreg free
  1043                           
  1044                           ;FRAME.c: 689:             break;
  1045  00065A  D066               	goto	l4525
  1046  00065C                     l4511:
  1047                           
  1048                           ;FRAME.c: 691:             FRAME_SoftwareVersion(message);
  1049  00065C  C036  F02A         	movff	FRAME_HandleCanFrame@message,FRAME_SoftwareVersion@message
  1050  000660  C037  F02B         	movff	FRAME_HandleCanFrame@message+1,FRAME_SoftwareVersion@message+1
  1051  000664  ECC9  F009         	call	_FRAME_SoftwareVersion	;wreg free
  1052                           
  1053                           ;FRAME.c: 692:             break;
  1054  000668  D05F               	goto	l4525
  1055  00066A                     l4513:
  1056                           
  1057                           ;FRAME.c: 695:             FRAME_AnalogValue(message, identyfikator - 0x0C);
  1058  00066A  C036  F02A         	movff	FRAME_HandleCanFrame@message,FRAME_AnalogValue@message
  1059  00066E  C037  F02B         	movff	FRAME_HandleCanFrame@message+1,FRAME_AnalogValue@message+1
  1060  000672  0EF4               	movlw	244
  1061  000674  243E               	addwf	FRAME_HandleCanFrame@identyfikator,w,c
  1062  000676  6E2C               	movwf	FRAME_AnalogValue@set,c
  1063  000678  6A2D               	clrf	FRAME_AnalogValue@set+1,c
  1064  00067A  0EFF               	movlw	255
  1065  00067C  222D               	addwfc	FRAME_AnalogValue@set+1,f,c
  1066  00067E  EC4B  F00D         	call	_FRAME_AnalogValue	;wreg free
  1067                           
  1068                           ;FRAME.c: 696:             break;
  1069  000682  D052               	goto	l4525
  1070  000684                     l4515:
  1071                           
  1072                           ;FRAME.c: 698:             FRAME_PrzypisanieDokarty(message);
  1073  000684  C036  F02A         	movff	FRAME_HandleCanFrame@message,FRAME_PrzypisanieDokarty@message
  1074  000688  C037  F02B         	movff	FRAME_HandleCanFrame@message+1,FRAME_PrzypisanieDokarty@message+1
  1075  00068C  EC02  F008         	call	_FRAME_PrzypisanieDokarty	;wreg free
  1076                           
  1077                           ;FRAME.c: 699:             break;
  1078  000690  D04B               	goto	l4525
  1079  000692                     l4517:
  1080                           
  1081                           ;FRAME.c: 701:             FRAME_AdressOfNeighbors(message,0x10);
  1082  000692  C036  F02A         	movff	FRAME_HandleCanFrame@message,FRAME_AdressOfNeighbors@message
  1083  000696  C037  F02B         	movff	FRAME_HandleCanFrame@message+1,FRAME_AdressOfNeighbors@message+1
  1084  00069A  0E00               	movlw	0
  1085  00069C  6E2D               	movwf	FRAME_AdressOfNeighbors@nrRamki+1,c
  1086  00069E  0E10               	movlw	16
  1087  0006A0  6E2C               	movwf	FRAME_AdressOfNeighbors@nrRamki,c
  1088  0006A2  EC31  F000         	call	_FRAME_AdressOfNeighbors	;wreg free
  1089                           
  1090                           ;FRAME.c: 702:             break;
  1091  0006A6  D040               	goto	l4525
  1092  0006A8                     l4519:
  1093                           
  1094                           ;FRAME.c: 704:             FRAME_AdressOfNeighbors(message,0x11);
  1095  0006A8  C036  F02A         	movff	FRAME_HandleCanFrame@message,FRAME_AdressOfNeighbors@message
  1096  0006AC  C037  F02B         	movff	FRAME_HandleCanFrame@message+1,FRAME_AdressOfNeighbors@message+1
  1097  0006B0  0E00               	movlw	0
  1098  0006B2  6E2D               	movwf	FRAME_AdressOfNeighbors@nrRamki+1,c
  1099  0006B4  0E11               	movlw	17
  1100  0006B6  6E2C               	movwf	FRAME_AdressOfNeighbors@nrRamki,c
  1101  0006B8  EC31  F000         	call	_FRAME_AdressOfNeighbors	;wreg free
  1102                           
  1103                           ;FRAME.c: 705:             break;
  1104  0006BC  D035               	goto	l4525
  1105  0006BE                     l4523:
  1106  0006BE  503E               	movf	FRAME_HandleCanFrame@identyfikator,w,c
  1107  0006C0  6E38               	movwf	??_FRAME_HandleCanFrame& (0+255),c
  1108  0006C2  6A39               	clrf	(??_FRAME_HandleCanFrame+1)& (0+255),c
  1109                           
  1110                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1111                           ; Switch size 1, requested type "simple"
  1112                           ; Number of cases is 1, Range of values is 0 to 0
  1113                           ; switch strategies available:
  1114                           ; Name         Instructions Cycles
  1115                           ; simple_byte            4     3 (average)
  1116                           ;	Chosen strategy is simple_byte
  1117  0006C4  5039               	movf	??_FRAME_HandleCanFrame+1,w,c
  1118  0006C6  0A00               	xorlw	0	; case 0
  1119  0006C8  A4D8               	btfss	status,2,c
  1120  0006CA  D02E               	goto	l4525
  1121                           
  1122                           ; Switch size 1, requested type "simple"
  1123                           ; Number of cases is 15, Range of values is 1 to 17
  1124                           ; switch strategies available:
  1125                           ; Name         Instructions Cycles
  1126                           ; simple_byte           46    24 (average)
  1127                           ;	Chosen strategy is simple_byte
  1128  0006CC  5038               	movf	??_FRAME_HandleCanFrame,w,c
  1129  0006CE  0A01               	xorlw	1	; case 1
  1130  0006D0  B4D8               	btfsc	status,2,c
  1131  0006D2  D785               	goto	l4493
  1132  0006D4  0A03               	xorlw	3	; case 2
  1133  0006D6  B4D8               	btfsc	status,2,c
  1134  0006D8  D789               	goto	l4495
  1135  0006DA  0A01               	xorlw	1	; case 3
  1136  0006DC  B4D8               	btfsc	status,2,c
  1137  0006DE  D78D               	goto	l4497
  1138  0006E0  0A07               	xorlw	7	; case 4
  1139  0006E2  B4D8               	btfsc	status,2,c
  1140  0006E4  D791               	goto	l4499
  1141  0006E6  0A01               	xorlw	1	; case 5
  1142  0006E8  B4D8               	btfsc	status,2,c
  1143  0006EA  D795               	goto	l4501
  1144  0006EC  0A03               	xorlw	3	; case 6
  1145  0006EE  B4D8               	btfsc	status,2,c
  1146  0006F0  D799               	goto	l4503
  1147  0006F2  0A01               	xorlw	1	; case 7
  1148  0006F4  B4D8               	btfsc	status,2,c
  1149  0006F6  D79D               	goto	l4505
  1150  0006F8  0A0E               	xorlw	14	; case 9
  1151  0006FA  B4D8               	btfsc	status,2,c
  1152  0006FC  D7A1               	goto	l4507
  1153  0006FE  0A03               	xorlw	3	; case 10
  1154  000700  B4D8               	btfsc	status,2,c
  1155  000702  D7A5               	goto	l4509
  1156  000704  0A01               	xorlw	1	; case 11
  1157  000706  B4D8               	btfsc	status,2,c
  1158  000708  D7A9               	goto	l4511
  1159  00070A  0A07               	xorlw	7	; case 12
  1160  00070C  B4D8               	btfsc	status,2,c
  1161  00070E  D7AD               	goto	l4513
  1162  000710  0A01               	xorlw	1	; case 13
  1163  000712  B4D8               	btfsc	status,2,c
  1164  000714  D7AA               	goto	l4513
  1165  000716  0A02               	xorlw	2	; case 15
  1166  000718  B4D8               	btfsc	status,2,c
  1167  00071A  D7B4               	goto	l4515
  1168  00071C  0A1F               	xorlw	31	; case 16
  1169  00071E  B4D8               	btfsc	status,2,c
  1170  000720  D7B8               	goto	l4517
  1171  000722  0A01               	xorlw	1	; case 17
  1172  000724  B4D8               	btfsc	status,2,c
  1173  000726  D7C0               	goto	l4519
  1174  000728                     l4525:
  1175                           
  1176                           ;FRAME.c: 714:     if(message->message_type == 0x02)
  1177  000728  EE20 F001          	lfsr	2,1
  1178  00072C  5036               	movf	FRAME_HandleCanFrame@message,w,c
  1179  00072E  26D9               	addwf	fsr2l,f,c
  1180  000730  5037               	movf	FRAME_HandleCanFrame@message+1,w,c
  1181  000732  22DA               	addwfc	fsr2h,f,c
  1182  000734  0E02               	movlw	2
  1183  000736  18DE               	xorwf	postinc2,w,c
  1184  000738  A4D8               	btfss	status,2,c
  1185  00073A  0012               	return	
  1186                           
  1187                           ;FRAME.c: 715:     {;FRAME.c: 717:         message->frame_type = 0x03;
  1188  00073C  EE20 F002          	lfsr	2,2
  1189  000740  5036               	movf	FRAME_HandleCanFrame@message,w,c
  1190  000742  26D9               	addwf	fsr2l,f,c
  1191  000744  5037               	movf	FRAME_HandleCanFrame@message+1,w,c
  1192  000746  22DA               	addwfc	fsr2h,f,c
  1193  000748  0E03               	movlw	3
  1194  00074A  6EDF               	movwf	indf2,c
  1195                           
  1196                           ;FRAME.c: 718:         message->message_type = 0x01;
  1197  00074C  EE20 F001          	lfsr	2,1
  1198  000750  5036               	movf	FRAME_HandleCanFrame@message,w,c
  1199  000752  26D9               	addwf	fsr2l,f,c
  1200  000754  5037               	movf	FRAME_HandleCanFrame@message+1,w,c
  1201  000756  22DA               	addwfc	fsr2h,f,c
  1202  000758  0E01               	movlw	1
  1203  00075A  6EDF               	movwf	indf2,c
  1204                           
  1205                           ;FRAME.c: 719:         message->id.Val = 0;
  1206  00075C  EE20 F004          	lfsr	2,4
  1207  000760  5036               	movf	FRAME_HandleCanFrame@message,w,c
  1208  000762  26D9               	addwf	fsr2l,f,c
  1209  000764  5037               	movf	FRAME_HandleCanFrame@message+1,w,c
  1210  000766  22DA               	addwfc	fsr2h,f,c
  1211  000768  6ADE               	clrf	postinc2,c
  1212  00076A  6ADE               	clrf	postinc2,c
  1213  00076C  6ADE               	clrf	postinc2,c
  1214  00076E  6ADD               	clrf	postdec2,c
  1215                           
  1216                           ;FRAME.c: 721:         message->id.v[2] = identyfikator*4;
  1217  000770  503E               	movf	FRAME_HandleCanFrame@identyfikator,w,c
  1218  000772  0D04               	mullw	4
  1219  000774  EE20 F006          	lfsr	2,6
  1220  000778  5036               	movf	FRAME_HandleCanFrame@message,w,c
  1221  00077A  26D9               	addwf	fsr2l,f,c
  1222  00077C  5037               	movf	FRAME_HandleCanFrame@message+1,w,c
  1223  00077E  22DA               	addwfc	fsr2h,f,c
  1224  000780  CFF3 FFDF          	movff	prodl,indf2
  1225                           
  1226                           ;FRAME.c: 722:         CAN_GenID(message,identyfikator);
  1227  000784  C036  F02A         	movff	FRAME_HandleCanFrame@message,CAN_GenID@message
  1228  000788  C037  F02B         	movff	FRAME_HandleCanFrame@message+1,CAN_GenID@message+1
  1229  00078C  C03E  F02C         	movff	FRAME_HandleCanFrame@identyfikator,CAN_GenID@frameID
  1230  000790  EC1B  F009         	call	_CAN_GenID	;wreg free
  1231                           
  1232                           ;FRAME.c: 723:         CAN_SendFrame(message);
  1233  000794  C036  F02F         	movff	FRAME_HandleCanFrame@message,CAN_SendFrame@message
  1234  000798  C037  F030         	movff	FRAME_HandleCanFrame@message+1,CAN_SendFrame@message+1
  1235  00079C  ECD8  F003         	call	_CAN_SendFrame	;wreg free
  1236                           
  1237                           ;FRAME.c: 734:        while(RXB0CONbits.FILHIT3)
  1238  0007A0  D004               	goto	l688
  1239  0007A2                     l689:
  1240                           
  1241                           ;FRAME.c: 735:        {;FRAME.c: 736:            if(TXB0CONbits.TXERR == 1){
  1242  0007A2  010F               	movlb	15	; () banked
  1243  0007A4  B940               	btfsc	64,4,b	;volatile
  1244                           
  1245                           ; BSR set to: 15
  1246                           ;FRAME.c: 737:                LED_Error();
  1247  0007A6  ECD7  F00C         	call	_LED_Error	;wreg free
  1248  0007AA                     l688:
  1249                           
  1250                           ;FRAME.c: 734:        while(RXB0CONbits.FILHIT3)
  1251  0007AA  A660               	btfss	3936,3,c	;volatile
  1252  0007AC  0012               	return	
  1253  0007AE  D7F9               	goto	l689
  1254  0007B0                     __end_of_FRAME_HandleCanFrame:
  1255                           	opt callstack 0
  1256                           
  1257 ;; *************** function _LED_Error *****************
  1258 ;; Defined at:
  1259 ;;		line 37 in file "LED.c"
  1260 ;; Parameters:    Size  Location     Type
  1261 ;;		None
  1262 ;; Auto vars:     Size  Location     Type
  1263 ;;		None
  1264 ;; Return value:  Size  Location     Type
  1265 ;;                  2  356[None  ] unsigned int 
  1266 ;; Registers used:
  1267 ;;		wreg, status,2, status,0, cstack
  1268 ;; Tracked objects:
  1269 ;;		On entry : 0/0
  1270 ;;		On exit  : 0/0
  1271 ;;		Unchanged: 0/0
  1272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1277 ;;Total ram usage:        0 bytes
  1278 ;; Hardware stack levels used:    1
  1279 ;; Hardware stack levels required when called:    4
  1280 ;; This function calls:
  1281 ;;		_LED_Control
  1282 ;; This function is called by:
  1283 ;;		_FRAME_HandleCanFrame
  1284 ;; This function uses a non-reentrant model
  1285 ;;
  1286                           
  1287                           	psect	text3
  1288  0019AE                     __ptext3:
  1289                           	opt callstack 0
  1290  0019AE                     _LED_Error:
  1291                           	opt callstack 24
  1292                           
  1293                           ;LED.c: 39:     LED_Control(RED,0b1010101010);
  1294                           
  1295                           ;incstack = 0
  1296  0019AE  0E02               	movlw	2
  1297  0019B0  6E2B               	movwf	LED_Control@diode+1,c
  1298  0019B2  0EAA               	movlw	170
  1299  0019B4  6E2A               	movwf	LED_Control@diode,c
  1300  0019B6  0E00               	movlw	0
  1301  0019B8  EC91  F004         	call	_LED_Control
  1302                           
  1303                           ;LED.c: 40:     LED_Control(GREEN,0b0000000000);
  1304  0019BC  0E00               	movlw	0
  1305  0019BE  6E2B               	movwf	LED_Control@diode+1,c
  1306  0019C0  0E00               	movlw	0
  1307  0019C2  6E2A               	movwf	LED_Control@diode,c
  1308  0019C4  0E01               	movlw	1
  1309  0019C6  EC91  F004         	call	_LED_Control
  1310  0019CA  0012               	return		;funcret
  1311  0019CC                     __end_of_LED_Error:
  1312                           	opt callstack 0
  1313                           
  1314 ;; *************** function _FRAME_SoftwareVersion *****************
  1315 ;; Defined at:
  1316 ;;		line 484 in file "FRAME.c"
  1317 ;; Parameters:    Size  Location     Type
  1318 ;;  message         2    5[COMRAM] PTR struct .
  1319 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1320 ;; Auto vars:     Size  Location     Type
  1321 ;;		None
  1322 ;; Return value:  Size  Location     Type
  1323 ;;                  1    wreg      void 
  1324 ;; Registers used:
  1325 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1326 ;; Tracked objects:
  1327 ;;		On entry : 0/0
  1328 ;;		On exit  : 0/0
  1329 ;;		Unchanged: 0/0
  1330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1331 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1333 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1334 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1335 ;;Total ram usage:        3 bytes
  1336 ;; Hardware stack levels used:    1
  1337 ;; Hardware stack levels required when called:    3
  1338 ;; This function calls:
  1339 ;;		Nothing
  1340 ;; This function is called by:
  1341 ;;		_FRAME_HandleCanFrame
  1342 ;; This function uses a non-reentrant model
  1343 ;;
  1344                           
  1345                           	psect	text4
  1346  001392                     __ptext4:
  1347                           	opt callstack 0
  1348  001392                     _FRAME_SoftwareVersion:
  1349                           	opt callstack 25
  1350                           
  1351                           ;FRAME.c: 484: static void FRAME_SoftwareVersion(mID *message);FRAME.c: 485: {;FRAME.c: 
      +                          487:     if(message->message_type == 0x02)
  1352                           
  1353                           ;incstack = 0
  1354  001392  EE20 F001          	lfsr	2,1
  1355  001396  502A               	movf	FRAME_SoftwareVersion@message,w,c
  1356  001398  26D9               	addwf	fsr2l,f,c
  1357  00139A  502B               	movf	FRAME_SoftwareVersion@message+1,w,c
  1358  00139C  22DA               	addwfc	fsr2h,f,c
  1359  00139E  0E02               	movlw	2
  1360  0013A0  18DE               	xorwf	postinc2,w,c
  1361  0013A2  A4D8               	btfss	status,2,c
  1362  0013A4  0012               	return	
  1363                           
  1364                           ;FRAME.c: 488:     {;FRAME.c: 489:         message->data_length = 4;
  1365  0013A6  EE20 F010          	lfsr	2,16
  1366  0013AA  502A               	movf	FRAME_SoftwareVersion@message,w,c
  1367  0013AC  26D9               	addwf	fsr2l,f,c
  1368  0013AE  502B               	movf	FRAME_SoftwareVersion@message+1,w,c
  1369  0013B0  22DA               	addwfc	fsr2h,f,c
  1370  0013B2  0E04               	movlw	4
  1371  0013B4  6EDF               	movwf	indf2,c
  1372                           
  1373                           ;FRAME.c: 490:         message->data[0] = (unsigned char)(Dane->wersjaOprogramowaniaU16 
      +                          >> 8);
  1374  0013B6  EE20 F008          	lfsr	2,8
  1375  0013BA  502A               	movf	FRAME_SoftwareVersion@message,w,c
  1376  0013BC  26D9               	addwf	fsr2l,f,c
  1377  0013BE  502B               	movf	FRAME_SoftwareVersion@message+1,w,c
  1378  0013C0  22DA               	addwfc	fsr2h,f,c
  1379  0013C2  5005               	movf	5,w,c
  1380  0013C4  6EDF               	movwf	indf2,c
  1381                           
  1382                           ;FRAME.c: 491:         message->data[1] = (unsigned char)Dane->wersjaOprogramowaniaU16;
  1383  0013C6  EE20 F009          	lfsr	2,9
  1384  0013CA  502A               	movf	FRAME_SoftwareVersion@message,w,c
  1385  0013CC  26D9               	addwf	fsr2l,f,c
  1386  0013CE  502B               	movf	FRAME_SoftwareVersion@message+1,w,c
  1387  0013D0  22DA               	addwfc	fsr2h,f,c
  1388  0013D2  C004 FFDF          	movff	4,indf2
  1389                           
  1390                           ;FRAME.c: 492:         message->data[2] = (unsigned char)(Dane->wersjaSprzetuU16 >> 8);
  1391  0013D6  EE20 F00A          	lfsr	2,10
  1392  0013DA  502A               	movf	FRAME_SoftwareVersion@message,w,c
  1393  0013DC  26D9               	addwf	fsr2l,f,c
  1394  0013DE  502B               	movf	FRAME_SoftwareVersion@message+1,w,c
  1395  0013E0  22DA               	addwfc	fsr2h,f,c
  1396  0013E2  500B               	movf	11,w,c
  1397  0013E4  6EDF               	movwf	indf2,c
  1398                           
  1399                           ;FRAME.c: 493:         message->data[3] = (unsigned char)Dane->wersjaSprzetuU16;
  1400  0013E6  EE20 F00B          	lfsr	2,11
  1401  0013EA  502A               	movf	FRAME_SoftwareVersion@message,w,c
  1402  0013EC  26D9               	addwf	fsr2l,f,c
  1403  0013EE  502B               	movf	FRAME_SoftwareVersion@message+1,w,c
  1404  0013F0  22DA               	addwfc	fsr2h,f,c
  1405  0013F2  C00A FFDF          	movff	10,indf2
  1406                           
  1407                           ;FRAME.c: 494:     }
  1408  0013F6  0012               	return		;funcret
  1409  0013F8                     __end_of_FRAME_SoftwareVersion:
  1410                           	opt callstack 0
  1411                           
  1412 ;; *************** function _FRAME_SensorExcitationStatus *****************
  1413 ;; Defined at:
  1414 ;;		line 47 in file "FRAME.c"
  1415 ;; Parameters:    Size  Location     Type
  1416 ;;  message         2    7[COMRAM] PTR struct .
  1417 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1418 ;; Auto vars:     Size  Location     Type
  1419 ;;  tru             2   11[COMRAM] unsigned int 
  1420 ;; Return value:  Size  Location     Type
  1421 ;;                  1    wreg      void 
  1422 ;; Registers used:
  1423 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1424 ;; Tracked objects:
  1425 ;;		On entry : 0/0
  1426 ;;		On exit  : 0/0
  1427 ;;		Unchanged: 0/0
  1428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1429 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1430 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1431 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1432 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1433 ;;Total ram usage:        6 bytes
  1434 ;; Hardware stack levels used:    1
  1435 ;; Hardware stack levels required when called:    4
  1436 ;; This function calls:
  1437 ;;		_IsInNeighbors
  1438 ;;		_LOCK_Get
  1439 ;;		_LOCK_Set
  1440 ;;		_MOC_Aktualna_Temperatura
  1441 ;;		_MOC_Frame_Counter
  1442 ;;		_MOC_NOTWORK
  1443 ;;		_MOC_Wynikowa_wartosc_roznicowa
  1444 ;; This function is called by:
  1445 ;;		_FRAME_HandleCanFrame
  1446 ;; This function uses a non-reentrant model
  1447 ;;
  1448                           
  1449                           	psect	text5
  1450  000BBA                     __ptext5:
  1451                           	opt callstack 0
  1452  000BBA                     _FRAME_SensorExcitationStatus:
  1453                           	opt callstack 24
  1454                           
  1455                           ;FRAME.c: 47: static void FRAME_SensorExcitationStatus(mID *message);FRAME.c: 48: {;FRAM
      +                          E.c: 50:     static UINT statwect = 0b00000000;;FRAME.c: 51:     if(message->message_typ
      +                          e == 0x02)
  1456                           
  1457                           ;incstack = 0
  1458  000BBA  EE20 F001          	lfsr	2,1
  1459  000BBE  502C               	movf	FRAME_SensorExcitationStatus@message,w,c
  1460  000BC0  26D9               	addwf	fsr2l,f,c
  1461  000BC2  502D               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1462  000BC4  22DA               	addwfc	fsr2h,f,c
  1463  000BC6  0E02               	movlw	2
  1464  000BC8  18DE               	xorwf	postinc2,w,c
  1465  000BCA  A4D8               	btfss	status,2,c
  1466  000BCC  D047               	goto	l4183
  1467                           
  1468                           ;FRAME.c: 52:     {;FRAME.c: 53:         message->data_length = 6;
  1469  000BCE  EE20 F010          	lfsr	2,16
  1470  000BD2  502C               	movf	FRAME_SensorExcitationStatus@message,w,c
  1471  000BD4  26D9               	addwf	fsr2l,f,c
  1472  000BD6  502D               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1473  000BD8  22DA               	addwfc	fsr2h,f,c
  1474  000BDA  0E06               	movlw	6
  1475  000BDC  6EDF               	movwf	indf2,c
  1476                           
  1477                           ;FRAME.c: 59:         message->data[0] = LOCK_Get();
  1478  000BDE  EE20 F008          	lfsr	2,8
  1479  000BE2  502C               	movf	FRAME_SensorExcitationStatus@message,w,c
  1480  000BE4  26D9               	addwf	fsr2l,f,c
  1481  000BE6  502D               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1482  000BE8  22DA               	addwfc	fsr2h,f,c
  1483  000BEA  EC48  F00D         	call	_LOCK_Get	;wreg free
  1484  000BEE  6EDF               	movwf	indf2,c
  1485                           
  1486                           ;FRAME.c: 60:         message->data[1] = MOC_Wynikowa_wartosc_roznicowa() >> 8 ;
  1487  000BF0  EE20 F009          	lfsr	2,9
  1488  000BF4  502C               	movf	FRAME_SensorExcitationStatus@message,w,c
  1489  000BF6  26D9               	addwf	fsr2l,f,c
  1490  000BF8  502D               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1491  000BFA  22DA               	addwfc	fsr2h,f,c
  1492  000BFC  EC10  F00D         	call	_MOC_Wynikowa_wartosc_roznicowa	;wreg free
  1493  000C00  C02B  F02A         	movff	?_MOC_Wynikowa_wartosc_roznicowa+1,?_MOC_Wynikowa_wartosc_roznicowa
  1494  000C04  6A2B               	clrf	?_MOC_Wynikowa_wartosc_roznicowa+1,c
  1495  000C06  502A               	movf	?_MOC_Wynikowa_wartosc_roznicowa,w,c
  1496  000C08  6EDF               	movwf	indf2,c
  1497                           
  1498                           ;FRAME.c: 61:         message->data[2] = MOC_Wynikowa_wartosc_roznicowa() & 0x00FF;
  1499  000C0A  EE20 F00A          	lfsr	2,10
  1500  000C0E  502C               	movf	FRAME_SensorExcitationStatus@message,w,c
  1501  000C10  26D9               	addwf	fsr2l,f,c
  1502  000C12  502D               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1503  000C14  22DA               	addwfc	fsr2h,f,c
  1504  000C16  EC10  F00D         	call	_MOC_Wynikowa_wartosc_roznicowa	;wreg free
  1505  000C1A  502A               	movf	?_MOC_Wynikowa_wartosc_roznicowa,w,c
  1506  000C1C  6EDF               	movwf	indf2,c
  1507                           
  1508                           ;FRAME.c: 62:         message->data[3] = MOC_Frame_Counter();
  1509  000C1E  EE20 F00B          	lfsr	2,11
  1510  000C22  502C               	movf	FRAME_SensorExcitationStatus@message,w,c
  1511  000C24  26D9               	addwf	fsr2l,f,c
  1512  000C26  502D               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1513  000C28  22DA               	addwfc	fsr2h,f,c
  1514  000C2A  ECFB  F00C         	call	_MOC_Frame_Counter	;wreg free
  1515  000C2E  502A               	movf	?_MOC_Frame_Counter,w,c
  1516  000C30  6EDF               	movwf	indf2,c
  1517                           
  1518                           ;FRAME.c: 63:         message->data[4] = MOC_Aktualna_Temperatura();
  1519  000C32  EE20 F00C          	lfsr	2,12
  1520  000C36  502C               	movf	FRAME_SensorExcitationStatus@message,w,c
  1521  000C38  26D9               	addwf	fsr2l,f,c
  1522  000C3A  502D               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1523  000C3C  22DA               	addwfc	fsr2h,f,c
  1524  000C3E  EC15  F00D         	call	_MOC_Aktualna_Temperatura	;wreg free
  1525  000C42  502A               	movf	?_MOC_Aktualna_Temperatura,w,c
  1526  000C44  6EDF               	movwf	indf2,c
  1527                           
  1528                           ;FRAME.c: 64:         message->data[5] = MOC_NOTWORK();
  1529  000C46  EE20 F00D          	lfsr	2,13
  1530  000C4A  502C               	movf	FRAME_SensorExcitationStatus@message,w,c
  1531  000C4C  26D9               	addwf	fsr2l,f,c
  1532  000C4E  502D               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1533  000C50  22DA               	addwfc	fsr2h,f,c
  1534  000C52  EC3D  F00D         	call	_MOC_NOTWORK	;wreg free
  1535  000C56  502A               	movf	?_MOC_NOTWORK,w,c
  1536  000C58  6EDF               	movwf	indf2,c
  1537                           
  1538                           ;FRAME.c: 74:     }
  1539  000C5A  0012               	return	
  1540  000C5C                     l4183:
  1541                           
  1542                           ;FRAME.c: 76:     {;FRAME.c: 78:         UINT tru = IsInNeighbors(message->id.w[0]);
  1543  000C5C  EE20 F004          	lfsr	2,4
  1544  000C60  502C               	movf	FRAME_SensorExcitationStatus@message,w,c
  1545  000C62  26D9               	addwf	fsr2l,f,c
  1546  000C64  502D               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1547  000C66  22DA               	addwfc	fsr2h,f,c
  1548  000C68  CFDE F02A          	movff	postinc2,IsInNeighbors@message_adress
  1549  000C6C  CFDD F02B          	movff	postdec2,IsInNeighbors@message_adress+1
  1550  000C70  EC45  F007         	call	_IsInNeighbors	;wreg free
  1551  000C74  C02A  F030         	movff	?_IsInNeighbors,FRAME_SensorExcitationStatus@tru
  1552  000C78  C02B  F031         	movff	?_IsInNeighbors+1,FRAME_SensorExcitationStatus@tru+1
  1553                           
  1554                           ;FRAME.c: 81:         if(message->data[0]==0)
  1555  000C7C  EE20 F008          	lfsr	2,8
  1556  000C80  502C               	movf	FRAME_SensorExcitationStatus@message,w,c
  1557  000C82  26D9               	addwf	fsr2l,f,c
  1558  000C84  502D               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1559  000C86  22DA               	addwfc	fsr2h,f,c
  1560  000C88  50DF               	movf	indf2,w,c
  1561  000C8A  A4D8               	btfss	status,2,c
  1562  000C8C  D00A               	goto	l4189
  1563                           
  1564                           ;FRAME.c: 82:         {;FRAME.c: 84:             statwect = statwect &( ~tru );
  1565  000C8E  1C30               	comf	FRAME_SensorExcitationStatus@tru,w,c
  1566  000C90  6E2E               	movwf	??_FRAME_SensorExcitationStatus& (0+255),c
  1567  000C92  1C31               	comf	FRAME_SensorExcitationStatus@tru+1,w,c
  1568  000C94  6E2F               	movwf	(??_FRAME_SensorExcitationStatus+1)& (0+255),c
  1569  000C96  5009               	movf	FRAME_SensorExcitationStatus@statwect,w,c
  1570  000C98  142E               	andwf	??_FRAME_SensorExcitationStatus,w,c
  1571  000C9A  6E09               	movwf	FRAME_SensorExcitationStatus@statwect,c
  1572  000C9C  500A               	movf	FRAME_SensorExcitationStatus@statwect+1,w,c
  1573  000C9E  142F               	andwf	??_FRAME_SensorExcitationStatus+1,w,c
  1574  000CA0  D005               	goto	L1
  1575  000CA2                     l4189:
  1576                           
  1577                           ;FRAME.c: 87:         {;FRAME.c: 88:             statwect = statwect| tru;
  1578  000CA2  5030               	movf	FRAME_SensorExcitationStatus@tru,w,c
  1579  000CA4  1009               	iorwf	FRAME_SensorExcitationStatus@statwect,w,c
  1580  000CA6  6E09               	movwf	FRAME_SensorExcitationStatus@statwect,c
  1581  000CA8  5031               	movf	FRAME_SensorExcitationStatus@tru+1,w,c
  1582  000CAA  100A               	iorwf	FRAME_SensorExcitationStatus@statwect+1,w,c
  1583  000CAC                     L1:
  1584  000CAC  6E0A               	movwf	FRAME_SensorExcitationStatus@statwect+1,c
  1585                           
  1586                           ;FRAME.c: 91:         if(statwect>0)
  1587                           
  1588                           ;FRAME.c: 89:         }
  1589  000CAE  5009               	movf	FRAME_SensorExcitationStatus@statwect,w,c
  1590  000CB0  100A               	iorwf	FRAME_SensorExcitationStatus@statwect+1,w,c
  1591  000CB2  B4D8               	btfsc	status,2,c
  1592  000CB4  D004               	goto	l4193
  1593                           
  1594                           ;FRAME.c: 92:         {;FRAME.c: 93:         LOCK_Set(1);
  1595  000CB6  0E01               	movlw	1
  1596  000CB8  EC41  F00D         	call	_LOCK_Set
  1597                           
  1598                           ;FRAME.c: 94:         }
  1599  000CBC  0012               	return	
  1600  000CBE                     l4193:
  1601                           
  1602                           ;FRAME.c: 96:         {;FRAME.c: 97:         LOCK_Set(0);
  1603  000CBE  0E00               	movlw	0
  1604  000CC0  EC41  F00D         	call	_LOCK_Set
  1605  000CC4  0012               	return		;funcret
  1606  000CC6                     __end_of_FRAME_SensorExcitationStatus:
  1607                           	opt callstack 0
  1608                           
  1609 ;; *************** function _MOC_Wynikowa_wartosc_roznicowa *****************
  1610 ;; Defined at:
  1611 ;;		line 33 in file "MOC_Funct.c"
  1612 ;; Parameters:    Size  Location     Type
  1613 ;;		None
  1614 ;; Auto vars:     Size  Location     Type
  1615 ;;		None
  1616 ;; Return value:  Size  Location     Type
  1617 ;;                  2    5[COMRAM] unsigned int 
  1618 ;; Registers used:
  1619 ;;		wreg, status,2
  1620 ;; Tracked objects:
  1621 ;;		On entry : 0/0
  1622 ;;		On exit  : 0/0
  1623 ;;		Unchanged: 0/0
  1624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1625 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1628 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1629 ;;Total ram usage:        2 bytes
  1630 ;; Hardware stack levels used:    1
  1631 ;; Hardware stack levels required when called:    3
  1632 ;; This function calls:
  1633 ;;		Nothing
  1634 ;; This function is called by:
  1635 ;;		_FRAME_SensorExcitationStatus
  1636 ;; This function uses a non-reentrant model
  1637 ;;
  1638                           
  1639                           	psect	text6
  1640  001A20                     __ptext6:
  1641                           	opt callstack 0
  1642  001A20                     _MOC_Wynikowa_wartosc_roznicowa:
  1643                           	opt callstack 24
  1644                           
  1645                           ;MOC_Funct.c: 35:     return 0x0220;
  1646                           
  1647                           ;incstack = 0
  1648  001A20  0E02               	movlw	2
  1649  001A22  6E2B               	movwf	?_MOC_Wynikowa_wartosc_roznicowa+1,c
  1650  001A24  0E20               	movlw	32
  1651  001A26  6E2A               	movwf	?_MOC_Wynikowa_wartosc_roznicowa,c
  1652  001A28  0012               	return		;funcret
  1653  001A2A                     __end_of_MOC_Wynikowa_wartosc_roznicowa:
  1654                           	opt callstack 0
  1655                           
  1656 ;; *************** function _MOC_NOTWORK *****************
  1657 ;; Defined at:
  1658 ;;		line 47 in file "MOC_Funct.c"
  1659 ;; Parameters:    Size  Location     Type
  1660 ;;		None
  1661 ;; Auto vars:     Size  Location     Type
  1662 ;;		None
  1663 ;; Return value:  Size  Location     Type
  1664 ;;                  2    5[COMRAM] unsigned int 
  1665 ;; Registers used:
  1666 ;;		wreg, status,2
  1667 ;; Tracked objects:
  1668 ;;		On entry : 0/0
  1669 ;;		On exit  : 0/0
  1670 ;;		Unchanged: 0/0
  1671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1672 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1675 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1676 ;;Total ram usage:        2 bytes
  1677 ;; Hardware stack levels used:    1
  1678 ;; Hardware stack levels required when called:    3
  1679 ;; This function calls:
  1680 ;;		Nothing
  1681 ;; This function is called by:
  1682 ;;		_FRAME_SensorExcitationStatus
  1683 ;; This function uses a non-reentrant model
  1684 ;;
  1685                           
  1686                           	psect	text7
  1687  001A7A                     __ptext7:
  1688                           	opt callstack 0
  1689  001A7A                     _MOC_NOTWORK:
  1690                           	opt callstack 24
  1691                           
  1692                           ;MOC_Funct.c: 49:     return 0xFF;
  1693                           
  1694                           ;incstack = 0
  1695  001A7A  0E00               	movlw	0
  1696  001A7C  6E2B               	movwf	?_MOC_NOTWORK+1,c
  1697  001A7E  682A               	setf	?_MOC_NOTWORK,c
  1698  001A80  0012               	return		;funcret
  1699  001A82                     __end_of_MOC_NOTWORK:
  1700                           	opt callstack 0
  1701                           
  1702 ;; *************** function _MOC_Frame_Counter *****************
  1703 ;; Defined at:
  1704 ;;		line 38 in file "MOC_Funct.c"
  1705 ;; Parameters:    Size  Location     Type
  1706 ;;		None
  1707 ;; Auto vars:     Size  Location     Type
  1708 ;;		None
  1709 ;; Return value:  Size  Location     Type
  1710 ;;                  2    5[COMRAM] unsigned int 
  1711 ;; Registers used:
  1712 ;;		wreg, status,2, status,0
  1713 ;; Tracked objects:
  1714 ;;		On entry : 0/0
  1715 ;;		On exit  : 0/0
  1716 ;;		Unchanged: 0/0
  1717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1718 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1721 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1722 ;;Total ram usage:        2 bytes
  1723 ;; Hardware stack levels used:    1
  1724 ;; Hardware stack levels required when called:    3
  1725 ;; This function calls:
  1726 ;;		Nothing
  1727 ;; This function is called by:
  1728 ;;		_FRAME_SensorExcitationStatus
  1729 ;; This function uses a non-reentrant model
  1730 ;;
  1731                           
  1732                           	psect	text8
  1733  0019F6                     __ptext8:
  1734                           	opt callstack 0
  1735  0019F6                     _MOC_Frame_Counter:
  1736                           	opt callstack 24
  1737                           
  1738                           ;MOC_Funct.c: 40:     static UINT zeta = 0x11;;MOC_Funct.c: 41:     return zeta++;
  1739                           
  1740                           ;incstack = 0
  1741  0019F6  503F               	movf	MOC_Frame_Counter@zeta,w,c
  1742  0019F8  6E2A               	movwf	?_MOC_Frame_Counter,c
  1743  0019FA  5040               	movf	MOC_Frame_Counter@zeta+1,w,c
  1744  0019FC  6E2B               	movwf	?_MOC_Frame_Counter+1,c
  1745  0019FE  4A3F               	infsnz	MOC_Frame_Counter@zeta,f,c
  1746  001A00  2A40               	incf	MOC_Frame_Counter@zeta+1,f,c
  1747  001A02  0012               	return		;funcret
  1748  001A04                     __end_of_MOC_Frame_Counter:
  1749                           	opt callstack 0
  1750                           
  1751 ;; *************** function _MOC_Aktualna_Temperatura *****************
  1752 ;; Defined at:
  1753 ;;		line 43 in file "MOC_Funct.c"
  1754 ;; Parameters:    Size  Location     Type
  1755 ;;		None
  1756 ;; Auto vars:     Size  Location     Type
  1757 ;;		None
  1758 ;; Return value:  Size  Location     Type
  1759 ;;                  2    5[COMRAM] unsigned int 
  1760 ;; Registers used:
  1761 ;;		wreg, status,2
  1762 ;; Tracked objects:
  1763 ;;		On entry : 0/0
  1764 ;;		On exit  : 0/0
  1765 ;;		Unchanged: 0/0
  1766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1767 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1770 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1771 ;;Total ram usage:        2 bytes
  1772 ;; Hardware stack levels used:    1
  1773 ;; Hardware stack levels required when called:    3
  1774 ;; This function calls:
  1775 ;;		Nothing
  1776 ;; This function is called by:
  1777 ;;		_FRAME_SensorExcitationStatus
  1778 ;; This function uses a non-reentrant model
  1779 ;;
  1780                           
  1781                           	psect	text9
  1782  001A2A                     __ptext9:
  1783                           	opt callstack 0
  1784  001A2A                     _MOC_Aktualna_Temperatura:
  1785                           	opt callstack 24
  1786                           
  1787                           ;MOC_Funct.c: 45:     return 0x1B;
  1788                           
  1789                           ;incstack = 0
  1790  001A2A  0E00               	movlw	0
  1791  001A2C  6E2B               	movwf	?_MOC_Aktualna_Temperatura+1,c
  1792  001A2E  0E1B               	movlw	27
  1793  001A30  6E2A               	movwf	?_MOC_Aktualna_Temperatura,c
  1794  001A32  0012               	return		;funcret
  1795  001A34                     __end_of_MOC_Aktualna_Temperatura:
  1796                           	opt callstack 0
  1797                           
  1798 ;; *************** function _LOCK_Set *****************
  1799 ;; Defined at:
  1800 ;;		line 52 in file "LED.c"
  1801 ;; Parameters:    Size  Location     Type
  1802 ;;  k               1    wreg     unsigned char 
  1803 ;; Auto vars:     Size  Location     Type
  1804 ;;  k               1    5[COMRAM] unsigned char 
  1805 ;; Return value:  Size  Location     Type
  1806 ;;                  1    wreg      void 
  1807 ;; Registers used:
  1808 ;;		wreg
  1809 ;; Tracked objects:
  1810 ;;		On entry : 0/0
  1811 ;;		On exit  : 0/0
  1812 ;;		Unchanged: 0/0
  1813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1815 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1817 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1818 ;;Total ram usage:        1 bytes
  1819 ;; Hardware stack levels used:    1
  1820 ;; Hardware stack levels required when called:    3
  1821 ;; This function calls:
  1822 ;;		Nothing
  1823 ;; This function is called by:
  1824 ;;		_FRAME_SensorExcitationStatus
  1825 ;; This function uses a non-reentrant model
  1826 ;;
  1827                           
  1828                           	psect	text10
  1829  001A82                     __ptext10:
  1830                           	opt callstack 0
  1831  001A82                     _LOCK_Set:
  1832                           	opt callstack 24
  1833                           
  1834                           ;incstack = 0
  1835                           ;LOCK_Set@k stored from wreg
  1836  001A82  6E2A               	movwf	LOCK_Set@k,c
  1837                           
  1838                           ;LED.c: 52: void LOCK_Set(BYTE k);LED.c: 53: {;LED.c: 54:     LOCK = k;
  1839  001A84  C02A  F014         	movff	LOCK_Set@k,_LOCK
  1840  001A88  0012               	return		;funcret
  1841  001A8A                     __end_of_LOCK_Set:
  1842                           	opt callstack 0
  1843                           
  1844 ;; *************** function _LOCK_Get *****************
  1845 ;; Defined at:
  1846 ;;		line 57 in file "LED.c"
  1847 ;; Parameters:    Size  Location     Type
  1848 ;;		None
  1849 ;; Auto vars:     Size  Location     Type
  1850 ;;		None
  1851 ;; Return value:  Size  Location     Type
  1852 ;;                  1    wreg      unsigned char 
  1853 ;; Registers used:
  1854 ;;		wreg, status,2
  1855 ;; Tracked objects:
  1856 ;;		On entry : 0/0
  1857 ;;		On exit  : 0/0
  1858 ;;		Unchanged: 0/0
  1859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1863 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1864 ;;Total ram usage:        0 bytes
  1865 ;; Hardware stack levels used:    1
  1866 ;; Hardware stack levels required when called:    3
  1867 ;; This function calls:
  1868 ;;		Nothing
  1869 ;; This function is called by:
  1870 ;;		_FRAME_SensorExcitationStatus
  1871 ;; This function uses a non-reentrant model
  1872 ;;
  1873                           
  1874                           	psect	text11
  1875  001A90                     __ptext11:
  1876                           	opt callstack 0
  1877  001A90                     _LOCK_Get:
  1878                           	opt callstack 24
  1879                           
  1880                           ;LED.c: 59:     return LOCK;
  1881                           
  1882                           ;incstack = 0
  1883  001A90  5014               	movf	_LOCK,w,c
  1884  001A92  0012               	return		;funcret
  1885  001A94                     __end_of_LOCK_Get:
  1886                           	opt callstack 0
  1887                           
  1888 ;; *************** function _IsInNeighbors *****************
  1889 ;; Defined at:
  1890 ;;		line 102 in file "FRAME.c"
  1891 ;; Parameters:    Size  Location     Type
  1892 ;;  message_adre    2    5[COMRAM] unsigned int 
  1893 ;; Auto vars:     Size  Location     Type
  1894 ;;  i               2    0        unsigned short 
  1895 ;; Return value:  Size  Location     Type
  1896 ;;                  2    5[COMRAM] unsigned int 
  1897 ;; Registers used:
  1898 ;;		wreg, status,2, status,0
  1899 ;; Tracked objects:
  1900 ;;		On entry : 0/0
  1901 ;;		On exit  : 0/0
  1902 ;;		Unchanged: 0/0
  1903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1904 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1907 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1908 ;;Total ram usage:        2 bytes
  1909 ;; Hardware stack levels used:    1
  1910 ;; Hardware stack levels required when called:    3
  1911 ;; This function calls:
  1912 ;;		Nothing
  1913 ;; This function is called by:
  1914 ;;		_FRAME_SensorExcitationStatus
  1915 ;; This function uses a non-reentrant model
  1916 ;;
  1917                           
  1918                           	psect	text12
  1919  000E8A                     __ptext12:
  1920                           	opt callstack 0
  1921  000E8A                     _IsInNeighbors:
  1922                           	opt callstack 24
  1923                           
  1924                           ;FRAME.c: 102: UINT IsInNeighbors(UINT message_adress);FRAME.c: 103: {;FRAME.c: 104:    
      +                           WORD i;;FRAME.c: 106:     if(NeightAdress1==message_adress)
  1925                           
  1926                           ;incstack = 0
  1927  000E8A  502A               	movf	IsInNeighbors@message_adress,w,c
  1928  000E8C  184A               	xorwf	_NeightAdress1,w,c	;volatile
  1929  000E8E  E109               	bnz	l3995
  1930  000E90  502B               	movf	IsInNeighbors@message_adress+1,w,c
  1931  000E92  184B               	xorwf	_NeightAdress1+1,w,c	;volatile
  1932  000E94  A4D8               	btfss	status,2,c
  1933  000E96  D005               	goto	l3995
  1934                           
  1935                           ;FRAME.c: 107:     {;FRAME.c: 108:         return 0b1;
  1936  000E98  0E00               	movlw	0
  1937  000E9A  6E2B               	movwf	?_IsInNeighbors+1,c
  1938  000E9C  0E01               	movlw	1
  1939  000E9E  6E2A               	movwf	?_IsInNeighbors,c
  1940  000EA0  0012               	return	
  1941  000EA2                     l3995:
  1942                           
  1943                           ;FRAME.c: 110:     if(NeightAdress2==message_adress)
  1944  000EA2  502A               	movf	IsInNeighbors@message_adress,w,c
  1945  000EA4  1848               	xorwf	_NeightAdress2,w,c	;volatile
  1946  000EA6  E109               	bnz	l4001
  1947  000EA8  502B               	movf	IsInNeighbors@message_adress+1,w,c
  1948  000EAA  1849               	xorwf	_NeightAdress2+1,w,c	;volatile
  1949  000EAC  A4D8               	btfss	status,2,c
  1950  000EAE  D005               	goto	l4001
  1951                           
  1952                           ;FRAME.c: 111:     {;FRAME.c: 112:         return 0b10;
  1953  000EB0  0E00               	movlw	0
  1954  000EB2  6E2B               	movwf	?_IsInNeighbors+1,c
  1955  000EB4  0E02               	movlw	2
  1956  000EB6  6E2A               	movwf	?_IsInNeighbors,c
  1957  000EB8  0012               	return	
  1958  000EBA                     l4001:
  1959                           
  1960                           ;FRAME.c: 114:     if(NeightAdress3==message_adress)
  1961  000EBA  502A               	movf	IsInNeighbors@message_adress,w,c
  1962  000EBC  1823               	xorwf	_NeightAdress3,w,c	;volatile
  1963  000EBE  E109               	bnz	l4007
  1964  000EC0  502B               	movf	IsInNeighbors@message_adress+1,w,c
  1965  000EC2  1824               	xorwf	_NeightAdress3+1,w,c	;volatile
  1966  000EC4  A4D8               	btfss	status,2,c
  1967  000EC6  D005               	goto	l4007
  1968                           
  1969                           ;FRAME.c: 115:     {;FRAME.c: 116:         return 0b100;
  1970  000EC8  0E00               	movlw	0
  1971  000ECA  6E2B               	movwf	?_IsInNeighbors+1,c
  1972  000ECC  0E04               	movlw	4
  1973  000ECE  6E2A               	movwf	?_IsInNeighbors,c
  1974  000ED0  0012               	return	
  1975  000ED2                     l4007:
  1976                           
  1977                           ;FRAME.c: 118:     if(NeightAdress4==message_adress)
  1978  000ED2  502A               	movf	IsInNeighbors@message_adress,w,c
  1979  000ED4  1821               	xorwf	_NeightAdress4,w,c	;volatile
  1980  000ED6  E109               	bnz	l4013
  1981  000ED8  502B               	movf	IsInNeighbors@message_adress+1,w,c
  1982  000EDA  1822               	xorwf	_NeightAdress4+1,w,c	;volatile
  1983  000EDC  A4D8               	btfss	status,2,c
  1984  000EDE  D005               	goto	l4013
  1985                           
  1986                           ;FRAME.c: 119:     {;FRAME.c: 120:         return 0b1000;
  1987  000EE0  0E00               	movlw	0
  1988  000EE2  6E2B               	movwf	?_IsInNeighbors+1,c
  1989  000EE4  0E08               	movlw	8
  1990  000EE6  6E2A               	movwf	?_IsInNeighbors,c
  1991  000EE8  0012               	return	
  1992  000EEA                     l4013:
  1993                           
  1994                           ;FRAME.c: 122:     if(NeightAdress5==message_adress)
  1995  000EEA  502A               	movf	IsInNeighbors@message_adress,w,c
  1996  000EEC  181F               	xorwf	_NeightAdress5,w,c	;volatile
  1997  000EEE  E109               	bnz	l4019
  1998  000EF0  502B               	movf	IsInNeighbors@message_adress+1,w,c
  1999  000EF2  1820               	xorwf	_NeightAdress5+1,w,c	;volatile
  2000  000EF4  A4D8               	btfss	status,2,c
  2001  000EF6  D005               	goto	l4019
  2002                           
  2003                           ;FRAME.c: 123:     {;FRAME.c: 124:         return 0b10000;
  2004  000EF8  0E00               	movlw	0
  2005  000EFA  6E2B               	movwf	?_IsInNeighbors+1,c
  2006  000EFC  0E10               	movlw	16
  2007  000EFE  6E2A               	movwf	?_IsInNeighbors,c
  2008  000F00  0012               	return	
  2009  000F02                     l4019:
  2010                           
  2011                           ;FRAME.c: 126:     if(NeightAdress6==message_adress)
  2012  000F02  502A               	movf	IsInNeighbors@message_adress,w,c
  2013  000F04  181D               	xorwf	_NeightAdress6,w,c	;volatile
  2014  000F06  E109               	bnz	l4025
  2015  000F08  502B               	movf	IsInNeighbors@message_adress+1,w,c
  2016  000F0A  181E               	xorwf	_NeightAdress6+1,w,c	;volatile
  2017  000F0C  A4D8               	btfss	status,2,c
  2018  000F0E  D005               	goto	l4025
  2019                           
  2020                           ;FRAME.c: 127:     {;FRAME.c: 128:         return 0b100000;
  2021  000F10  0E00               	movlw	0
  2022  000F12  6E2B               	movwf	?_IsInNeighbors+1,c
  2023  000F14  0E20               	movlw	32
  2024  000F16  6E2A               	movwf	?_IsInNeighbors,c
  2025  000F18  0012               	return	
  2026  000F1A                     l4025:
  2027                           
  2028                           ;FRAME.c: 130:     if(NeightAdress7==message_adress)
  2029  000F1A  502A               	movf	IsInNeighbors@message_adress,w,c
  2030  000F1C  181B               	xorwf	_NeightAdress7,w,c	;volatile
  2031  000F1E  E109               	bnz	l4031
  2032  000F20  502B               	movf	IsInNeighbors@message_adress+1,w,c
  2033  000F22  181C               	xorwf	_NeightAdress7+1,w,c	;volatile
  2034  000F24  A4D8               	btfss	status,2,c
  2035  000F26  D005               	goto	l4031
  2036                           
  2037                           ;FRAME.c: 131:     {;FRAME.c: 132:         return 0b1000000;
  2038  000F28  0E00               	movlw	0
  2039  000F2A  6E2B               	movwf	?_IsInNeighbors+1,c
  2040  000F2C  0E40               	movlw	64
  2041  000F2E  6E2A               	movwf	?_IsInNeighbors,c
  2042  000F30  0012               	return	
  2043  000F32                     l4031:
  2044                           
  2045                           ;FRAME.c: 134:     if(NeightAdress8==message_adress)
  2046  000F32  502A               	movf	IsInNeighbors@message_adress,w,c
  2047  000F34  1819               	xorwf	_NeightAdress8,w,c	;volatile
  2048  000F36  E109               	bnz	l4037
  2049  000F38  502B               	movf	IsInNeighbors@message_adress+1,w,c
  2050  000F3A  181A               	xorwf	_NeightAdress8+1,w,c	;volatile
  2051  000F3C  A4D8               	btfss	status,2,c
  2052  000F3E  D005               	goto	l4037
  2053                           
  2054                           ;FRAME.c: 135:     {;FRAME.c: 136:         return 0b10000000;
  2055  000F40  0E00               	movlw	0
  2056  000F42  6E2B               	movwf	?_IsInNeighbors+1,c
  2057  000F44  0E80               	movlw	128
  2058  000F46  6E2A               	movwf	?_IsInNeighbors,c
  2059  000F48  0012               	return	
  2060  000F4A                     l4037:
  2061                           
  2062                           ;FRAME.c: 152:     return 0;
  2063  000F4A  0E00               	movlw	0
  2064  000F4C  6E2B               	movwf	?_IsInNeighbors+1,c
  2065  000F4E  0E00               	movlw	0
  2066  000F50  6E2A               	movwf	?_IsInNeighbors,c
  2067  000F52  0012               	return		;funcret
  2068  000F54                     __end_of_IsInNeighbors:
  2069                           	opt callstack 0
  2070                           
  2071 ;; *************** function _FRAME_PrzypisanieDokarty *****************
  2072 ;; Defined at:
  2073 ;;		line 533 in file "FRAME.c"
  2074 ;; Parameters:    Size  Location     Type
  2075 ;;  message         2    5[COMRAM] PTR struct .
  2076 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2077 ;; Auto vars:     Size  Location     Type
  2078 ;;		None
  2079 ;; Return value:  Size  Location     Type
  2080 ;;                  1    wreg      void 
  2081 ;; Registers used:
  2082 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2083 ;; Tracked objects:
  2084 ;;		On entry : 0/0
  2085 ;;		On exit  : 0/0
  2086 ;;		Unchanged: 0/0
  2087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2088 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2090 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2091 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2092 ;;Total ram usage:        6 bytes
  2093 ;; Hardware stack levels used:    1
  2094 ;; Hardware stack levels required when called:    3
  2095 ;; This function calls:
  2096 ;;		Nothing
  2097 ;; This function is called by:
  2098 ;;		_FRAME_HandleCanFrame
  2099 ;; This function uses a non-reentrant model
  2100 ;;
  2101                           
  2102                           	psect	text13
  2103  001004                     __ptext13:
  2104                           	opt callstack 0
  2105  001004                     _FRAME_PrzypisanieDokarty:
  2106                           	opt callstack 25
  2107                           
  2108                           ;FRAME.c: 533: static void FRAME_PrzypisanieDokarty(mID *message);FRAME.c: 534: {;FRAME.
      +                          c: 535:     if(message->message_type == 0x02)
  2109                           
  2110                           ;incstack = 0
  2111  001004  EE20 F001          	lfsr	2,1
  2112  001008  502A               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2113  00100A  26D9               	addwf	fsr2l,f,c
  2114  00100C  502B               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2115  00100E  22DA               	addwfc	fsr2h,f,c
  2116  001010  0E02               	movlw	2
  2117  001012  18DE               	xorwf	postinc2,w,c
  2118  001014  A4D8               	btfss	status,2,c
  2119  001016  D021               	goto	l4275
  2120                           
  2121                           ;FRAME.c: 536:     {;FRAME.c: 537:         message->data_length = 3;
  2122  001018  EE20 F010          	lfsr	2,16
  2123  00101C  502A               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2124  00101E  26D9               	addwf	fsr2l,f,c
  2125  001020  502B               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2126  001022  22DA               	addwfc	fsr2h,f,c
  2127  001024  0E03               	movlw	3
  2128  001026  6EDF               	movwf	indf2,c
  2129                           
  2130                           ;FRAME.c: 538:         message->data[0] = (unsigned char)Dane->NrKarty >> 8 ;
  2131  001028  EE20 F008          	lfsr	2,8
  2132  00102C  502A               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2133  00102E  26D9               	addwf	fsr2l,f,c
  2134  001030  502B               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2135  001032  22DA               	addwfc	fsr2h,f,c
  2136  001034  0E00               	movlw	0
  2137  001036  6EDF               	movwf	indf2,c
  2138                           
  2139                           ;FRAME.c: 539:         message->data[1] = (unsigned char)Dane->NrKarty ;
  2140  001038  EE20 F009          	lfsr	2,9
  2141  00103C  502A               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2142  00103E  26D9               	addwf	fsr2l,f,c
  2143  001040  502B               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2144  001042  22DA               	addwfc	fsr2h,f,c
  2145  001044  C040 FFDF          	movff	64,indf2
  2146                           
  2147                           ;FRAME.c: 540:         message->data[2] = (unsigned char)Dane->Nr_WeWy ;
  2148  001048  EE20 F00A          	lfsr	2,10
  2149  00104C  502A               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2150  00104E  26D9               	addwf	fsr2l,f,c
  2151  001050  502B               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2152  001052  22DA               	addwfc	fsr2h,f,c
  2153  001054  C042 FFDF          	movff	66,indf2
  2154                           
  2155                           ;FRAME.c: 542:     }
  2156  001058  0012               	return	
  2157  00105A                     l4275:
  2158                           
  2159                           ;FRAME.c: 544:     {;FRAME.c: 545:          Dane->NrKarty = (message->data[0] << 8) | (m
      +                          essage->data[1]);
  2160  00105A  EE20 F008          	lfsr	2,8
  2161  00105E  502A               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2162  001060  26D9               	addwf	fsr2l,f,c
  2163  001062  502B               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2164  001064  22DA               	addwfc	fsr2h,f,c
  2165  001066  50DF               	movf	indf2,w,c
  2166  001068  6E2C               	movwf	??_FRAME_PrzypisanieDokarty& (0+255),c
  2167  00106A  502C               	movf	??_FRAME_PrzypisanieDokarty,w,c
  2168  00106C  6E2E               	movwf	(??_FRAME_PrzypisanieDokarty+2)& (0+255),c
  2169  00106E  6A2D               	clrf	(??_FRAME_PrzypisanieDokarty+1)& (0+255),c
  2170  001070  EE20 F009          	lfsr	2,9
  2171  001074  502A               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2172  001076  26D9               	addwf	fsr2l,f,c
  2173  001078  502B               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2174  00107A  22DA               	addwfc	fsr2h,f,c
  2175  00107C  50DF               	movf	indf2,w,c
  2176  00107E  6E2F               	movwf	(??_FRAME_PrzypisanieDokarty+3)& (0+255),c
  2177  001080  502F               	movf	??_FRAME_PrzypisanieDokarty+3,w,c
  2178  001082  102D               	iorwf	??_FRAME_PrzypisanieDokarty+1,w,c
  2179  001084  6E40               	movwf	64,c
  2180  001086  502E               	movf	??_FRAME_PrzypisanieDokarty+2,w,c
  2181  001088  6E41               	movwf	65,c
  2182                           
  2183                           ;FRAME.c: 546:          Dane->Nr_WeWy = (message->data[2]);
  2184  00108A  EE20 F00A          	lfsr	2,10
  2185  00108E  502A               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2186  001090  26D9               	addwf	fsr2l,f,c
  2187  001092  502B               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2188  001094  22DA               	addwfc	fsr2h,f,c
  2189  001096  50DF               	movf	indf2,w,c
  2190  001098  6E2C               	movwf	??_FRAME_PrzypisanieDokarty& (0+255),c
  2191  00109A  502C               	movf	??_FRAME_PrzypisanieDokarty,w,c
  2192  00109C  6E42               	movwf	66,c
  2193  00109E  6A43               	clrf	67,c
  2194  0010A0  0012               	return		;funcret
  2195  0010A2                     __end_of_FRAME_PrzypisanieDokarty:
  2196                           	opt callstack 0
  2197                           
  2198 ;; *************** function _FRAME_Plot *****************
  2199 ;; Defined at:
  2200 ;;		line 438 in file "FRAME.c"
  2201 ;; Parameters:    Size  Location     Type
  2202 ;;  message         2   12[COMRAM] PTR struct .
  2203 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2204 ;; Auto vars:     Size  Location     Type
  2205 ;;		None
  2206 ;; Return value:  Size  Location     Type
  2207 ;;                  1    wreg      void 
  2208 ;; Registers used:
  2209 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2210 ;; Tracked objects:
  2211 ;;		On entry : 0/0
  2212 ;;		On exit  : 0/0
  2213 ;;		Unchanged: 0/0
  2214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2215 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2217 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2218 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2219 ;;Total ram usage:        3 bytes
  2220 ;; Hardware stack levels used:    1
  2221 ;; Hardware stack levels required when called:    4
  2222 ;; This function calls:
  2223 ;;		___lwdiv
  2224 ;; This function is called by:
  2225 ;;		_FRAME_HandleCanFrame
  2226 ;; This function uses a non-reentrant model
  2227 ;;
  2228                           
  2229                           	psect	text14
  2230  001510                     __ptext14:
  2231                           	opt callstack 0
  2232  001510                     _FRAME_Plot:
  2233                           	opt callstack 24
  2234                           
  2235                           ;FRAME.c: 438: static void FRAME_Plot(mID *message);FRAME.c: 439: {;FRAME.c: 441:     if
      +                          (message->message_type == 0x02)
  2236                           
  2237                           ;incstack = 0
  2238  001510  EE20 F001          	lfsr	2,1
  2239  001514  5031               	movf	FRAME_Plot@message,w,c
  2240  001516  26D9               	addwf	fsr2l,f,c
  2241  001518  5032               	movf	FRAME_Plot@message+1,w,c
  2242  00151A  22DA               	addwfc	fsr2h,f,c
  2243  00151C  0E02               	movlw	2
  2244  00151E  18DE               	xorwf	postinc2,w,c
  2245  001520  A4D8               	btfss	status,2,c
  2246  001522  D013               	goto	l4265
  2247                           
  2248                           ;FRAME.c: 442:     {;FRAME.c: 443:         message->data[0] = (BYTE)(Dane->timerRysowani
      +                          aWykresuU16/10);
  2249  001524  EE20 F008          	lfsr	2,8
  2250  001528  5031               	movf	FRAME_Plot@message,w,c
  2251  00152A  26D9               	addwf	fsr2l,f,c
  2252  00152C  5032               	movf	FRAME_Plot@message+1,w,c
  2253  00152E  22DA               	addwfc	fsr2h,f,c
  2254  001530  C00C F02A          	movff	12,___lwdiv@dividend
  2255  001534  C00D F02B          	movff	13,___lwdiv@dividend+1
  2256  001538  0E00               	movlw	0
  2257  00153A  6E2D               	movwf	___lwdiv@divisor+1,c
  2258  00153C  0E0A               	movlw	10
  2259  00153E  6E2C               	movwf	___lwdiv@divisor,c
  2260  001540  ECB4  F00A         	call	___lwdiv	;wreg free
  2261  001544  502A               	movf	?___lwdiv,w,c
  2262  001546  6EDF               	movwf	indf2,c
  2263                           
  2264                           ;FRAME.c: 444:     }
  2265  001548  0012               	return	
  2266  00154A                     l4265:
  2267                           
  2268                           ;FRAME.c: 446:     {;FRAME.c: 447:         Dane->timerRysowaniaWykresuU16 = (WORD)messag
      +                          e->data[0]*10;
  2269  00154A  EE20 F008          	lfsr	2,8
  2270  00154E  5031               	movf	FRAME_Plot@message,w,c
  2271  001550  26D9               	addwf	fsr2l,f,c
  2272  001552  5032               	movf	FRAME_Plot@message+1,w,c
  2273  001554  22DA               	addwfc	fsr2h,f,c
  2274  001556  50DF               	movf	indf2,w,c
  2275  001558  6E33               	movwf	??_FRAME_Plot& (0+255),c
  2276  00155A  5033               	movf	??_FRAME_Plot,w,c
  2277  00155C  0D0A               	mullw	10
  2278  00155E  CFF3 F00C          	movff	prodl,12
  2279  001562  CFF4 F00D          	movff	prodh,13
  2280  001566  0012               	return		;funcret
  2281  001568                     __end_of_FRAME_Plot:
  2282                           	opt callstack 0
  2283                           
  2284 ;; *************** function _FRAME_MapPosition *****************
  2285 ;; Defined at:
  2286 ;;		line 459 in file "FRAME.c"
  2287 ;; Parameters:    Size  Location     Type
  2288 ;;  message         2    5[COMRAM] PTR struct .
  2289 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2290 ;; Auto vars:     Size  Location     Type
  2291 ;;		None
  2292 ;; Return value:  Size  Location     Type
  2293 ;;                  1    wreg      void 
  2294 ;; Registers used:
  2295 ;;		None
  2296 ;; Tracked objects:
  2297 ;;		On entry : 0/0
  2298 ;;		On exit  : 0/0
  2299 ;;		Unchanged: 0/0
  2300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2301 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2304 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2305 ;;Total ram usage:        2 bytes
  2306 ;; Hardware stack levels used:    1
  2307 ;; Hardware stack levels required when called:    3
  2308 ;; This function calls:
  2309 ;;		Nothing
  2310 ;; This function is called by:
  2311 ;;		_FRAME_HandleCanFrame
  2312 ;; This function uses a non-reentrant model
  2313 ;;
  2314                           
  2315                           	psect	text15
  2316  001A94                     __ptext15:
  2317                           	opt callstack 0
  2318  001A94                     _FRAME_MapPosition:
  2319                           	opt callstack 25
  2320                           
  2321                           ;incstack = 0
  2322  001A94  0012               	return		;funcret
  2323  001A96                     __end_of_FRAME_MapPosition:
  2324                           	opt callstack 0
  2325                           
  2326 ;; *************** function _FRAME_ExcitationValue *****************
  2327 ;; Defined at:
  2328 ;;		line 186 in file "FRAME.c"
  2329 ;; Parameters:    Size  Location     Type
  2330 ;;  message         2    5[COMRAM] PTR struct .
  2331 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2332 ;; Auto vars:     Size  Location     Type
  2333 ;;		None
  2334 ;; Return value:  Size  Location     Type
  2335 ;;                  1    wreg      void 
  2336 ;; Registers used:
  2337 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2338 ;; Tracked objects:
  2339 ;;		On entry : 0/0
  2340 ;;		On exit  : 0/0
  2341 ;;		Unchanged: 0/0
  2342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2343 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2345 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2346 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2347 ;;Total ram usage:        3 bytes
  2348 ;; Hardware stack levels used:    1
  2349 ;; Hardware stack levels required when called:    3
  2350 ;; This function calls:
  2351 ;;		Nothing
  2352 ;; This function is called by:
  2353 ;;		_FRAME_HandleCanFrame
  2354 ;; This function uses a non-reentrant model
  2355 ;;
  2356                           
  2357                           	psect	text16
  2358  00171C                     __ptext16:
  2359                           	opt callstack 0
  2360  00171C                     _FRAME_ExcitationValue:
  2361                           	opt callstack 25
  2362                           
  2363                           ;FRAME.c: 186: static void FRAME_ExcitationValue(mID *message);FRAME.c: 187: {;FRAME.c: 
      +                          188:     if(message->message_type == 0x02)
  2364                           
  2365                           ;incstack = 0
  2366  00171C  EE20 F001          	lfsr	2,1
  2367  001720  502A               	movf	FRAME_ExcitationValue@message,w,c
  2368  001722  26D9               	addwf	fsr2l,f,c
  2369  001724  502B               	movf	FRAME_ExcitationValue@message+1,w,c
  2370  001726  22DA               	addwfc	fsr2h,f,c
  2371  001728  0E02               	movlw	2
  2372  00172A  18DE               	xorwf	postinc2,w,c
  2373  00172C  A4D8               	btfss	status,2,c
  2374  00172E  0012               	return	
  2375                           
  2376                           ;FRAME.c: 189:     {;FRAME.c: 190:         message->data_length = 1;
  2377  001730  EE20 F010          	lfsr	2,16
  2378  001734  502A               	movf	FRAME_ExcitationValue@message,w,c
  2379  001736  26D9               	addwf	fsr2l,f,c
  2380  001738  502B               	movf	FRAME_ExcitationValue@message+1,w,c
  2381  00173A  22DA               	addwfc	fsr2h,f,c
  2382  00173C  0E01               	movlw	1
  2383  00173E  6EDF               	movwf	indf2,c
  2384                           
  2385                           ;FRAME.c: 195:         message->data[0] = 0xFF;
  2386  001740  EE20 F008          	lfsr	2,8
  2387  001744  502A               	movf	FRAME_ExcitationValue@message,w,c
  2388  001746  26D9               	addwf	fsr2l,f,c
  2389  001748  502B               	movf	FRAME_ExcitationValue@message+1,w,c
  2390  00174A  22DA               	addwfc	fsr2h,f,c
  2391  00174C  0EFF               	movlw	255
  2392  00174E  6EDF               	movwf	indf2,c
  2393                           
  2394                           ;FRAME.c: 196:     }
  2395  001750  0012               	return		;funcret
  2396  001752                     __end_of_FRAME_ExcitationValue:
  2397                           	opt callstack 0
  2398                           
  2399 ;; *************** function _FRAME_ExcitationMultiplier *****************
  2400 ;; Defined at:
  2401 ;;		line 210 in file "FRAME.c"
  2402 ;; Parameters:    Size  Location     Type
  2403 ;;  message         2    5[COMRAM] PTR struct .
  2404 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2405 ;; Auto vars:     Size  Location     Type
  2406 ;;  i               2    8[COMRAM] unsigned short 
  2407 ;; Return value:  Size  Location     Type
  2408 ;;                  1    wreg      void 
  2409 ;; Registers used:
  2410 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2411 ;; Tracked objects:
  2412 ;;		On entry : 0/0
  2413 ;;		On exit  : 0/0
  2414 ;;		Unchanged: 0/0
  2415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2416 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2417 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2418 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2419 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2420 ;;Total ram usage:        5 bytes
  2421 ;; Hardware stack levels used:    1
  2422 ;; Hardware stack levels required when called:    3
  2423 ;; This function calls:
  2424 ;;		Nothing
  2425 ;; This function is called by:
  2426 ;;		_FRAME_HandleCanFrame
  2427 ;; This function uses a non-reentrant model
  2428 ;;
  2429                           
  2430                           	psect	text17
  2431  0015BA                     __ptext17:
  2432                           	opt callstack 0
  2433  0015BA                     _FRAME_ExcitationMultiplier:
  2434                           	opt callstack 25
  2435                           
  2436                           ;FRAME.c: 210: static void FRAME_ExcitationMultiplier(mID *message);FRAME.c: 211: {;FRAM
      +                          E.c: 212:     WORD i;;FRAME.c: 214:     if(message->message_type == 0x02)
  2437                           
  2438                           ;incstack = 0
  2439  0015BA  EE20 F001          	lfsr	2,1
  2440  0015BE  502A               	movf	FRAME_ExcitationMultiplier@message,w,c
  2441  0015C0  26D9               	addwf	fsr2l,f,c
  2442  0015C2  502B               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  2443  0015C4  22DA               	addwfc	fsr2h,f,c
  2444  0015C6  0E02               	movlw	2
  2445  0015C8  18DE               	xorwf	postinc2,w,c
  2446  0015CA  A4D8               	btfss	status,2,c
  2447  0015CC  0012               	return	
  2448                           
  2449                           ;FRAME.c: 215:     {;FRAME.c: 216:         message->data_length = 1;
  2450  0015CE  EE20 F010          	lfsr	2,16
  2451  0015D2  502A               	movf	FRAME_ExcitationMultiplier@message,w,c
  2452  0015D4  26D9               	addwf	fsr2l,f,c
  2453  0015D6  502B               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  2454  0015D8  22DA               	addwfc	fsr2h,f,c
  2455  0015DA  0E01               	movlw	1
  2456  0015DC  6EDF               	movwf	indf2,c
  2457                           
  2458                           ;FRAME.c: 217:         for(i=0; i<3; i++)
  2459  0015DE  0E00               	movlw	0
  2460  0015E0  6E2E               	movwf	FRAME_ExcitationMultiplier@i+1,c
  2461  0015E2  0E00               	movlw	0
  2462  0015E4  6E2D               	movwf	FRAME_ExcitationMultiplier@i,c
  2463  0015E6                     l4221:
  2464                           
  2465                           ;FRAME.c: 218:         {;FRAME.c: 221:         }
  2466  0015E6  4A2D               	infsnz	FRAME_ExcitationMultiplier@i,f,c
  2467  0015E8  2A2E               	incf	FRAME_ExcitationMultiplier@i+1,f,c
  2468  0015EA  502E               	movf	FRAME_ExcitationMultiplier@i+1,w,c
  2469  0015EC  E104               	bnz	u2450
  2470  0015EE  0E03               	movlw	3
  2471  0015F0  5C2D               	subwf	FRAME_ExcitationMultiplier@i,w,c
  2472  0015F2  A0D8               	btfss	status,0,c
  2473  0015F4  D7F8               	goto	l4221
  2474  0015F6                     u2450:
  2475                           
  2476                           ;FRAME.c: 222:         message->data[0] = 0xFF;
  2477  0015F6  EE20 F008          	lfsr	2,8
  2478  0015FA  502A               	movf	FRAME_ExcitationMultiplier@message,w,c
  2479  0015FC  26D9               	addwf	fsr2l,f,c
  2480  0015FE  502B               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  2481  001600  22DA               	addwfc	fsr2h,f,c
  2482  001602  0EFF               	movlw	255
  2483  001604  6EDF               	movwf	indf2,c
  2484                           
  2485                           ;FRAME.c: 223:     }
  2486  001606  0012               	return		;funcret
  2487  001608                     __end_of_FRAME_ExcitationMultiplier:
  2488                           	opt callstack 0
  2489                           
  2490 ;; *************** function _FRAME_DeviceReset *****************
  2491 ;; Defined at:
  2492 ;;		line 344 in file "FRAME.c"
  2493 ;; Parameters:    Size  Location     Type
  2494 ;;  message         2   14[COMRAM] PTR struct .
  2495 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2496 ;; Auto vars:     Size  Location     Type
  2497 ;;		None
  2498 ;; Return value:  Size  Location     Type
  2499 ;;                  1    wreg      void 
  2500 ;; Registers used:
  2501 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2502 ;; Tracked objects:
  2503 ;;		On entry : 0/0
  2504 ;;		On exit  : 0/0
  2505 ;;		Unchanged: 0/0
  2506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2507 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2509 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2510 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2511 ;;Total ram usage:        3 bytes
  2512 ;; Hardware stack levels used:    1
  2513 ;; Hardware stack levels required when called:    6
  2514 ;; This function calls:
  2515 ;;		_FRAME_DataUpdateAndChangeOption
  2516 ;;		_WriteDataToEEPROM
  2517 ;; This function is called by:
  2518 ;;		_FRAME_HandleCanFrame
  2519 ;; This function uses a non-reentrant model
  2520 ;;
  2521                           
  2522                           	psect	text18
  2523  000A74                     __ptext18:
  2524                           	opt callstack 0
  2525  000A74                     _FRAME_DeviceReset:
  2526                           	opt callstack 22
  2527                           
  2528                           ;FRAME.c: 344: static void FRAME_DeviceReset(mID *message);FRAME.c: 345: {;FRAME.c: 346:
      +                               if(message->message_type == 0x02)
  2529                           
  2530                           ;incstack = 0
  2531  000A74  EE20 F001          	lfsr	2,1
  2532  000A78  5033               	movf	FRAME_DeviceReset@message,w,c
  2533  000A7A  26D9               	addwf	fsr2l,f,c
  2534  000A7C  5034               	movf	FRAME_DeviceReset@message+1,w,c
  2535  000A7E  22DA               	addwfc	fsr2h,f,c
  2536  000A80  0E02               	movlw	2
  2537  000A82  18DE               	xorwf	postinc2,w,c
  2538  000A84  A4D8               	btfss	status,2,c
  2539  000A86  D057               	goto	l4243
  2540                           
  2541                           ;FRAME.c: 347:     {;FRAME.c: 348:         message->data_length = 1;
  2542  000A88  EE20 F010          	lfsr	2,16
  2543  000A8C  5033               	movf	FRAME_DeviceReset@message,w,c
  2544  000A8E  26D9               	addwf	fsr2l,f,c
  2545  000A90  5034               	movf	FRAME_DeviceReset@message+1,w,c
  2546  000A92  22DA               	addwfc	fsr2h,f,c
  2547  000A94  0E01               	movlw	1
  2548  000A96  6EDF               	movwf	indf2,c
  2549                           
  2550                           ;FRAME.c: 350:         message->data[0] = (RCON>>6) & 0x01;
  2551  000A98  EE20 F008          	lfsr	2,8
  2552  000A9C  5033               	movf	FRAME_DeviceReset@message,w,c
  2553  000A9E  26D9               	addwf	fsr2l,f,c
  2554  000AA0  5034               	movf	FRAME_DeviceReset@message+1,w,c
  2555  000AA2  22DA               	addwfc	fsr2h,f,c
  2556  000AA4  44D0               	rlncf	4048,w,c	;volatile
  2557  000AA6  46E8               	rlncf	wreg,f,c
  2558  000AA8  0B03               	andlw	3
  2559  000AAA  0B01               	andlw	1
  2560  000AAC  6EDF               	movwf	indf2,c
  2561                           
  2562                           ;FRAME.c: 351:         message->data[1] = Flagi.wykonanoZapisDoFlash;
  2563  000AAE  EE20 F009          	lfsr	2,9
  2564  000AB2  5033               	movf	FRAME_DeviceReset@message,w,c
  2565  000AB4  26D9               	addwf	fsr2l,f,c
  2566  000AB6  5034               	movf	FRAME_DeviceReset@message+1,w,c
  2567  000AB8  22DA               	addwfc	fsr2h,f,c
  2568  000ABA  0100               	movlb	0	; () banked
  2569  000ABC  A9C6               	btfss	_Flagi& (0+255),4,b
  2570  000ABE  D002               	goto	u2490
  2571  000AC0  0E01               	movlw	1
  2572  000AC2  D001               	goto	u2496
  2573  000AC4                     u2490:
  2574  000AC4  0E00               	movlw	0
  2575  000AC6                     u2496:
  2576  000AC6  6EDF               	movwf	indf2,c
  2577                           
  2578                           ;FRAME.c: 352:         message->data[2] = Flagi.pomiarTla;
  2579  000AC8  EE20 F00A          	lfsr	2,10
  2580  000ACC  5033               	movf	FRAME_DeviceReset@message,w,c
  2581  000ACE  26D9               	addwf	fsr2l,f,c
  2582  000AD0  5034               	movf	FRAME_DeviceReset@message+1,w,c
  2583  000AD2  22DA               	addwfc	fsr2h,f,c
  2584  000AD4  A1C6               	btfss	_Flagi& (0+255),0,b
  2585  000AD6  D002               	goto	u2500
  2586  000AD8  0E01               	movlw	1
  2587  000ADA  D001               	goto	u2506
  2588  000ADC                     u2500:
  2589  000ADC  0E00               	movlw	0
  2590  000ADE                     u2506:
  2591  000ADE  6EDF               	movwf	indf2,c
  2592                           
  2593                           ;FRAME.c: 353:         message->data[3] = 0;
  2594  000AE0  EE20 F00B          	lfsr	2,11
  2595  000AE4  5033               	movf	FRAME_DeviceReset@message,w,c
  2596  000AE6  26D9               	addwf	fsr2l,f,c
  2597  000AE8  5034               	movf	FRAME_DeviceReset@message+1,w,c
  2598  000AEA  22DA               	addwfc	fsr2h,f,c
  2599  000AEC  0E00               	movlw	0
  2600  000AEE  6EDF               	movwf	indf2,c
  2601                           
  2602                           ;FRAME.c: 354:         message->data[4] = Dane->rokU16;
  2603  000AF0  EE20 F00C          	lfsr	2,12
  2604  000AF4  5033               	movf	FRAME_DeviceReset@message,w,c
  2605  000AF6  26D9               	addwf	fsr2l,f,c
  2606  000AF8  5034               	movf	FRAME_DeviceReset@message+1,w,c
  2607  000AFA  22DA               	addwfc	fsr2h,f,c
  2608  000AFC  C036 FFDF          	movff	54,indf2
  2609                           
  2610                           ;FRAME.c: 355:         message->data[5] = Dane->miesiacU16;
  2611  000B00  EE20 F00D          	lfsr	2,13
  2612  000B04  5033               	movf	FRAME_DeviceReset@message,w,c
  2613  000B06  26D9               	addwf	fsr2l,f,c
  2614  000B08  5034               	movf	FRAME_DeviceReset@message+1,w,c
  2615  000B0A  22DA               	addwfc	fsr2h,f,c
  2616  000B0C  C038 FFDF          	movff	56,indf2
  2617                           
  2618                           ;FRAME.c: 356:         message->data[6] = Dane->dzienU16;
  2619  000B10  EE20 F00E          	lfsr	2,14
  2620  000B14  5033               	movf	FRAME_DeviceReset@message,w,c
  2621  000B16  26D9               	addwf	fsr2l,f,c
  2622  000B18  5034               	movf	FRAME_DeviceReset@message+1,w,c
  2623  000B1A  22DA               	addwfc	fsr2h,f,c
  2624  000B1C  C03A FFDF          	movff	58,indf2
  2625                           
  2626                           ;FRAME.c: 357:         message->data[7] = Dane->godzinaU16;
  2627  000B20  EE20 F00F          	lfsr	2,15
  2628  000B24  5033               	movf	FRAME_DeviceReset@message,w,c
  2629  000B26  26D9               	addwf	fsr2l,f,c
  2630  000B28  5034               	movf	FRAME_DeviceReset@message+1,w,c
  2631  000B2A  22DA               	addwfc	fsr2h,f,c
  2632  000B2C  C03C FFDF          	movff	60,indf2
  2633                           
  2634                           ; BSR set to: 0
  2635                           ;FRAME.c: 358:         RCON &= ~(1<<6);
  2636  000B30  9CD0               	bcf	4048,6,c	;volatile
  2637                           
  2638                           ; BSR set to: 0
  2639                           ;FRAME.c: 359:         Flagi.wykonanoZapisDoFlash = 0;
  2640  000B32  99C6               	bcf	_Flagi& (0+255),4,b
  2641                           
  2642                           ;FRAME.c: 373:     }
  2643  000B34  0012               	return	
  2644  000B36                     l4243:
  2645                           
  2646                           ;FRAME.c: 375:     {;FRAME.c: 376:         message->data_length = 1;
  2647  000B36  EE20 F010          	lfsr	2,16
  2648  000B3A  5033               	movf	FRAME_DeviceReset@message,w,c
  2649  000B3C  26D9               	addwf	fsr2l,f,c
  2650  000B3E  5034               	movf	FRAME_DeviceReset@message+1,w,c
  2651  000B40  22DA               	addwfc	fsr2h,f,c
  2652  000B42  0E01               	movlw	1
  2653  000B44  6EDF               	movwf	indf2,c
  2654                           
  2655                           ;FRAME.c: 378:         if(message->data[2])
  2656  000B46  EE20 F00A          	lfsr	2,10
  2657  000B4A  5033               	movf	FRAME_DeviceReset@message,w,c
  2658  000B4C  26D9               	addwf	fsr2l,f,c
  2659  000B4E  5034               	movf	FRAME_DeviceReset@message+1,w,c
  2660  000B50  22DA               	addwfc	fsr2h,f,c
  2661  000B52  50DF               	movf	indf2,w,c
  2662  000B54  B4D8               	btfsc	status,2,c
  2663  000B56  D00E               	goto	l4251
  2664                           
  2665                           ;FRAME.c: 379:         {;FRAME.c: 380:             Flagi.pomiarTla = 1;
  2666  000B58  0100               	movlb	0	; () banked
  2667  000B5A  81C6               	bsf	_Flagi& (0+255),0,b
  2668                           
  2669                           ; BSR set to: 0
  2670                           ;FRAME.c: 381:             if(message->data[1])
  2671  000B5C  EE20 F009          	lfsr	2,9
  2672  000B60  5033               	movf	FRAME_DeviceReset@message,w,c
  2673  000B62  26D9               	addwf	fsr2l,f,c
  2674  000B64  5034               	movf	FRAME_DeviceReset@message+1,w,c
  2675  000B66  22DA               	addwfc	fsr2h,f,c
  2676  000B68  50DF               	movf	indf2,w,c
  2677  000B6A  B4D8               	btfsc	status,2,c
  2678  000B6C  D01D               	goto	l4259
  2679                           
  2680                           ; BSR set to: 0
  2681                           ;FRAME.c: 382:             {;FRAME.c: 384:                 WriteDataToEEPROM();
  2682  000B6E  EC63  F006         	call	_WriteDataToEEPROM	;wreg free
  2683  000B72  D01A               	goto	l4259
  2684  000B74                     l4251:
  2685                           
  2686                           ;FRAME.c: 388:         {;FRAME.c: 389:             if(message->data[1])
  2687  000B74  EE20 F009          	lfsr	2,9
  2688  000B78  5033               	movf	FRAME_DeviceReset@message,w,c
  2689  000B7A  26D9               	addwf	fsr2l,f,c
  2690  000B7C  5034               	movf	FRAME_DeviceReset@message+1,w,c
  2691  000B7E  22DA               	addwfc	fsr2h,f,c
  2692  000B80  50DF               	movf	indf2,w,c
  2693  000B82  B4D8               	btfsc	status,2,c
  2694  000B84  D008               	goto	l4255
  2695                           
  2696                           ;FRAME.c: 390:             {;FRAME.c: 391:                 FRAME_DataUpdateAndChangeOpti
      +                          on(message);
  2697  000B86  C033  F02A         	movff	FRAME_DeviceReset@message,FRAME_DataUpdateAndChangeOption@message
  2698  000B8A  C034  F02B         	movff	FRAME_DeviceReset@message+1,FRAME_DataUpdateAndChangeOption@message+1
  2699  000B8E  EC5B  F00A         	call	_FRAME_DataUpdateAndChangeOption	;wreg free
  2700                           
  2701                           ;FRAME.c: 392:                 WriteDataToEEPROM();
  2702  000B92  EC63  F006         	call	_WriteDataToEEPROM	;wreg free
  2703  000B96                     l4255:
  2704                           
  2705                           ;FRAME.c: 395:             if(message->data[0])
  2706  000B96  EE20 F008          	lfsr	2,8
  2707  000B9A  5033               	movf	FRAME_DeviceReset@message,w,c
  2708  000B9C  26D9               	addwf	fsr2l,f,c
  2709  000B9E  5034               	movf	FRAME_DeviceReset@message+1,w,c
  2710  000BA0  22DA               	addwfc	fsr2h,f,c
  2711  000BA2  50DF               	movf	indf2,w,c
  2712  000BA4  A4D8               	btfss	status,2,c
  2713  000BA6  00FF               	reset		;# 
  2714  000BA8                     l4259:
  2715                           
  2716                           ;FRAME.c: 400:         message->data[0] = 0xFF;
  2717  000BA8  EE20 F008          	lfsr	2,8
  2718  000BAC  5033               	movf	FRAME_DeviceReset@message,w,c
  2719  000BAE  26D9               	addwf	fsr2l,f,c
  2720  000BB0  5034               	movf	FRAME_DeviceReset@message+1,w,c
  2721  000BB2  22DA               	addwfc	fsr2h,f,c
  2722  000BB4  0EFF               	movlw	255
  2723  000BB6  6EDF               	movwf	indf2,c
  2724  000BB8  0012               	return		;funcret
  2725  000BBA                     __end_of_FRAME_DeviceReset:
  2726                           	opt callstack 0
  2727                           
  2728 ;; *************** function _WriteDataToEEPROM *****************
  2729 ;; Defined at:
  2730 ;;		line 418 in file "FRAME.c"
  2731 ;; Parameters:    Size  Location     Type
  2732 ;;		None
  2733 ;; Auto vars:     Size  Location     Type
  2734 ;;		None
  2735 ;; Return value:  Size  Location     Type
  2736 ;;                  1    wreg      void 
  2737 ;; Registers used:
  2738 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2739 ;; Tracked objects:
  2740 ;;		On entry : 0/0
  2741 ;;		On exit  : 0/0
  2742 ;;		Unchanged: 0/0
  2743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2747 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2748 ;;Total ram usage:        0 bytes
  2749 ;; Hardware stack levels used:    1
  2750 ;; Hardware stack levels required when called:    5
  2751 ;; This function calls:
  2752 ;;		_NVMWrite
  2753 ;; This function is called by:
  2754 ;;		_FRAME_DeviceReset
  2755 ;; This function uses a non-reentrant model
  2756 ;;
  2757                           
  2758                           	psect	text19
  2759  000CC6                     __ptext19:
  2760                           	opt callstack 0
  2761  000CC6                     _WriteDataToEEPROM:
  2762                           	opt callstack 22
  2763                           
  2764                           ;FRAME.c: 421:     NVMWrite(&NeightAdress1,1,2);
  2765                           
  2766                           ;incstack = 0
  2767  000CC6  0E4A               	movlw	low _NeightAdress1
  2768  000CC8  6E2D               	movwf	NVMWrite@source,c
  2769  000CCA  0E00               	movlw	high _NeightAdress1
  2770  000CCC  6E2E               	movwf	NVMWrite@source+1,c
  2771  000CCE  0E00               	movlw	0
  2772  000CD0  6E30               	movwf	NVMWrite@addr+1,c
  2773  000CD2  0E01               	movlw	1
  2774  000CD4  6E2F               	movwf	NVMWrite@addr,c
  2775  000CD6  0E00               	movlw	0
  2776  000CD8  6E32               	movwf	NVMWrite@count+1,c
  2777  000CDA  0E02               	movlw	2
  2778  000CDC  6E31               	movwf	NVMWrite@count,c
  2779  000CDE  ECA9  F00B         	call	_NVMWrite	;wreg free
  2780                           
  2781                           ;FRAME.c: 422:     NVMWrite(&NeightAdress2,4,2);
  2782  000CE2  0E48               	movlw	low _NeightAdress2
  2783  000CE4  6E2D               	movwf	NVMWrite@source,c
  2784  000CE6  0E00               	movlw	high _NeightAdress2
  2785  000CE8  6E2E               	movwf	NVMWrite@source+1,c
  2786  000CEA  0E00               	movlw	0
  2787  000CEC  6E30               	movwf	NVMWrite@addr+1,c
  2788  000CEE  0E04               	movlw	4
  2789  000CF0  6E2F               	movwf	NVMWrite@addr,c
  2790  000CF2  0E00               	movlw	0
  2791  000CF4  6E32               	movwf	NVMWrite@count+1,c
  2792  000CF6  0E02               	movlw	2
  2793  000CF8  6E31               	movwf	NVMWrite@count,c
  2794  000CFA  ECA9  F00B         	call	_NVMWrite	;wreg free
  2795                           
  2796                           ;FRAME.c: 423:     NVMWrite(&NeightAdress3,7,2);
  2797  000CFE  0E23               	movlw	low _NeightAdress3
  2798  000D00  6E2D               	movwf	NVMWrite@source,c
  2799  000D02  0E00               	movlw	high _NeightAdress3
  2800  000D04  6E2E               	movwf	NVMWrite@source+1,c
  2801  000D06  0E00               	movlw	0
  2802  000D08  6E30               	movwf	NVMWrite@addr+1,c
  2803  000D0A  0E07               	movlw	7
  2804  000D0C  6E2F               	movwf	NVMWrite@addr,c
  2805  000D0E  0E00               	movlw	0
  2806  000D10  6E32               	movwf	NVMWrite@count+1,c
  2807  000D12  0E02               	movlw	2
  2808  000D14  6E31               	movwf	NVMWrite@count,c
  2809  000D16  ECA9  F00B         	call	_NVMWrite	;wreg free
  2810                           
  2811                           ;FRAME.c: 424:     NVMWrite(&NeightAdress4,10,2);
  2812  000D1A  0E21               	movlw	low _NeightAdress4
  2813  000D1C  6E2D               	movwf	NVMWrite@source,c
  2814  000D1E  0E00               	movlw	high _NeightAdress4
  2815  000D20  6E2E               	movwf	NVMWrite@source+1,c
  2816  000D22  0E00               	movlw	0
  2817  000D24  6E30               	movwf	NVMWrite@addr+1,c
  2818  000D26  0E0A               	movlw	10
  2819  000D28  6E2F               	movwf	NVMWrite@addr,c
  2820  000D2A  0E00               	movlw	0
  2821  000D2C  6E32               	movwf	NVMWrite@count+1,c
  2822  000D2E  0E02               	movlw	2
  2823  000D30  6E31               	movwf	NVMWrite@count,c
  2824  000D32  ECA9  F00B         	call	_NVMWrite	;wreg free
  2825                           
  2826                           ;FRAME.c: 425:     NVMWrite(&NeightAdress5,13,2);
  2827  000D36  0E1F               	movlw	low _NeightAdress5
  2828  000D38  6E2D               	movwf	NVMWrite@source,c
  2829  000D3A  0E00               	movlw	high _NeightAdress5
  2830  000D3C  6E2E               	movwf	NVMWrite@source+1,c
  2831  000D3E  0E00               	movlw	0
  2832  000D40  6E30               	movwf	NVMWrite@addr+1,c
  2833  000D42  0E0D               	movlw	13
  2834  000D44  6E2F               	movwf	NVMWrite@addr,c
  2835  000D46  0E00               	movlw	0
  2836  000D48  6E32               	movwf	NVMWrite@count+1,c
  2837  000D4A  0E02               	movlw	2
  2838  000D4C  6E31               	movwf	NVMWrite@count,c
  2839  000D4E  ECA9  F00B         	call	_NVMWrite	;wreg free
  2840                           
  2841                           ;FRAME.c: 426:     NVMWrite(&NeightAdress6,16,2);
  2842  000D52  0E1D               	movlw	low _NeightAdress6
  2843  000D54  6E2D               	movwf	NVMWrite@source,c
  2844  000D56  0E00               	movlw	high _NeightAdress6
  2845  000D58  6E2E               	movwf	NVMWrite@source+1,c
  2846  000D5A  0E00               	movlw	0
  2847  000D5C  6E30               	movwf	NVMWrite@addr+1,c
  2848  000D5E  0E10               	movlw	16
  2849  000D60  6E2F               	movwf	NVMWrite@addr,c
  2850  000D62  0E00               	movlw	0
  2851  000D64  6E32               	movwf	NVMWrite@count+1,c
  2852  000D66  0E02               	movlw	2
  2853  000D68  6E31               	movwf	NVMWrite@count,c
  2854  000D6A  ECA9  F00B         	call	_NVMWrite	;wreg free
  2855                           
  2856                           ;FRAME.c: 427:     NVMWrite(&NeightAdress7,19,2);
  2857  000D6E  0E1B               	movlw	low _NeightAdress7
  2858  000D70  6E2D               	movwf	NVMWrite@source,c
  2859  000D72  0E00               	movlw	high _NeightAdress7
  2860  000D74  6E2E               	movwf	NVMWrite@source+1,c
  2861  000D76  0E00               	movlw	0
  2862  000D78  6E30               	movwf	NVMWrite@addr+1,c
  2863  000D7A  0E13               	movlw	19
  2864  000D7C  6E2F               	movwf	NVMWrite@addr,c
  2865  000D7E  0E00               	movlw	0
  2866  000D80  6E32               	movwf	NVMWrite@count+1,c
  2867  000D82  0E02               	movlw	2
  2868  000D84  6E31               	movwf	NVMWrite@count,c
  2869  000D86  ECA9  F00B         	call	_NVMWrite	;wreg free
  2870                           
  2871                           ;FRAME.c: 428:     NVMWrite(&NeightAdress8,22,2);
  2872  000D8A  0E19               	movlw	low _NeightAdress8
  2873  000D8C  6E2D               	movwf	NVMWrite@source,c
  2874  000D8E  0E00               	movlw	high _NeightAdress8
  2875  000D90  6E2E               	movwf	NVMWrite@source+1,c
  2876  000D92  0E00               	movlw	0
  2877  000D94  6E30               	movwf	NVMWrite@addr+1,c
  2878  000D96  0E16               	movlw	22
  2879  000D98  6E2F               	movwf	NVMWrite@addr,c
  2880  000D9A  0E00               	movlw	0
  2881  000D9C  6E32               	movwf	NVMWrite@count+1,c
  2882  000D9E  0E02               	movlw	2
  2883  000DA0  6E31               	movwf	NVMWrite@count,c
  2884  000DA2  ECA9  F00B         	call	_NVMWrite	;wreg free
  2885  000DA6  0012               	return		;funcret
  2886  000DA8                     __end_of_WriteDataToEEPROM:
  2887                           	opt callstack 0
  2888                           
  2889 ;; *************** function _NVMWrite *****************
  2890 ;; Defined at:
  2891 ;;		line 90 in file "EEPROM.c"
  2892 ;; Parameters:    Size  Location     Type
  2893 ;;  source          2    8[COMRAM] PTR unsigned char 
  2894 ;;		 -> NeightAdress8(2), NeightAdress7(2), NeightAdress6(2), NeightAdress5(2), 
  2895 ;;		 -> NeightAdress4(2), NeightAdress3(2), NeightAdress2(2), NeightAdress1(2), 
  2896 ;;  addr            2   10[COMRAM] unsigned short 
  2897 ;;  count           2   12[COMRAM] unsigned short 
  2898 ;; Auto vars:     Size  Location     Type
  2899 ;;		None
  2900 ;; Return value:  Size  Location     Type
  2901 ;;                  1    wreg      void 
  2902 ;; Registers used:
  2903 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2904 ;; Tracked objects:
  2905 ;;		On entry : 0/0
  2906 ;;		On exit  : 0/0
  2907 ;;		Unchanged: 0/0
  2908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2909 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2912 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2913 ;;Total ram usage:        6 bytes
  2914 ;; Hardware stack levels used:    1
  2915 ;; Hardware stack levels required when called:    4
  2916 ;; This function calls:
  2917 ;;		_WritetoEEPROM
  2918 ;; This function is called by:
  2919 ;;		_WriteDataToEEPROM
  2920 ;; This function uses a non-reentrant model
  2921 ;;
  2922                           
  2923                           	psect	text20
  2924  001752                     __ptext20:
  2925                           	opt callstack 0
  2926  001752                     _NVMWrite:
  2927                           	opt callstack 22
  2928                           
  2929                           ;EEPROM.c: 90: void NVMWrite(BYTE *source, WORD addr, WORD count);EEPROM.c: 91: {;EEPROM
      +                          .c: 92:     while(count > 0)
  2930                           
  2931                           ;incstack = 0
  2932  001752  D015               	goto	l3793
  2933  001754                     l929:
  2934  001754  B2A6               	btfsc	4006,1,c	;volsfr
  2935  001756  D7FE               	goto	l929
  2936                           
  2937                           ;EEPROM.c: 95:         WritetoEEPROM(addr++,*source);
  2938  001758  C02F  F02A         	movff	NVMWrite@addr,WritetoEEPROM@Address
  2939  00175C  C030  F02B         	movff	NVMWrite@addr+1,WritetoEEPROM@Address+1
  2940  001760  C02D  FFD9         	movff	NVMWrite@source,fsr2l
  2941  001764  C02E  FFDA         	movff	NVMWrite@source+1,fsr2h
  2942  001768  50DF               	movf	indf2,w,c
  2943  00176A  6E2C               	movwf	WritetoEEPROM@Data,c
  2944  00176C  EC15  F00C         	call	_WritetoEEPROM	;wreg free
  2945  001770  4A2F               	infsnz	NVMWrite@addr,f,c
  2946  001772  2A30               	incf	NVMWrite@addr+1,f,c
  2947                           
  2948                           ;EEPROM.c: 96:         count--;
  2949  001774  0631               	decf	NVMWrite@count,f,c
  2950  001776  A0D8               	btfss	status,0,c
  2951  001778  0632               	decf	NVMWrite@count+1,f,c
  2952                           
  2953                           ;EEPROM.c: 97:         source++;
  2954  00177A  4A2D               	infsnz	NVMWrite@source,f,c
  2955  00177C  2A2E               	incf	NVMWrite@source+1,f,c
  2956  00177E                     l3793:
  2957                           
  2958                           ;EEPROM.c: 92:     while(count > 0)
  2959  00177E  5031               	movf	NVMWrite@count,w,c
  2960  001780  1032               	iorwf	NVMWrite@count+1,w,c
  2961  001782  B4D8               	btfsc	status,2,c
  2962  001784  0012               	return	
  2963  001786  D7E6               	goto	l929
  2964  001788                     __end_of_NVMWrite:
  2965                           	opt callstack 0
  2966                           
  2967 ;; *************** function _WritetoEEPROM *****************
  2968 ;; Defined at:
  2969 ;;		line 61 in file "EEPROM.c"
  2970 ;; Parameters:    Size  Location     Type
  2971 ;;  Address         2    5[COMRAM] unsigned short 
  2972 ;;  Data            1    7[COMRAM] unsigned char 
  2973 ;; Auto vars:     Size  Location     Type
  2974 ;;		None
  2975 ;; Return value:  Size  Location     Type
  2976 ;;                  1    wreg      void 
  2977 ;; Registers used:
  2978 ;;		wreg, status,2
  2979 ;; Tracked objects:
  2980 ;;		On entry : 0/0
  2981 ;;		On exit  : 0/0
  2982 ;;		Unchanged: 0/0
  2983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2984 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2987 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2988 ;;Total ram usage:        3 bytes
  2989 ;; Hardware stack levels used:    1
  2990 ;; Hardware stack levels required when called:    3
  2991 ;; This function calls:
  2992 ;;		Nothing
  2993 ;; This function is called by:
  2994 ;;		_NVMWrite
  2995 ;; This function uses a non-reentrant model
  2996 ;;
  2997                           
  2998                           	psect	text21
  2999  00182A                     __ptext21:
  3000                           	opt callstack 0
  3001  00182A                     _WritetoEEPROM:
  3002                           	opt callstack 22
  3003                           
  3004                           ;EEPROM.c: 61: static void WritetoEEPROM(WORD Address, BYTE Data);EEPROM.c: 62: {;EEPROM
      +                          .c: 63:     static BYTE GIE_Status;;EEPROM.c: 65:     EEADRH = (BYTE)(Address>>8);
  3005                           
  3006                           ;incstack = 0
  3007  00182A  502B               	movf	WritetoEEPROM@Address+1,w,c
  3008  00182C  6EAA               	movwf	4010,c	;volatile
  3009                           
  3010                           ;EEPROM.c: 66:     EEADR = (BYTE)Address;
  3011  00182E  C02A  FFA9         	movff	WritetoEEPROM@Address,4009	;volatile
  3012                           
  3013                           ;EEPROM.c: 67:     EEDATA = Data;
  3014  001832  C02C  FFA8         	movff	WritetoEEPROM@Data,4008	;volatile
  3015                           
  3016                           ;EEPROM.c: 68:     EECON1bits.WREN = 1;
  3017  001836  84A6               	bsf	4006,2,c	;volsfr
  3018                           
  3019                           ;EEPROM.c: 69:     GIE_Status = INTCONbits.GIE;
  3020  001838  0E00               	movlw	0
  3021  00183A  BEF2               	btfsc	4082,7,c	;volatile
  3022  00183C  0E01               	movlw	1
  3023  00183E  6E0F               	movwf	WritetoEEPROM@GIE_Status,c
  3024                           
  3025                           ;EEPROM.c: 70:     INTCONbits.GIE = 0;
  3026  001840  9EF2               	bcf	4082,7,c	;volatile
  3027                           
  3028                           ;EEPROM.c: 71:     EECON2 = 0x55;
  3029  001842  0E55               	movlw	85
  3030  001844  6EA7               	movwf	4007,c	;volsfr
  3031                           
  3032                           ;EEPROM.c: 72:     EECON2 = 0xAA;
  3033  001846  0EAA               	movlw	170
  3034  001848  6EA7               	movwf	4007,c	;volsfr
  3035                           
  3036                           ;EEPROM.c: 73:     EECON1bits.WR = 1;
  3037  00184A  82A6               	bsf	4006,1,c	;volsfr
  3038                           
  3039                           ;EEPROM.c: 74:     INTCONbits.GIE = GIE_Status;
  3040  00184C  B00F               	btfsc	WritetoEEPROM@GIE_Status,0,c
  3041  00184E  D002               	bra	u1955
  3042  001850  9EF2               	bcf	4082,7,c	;volatile
  3043  001852  D001               	bra	u1956
  3044  001854                     u1955:
  3045  001854  8EF2               	bsf	4082,7,c	;volatile
  3046  001856                     u1956:
  3047                           
  3048                           ;EEPROM.c: 75:     EECON1bits.WREN = 0;
  3049  001856  94A6               	bcf	4006,2,c	;volsfr
  3050  001858                     l912:
  3051  001858  B2A6               	btfsc	4006,1,c	;volsfr
  3052  00185A  D7FE               	goto	l912
  3053  00185C  0012               	return	
  3054  00185E                     __end_of_WritetoEEPROM:
  3055                           	opt callstack 0
  3056                           
  3057 ;; *************** function _FRAME_DataUpdateAndChangeOption *****************
  3058 ;; Defined at:
  3059 ;;		line 328 in file "FRAME.c"
  3060 ;; Parameters:    Size  Location     Type
  3061 ;;  message         2    5[COMRAM] PTR struct .
  3062 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3063 ;; Auto vars:     Size  Location     Type
  3064 ;;		None
  3065 ;; Return value:  Size  Location     Type
  3066 ;;                  1    wreg      void 
  3067 ;; Registers used:
  3068 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3069 ;; Tracked objects:
  3070 ;;		On entry : 0/0
  3071 ;;		On exit  : 0/0
  3072 ;;		Unchanged: 0/0
  3073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3074 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3076 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3077 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3078 ;;Total ram usage:        3 bytes
  3079 ;; Hardware stack levels used:    1
  3080 ;; Hardware stack levels required when called:    3
  3081 ;; This function calls:
  3082 ;;		Nothing
  3083 ;; This function is called by:
  3084 ;;		_FRAME_DeviceReset
  3085 ;; This function uses a non-reentrant model
  3086 ;;
  3087                           
  3088                           	psect	text22
  3089  0014B6                     __ptext22:
  3090                           	opt callstack 0
  3091  0014B6                     _FRAME_DataUpdateAndChangeOption:
  3092                           	opt callstack 24
  3093                           
  3094                           ;FRAME.c: 328: static void FRAME_DataUpdateAndChangeOption(mID *message);FRAME.c: 329: {
      +                          ;FRAME.c: 331:     Dane->rokU16 = message->data[4];
  3095                           
  3096                           ;incstack = 0
  3097  0014B6  EE20 F00C          	lfsr	2,12
  3098  0014BA  502A               	movf	FRAME_DataUpdateAndChangeOption@message,w,c
  3099  0014BC  26D9               	addwf	fsr2l,f,c
  3100  0014BE  502B               	movf	FRAME_DataUpdateAndChangeOption@message+1,w,c
  3101  0014C0  22DA               	addwfc	fsr2h,f,c
  3102  0014C2  50DF               	movf	indf2,w,c
  3103  0014C4  6E2C               	movwf	??_FRAME_DataUpdateAndChangeOption& (0+255),c
  3104  0014C6  502C               	movf	??_FRAME_DataUpdateAndChangeOption,w,c
  3105  0014C8  6E36               	movwf	54,c
  3106  0014CA  6A37               	clrf	55,c
  3107                           
  3108                           ;FRAME.c: 332:     Dane->miesiacU16 = message->data[5];
  3109  0014CC  EE20 F00D          	lfsr	2,13
  3110  0014D0  502A               	movf	FRAME_DataUpdateAndChangeOption@message,w,c
  3111  0014D2  26D9               	addwf	fsr2l,f,c
  3112  0014D4  502B               	movf	FRAME_DataUpdateAndChangeOption@message+1,w,c
  3113  0014D6  22DA               	addwfc	fsr2h,f,c
  3114  0014D8  50DF               	movf	indf2,w,c
  3115  0014DA  6E2C               	movwf	??_FRAME_DataUpdateAndChangeOption& (0+255),c
  3116  0014DC  502C               	movf	??_FRAME_DataUpdateAndChangeOption,w,c
  3117  0014DE  6E38               	movwf	56,c
  3118  0014E0  6A39               	clrf	57,c
  3119                           
  3120                           ;FRAME.c: 333:     Dane->dzienU16 = message->data[6];
  3121  0014E2  EE20 F00E          	lfsr	2,14
  3122  0014E6  502A               	movf	FRAME_DataUpdateAndChangeOption@message,w,c
  3123  0014E8  26D9               	addwf	fsr2l,f,c
  3124  0014EA  502B               	movf	FRAME_DataUpdateAndChangeOption@message+1,w,c
  3125  0014EC  22DA               	addwfc	fsr2h,f,c
  3126  0014EE  50DF               	movf	indf2,w,c
  3127  0014F0  6E2C               	movwf	??_FRAME_DataUpdateAndChangeOption& (0+255),c
  3128  0014F2  502C               	movf	??_FRAME_DataUpdateAndChangeOption,w,c
  3129  0014F4  6E3A               	movwf	58,c
  3130  0014F6  6A3B               	clrf	59,c
  3131                           
  3132                           ;FRAME.c: 334:     Dane->godzinaU16 = message->data[7];
  3133  0014F8  EE20 F00F          	lfsr	2,15
  3134  0014FC  502A               	movf	FRAME_DataUpdateAndChangeOption@message,w,c
  3135  0014FE  26D9               	addwf	fsr2l,f,c
  3136  001500  502B               	movf	FRAME_DataUpdateAndChangeOption@message+1,w,c
  3137  001502  22DA               	addwfc	fsr2h,f,c
  3138  001504  50DF               	movf	indf2,w,c
  3139  001506  6E2C               	movwf	??_FRAME_DataUpdateAndChangeOption& (0+255),c
  3140  001508  502C               	movf	??_FRAME_DataUpdateAndChangeOption,w,c
  3141  00150A  6E3C               	movwf	60,c
  3142  00150C  6A3D               	clrf	61,c
  3143  00150E  0012               	return		;funcret
  3144  001510                     __end_of_FRAME_DataUpdateAndChangeOption:
  3145                           	opt callstack 0
  3146                           
  3147 ;; *************** function _FRAME_AxisStatus *****************
  3148 ;; Defined at:
  3149 ;;		line 297 in file "FRAME.c"
  3150 ;; Parameters:    Size  Location     Type
  3151 ;;  message         2    5[COMRAM] PTR struct .
  3152 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3153 ;; Auto vars:     Size  Location     Type
  3154 ;;  i               2    0        unsigned short 
  3155 ;; Return value:  Size  Location     Type
  3156 ;;                  1    wreg      void 
  3157 ;; Registers used:
  3158 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3159 ;; Tracked objects:
  3160 ;;		On entry : 0/0
  3161 ;;		On exit  : 0/0
  3162 ;;		Unchanged: 0/0
  3163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3164 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3166 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3167 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3168 ;;Total ram usage:        3 bytes
  3169 ;; Hardware stack levels used:    1
  3170 ;; Hardware stack levels required when called:    3
  3171 ;; This function calls:
  3172 ;;		Nothing
  3173 ;; This function is called by:
  3174 ;;		_FRAME_HandleCanFrame
  3175 ;; This function uses a non-reentrant model
  3176 ;;
  3177                           
  3178                           	psect	text23
  3179  001788                     __ptext23:
  3180                           	opt callstack 0
  3181  001788                     _FRAME_AxisStatus:
  3182                           	opt callstack 25
  3183                           
  3184                           ;FRAME.c: 297: static void FRAME_AxisStatus(mID *message);FRAME.c: 298: {;FRAME.c: 299: 
      +                              WORD i;;FRAME.c: 301:     if(message->message_type == 0x02)
  3185                           
  3186                           ;incstack = 0
  3187  001788  EE20 F001          	lfsr	2,1
  3188  00178C  502A               	movf	FRAME_AxisStatus@message,w,c
  3189  00178E  26D9               	addwf	fsr2l,f,c
  3190  001790  502B               	movf	FRAME_AxisStatus@message+1,w,c
  3191  001792  22DA               	addwfc	fsr2h,f,c
  3192  001794  0E02               	movlw	2
  3193  001796  18DE               	xorwf	postinc2,w,c
  3194  001798  A4D8               	btfss	status,2,c
  3195  00179A  0012               	return	
  3196                           
  3197                           ;FRAME.c: 302:     {;FRAME.c: 303:         message->data_length = 1;
  3198  00179C  EE20 F010          	lfsr	2,16
  3199  0017A0  502A               	movf	FRAME_AxisStatus@message,w,c
  3200  0017A2  26D9               	addwf	fsr2l,f,c
  3201  0017A4  502B               	movf	FRAME_AxisStatus@message+1,w,c
  3202  0017A6  22DA               	addwfc	fsr2h,f,c
  3203  0017A8  0E01               	movlw	1
  3204  0017AA  6EDF               	movwf	indf2,c
  3205                           
  3206                           ;FRAME.c: 314:         message->data[0] = 0xFF;
  3207  0017AC  EE20 F008          	lfsr	2,8
  3208  0017B0  502A               	movf	FRAME_AxisStatus@message,w,c
  3209  0017B2  26D9               	addwf	fsr2l,f,c
  3210  0017B4  502B               	movf	FRAME_AxisStatus@message+1,w,c
  3211  0017B6  22DA               	addwfc	fsr2h,f,c
  3212  0017B8  0EFF               	movlw	255
  3213  0017BA  6EDF               	movwf	indf2,c
  3214                           
  3215                           ;FRAME.c: 315:     }
  3216  0017BC  0012               	return		;funcret
  3217  0017BE                     __end_of_FRAME_AxisStatus:
  3218                           	opt callstack 0
  3219                           
  3220 ;; *************** function _FRAME_AveragingTimes *****************
  3221 ;; Defined at:
  3222 ;;		line 238 in file "FRAME.c"
  3223 ;; Parameters:    Size  Location     Type
  3224 ;;  message         2    5[COMRAM] PTR struct .
  3225 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3226 ;; Auto vars:     Size  Location     Type
  3227 ;;		None
  3228 ;; Return value:  Size  Location     Type
  3229 ;;                  1    wreg      void 
  3230 ;; Registers used:
  3231 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3232 ;; Tracked objects:
  3233 ;;		On entry : 0/0
  3234 ;;		On exit  : 0/0
  3235 ;;		Unchanged: 0/0
  3236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3237 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3239 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3240 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3241 ;;Total ram usage:        3 bytes
  3242 ;; Hardware stack levels used:    1
  3243 ;; Hardware stack levels required when called:    3
  3244 ;; This function calls:
  3245 ;;		Nothing
  3246 ;; This function is called by:
  3247 ;;		_FRAME_HandleCanFrame
  3248 ;; This function uses a non-reentrant model
  3249 ;;
  3250                           
  3251                           	psect	text24
  3252  0017BE                     __ptext24:
  3253                           	opt callstack 0
  3254  0017BE                     _FRAME_AveragingTimes:
  3255                           	opt callstack 25
  3256                           
  3257                           ;FRAME.c: 238: static void FRAME_AveragingTimes(mID *message);FRAME.c: 239: {;FRAME.c: 2
      +                          40:     if(message->message_type == 0x02)
  3258                           
  3259                           ;incstack = 0
  3260  0017BE  EE20 F001          	lfsr	2,1
  3261  0017C2  502A               	movf	FRAME_AveragingTimes@message,w,c
  3262  0017C4  26D9               	addwf	fsr2l,f,c
  3263  0017C6  502B               	movf	FRAME_AveragingTimes@message+1,w,c
  3264  0017C8  22DA               	addwfc	fsr2h,f,c
  3265  0017CA  0E02               	movlw	2
  3266  0017CC  18DE               	xorwf	postinc2,w,c
  3267  0017CE  A4D8               	btfss	status,2,c
  3268  0017D0  0012               	return	
  3269                           
  3270                           ;FRAME.c: 241:     {;FRAME.c: 242:         message->data_length = 1;
  3271  0017D2  EE20 F010          	lfsr	2,16
  3272  0017D6  502A               	movf	FRAME_AveragingTimes@message,w,c
  3273  0017D8  26D9               	addwf	fsr2l,f,c
  3274  0017DA  502B               	movf	FRAME_AveragingTimes@message+1,w,c
  3275  0017DC  22DA               	addwfc	fsr2h,f,c
  3276  0017DE  0E01               	movlw	1
  3277  0017E0  6EDF               	movwf	indf2,c
  3278                           
  3279                           ;FRAME.c: 250:         message->data[0] = 0xFF;
  3280  0017E2  EE20 F008          	lfsr	2,8
  3281  0017E6  502A               	movf	FRAME_AveragingTimes@message,w,c
  3282  0017E8  26D9               	addwf	fsr2l,f,c
  3283  0017EA  502B               	movf	FRAME_AveragingTimes@message+1,w,c
  3284  0017EC  22DA               	addwfc	fsr2h,f,c
  3285  0017EE  0EFF               	movlw	255
  3286  0017F0  6EDF               	movwf	indf2,c
  3287                           
  3288                           ;FRAME.c: 251:     }
  3289  0017F2  0012               	return		;funcret
  3290  0017F4                     __end_of_FRAME_AveragingTimes:
  3291                           	opt callstack 0
  3292                           
  3293 ;; *************** function _FRAME_AnalogValue *****************
  3294 ;; Defined at:
  3295 ;;		line 507 in file "FRAME.c"
  3296 ;; Parameters:    Size  Location     Type
  3297 ;;  message         2    5[COMRAM] PTR struct .
  3298 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3299 ;;  set             2    7[COMRAM] unsigned short 
  3300 ;; Auto vars:     Size  Location     Type
  3301 ;;  i               2    0        unsigned short 
  3302 ;; Return value:  Size  Location     Type
  3303 ;;                  1    wreg      void 
  3304 ;; Registers used:
  3305 ;;		None
  3306 ;; Tracked objects:
  3307 ;;		On entry : 0/0
  3308 ;;		On exit  : 0/0
  3309 ;;		Unchanged: 0/0
  3310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3311 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3314 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3315 ;;Total ram usage:        4 bytes
  3316 ;; Hardware stack levels used:    1
  3317 ;; Hardware stack levels required when called:    3
  3318 ;; This function calls:
  3319 ;;		Nothing
  3320 ;; This function is called by:
  3321 ;;		_FRAME_HandleCanFrame
  3322 ;; This function uses a non-reentrant model
  3323 ;;
  3324                           
  3325                           	psect	text25
  3326  001A96                     __ptext25:
  3327                           	opt callstack 0
  3328  001A96                     _FRAME_AnalogValue:
  3329                           	opt callstack 25
  3330                           
  3331                           ;incstack = 0
  3332  001A96  0012               	return		;funcret
  3333  001A98                     __end_of_FRAME_AnalogValue:
  3334                           	opt callstack 0
  3335                           
  3336 ;; *************** function _FRAME_AdressOfNeighbors *****************
  3337 ;; Defined at:
  3338 ;;		line 555 in file "FRAME.c"
  3339 ;; Parameters:    Size  Location     Type
  3340 ;;  message         2    5[COMRAM] PTR struct .
  3341 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3342 ;;  nrRamki         2    7[COMRAM] unsigned short 
  3343 ;; Auto vars:     Size  Location     Type
  3344 ;;  kier            2   13[COMRAM] unsigned short 
  3345 ;;  it              2    0        unsigned short 
  3346 ;; Return value:  Size  Location     Type
  3347 ;;                  1    wreg      void 
  3348 ;; Registers used:
  3349 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3350 ;; Tracked objects:
  3351 ;;		On entry : 0/0
  3352 ;;		On exit  : 0/0
  3353 ;;		Unchanged: 0/0
  3354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3355 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3356 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3357 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3358 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3359 ;;Total ram usage:       10 bytes
  3360 ;; Hardware stack levels used:    1
  3361 ;; Hardware stack levels required when called:    4
  3362 ;; This function calls:
  3363 ;;		_CAN_SetupFilter_Ne
  3364 ;; This function is called by:
  3365 ;;		_FRAME_HandleCanFrame
  3366 ;; This function uses a non-reentrant model
  3367 ;;
  3368                           
  3369                           	psect	text26
  3370  000062                     __ptext26:
  3371                           	opt callstack 0
  3372  000062                     _FRAME_AdressOfNeighbors:
  3373                           	opt callstack 24
  3374                           
  3375                           ;FRAME.c: 555: static void FRAME_AdressOfNeighbors(mID *message, WORD nrRamki);FRAME.c: 
      +                          556: {;FRAME.c: 557:     WORD it;;FRAME.c: 560:     WORD kier = (nrRamki-0x10);
  3376                           
  3377                           ;incstack = 0
  3378  000062  0EF0               	movlw	240
  3379  000064  242C               	addwf	FRAME_AdressOfNeighbors@nrRamki,w,c
  3380  000066  6E32               	movwf	FRAME_AdressOfNeighbors@kier,c
  3381  000068  0EFF               	movlw	255
  3382  00006A  202D               	addwfc	FRAME_AdressOfNeighbors@nrRamki+1,w,c
  3383  00006C  6E33               	movwf	FRAME_AdressOfNeighbors@kier+1,c
  3384                           
  3385                           ;FRAME.c: 561:     if(message->message_type == 0x02)
  3386  00006E  EE20 F001          	lfsr	2,1
  3387  000072  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3388  000074  26D9               	addwf	fsr2l,f,c
  3389  000076  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3390  000078  22DA               	addwfc	fsr2h,f,c
  3391  00007A  0E02               	movlw	2
  3392  00007C  18DE               	xorwf	postinc2,w,c
  3393  00007E  A4D8               	btfss	status,2,c
  3394  000080  D08E               	goto	l4289
  3395                           
  3396                           ;FRAME.c: 562:     {;FRAME.c: 564:         message->data_length = 8;
  3397  000082  EE20 F010          	lfsr	2,16
  3398  000086  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3399  000088  26D9               	addwf	fsr2l,f,c
  3400  00008A  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3401  00008C  22DA               	addwfc	fsr2h,f,c
  3402  00008E  0E08               	movlw	8
  3403  000090  6EDF               	movwf	indf2,c
  3404                           
  3405                           ;FRAME.c: 566:         if(kier == 0)
  3406  000092  5032               	movf	FRAME_AdressOfNeighbors@kier,w,c
  3407  000094  1033               	iorwf	FRAME_AdressOfNeighbors@kier+1,w,c
  3408  000096  A4D8               	btfss	status,2,c
  3409  000098  D041               	goto	l4287
  3410                           
  3411                           ;FRAME.c: 567:         {;FRAME.c: 568:         message->data[0] = (NeightAdress1>> 8);
  3412  00009A  EE20 F008          	lfsr	2,8
  3413  00009E  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3414  0000A0  26D9               	addwf	fsr2l,f,c
  3415  0000A2  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3416  0000A4  22DA               	addwfc	fsr2h,f,c
  3417  0000A6  504B               	movf	_NeightAdress1+1,w,c	;volatile
  3418  0000A8  6EDF               	movwf	indf2,c
  3419                           
  3420                           ;FRAME.c: 569:         message->data[1] = NeightAdress1 & 0b11111111;
  3421  0000AA  EE20 F009          	lfsr	2,9
  3422  0000AE  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3423  0000B0  26D9               	addwf	fsr2l,f,c
  3424  0000B2  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3425  0000B4  22DA               	addwfc	fsr2h,f,c
  3426  0000B6  C04A  FFDF         	movff	_NeightAdress1,indf2	;volatile
  3427                           
  3428                           ;FRAME.c: 570:         message->data[2] = (NeightAdress2>> 8);
  3429  0000BA  EE20 F00A          	lfsr	2,10
  3430  0000BE  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3431  0000C0  26D9               	addwf	fsr2l,f,c
  3432  0000C2  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3433  0000C4  22DA               	addwfc	fsr2h,f,c
  3434  0000C6  5049               	movf	_NeightAdress2+1,w,c	;volatile
  3435  0000C8  6EDF               	movwf	indf2,c
  3436                           
  3437                           ;FRAME.c: 571:         message->data[3] = NeightAdress2 & 0b11111111;
  3438  0000CA  EE20 F00B          	lfsr	2,11
  3439  0000CE  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3440  0000D0  26D9               	addwf	fsr2l,f,c
  3441  0000D2  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3442  0000D4  22DA               	addwfc	fsr2h,f,c
  3443  0000D6  C048  FFDF         	movff	_NeightAdress2,indf2	;volatile
  3444                           
  3445                           ;FRAME.c: 572:         message->data[4] = (NeightAdress3>> 8);
  3446  0000DA  EE20 F00C          	lfsr	2,12
  3447  0000DE  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3448  0000E0  26D9               	addwf	fsr2l,f,c
  3449  0000E2  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3450  0000E4  22DA               	addwfc	fsr2h,f,c
  3451  0000E6  5024               	movf	_NeightAdress3+1,w,c	;volatile
  3452  0000E8  6EDF               	movwf	indf2,c
  3453                           
  3454                           ;FRAME.c: 573:         message->data[5] = NeightAdress3 & 0b11111111;
  3455  0000EA  EE20 F00D          	lfsr	2,13
  3456  0000EE  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3457  0000F0  26D9               	addwf	fsr2l,f,c
  3458  0000F2  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3459  0000F4  22DA               	addwfc	fsr2h,f,c
  3460  0000F6  C023  FFDF         	movff	_NeightAdress3,indf2	;volatile
  3461                           
  3462                           ;FRAME.c: 574:         message->data[6] = (NeightAdress4>> 8);
  3463  0000FA  EE20 F00E          	lfsr	2,14
  3464  0000FE  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3465  000100  26D9               	addwf	fsr2l,f,c
  3466  000102  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3467  000104  22DA               	addwfc	fsr2h,f,c
  3468  000106  5022               	movf	_NeightAdress4+1,w,c	;volatile
  3469  000108  6EDF               	movwf	indf2,c
  3470                           
  3471                           ;FRAME.c: 575:         message->data[7] = NeightAdress4 & 0b11111111;
  3472  00010A  EE20 F00F          	lfsr	2,15
  3473  00010E  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3474  000110  26D9               	addwf	fsr2l,f,c
  3475  000112  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3476  000114  22DA               	addwfc	fsr2h,f,c
  3477  000116  C021  FFDF         	movff	_NeightAdress4,indf2	;volatile
  3478                           
  3479                           ;FRAME.c: 576:         }
  3480  00011A  0012               	return	
  3481  00011C                     l4287:
  3482                           
  3483                           ;FRAME.c: 578:         {;FRAME.c: 579:         message->data[0] = (NeightAdress5>> 8);
  3484  00011C  EE20 F008          	lfsr	2,8
  3485  000120  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3486  000122  26D9               	addwf	fsr2l,f,c
  3487  000124  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3488  000126  22DA               	addwfc	fsr2h,f,c
  3489  000128  5020               	movf	_NeightAdress5+1,w,c	;volatile
  3490  00012A  6EDF               	movwf	indf2,c
  3491                           
  3492                           ;FRAME.c: 580:         message->data[1] = NeightAdress5 & 0b11111111;
  3493  00012C  EE20 F009          	lfsr	2,9
  3494  000130  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3495  000132  26D9               	addwf	fsr2l,f,c
  3496  000134  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3497  000136  22DA               	addwfc	fsr2h,f,c
  3498  000138  C01F  FFDF         	movff	_NeightAdress5,indf2	;volatile
  3499                           
  3500                           ;FRAME.c: 581:         message->data[2] = (NeightAdress6>> 8);
  3501  00013C  EE20 F00A          	lfsr	2,10
  3502  000140  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3503  000142  26D9               	addwf	fsr2l,f,c
  3504  000144  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3505  000146  22DA               	addwfc	fsr2h,f,c
  3506  000148  501E               	movf	_NeightAdress6+1,w,c	;volatile
  3507  00014A  6EDF               	movwf	indf2,c
  3508                           
  3509                           ;FRAME.c: 582:         message->data[3] = NeightAdress6 & 0b11111111;
  3510  00014C  EE20 F00B          	lfsr	2,11
  3511  000150  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3512  000152  26D9               	addwf	fsr2l,f,c
  3513  000154  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3514  000156  22DA               	addwfc	fsr2h,f,c
  3515  000158  C01D  FFDF         	movff	_NeightAdress6,indf2	;volatile
  3516                           
  3517                           ;FRAME.c: 583:         message->data[4] = (NeightAdress7>> 8);
  3518  00015C  EE20 F00C          	lfsr	2,12
  3519  000160  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3520  000162  26D9               	addwf	fsr2l,f,c
  3521  000164  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3522  000166  22DA               	addwfc	fsr2h,f,c
  3523  000168  501C               	movf	_NeightAdress7+1,w,c	;volatile
  3524  00016A  6EDF               	movwf	indf2,c
  3525                           
  3526                           ;FRAME.c: 584:         message->data[5] = NeightAdress7 & 0b11111111;
  3527  00016C  EE20 F00D          	lfsr	2,13
  3528  000170  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3529  000172  26D9               	addwf	fsr2l,f,c
  3530  000174  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3531  000176  22DA               	addwfc	fsr2h,f,c
  3532  000178  C01B  FFDF         	movff	_NeightAdress7,indf2	;volatile
  3533                           
  3534                           ;FRAME.c: 585:         message->data[6] = (NeightAdress8>> 8);
  3535  00017C  EE20 F00E          	lfsr	2,14
  3536  000180  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3537  000182  26D9               	addwf	fsr2l,f,c
  3538  000184  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3539  000186  22DA               	addwfc	fsr2h,f,c
  3540  000188  501A               	movf	_NeightAdress8+1,w,c	;volatile
  3541  00018A  6EDF               	movwf	indf2,c
  3542                           
  3543                           ;FRAME.c: 586:         message->data[7] = NeightAdress8 & 0b11111111;
  3544  00018C  EE20 F00F          	lfsr	2,15
  3545  000190  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3546  000192  26D9               	addwf	fsr2l,f,c
  3547  000194  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3548  000196  22DA               	addwfc	fsr2h,f,c
  3549  000198  C019  FFDF         	movff	_NeightAdress8,indf2	;volatile
  3550  00019C  0012               	return	
  3551  00019E                     l4289:
  3552                           
  3553                           ;FRAME.c: 593:     {;FRAME.c: 596:         if(kier == 0)
  3554  00019E  5032               	movf	FRAME_AdressOfNeighbors@kier,w,c
  3555  0001A0  1033               	iorwf	FRAME_AdressOfNeighbors@kier+1,w,c
  3556  0001A2  A4D8               	btfss	status,2,c
  3557  0001A4  D063               	goto	l4295
  3558                           
  3559                           ;FRAME.c: 597:         {;FRAME.c: 598:          NeightAdress1 = (message->data[0] << 8)|
      +                           message->data[1];
  3560  0001A6  EE20 F008          	lfsr	2,8
  3561  0001AA  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3562  0001AC  26D9               	addwf	fsr2l,f,c
  3563  0001AE  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3564  0001B0  22DA               	addwfc	fsr2h,f,c
  3565  0001B2  50DF               	movf	indf2,w,c
  3566  0001B4  6E2E               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3567  0001B6  502E               	movf	??_FRAME_AdressOfNeighbors,w,c
  3568  0001B8  6E30               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3569  0001BA  6A2F               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3570  0001BC  EE20 F009          	lfsr	2,9
  3571  0001C0  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3572  0001C2  26D9               	addwf	fsr2l,f,c
  3573  0001C4  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3574  0001C6  22DA               	addwfc	fsr2h,f,c
  3575  0001C8  50DF               	movf	indf2,w,c
  3576  0001CA  6E31               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3577  0001CC  5031               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3578  0001CE  102F               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3579  0001D0  6E4A               	movwf	_NeightAdress1,c	;volatile
  3580  0001D2  5030               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3581  0001D4  6E4B               	movwf	_NeightAdress1+1,c	;volatile
  3582                           
  3583                           ;FRAME.c: 599:          NeightAdress2 = (message->data[2] << 8)| message->data[3];
  3584  0001D6  EE20 F00A          	lfsr	2,10
  3585  0001DA  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3586  0001DC  26D9               	addwf	fsr2l,f,c
  3587  0001DE  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3588  0001E0  22DA               	addwfc	fsr2h,f,c
  3589  0001E2  50DF               	movf	indf2,w,c
  3590  0001E4  6E2E               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3591  0001E6  502E               	movf	??_FRAME_AdressOfNeighbors,w,c
  3592  0001E8  6E30               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3593  0001EA  6A2F               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3594  0001EC  EE20 F00B          	lfsr	2,11
  3595  0001F0  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3596  0001F2  26D9               	addwf	fsr2l,f,c
  3597  0001F4  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3598  0001F6  22DA               	addwfc	fsr2h,f,c
  3599  0001F8  50DF               	movf	indf2,w,c
  3600  0001FA  6E31               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3601  0001FC  5031               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3602  0001FE  102F               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3603  000200  6E48               	movwf	_NeightAdress2,c	;volatile
  3604  000202  5030               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3605  000204  6E49               	movwf	_NeightAdress2+1,c	;volatile
  3606                           
  3607                           ;FRAME.c: 600:          NeightAdress3 = (message->data[4] << 8)| message->data[5];
  3608  000206  EE20 F00C          	lfsr	2,12
  3609  00020A  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3610  00020C  26D9               	addwf	fsr2l,f,c
  3611  00020E  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3612  000210  22DA               	addwfc	fsr2h,f,c
  3613  000212  50DF               	movf	indf2,w,c
  3614  000214  6E2E               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3615  000216  502E               	movf	??_FRAME_AdressOfNeighbors,w,c
  3616  000218  6E30               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3617  00021A  6A2F               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3618  00021C  EE20 F00D          	lfsr	2,13
  3619  000220  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3620  000222  26D9               	addwf	fsr2l,f,c
  3621  000224  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3622  000226  22DA               	addwfc	fsr2h,f,c
  3623  000228  50DF               	movf	indf2,w,c
  3624  00022A  6E31               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3625  00022C  5031               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3626  00022E  102F               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3627  000230  6E23               	movwf	_NeightAdress3,c	;volatile
  3628  000232  5030               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3629  000234  6E24               	movwf	_NeightAdress3+1,c	;volatile
  3630                           
  3631                           ;FRAME.c: 601:          NeightAdress4 = (message->data[6] << 8)| message->data[7];
  3632  000236  EE20 F00E          	lfsr	2,14
  3633  00023A  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3634  00023C  26D9               	addwf	fsr2l,f,c
  3635  00023E  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3636  000240  22DA               	addwfc	fsr2h,f,c
  3637  000242  50DF               	movf	indf2,w,c
  3638  000244  6E2E               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3639  000246  502E               	movf	??_FRAME_AdressOfNeighbors,w,c
  3640  000248  6E30               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3641  00024A  6A2F               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3642  00024C  EE20 F00F          	lfsr	2,15
  3643  000250  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3644  000252  26D9               	addwf	fsr2l,f,c
  3645  000254  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3646  000256  22DA               	addwfc	fsr2h,f,c
  3647  000258  50DF               	movf	indf2,w,c
  3648  00025A  6E31               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3649  00025C  5031               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3650  00025E  102F               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3651  000260  6E21               	movwf	_NeightAdress4,c	;volatile
  3652  000262  5030               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3653  000264  6E22               	movwf	_NeightAdress4+1,c	;volatile
  3654  000266                     l4293:
  3655                           
  3656                           ;FRAME.c: 602:          CAN_SetupFilter_Ne();
  3657  000266  EC51  F008         	call	_CAN_SetupFilter_Ne	;wreg free
  3658                           
  3659                           ;FRAME.c: 605:         }
  3660  00026A  0012               	return	
  3661  00026C                     l4295:
  3662                           
  3663                           ;FRAME.c: 607:         {;FRAME.c: 608:          NeightAdress5 = (message->data[0] << 8)|
      +                           message->data[1];
  3664  00026C  EE20 F008          	lfsr	2,8
  3665  000270  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3666  000272  26D9               	addwf	fsr2l,f,c
  3667  000274  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3668  000276  22DA               	addwfc	fsr2h,f,c
  3669  000278  50DF               	movf	indf2,w,c
  3670  00027A  6E2E               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3671  00027C  502E               	movf	??_FRAME_AdressOfNeighbors,w,c
  3672  00027E  6E30               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3673  000280  6A2F               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3674  000282  EE20 F009          	lfsr	2,9
  3675  000286  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3676  000288  26D9               	addwf	fsr2l,f,c
  3677  00028A  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3678  00028C  22DA               	addwfc	fsr2h,f,c
  3679  00028E  50DF               	movf	indf2,w,c
  3680  000290  6E31               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3681  000292  5031               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3682  000294  102F               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3683  000296  6E1F               	movwf	_NeightAdress5,c	;volatile
  3684  000298  5030               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3685  00029A  6E20               	movwf	_NeightAdress5+1,c	;volatile
  3686                           
  3687                           ;FRAME.c: 609:          NeightAdress6 = (message->data[2] << 8)| message->data[3];
  3688  00029C  EE20 F00A          	lfsr	2,10
  3689  0002A0  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3690  0002A2  26D9               	addwf	fsr2l,f,c
  3691  0002A4  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3692  0002A6  22DA               	addwfc	fsr2h,f,c
  3693  0002A8  50DF               	movf	indf2,w,c
  3694  0002AA  6E2E               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3695  0002AC  502E               	movf	??_FRAME_AdressOfNeighbors,w,c
  3696  0002AE  6E30               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3697  0002B0  6A2F               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3698  0002B2  EE20 F00B          	lfsr	2,11
  3699  0002B6  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3700  0002B8  26D9               	addwf	fsr2l,f,c
  3701  0002BA  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3702  0002BC  22DA               	addwfc	fsr2h,f,c
  3703  0002BE  50DF               	movf	indf2,w,c
  3704  0002C0  6E31               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3705  0002C2  5031               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3706  0002C4  102F               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3707  0002C6  6E1D               	movwf	_NeightAdress6,c	;volatile
  3708  0002C8  5030               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3709  0002CA  6E1E               	movwf	_NeightAdress6+1,c	;volatile
  3710                           
  3711                           ;FRAME.c: 610:          NeightAdress7 = (message->data[4] << 8)| message->data[5];
  3712  0002CC  EE20 F00C          	lfsr	2,12
  3713  0002D0  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3714  0002D2  26D9               	addwf	fsr2l,f,c
  3715  0002D4  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3716  0002D6  22DA               	addwfc	fsr2h,f,c
  3717  0002D8  50DF               	movf	indf2,w,c
  3718  0002DA  6E2E               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3719  0002DC  502E               	movf	??_FRAME_AdressOfNeighbors,w,c
  3720  0002DE  6E30               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3721  0002E0  6A2F               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3722  0002E2  EE20 F00D          	lfsr	2,13
  3723  0002E6  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3724  0002E8  26D9               	addwf	fsr2l,f,c
  3725  0002EA  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3726  0002EC  22DA               	addwfc	fsr2h,f,c
  3727  0002EE  50DF               	movf	indf2,w,c
  3728  0002F0  6E31               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3729  0002F2  5031               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3730  0002F4  102F               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3731  0002F6  6E1B               	movwf	_NeightAdress7,c	;volatile
  3732  0002F8  5030               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3733  0002FA  6E1C               	movwf	_NeightAdress7+1,c	;volatile
  3734                           
  3735                           ;FRAME.c: 611:          NeightAdress8 = (message->data[6] << 8)| message->data[7];
  3736  0002FC  EE20 F00E          	lfsr	2,14
  3737  000300  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3738  000302  26D9               	addwf	fsr2l,f,c
  3739  000304  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3740  000306  22DA               	addwfc	fsr2h,f,c
  3741  000308  50DF               	movf	indf2,w,c
  3742  00030A  6E2E               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3743  00030C  502E               	movf	??_FRAME_AdressOfNeighbors,w,c
  3744  00030E  6E30               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3745  000310  6A2F               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3746  000312  EE20 F00F          	lfsr	2,15
  3747  000316  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3748  000318  26D9               	addwf	fsr2l,f,c
  3749  00031A  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3750  00031C  22DA               	addwfc	fsr2h,f,c
  3751  00031E  50DF               	movf	indf2,w,c
  3752  000320  6E31               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3753  000322  5031               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3754  000324  102F               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3755  000326  6E19               	movwf	_NeightAdress8,c	;volatile
  3756  000328  5030               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3757  00032A  6E1A               	movwf	_NeightAdress8+1,c	;volatile
  3758  00032C  D79C               	goto	l4293
  3759  00032E                     __end_of_FRAME_AdressOfNeighbors:
  3760                           	opt callstack 0
  3761                           
  3762 ;; *************** function _FRAME_AccelerometerStatus *****************
  3763 ;; Defined at:
  3764 ;;		line 161 in file "FRAME.c"
  3765 ;; Parameters:    Size  Location     Type
  3766 ;;  message         2    7[COMRAM] PTR struct .
  3767 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3768 ;; Auto vars:     Size  Location     Type
  3769 ;;		None
  3770 ;; Return value:  Size  Location     Type
  3771 ;;                  1    wreg      void 
  3772 ;; Registers used:
  3773 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3774 ;; Tracked objects:
  3775 ;;		On entry : 0/0
  3776 ;;		On exit  : 0/0
  3777 ;;		Unchanged: 0/0
  3778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3779 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3781 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3782 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3783 ;;Total ram usage:        3 bytes
  3784 ;; Hardware stack levels used:    1
  3785 ;; Hardware stack levels required when called:    4
  3786 ;; This function calls:
  3787 ;;		_MOCK_Klikniecie_Spadek
  3788 ;;		_MOCK_PrzyspieszenieX
  3789 ;;		_MOCK_PrzyspieszenieY
  3790 ;;		_MOCK_PrzyspieszenieZ
  3791 ;; This function is called by:
  3792 ;;		_FRAME_HandleCanFrame
  3793 ;; This function uses a non-reentrant model
  3794 ;;
  3795                           
  3796                           	psect	text27
  3797  0012AE                     __ptext27:
  3798                           	opt callstack 0
  3799  0012AE                     _FRAME_AccelerometerStatus:
  3800                           	opt callstack 24
  3801                           
  3802                           ;FRAME.c: 161: static void FRAME_AccelerometerStatus(mID *message);FRAME.c: 162: {;FRAME
      +                          .c: 163:     if(message->message_type == 0x02)
  3803                           
  3804                           ;incstack = 0
  3805  0012AE  EE20 F001          	lfsr	2,1
  3806  0012B2  502C               	movf	FRAME_AccelerometerStatus@message,w,c
  3807  0012B4  26D9               	addwf	fsr2l,f,c
  3808  0012B6  502D               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3809  0012B8  22DA               	addwfc	fsr2h,f,c
  3810  0012BA  0E02               	movlw	2
  3811  0012BC  18DE               	xorwf	postinc2,w,c
  3812  0012BE  A4D8               	btfss	status,2,c
  3813  0012C0  0012               	return	
  3814                           
  3815                           ;FRAME.c: 164:     {;FRAME.c: 165:         message->data_length = 4;
  3816  0012C2  EE20 F010          	lfsr	2,16
  3817  0012C6  502C               	movf	FRAME_AccelerometerStatus@message,w,c
  3818  0012C8  26D9               	addwf	fsr2l,f,c
  3819  0012CA  502D               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3820  0012CC  22DA               	addwfc	fsr2h,f,c
  3821  0012CE  0E04               	movlw	4
  3822  0012D0  6EDF               	movwf	indf2,c
  3823                           
  3824                           ;FRAME.c: 169:         message->data[0] = MOCK_PrzyspieszenieX();
  3825  0012D2  EE20 F008          	lfsr	2,8
  3826  0012D6  502C               	movf	FRAME_AccelerometerStatus@message,w,c
  3827  0012D8  26D9               	addwf	fsr2l,f,c
  3828  0012DA  502D               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3829  0012DC  22DA               	addwfc	fsr2h,f,c
  3830  0012DE  EC24  F00D         	call	_MOCK_PrzyspieszenieX	;wreg free
  3831  0012E2  502A               	movf	?_MOCK_PrzyspieszenieX,w,c
  3832  0012E4  6EDF               	movwf	indf2,c
  3833                           
  3834                           ;FRAME.c: 170:         message->data[1] = MOCK_PrzyspieszenieY();
  3835  0012E6  EE20 F009          	lfsr	2,9
  3836  0012EA  502C               	movf	FRAME_AccelerometerStatus@message,w,c
  3837  0012EC  26D9               	addwf	fsr2l,f,c
  3838  0012EE  502D               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3839  0012F0  22DA               	addwfc	fsr2h,f,c
  3840  0012F2  EC1F  F00D         	call	_MOCK_PrzyspieszenieY	;wreg free
  3841  0012F6  502A               	movf	?_MOCK_PrzyspieszenieY,w,c
  3842  0012F8  6EDF               	movwf	indf2,c
  3843                           
  3844                           ;FRAME.c: 171:         message->data[2] = MOCK_PrzyspieszenieZ();
  3845  0012FA  EE20 F00A          	lfsr	2,10
  3846  0012FE  502C               	movf	FRAME_AccelerometerStatus@message,w,c
  3847  001300  26D9               	addwf	fsr2l,f,c
  3848  001302  502D               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3849  001304  22DA               	addwfc	fsr2h,f,c
  3850  001306  EC1A  F00D         	call	_MOCK_PrzyspieszenieZ	;wreg free
  3851  00130A  502A               	movf	?_MOCK_PrzyspieszenieZ,w,c
  3852  00130C  6EDF               	movwf	indf2,c
  3853                           
  3854                           ;FRAME.c: 172:         message->data[3] = MOCK_Klikniecie_Spadek();
  3855  00130E  EE20 F00B          	lfsr	2,11
  3856  001312  502C               	movf	FRAME_AccelerometerStatus@message,w,c
  3857  001314  26D9               	addwf	fsr2l,f,c
  3858  001316  502D               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3859  001318  22DA               	addwfc	fsr2h,f,c
  3860  00131A  EC29  F00D         	call	_MOCK_Klikniecie_Spadek	;wreg free
  3861  00131E  502A               	movf	?_MOCK_Klikniecie_Spadek,w,c
  3862  001320  6EDF               	movwf	indf2,c
  3863                           
  3864                           ;FRAME.c: 173:     }
  3865  001322  0012               	return		;funcret
  3866  001324                     __end_of_FRAME_AccelerometerStatus:
  3867                           	opt callstack 0
  3868                           
  3869 ;; *************** function _MOCK_PrzyspieszenieZ *****************
  3870 ;; Defined at:
  3871 ;;		line 72 in file "MOC_Funct.c"
  3872 ;; Parameters:    Size  Location     Type
  3873 ;;		None
  3874 ;; Auto vars:     Size  Location     Type
  3875 ;;		None
  3876 ;; Return value:  Size  Location     Type
  3877 ;;                  2    5[COMRAM] unsigned int 
  3878 ;; Registers used:
  3879 ;;		wreg, status,2
  3880 ;; Tracked objects:
  3881 ;;		On entry : 0/0
  3882 ;;		On exit  : 0/0
  3883 ;;		Unchanged: 0/0
  3884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3885 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3888 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3889 ;;Total ram usage:        2 bytes
  3890 ;; Hardware stack levels used:    1
  3891 ;; Hardware stack levels required when called:    3
  3892 ;; This function calls:
  3893 ;;		Nothing
  3894 ;; This function is called by:
  3895 ;;		_FRAME_AccelerometerStatus
  3896 ;; This function uses a non-reentrant model
  3897 ;;
  3898                           
  3899                           	psect	text28
  3900  001A34                     __ptext28:
  3901                           	opt callstack 0
  3902  001A34                     _MOCK_PrzyspieszenieZ:
  3903                           	opt callstack 24
  3904                           
  3905                           ;MOC_Funct.c: 74:     return 0xFE;
  3906                           
  3907                           ;incstack = 0
  3908  001A34  0E00               	movlw	0
  3909  001A36  6E2B               	movwf	?_MOCK_PrzyspieszenieZ+1,c
  3910  001A38  0EFE               	movlw	254
  3911  001A3A  6E2A               	movwf	?_MOCK_PrzyspieszenieZ,c
  3912  001A3C  0012               	return		;funcret
  3913  001A3E                     __end_of_MOCK_PrzyspieszenieZ:
  3914                           	opt callstack 0
  3915                           
  3916 ;; *************** function _MOCK_PrzyspieszenieY *****************
  3917 ;; Defined at:
  3918 ;;		line 68 in file "MOC_Funct.c"
  3919 ;; Parameters:    Size  Location     Type
  3920 ;;		None
  3921 ;; Auto vars:     Size  Location     Type
  3922 ;;		None
  3923 ;; Return value:  Size  Location     Type
  3924 ;;                  2    5[COMRAM] unsigned int 
  3925 ;; Registers used:
  3926 ;;		wreg, status,2
  3927 ;; Tracked objects:
  3928 ;;		On entry : 0/0
  3929 ;;		On exit  : 0/0
  3930 ;;		Unchanged: 0/0
  3931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3932 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3935 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3936 ;;Total ram usage:        2 bytes
  3937 ;; Hardware stack levels used:    1
  3938 ;; Hardware stack levels required when called:    3
  3939 ;; This function calls:
  3940 ;;		Nothing
  3941 ;; This function is called by:
  3942 ;;		_FRAME_AccelerometerStatus
  3943 ;; This function uses a non-reentrant model
  3944 ;;
  3945                           
  3946                           	psect	text29
  3947  001A3E                     __ptext29:
  3948                           	opt callstack 0
  3949  001A3E                     _MOCK_PrzyspieszenieY:
  3950                           	opt callstack 24
  3951                           
  3952                           ;MOC_Funct.c: 70:     return 0xFE;
  3953                           
  3954                           ;incstack = 0
  3955  001A3E  0E00               	movlw	0
  3956  001A40  6E2B               	movwf	?_MOCK_PrzyspieszenieY+1,c
  3957  001A42  0EFE               	movlw	254
  3958  001A44  6E2A               	movwf	?_MOCK_PrzyspieszenieY,c
  3959  001A46  0012               	return		;funcret
  3960  001A48                     __end_of_MOCK_PrzyspieszenieY:
  3961                           	opt callstack 0
  3962                           
  3963 ;; *************** function _MOCK_PrzyspieszenieX *****************
  3964 ;; Defined at:
  3965 ;;		line 63 in file "MOC_Funct.c"
  3966 ;; Parameters:    Size  Location     Type
  3967 ;;		None
  3968 ;; Auto vars:     Size  Location     Type
  3969 ;;		None
  3970 ;; Return value:  Size  Location     Type
  3971 ;;                  2    5[COMRAM] unsigned int 
  3972 ;; Registers used:
  3973 ;;		wreg, status,2
  3974 ;; Tracked objects:
  3975 ;;		On entry : 0/0
  3976 ;;		On exit  : 0/0
  3977 ;;		Unchanged: 0/0
  3978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3979 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3982 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3983 ;;Total ram usage:        2 bytes
  3984 ;; Hardware stack levels used:    1
  3985 ;; Hardware stack levels required when called:    3
  3986 ;; This function calls:
  3987 ;;		Nothing
  3988 ;; This function is called by:
  3989 ;;		_FRAME_AccelerometerStatus
  3990 ;; This function uses a non-reentrant model
  3991 ;;
  3992                           
  3993                           	psect	text30
  3994  001A48                     __ptext30:
  3995                           	opt callstack 0
  3996  001A48                     _MOCK_PrzyspieszenieX:
  3997                           	opt callstack 24
  3998                           
  3999                           ;MOC_Funct.c: 65:     return 0xFE;
  4000                           
  4001                           ;incstack = 0
  4002  001A48  0E00               	movlw	0
  4003  001A4A  6E2B               	movwf	?_MOCK_PrzyspieszenieX+1,c
  4004  001A4C  0EFE               	movlw	254
  4005  001A4E  6E2A               	movwf	?_MOCK_PrzyspieszenieX,c
  4006  001A50  0012               	return		;funcret
  4007  001A52                     __end_of_MOCK_PrzyspieszenieX:
  4008                           	opt callstack 0
  4009                           
  4010 ;; *************** function _MOCK_Klikniecie_Spadek *****************
  4011 ;; Defined at:
  4012 ;;		line 76 in file "MOC_Funct.c"
  4013 ;; Parameters:    Size  Location     Type
  4014 ;;		None
  4015 ;; Auto vars:     Size  Location     Type
  4016 ;;		None
  4017 ;; Return value:  Size  Location     Type
  4018 ;;                  2    5[COMRAM] unsigned int 
  4019 ;; Registers used:
  4020 ;;		wreg, status,2
  4021 ;; Tracked objects:
  4022 ;;		On entry : 0/0
  4023 ;;		On exit  : 0/0
  4024 ;;		Unchanged: 0/0
  4025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4026 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4029 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4030 ;;Total ram usage:        2 bytes
  4031 ;; Hardware stack levels used:    1
  4032 ;; Hardware stack levels required when called:    3
  4033 ;; This function calls:
  4034 ;;		Nothing
  4035 ;; This function is called by:
  4036 ;;		_FRAME_AccelerometerStatus
  4037 ;; This function uses a non-reentrant model
  4038 ;;
  4039                           
  4040                           	psect	text31
  4041  001A52                     __ptext31:
  4042                           	opt callstack 0
  4043  001A52                     _MOCK_Klikniecie_Spadek:
  4044                           	opt callstack 24
  4045                           
  4046                           ;MOC_Funct.c: 78:     return 0b00000000;
  4047                           
  4048                           ;incstack = 0
  4049  001A52  0E00               	movlw	0
  4050  001A54  6E2B               	movwf	?_MOCK_Klikniecie_Spadek+1,c
  4051  001A56  0E00               	movlw	0
  4052  001A58  6E2A               	movwf	?_MOCK_Klikniecie_Spadek,c
  4053  001A5A  0012               	return		;funcret
  4054  001A5C                     __end_of_MOCK_Klikniecie_Spadek:
  4055                           	opt callstack 0
  4056                           
  4057 ;; *************** function _CAN_SendFrame *****************
  4058 ;; Defined at:
  4059 ;;		line 246 in file "CAN.c"
  4060 ;; Parameters:    Size  Location     Type
  4061 ;;  message         2   10[COMRAM] PTR struct .
  4062 ;;		 -> TRM_DataTransmition@canMessage(17), 
  4063 ;; Auto vars:     Size  Location     Type
  4064 ;;		None
  4065 ;; Return value:  Size  Location     Type
  4066 ;;                  1    wreg      void 
  4067 ;; Registers used:
  4068 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4069 ;; Tracked objects:
  4070 ;;		On entry : 0/0
  4071 ;;		On exit  : 0/0
  4072 ;;		Unchanged: 0/0
  4073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4074 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4076 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4077 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4078 ;;Total ram usage:        5 bytes
  4079 ;; Hardware stack levels used:    1
  4080 ;; Hardware stack levels required when called:    4
  4081 ;; This function calls:
  4082 ;;		_CAN_MoveBuffIntoFrame
  4083 ;; This function is called by:
  4084 ;;		_FRAME_HandleCanFrame
  4085 ;; This function uses a non-reentrant model
  4086 ;;
  4087                           
  4088                           	psect	text32
  4089  0007B0                     __ptext32:
  4090                           	opt callstack 0
  4091  0007B0                     _CAN_SendFrame:
  4092                           	opt callstack 24
  4093                           
  4094                           ;CAN.c: 251:     {;CAN.c: 252:         ECANCON = 0x83;
  4095                           
  4096                           ;incstack = 0
  4097                           ;CAN.c: 246: void CAN_SendFrame(mID * message);CAN.c: 247: {;CAN.c: 250:     for(;;)
  4098  0007B0  0E83               	movlw	131
  4099  0007B2  6E77               	movwf	3959,c	;volatile
  4100                           
  4101                           ;CAN.c: 253:         if(!RXB0CONbits.FILHIT3)
  4102  0007B4  A660               	btfss	3936,3,c	;volatile
  4103  0007B6  D00A               	goto	l280
  4104                           
  4105                           ;CAN.c: 258:         ECANCON = 0x84;
  4106  0007B8  0E84               	movlw	132
  4107  0007BA  6E77               	movwf	3959,c	;volatile
  4108                           
  4109                           ;CAN.c: 259:         if(!RXB0CONbits.FILHIT3)
  4110  0007BC  A660               	btfss	3936,3,c	;volatile
  4111  0007BE  D006               	goto	l280
  4112                           
  4113                           ;CAN.c: 264:         ECANCON = 0x85;
  4114  0007C0  0E85               	movlw	133
  4115  0007C2  6E77               	movwf	3959,c	;volatile
  4116                           
  4117                           ;CAN.c: 265:         if(!RXB0CONbits.FILHIT3)
  4118  0007C4  A660               	btfss	3936,3,c	;volatile
  4119  0007C6  D002               	goto	l280
  4120  0007C8  D7F3               	goto	_CAN_SendFrame
  4121  0007CA                     l281:
  4122  0007CA  00FF               	reset		;# 
  4123  0007CC                     l280:
  4124                           
  4125                           ;CAN.c: 272:     while(COMSTATbits.TXWARN)
  4126  0007CC  B474               	btfsc	3956,2,c	;volatile
  4127  0007CE  D7FD               	goto	l281
  4128                           
  4129                           ;CAN.c: 276:     DetectorLedRadar.timerRamkiTxCANU8 = 0;
  4130  0007D0  0E00               	movlw	0
  4131  0007D2  0100               	movlb	0	; () banked
  4132  0007D4  6FCD               	movwf	(_DetectorLedRadar+2)& (0+255),b
  4133                           
  4134                           ; BSR set to: 0
  4135                           ;CAN.c: 277:     RXB0EIDL = message->id.v[0];
  4136  0007D6  EE20 F004          	lfsr	2,4
  4137  0007DA  502F               	movf	CAN_SendFrame@message,w,c
  4138  0007DC  26D9               	addwf	fsr2l,f,c
  4139  0007DE  5030               	movf	CAN_SendFrame@message+1,w,c
  4140  0007E0  22DA               	addwfc	fsr2h,f,c
  4141  0007E2  50DF               	movf	indf2,w,c
  4142  0007E4  6E64               	movwf	3940,c	;volatile
  4143                           
  4144                           ; BSR set to: 0
  4145                           ;CAN.c: 278:     RXB0EIDH = message->id.v[1];
  4146  0007E6  EE20 F005          	lfsr	2,5
  4147  0007EA  502F               	movf	CAN_SendFrame@message,w,c
  4148  0007EC  26D9               	addwf	fsr2l,f,c
  4149  0007EE  5030               	movf	CAN_SendFrame@message+1,w,c
  4150  0007F0  22DA               	addwfc	fsr2h,f,c
  4151  0007F2  50DF               	movf	indf2,w,c
  4152  0007F4  6E63               	movwf	3939,c	;volatile
  4153                           
  4154                           ; BSR set to: 0
  4155                           ;CAN.c: 279:     RXB0SIDL = ((message->id.v[2]&0xFC)*8) | (message->id.v[2] & (0x03));
  4156  0007F6  EE20 F006          	lfsr	2,6
  4157  0007FA  502F               	movf	CAN_SendFrame@message,w,c
  4158  0007FC  26D9               	addwf	fsr2l,f,c
  4159  0007FE  5030               	movf	CAN_SendFrame@message+1,w,c
  4160  000800  22DA               	addwfc	fsr2h,f,c
  4161  000802  50DF               	movf	indf2,w,c
  4162  000804  6E31               	movwf	??_CAN_SendFrame& (0+255),c
  4163  000806  0E03               	movlw	3
  4164  000808  1631               	andwf	??_CAN_SendFrame,f,c
  4165  00080A  EE20 F006          	lfsr	2,6
  4166  00080E  502F               	movf	CAN_SendFrame@message,w,c
  4167  000810  26D9               	addwf	fsr2l,f,c
  4168  000812  5030               	movf	CAN_SendFrame@message+1,w,c
  4169  000814  22DA               	addwfc	fsr2h,f,c
  4170  000816  50DF               	movf	indf2,w,c
  4171  000818  0BFC               	andlw	252
  4172  00081A  0D08               	mullw	8
  4173  00081C  50F3               	movf	prodl,w,c
  4174  00081E  1031               	iorwf	??_CAN_SendFrame,w,c
  4175  000820  6E62               	movwf	3938,c	;volatile
  4176                           
  4177                           ; BSR set to: 0
  4178                           ;CAN.c: 280:     RXB0SIDLbits.EXID = 1;
  4179  000822  8662               	bsf	3938,3,c	;volatile
  4180                           
  4181                           ; BSR set to: 0
  4182                           ;CAN.c: 281:     RXB0SIDH = (BYTE)(message->id.w[1]/32);
  4183  000824  EE20 F006          	lfsr	2,6
  4184  000828  502F               	movf	CAN_SendFrame@message,w,c
  4185  00082A  26D9               	addwf	fsr2l,f,c
  4186  00082C  5030               	movf	CAN_SendFrame@message+1,w,c
  4187  00082E  22DA               	addwfc	fsr2h,f,c
  4188  000830  CFDE F031          	movff	postinc2,??_CAN_SendFrame
  4189  000834  CFDD F032          	movff	postdec2,??_CAN_SendFrame+1
  4190  000838  0E05               	movlw	5
  4191  00083A  6E33               	movwf	(??_CAN_SendFrame+2)& (0+255),c
  4192  00083C                     u2375:
  4193  00083C  90D8               	bcf	status,0,c
  4194  00083E  3232               	rrcf	??_CAN_SendFrame+1,f,c
  4195  000840  3231               	rrcf	??_CAN_SendFrame,f,c
  4196  000842  2E33               	decfsz	(??_CAN_SendFrame+2)& (0+255),f,c
  4197  000844  D7FB               	goto	u2375
  4198  000846  5031               	movf	??_CAN_SendFrame,w,c
  4199  000848  6E61               	movwf	3937,c	;volatile
  4200                           
  4201                           ; BSR set to: 0
  4202                           ;CAN.c: 283:     RXB0DLC = 0;
  4203  00084A  0E00               	movlw	0
  4204  00084C  6E65               	movwf	3941,c	;volatile
  4205                           
  4206                           ; BSR set to: 0
  4207                           ;CAN.c: 285:     if(message->message_type==0x02)
  4208  00084E  EE20 F001          	lfsr	2,1
  4209  000852  502F               	movf	CAN_SendFrame@message,w,c
  4210  000854  26D9               	addwf	fsr2l,f,c
  4211  000856  5030               	movf	CAN_SendFrame@message+1,w,c
  4212  000858  22DA               	addwfc	fsr2h,f,c
  4213  00085A  0E02               	movlw	2
  4214  00085C  18DE               	xorwf	postinc2,w,c
  4215  00085E  A4D8               	btfss	status,2,c
  4216  000860  D002               	goto	l4153
  4217                           
  4218                           ; BSR set to: 0
  4219                           ;CAN.c: 286:     {;CAN.c: 287:         RXB0DLCbits.RXRTR = 1;
  4220  000862  8C65               	bsf	3941,6,c	;volatile
  4221                           
  4222                           ;CAN.c: 288:     }
  4223  000864  D05A               	goto	l4157
  4224  000866                     l4153:
  4225                           
  4226                           ; BSR set to: 0
  4227                           ;CAN.c: 290:     {;CAN.c: 291:         RXB0DLCbits.DLC0 = (message->data_length & 0x0F);
  4228  000866  EE20 F010          	lfsr	2,16
  4229  00086A  502F               	movf	CAN_SendFrame@message,w,c
  4230  00086C  26D9               	addwf	fsr2l,f,c
  4231  00086E  5030               	movf	CAN_SendFrame@message+1,w,c
  4232  000870  22DA               	addwfc	fsr2h,f,c
  4233  000872  50DF               	movf	indf2,w,c
  4234  000874  6E31               	movwf	??_CAN_SendFrame& (0+255),c
  4235  000876  0E0F               	movlw	15
  4236  000878  1631               	andwf	??_CAN_SendFrame,f,c
  4237  00087A  5065               	movf	3941,w,c	;volatile
  4238  00087C  1831               	xorwf	??_CAN_SendFrame,w,c
  4239  00087E  0BFE               	andlw	-2
  4240  000880  1831               	xorwf	??_CAN_SendFrame,w,c
  4241  000882  6E65               	movwf	3941,c	;volatile
  4242                           
  4243                           ;CAN.c: 292:         RXB0DLCbits.DLC1 = ((message->data_length & 0x0F)>> 1);
  4244  000884  EE20 F010          	lfsr	2,16
  4245  000888  502F               	movf	CAN_SendFrame@message,w,c
  4246  00088A  26D9               	addwf	fsr2l,f,c
  4247  00088C  5030               	movf	CAN_SendFrame@message+1,w,c
  4248  00088E  22DA               	addwfc	fsr2h,f,c
  4249  000890  50DF               	movf	indf2,w,c
  4250  000892  6E31               	movwf	??_CAN_SendFrame& (0+255),c
  4251  000894  90D8               	bcf	status,0,c
  4252  000896  3231               	rrcf	??_CAN_SendFrame,f,c
  4253  000898  0E07               	movlw	7
  4254  00089A  1631               	andwf	??_CAN_SendFrame,f,c
  4255  00089C  4631               	rlncf	??_CAN_SendFrame,f,c
  4256  00089E  5065               	movf	3941,w,c	;volatile
  4257  0008A0  1831               	xorwf	??_CAN_SendFrame,w,c
  4258  0008A2  0BFD               	andlw	-3
  4259  0008A4  1831               	xorwf	??_CAN_SendFrame,w,c
  4260  0008A6  6E65               	movwf	3941,c	;volatile
  4261                           
  4262                           ;CAN.c: 293:         RXB0DLCbits.DLC2 = ((message->data_length & 0x0F)>> 2);
  4263  0008A8  EE20 F010          	lfsr	2,16
  4264  0008AC  502F               	movf	CAN_SendFrame@message,w,c
  4265  0008AE  26D9               	addwf	fsr2l,f,c
  4266  0008B0  5030               	movf	CAN_SendFrame@message+1,w,c
  4267  0008B2  22DA               	addwfc	fsr2h,f,c
  4268  0008B4  50DF               	movf	indf2,w,c
  4269  0008B6  6E31               	movwf	??_CAN_SendFrame& (0+255),c
  4270  0008B8  90D8               	bcf	status,0,c
  4271  0008BA  3231               	rrcf	??_CAN_SendFrame,f,c
  4272  0008BC  90D8               	bcf	status,0,c
  4273  0008BE  3231               	rrcf	??_CAN_SendFrame,f,c
  4274  0008C0  0E03               	movlw	3
  4275  0008C2  1631               	andwf	??_CAN_SendFrame,f,c
  4276  0008C4  4631               	rlncf	??_CAN_SendFrame,f,c
  4277  0008C6  4631               	rlncf	??_CAN_SendFrame,f,c
  4278  0008C8  5065               	movf	3941,w,c	;volatile
  4279  0008CA  1831               	xorwf	??_CAN_SendFrame,w,c
  4280  0008CC  0BFB               	andlw	-5
  4281  0008CE  1831               	xorwf	??_CAN_SendFrame,w,c
  4282  0008D0  6E65               	movwf	3941,c	;volatile
  4283                           
  4284                           ;CAN.c: 294:         RXB0DLCbits.DLC3 = ((message->data_length & 0x0F)>> 3);
  4285  0008D2  EE20 F010          	lfsr	2,16
  4286  0008D6  502F               	movf	CAN_SendFrame@message,w,c
  4287  0008D8  26D9               	addwf	fsr2l,f,c
  4288  0008DA  5030               	movf	CAN_SendFrame@message+1,w,c
  4289  0008DC  22DA               	addwfc	fsr2h,f,c
  4290  0008DE  50DF               	movf	indf2,w,c
  4291  0008E0  6E31               	movwf	??_CAN_SendFrame& (0+255),c
  4292  0008E2  90D8               	bcf	status,0,c
  4293  0008E4  3231               	rrcf	??_CAN_SendFrame,f,c
  4294  0008E6  90D8               	bcf	status,0,c
  4295  0008E8  3231               	rrcf	??_CAN_SendFrame,f,c
  4296  0008EA  90D8               	bcf	status,0,c
  4297  0008EC  3231               	rrcf	??_CAN_SendFrame,f,c
  4298  0008EE  0E01               	movlw	1
  4299  0008F0  1631               	andwf	??_CAN_SendFrame,f,c
  4300  0008F2  4631               	rlncf	??_CAN_SendFrame,f,c
  4301  0008F4  4631               	rlncf	??_CAN_SendFrame,f,c
  4302  0008F6  4631               	rlncf	??_CAN_SendFrame,f,c
  4303  0008F8  5065               	movf	3941,w,c	;volatile
  4304  0008FA  1831               	xorwf	??_CAN_SendFrame,w,c
  4305  0008FC  0BF7               	andlw	-9
  4306  0008FE  1831               	xorwf	??_CAN_SendFrame,w,c
  4307  000900  6E65               	movwf	3941,c	;volatile
  4308                           
  4309                           ; BSR set to: 0
  4310                           ;CAN.c: 296:         CAN_MoveBuffIntoFrame(&RXB0D0, message->data);
  4311  000902  0E66               	movlw	102
  4312  000904  6E2A               	movwf	CAN_MoveBuffIntoFrame@Ram,c
  4313  000906  0E0F               	movlw	15
  4314  000908  6E2B               	movwf	CAN_MoveBuffIntoFrame@Ram+1,c
  4315  00090A  0E08               	movlw	8
  4316  00090C  242F               	addwf	CAN_SendFrame@message,w,c
  4317  00090E  6E2C               	movwf	CAN_MoveBuffIntoFrame@Buf,c
  4318  000910  0E00               	movlw	0
  4319  000912  2030               	addwfc	CAN_SendFrame@message+1,w,c
  4320  000914  6E2D               	movwf	CAN_MoveBuffIntoFrame@Buf+1,c
  4321  000916  EC7B  F00C         	call	_CAN_MoveBuffIntoFrame	;wreg free
  4322  00091A                     l4157:
  4323                           
  4324                           ;CAN.c: 299:     RXB0CONbits.FILHIT3 = 1;
  4325  00091A  8660               	bsf	3936,3,c	;volatile
  4326                           
  4327                           ;CAN.c: 301:     DetectorLedRadar.Flags.ramkaTx = 1;
  4328  00091C  0100               	movlb	0	; () banked
  4329  00091E  89CB               	bsf	_DetectorLedRadar& (0+255),4,b
  4330                           
  4331                           ; BSR set to: 0
  4332  000920  0012               	return		;funcret
  4333  000922                     __end_of_CAN_SendFrame:
  4334                           	opt callstack 0
  4335                           
  4336 ;; *************** function _CAN_GenID *****************
  4337 ;; Defined at:
  4338 ;;		line 445 in file "CAN.c"
  4339 ;; Parameters:    Size  Location     Type
  4340 ;;  message         2    5[COMRAM] PTR struct .
  4341 ;;		 -> TRM_DataTransmition@canMessage(17), 
  4342 ;;  frameID         1    7[COMRAM] unsigned char 
  4343 ;; Auto vars:     Size  Location     Type
  4344 ;;		None
  4345 ;; Return value:  Size  Location     Type
  4346 ;;                  1    wreg      void 
  4347 ;; Registers used:
  4348 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4349 ;; Tracked objects:
  4350 ;;		On entry : 0/0
  4351 ;;		On exit  : 0/0
  4352 ;;		Unchanged: 0/0
  4353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4354 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4356 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4357 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4358 ;;Total ram usage:        5 bytes
  4359 ;; Hardware stack levels used:    1
  4360 ;; Hardware stack levels required when called:    3
  4361 ;; This function calls:
  4362 ;;		Nothing
  4363 ;; This function is called by:
  4364 ;;		_FRAME_HandleCanFrame
  4365 ;; This function uses a non-reentrant model
  4366 ;;
  4367                           
  4368                           	psect	text33
  4369  001236                     __ptext33:
  4370                           	opt callstack 0
  4371  001236                     _CAN_GenID:
  4372                           	opt callstack 25
  4373                           
  4374                           ;CAN.c: 445: void CAN_GenID(mID * message, BYTE frameID);CAN.c: 446: {;CAN.c: 448:     m
      +                          essage->frame_type = 0x03;
  4375                           
  4376                           ; BSR set to: 0
  4377                           ;incstack = 0
  4378  001236  EE20 F002          	lfsr	2,2
  4379  00123A  502A               	movf	CAN_GenID@message,w,c
  4380  00123C  26D9               	addwf	fsr2l,f,c
  4381  00123E  502B               	movf	CAN_GenID@message+1,w,c
  4382  001240  22DA               	addwfc	fsr2h,f,c
  4383  001242  0E03               	movlw	3
  4384  001244  6EDF               	movwf	indf2,c
  4385                           
  4386                           ;CAN.c: 449:     message->message_type = 0x01;
  4387  001246  EE20 F001          	lfsr	2,1
  4388  00124A  502A               	movf	CAN_GenID@message,w,c
  4389  00124C  26D9               	addwf	fsr2l,f,c
  4390  00124E  502B               	movf	CAN_GenID@message+1,w,c
  4391  001250  22DA               	addwfc	fsr2h,f,c
  4392  001252  0E01               	movlw	1
  4393  001254  6EDF               	movwf	indf2,c
  4394                           
  4395                           ;CAN.c: 450:     message->id.w[1] = (WORD)frameID * (WORD)4;
  4396  001256  502C               	movf	CAN_GenID@frameID,w,c
  4397  001258  6E2D               	movwf	??_CAN_GenID& (0+255),c
  4398  00125A  6A2E               	clrf	(??_CAN_GenID+1)& (0+255),c
  4399  00125C  90D8               	bcf	status,0,c
  4400  00125E  362D               	rlcf	??_CAN_GenID,f,c
  4401  001260  362E               	rlcf	??_CAN_GenID+1,f,c
  4402  001262  90D8               	bcf	status,0,c
  4403  001264  362D               	rlcf	??_CAN_GenID,f,c
  4404  001266  362E               	rlcf	??_CAN_GenID+1,f,c
  4405  001268  EE20 F006          	lfsr	2,6
  4406  00126C  502A               	movf	CAN_GenID@message,w,c
  4407  00126E  26D9               	addwf	fsr2l,f,c
  4408  001270  502B               	movf	CAN_GenID@message+1,w,c
  4409  001272  22DA               	addwfc	fsr2h,f,c
  4410  001274  C02D  FFDE         	movff	??_CAN_GenID,postinc2
  4411  001278  C02E  FFDD         	movff	??_CAN_GenID+1,postdec2
  4412                           
  4413                           ;CAN.c: 451:     message->id.w[0] = DaneCan.adresCAN;
  4414  00127C  EE20 F004          	lfsr	2,4
  4415  001280  502A               	movf	CAN_GenID@message,w,c
  4416  001282  26D9               	addwf	fsr2l,f,c
  4417  001284  502B               	movf	CAN_GenID@message+1,w,c
  4418  001286  22DA               	addwfc	fsr2h,f,c
  4419  001288  C003  FFDE         	movff	_DaneCan+2,postinc2
  4420  00128C  C004  FFDD         	movff	_DaneCan+3,postdec2
  4421                           
  4422                           ;CAN.c: 454:     message ->id.bits.b16 = 0;
  4423  001290  EE20 F006          	lfsr	2,6
  4424  001294  502A               	movf	CAN_GenID@message,w,c
  4425  001296  26D9               	addwf	fsr2l,f,c
  4426  001298  502B               	movf	CAN_GenID@message+1,w,c
  4427  00129A  22DA               	addwfc	fsr2h,f,c
  4428  00129C  90DF               	bcf	indf2,0,c
  4429                           
  4430                           ;CAN.c: 455:     message ->id.bits.b17 = 0;
  4431  00129E  EE20 F006          	lfsr	2,6
  4432  0012A2  502A               	movf	CAN_GenID@message,w,c
  4433  0012A4  26D9               	addwf	fsr2l,f,c
  4434  0012A6  502B               	movf	CAN_GenID@message+1,w,c
  4435  0012A8  22DA               	addwfc	fsr2h,f,c
  4436  0012AA  92DF               	bcf	indf2,1,c
  4437  0012AC  0012               	return		;funcret
  4438  0012AE                     __end_of_CAN_GenID:
  4439                           	opt callstack 0
  4440                           
  4441 ;; *************** function _CAN_TakeFrame *****************
  4442 ;; Defined at:
  4443 ;;		line 310 in file "CAN.c"
  4444 ;; Parameters:    Size  Location     Type
  4445 ;;  message         2   13[COMRAM] PTR struct .
  4446 ;;		 -> TRM_DataTransmition@canMessage(17), 
  4447 ;; Auto vars:     Size  Location     Type
  4448 ;;  k               1   18[COMRAM] unsigned char 
  4449 ;;  tempCON         1   17[COMRAM] unsigned char 
  4450 ;; Return value:  Size  Location     Type
  4451 ;;                  1    wreg      enum E10433
  4452 ;; Registers used:
  4453 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4454 ;; Tracked objects:
  4455 ;;		On entry : 0/0
  4456 ;;		On exit  : 0/0
  4457 ;;		Unchanged: 0/0
  4458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4459 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4460 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4461 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4462 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4463 ;;Total ram usage:        6 bytes
  4464 ;; Hardware stack levels used:    1
  4465 ;; Hardware stack levels required when called:    4
  4466 ;; This function calls:
  4467 ;;		_CAN_MoveBuffIntoFrame
  4468 ;;		___awdiv
  4469 ;; This function is called by:
  4470 ;;		_TRM_DataTransmition
  4471 ;; This function uses a non-reentrant model
  4472 ;;
  4473                           
  4474                           	psect	text34
  4475  00032E                     __ptext34:
  4476                           	opt callstack 0
  4477  00032E                     _CAN_TakeFrame:
  4478                           	opt callstack 25
  4479                           
  4480                           ;CAN.c: 310: BOOL CAN_TakeFrame(mID * message);CAN.c: 311: {;CAN.c: 312:     BYTE k, tem
      +                          pCON;;CAN.c: 314:     k = CANCON&0x0F;
  4481                           
  4482                           ;incstack = 0
  4483  00032E  506F               	movf	3951,w,c	;volatile
  4484  000330  0B0F               	andlw	15
  4485  000332  6E37               	movwf	CAN_TakeFrame@k,c
  4486                           
  4487                           ;CAN.c: 316:     ECANCON = 0x90 | k;
  4488  000334  5037               	movf	CAN_TakeFrame@k,w,c
  4489  000336  0990               	iorlw	144
  4490  000338  6E77               	movwf	3959,c	;volatile
  4491                           
  4492                           ;CAN.c: 319:     switch(k)
  4493  00033A  D018               	goto	l4363
  4494  00033C                     l289:
  4495                           
  4496                           ;CAN.c: 322:             tempCON = RXB0CON;
  4497  00033C  CF60 F036          	movff	3936,CAN_TakeFrame@tempCON	;volatile
  4498                           
  4499                           ;CAN.c: 323:             break;
  4500  000340  D035               	goto	l290
  4501  000342                     l291:
  4502                           
  4503                           ;CAN.c: 325:             tempCON = RXB1CON;
  4504  000342  CF50 F036          	movff	3920,CAN_TakeFrame@tempCON	;volatile
  4505                           
  4506                           ;CAN.c: 326:             break;
  4507  000346  D032               	goto	l290
  4508  000348                     l292:
  4509                           
  4510                           ;CAN.c: 328:             tempCON = B0CON;
  4511  000348  CE20 F036          	movff	3616,CAN_TakeFrame@tempCON	;volatile
  4512                           
  4513                           ;CAN.c: 329:             break;
  4514  00034C  D02F               	goto	l290
  4515  00034E                     l293:
  4516                           
  4517                           ;CAN.c: 331:             tempCON = B1CON;
  4518  00034E  CE30 F036          	movff	3632,CAN_TakeFrame@tempCON	;volatile
  4519                           
  4520                           ;CAN.c: 332:             break;
  4521  000352  D02C               	goto	l290
  4522  000354                     l294:
  4523                           
  4524                           ;CAN.c: 334:             tempCON = B2CON;
  4525  000354  CE40 F036          	movff	3648,CAN_TakeFrame@tempCON	;volatile
  4526                           
  4527                           ;CAN.c: 335:             break;
  4528  000358  D029               	goto	l290
  4529  00035A                     l295:
  4530                           
  4531                           ;CAN.c: 337:             tempCON = B3CON;
  4532  00035A  CE50 F036          	movff	3664,CAN_TakeFrame@tempCON	;volatile
  4533                           
  4534                           ;CAN.c: 338:             break;
  4535  00035E  D026               	goto	l290
  4536  000360                     l296:
  4537                           
  4538                           ;CAN.c: 340:             tempCON = B4CON;
  4539  000360  CE60 F036          	movff	3680,CAN_TakeFrame@tempCON	;volatile
  4540                           
  4541                           ;CAN.c: 341:             break;
  4542  000364  D023               	goto	l290
  4543  000366                     l297:
  4544                           
  4545                           ;CAN.c: 343:             tempCON = B5CON;
  4546  000366  CE70 F036          	movff	3696,CAN_TakeFrame@tempCON	;volatile
  4547                           
  4548                           ;CAN.c: 344:             break;
  4549  00036A  D020               	goto	l290
  4550  00036C                     l4363:
  4551  00036C  5037               	movf	CAN_TakeFrame@k,w,c
  4552  00036E  6E34               	movwf	??_CAN_TakeFrame& (0+255),c
  4553  000370  6A35               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  4554                           
  4555                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4556                           ; Switch size 1, requested type "simple"
  4557                           ; Number of cases is 1, Range of values is 0 to 0
  4558                           ; switch strategies available:
  4559                           ; Name         Instructions Cycles
  4560                           ; simple_byte            4     3 (average)
  4561                           ;	Chosen strategy is simple_byte
  4562  000372  5035               	movf	??_CAN_TakeFrame+1,w,c
  4563  000374  0A00               	xorlw	0	; case 0
  4564  000376  A4D8               	btfss	status,2,c
  4565  000378  D019               	goto	l290
  4566                           
  4567                           ; Switch size 1, requested type "simple"
  4568                           ; Number of cases is 8, Range of values is 0 to 7
  4569                           ; switch strategies available:
  4570                           ; Name         Instructions Cycles
  4571                           ; simple_byte           25    13 (average)
  4572                           ;	Chosen strategy is simple_byte
  4573  00037A  5034               	movf	??_CAN_TakeFrame,w,c
  4574  00037C  0A00               	xorlw	0	; case 0
  4575  00037E  B4D8               	btfsc	status,2,c
  4576  000380  D7DD               	goto	l289
  4577  000382  0A01               	xorlw	1	; case 1
  4578  000384  B4D8               	btfsc	status,2,c
  4579  000386  D7DD               	goto	l291
  4580  000388  0A03               	xorlw	3	; case 2
  4581  00038A  B4D8               	btfsc	status,2,c
  4582  00038C  D7DD               	goto	l292
  4583  00038E  0A01               	xorlw	1	; case 3
  4584  000390  B4D8               	btfsc	status,2,c
  4585  000392  D7DD               	goto	l293
  4586  000394  0A07               	xorlw	7	; case 4
  4587  000396  B4D8               	btfsc	status,2,c
  4588  000398  D7DD               	goto	l294
  4589  00039A  0A01               	xorlw	1	; case 5
  4590  00039C  B4D8               	btfsc	status,2,c
  4591  00039E  D7DD               	goto	l295
  4592  0003A0  0A03               	xorlw	3	; case 6
  4593  0003A2  B4D8               	btfsc	status,2,c
  4594  0003A4  D7DD               	goto	l296
  4595  0003A6  0A01               	xorlw	1	; case 7
  4596  0003A8  B4D8               	btfsc	status,2,c
  4597  0003AA  D7DD               	goto	l297
  4598  0003AC                     l290:
  4599                           
  4600                           ;CAN.c: 348:     if((tempCON & 0x80) > 0)
  4601  0003AC  AE36               	btfss	CAN_TakeFrame@tempCON,7,c
  4602  0003AE  D0A5               	goto	l4399
  4603                           
  4604                           ;CAN.c: 349:     {;CAN.c: 350:         message->buffer = RXB0CON & 0x1F;
  4605  0003B0  EE20 F003          	lfsr	2,3
  4606  0003B4  5032               	movf	CAN_TakeFrame@message,w,c
  4607  0003B6  26D9               	addwf	fsr2l,f,c
  4608  0003B8  5033               	movf	CAN_TakeFrame@message+1,w,c
  4609  0003BA  22DA               	addwfc	fsr2h,f,c
  4610  0003BC  5060               	movf	3936,w,c	;volatile
  4611  0003BE  0B1F               	andlw	31
  4612  0003C0  6EDF               	movwf	indf2,c
  4613                           
  4614                           ;CAN.c: 351:         message->id.v[0] = RXB0EIDL;
  4615  0003C2  EE20 F004          	lfsr	2,4
  4616  0003C6  5032               	movf	CAN_TakeFrame@message,w,c
  4617  0003C8  26D9               	addwf	fsr2l,f,c
  4618  0003CA  5033               	movf	CAN_TakeFrame@message+1,w,c
  4619  0003CC  22DA               	addwfc	fsr2h,f,c
  4620  0003CE  CF64 FFDF          	movff	3940,indf2	;volatile
  4621                           
  4622                           ;CAN.c: 352:         message->id.v[1] = RXB0EIDH;
  4623  0003D2  EE20 F005          	lfsr	2,5
  4624  0003D6  5032               	movf	CAN_TakeFrame@message,w,c
  4625  0003D8  26D9               	addwf	fsr2l,f,c
  4626  0003DA  5033               	movf	CAN_TakeFrame@message+1,w,c
  4627  0003DC  22DA               	addwfc	fsr2h,f,c
  4628  0003DE  CF63 FFDF          	movff	3939,indf2	;volatile
  4629                           
  4630                           ;CAN.c: 353:         message->id.v[2] = (RXB0SIDL/8) | (RXB0SIDL&0x03);
  4631  0003E2  EE20 F006          	lfsr	2,6
  4632  0003E6  5032               	movf	CAN_TakeFrame@message,w,c
  4633  0003E8  26D9               	addwf	fsr2l,f,c
  4634  0003EA  5033               	movf	CAN_TakeFrame@message+1,w,c
  4635  0003EC  22DA               	addwfc	fsr2h,f,c
  4636  0003EE  CF62 F034          	movff	3938,??_CAN_TakeFrame	;volatile
  4637  0003F2  0E03               	movlw	3
  4638  0003F4  1634               	andwf	??_CAN_TakeFrame,f,c
  4639  0003F6  CF62 F02A          	movff	3938,___awdiv@dividend	;volatile
  4640  0003FA  6A2B               	clrf	___awdiv@dividend+1,c
  4641  0003FC  0E00               	movlw	0
  4642  0003FE  6E2D               	movwf	___awdiv@divisor+1,c
  4643  000400  0E08               	movlw	8
  4644  000402  6E2C               	movwf	___awdiv@divisor,c
  4645  000404  EC9C  F008         	call	___awdiv	;wreg free
  4646  000408  502A               	movf	?___awdiv,w,c
  4647  00040A  1034               	iorwf	??_CAN_TakeFrame,w,c
  4648  00040C  6EDF               	movwf	indf2,c
  4649                           
  4650                           ;CAN.c: 354:         message->id.w[1] |= (WORD)RXB0SIDH*32;
  4651  00040E  5061               	movf	3937,w,c	;volatile
  4652  000410  6E34               	movwf	??_CAN_TakeFrame& (0+255),c
  4653  000412  6A35               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  4654  000414  0E05               	movlw	5
  4655  000416                     u2705:
  4656  000416  90D8               	bcf	status,0,c
  4657  000418  3634               	rlcf	??_CAN_TakeFrame,f,c
  4658  00041A  3635               	rlcf	??_CAN_TakeFrame+1,f,c
  4659  00041C  2EE8               	decfsz	wreg,f,c
  4660  00041E  D7FB               	goto	u2705
  4661  000420  EE20 F006          	lfsr	2,6
  4662  000424  5032               	movf	CAN_TakeFrame@message,w,c
  4663  000426  26D9               	addwf	fsr2l,f,c
  4664  000428  5033               	movf	CAN_TakeFrame@message+1,w,c
  4665  00042A  22DA               	addwfc	fsr2h,f,c
  4666  00042C  5034               	movf	??_CAN_TakeFrame,w,c
  4667  00042E  12DE               	iorwf	postinc2,f,c
  4668  000430  5035               	movf	??_CAN_TakeFrame+1,w,c
  4669  000432  12DD               	iorwf	postdec2,f,c
  4670                           
  4671                           ;CAN.c: 355:         message->frame_type=0x03;
  4672  000434  EE20 F002          	lfsr	2,2
  4673  000438  5032               	movf	CAN_TakeFrame@message,w,c
  4674  00043A  26D9               	addwf	fsr2l,f,c
  4675  00043C  5033               	movf	CAN_TakeFrame@message+1,w,c
  4676  00043E  22DA               	addwfc	fsr2h,f,c
  4677  000440  0E03               	movlw	3
  4678  000442  6EDF               	movwf	indf2,c
  4679                           
  4680                           ;CAN.c: 359:         if(RXB0DLCbits.RXRTR == 0)
  4681  000444  BC65               	btfsc	3941,6,c	;volatile
  4682  000446  D068               	goto	l4405
  4683                           
  4684                           ;CAN.c: 360:         {;CAN.c: 361:             message->message_type = 0x01;
  4685  000448  EE20 F001          	lfsr	2,1
  4686  00044C  5032               	movf	CAN_TakeFrame@message,w,c
  4687  00044E  26D9               	addwf	fsr2l,f,c
  4688  000450  5033               	movf	CAN_TakeFrame@message+1,w,c
  4689  000452  22DA               	addwfc	fsr2h,f,c
  4690  000454  0E01               	movlw	1
  4691  000456  6EDF               	movwf	indf2,c
  4692                           
  4693                           ;CAN.c: 362:             message->data_length= RXB0DLC & 0x0F;
  4694  000458  EE20 F010          	lfsr	2,16
  4695  00045C  5032               	movf	CAN_TakeFrame@message,w,c
  4696  00045E  26D9               	addwf	fsr2l,f,c
  4697  000460  5033               	movf	CAN_TakeFrame@message+1,w,c
  4698  000462  22DA               	addwfc	fsr2h,f,c
  4699  000464  5065               	movf	3941,w,c	;volatile
  4700  000466  0B0F               	andlw	15
  4701  000468  6EDF               	movwf	indf2,c
  4702                           
  4703                           ;CAN.c: 363:             if(message->data_length > 8)
  4704  00046A  EE20 F010          	lfsr	2,16
  4705  00046E  5032               	movf	CAN_TakeFrame@message,w,c
  4706  000470  26D9               	addwf	fsr2l,f,c
  4707  000472  5033               	movf	CAN_TakeFrame@message+1,w,c
  4708  000474  22DA               	addwfc	fsr2h,f,c
  4709  000476  0E08               	movlw	8
  4710  000478  64DF               	cpfsgt	indf2,c
  4711  00047A  D041               	goto	l4403
  4712  00047C  D01E               	goto	l4397
  4713  00047E                     l4379:
  4714                           
  4715                           ;CAN.c: 369:                         RXB0CON = 0;
  4716  00047E  0E00               	movlw	0
  4717  000480  6E60               	movwf	3936,c	;volatile
  4718                           
  4719                           ;CAN.c: 370:                         break;
  4720  000482  D03B               	goto	l4399
  4721  000484                     l4381:
  4722                           
  4723                           ;CAN.c: 372:                         RXB1CON = 0;
  4724  000484  0E00               	movlw	0
  4725  000486  010F               	movlb	15	; () banked
  4726  000488  D00E               	goto	L2
  4727  00048A                     l4383:
  4728                           
  4729                           ;CAN.c: 375:                         B0CON = 0;
  4730  00048A  0E00               	movlw	0
  4731  00048C  010E               	movlb	14	; () banked
  4732  00048E  6F20               	movwf	32,b	;volatile
  4733                           
  4734                           ;CAN.c: 376:                         break;
  4735  000490  D034               	goto	l4399
  4736  000492                     l4385:
  4737                           
  4738                           ;CAN.c: 378:                         B1CON = 0;
  4739  000492  0E00               	movlw	0
  4740  000494  010E               	movlb	14	; () banked
  4741  000496  6F30               	movwf	48,b	;volatile
  4742                           
  4743                           ;CAN.c: 379:                         break;
  4744  000498  D030               	goto	l4399
  4745  00049A                     l4387:
  4746                           
  4747                           ;CAN.c: 381:                         B2CON = 0;
  4748  00049A  0E00               	movlw	0
  4749  00049C  010E               	movlb	14	; () banked
  4750  00049E  6F40               	movwf	64,b	;volatile
  4751                           
  4752                           ;CAN.c: 382:                         break;
  4753  0004A0  D02C               	goto	l4399
  4754  0004A2                     l4389:
  4755                           
  4756                           ;CAN.c: 384:                         B3CON = 0;
  4757  0004A2  0E00               	movlw	0
  4758  0004A4  010E               	movlb	14	; () banked
  4759  0004A6                     L2:
  4760  0004A6  6F50               	movwf	80,b	;volatile
  4761                           
  4762                           ;CAN.c: 385:                         break;
  4763  0004A8  D028               	goto	l4399
  4764  0004AA                     l4391:
  4765                           
  4766                           ;CAN.c: 387:                         B4CON = 0;
  4767  0004AA  0E00               	movlw	0
  4768  0004AC  010E               	movlb	14	; () banked
  4769  0004AE  6F60               	movwf	96,b	;volatile
  4770                           
  4771                           ;CAN.c: 388:                         break;
  4772  0004B0  D024               	goto	l4399
  4773  0004B2                     l4393:
  4774                           
  4775                           ;CAN.c: 390:                         B5CON = 0;
  4776  0004B2  0E00               	movlw	0
  4777  0004B4  010E               	movlb	14	; () banked
  4778  0004B6  6F70               	movwf	112,b	;volatile
  4779                           
  4780                           ;CAN.c: 391:                         break;
  4781  0004B8  D020               	goto	l4399
  4782  0004BA                     l4397:
  4783  0004BA  5037               	movf	CAN_TakeFrame@k,w,c
  4784  0004BC  6E34               	movwf	??_CAN_TakeFrame& (0+255),c
  4785  0004BE  6A35               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  4786                           
  4787                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4788                           ; Switch size 1, requested type "simple"
  4789                           ; Number of cases is 1, Range of values is 0 to 0
  4790                           ; switch strategies available:
  4791                           ; Name         Instructions Cycles
  4792                           ; simple_byte            4     3 (average)
  4793                           ;	Chosen strategy is simple_byte
  4794  0004C0  5035               	movf	??_CAN_TakeFrame+1,w,c
  4795  0004C2  0A00               	xorlw	0	; case 0
  4796  0004C4  A4D8               	btfss	status,2,c
  4797  0004C6  D019               	goto	l4399
  4798                           
  4799                           ; Switch size 1, requested type "simple"
  4800                           ; Number of cases is 8, Range of values is 0 to 7
  4801                           ; switch strategies available:
  4802                           ; Name         Instructions Cycles
  4803                           ; simple_byte           25    13 (average)
  4804                           ;	Chosen strategy is simple_byte
  4805  0004C8  5034               	movf	??_CAN_TakeFrame,w,c
  4806  0004CA  0A00               	xorlw	0	; case 0
  4807  0004CC  B4D8               	btfsc	status,2,c
  4808  0004CE  D7D7               	goto	l4379
  4809  0004D0  0A01               	xorlw	1	; case 1
  4810  0004D2  B4D8               	btfsc	status,2,c
  4811  0004D4  D7D7               	goto	l4381
  4812  0004D6  0A03               	xorlw	3	; case 2
  4813  0004D8  B4D8               	btfsc	status,2,c
  4814  0004DA  D7D7               	goto	l4383
  4815  0004DC  0A01               	xorlw	1	; case 3
  4816  0004DE  B4D8               	btfsc	status,2,c
  4817  0004E0  D7D8               	goto	l4385
  4818  0004E2  0A07               	xorlw	7	; case 4
  4819  0004E4  B4D8               	btfsc	status,2,c
  4820  0004E6  D7D9               	goto	l4387
  4821  0004E8  0A01               	xorlw	1	; case 5
  4822  0004EA  B4D8               	btfsc	status,2,c
  4823  0004EC  D7DA               	goto	l4389
  4824  0004EE  0A03               	xorlw	3	; case 6
  4825  0004F0  B4D8               	btfsc	status,2,c
  4826  0004F2  D7DB               	goto	l4391
  4827  0004F4  0A01               	xorlw	1	; case 7
  4828  0004F6  B4D8               	btfsc	status,2,c
  4829  0004F8  D7DC               	goto	l4393
  4830  0004FA                     l4399:
  4831                           
  4832                           ;CAN.c: 393:                 return FALSE;
  4833  0004FA  0E00               	movlw	0
  4834  0004FC  0012               	return	
  4835  0004FE                     l4403:
  4836                           
  4837                           ;CAN.c: 395:             CAN_MoveBuffIntoFrame(message->data, &RXB0D0);
  4838  0004FE  0E08               	movlw	8
  4839  000500  2432               	addwf	CAN_TakeFrame@message,w,c
  4840  000502  6E2A               	movwf	CAN_MoveBuffIntoFrame@Ram,c
  4841  000504  0E00               	movlw	0
  4842  000506  2033               	addwfc	CAN_TakeFrame@message+1,w,c
  4843  000508  6E2B               	movwf	CAN_MoveBuffIntoFrame@Ram+1,c
  4844  00050A  0E66               	movlw	102
  4845  00050C  6E2C               	movwf	CAN_MoveBuffIntoFrame@Buf,c
  4846  00050E  0E0F               	movlw	15
  4847  000510  6E2D               	movwf	CAN_MoveBuffIntoFrame@Buf+1,c
  4848  000512  EC7B  F00C         	call	_CAN_MoveBuffIntoFrame	;wreg free
  4849                           
  4850                           ;CAN.c: 396:         }
  4851  000516  D027               	goto	l4425
  4852  000518                     l4405:
  4853                           
  4854                           ;CAN.c: 399:         {;CAN.c: 400:             message->message_type=0x02;
  4855  000518  EE20 F001          	lfsr	2,1
  4856  00051C  5032               	movf	CAN_TakeFrame@message,w,c
  4857  00051E  26D9               	addwf	fsr2l,f,c
  4858  000520  5033               	movf	CAN_TakeFrame@message+1,w,c
  4859  000522  22DA               	addwfc	fsr2h,f,c
  4860  000524  0E02               	movlw	2
  4861  000526  6EDF               	movwf	indf2,c
  4862  000528  D01E               	goto	l4425
  4863  00052A                     l4407:
  4864                           
  4865                           ;CAN.c: 406:                 RXB0CON = 0;
  4866  00052A  0E00               	movlw	0
  4867  00052C  6E60               	movwf	3936,c	;volatile
  4868                           
  4869                           ;CAN.c: 407:                 break;
  4870  00052E  D03B               	goto	l4427
  4871  000530                     l4409:
  4872                           
  4873                           ;CAN.c: 409:                 RXB1CON = 0;
  4874  000530  0E00               	movlw	0
  4875  000532  010F               	movlb	15	; () banked
  4876  000534  D00E               	goto	L3
  4877  000536                     l4411:
  4878                           
  4879                           ;CAN.c: 412:                 B0CON = 0;
  4880  000536  0E00               	movlw	0
  4881  000538  010E               	movlb	14	; () banked
  4882  00053A  6F20               	movwf	32,b	;volatile
  4883                           
  4884                           ;CAN.c: 413:                 break;
  4885  00053C  D034               	goto	l4427
  4886  00053E                     l4413:
  4887                           
  4888                           ;CAN.c: 415:                 B1CON = 0;
  4889  00053E  0E00               	movlw	0
  4890  000540  010E               	movlb	14	; () banked
  4891  000542  6F30               	movwf	48,b	;volatile
  4892                           
  4893                           ;CAN.c: 416:                 break;
  4894  000544  D030               	goto	l4427
  4895  000546                     l4415:
  4896                           
  4897                           ;CAN.c: 418:                 B2CON = 0;
  4898  000546  0E00               	movlw	0
  4899  000548  010E               	movlb	14	; () banked
  4900  00054A  6F40               	movwf	64,b	;volatile
  4901                           
  4902                           ;CAN.c: 419:                 break;
  4903  00054C  D02C               	goto	l4427
  4904  00054E                     l4417:
  4905                           
  4906                           ;CAN.c: 421:                 B3CON = 0;
  4907  00054E  0E00               	movlw	0
  4908  000550  010E               	movlb	14	; () banked
  4909  000552                     L3:
  4910  000552  6F50               	movwf	80,b	;volatile
  4911                           
  4912                           ;CAN.c: 422:                 break;
  4913  000554  D028               	goto	l4427
  4914  000556                     l4419:
  4915                           
  4916                           ;CAN.c: 424:                 B4CON = 0;
  4917  000556  0E00               	movlw	0
  4918  000558  010E               	movlb	14	; () banked
  4919  00055A  6F60               	movwf	96,b	;volatile
  4920                           
  4921                           ;CAN.c: 425:                 break;
  4922  00055C  D024               	goto	l4427
  4923  00055E                     l4421:
  4924                           
  4925                           ;CAN.c: 427:                 B5CON = 0;
  4926  00055E  0E00               	movlw	0
  4927  000560  010E               	movlb	14	; () banked
  4928  000562  6F70               	movwf	112,b	;volatile
  4929                           
  4930                           ;CAN.c: 428:                 break;
  4931  000564  D020               	goto	l4427
  4932  000566                     l4425:
  4933  000566  5037               	movf	CAN_TakeFrame@k,w,c
  4934  000568  6E34               	movwf	??_CAN_TakeFrame& (0+255),c
  4935  00056A  6A35               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  4936                           
  4937                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4938                           ; Switch size 1, requested type "simple"
  4939                           ; Number of cases is 1, Range of values is 0 to 0
  4940                           ; switch strategies available:
  4941                           ; Name         Instructions Cycles
  4942                           ; simple_byte            4     3 (average)
  4943                           ;	Chosen strategy is simple_byte
  4944  00056C  5035               	movf	??_CAN_TakeFrame+1,w,c
  4945  00056E  0A00               	xorlw	0	; case 0
  4946  000570  A4D8               	btfss	status,2,c
  4947  000572  D019               	goto	l4427
  4948                           
  4949                           ; Switch size 1, requested type "simple"
  4950                           ; Number of cases is 8, Range of values is 0 to 7
  4951                           ; switch strategies available:
  4952                           ; Name         Instructions Cycles
  4953                           ; simple_byte           25    13 (average)
  4954                           ;	Chosen strategy is simple_byte
  4955  000574  5034               	movf	??_CAN_TakeFrame,w,c
  4956  000576  0A00               	xorlw	0	; case 0
  4957  000578  B4D8               	btfsc	status,2,c
  4958  00057A  D7D7               	goto	l4407
  4959  00057C  0A01               	xorlw	1	; case 1
  4960  00057E  B4D8               	btfsc	status,2,c
  4961  000580  D7D7               	goto	l4409
  4962  000582  0A03               	xorlw	3	; case 2
  4963  000584  B4D8               	btfsc	status,2,c
  4964  000586  D7D7               	goto	l4411
  4965  000588  0A01               	xorlw	1	; case 3
  4966  00058A  B4D8               	btfsc	status,2,c
  4967  00058C  D7D8               	goto	l4413
  4968  00058E  0A07               	xorlw	7	; case 4
  4969  000590  B4D8               	btfsc	status,2,c
  4970  000592  D7D9               	goto	l4415
  4971  000594  0A01               	xorlw	1	; case 5
  4972  000596  B4D8               	btfsc	status,2,c
  4973  000598  D7DA               	goto	l4417
  4974  00059A  0A03               	xorlw	3	; case 6
  4975  00059C  B4D8               	btfsc	status,2,c
  4976  00059E  D7DB               	goto	l4419
  4977  0005A0  0A01               	xorlw	1	; case 7
  4978  0005A2  B4D8               	btfsc	status,2,c
  4979  0005A4  D7DC               	goto	l4421
  4980  0005A6                     l4427:
  4981                           
  4982                           ;CAN.c: 430:         return TRUE;
  4983  0005A6  0E01               	movlw	1
  4984  0005A8  0012               	return		;funcret
  4985  0005AA                     __end_of_CAN_TakeFrame:
  4986                           	opt callstack 0
  4987                           
  4988 ;; *************** function ___awdiv *****************
  4989 ;; Defined at:
  4990 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  4991 ;; Parameters:    Size  Location     Type
  4992 ;;  dividend        2    5[COMRAM] int 
  4993 ;;  divisor         2    7[COMRAM] int 
  4994 ;; Auto vars:     Size  Location     Type
  4995 ;;  quotient        2   11[COMRAM] int 
  4996 ;;  sign            1   10[COMRAM] unsigned char 
  4997 ;;  counter         1    9[COMRAM] unsigned char 
  4998 ;; Return value:  Size  Location     Type
  4999 ;;                  2    5[COMRAM] int 
  5000 ;; Registers used:
  5001 ;;		wreg, status,2, status,0
  5002 ;; Tracked objects:
  5003 ;;		On entry : 0/0
  5004 ;;		On exit  : 0/0
  5005 ;;		Unchanged: 0/0
  5006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5007 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5008 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5010 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5011 ;;Total ram usage:        8 bytes
  5012 ;; Hardware stack levels used:    1
  5013 ;; Hardware stack levels required when called:    3
  5014 ;; This function calls:
  5015 ;;		Nothing
  5016 ;; This function is called by:
  5017 ;;		_CAN_TakeFrame
  5018 ;;		_FRAME_HandleCanFrame
  5019 ;; This function uses a non-reentrant model
  5020 ;;
  5021                           
  5022                           	psect	text35
  5023  001138                     __ptext35:
  5024                           	opt callstack 0
  5025  001138                     ___awdiv:
  5026                           	opt callstack 25
  5027                           
  5028                           ;incstack = 0
  5029  001138  0E00               	movlw	0
  5030  00113A  6E2F               	movwf	___awdiv@sign,c
  5031  00113C  AE2D               	btfss	___awdiv@divisor+1,7,c
  5032  00113E  D006               	goto	l4307
  5033  001140  6C2C               	negf	___awdiv@divisor,c
  5034  001142  1E2D               	comf	___awdiv@divisor+1,f,c
  5035  001144  B0D8               	btfsc	status,0,c
  5036  001146  2A2D               	incf	___awdiv@divisor+1,f,c
  5037  001148  0E01               	movlw	1
  5038  00114A  6E2F               	movwf	___awdiv@sign,c
  5039  00114C                     l4307:
  5040  00114C  AE2B               	btfss	___awdiv@dividend+1,7,c
  5041  00114E  D006               	goto	l4313
  5042  001150  6C2A               	negf	___awdiv@dividend,c
  5043  001152  1E2B               	comf	___awdiv@dividend+1,f,c
  5044  001154  B0D8               	btfsc	status,0,c
  5045  001156  2A2B               	incf	___awdiv@dividend+1,f,c
  5046  001158  0E01               	movlw	1
  5047  00115A  1A2F               	xorwf	___awdiv@sign,f,c
  5048  00115C                     l4313:
  5049  00115C  0E00               	movlw	0
  5050  00115E  6E31               	movwf	___awdiv@quotient+1,c
  5051  001160  0E00               	movlw	0
  5052  001162  6E30               	movwf	___awdiv@quotient,c
  5053  001164  502C               	movf	___awdiv@divisor,w,c
  5054  001166  102D               	iorwf	___awdiv@divisor+1,w,c
  5055  001168  B4D8               	btfsc	status,2,c
  5056  00116A  D01C               	goto	l4335
  5057  00116C  0E01               	movlw	1
  5058  00116E  6E2E               	movwf	___awdiv@counter,c
  5059  001170  D004               	goto	l4321
  5060  001172                     l4319:
  5061  001172  90D8               	bcf	status,0,c
  5062  001174  362C               	rlcf	___awdiv@divisor,f,c
  5063  001176  362D               	rlcf	___awdiv@divisor+1,f,c
  5064  001178  2A2E               	incf	___awdiv@counter,f,c
  5065  00117A                     l4321:
  5066  00117A  AE2D               	btfss	___awdiv@divisor+1,7,c
  5067  00117C  D7FA               	goto	l4319
  5068  00117E                     u2640:
  5069  00117E  90D8               	bcf	status,0,c
  5070  001180  3630               	rlcf	___awdiv@quotient,f,c
  5071  001182  3631               	rlcf	___awdiv@quotient+1,f,c
  5072  001184  502C               	movf	___awdiv@divisor,w,c
  5073  001186  5C2A               	subwf	___awdiv@dividend,w,c
  5074  001188  502D               	movf	___awdiv@divisor+1,w,c
  5075  00118A  582B               	subwfb	___awdiv@dividend+1,w,c
  5076  00118C  A0D8               	btfss	status,0,c
  5077  00118E  D005               	goto	l4331
  5078  001190  502C               	movf	___awdiv@divisor,w,c
  5079  001192  5E2A               	subwf	___awdiv@dividend,f,c
  5080  001194  502D               	movf	___awdiv@divisor+1,w,c
  5081  001196  5A2B               	subwfb	___awdiv@dividend+1,f,c
  5082  001198  8030               	bsf	___awdiv@quotient,0,c
  5083  00119A                     l4331:
  5084  00119A  90D8               	bcf	status,0,c
  5085  00119C  322D               	rrcf	___awdiv@divisor+1,f,c
  5086  00119E  322C               	rrcf	___awdiv@divisor,f,c
  5087  0011A0  2E2E               	decfsz	___awdiv@counter,f,c
  5088  0011A2  D7ED               	goto	u2640
  5089  0011A4                     l4335:
  5090  0011A4  502F               	movf	___awdiv@sign,w,c
  5091  0011A6  B4D8               	btfsc	status,2,c
  5092  0011A8  D004               	goto	l4339
  5093  0011AA  6C30               	negf	___awdiv@quotient,c
  5094  0011AC  1E31               	comf	___awdiv@quotient+1,f,c
  5095  0011AE  B0D8               	btfsc	status,0,c
  5096  0011B0  2A31               	incf	___awdiv@quotient+1,f,c
  5097  0011B2                     l4339:
  5098  0011B2  C030  F02A         	movff	___awdiv@quotient,?___awdiv
  5099  0011B6  C031  F02B         	movff	___awdiv@quotient+1,?___awdiv+1
  5100  0011BA  0012               	return		;funcret
  5101  0011BC                     __end_of___awdiv:
  5102                           	opt callstack 0
  5103                           
  5104 ;; *************** function _CAN_MoveBuffIntoFrame *****************
  5105 ;; Defined at:
  5106 ;;		line 232 in file "CAN.c"
  5107 ;; Parameters:    Size  Location     Type
  5108 ;;  Ram             2    5[COMRAM] PTR unsigned char 
  5109 ;;		 -> TRM_DataTransmition@canMessage(17), RXB0D0(1), 
  5110 ;;  Buf             2    7[COMRAM] PTR unsigned char 
  5111 ;;		 -> TRM_DataTransmition@canMessage(17), RXB0D0(1), 
  5112 ;; Auto vars:     Size  Location     Type
  5113 ;;  i               1    9[COMRAM] unsigned char 
  5114 ;; Return value:  Size  Location     Type
  5115 ;;                  1    wreg      void 
  5116 ;; Registers used:
  5117 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5118 ;; Tracked objects:
  5119 ;;		On entry : 0/0
  5120 ;;		On exit  : 0/0
  5121 ;;		Unchanged: 0/0
  5122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5123 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5124 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5126 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5127 ;;Total ram usage:        5 bytes
  5128 ;; Hardware stack levels used:    1
  5129 ;; Hardware stack levels required when called:    3
  5130 ;; This function calls:
  5131 ;;		Nothing
  5132 ;; This function is called by:
  5133 ;;		_CAN_SendFrame
  5134 ;;		_CAN_TakeFrame
  5135 ;; This function uses a non-reentrant model
  5136 ;;
  5137                           
  5138                           	psect	text36
  5139  0018F6                     __ptext36:
  5140                           	opt callstack 0
  5141  0018F6                     _CAN_MoveBuffIntoFrame:
  5142                           	opt callstack 24
  5143                           
  5144                           ;CAN.c: 232: static void CAN_MoveBuffIntoFrame(BYTE* Ram, BYTE* Buf);CAN.c: 233: {;CAN.c
      +                          : 234:     BYTE i;;CAN.c: 235:     for(i=0; i<8; ++i)
  5145                           
  5146                           ;incstack = 0
  5147  0018F6  0E00               	movlw	0
  5148  0018F8  6E2E               	movwf	CAN_MoveBuffIntoFrame@i,c
  5149  0018FA                     l3835:
  5150                           
  5151                           ;CAN.c: 236:     {;CAN.c: 237:         Ram[i]=(*(Buf+i));
  5152  0018FA  502E               	movf	CAN_MoveBuffIntoFrame@i,w,c
  5153  0018FC  242C               	addwf	CAN_MoveBuffIntoFrame@Buf,w,c
  5154  0018FE  6ED9               	movwf	fsr2l,c
  5155  001900  0E00               	movlw	0
  5156  001902  202D               	addwfc	CAN_MoveBuffIntoFrame@Buf+1,w,c
  5157  001904  6EDA               	movwf	fsr2h,c
  5158  001906  502E               	movf	CAN_MoveBuffIntoFrame@i,w,c
  5159  001908  242A               	addwf	CAN_MoveBuffIntoFrame@Ram,w,c
  5160  00190A  6EE1               	movwf	fsr1l,c
  5161  00190C  0E00               	movlw	0
  5162  00190E  202B               	addwfc	CAN_MoveBuffIntoFrame@Ram+1,w,c
  5163  001910  6EE2               	movwf	fsr1h,c
  5164  001912  CFDF FFE7          	movff	indf2,indf1
  5165                           
  5166                           ;CAN.c: 238:     }
  5167  001916  2A2E               	incf	CAN_MoveBuffIntoFrame@i,f,c
  5168  001918  0E07               	movlw	7
  5169  00191A  642E               	cpfsgt	CAN_MoveBuffIntoFrame@i,c
  5170  00191C  D7EE               	goto	l3835
  5171  00191E  0012               	return	
  5172  001920                     __end_of_CAN_MoveBuffIntoFrame:
  5173                           	opt callstack 0
  5174                           
  5175 ;; *************** function _TMR1_Update_flag_Set *****************
  5176 ;; Defined at:
  5177 ;;		line 32 in file "TMR1.c"
  5178 ;; Parameters:    Size  Location     Type
  5179 ;;  a               2    5[COMRAM] unsigned int 
  5180 ;; Auto vars:     Size  Location     Type
  5181 ;;		None
  5182 ;; Return value:  Size  Location     Type
  5183 ;;                  1    wreg      void 
  5184 ;; Registers used:
  5185 ;;		None
  5186 ;; Tracked objects:
  5187 ;;		On entry : 0/0
  5188 ;;		On exit  : 0/0
  5189 ;;		Unchanged: 0/0
  5190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5191 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5194 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5195 ;;Total ram usage:        2 bytes
  5196 ;; Hardware stack levels used:    1
  5197 ;; Hardware stack levels required when called:    3
  5198 ;; This function calls:
  5199 ;;		Nothing
  5200 ;; This function is called by:
  5201 ;;		_main
  5202 ;; This function uses a non-reentrant model
  5203 ;;
  5204                           
  5205                           	psect	text37
  5206  001A5C                     __ptext37:
  5207                           	opt callstack 0
  5208  001A5C                     _TMR1_Update_flag_Set:
  5209                           	opt callstack 27
  5210                           
  5211                           ;TMR1.c: 32: void TMR1_Update_flag_Set(UINT a);TMR1.c: 33: {;TMR1.c: 34:     TMR1_Update
      +                          _flag = a;
  5212                           
  5213                           ;incstack = 0
  5214  001A5C  C02A  F00B         	movff	TMR1_Update_flag_Set@a,_TMR1_Update_flag
  5215  001A60  C02B  F00C         	movff	TMR1_Update_flag_Set@a+1,_TMR1_Update_flag+1
  5216  001A64  0012               	return		;funcret
  5217  001A66                     __end_of_TMR1_Update_flag_Set:
  5218                           	opt callstack 0
  5219                           
  5220 ;; *************** function _TMR1_Update_flag_Get *****************
  5221 ;; Defined at:
  5222 ;;		line 47 in file "TMR1.c"
  5223 ;; Parameters:    Size  Location     Type
  5224 ;;		None
  5225 ;; Auto vars:     Size  Location     Type
  5226 ;;		None
  5227 ;; Return value:  Size  Location     Type
  5228 ;;                  2    5[COMRAM] unsigned int 
  5229 ;; Registers used:
  5230 ;;		None
  5231 ;; Tracked objects:
  5232 ;;		On entry : 0/0
  5233 ;;		On exit  : 0/0
  5234 ;;		Unchanged: 0/0
  5235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5236 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5239 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5240 ;;Total ram usage:        2 bytes
  5241 ;; Hardware stack levels used:    1
  5242 ;; Hardware stack levels required when called:    3
  5243 ;; This function calls:
  5244 ;;		Nothing
  5245 ;; This function is called by:
  5246 ;;		_main
  5247 ;; This function uses a non-reentrant model
  5248 ;;
  5249                           
  5250                           	psect	text38
  5251  001A66                     __ptext38:
  5252                           	opt callstack 0
  5253  001A66                     _TMR1_Update_flag_Get:
  5254                           	opt callstack 27
  5255                           
  5256                           ;TMR1.c: 49:     return TMR1_Update_flag;
  5257                           
  5258                           ;incstack = 0
  5259  001A66  C00B  F02A         	movff	_TMR1_Update_flag,?_TMR1_Update_flag_Get
  5260  001A6A  C00C  F02B         	movff	_TMR1_Update_flag+1,?_TMR1_Update_flag_Get+1
  5261  001A6E  0012               	return		;funcret
  5262  001A70                     __end_of_TMR1_Update_flag_Get:
  5263                           	opt callstack 0
  5264                           
  5265 ;; *************** function _LED_Update *****************
  5266 ;; Defined at:
  5267 ;;		line 105 in file "LED.c"
  5268 ;; Parameters:    Size  Location     Type
  5269 ;;		None
  5270 ;; Auto vars:     Size  Location     Type
  5271 ;;		None
  5272 ;; Return value:  Size  Location     Type
  5273 ;;                  1    wreg      unsigned char 
  5274 ;; Registers used:
  5275 ;;		wreg, status,2, status,0, cstack
  5276 ;; Tracked objects:
  5277 ;;		On entry : 0/0
  5278 ;;		On exit  : 0/0
  5279 ;;		Unchanged: 0/0
  5280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5284 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5285 ;;Total ram usage:        0 bytes
  5286 ;; Hardware stack levels used:    1
  5287 ;; Hardware stack levels required when called:    5
  5288 ;; This function calls:
  5289 ;;		_LED_Control
  5290 ;;		_LED_Left
  5291 ;;		_LED_Light_Pos
  5292 ;;		_LED_Right
  5293 ;; This function is called by:
  5294 ;;		_main
  5295 ;; This function uses a non-reentrant model
  5296 ;;
  5297                           
  5298                           	psect	text39
  5299  0011BC                     __ptext39:
  5300                           	opt callstack 0
  5301  0011BC                     _LED_Update:
  5302                           	opt callstack 25
  5303                           
  5304                           ;LED.c: 107:     static LED_RGA_type Red = RED;;LED.c: 108:     static LED_RGA_type Gree
      +                          n = GREEN;;LED.c: 109:     static UINT pos1 = 0b0000000001;;LED.c: 110:     static UINT 
      +                          pos2 = 0b0000000001;;LED.c: 112:     if(LOCK == 0)
  5305                           
  5306                           ;incstack = 0
  5307  0011BC  5014               	movf	_LOCK,w,c
  5308  0011BE  A4D8               	btfss	status,2,c
  5309  0011C0  D013               	goto	l4559
  5310                           
  5311                           ;LED.c: 113:     {;LED.c: 114:     LED_Control(RED,0b0000000000);
  5312  0011C2  0E00               	movlw	0
  5313  0011C4  6E2B               	movwf	LED_Control@diode+1,c
  5314  0011C6  0E00               	movlw	0
  5315  0011C8  6E2A               	movwf	LED_Control@diode,c
  5316  0011CA  0E00               	movlw	0
  5317  0011CC  EC91  F004         	call	_LED_Control
  5318                           
  5319                           ;LED.c: 115:     LED_Light_Pos(Green,pos2,Fulfillment_Lvl);
  5320  0011D0  C041  F031         	movff	LED_Update@pos2,LED_Light_Pos@pos
  5321  0011D4  C042  F032         	movff	LED_Update@pos2+1,LED_Light_Pos@pos+1
  5322  0011D8  C045  F033         	movff	_Fulfillment_Lvl,LED_Light_Pos@fulfillment
  5323  0011DC  C046  F034         	movff	_Fulfillment_Lvl+1,LED_Light_Pos@fulfillment+1
  5324  0011E0  5047               	movf	LED_Update@Green,w,c
  5325  0011E2  ECAA  F007         	call	_LED_Light_Pos
  5326                           
  5327                           ;LED.c: 117:     }
  5328  0011E6  D012               	goto	l384
  5329  0011E8                     l4559:
  5330                           
  5331                           ;LED.c: 119:     {;LED.c: 120:     LED_Control(Green,0b0000000000);
  5332  0011E8  0E00               	movlw	0
  5333  0011EA  6E2B               	movwf	LED_Control@diode+1,c
  5334  0011EC  0E00               	movlw	0
  5335  0011EE  6E2A               	movwf	LED_Control@diode,c
  5336  0011F0  5047               	movf	LED_Update@Green,w,c
  5337  0011F2  EC91  F004         	call	_LED_Control
  5338                           
  5339                           ;LED.c: 121:     LED_Light_Pos(RED,pos1,Fulfillment_Lvl);
  5340  0011F6  C043  F031         	movff	LED_Update@pos1,LED_Light_Pos@pos
  5341  0011FA  C044  F032         	movff	LED_Update@pos1+1,LED_Light_Pos@pos+1
  5342  0011FE  C045  F033         	movff	_Fulfillment_Lvl,LED_Light_Pos@fulfillment
  5343  001202  C046  F034         	movff	_Fulfillment_Lvl+1,LED_Light_Pos@fulfillment+1
  5344  001206  0E00               	movlw	0
  5345  001208  ECAA  F007         	call	_LED_Light_Pos
  5346  00120C                     l384:
  5347                           
  5348                           ;LED.c: 123:     pos1 = LED_Right(pos1);
  5349  00120C  C043  F02A         	movff	LED_Update@pos1,LED_Right@a
  5350  001210  C044  F02B         	movff	LED_Update@pos1+1,LED_Right@a+1
  5351  001214  EC2A  F00B         	call	_LED_Right	;wreg free
  5352  001218  C02A  F043         	movff	?_LED_Right,LED_Update@pos1
  5353  00121C  C02B  F044         	movff	?_LED_Right+1,LED_Update@pos1+1
  5354                           
  5355                           ;LED.c: 124:     pos2 = LED_Left(pos2);
  5356  001220  C041  F02A         	movff	LED_Update@pos2,LED_Left@a
  5357  001224  C042  F02B         	movff	LED_Update@pos2+1,LED_Left@a+1
  5358  001228  EC50  F00B         	call	_LED_Left	;wreg free
  5359  00122C  C02A  F041         	movff	?_LED_Left,LED_Update@pos2
  5360  001230  C02B  F042         	movff	?_LED_Left+1,LED_Update@pos2+1
  5361  001234  0012               	return		;funcret
  5362  001236                     __end_of_LED_Update:
  5363                           	opt callstack 0
  5364                           
  5365 ;; *************** function _LED_Light_Pos *****************
  5366 ;; Defined at:
  5367 ;;		line 196 in file "LED.c"
  5368 ;; Parameters:    Size  Location     Type
  5369 ;;  color           1    wreg     enum E10644
  5370 ;;  pos             2   12[COMRAM] unsigned int 
  5371 ;;  fulfillment     2   14[COMRAM] unsigned int 
  5372 ;; Auto vars:     Size  Location     Type
  5373 ;;  color           1   16[COMRAM] enum E10644
  5374 ;;  flage           2   21[COMRAM] unsigned int 
  5375 ;;  pos2            2   19[COMRAM] unsigned int 
  5376 ;;  LED_array       2   17[COMRAM] unsigned int 
  5377 ;; Return value:  Size  Location     Type
  5378 ;;                  2   12[COMRAM] unsigned int 
  5379 ;; Registers used:
  5380 ;;		wreg, status,2, status,0, cstack
  5381 ;; Tracked objects:
  5382 ;;		On entry : 0/0
  5383 ;;		On exit  : 0/0
  5384 ;;		Unchanged: 0/0
  5385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5386 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5387 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5389 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5390 ;;Total ram usage:       11 bytes
  5391 ;; Hardware stack levels used:    1
  5392 ;; Hardware stack levels required when called:    4
  5393 ;; This function calls:
  5394 ;;		_LED_Control
  5395 ;;		_LED_Left
  5396 ;;		_LED_Right
  5397 ;;		___lwdiv
  5398 ;; This function is called by:
  5399 ;;		_LED_Update
  5400 ;; This function uses a non-reentrant model
  5401 ;;
  5402                           
  5403                           	psect	text40
  5404  000F54                     __ptext40:
  5405                           	opt callstack 0
  5406  000F54                     _LED_Light_Pos:
  5407                           	opt callstack 25
  5408                           
  5409                           ;incstack = 0
  5410                           ;LED_Light_Pos@color stored from wreg
  5411  000F54  6E35               	movwf	LED_Light_Pos@color,c
  5412                           
  5413                           ;LED.c: 196: UINT LED_Light_Pos(LED_RGA_type color,UINT pos, UINT fulfillment);LED.c: 19
      +                          7: {;LED.c: 198:     UINT pos2 =pos;
  5414  000F56  C031  F038         	movff	LED_Light_Pos@pos,LED_Light_Pos@pos2
  5415  000F5A  C032  F039         	movff	LED_Light_Pos@pos+1,LED_Light_Pos@pos2+1
  5416                           
  5417                           ;LED.c: 199:     UINT LED_array = 0b0000000000;
  5418  000F5E  0E00               	movlw	0
  5419  000F60  6E37               	movwf	LED_Light_Pos@LED_array+1,c
  5420  000F62  0E00               	movlw	0
  5421  000F64  6E36               	movwf	LED_Light_Pos@LED_array,c
  5422                           
  5423                           ;LED.c: 200:     UINT flage = fulfillment/10;
  5424  000F66  C033  F02A         	movff	LED_Light_Pos@fulfillment,___lwdiv@dividend
  5425  000F6A  C034  F02B         	movff	LED_Light_Pos@fulfillment+1,___lwdiv@dividend+1
  5426  000F6E  0E00               	movlw	0
  5427  000F70  6E2D               	movwf	___lwdiv@divisor+1,c
  5428  000F72  0E0A               	movlw	10
  5429  000F74  6E2C               	movwf	___lwdiv@divisor,c
  5430  000F76  ECB4  F00A         	call	___lwdiv	;wreg free
  5431  000F7A  C02A  F03A         	movff	?___lwdiv,LED_Light_Pos@flage
  5432  000F7E  C02B  F03B         	movff	?___lwdiv+1,LED_Light_Pos@flage+1
  5433                           
  5434                           ;LED.c: 201:     if(color == RED)
  5435  000F82  5035               	movf	LED_Light_Pos@color,w,c
  5436  000F84  B4D8               	btfsc	status,2,c
  5437  000F86  D017               	goto	l4465
  5438  000F88  D031               	goto	l4473
  5439  000F8A                     l4459:
  5440                           
  5441                           ;LED.c: 204:         {;LED.c: 205:             LED_array = pos2|LED_array;
  5442  000F8A  5036               	movf	LED_Light_Pos@LED_array,w,c
  5443  000F8C  1038               	iorwf	LED_Light_Pos@pos2,w,c
  5444  000F8E  6E36               	movwf	LED_Light_Pos@LED_array,c
  5445  000F90  5037               	movf	LED_Light_Pos@LED_array+1,w,c
  5446  000F92  1039               	iorwf	LED_Light_Pos@pos2+1,w,c
  5447  000F94  6E37               	movwf	LED_Light_Pos@LED_array+1,c
  5448                           
  5449                           ;LED.c: 206:             pos2 = LED_Left(pos2);
  5450  000F96  C038  F02A         	movff	LED_Light_Pos@pos2,LED_Left@a
  5451  000F9A  C039  F02B         	movff	LED_Light_Pos@pos2+1,LED_Left@a+1
  5452  000F9E  EC50  F00B         	call	_LED_Left	;wreg free
  5453  000FA2  C02A  F038         	movff	?_LED_Left,LED_Light_Pos@pos2
  5454  000FA6  C02B  F039         	movff	?_LED_Left+1,LED_Light_Pos@pos2+1
  5455                           
  5456                           ;LED.c: 207:             flage = flage - 1;
  5457  000FAA  0EFF               	movlw	255
  5458  000FAC  243A               	addwf	LED_Light_Pos@flage,w,c
  5459  000FAE  6E3A               	movwf	LED_Light_Pos@flage,c
  5460  000FB0  0EFF               	movlw	255
  5461  000FB2  203B               	addwfc	LED_Light_Pos@flage+1,w,c
  5462  000FB4  6E3B               	movwf	LED_Light_Pos@flage+1,c
  5463  000FB6                     l4465:
  5464                           
  5465                           ;LED.c: 203:         while(flage>0)
  5466  000FB6  503A               	movf	LED_Light_Pos@flage,w,c
  5467  000FB8  103B               	iorwf	LED_Light_Pos@flage+1,w,c
  5468  000FBA  B4D8               	btfsc	status,2,c
  5469  000FBC  D01B               	goto	u2750
  5470  000FBE  D7E5               	goto	l4459
  5471  000FC0                     l4467:
  5472                           
  5473                           ;LED.c: 213:         {;LED.c: 214:             LED_array = pos2|LED_array;
  5474  000FC0  5036               	movf	LED_Light_Pos@LED_array,w,c
  5475  000FC2  1038               	iorwf	LED_Light_Pos@pos2,w,c
  5476  000FC4  6E36               	movwf	LED_Light_Pos@LED_array,c
  5477  000FC6  5037               	movf	LED_Light_Pos@LED_array+1,w,c
  5478  000FC8  1039               	iorwf	LED_Light_Pos@pos2+1,w,c
  5479  000FCA  6E37               	movwf	LED_Light_Pos@LED_array+1,c
  5480                           
  5481                           ;LED.c: 215:             pos2 = LED_Right(pos2);
  5482  000FCC  C038  F02A         	movff	LED_Light_Pos@pos2,LED_Right@a
  5483  000FD0  C039  F02B         	movff	LED_Light_Pos@pos2+1,LED_Right@a+1
  5484  000FD4  EC2A  F00B         	call	_LED_Right	;wreg free
  5485  000FD8  C02A  F038         	movff	?_LED_Right,LED_Light_Pos@pos2
  5486  000FDC  C02B  F039         	movff	?_LED_Right+1,LED_Light_Pos@pos2+1
  5487                           
  5488                           ;LED.c: 216:             flage = flage - 1;
  5489  000FE0  0EFF               	movlw	255
  5490  000FE2  243A               	addwf	LED_Light_Pos@flage,w,c
  5491  000FE4  6E3A               	movwf	LED_Light_Pos@flage,c
  5492  000FE6  0EFF               	movlw	255
  5493  000FE8  203B               	addwfc	LED_Light_Pos@flage+1,w,c
  5494  000FEA  6E3B               	movwf	LED_Light_Pos@flage+1,c
  5495  000FEC                     l4473:
  5496                           
  5497                           ;LED.c: 212:         while(flage>0)
  5498  000FEC  503A               	movf	LED_Light_Pos@flage,w,c
  5499  000FEE  103B               	iorwf	LED_Light_Pos@flage+1,w,c
  5500  000FF0  A4D8               	btfss	status,2,c
  5501  000FF2  D7E6               	goto	l4467
  5502  000FF4                     u2750:
  5503                           
  5504                           ;LED.c: 219:     LED_Control(color, LED_array);
  5505  000FF4  C036  F02A         	movff	LED_Light_Pos@LED_array,LED_Control@diode
  5506  000FF8  C037  F02B         	movff	LED_Light_Pos@LED_array+1,LED_Control@diode+1
  5507  000FFC  5035               	movf	LED_Light_Pos@color,w,c
  5508  000FFE  EC91  F004         	call	_LED_Control
  5509  001002  0012               	return		;funcret
  5510  001004                     __end_of_LED_Light_Pos:
  5511                           	opt callstack 0
  5512                           
  5513 ;; *************** function ___lwdiv *****************
  5514 ;; Defined at:
  5515 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwdiv.c"
  5516 ;; Parameters:    Size  Location     Type
  5517 ;;  dividend        2    5[COMRAM] unsigned int 
  5518 ;;  divisor         2    7[COMRAM] unsigned int 
  5519 ;; Auto vars:     Size  Location     Type
  5520 ;;  quotient        2   10[COMRAM] unsigned int 
  5521 ;;  counter         1    9[COMRAM] unsigned char 
  5522 ;; Return value:  Size  Location     Type
  5523 ;;                  2    5[COMRAM] unsigned int 
  5524 ;; Registers used:
  5525 ;;		wreg, status,2, status,0
  5526 ;; Tracked objects:
  5527 ;;		On entry : 0/0
  5528 ;;		On exit  : 0/0
  5529 ;;		Unchanged: 0/0
  5530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5531 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5532 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5534 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5535 ;;Total ram usage:        7 bytes
  5536 ;; Hardware stack levels used:    1
  5537 ;; Hardware stack levels required when called:    3
  5538 ;; This function calls:
  5539 ;;		Nothing
  5540 ;; This function is called by:
  5541 ;;		_LED_Light_Pos
  5542 ;;		_FRAME_Plot
  5543 ;; This function uses a non-reentrant model
  5544 ;;
  5545                           
  5546                           	psect	text41
  5547  001568                     __ptext41:
  5548                           	opt callstack 0
  5549  001568                     ___lwdiv:
  5550                           	opt callstack 24
  5551                           
  5552                           ;incstack = 0
  5553  001568  0E00               	movlw	0
  5554  00156A  6E30               	movwf	___lwdiv@quotient+1,c
  5555  00156C  0E00               	movlw	0
  5556  00156E  6E2F               	movwf	___lwdiv@quotient,c
  5557  001570  502C               	movf	___lwdiv@divisor,w,c
  5558  001572  102D               	iorwf	___lwdiv@divisor+1,w,c
  5559  001574  B4D8               	btfsc	status,2,c
  5560  001576  D01C               	goto	l1427
  5561  001578  0E01               	movlw	1
  5562  00157A  6E2E               	movwf	___lwdiv@counter,c
  5563  00157C  D004               	goto	l4069
  5564  00157E                     l4067:
  5565  00157E  90D8               	bcf	status,0,c
  5566  001580  362C               	rlcf	___lwdiv@divisor,f,c
  5567  001582  362D               	rlcf	___lwdiv@divisor+1,f,c
  5568  001584  2A2E               	incf	___lwdiv@counter,f,c
  5569  001586                     l4069:
  5570  001586  AE2D               	btfss	___lwdiv@divisor+1,7,c
  5571  001588  D7FA               	goto	l4067
  5572  00158A                     u2310:
  5573  00158A  90D8               	bcf	status,0,c
  5574  00158C  362F               	rlcf	___lwdiv@quotient,f,c
  5575  00158E  3630               	rlcf	___lwdiv@quotient+1,f,c
  5576  001590  502C               	movf	___lwdiv@divisor,w,c
  5577  001592  5C2A               	subwf	___lwdiv@dividend,w,c
  5578  001594  502D               	movf	___lwdiv@divisor+1,w,c
  5579  001596  582B               	subwfb	___lwdiv@dividend+1,w,c
  5580  001598  A0D8               	btfss	status,0,c
  5581  00159A  D005               	goto	l4079
  5582  00159C  502C               	movf	___lwdiv@divisor,w,c
  5583  00159E  5E2A               	subwf	___lwdiv@dividend,f,c
  5584  0015A0  502D               	movf	___lwdiv@divisor+1,w,c
  5585  0015A2  5A2B               	subwfb	___lwdiv@dividend+1,f,c
  5586  0015A4  802F               	bsf	___lwdiv@quotient,0,c
  5587  0015A6                     l4079:
  5588  0015A6  90D8               	bcf	status,0,c
  5589  0015A8  322D               	rrcf	___lwdiv@divisor+1,f,c
  5590  0015AA  322C               	rrcf	___lwdiv@divisor,f,c
  5591  0015AC  2E2E               	decfsz	___lwdiv@counter,f,c
  5592  0015AE  D7ED               	goto	u2310
  5593  0015B0                     l1427:
  5594  0015B0  C02F  F02A         	movff	___lwdiv@quotient,?___lwdiv
  5595  0015B4  C030  F02B         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5596  0015B8  0012               	return		;funcret
  5597  0015BA                     __end_of___lwdiv:
  5598                           	opt callstack 0
  5599                           
  5600 ;; *************** function _LED_Right *****************
  5601 ;; Defined at:
  5602 ;;		line 140 in file "LED.c"
  5603 ;; Parameters:    Size  Location     Type
  5604 ;;  a               2    5[COMRAM] unsigned int 
  5605 ;; Auto vars:     Size  Location     Type
  5606 ;;  b               2    9[COMRAM] unsigned int 
  5607 ;; Return value:  Size  Location     Type
  5608 ;;                  2    5[COMRAM] unsigned int 
  5609 ;; Registers used:
  5610 ;;		wreg, status,2, status,0
  5611 ;; Tracked objects:
  5612 ;;		On entry : 0/0
  5613 ;;		On exit  : 0/0
  5614 ;;		Unchanged: 0/0
  5615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5616 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5617 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5618 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5619 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5620 ;;Total ram usage:        6 bytes
  5621 ;; Hardware stack levels used:    1
  5622 ;; Hardware stack levels required when called:    3
  5623 ;; This function calls:
  5624 ;;		Nothing
  5625 ;; This function is called by:
  5626 ;;		_LED_Update
  5627 ;;		_LED_Light_Pos
  5628 ;; This function uses a non-reentrant model
  5629 ;;
  5630                           
  5631                           	psect	text42
  5632  001654                     __ptext42:
  5633                           	opt callstack 0
  5634  001654                     _LED_Right:
  5635                           	opt callstack 26
  5636                           
  5637                           ;LED.c: 140: UINT LED_Right(UINT a);LED.c: 141: {;LED.c: 142:     if ((a & 0b0000000001)
      +                           == 0b0000000001)
  5638                           
  5639                           ;incstack = 0
  5640  001654  A02A               	btfss	LED_Right@a,0,c
  5641  001656  D018               	goto	l3131
  5642                           
  5643                           ;LED.c: 143:     {;LED.c: 144:         UINT b = a & 0b1111111110;
  5644  001658  0EFE               	movlw	254
  5645  00165A  142A               	andwf	LED_Right@a,w,c
  5646  00165C  6E2E               	movwf	LED_Right@b,c
  5647  00165E  0E03               	movlw	3
  5648  001660  142B               	andwf	LED_Right@a+1,w,c
  5649  001662  6E2F               	movwf	LED_Right@b+1,c
  5650                           
  5651                           ;LED.c: 145:         b = b >> 1;
  5652  001664  90D8               	bcf	status,0,c
  5653  001666  302F               	rrcf	LED_Right@b+1,w,c
  5654  001668  6E2C               	movwf	??_LED_Right& (0+255),c
  5655  00166A  302E               	rrcf	LED_Right@b,w,c
  5656  00166C  6E2E               	movwf	LED_Right@b,c
  5657  00166E  C02C  F02F         	movff	??_LED_Right,LED_Right@b+1
  5658                           
  5659                           ;LED.c: 146:         b = b | 0b1000000000;
  5660  001672  0E00               	movlw	0
  5661  001674  102E               	iorwf	LED_Right@b,w,c
  5662  001676  6E2E               	movwf	LED_Right@b,c
  5663  001678  0E02               	movlw	2
  5664  00167A  102F               	iorwf	LED_Right@b+1,w,c
  5665  00167C  6E2F               	movwf	LED_Right@b+1,c
  5666                           
  5667                           ;LED.c: 147:         return b;
  5668  00167E  C02E  F02A         	movff	LED_Right@b,?_LED_Right
  5669  001682  C02F  F02B         	movff	LED_Right@b+1,?_LED_Right+1
  5670  001686  0012               	return	
  5671  001688                     l3131:
  5672                           
  5673                           ;LED.c: 150:     {;LED.c: 151:         a =a >> 1;
  5674  001688  90D8               	bcf	status,0,c
  5675  00168A  302B               	rrcf	LED_Right@a+1,w,c
  5676  00168C  6E2C               	movwf	??_LED_Right& (0+255),c
  5677  00168E  302A               	rrcf	LED_Right@a,w,c
  5678  001690  6E2A               	movwf	LED_Right@a,c
  5679  001692  C02C  F02B         	movff	??_LED_Right,LED_Right@a+1
  5680                           
  5681                           ;LED.c: 152:         return a;
  5682  001696  C02A  F02A         	movff	LED_Right@a,?_LED_Right
  5683  00169A  C02B  F02B         	movff	LED_Right@a+1,?_LED_Right+1
  5684  00169E  0012               	return		;funcret
  5685  0016A0                     __end_of_LED_Right:
  5686                           	opt callstack 0
  5687                           
  5688 ;; *************** function _LED_Left *****************
  5689 ;; Defined at:
  5690 ;;		line 167 in file "LED.c"
  5691 ;; Parameters:    Size  Location     Type
  5692 ;;  a               2    5[COMRAM] unsigned int 
  5693 ;; Auto vars:     Size  Location     Type
  5694 ;;  b               2    7[COMRAM] unsigned int 
  5695 ;; Return value:  Size  Location     Type
  5696 ;;                  2    5[COMRAM] unsigned int 
  5697 ;; Registers used:
  5698 ;;		wreg, status,2, status,0
  5699 ;; Tracked objects:
  5700 ;;		On entry : 0/0
  5701 ;;		On exit  : 0/0
  5702 ;;		Unchanged: 0/0
  5703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5704 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5705 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5707 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5708 ;;Total ram usage:        4 bytes
  5709 ;; Hardware stack levels used:    1
  5710 ;; Hardware stack levels required when called:    3
  5711 ;; This function calls:
  5712 ;;		Nothing
  5713 ;; This function is called by:
  5714 ;;		_LED_Update
  5715 ;;		_LED_Light_Pos
  5716 ;; This function uses a non-reentrant model
  5717 ;;
  5718                           
  5719                           	psect	text43
  5720  0016A0                     __ptext43:
  5721                           	opt callstack 0
  5722  0016A0                     _LED_Left:
  5723                           	opt callstack 25
  5724                           
  5725                           ;LED.c: 167: UINT LED_Left(UINT a);LED.c: 168: {;LED.c: 169:     if ((a & 0b1000000000) 
      +                          == 0b1000000000)
  5726                           
  5727                           ;incstack = 0
  5728  0016A0  A22B               	btfss	LED_Left@a+1,1,c
  5729  0016A2  D015               	goto	l3147
  5730                           
  5731                           ;LED.c: 170:     {;LED.c: 171:         UINT b = a & 0b0111111111;
  5732  0016A4  0EFF               	movlw	255
  5733  0016A6  142A               	andwf	LED_Left@a,w,c
  5734  0016A8  6E2C               	movwf	LED_Left@b,c
  5735  0016AA  0E01               	movlw	1
  5736  0016AC  142B               	andwf	LED_Left@a+1,w,c
  5737  0016AE  6E2D               	movwf	LED_Left@b+1,c
  5738                           
  5739                           ;LED.c: 172:         b = b << 1;
  5740  0016B0  90D8               	bcf	status,0,c
  5741  0016B2  342C               	rlcf	LED_Left@b,w,c
  5742  0016B4  6E2C               	movwf	LED_Left@b,c
  5743  0016B6  342D               	rlcf	LED_Left@b+1,w,c
  5744  0016B8  6E2D               	movwf	LED_Left@b+1,c
  5745                           
  5746                           ;LED.c: 173:         b = b | 0b0000000001;
  5747  0016BA  0E01               	movlw	1
  5748  0016BC  102C               	iorwf	LED_Left@b,w,c
  5749  0016BE  6E2C               	movwf	LED_Left@b,c
  5750  0016C0  502D               	movf	LED_Left@b+1,w,c
  5751  0016C2  6E2D               	movwf	LED_Left@b+1,c
  5752                           
  5753                           ;LED.c: 174:         return b;
  5754  0016C4  C02C  F02A         	movff	LED_Left@b,?_LED_Left
  5755  0016C8  C02D  F02B         	movff	LED_Left@b+1,?_LED_Left+1
  5756  0016CC  0012               	return	
  5757  0016CE                     l3147:
  5758                           
  5759                           ;LED.c: 177:     {;LED.c: 178:         a = a << 1;
  5760  0016CE  90D8               	bcf	status,0,c
  5761  0016D0  342A               	rlcf	LED_Left@a,w,c
  5762  0016D2  6E2A               	movwf	LED_Left@a,c
  5763  0016D4  342B               	rlcf	LED_Left@a+1,w,c
  5764  0016D6  6E2B               	movwf	LED_Left@a+1,c
  5765                           
  5766                           ;LED.c: 179:         return a;
  5767  0016D8  C02A  F02A         	movff	LED_Left@a,?_LED_Left
  5768  0016DC  C02B  F02B         	movff	LED_Left@a+1,?_LED_Left+1
  5769  0016E0  0012               	return		;funcret
  5770  0016E2                     __end_of_LED_Left:
  5771                           	opt callstack 0
  5772                           
  5773 ;; *************** function _INI_All *****************
  5774 ;; Defined at:
  5775 ;;		line 54 in file "INI.c"
  5776 ;; Parameters:    Size  Location     Type
  5777 ;;		None
  5778 ;; Auto vars:     Size  Location     Type
  5779 ;;		None
  5780 ;; Return value:  Size  Location     Type
  5781 ;;                  1    wreg      void 
  5782 ;; Registers used:
  5783 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5784 ;; Tracked objects:
  5785 ;;		On entry : 0/0
  5786 ;;		On exit  : 0/0
  5787 ;;		Unchanged: 0/0
  5788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5792 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5793 ;;Total ram usage:        0 bytes
  5794 ;; Hardware stack levels used:    1
  5795 ;; Hardware stack levels required when called:    6
  5796 ;; This function calls:
  5797 ;;		_CAN_Setup
  5798 ;;		_INI_GlobalInterrupt
  5799 ;;		_INI_LED_Start
  5800 ;;		_INI_OUTPUT
  5801 ;;		_INI_Timer
  5802 ;;		_NVMInit
  5803 ;;		_ReadDataToEEPROM
  5804 ;; This function is called by:
  5805 ;;		_main
  5806 ;; This function uses a non-reentrant model
  5807 ;;
  5808                           
  5809                           	psect	text44
  5810  00196C                     __ptext44:
  5811                           	opt callstack 0
  5812  00196C                     _INI_All:
  5813                           	opt callstack 24
  5814                           
  5815                           ;INI.c: 57:     WDTCONbits.SWDTEN = 1;
  5816                           
  5817                           ;incstack = 0
  5818  00196C  80D1               	bsf	4049,0,c	;volatile
  5819                           
  5820                           ;INI.c: 60:     NVMInit();
  5821  00196E  EC71  F00B         	call	_NVMInit	;wreg free
  5822                           
  5823                           ;INI.c: 62:     ReadDataToEEPROM();
  5824  001972  ECD4  F006         	call	_ReadDataToEEPROM	;wreg free
  5825  001976  0004               	clrwdt		;# 
  5826                           
  5827                           ;INI.c: 66:     INI_OUTPUT();
  5828  001978  ECC7  F00C         	call	_INI_OUTPUT	;wreg free
  5829                           
  5830                           ;INI.c: 68:     CAN_Setup();
  5831  00197C  ECFC  F009         	call	_CAN_Setup	;wreg free
  5832                           
  5833                           ;INI.c: 69:     INI_GlobalInterrupt();
  5834  001980  EC02  F00D         	call	_INI_GlobalInterrupt	;wreg free
  5835                           
  5836                           ;INI.c: 71:     INI_Timer();
  5837  001984  ECE6  F00C         	call	_INI_Timer	;wreg free
  5838                           
  5839                           ;INI.c: 73:     INI_LED_Start();
  5840  001988  EC49  F00C         	call	_INI_LED_Start	;wreg free
  5841  00198C  0012               	return		;funcret
  5842  00198E                     __end_of_INI_All:
  5843                           	opt callstack 0
  5844                           
  5845 ;; *************** function _ReadDataToEEPROM *****************
  5846 ;; Defined at:
  5847 ;;		line 404 in file "FRAME.c"
  5848 ;; Parameters:    Size  Location     Type
  5849 ;;		None
  5850 ;; Auto vars:     Size  Location     Type
  5851 ;;		None
  5852 ;; Return value:  Size  Location     Type
  5853 ;;                  1    wreg      void 
  5854 ;; Registers used:
  5855 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5856 ;; Tracked objects:
  5857 ;;		On entry : 0/0
  5858 ;;		On exit  : 0/0
  5859 ;;		Unchanged: 0/0
  5860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5865 ;;Total ram usage:        0 bytes
  5866 ;; Hardware stack levels used:    1
  5867 ;; Hardware stack levels required when called:    5
  5868 ;; This function calls:
  5869 ;;		_NVMRead
  5870 ;; This function is called by:
  5871 ;;		_INI_All
  5872 ;; This function uses a non-reentrant model
  5873 ;;
  5874                           
  5875                           	psect	text45
  5876  000DA8                     __ptext45:
  5877                           	opt callstack 0
  5878  000DA8                     _ReadDataToEEPROM:
  5879                           	opt callstack 24
  5880                           
  5881                           ;FRAME.c: 406:     NVMRead(&NeightAdress1,1,2);
  5882                           
  5883                           ;incstack = 0
  5884  000DA8  0E4A               	movlw	low _NeightAdress1
  5885  000DAA  6E2C               	movwf	NVMRead@dest,c
  5886  000DAC  0E00               	movlw	high _NeightAdress1
  5887  000DAE  6E2D               	movwf	NVMRead@dest+1,c
  5888  000DB0  0E00               	movlw	0
  5889  000DB2  6E2F               	movwf	NVMRead@addr+1,c
  5890  000DB4  0E01               	movlw	1
  5891  000DB6  6E2E               	movwf	NVMRead@addr,c
  5892  000DB8  0E00               	movlw	0
  5893  000DBA  6E31               	movwf	NVMRead@count+1,c
  5894  000DBC  0E02               	movlw	2
  5895  000DBE  6E30               	movwf	NVMRead@count,c
  5896  000DC0  EC2F  F00C         	call	_NVMRead	;wreg free
  5897                           
  5898                           ;FRAME.c: 407:     NVMRead(&NeightAdress2,4,2);
  5899  000DC4  0E48               	movlw	low _NeightAdress2
  5900  000DC6  6E2C               	movwf	NVMRead@dest,c
  5901  000DC8  0E00               	movlw	high _NeightAdress2
  5902  000DCA  6E2D               	movwf	NVMRead@dest+1,c
  5903  000DCC  0E00               	movlw	0
  5904  000DCE  6E2F               	movwf	NVMRead@addr+1,c
  5905  000DD0  0E04               	movlw	4
  5906  000DD2  6E2E               	movwf	NVMRead@addr,c
  5907  000DD4  0E00               	movlw	0
  5908  000DD6  6E31               	movwf	NVMRead@count+1,c
  5909  000DD8  0E02               	movlw	2
  5910  000DDA  6E30               	movwf	NVMRead@count,c
  5911  000DDC  EC2F  F00C         	call	_NVMRead	;wreg free
  5912                           
  5913                           ;FRAME.c: 408:     NVMRead(&NeightAdress3,7,2);
  5914  000DE0  0E23               	movlw	low _NeightAdress3
  5915  000DE2  6E2C               	movwf	NVMRead@dest,c
  5916  000DE4  0E00               	movlw	high _NeightAdress3
  5917  000DE6  6E2D               	movwf	NVMRead@dest+1,c
  5918  000DE8  0E00               	movlw	0
  5919  000DEA  6E2F               	movwf	NVMRead@addr+1,c
  5920  000DEC  0E07               	movlw	7
  5921  000DEE  6E2E               	movwf	NVMRead@addr,c
  5922  000DF0  0E00               	movlw	0
  5923  000DF2  6E31               	movwf	NVMRead@count+1,c
  5924  000DF4  0E02               	movlw	2
  5925  000DF6  6E30               	movwf	NVMRead@count,c
  5926  000DF8  EC2F  F00C         	call	_NVMRead	;wreg free
  5927                           
  5928                           ;FRAME.c: 409:     NVMRead(&NeightAdress4,10,2);
  5929  000DFC  0E21               	movlw	low _NeightAdress4
  5930  000DFE  6E2C               	movwf	NVMRead@dest,c
  5931  000E00  0E00               	movlw	high _NeightAdress4
  5932  000E02  6E2D               	movwf	NVMRead@dest+1,c
  5933  000E04  0E00               	movlw	0
  5934  000E06  6E2F               	movwf	NVMRead@addr+1,c
  5935  000E08  0E0A               	movlw	10
  5936  000E0A  6E2E               	movwf	NVMRead@addr,c
  5937  000E0C  0E00               	movlw	0
  5938  000E0E  6E31               	movwf	NVMRead@count+1,c
  5939  000E10  0E02               	movlw	2
  5940  000E12  6E30               	movwf	NVMRead@count,c
  5941  000E14  EC2F  F00C         	call	_NVMRead	;wreg free
  5942                           
  5943                           ;FRAME.c: 410:     NVMRead(&NeightAdress5,13,2);
  5944  000E18  0E1F               	movlw	low _NeightAdress5
  5945  000E1A  6E2C               	movwf	NVMRead@dest,c
  5946  000E1C  0E00               	movlw	high _NeightAdress5
  5947  000E1E  6E2D               	movwf	NVMRead@dest+1,c
  5948  000E20  0E00               	movlw	0
  5949  000E22  6E2F               	movwf	NVMRead@addr+1,c
  5950  000E24  0E0D               	movlw	13
  5951  000E26  6E2E               	movwf	NVMRead@addr,c
  5952  000E28  0E00               	movlw	0
  5953  000E2A  6E31               	movwf	NVMRead@count+1,c
  5954  000E2C  0E02               	movlw	2
  5955  000E2E  6E30               	movwf	NVMRead@count,c
  5956  000E30  EC2F  F00C         	call	_NVMRead	;wreg free
  5957                           
  5958                           ;FRAME.c: 411:     NVMRead(&NeightAdress6,16,2);
  5959  000E34  0E1D               	movlw	low _NeightAdress6
  5960  000E36  6E2C               	movwf	NVMRead@dest,c
  5961  000E38  0E00               	movlw	high _NeightAdress6
  5962  000E3A  6E2D               	movwf	NVMRead@dest+1,c
  5963  000E3C  0E00               	movlw	0
  5964  000E3E  6E2F               	movwf	NVMRead@addr+1,c
  5965  000E40  0E10               	movlw	16
  5966  000E42  6E2E               	movwf	NVMRead@addr,c
  5967  000E44  0E00               	movlw	0
  5968  000E46  6E31               	movwf	NVMRead@count+1,c
  5969  000E48  0E02               	movlw	2
  5970  000E4A  6E30               	movwf	NVMRead@count,c
  5971  000E4C  EC2F  F00C         	call	_NVMRead	;wreg free
  5972                           
  5973                           ;FRAME.c: 412:     NVMRead(&NeightAdress7,19,2);
  5974  000E50  0E1B               	movlw	low _NeightAdress7
  5975  000E52  6E2C               	movwf	NVMRead@dest,c
  5976  000E54  0E00               	movlw	high _NeightAdress7
  5977  000E56  6E2D               	movwf	NVMRead@dest+1,c
  5978  000E58  0E00               	movlw	0
  5979  000E5A  6E2F               	movwf	NVMRead@addr+1,c
  5980  000E5C  0E13               	movlw	19
  5981  000E5E  6E2E               	movwf	NVMRead@addr,c
  5982  000E60  0E00               	movlw	0
  5983  000E62  6E31               	movwf	NVMRead@count+1,c
  5984  000E64  0E02               	movlw	2
  5985  000E66  6E30               	movwf	NVMRead@count,c
  5986  000E68  EC2F  F00C         	call	_NVMRead	;wreg free
  5987                           
  5988                           ;FRAME.c: 413:     NVMRead(&NeightAdress8,22,2);
  5989  000E6C  0E19               	movlw	low _NeightAdress8
  5990  000E6E  6E2C               	movwf	NVMRead@dest,c
  5991  000E70  0E00               	movlw	high _NeightAdress8
  5992  000E72  6E2D               	movwf	NVMRead@dest+1,c
  5993  000E74  0E00               	movlw	0
  5994  000E76  6E2F               	movwf	NVMRead@addr+1,c
  5995  000E78  0E16               	movlw	22
  5996  000E7A  6E2E               	movwf	NVMRead@addr,c
  5997  000E7C  0E00               	movlw	0
  5998  000E7E  6E31               	movwf	NVMRead@count+1,c
  5999  000E80  0E02               	movlw	2
  6000  000E82  6E30               	movwf	NVMRead@count,c
  6001  000E84  EC2F  F00C         	call	_NVMRead	;wreg free
  6002  000E88  0012               	return		;funcret
  6003  000E8A                     __end_of_ReadDataToEEPROM:
  6004                           	opt callstack 0
  6005                           
  6006 ;; *************** function _NVMRead *****************
  6007 ;; Defined at:
  6008 ;;		line 79 in file "EEPROM.c"
  6009 ;; Parameters:    Size  Location     Type
  6010 ;;  dest            2    7[COMRAM] PTR unsigned char 
  6011 ;;		 -> NeightAdress8(2), NeightAdress7(2), NeightAdress6(2), NeightAdress5(2), 
  6012 ;;		 -> NeightAdress4(2), NeightAdress3(2), NeightAdress2(2), NeightAdress1(2), 
  6013 ;;  addr            2    9[COMRAM] unsigned short 
  6014 ;;  count           2   11[COMRAM] unsigned short 
  6015 ;; Auto vars:     Size  Location     Type
  6016 ;;		None
  6017 ;; Return value:  Size  Location     Type
  6018 ;;                  1    wreg      void 
  6019 ;; Registers used:
  6020 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6021 ;; Tracked objects:
  6022 ;;		On entry : 0/0
  6023 ;;		On exit  : 0/0
  6024 ;;		Unchanged: 0/0
  6025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6026 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6029 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6030 ;;Total ram usage:        6 bytes
  6031 ;; Hardware stack levels used:    1
  6032 ;; Hardware stack levels required when called:    4
  6033 ;; This function calls:
  6034 ;;		_ReadfromEEPROM
  6035 ;; This function is called by:
  6036 ;;		_ReadDataToEEPROM
  6037 ;; This function uses a non-reentrant model
  6038 ;;
  6039                           
  6040                           	psect	text46
  6041  00185E                     __ptext46:
  6042                           	opt callstack 0
  6043  00185E                     _NVMRead:
  6044                           	opt callstack 24
  6045                           
  6046                           ;EEPROM.c: 79: void NVMRead(BYTE *dest, WORD addr, WORD count);EEPROM.c: 80: {;EEPROM.c:
      +                           81:     while( count > 0 )
  6047                           
  6048                           ;incstack = 0
  6049  00185E  D014               	goto	l3257
  6050  001860                     l920:
  6051  001860  B2A6               	btfsc	4006,1,c	;volsfr
  6052  001862  D7FE               	goto	l920
  6053                           
  6054                           ;EEPROM.c: 84:         *dest++ = ReadfromEEPROM(addr++);
  6055  001864  C02E  F02A         	movff	NVMRead@addr,ReadfromEEPROM@Address
  6056  001868  C02F  F02B         	movff	NVMRead@addr+1,ReadfromEEPROM@Address+1
  6057  00186C  ECF2  F00C         	call	_ReadfromEEPROM	;wreg free
  6058  001870  C02C  FFD9         	movff	NVMRead@dest,fsr2l
  6059  001874  C02D  FFDA         	movff	NVMRead@dest+1,fsr2h
  6060  001878  6EDF               	movwf	indf2,c
  6061  00187A  4A2E               	infsnz	NVMRead@addr,f,c
  6062  00187C  2A2F               	incf	NVMRead@addr+1,f,c
  6063  00187E  4A2C               	infsnz	NVMRead@dest,f,c
  6064  001880  2A2D               	incf	NVMRead@dest+1,f,c
  6065                           
  6066                           ;EEPROM.c: 85:         count--;
  6067  001882  0630               	decf	NVMRead@count,f,c
  6068  001884  A0D8               	btfss	status,0,c
  6069  001886  0631               	decf	NVMRead@count+1,f,c
  6070  001888                     l3257:
  6071                           
  6072                           ;EEPROM.c: 81:     while( count > 0 )
  6073  001888  5030               	movf	NVMRead@count,w,c
  6074  00188A  1031               	iorwf	NVMRead@count+1,w,c
  6075  00188C  B4D8               	btfsc	status,2,c
  6076  00188E  0012               	return	
  6077  001890  D7E7               	goto	l920
  6078  001892                     __end_of_NVMRead:
  6079                           	opt callstack 0
  6080                           
  6081 ;; *************** function _ReadfromEEPROM *****************
  6082 ;; Defined at:
  6083 ;;		line 45 in file "EEPROM.c"
  6084 ;; Parameters:    Size  Location     Type
  6085 ;;  Address         2    5[COMRAM] unsigned short 
  6086 ;; Auto vars:     Size  Location     Type
  6087 ;;		None
  6088 ;; Return value:  Size  Location     Type
  6089 ;;                  1    wreg      unsigned char 
  6090 ;; Registers used:
  6091 ;;		wreg, status,2
  6092 ;; Tracked objects:
  6093 ;;		On entry : 0/0
  6094 ;;		On exit  : 0/0
  6095 ;;		Unchanged: 0/0
  6096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6097 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6100 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6101 ;;Total ram usage:        2 bytes
  6102 ;; Hardware stack levels used:    1
  6103 ;; Hardware stack levels required when called:    3
  6104 ;; This function calls:
  6105 ;;		Nothing
  6106 ;; This function is called by:
  6107 ;;		_NVMRead
  6108 ;; This function uses a non-reentrant model
  6109 ;;
  6110                           
  6111                           	psect	text47
  6112  0019E4                     __ptext47:
  6113                           	opt callstack 0
  6114  0019E4                     _ReadfromEEPROM:
  6115                           	opt callstack 24
  6116                           
  6117                           ;EEPROM.c: 45: static BYTE ReadfromEEPROM(WORD Address);EEPROM.c: 46: {;EEPROM.c: 47:   
      +                            EEADRH = (BYTE)(Address>>8);
  6118                           
  6119                           ;incstack = 0
  6120  0019E4  502B               	movf	ReadfromEEPROM@Address+1,w,c
  6121  0019E6  6EAA               	movwf	4010,c	;volatile
  6122                           
  6123                           ;EEPROM.c: 48:     EEADR = (BYTE)Address;
  6124  0019E8  C02A  FFA9         	movff	ReadfromEEPROM@Address,4009	;volatile
  6125                           
  6126                           ;EEPROM.c: 49:     EECON1bits.RD = 1;
  6127  0019EC  80A6               	bsf	4006,0,c	;volsfr
  6128                           
  6129                           ;EEPROM.c: 50:     EECON1bits.EEPGD = 0;
  6130  0019EE  9EA6               	bcf	4006,7,c	;volsfr
  6131                           
  6132                           ;EEPROM.c: 51:     EECON1bits.CFGS = 0;
  6133  0019F0  9CA6               	bcf	4006,6,c	;volsfr
  6134                           
  6135                           ;EEPROM.c: 52:     return EEDATA;
  6136  0019F2  50A8               	movf	4008,w,c	;volatile
  6137  0019F4  0012               	return		;funcret
  6138  0019F6                     __end_of_ReadfromEEPROM:
  6139                           	opt callstack 0
  6140                           
  6141 ;; *************** function _NVMInit *****************
  6142 ;; Defined at:
  6143 ;;		line 26 in file "EEPROM.c"
  6144 ;; Parameters:    Size  Location     Type
  6145 ;;		None
  6146 ;; Auto vars:     Size  Location     Type
  6147 ;;  result          1   11[COMRAM] enum E10433
  6148 ;; Return value:  Size  Location     Type
  6149 ;;                  1    wreg      enum E10433
  6150 ;; Registers used:
  6151 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6152 ;; Tracked objects:
  6153 ;;		On entry : 0/0
  6154 ;;		On exit  : 0/0
  6155 ;;		Unchanged: 0/0
  6156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6158 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6160 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6161 ;;Total ram usage:        1 bytes
  6162 ;; Hardware stack levels used:    1
  6163 ;; Hardware stack levels required when called:    4
  6164 ;; This function calls:
  6165 ;;		_NVMalloc
  6166 ;; This function is called by:
  6167 ;;		_INI_All
  6168 ;; This function uses a non-reentrant model
  6169 ;;
  6170                           
  6171                           	psect	text48
  6172  0016E2                     __ptext48:
  6173                           	opt callstack 0
  6174  0016E2                     _NVMInit:
  6175                           	opt callstack 25
  6176                           
  6177                           ;EEPROM.c: 28:     BOOL result = TRUE;
  6178                           
  6179                           ;incstack = 0
  6180  0016E2  0E01               	movlw	1
  6181  0016E4  6E30               	movwf	NVMInit@result,c
  6182                           
  6183                           ;EEPROM.c: 30:     nextEEPosition = 0;
  6184  0016E6  0E00               	movlw	0
  6185  0016E8  6E06               	movwf	_nextEEPosition+1,c
  6186  0016EA  0E00               	movlw	0
  6187  0016EC  6E05               	movwf	_nextEEPosition,c
  6188                           
  6189                           ;EEPROM.c: 32:     result &= NVMalloc(sizeof(KartaStruct), &ustawieniaKarty);
  6190  0016EE  0E00               	movlw	0
  6191  0016F0  6E2B               	movwf	NVMalloc@size+1,c
  6192  0016F2  0E03               	movlw	3
  6193  0016F4  6E2A               	movwf	NVMalloc@size,c
  6194  0016F6  0E17               	movlw	low _ustawieniaKarty
  6195  0016F8  6E2C               	movwf	NVMalloc@location,c
  6196  0016FA  0E00               	movlw	high _ustawieniaKarty
  6197  0016FC  6E2D               	movwf	NVMalloc@location+1,c
  6198  0016FE  ECFA  F00B         	call	_NVMalloc	;wreg free
  6199  001702  1630               	andwf	NVMInit@result,f,c
  6200                           
  6201                           ;EEPROM.c: 33:     result &= NVMalloc(8*sizeof(NeightAdress1), &neighborsAdress);
  6202  001704  0E00               	movlw	0
  6203  001706  6E2B               	movwf	NVMalloc@size+1,c
  6204  001708  0E10               	movlw	16
  6205  00170A  6E2A               	movwf	NVMalloc@size,c
  6206  00170C  0E15               	movlw	low _neighborsAdress
  6207  00170E  6E2C               	movwf	NVMalloc@location,c
  6208  001710  0E00               	movlw	high _neighborsAdress
  6209  001712  6E2D               	movwf	NVMalloc@location+1,c
  6210  001714  ECFA  F00B         	call	_NVMalloc	;wreg free
  6211  001718  1630               	andwf	NVMInit@result,f,c
  6212  00171A  0012               	return		;funcret
  6213  00171C                     __end_of_NVMInit:
  6214                           	opt callstack 0
  6215                           
  6216 ;; *************** function _NVMalloc *****************
  6217 ;; Defined at:
  6218 ;;		line 11 in file "EEPROM.c"
  6219 ;; Parameters:    Size  Location     Type
  6220 ;;  size            2    5[COMRAM] unsigned short 
  6221 ;;  location        2    7[COMRAM] PTR unsigned short 
  6222 ;;		 -> neighborsAdress(2), ustawieniaKarty(2), 
  6223 ;; Auto vars:     Size  Location     Type
  6224 ;;		None
  6225 ;; Return value:  Size  Location     Type
  6226 ;;                  1    wreg      enum E10433
  6227 ;; Registers used:
  6228 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6229 ;; Tracked objects:
  6230 ;;		On entry : 0/0
  6231 ;;		On exit  : 0/0
  6232 ;;		Unchanged: 0/0
  6233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6234 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6236 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6237 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6238 ;;Total ram usage:        6 bytes
  6239 ;; Hardware stack levels used:    1
  6240 ;; Hardware stack levels required when called:    3
  6241 ;; This function calls:
  6242 ;;		Nothing
  6243 ;; This function is called by:
  6244 ;;		_NVMInit
  6245 ;; This function uses a non-reentrant model
  6246 ;;
  6247                           
  6248                           	psect	text49
  6249  0017F4                     __ptext49:
  6250                           	opt callstack 0
  6251  0017F4                     _NVMalloc:
  6252                           	opt callstack 25
  6253                           
  6254                           ;EEPROM.c: 11: BOOL NVMalloc(WORD size, WORD *location);EEPROM.c: 12: {;EEPROM.c: 15:   
      +                            if ((nextEEPosition + (WORD)size) > (WORD)0x400)
  6255                           
  6256                           ;incstack = 0
  6257  0017F4  502A               	movf	NVMalloc@size,w,c
  6258  0017F6  2405               	addwf	_nextEEPosition,w,c
  6259  0017F8  6E2E               	movwf	??_NVMalloc& (0+255),c
  6260  0017FA  502B               	movf	NVMalloc@size+1,w,c
  6261  0017FC  2006               	addwfc	_nextEEPosition+1,w,c
  6262  0017FE  6E2F               	movwf	(??_NVMalloc+1)& (0+255),c
  6263  001800  042E               	decf	??_NVMalloc,w,c
  6264  001802  0E04               	movlw	4
  6265  001804  582F               	subwfb	??_NVMalloc+1,w,c
  6266  001806  A0D8               	btfss	status,0,c
  6267  001808  D002               	goto	l3303
  6268                           
  6269                           ;EEPROM.c: 16:     {;EEPROM.c: 17:         return FALSE;
  6270  00180A  0E00               	movlw	0
  6271  00180C  0012               	return	
  6272  00180E                     l3303:
  6273                           
  6274                           ;EEPROM.c: 20:     *location = nextEEPosition;
  6275  00180E  C02C  FFD9         	movff	NVMalloc@location,fsr2l
  6276  001812  C02D  FFDA         	movff	NVMalloc@location+1,fsr2h
  6277  001816  C005  FFDE         	movff	_nextEEPosition,postinc2
  6278  00181A  C006  FFDD         	movff	_nextEEPosition+1,postdec2
  6279                           
  6280                           ;EEPROM.c: 21:     nextEEPosition += size;
  6281  00181E  502A               	movf	NVMalloc@size,w,c
  6282  001820  2605               	addwf	_nextEEPosition,f,c
  6283  001822  502B               	movf	NVMalloc@size+1,w,c
  6284  001824  2206               	addwfc	_nextEEPosition+1,f,c
  6285                           
  6286                           ;EEPROM.c: 22:     return TRUE;
  6287  001826  0E01               	movlw	1
  6288  001828  0012               	return		;funcret
  6289  00182A                     __end_of_NVMalloc:
  6290                           	opt callstack 0
  6291                           
  6292 ;; *************** function _INI_Timer *****************
  6293 ;; Defined at:
  6294 ;;		line 92 in file "TMR1.c"
  6295 ;; Parameters:    Size  Location     Type
  6296 ;;		None
  6297 ;; Auto vars:     Size  Location     Type
  6298 ;;		None
  6299 ;; Return value:  Size  Location     Type
  6300 ;;                  1    wreg      unsigned char 
  6301 ;; Registers used:
  6302 ;;		wreg, status,2
  6303 ;; Tracked objects:
  6304 ;;		On entry : 0/0
  6305 ;;		On exit  : 0/0
  6306 ;;		Unchanged: 0/0
  6307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6312 ;;Total ram usage:        0 bytes
  6313 ;; Hardware stack levels used:    1
  6314 ;; Hardware stack levels required when called:    3
  6315 ;; This function calls:
  6316 ;;		Nothing
  6317 ;; This function is called by:
  6318 ;;		_INI_All
  6319 ;; This function uses a non-reentrant model
  6320 ;;
  6321                           
  6322                           	psect	text50
  6323  0019CC                     __ptext50:
  6324                           	opt callstack 0
  6325  0019CC                     _INI_Timer:
  6326                           	opt callstack 26
  6327                           
  6328                           ;TMR1.c: 96:     IRCF2 = 1;
  6329                           
  6330                           ;incstack = 0
  6331  0019CC  8CD3               	bsf	4051,6,c	;volatile
  6332                           
  6333                           ;TMR1.c: 97:     IRCF1 = 1;
  6334  0019CE  8AD3               	bsf	4051,5,c	;volatile
  6335                           
  6336                           ;TMR1.c: 98:     IRCF0 = 1;
  6337  0019D0  88D3               	bsf	4051,4,c	;volatile
  6338                           
  6339                           ;TMR1.c: 99:     T1CON = 0b00111101;
  6340  0019D2  0E3D               	movlw	61
  6341  0019D4  6ECD               	movwf	4045,c	;volatile
  6342                           
  6343                           ;TMR1.c: 100:     TMR1H= (UINT8)((0xFFFF - (((8000000/8)/4)/10)) >> 8);
  6344  0019D6  0E9E               	movlw	158
  6345  0019D8  6ECF               	movwf	4047,c	;volatile
  6346                           
  6347                           ;TMR1.c: 101:     TMR1L=(UINT8)((0xFFFF - (((8000000/8)/4)/10)) & 0xFF);
  6348  0019DA  0E57               	movlw	87
  6349  0019DC  6ECE               	movwf	4046,c	;volatile
  6350                           
  6351                           ;TMR1.c: 102:     TMR1IE=1;
  6352  0019DE  809D               	bsf	3997,0,c	;volatile
  6353                           
  6354                           ;TMR1.c: 103:     TMR1ON = 1;
  6355  0019E0  80CD               	bsf	4045,0,c	;volatile
  6356  0019E2  0012               	return		;funcret
  6357  0019E4                     __end_of_INI_Timer:
  6358                           	opt callstack 0
  6359                           
  6360 ;; *************** function _INI_OUTPUT *****************
  6361 ;; Defined at:
  6362 ;;		line 29 in file "INI.c"
  6363 ;; Parameters:    Size  Location     Type
  6364 ;;		None
  6365 ;; Auto vars:     Size  Location     Type
  6366 ;;		None
  6367 ;; Return value:  Size  Location     Type
  6368 ;;                  1    wreg      void 
  6369 ;; Registers used:
  6370 ;;		wreg, status,2
  6371 ;; Tracked objects:
  6372 ;;		On entry : 0/0
  6373 ;;		On exit  : 0/0
  6374 ;;		Unchanged: 0/0
  6375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6380 ;;Total ram usage:        0 bytes
  6381 ;; Hardware stack levels used:    1
  6382 ;; Hardware stack levels required when called:    3
  6383 ;; This function calls:
  6384 ;;		Nothing
  6385 ;; This function is called by:
  6386 ;;		_INI_All
  6387 ;; This function uses a non-reentrant model
  6388 ;;
  6389                           
  6390                           	psect	text51
  6391  00198E                     __ptext51:
  6392                           	opt callstack 0
  6393  00198E                     _INI_OUTPUT:
  6394                           	opt callstack 26
  6395                           
  6396                           ;INI.c: 33:     LATA = 0;
  6397                           
  6398                           ;incstack = 0
  6399  00198E  0E00               	movlw	0
  6400  001990  6E89               	movwf	3977,c	;volatile
  6401                           
  6402                           ;INI.c: 34:     LATB = 0;
  6403  001992  0E00               	movlw	0
  6404  001994  6E8A               	movwf	3978,c	;volatile
  6405                           
  6406                           ;INI.c: 35:     LATC = 0;
  6407  001996  0E00               	movlw	0
  6408  001998  6E8B               	movwf	3979,c	;volatile
  6409                           
  6410                           ;INI.c: 36:     TRISA = 0x0C;
  6411  00199A  0E0C               	movlw	12
  6412  00199C  6E92               	movwf	3986,c	;volatile
  6413                           
  6414                           ;INI.c: 37:     TRISB = 0b10001000;
  6415  00199E  0E88               	movlw	136
  6416  0019A0  6E93               	movwf	3987,c	;volatile
  6417                           
  6418                           ;INI.c: 38:     TRISC = 0xBF;
  6419  0019A2  0EBF               	movlw	191
  6420  0019A4  6E94               	movwf	3988,c	;volatile
  6421                           
  6422                           ;INI.c: 39:     RCONbits.IPEN = 1;
  6423  0019A6  8ED0               	bsf	4048,7,c	;volatile
  6424                           
  6425                           ;INI.c: 42:     DetectorLedRadar.Flags.inicjalizacja = 1;
  6426  0019A8  0100               	movlb	0	; () banked
  6427  0019AA  87CB               	bsf	_DetectorLedRadar& (0+255),3,b
  6428                           
  6429                           ; BSR set to: 0
  6430  0019AC  0012               	return		;funcret
  6431  0019AE                     __end_of_INI_OUTPUT:
  6432                           	opt callstack 0
  6433                           
  6434 ;; *************** function _INI_LED_Start *****************
  6435 ;; Defined at:
  6436 ;;		line 231 in file "LED.c"
  6437 ;; Parameters:    Size  Location     Type
  6438 ;;		None
  6439 ;; Auto vars:     Size  Location     Type
  6440 ;;		None
  6441 ;; Return value:  Size  Location     Type
  6442 ;;                  1    wreg      void 
  6443 ;; Registers used:
  6444 ;;		wreg, status,2, status,0, cstack
  6445 ;; Tracked objects:
  6446 ;;		On entry : 0/0
  6447 ;;		On exit  : 0/0
  6448 ;;		Unchanged: 0/0
  6449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6453 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6454 ;;Total ram usage:        0 bytes
  6455 ;; Hardware stack levels used:    1
  6456 ;; Hardware stack levels required when called:    4
  6457 ;; This function calls:
  6458 ;;		_LED_Control
  6459 ;; This function is called by:
  6460 ;;		_INI_All
  6461 ;; This function uses a non-reentrant model
  6462 ;;
  6463                           
  6464                           	psect	text52
  6465  001892                     __ptext52:
  6466                           	opt callstack 0
  6467  001892                     _INI_LED_Start:
  6468                           	opt callstack 25
  6469                           
  6470                           ;LED.c: 233:     TRISA = TRISA & 0b00000001;
  6471                           
  6472                           ; BSR set to: 0
  6473                           ;incstack = 0
  6474  001892  5092               	movf	3986,w,c	;volatile
  6475  001894  0B01               	andlw	1
  6476  001896  6E92               	movwf	3986,c	;volatile
  6477                           
  6478                           ;LED.c: 234:     TRISB = TRISB & 0b11111100;
  6479  001898  5093               	movf	3987,w,c	;volatile
  6480  00189A  0BFC               	andlw	252
  6481  00189C  6E93               	movwf	3987,c	;volatile
  6482                           
  6483                           ;LED.c: 235:     TRISE = TRISE & 0b11111000;
  6484  00189E  5096               	movf	3990,w,c	;volatile
  6485  0018A0  0BF8               	andlw	248
  6486  0018A2  6E96               	movwf	3990,c	;volatile
  6487                           
  6488                           ;LED.c: 236:     TRISD = TRISD & 0b00000000;
  6489  0018A4  0E00               	movlw	0
  6490  0018A6  6E95               	movwf	3989,c	;volatile
  6491                           
  6492                           ;LED.c: 237:     LED_Control(RED,0b0000000000);
  6493  0018A8  0E00               	movlw	0
  6494  0018AA  6E2B               	movwf	LED_Control@diode+1,c
  6495  0018AC  0E00               	movlw	0
  6496  0018AE  6E2A               	movwf	LED_Control@diode,c
  6497  0018B0  0E00               	movlw	0
  6498  0018B2  EC91  F004         	call	_LED_Control
  6499                           
  6500                           ;LED.c: 238:     LED_Control(GREEN,0b0000000000);
  6501  0018B6  0E00               	movlw	0
  6502  0018B8  6E2B               	movwf	LED_Control@diode+1,c
  6503  0018BA  0E00               	movlw	0
  6504  0018BC  6E2A               	movwf	LED_Control@diode,c
  6505  0018BE  0E01               	movlw	1
  6506  0018C0  EC91  F004         	call	_LED_Control
  6507  0018C4  0012               	return		;funcret
  6508  0018C6                     __end_of_INI_LED_Start:
  6509                           	opt callstack 0
  6510                           
  6511 ;; *************** function _LED_Control *****************
  6512 ;; Defined at:
  6513 ;;		line 256 in file "LED.c"
  6514 ;; Parameters:    Size  Location     Type
  6515 ;;  color           1    wreg     enum E10644
  6516 ;;  diode           2    5[COMRAM] unsigned int 
  6517 ;; Auto vars:     Size  Location     Type
  6518 ;;  color           1    9[COMRAM] enum E10644
  6519 ;;  cos             2    0        unsigned int 
  6520 ;; Return value:  Size  Location     Type
  6521 ;;                  1    wreg      unsigned char 
  6522 ;; Registers used:
  6523 ;;		wreg, status,2, status,0
  6524 ;; Tracked objects:
  6525 ;;		On entry : 0/0
  6526 ;;		On exit  : 0/0
  6527 ;;		Unchanged: 0/0
  6528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6529 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6530 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6532 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6533 ;;Total ram usage:        5 bytes
  6534 ;; Hardware stack levels used:    1
  6535 ;; Hardware stack levels required when called:    3
  6536 ;; This function calls:
  6537 ;;		Nothing
  6538 ;; This function is called by:
  6539 ;;		_LED_Error
  6540 ;;		_LED_Update
  6541 ;;		_LED_Light_Pos
  6542 ;;		_INI_LED_Start
  6543 ;;		_LED_Clear
  6544 ;; This function uses a non-reentrant model
  6545 ;;
  6546                           
  6547                           	psect	text53
  6548  000922                     __ptext53:
  6549                           	opt callstack 0
  6550  000922                     _LED_Control:
  6551                           	opt callstack 24
  6552                           
  6553                           ;incstack = 0
  6554                           ;LED_Control@color stored from wreg
  6555  000922  6E2E               	movwf	LED_Control@color,c
  6556                           
  6557                           ;LED.c: 259:     if(color == RED)
  6558  000924  502E               	movf	LED_Control@color,w,c
  6559  000926  A4D8               	btfss	status,2,c
  6560  000928  D050               	goto	l412
  6561                           
  6562                           ;LED.c: 260:     {;LED.c: 262:         if((diode & 0b0000000001)== 0b0000000001)
  6563  00092A  A02A               	btfss	LED_Control@diode,0,c
  6564  00092C  D003               	goto	l3849
  6565                           
  6566                           ;LED.c: 263:         {;LED.c: 264:             LATD = LATD | ~0b11101111;
  6567  00092E  508C               	movf	3980,w,c	;volatile
  6568  000930  0910               	iorlw	16
  6569  000932  D002               	goto	L4
  6570  000934                     l3849:
  6571                           
  6572                           ;LED.c: 267:         {;LED.c: 268:             LATD = LATD &0b11101111;
  6573  000934  508C               	movf	3980,w,c	;volatile
  6574  000936  0BEF               	andlw	239
  6575  000938                     L4:
  6576  000938  6E8C               	movwf	3980,c	;volatile
  6577                           
  6578                           ;LED.c: 271:         if((diode & 0b0000000010) == 0b0000000010)
  6579  00093A  A22A               	btfss	LED_Control@diode,1,c
  6580  00093C  D003               	goto	l3855
  6581                           
  6582                           ;LED.c: 272:         {;LED.c: 273:             LATD = LATD | ~0b10111111;
  6583  00093E  508C               	movf	3980,w,c	;volatile
  6584  000940  0940               	iorlw	64
  6585  000942  D002               	goto	L5
  6586  000944                     l3855:
  6587                           
  6588                           ;LED.c: 276:         {;LED.c: 277:             LATD = LATD & 0b10111111;
  6589  000944  508C               	movf	3980,w,c	;volatile
  6590  000946  0BBF               	andlw	191
  6591  000948                     L5:
  6592  000948  6E8C               	movwf	3980,c	;volatile
  6593                           
  6594                           ;LED.c: 280:         if((diode & 0b0000000100) == 0b0000000100)
  6595  00094A  A42A               	btfss	LED_Control@diode,2,c
  6596  00094C  D003               	goto	l3861
  6597                           
  6598                           ;LED.c: 281:         {;LED.c: 282:             LATB = LATB | ~0b11111110;
  6599  00094E  508A               	movf	3978,w,c	;volatile
  6600  000950  0901               	iorlw	1
  6601  000952  D002               	goto	L6
  6602  000954                     l3861:
  6603                           
  6604                           ;LED.c: 285:         {;LED.c: 286:             LATB = LATB & 0b11111110;
  6605  000954  508A               	movf	3978,w,c	;volatile
  6606  000956  0BFE               	andlw	254
  6607  000958                     L6:
  6608  000958  6E8A               	movwf	3978,c	;volatile
  6609                           
  6610                           ;LED.c: 290:         if((diode & 0b0000001000) == 0b0000001000)
  6611  00095A  A62A               	btfss	LED_Control@diode,3,c
  6612  00095C  D003               	goto	l3867
  6613                           
  6614                           ;LED.c: 291:         {;LED.c: 292:             LATA = LATA | ~0b11111101;
  6615  00095E  5089               	movf	3977,w,c	;volatile
  6616  000960  0902               	iorlw	2
  6617  000962  D002               	goto	L7
  6618  000964                     l3867:
  6619                           
  6620                           ;LED.c: 295:         {;LED.c: 296:             LATA = LATA & 0b11111101;
  6621  000964  5089               	movf	3977,w,c	;volatile
  6622  000966  0BFD               	andlw	253
  6623  000968                     L7:
  6624  000968  6E89               	movwf	3977,c	;volatile
  6625                           
  6626                           ;LED.c: 300:         if((diode & 0b0000010000) == 0b0000010000)
  6627  00096A  A82A               	btfss	LED_Control@diode,4,c
  6628  00096C  D003               	goto	l3873
  6629                           
  6630                           ;LED.c: 301:         {;LED.c: 302:             LATA = LATA | ~0b11110111;
  6631  00096E  5089               	movf	3977,w,c	;volatile
  6632  000970  0908               	iorlw	8
  6633  000972  D002               	goto	L8
  6634  000974                     l3873:
  6635                           
  6636                           ;LED.c: 305:         {;LED.c: 306:             LATA = LATA & 0b11110111;
  6637  000974  5089               	movf	3977,w,c	;volatile
  6638  000976  0BF7               	andlw	247
  6639  000978                     L8:
  6640  000978  6E89               	movwf	3977,c	;volatile
  6641                           
  6642                           ;LED.c: 310:         if((diode & 0b0000100000) == 0b0000100000)
  6643  00097A  AA2A               	btfss	LED_Control@diode,5,c
  6644  00097C  D003               	goto	l3879
  6645                           
  6646                           ;LED.c: 311:         {;LED.c: 312:             LATA = LATA | ~0b11011111;
  6647  00097E  5089               	movf	3977,w,c	;volatile
  6648  000980  0920               	iorlw	32
  6649  000982  D002               	goto	L9
  6650  000984                     l3879:
  6651                           
  6652                           ;LED.c: 315:         {;LED.c: 316:             LATA = LATA & 0b11011111;
  6653  000984  5089               	movf	3977,w,c	;volatile
  6654  000986  0BDF               	andlw	223
  6655  000988                     L9:
  6656  000988  6E89               	movwf	3977,c	;volatile
  6657                           
  6658                           ;LED.c: 319:         if((diode & 0b0001000000) == 0b0001000000)
  6659  00098A  AC2A               	btfss	LED_Control@diode,6,c
  6660  00098C  D003               	goto	l3885
  6661                           
  6662                           ;LED.c: 320:         {;LED.c: 321:             LATE = LATE | ~0b11111101;
  6663  00098E  508D               	movf	3981,w,c	;volatile
  6664  000990  0902               	iorlw	2
  6665  000992  D002               	goto	L10
  6666  000994                     l3885:
  6667                           
  6668                           ;LED.c: 324:         {;LED.c: 325:             LATE = LATE & 0b11111101;
  6669  000994  508D               	movf	3981,w,c	;volatile
  6670  000996  0BFD               	andlw	253
  6671  000998                     L10:
  6672  000998  6E8D               	movwf	3981,c	;volatile
  6673                           
  6674                           ;LED.c: 328:         if((diode & 0b0010000000) == 0b0010000000)
  6675  00099A  AE2A               	btfss	LED_Control@diode,7,c
  6676  00099C  D003               	goto	l3891
  6677                           
  6678                           ;LED.c: 329:         {;LED.c: 330:             LATA = LATA | ~0b01111111;
  6679  00099E  5089               	movf	3977,w,c	;volatile
  6680  0009A0  0980               	iorlw	128
  6681  0009A2  D002               	goto	L11
  6682  0009A4                     l3891:
  6683                           
  6684                           ;LED.c: 333:         {;LED.c: 334:             LATA = LATA & 0b01111111;
  6685  0009A4  5089               	movf	3977,w,c	;volatile
  6686  0009A6  0B7F               	andlw	127
  6687  0009A8                     L11:
  6688  0009A8  6E89               	movwf	3977,c	;volatile
  6689                           
  6690                           ;LED.c: 338:         if((diode & 0b0100000000) == 0b0100000000)
  6691  0009AA  A02B               	btfss	LED_Control@diode+1,0,c
  6692  0009AC  D003               	goto	l3897
  6693                           
  6694                           ;LED.c: 339:         {;LED.c: 340:             LATD = LATD | ~0b11111110;
  6695  0009AE  508C               	movf	3980,w,c	;volatile
  6696  0009B0  0901               	iorlw	1
  6697  0009B2  D002               	goto	L12
  6698  0009B4                     l3897:
  6699                           
  6700                           ;LED.c: 343:         {;LED.c: 344:             LATD = LATD & 0b11111110;
  6701  0009B4  508C               	movf	3980,w,c	;volatile
  6702  0009B6  0BFE               	andlw	254
  6703  0009B8                     L12:
  6704  0009B8  6E8C               	movwf	3980,c	;volatile
  6705                           
  6706                           ;LED.c: 347:         if((diode & 0b1000000000) == 0b1000000000)
  6707  0009BA  A22B               	btfss	LED_Control@diode+1,1,c
  6708  0009BC  D003               	goto	l3903
  6709                           
  6710                           ;LED.c: 348:         {;LED.c: 349:             LATD = LATD | ~0b11111011;
  6711  0009BE  508C               	movf	3980,w,c	;volatile
  6712  0009C0  0904               	iorlw	4
  6713  0009C2  D002               	goto	L13
  6714  0009C4                     l3903:
  6715                           
  6716                           ;LED.c: 352:         {;LED.c: 353:             LATD = LATD & 0b11111011;
  6717  0009C4  508C               	movf	3980,w,c	;volatile
  6718  0009C6  0BFB               	andlw	251
  6719  0009C8                     L13:
  6720  0009C8  6E8C               	movwf	3980,c	;volatile
  6721  0009CA                     l412:
  6722                           
  6723                           ;LED.c: 358:     if(color == GREEN)
  6724  0009CA  042E               	decf	LED_Control@color,w,c
  6725  0009CC  A4D8               	btfss	status,2,c
  6726  0009CE  0012               	return	
  6727                           
  6728                           ;LED.c: 359:     {;LED.c: 361:         if((diode & 0b0000000001) == 0b0000000001)
  6729  0009D0  A02A               	btfss	LED_Control@diode,0,c
  6730  0009D2  D003               	goto	l3909
  6731                           
  6732                           ;LED.c: 362:         {;LED.c: 363:             LATD = LATD | ~0b11011111;
  6733  0009D4  508C               	movf	3980,w,c	;volatile
  6734  0009D6  0920               	iorlw	32
  6735  0009D8  D002               	goto	L14
  6736  0009DA                     l3909:
  6737                           
  6738                           ;LED.c: 366:         {;LED.c: 367:             LATD = LATD & 0b11011111;
  6739  0009DA  508C               	movf	3980,w,c	;volatile
  6740  0009DC  0BDF               	andlw	223
  6741  0009DE                     L14:
  6742  0009DE  6E8C               	movwf	3980,c	;volatile
  6743                           
  6744                           ;LED.c: 371:         if((diode & 0b0000000010) == 0b0000000010)
  6745  0009E0  A22A               	btfss	LED_Control@diode,1,c
  6746  0009E2  D003               	goto	l3915
  6747                           
  6748                           ;LED.c: 372:         {;LED.c: 373:             LATD = LATD | ~0b01111111;
  6749  0009E4  508C               	movf	3980,w,c	;volatile
  6750  0009E6  0980               	iorlw	128
  6751  0009E8  D002               	goto	L15
  6752  0009EA                     l3915:
  6753                           
  6754                           ;LED.c: 376:         {;LED.c: 377:             LATD = LATD & 0b01111111;
  6755  0009EA  508C               	movf	3980,w,c	;volatile
  6756  0009EC  0B7F               	andlw	127
  6757  0009EE                     L15:
  6758  0009EE  6E8C               	movwf	3980,c	;volatile
  6759                           
  6760                           ;LED.c: 381:         if((diode & 0b0000000100) == 0b0000000100)
  6761  0009F0  A42A               	btfss	LED_Control@diode,2,c
  6762  0009F2  D003               	goto	l3921
  6763                           
  6764                           ;LED.c: 382:         {;LED.c: 383:             LATB = LATB | ~0b11111101;
  6765  0009F4  508A               	movf	3978,w,c	;volatile
  6766  0009F6  0902               	iorlw	2
  6767  0009F8  D002               	goto	L16
  6768  0009FA                     l3921:
  6769                           
  6770                           ;LED.c: 386:         {;LED.c: 387:             LATB = LATB & 0b11111101;
  6771  0009FA  508A               	movf	3978,w,c	;volatile
  6772  0009FC  0BFD               	andlw	253
  6773  0009FE                     L16:
  6774  0009FE  6E8A               	movwf	3978,c	;volatile
  6775                           
  6776                           ;LED.c: 390:         if((diode & 0b0000001000) == 0b0000001000)
  6777  000A00  A62A               	btfss	LED_Control@diode,3,c
  6778  000A02  D003               	goto	l3927
  6779                           
  6780                           ;LED.c: 391:         {;LED.c: 392:             LATA = LATA | ~0b11111011;
  6781  000A04  5089               	movf	3977,w,c	;volatile
  6782  000A06  0904               	iorlw	4
  6783  000A08  D002               	goto	L17
  6784  000A0A                     l3927:
  6785                           
  6786                           ;LED.c: 395:         {;LED.c: 396:             LATA = LATA & 0b11111011;
  6787  000A0A  5089               	movf	3977,w,c	;volatile
  6788  000A0C  0BFB               	andlw	251
  6789  000A0E                     L17:
  6790  000A0E  6E89               	movwf	3977,c	;volatile
  6791                           
  6792                           ;LED.c: 400:         if((diode & 0b0000010000) == 0b0000010000)
  6793  000A10  A82A               	btfss	LED_Control@diode,4,c
  6794  000A12  D003               	goto	l3933
  6795                           
  6796                           ;LED.c: 401:         {;LED.c: 402:             LATA = LATA | ~0b11101111;
  6797  000A14  5089               	movf	3977,w,c	;volatile
  6798  000A16  0910               	iorlw	16
  6799  000A18  D002               	goto	L18
  6800  000A1A                     l3933:
  6801                           
  6802                           ;LED.c: 405:         {;LED.c: 406:             LATA = LATA & 0b11101111;
  6803  000A1A  5089               	movf	3977,w,c	;volatile
  6804  000A1C  0BEF               	andlw	239
  6805  000A1E                     L18:
  6806  000A1E  6E89               	movwf	3977,c	;volatile
  6807                           
  6808                           ;LED.c: 410:         if((diode & 0b0000100000) == 0b0000100000)
  6809  000A20  AA2A               	btfss	LED_Control@diode,5,c
  6810  000A22  D003               	goto	l3939
  6811                           
  6812                           ;LED.c: 411:         {;LED.c: 412:             LATE = LATE | ~0b11111110;
  6813  000A24  508D               	movf	3981,w,c	;volatile
  6814  000A26  0901               	iorlw	1
  6815  000A28  D002               	goto	L19
  6816  000A2A                     l3939:
  6817                           
  6818                           ;LED.c: 415:         {;LED.c: 416:             LATE = LATE & 0b11111110;
  6819  000A2A  508D               	movf	3981,w,c	;volatile
  6820  000A2C  0BFE               	andlw	254
  6821  000A2E                     L19:
  6822  000A2E  6E8D               	movwf	3981,c	;volatile
  6823                           
  6824                           ;LED.c: 420:         if((diode & 0b0001000000) == 0b0001000000)
  6825  000A30  AC2A               	btfss	LED_Control@diode,6,c
  6826  000A32  D003               	goto	l3945
  6827                           
  6828                           ;LED.c: 421:         {;LED.c: 422:             LATE = LATE | ~0b11111011;
  6829  000A34  508D               	movf	3981,w,c	;volatile
  6830  000A36  0904               	iorlw	4
  6831  000A38  D002               	goto	L20
  6832  000A3A                     l3945:
  6833                           
  6834                           ;LED.c: 425:         {;LED.c: 426:             LATE = LATE & 0b11111011;
  6835  000A3A  508D               	movf	3981,w,c	;volatile
  6836  000A3C  0BFB               	andlw	251
  6837  000A3E                     L20:
  6838  000A3E  6E8D               	movwf	3981,c	;volatile
  6839                           
  6840                           ;LED.c: 429:         if((diode & 0b0010000000) == 0b0010000000)
  6841  000A40  AE2A               	btfss	LED_Control@diode,7,c
  6842  000A42  D003               	goto	l3951
  6843                           
  6844                           ;LED.c: 430:         {;LED.c: 431:             LATA = LATA | ~0b10111111;
  6845  000A44  5089               	movf	3977,w,c	;volatile
  6846  000A46  0940               	iorlw	64
  6847  000A48  D002               	goto	L21
  6848  000A4A                     l3951:
  6849                           
  6850                           ;LED.c: 434:         {;LED.c: 435:             LATA = LATA & 0b10111111;
  6851  000A4A  5089               	movf	3977,w,c	;volatile
  6852  000A4C  0BBF               	andlw	191
  6853  000A4E                     L21:
  6854  000A4E  6E89               	movwf	3977,c	;volatile
  6855                           
  6856                           ;LED.c: 438:         if((diode & 0b0100000000) == 0b0100000000)
  6857  000A50  A02B               	btfss	LED_Control@diode+1,0,c
  6858  000A52  D003               	goto	l3957
  6859                           
  6860                           ;LED.c: 439:         {;LED.c: 440:             LATD = LATD | ~0b11111101;
  6861  000A54  508C               	movf	3980,w,c	;volatile
  6862  000A56  0902               	iorlw	2
  6863  000A58  D002               	goto	L22
  6864  000A5A                     l3957:
  6865                           
  6866                           ;LED.c: 443:         {;LED.c: 444:             LATD = LATD & 0b11111101;
  6867  000A5A  508C               	movf	3980,w,c	;volatile
  6868  000A5C  0BFD               	andlw	253
  6869  000A5E                     L22:
  6870  000A5E  6E8C               	movwf	3980,c	;volatile
  6871                           
  6872                           ;LED.c: 447:         if((diode & 0b1000000000) == 0b1000000000)
  6873  000A60  A22B               	btfss	LED_Control@diode+1,1,c
  6874  000A62  D004               	goto	l3963
  6875                           
  6876                           ;LED.c: 448:         {;LED.c: 449:             LATD = LATD | ~0b11110111;
  6877  000A64  508C               	movf	3980,w,c	;volatile
  6878  000A66  0908               	iorlw	8
  6879  000A68  6E8C               	movwf	3980,c	;volatile
  6880                           
  6881                           ;LED.c: 450:         }
  6882  000A6A  0012               	return	
  6883  000A6C                     l3963:
  6884                           
  6885                           ;LED.c: 452:         {;LED.c: 453:             LATD = LATD &0b11110111;
  6886  000A6C  508C               	movf	3980,w,c	;volatile
  6887  000A6E  0BF7               	andlw	247
  6888  000A70  6E8C               	movwf	3980,c	;volatile
  6889  000A72  0012               	return		;funcret
  6890  000A74                     __end_of_LED_Control:
  6891                           	opt callstack 0
  6892                           
  6893 ;; *************** function _INI_GlobalInterrupt *****************
  6894 ;; Defined at:
  6895 ;;		line 78 in file "INI.c"
  6896 ;; Parameters:    Size  Location     Type
  6897 ;;		None
  6898 ;; Auto vars:     Size  Location     Type
  6899 ;;		None
  6900 ;; Return value:  Size  Location     Type
  6901 ;;                  1    wreg      void 
  6902 ;; Registers used:
  6903 ;;		None
  6904 ;; Tracked objects:
  6905 ;;		On entry : 0/0
  6906 ;;		On exit  : 0/0
  6907 ;;		Unchanged: 0/0
  6908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6912 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6913 ;;Total ram usage:        0 bytes
  6914 ;; Hardware stack levels used:    1
  6915 ;; Hardware stack levels required when called:    3
  6916 ;; This function calls:
  6917 ;;		Nothing
  6918 ;; This function is called by:
  6919 ;;		_INI_All
  6920 ;; This function uses a non-reentrant model
  6921 ;;
  6922                           
  6923                           	psect	text54
  6924  001A04                     __ptext54:
  6925                           	opt callstack 0
  6926  001A04                     _INI_GlobalInterrupt:
  6927                           	opt callstack 26
  6928                           
  6929                           ;INI.c: 80: INTCONbits.GIEH=1;
  6930                           
  6931                           ;incstack = 0
  6932  001A04  8EF2               	bsf	4082,7,c	;volatile
  6933                           
  6934                           ;INI.c: 81: INTCONbits.GIEL=1;
  6935  001A06  8CF2               	bsf	4082,6,c	;volatile
  6936                           
  6937                           ;INI.c: 82: RCONbits.IPEN=1;
  6938  001A08  8ED0               	bsf	4048,7,c	;volatile
  6939                           
  6940                           ;INI.c: 83: IPEN =1;
  6941  001A0A  8ED0               	bsf	4048,7,c	;volatile
  6942                           
  6943                           ;INI.c: 85: PEIE=1;
  6944  001A0C  8CF2               	bsf	4082,6,c	;volatile
  6945                           
  6946                           ;INI.c: 86: TMR1IP = 0;
  6947  001A0E  909F               	bcf	3999,0,c	;volatile
  6948  001A10  0012               	return		;funcret
  6949  001A12                     __end_of_INI_GlobalInterrupt:
  6950                           	opt callstack 0
  6951                           
  6952 ;; *************** function _CAN_Setup *****************
  6953 ;; Defined at:
  6954 ;;		line 24 in file "CAN.c"
  6955 ;; Parameters:    Size  Location     Type
  6956 ;;		None
  6957 ;; Auto vars:     Size  Location     Type
  6958 ;;		None
  6959 ;; Return value:  Size  Location     Type
  6960 ;;                  1    wreg      void 
  6961 ;; Registers used:
  6962 ;;		wreg, status,2, status,0, cstack
  6963 ;; Tracked objects:
  6964 ;;		On entry : 0/0
  6965 ;;		On exit  : 0/0
  6966 ;;		Unchanged: 0/0
  6967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6970 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6971 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6972 ;;Total ram usage:        1 bytes
  6973 ;; Hardware stack levels used:    1
  6974 ;; Hardware stack levels required when called:    5
  6975 ;; This function calls:
  6976 ;;		_CAN_SetupClock
  6977 ;;		_CAN_SetupMask
  6978 ;; This function is called by:
  6979 ;;		_INI_All
  6980 ;; This function uses a non-reentrant model
  6981 ;;
  6982                           
  6983                           	psect	text55
  6984  0013F8                     __ptext55:
  6985                           	opt callstack 0
  6986  0013F8                     _CAN_Setup:
  6987                           	opt callstack 24
  6988                           
  6989                           ;CAN.c: 29:     CANCON = 0x80;
  6990                           
  6991                           ;incstack = 0
  6992  0013F8  0E80               	movlw	128
  6993  0013FA  6E6F               	movwf	3951,c	;volatile
  6994  0013FC                     l4345:
  6995                           
  6996                           ;CAN.c: 30:     while((CANSTAT & 0xE0)!=0x80)
  6997  0013FC  506E               	movf	3950,w,c	;volatile
  6998  0013FE  0BE0               	andlw	224
  6999  001400  0A80               	xorlw	128
  7000  001402  A4D8               	btfss	status,2,c
  7001  001404  D7FB               	goto	l4345
  7002                           
  7003                           ;CAN.c: 35:     BSEL0 = 0;
  7004  001406  0E00               	movlw	0
  7005  001408  010D               	movlb	13	; () banked
  7006  00140A  6FF8               	movwf	248,b	;volatile
  7007                           
  7008                           ;CAN.c: 36:     TXB0CON = 0;
  7009  00140C  0E00               	movlw	0
  7010  00140E  010F               	movlb	15	; () banked
  7011  001410  6F40               	movwf	64,b	;volatile
  7012                           
  7013                           ;CAN.c: 37:     RXB0CON = 0;
  7014  001412  0E00               	movlw	0
  7015  001414  6E60               	movwf	3936,c	;volatile
  7016                           
  7017                           ;CAN.c: 38:     RXB1CON = 0;
  7018  001416  0E00               	movlw	0
  7019  001418  6F50               	movwf	80,b	;volatile
  7020                           
  7021                           ;CAN.c: 39:     B0CON = 0;
  7022  00141A  0E00               	movlw	0
  7023  00141C  010E               	movlb	14	; () banked
  7024  00141E  6F20               	movwf	32,b	;volatile
  7025                           
  7026                           ;CAN.c: 40:     B1CON = 0;
  7027  001420  0E00               	movlw	0
  7028  001422  6F30               	movwf	48,b	;volatile
  7029                           
  7030                           ;CAN.c: 41:     PIE3 = 0;
  7031  001424  0E00               	movlw	0
  7032  001426  6EA3               	movwf	4003,c	;volatile
  7033                           
  7034                           ; BSR set to: 14
  7035                           ;CAN.c: 42:     IPR3 = 0xFF;
  7036  001428  68A5               	setf	4005,c	;volatile
  7037                           
  7038                           ;CAN.c: 43:     PIR3 = 0x00;
  7039  00142A  0E00               	movlw	0
  7040  00142C  6EA4               	movwf	4004,c	;volatile
  7041                           
  7042                           ;CAN.c: 44:     BIE0 = 0;
  7043  00142E  0E00               	movlw	0
  7044  001430  010D               	movlb	13	; () banked
  7045  001432  6FFA               	movwf	250,b	;volatile
  7046                           
  7047                           ;CAN.c: 46:     DaneCan.adresCAN = 36;
  7048  001434  0E00               	movlw	0
  7049  001436  6E04               	movwf	_DaneCan+3,c
  7050  001438  0E24               	movlw	36
  7051  00143A  6E03               	movwf	_DaneCan+2,c
  7052                           
  7053                           ;CAN.c: 48:     ECANCON = 0x90;
  7054  00143C  0E90               	movlw	144
  7055  00143E  6E77               	movwf	3959,c	;volatile
  7056                           
  7057                           ; BSR set to: 13
  7058                           ;CAN.c: 51:     CAN_SetupClock();
  7059  001440  EC90  F00C         	call	_CAN_SetupClock	;wreg free
  7060                           
  7061                           ;CAN.c: 54:     CAN_SetupMask();
  7062  001444  EC92  F009         	call	_CAN_SetupMask	;wreg free
  7063                           
  7064                           ;CAN.c: 56:     CIOCON = 0xff;
  7065  001448  6873               	setf	3955,c	;volatile
  7066                           
  7067                           ;CAN.c: 62:     CANCON = 0x00;
  7068  00144A  0E00               	movlw	0
  7069  00144C  6E6F               	movwf	3951,c	;volatile
  7070  00144E                     l4357:
  7071                           
  7072                           ;CAN.c: 63:     while((CANSTAT & 0xE0) != 0x00)
  7073  00144E  CF6E F02A          	movff	3950,??_CAN_Setup	;volatile
  7074  001452  0EE0               	movlw	224
  7075  001454  162A               	andwf	??_CAN_Setup,f,c
  7076  001456  B4D8               	btfsc	status,2,c
  7077  001458  0012               	return	
  7078  00145A  D7F9               	goto	l4357
  7079  00145C                     __end_of_CAN_Setup:
  7080                           	opt callstack 0
  7081                           
  7082 ;; *************** function _CAN_SetupMask *****************
  7083 ;; Defined at:
  7084 ;;		line 84 in file "CAN.c"
  7085 ;; Parameters:    Size  Location     Type
  7086 ;;		None
  7087 ;; Auto vars:     Size  Location     Type
  7088 ;;		None
  7089 ;; Return value:  Size  Location     Type
  7090 ;;                  1    wreg      void 
  7091 ;; Registers used:
  7092 ;;		wreg, status,2, cstack
  7093 ;; Tracked objects:
  7094 ;;		On entry : 0/0
  7095 ;;		On exit  : 0/0
  7096 ;;		Unchanged: 0/0
  7097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7102 ;;Total ram usage:        0 bytes
  7103 ;; Hardware stack levels used:    1
  7104 ;; Hardware stack levels required when called:    4
  7105 ;; This function calls:
  7106 ;;		_CAN_SetupFilter_Ne
  7107 ;; This function is called by:
  7108 ;;		_CAN_Setup
  7109 ;; This function uses a non-reentrant model
  7110 ;;
  7111                           
  7112                           	psect	text56
  7113  001324                     __ptext56:
  7114                           	opt callstack 0
  7115  001324                     _CAN_SetupMask:
  7116                           	opt callstack 24
  7117                           
  7118                           ;CAN.c: 86:     MSEL0 = 0x50;
  7119                           
  7120                           ;incstack = 0
  7121  001324  0E50               	movlw	80
  7122  001326  010D               	movlb	13	; () banked
  7123  001328  6FF0               	movwf	240,b	;volatile
  7124                           
  7125                           ;CAN.c: 87:     MSEL1 = 0x55;
  7126  00132A  0E55               	movlw	85
  7127  00132C  6FF1               	movwf	241,b	;volatile
  7128                           
  7129                           ;CAN.c: 88:     MSEL2 = 0x55;
  7130  00132E  0E55               	movlw	85
  7131  001330  6FF2               	movwf	242,b	;volatile
  7132                           
  7133                           ;CAN.c: 89:     MSEL3 = 0x55;
  7134  001332  0E55               	movlw	85
  7135  001334  6FF3               	movwf	243,b	;volatile
  7136                           
  7137                           ;CAN.c: 92:     RXM0SIDH = 0b00000000;
  7138  001336  0E00               	movlw	0
  7139  001338  010F               	movlb	15	; () banked
  7140  00133A  6F18               	movwf	24,b	;volatile
  7141                           
  7142                           ;CAN.c: 93:     RXM0SIDL = 0b00001011;
  7143  00133C  0E0B               	movlw	11
  7144  00133E  6F19               	movwf	25,b	;volatile
  7145                           
  7146                           ; BSR set to: 15
  7147                           ;CAN.c: 94:     RXM0EIDH = 0xFF;
  7148  001340  691A               	setf	26,b	;volatile
  7149                           
  7150                           ; BSR set to: 15
  7151                           ;CAN.c: 95:     RXM0EIDL = 0xFF;
  7152  001342  691B               	setf	27,b	;volatile
  7153                           
  7154                           ; BSR set to: 15
  7155                           ;CAN.c: 98:     RXM1SIDH = 0xFF;
  7156  001344  691C               	setf	28,b	;volatile
  7157                           
  7158                           ; BSR set to: 15
  7159                           ;CAN.c: 99:     RXM1SIDL = 0xFF;
  7160  001346  691D               	setf	29,b	;volatile
  7161                           
  7162                           ; BSR set to: 15
  7163                           ;CAN.c: 100:     RXM1EIDH = 0xFF;
  7164  001348  691E               	setf	30,b	;volatile
  7165                           
  7166                           ; BSR set to: 15
  7167                           ;CAN.c: 101:     RXM1EIDL = 0xFF;
  7168  00134A  691F               	setf	31,b	;volatile
  7169                           
  7170                           ;CAN.c: 104:     RXM0SIDH = 0x00;
  7171  00134C  0E00               	movlw	0
  7172  00134E  6F18               	movwf	24,b	;volatile
  7173                           
  7174                           ;CAN.c: 105:     RXM0SIDL = 0x00;
  7175  001350  0E00               	movlw	0
  7176  001352  6F19               	movwf	25,b	;volatile
  7177                           
  7178                           ;CAN.c: 110:     RXF0SIDH = 0x00;
  7179  001354  0E00               	movlw	0
  7180  001356  6F00               	movwf	0,b	;volatile
  7181                           
  7182                           ;CAN.c: 111:     RXF0SIDL = 0x01;
  7183  001358  0E01               	movlw	1
  7184  00135A  6F01               	movwf	1,b	;volatile
  7185                           
  7186                           ; BSR set to: 15
  7187                           ;CAN.c: 112:     RXF0SIDLbits.EXIDEN = 1;
  7188  00135C  8701               	bsf	1,3,b	;volatile
  7189                           
  7190                           ;CAN.c: 113:     RXF0EIDH = (BYTE)(DaneCan.adresCAN>>8);
  7191  00135E  5004               	movf	_DaneCan+3,w,c
  7192  001360  6F02               	movwf	2,b	;volatile
  7193                           
  7194                           ; BSR set to: 15
  7195                           ;CAN.c: 115:     RXF0EIDL = (BYTE)DaneCan.adresCAN;
  7196  001362  C003  FF03         	movff	_DaneCan+2,3843	;volatile
  7197                           
  7198                           ;CAN.c: 117:     RXF1SIDH = 0x00;
  7199  001366  0E00               	movlw	0
  7200  001368  6F04               	movwf	4,b	;volatile
  7201                           
  7202                           ;CAN.c: 118:     RXF1SIDL = 0x01;
  7203  00136A  0E01               	movlw	1
  7204  00136C  6F05               	movwf	5,b	;volatile
  7205                           
  7206                           ; BSR set to: 15
  7207                           ;CAN.c: 119:     RXF1SIDLbits.EXIDEN = 1;
  7208  00136E  8705               	bsf	5,3,b	;volatile
  7209                           
  7210                           ;CAN.c: 120:     RXF1EIDH = 0x7F;
  7211  001370  0E7F               	movlw	127
  7212  001372  6F06               	movwf	6,b	;volatile
  7213                           
  7214                           ; BSR set to: 15
  7215                           ;CAN.c: 121:     RXF1EIDL = 0xFF;
  7216  001374  6907               	setf	7,b	;volatile
  7217                           
  7218                           ; BSR set to: 15
  7219                           ;CAN.c: 123:     CAN_SetupFilter_Ne();
  7220  001376  EC51  F008         	call	_CAN_SetupFilter_Ne	;wreg free
  7221                           
  7222                           ;CAN.c: 126:     RXFBCON0 = 0b00000000;
  7223  00137A  0E00               	movlw	0
  7224  00137C  010D               	movlb	13	; () banked
  7225  00137E  6FE0               	movwf	224,b	;volatile
  7226                           
  7227                           ; BSR set to: 13
  7228                           ;CAN.c: 128:     RXFBCON1 = 0b00010001;
  7229  001380  0E11               	movlw	17
  7230  001382  6FE1               	movwf	225,b	;volatile
  7231                           
  7232                           ; BSR set to: 13
  7233                           ;CAN.c: 130:     RXFBCON2 = 0b00010001;
  7234  001384  0E11               	movlw	17
  7235  001386  6FE2               	movwf	226,b	;volatile
  7236                           
  7237                           ; BSR set to: 13
  7238                           ;CAN.c: 132:     RXFBCON3 = 0b00010001;
  7239  001388  0E11               	movlw	17
  7240  00138A  6FE3               	movwf	227,b	;volatile
  7241                           
  7242                           ; BSR set to: 13
  7243                           ;CAN.c: 134:     RXFBCON4 = 0b00010001;
  7244  00138C  0E11               	movlw	17
  7245  00138E  6FE4               	movwf	228,b	;volatile
  7246                           
  7247                           ; BSR set to: 13
  7248  001390  0012               	return		;funcret
  7249  001392                     __end_of_CAN_SetupMask:
  7250                           	opt callstack 0
  7251                           
  7252 ;; *************** function _CAN_SetupFilter_Ne *****************
  7253 ;; Defined at:
  7254 ;;		line 140 in file "CAN.c"
  7255 ;; Parameters:    Size  Location     Type
  7256 ;;		None
  7257 ;; Auto vars:     Size  Location     Type
  7258 ;;		None
  7259 ;; Return value:  Size  Location     Type
  7260 ;;                  1    wreg      void 
  7261 ;; Registers used:
  7262 ;;		wreg, status,2
  7263 ;; Tracked objects:
  7264 ;;		On entry : 0/0
  7265 ;;		On exit  : 0/0
  7266 ;;		Unchanged: 0/0
  7267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7272 ;;Total ram usage:        0 bytes
  7273 ;; Hardware stack levels used:    1
  7274 ;; Hardware stack levels required when called:    3
  7275 ;; This function calls:
  7276 ;;		Nothing
  7277 ;; This function is called by:
  7278 ;;		_CAN_SetupMask
  7279 ;;		_FRAME_AdressOfNeighbors
  7280 ;; This function uses a non-reentrant model
  7281 ;;
  7282                           
  7283                           	psect	text57
  7284  0010A2                     __ptext57:
  7285                           	opt callstack 0
  7286  0010A2                     _CAN_SetupFilter_Ne:
  7287                           	opt callstack 24
  7288                           
  7289                           ;CAN.c: 144:     RXF2SIDH = 0;
  7290                           
  7291                           ; BSR set to: 13
  7292                           ;incstack = 0
  7293  0010A2  0E00               	movlw	0
  7294  0010A4  010F               	movlb	15	; () banked
  7295  0010A6  6F08               	movwf	8,b	;volatile
  7296                           
  7297                           ;CAN.c: 145:     RXF2SIDL = 0x20;
  7298  0010A8  0E20               	movlw	32
  7299  0010AA  6F09               	movwf	9,b	;volatile
  7300                           
  7301                           ; BSR set to: 15
  7302                           ;CAN.c: 146:     RXF2SIDLbits.EXIDEN = 1;
  7303  0010AC  8709               	bsf	9,3,b	;volatile
  7304                           
  7305                           ;CAN.c: 147:     RXF2EIDH = (BYTE)(NeightAdress1>>8);
  7306  0010AE  504B               	movf	_NeightAdress1+1,w,c	;volatile
  7307  0010B0  6F0A               	movwf	10,b	;volatile
  7308                           
  7309                           ; BSR set to: 15
  7310                           ;CAN.c: 148:     RXF2EIDL = (BYTE)(NeightAdress1 & 0xFF);
  7311  0010B2  C04A  FF0B         	movff	_NeightAdress1,3851	;volatile
  7312                           
  7313                           ;CAN.c: 151:     RXF3SIDH = 0;
  7314  0010B6  0E00               	movlw	0
  7315  0010B8  6F0C               	movwf	12,b	;volatile
  7316                           
  7317                           ;CAN.c: 152:     RXF3SIDL = 0x20;
  7318  0010BA  0E20               	movlw	32
  7319  0010BC  6F0D               	movwf	13,b	;volatile
  7320                           
  7321                           ; BSR set to: 15
  7322                           ;CAN.c: 153:     RXF3SIDLbits.EXIDEN = 1;
  7323  0010BE  870D               	bsf	13,3,b	;volatile
  7324                           
  7325                           ;CAN.c: 154:     RXF3EIDH = (BYTE)(NeightAdress2>>8);
  7326  0010C0  5049               	movf	_NeightAdress2+1,w,c	;volatile
  7327  0010C2  6F0E               	movwf	14,b	;volatile
  7328                           
  7329                           ; BSR set to: 15
  7330                           ;CAN.c: 155:     RXF3EIDL = (BYTE)(NeightAdress2 & 0xFF);
  7331  0010C4  C048  FF0F         	movff	_NeightAdress2,3855	;volatile
  7332                           
  7333                           ;CAN.c: 157:     RXF4SIDH = 0;
  7334  0010C8  0E00               	movlw	0
  7335  0010CA  6F10               	movwf	16,b	;volatile
  7336                           
  7337                           ;CAN.c: 158:     RXF4SIDL = 0x20;
  7338  0010CC  0E20               	movlw	32
  7339  0010CE  6F11               	movwf	17,b	;volatile
  7340                           
  7341                           ; BSR set to: 15
  7342                           ;CAN.c: 159:     RXF4SIDLbits.EXIDEN = 1;
  7343  0010D0  8711               	bsf	17,3,b	;volatile
  7344                           
  7345                           ;CAN.c: 160:     RXF4EIDH = (BYTE)(NeightAdress3>>8);
  7346  0010D2  5024               	movf	_NeightAdress3+1,w,c	;volatile
  7347  0010D4  6F12               	movwf	18,b	;volatile
  7348                           
  7349                           ; BSR set to: 15
  7350                           ;CAN.c: 161:     RXF4EIDL = (BYTE)(NeightAdress3 & 0xFF);
  7351  0010D6  C023  FF13         	movff	_NeightAdress3,3859	;volatile
  7352                           
  7353                           ;CAN.c: 163:     RXF5SIDH = 0;
  7354  0010DA  0E00               	movlw	0
  7355  0010DC  6F14               	movwf	20,b	;volatile
  7356                           
  7357                           ;CAN.c: 164:     RXF5SIDL = 0x20;
  7358  0010DE  0E20               	movlw	32
  7359  0010E0  6F15               	movwf	21,b	;volatile
  7360                           
  7361                           ; BSR set to: 15
  7362                           ;CAN.c: 165:     RXF5SIDLbits.EXIDEN = 1;
  7363  0010E2  8715               	bsf	21,3,b	;volatile
  7364                           
  7365                           ;CAN.c: 166:     RXF5EIDH = (BYTE)(NeightAdress4>>8);
  7366  0010E4  5022               	movf	_NeightAdress4+1,w,c	;volatile
  7367  0010E6  6F16               	movwf	22,b	;volatile
  7368                           
  7369                           ; BSR set to: 15
  7370                           ;CAN.c: 167:     RXF5EIDL = (BYTE)(NeightAdress4 & 0xFF);
  7371  0010E8  C021  FF17         	movff	_NeightAdress4,3863	;volatile
  7372                           
  7373                           ;CAN.c: 169:     RXF6SIDH = 0;
  7374  0010EC  0E00               	movlw	0
  7375  0010EE  010D               	movlb	13	; () banked
  7376  0010F0  6F60               	movwf	96,b	;volatile
  7377                           
  7378                           ;CAN.c: 170:     RXF6SIDL = 0x20;
  7379  0010F2  0E20               	movlw	32
  7380  0010F4  6F61               	movwf	97,b	;volatile
  7381                           
  7382                           ; BSR set to: 13
  7383                           ;CAN.c: 171:     RXF6SIDLbits.EXIDEN = 1;
  7384  0010F6  8761               	bsf	97,3,b	;volatile
  7385                           
  7386                           ;CAN.c: 172:     RXF6EIDH = (BYTE)(NeightAdress5>>8);
  7387  0010F8  5020               	movf	_NeightAdress5+1,w,c	;volatile
  7388  0010FA  6F62               	movwf	98,b	;volatile
  7389                           
  7390                           ; BSR set to: 13
  7391                           ;CAN.c: 173:     RXF6EIDL = (BYTE)(NeightAdress5 & 0xFF);
  7392  0010FC  C01F  FD63         	movff	_NeightAdress5,3427	;volatile
  7393                           
  7394                           ;CAN.c: 175:     RXF7SIDH = 0;
  7395  001100  0E00               	movlw	0
  7396  001102  6F64               	movwf	100,b	;volatile
  7397                           
  7398                           ;CAN.c: 176:     RXF7SIDL = 0x20;
  7399  001104  0E20               	movlw	32
  7400  001106  6F65               	movwf	101,b	;volatile
  7401                           
  7402                           ; BSR set to: 13
  7403                           ;CAN.c: 177:     RXF7SIDLbits.EXIDEN = 1;
  7404  001108  8765               	bsf	101,3,b	;volatile
  7405                           
  7406                           ;CAN.c: 178:     RXF7EIDH = (BYTE)(NeightAdress6>>8);
  7407  00110A  501E               	movf	_NeightAdress6+1,w,c	;volatile
  7408  00110C  6F66               	movwf	102,b	;volatile
  7409                           
  7410                           ; BSR set to: 13
  7411                           ;CAN.c: 179:     RXF7EIDL = (BYTE)(NeightAdress6 & 0xFF);
  7412  00110E  C01D  FD67         	movff	_NeightAdress6,3431	;volatile
  7413                           
  7414                           ;CAN.c: 181:     RXF8SIDH = 0;
  7415  001112  0E00               	movlw	0
  7416  001114  6F68               	movwf	104,b	;volatile
  7417                           
  7418                           ;CAN.c: 182:     RXF8SIDL = 0x20;
  7419  001116  0E20               	movlw	32
  7420  001118  6F69               	movwf	105,b	;volatile
  7421                           
  7422                           ; BSR set to: 13
  7423                           ;CAN.c: 183:     RXF8SIDLbits.EXIDEN = 1;
  7424  00111A  8769               	bsf	105,3,b	;volatile
  7425                           
  7426                           ;CAN.c: 184:     RXF8EIDH = (BYTE)(NeightAdress7>>8);
  7427  00111C  501C               	movf	_NeightAdress7+1,w,c	;volatile
  7428  00111E  6F6A               	movwf	106,b	;volatile
  7429                           
  7430                           ; BSR set to: 13
  7431                           ;CAN.c: 185:     RXF8EIDL = (BYTE)(NeightAdress7 & 0xFF);
  7432  001120  C01B  FD6B         	movff	_NeightAdress7,3435	;volatile
  7433                           
  7434                           ;CAN.c: 187:     RXF9SIDH = 0;
  7435  001124  0E00               	movlw	0
  7436  001126  6F70               	movwf	112,b	;volatile
  7437                           
  7438                           ;CAN.c: 188:     RXF9SIDL = 0x20;
  7439  001128  0E20               	movlw	32
  7440  00112A  6F71               	movwf	113,b	;volatile
  7441                           
  7442                           ; BSR set to: 13
  7443                           ;CAN.c: 189:     RXF9SIDLbits.EXIDEN = 1;
  7444  00112C  8771               	bsf	113,3,b	;volatile
  7445                           
  7446                           ;CAN.c: 190:     RXF9EIDH = (BYTE)(NeightAdress8>>8);
  7447  00112E  501A               	movf	_NeightAdress8+1,w,c	;volatile
  7448  001130  6F72               	movwf	114,b	;volatile
  7449                           
  7450                           ; BSR set to: 13
  7451                           ;CAN.c: 191:     RXF9EIDL = (BYTE)(NeightAdress8 & 0xFF);
  7452  001132  C019  FD73         	movff	_NeightAdress8,3443	;volatile
  7453                           
  7454                           ; BSR set to: 13
  7455  001136  0012               	return		;funcret
  7456  001138                     __end_of_CAN_SetupFilter_Ne:
  7457                           	opt callstack 0
  7458                           
  7459 ;; *************** function _CAN_SetupClock *****************
  7460 ;; Defined at:
  7461 ;;		line 199 in file "CAN.c"
  7462 ;; Parameters:    Size  Location     Type
  7463 ;;		None
  7464 ;; Auto vars:     Size  Location     Type
  7465 ;;		None
  7466 ;; Return value:  Size  Location     Type
  7467 ;;                  1    wreg      void 
  7468 ;; Registers used:
  7469 ;;		None
  7470 ;; Tracked objects:
  7471 ;;		On entry : 0/0
  7472 ;;		On exit  : 0/0
  7473 ;;		Unchanged: 0/0
  7474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7479 ;;Total ram usage:        0 bytes
  7480 ;; Hardware stack levels used:    1
  7481 ;; Hardware stack levels required when called:    3
  7482 ;; This function calls:
  7483 ;;		Nothing
  7484 ;; This function is called by:
  7485 ;;		_CAN_Setup
  7486 ;; This function uses a non-reentrant model
  7487 ;;
  7488                           
  7489                           	psect	text58
  7490  001920                     __ptext58:
  7491                           	opt callstack 0
  7492  001920                     _CAN_SetupClock:
  7493                           	opt callstack 25
  7494                           
  7495                           ;CAN.c: 201:     BRGCON1bits.BRP0 = (((32000000/4)/(2*20*50000))-1) & 0b000001;
  7496                           
  7497                           ; BSR set to: 13
  7498                           ;incstack = 0
  7499  001920  8070               	bsf	3952,0,c	;volatile
  7500                           
  7501                           ;CAN.c: 202:     BRGCON1bits.BRP1 = ((((32000000/4)/(2*20*50000))-1) >> 1) & 0b000001;
  7502  001922  8270               	bsf	3952,1,c	;volatile
  7503                           
  7504                           ;CAN.c: 203:     BRGCON1bits.BRP2 = ((((32000000/4)/(2*20*50000))-1) >> 2) & 0b000001;
  7505  001924  9470               	bcf	3952,2,c	;volatile
  7506                           
  7507                           ;CAN.c: 204:     BRGCON1bits.BRP3 = ((((32000000/4)/(2*20*50000))-1) >> 3) & 0b000001;
  7508  001926  9670               	bcf	3952,3,c	;volatile
  7509                           
  7510                           ;CAN.c: 205:     BRGCON1bits.BRP4 = ((((32000000/4)/(2*20*50000))-1) >> 4) & 0b000001;
  7511  001928  9870               	bcf	3952,4,c	;volatile
  7512                           
  7513                           ;CAN.c: 206:     BRGCON1bits.BRP5 = ((((32000000/4)/(2*20*50000))-1) >> 5) & 0b000001;
  7514  00192A  9A70               	bcf	3952,5,c	;volatile
  7515                           
  7516                           ;CAN.c: 208:     BRGCON1bits.SJW0 = 1;
  7517  00192C  8C70               	bsf	3952,6,c	;volatile
  7518                           
  7519                           ;CAN.c: 209:     BRGCON1bits.SJW1 = 1;
  7520  00192E  8E70               	bsf	3952,7,c	;volatile
  7521                           
  7522                           ;CAN.c: 211:     BRGCON2bits.SEG1PH0 = 1;
  7523  001930  8671               	bsf	3953,3,c	;volatile
  7524                           
  7525                           ;CAN.c: 212:     BRGCON2bits.SEG1PH1 = 1;
  7526  001932  8871               	bsf	3953,4,c	;volatile
  7527                           
  7528                           ;CAN.c: 213:     BRGCON2bits.SEG1PH2 = 1;
  7529  001934  8A71               	bsf	3953,5,c	;volatile
  7530                           
  7531                           ;CAN.c: 215:     BRGCON2bits.PRSEG2 = 1;
  7532  001936  8471               	bsf	3953,2,c	;volatile
  7533                           
  7534                           ;CAN.c: 216:     BRGCON2bits.PRSEG1 = 0;
  7535  001938  9271               	bcf	3953,1,c	;volatile
  7536                           
  7537                           ;CAN.c: 217:     BRGCON2bits.PRSEG0 = 0;
  7538  00193A  9071               	bcf	3953,0,c	;volatile
  7539                           
  7540                           ;CAN.c: 219:     BRGCON3bits.SEG2PH0 = 1;
  7541  00193C  8072               	bsf	3954,0,c	;volatile
  7542                           
  7543                           ;CAN.c: 220:     BRGCON3bits.SEG2PH1 = 0;
  7544  00193E  9272               	bcf	3954,1,c	;volatile
  7545                           
  7546                           ;CAN.c: 221:     BRGCON3bits.SEG2PH2 = 1;
  7547  001940  8472               	bsf	3954,2,c	;volatile
  7548                           
  7549                           ;CAN.c: 223:     BRGCON2bits.SAM = 1;
  7550  001942  8C71               	bsf	3953,6,c	;volatile
  7551                           
  7552                           ;CAN.c: 224:     BRGCON2bits.SEG2PHTS = 1;
  7553  001944  8E71               	bsf	3953,7,c	;volatile
  7554  001946  0012               	return		;funcret
  7555  001948                     __end_of_CAN_SetupClock:
  7556                           	opt callstack 0
  7557                           
  7558 ;; *************** function _ISR_low *****************
  7559 ;; Defined at:
  7560 ;;		line 16 in file "ISR.c"
  7561 ;; Parameters:    Size  Location     Type
  7562 ;;		None
  7563 ;; Auto vars:     Size  Location     Type
  7564 ;;		None
  7565 ;; Return value:  Size  Location     Type
  7566 ;;                  1    wreg      void 
  7567 ;; Registers used:
  7568 ;;		wreg, status,2, status,0, cstack
  7569 ;; Tracked objects:
  7570 ;;		On entry : 0/0
  7571 ;;		On exit  : 0/0
  7572 ;;		Unchanged: 0/0
  7573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7576 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7577 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7578 ;;Total ram usage:        3 bytes
  7579 ;; Hardware stack levels used:    1
  7580 ;; Hardware stack levels required when called:    2
  7581 ;; This function calls:
  7582 ;;		_TMR1_Timer_reset
  7583 ;;		i1_TMR1_Update_flag_Set
  7584 ;; This function is called by:
  7585 ;;		Interrupt level 1
  7586 ;; This function uses a non-reentrant model
  7587 ;;
  7588                           
  7589                           	psect	intcodelo
  7590  000018                     __pintcodelo:
  7591                           	opt callstack 0
  7592  000018                     _ISR_low:
  7593                           	opt callstack 22
  7594                           
  7595                           ;incstack = 0
  7596  000018  804C               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  7597  00001A  CFD8 F027          	movff	status,??_ISR_low
  7598  00001E  CFE8 F028          	movff	wreg,??_ISR_low+1
  7599  000022  CFE0 F029          	movff	bsr,??_ISR_low+2
  7600                           
  7601                           ;ISR.c: 21:     if(TMR1IF==1)
  7602  000026  A09E               	btfss	3998,0,c	;volatile
  7603  000028  D012               	goto	i1l775
  7604                           
  7605                           ;ISR.c: 22:         {;ISR.c: 23:             TMR1_Timer_reset();
  7606  00002A  ECA4  F00C         	call	_TMR1_Timer_reset	;wreg free
  7607                           
  7608                           ;ISR.c: 26:             static BYTE ramkaStanuU8=0;;ISR.c: 29:             TMR1_Update_f
      +                          lag_Set(1);
  7609  00002E  0E00               	movlw	0
  7610  000030  6E26               	movwf	i1TMR1_Update_flag_Set@a+1,c
  7611  000032  0E01               	movlw	1
  7612  000034  6E25               	movwf	i1TMR1_Update_flag_Set@a,c
  7613  000036  EC38  F00D         	call	i1_TMR1_Update_flag_Set	;wreg free
  7614                           
  7615                           ;ISR.c: 31:             DetectorLedRadar.Flags.obsluzWeWy = 1;
  7616  00003A  0100               	movlb	0	; () banked
  7617  00003C  81CB               	bsf	_DetectorLedRadar& (0+255),0,b
  7618                           
  7619                           ; BSR set to: 0
  7620                           ;ISR.c: 33:             if(++ramkaStanuU8 > (2*10))
  7621  00003E  2A12               	incf	ISR_low@ramkaStanuU8,f,c
  7622  000040  0E14               	movlw	20
  7623  000042  6412               	cpfsgt	ISR_low@ramkaStanuU8,c
  7624  000044  D003               	goto	i1l3679
  7625                           
  7626                           ; BSR set to: 0
  7627                           ;ISR.c: 34:                 {;ISR.c: 35:                     ramkaStanuU8 = 0;
  7628  000046  0E00               	movlw	0
  7629  000048  6E12               	movwf	ISR_low@ramkaStanuU8,c
  7630                           
  7631                           ; BSR set to: 0
  7632                           ;ISR.c: 36:                     DaneCan.Flags.wyslijRamkeStanu = 1;
  7633  00004A  8001               	bsf	_DaneCan,0,c
  7634  00004C                     i1l3679:
  7635                           
  7636                           ; BSR set to: 0
  7637                           ;ISR.c: 41:             TMR1IF=0;
  7638  00004C  909E               	bcf	3998,0,c	;volatile
  7639  00004E                     i1l775:
  7640  00004E  C029  FFE0         	movff	??_ISR_low+2,bsr
  7641  000052  C028  FFE8         	movff	??_ISR_low+1,wreg
  7642  000056  C027  FFD8         	movff	??_ISR_low,status
  7643  00005A  904C               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  7644  00005C  0010               	retfie	
  7645  00005E                     __end_of_ISR_low:
  7646                           	opt callstack 0
  7647                           
  7648 ;; *************** function i1_TMR1_Update_flag_Set *****************
  7649 ;; Defined at:
  7650 ;;		line 32 in file "TMR1.c"
  7651 ;; Parameters:    Size  Location     Type
  7652 ;;  a               2    0[COMRAM] unsigned int 
  7653 ;; Auto vars:     Size  Location     Type
  7654 ;;		None
  7655 ;; Return value:  Size  Location     Type
  7656 ;;                  1    wreg      void 
  7657 ;; Registers used:
  7658 ;;		None
  7659 ;; Tracked objects:
  7660 ;;		On entry : 0/0
  7661 ;;		On exit  : 0/0
  7662 ;;		Unchanged: 0/0
  7663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7664 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7667 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7668 ;;Total ram usage:        2 bytes
  7669 ;; Hardware stack levels used:    1
  7670 ;; Hardware stack levels required when called:    1
  7671 ;; This function calls:
  7672 ;;		Nothing
  7673 ;; This function is called by:
  7674 ;;		_ISR_low
  7675 ;; This function uses a non-reentrant model
  7676 ;;
  7677                           
  7678                           	psect	text60
  7679  001A70                     __ptext60:
  7680                           	opt callstack 0
  7681  001A70                     i1_TMR1_Update_flag_Set:
  7682                           	opt callstack 22
  7683                           
  7684                           ;TMR1.c: 32: void TMR1_Update_flag_Set(UINT a);TMR1.c: 33: {;TMR1.c: 34:     TMR1_Update
      +                          _flag = a;
  7685                           
  7686                           ;incstack = 0
  7687  001A70  C025  F00B         	movff	i1TMR1_Update_flag_Set@a,_TMR1_Update_flag
  7688  001A74  C026  F00C         	movff	i1TMR1_Update_flag_Set@a+1,_TMR1_Update_flag+1
  7689  001A78  0012               	return		;funcret
  7690  001A7A                     __end_ofi1_TMR1_Update_flag_Set:
  7691                           	opt callstack 0
  7692                           
  7693 ;; *************** function _TMR1_Timer_reset *****************
  7694 ;; Defined at:
  7695 ;;		line 63 in file "TMR1.c"
  7696 ;; Parameters:    Size  Location     Type
  7697 ;;		None
  7698 ;; Auto vars:     Size  Location     Type
  7699 ;;  t1H             1    1[COMRAM] volatile unsigned char 
  7700 ;;  t1L             1    0[COMRAM] volatile unsigned char 
  7701 ;; Return value:  Size  Location     Type
  7702 ;;                  1    wreg      unsigned char 
  7703 ;; Registers used:
  7704 ;;		wreg, status,2, status,0
  7705 ;; Tracked objects:
  7706 ;;		On entry : 0/0
  7707 ;;		On exit  : 0/0
  7708 ;;		Unchanged: 0/0
  7709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7711 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7713 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7714 ;;Total ram usage:        2 bytes
  7715 ;; Hardware stack levels used:    1
  7716 ;; Hardware stack levels required when called:    1
  7717 ;; This function calls:
  7718 ;;		Nothing
  7719 ;; This function is called by:
  7720 ;;		_ISR_low
  7721 ;; This function uses a non-reentrant model
  7722 ;;
  7723                           
  7724                           	psect	text61
  7725  001948                     __ptext61:
  7726                           	opt callstack 0
  7727  001948                     _TMR1_Timer_reset:
  7728                           	opt callstack 22
  7729                           
  7730                           ;TMR1.c: 69:     volatile BYTE t1L = 0, t1H = 0;
  7731                           
  7732                           ;incstack = 0
  7733  001948  0E00               	movlw	0
  7734  00194A  6E25               	movwf	TMR1_Timer_reset@t1L,c	;volatile
  7735  00194C  0E00               	movlw	0
  7736  00194E  6E26               	movwf	TMR1_Timer_reset@t1H,c	;volatile
  7737                           
  7738                           ;TMR1.c: 70:     t1L = TMR1L;
  7739  001950  CFCE F025          	movff	4046,TMR1_Timer_reset@t1L	;volatile
  7740                           
  7741                           ;TMR1.c: 71:     t1H = TMR1H;
  7742  001954  CFCF F026          	movff	4047,TMR1_Timer_reset@t1H	;volatile
  7743                           
  7744                           ;TMR1.c: 72:     __nop();
  7745  001958  F000               	nop	
  7746                           
  7747                           ;TMR1.c: 73:     t1H += (UINT8)((0xFFFF - (((8000000/8)/4)/10)) >> 8);
  7748  00195A  0E9E               	movlw	158
  7749  00195C  2626               	addwf	TMR1_Timer_reset@t1H,f,c	;volatile
  7750                           
  7751                           ;TMR1.c: 74:     t1L += (UINT8)((0xFFFF - (((8000000/8)/4)/10)) & 0xFF);
  7752  00195E  0E57               	movlw	87
  7753  001960  2625               	addwf	TMR1_Timer_reset@t1L,f,c	;volatile
  7754                           
  7755                           ;TMR1.c: 75:     TMR1H = t1H;
  7756  001962  C026  FFCF         	movff	TMR1_Timer_reset@t1H,4047	;volatile
  7757                           
  7758                           ;TMR1.c: 76:     TMR1L = 0x5B;
  7759  001966  0E5B               	movlw	91
  7760  001968  6ECE               	movwf	4046,c	;volatile
  7761  00196A  0012               	return		;funcret
  7762  00196C                     __end_of_TMR1_Timer_reset:
  7763                           	opt callstack 0
  7764                           
  7765 ;; *************** function _ISR_high *****************
  7766 ;; Defined at:
  7767 ;;		line 53 in file "ISR.c"
  7768 ;; Parameters:    Size  Location     Type
  7769 ;;		None
  7770 ;; Auto vars:     Size  Location     Type
  7771 ;;		None
  7772 ;; Return value:  Size  Location     Type
  7773 ;;                  1    wreg      void 
  7774 ;; Registers used:
  7775 ;;		None
  7776 ;; Tracked objects:
  7777 ;;		On entry : 0/0
  7778 ;;		On exit  : 0/0
  7779 ;;		Unchanged: 0/0
  7780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7785 ;;Total ram usage:        0 bytes
  7786 ;; Hardware stack levels used:    1
  7787 ;; This function calls:
  7788 ;;		Nothing
  7789 ;; This function is called by:
  7790 ;;		Interrupt level 2
  7791 ;; This function uses a non-reentrant model
  7792 ;;
  7793                           
  7794                           	psect	intcode
  7795  000008                     __pintcode:
  7796                           	opt callstack 0
  7797  000008                     _ISR_high:
  7798                           	opt callstack 22
  7799                           
  7800                           ;incstack = 0
  7801  000008  824C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  7802  00000A  ED45  F00D         	call	int_func,f	;refresh shadow registers
  7803                           
  7804                           	psect	intcode_body
  7805  001A8A                     __pintcode_body:
  7806                           	opt callstack 22
  7807  001A8A                     int_func:
  7808                           	opt callstack 22
  7809  001A8A  0006               	pop		; remove dummy address from shadow register refresh
  7810  001A8C  924C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  7811  001A8E  0011               	retfie		f
  7812  001A90                     __end_of_ISR_high:
  7813                           	opt callstack 0
  7814  0000                     
  7815                           	psect	rparam
  7816  0000                     
  7817                           	psect	temp
  7818  00004C                     btemp:
  7819                           	opt callstack 0
  7820  00004C                     	ds	1
  7821  0000                     int$flags	set	btemp
  7822  0000                     wtemp8	set	btemp+1
  7823  0000                     ttemp5	set	btemp+1
  7824  0000                     ttemp6	set	btemp+4
  7825  0000                     ttemp7	set	btemp+8
  7826                           tosu	equ	0xFFF
  7827                           tosh	equ	0xFFE
  7828                           tosl	equ	0xFFD
  7829                           stkptr	equ	0xFFC
  7830                           pclatu	equ	0xFFB
  7831                           pclath	equ	0xFFA
  7832                           pcl	equ	0xFF9
  7833                           tblptru	equ	0xFF8
  7834                           tblptrh	equ	0xFF7
  7835                           tblptrl	equ	0xFF6
  7836                           tablat	equ	0xFF5
  7837                           prodh	equ	0xFF4
  7838                           prodl	equ	0xFF3
  7839                           indf0	equ	0xFEF
  7840                           postinc0	equ	0xFEE
  7841                           postdec0	equ	0xFED
  7842                           preinc0	equ	0xFEC
  7843                           plusw0	equ	0xFEB
  7844                           fsr0h	equ	0xFEA
  7845                           fsr0l	equ	0xFE9
  7846                           wreg	equ	0xFE8
  7847                           indf1	equ	0xFE7
  7848                           postinc1	equ	0xFE6
  7849                           postdec1	equ	0xFE5
  7850                           preinc1	equ	0xFE4
  7851                           plusw1	equ	0xFE3
  7852                           fsr1h	equ	0xFE2
  7853                           fsr1l	equ	0xFE1
  7854                           bsr	equ	0xFE0
  7855                           indf2	equ	0xFDF
  7856                           postinc2	equ	0xFDE
  7857                           postdec2	equ	0xFDD
  7858                           preinc2	equ	0xFDC
  7859                           plusw2	equ	0xFDB
  7860                           fsr2h	equ	0xFDA
  7861                           fsr2l	equ	0xFD9
  7862                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        13
    BSS         690
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     26      75
    BANK0           160     17     127
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    FRAME_AnalogValue@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_MapPosition@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    NVMWrite@source	PTR unsigned char  size(2) Largest target is 2
		 -> NeightAdress8(COMRAM[2]), NeightAdress7(COMRAM[2]), NeightAdress6(COMRAM[2]), NeightAdress5(COMRAM[2]), 
		 -> NeightAdress4(COMRAM[2]), NeightAdress3(COMRAM[2]), NeightAdress2(COMRAM[2]), NeightAdress1(COMRAM[2]), 

    NVMRead@dest	PTR unsigned char  size(2) Largest target is 2
		 -> NeightAdress8(COMRAM[2]), NeightAdress7(COMRAM[2]), NeightAdress6(COMRAM[2]), NeightAdress5(COMRAM[2]), 
		 -> NeightAdress4(COMRAM[2]), NeightAdress3(COMRAM[2]), NeightAdress2(COMRAM[2]), NeightAdress1(COMRAM[2]), 

    NVMalloc@location	PTR unsigned short  size(2) Largest target is 2
		 -> neighborsAdress(COMRAM[2]), ustawieniaKarty(COMRAM[2]), 

    FRAME_HandleCanFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_AdressOfNeighbors@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_PrzypisanieDokarty@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_SoftwareVersion@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_Plot@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_DeviceReset@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_DataUpdateAndChangeOption@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    Dane	PTR struct DaneStruct size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    FRAME_AxisStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_AveragingTimes@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_ExcitationMultiplier@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_ExcitationValue@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_AccelerometerStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_SensorExcitationStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    CAN_GenID@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    CAN_TakeFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    CAN_SendFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    CAN_MoveBuffIntoFrame@Buf	PTR unsigned char  size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), RXB0D0(SFR_3[1]), 

    CAN_MoveBuffIntoFrame@Ram	PTR unsigned char  size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), RXB0D0(SFR_3[1]), 


Critical Paths under _main in COMRAM

    _TRM_DataTransmition->_FRAME_HandleCanFrame
    _FRAME_HandleCanFrame->_FRAME_DeviceReset
    _LED_Error->_LED_Control
    _FRAME_SensorExcitationStatus->_IsInNeighbors
    _FRAME_SensorExcitationStatus->_MOC_Aktualna_Temperatura
    _FRAME_SensorExcitationStatus->_MOC_Frame_Counter
    _FRAME_SensorExcitationStatus->_MOC_NOTWORK
    _FRAME_SensorExcitationStatus->_MOC_Wynikowa_wartosc_roznicowa
    _FRAME_Plot->___lwdiv
    _WriteDataToEEPROM->_NVMWrite
    _NVMWrite->_WritetoEEPROM
    _FRAME_AccelerometerStatus->_MOCK_Klikniecie_Spadek
    _FRAME_AccelerometerStatus->_MOCK_PrzyspieszenieX
    _FRAME_AccelerometerStatus->_MOCK_PrzyspieszenieY
    _FRAME_AccelerometerStatus->_MOCK_PrzyspieszenieZ
    _CAN_SendFrame->_CAN_MoveBuffIntoFrame
    _CAN_TakeFrame->___awdiv
    _LED_Update->_LED_Light_Pos
    _LED_Light_Pos->___lwdiv
    _ReadDataToEEPROM->_NVMRead
    _NVMRead->_ReadfromEEPROM
    _NVMInit->_NVMalloc
    _INI_LED_Start->_LED_Control

Critical Paths under _ISR_low in COMRAM

    _ISR_low->_TMR1_Timer_reset
    _ISR_low->i1_TMR1_Update_flag_Set

Critical Paths under _ISR_high in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_TRM_DataTransmition

Critical Paths under _ISR_low in BANK0

    None.

Critical Paths under _ISR_high in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_low in BANK1

    None.

Critical Paths under _ISR_high in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_low in BANK2

    None.

Critical Paths under _ISR_high in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_low in BANK3

    None.

Critical Paths under _ISR_high in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_low in BANK4

    None.

Critical Paths under _ISR_high in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_low in BANK5

    None.

Critical Paths under _ISR_high in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_low in BANK6

    None.

Critical Paths under _ISR_high in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_low in BANK7

    None.

Critical Paths under _ISR_high in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_low in BANK8

    None.

Critical Paths under _ISR_high in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_low in BANK9

    None.

Critical Paths under _ISR_high in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_low in BANK10

    None.

Critical Paths under _ISR_high in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_low in BANK11

    None.

Critical Paths under _ISR_high in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_low in BANK12

    None.

Critical Paths under _ISR_high in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   30134
                            _INI_All
                         _LED_Update
               _TMR1_Update_flag_Get
               _TMR1_Update_flag_Set
                _TRM_DataTransmition
 ---------------------------------------------------------------------------------
 (1) _TRM_DataTransmition                                 18    18      0   18341
                                              0 BANK0     17    17      0
                      _CAN_TakeFrame
               _FRAME_HandleCanFrame
 ---------------------------------------------------------------------------------
 (2) _FRAME_HandleCanFrame                                 9     7      2   15290
                                             17 COMRAM     9     7      2
                          _CAN_GenID
                      _CAN_SendFrame
          _FRAME_AccelerometerStatus
            _FRAME_AdressOfNeighbors
                  _FRAME_AnalogValue
               _FRAME_AveragingTimes
                   _FRAME_AxisStatus
                  _FRAME_DeviceReset
         _FRAME_ExcitationMultiplier
              _FRAME_ExcitationValue
                  _FRAME_MapPosition
                         _FRAME_Plot
           _FRAME_PrzypisanieDokarty
       _FRAME_SensorExcitationStatus
              _FRAME_SoftwareVersion
                          _LED_Error
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) _LED_Error                                            0     0      0    1756
                        _LED_Control
 ---------------------------------------------------------------------------------
 (3) _FRAME_SoftwareVersion                                3     1      2     305
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_SensorExcitationStatus                         6     4      2     892
                                              7 COMRAM     6     4      2
                      _IsInNeighbors
                           _LOCK_Get
                           _LOCK_Set
           _MOC_Aktualna_Temperatura
                  _MOC_Frame_Counter
                        _MOC_NOTWORK
     _MOC_Wynikowa_wartosc_roznicowa
 ---------------------------------------------------------------------------------
 (4) _MOC_Wynikowa_wartosc_roznicowa                       2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_NOTWORK                                          2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_Frame_Counter                                    2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_Aktualna_Temperatura                             2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _LOCK_Set                                             1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _LOCK_Get                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _IsInNeighbors                                        4     2      2     367
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_PrzypisanieDokarty                             6     4      2     367
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_Plot                                           3     1      2     929
                                             12 COMRAM     3     1      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) _FRAME_MapPosition                                    2     0      2     119
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_ExcitationValue                                3     1      2     212
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_ExcitationMultiplier                           5     3      2     280
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_DeviceReset                                    3     1      2    4178
                                             14 COMRAM     3     1      2
    _FRAME_DataUpdateAndChangeOption
                  _WriteDataToEEPROM
 ---------------------------------------------------------------------------------
 (4) _WriteDataToEEPROM                                    0     0      0    3289
                           _NVMWrite
 ---------------------------------------------------------------------------------
 (5) _NVMWrite                                             6     0      6    3289
                                              8 COMRAM     6     0      6
                      _WritetoEEPROM
 ---------------------------------------------------------------------------------
 (6) _WritetoEEPROM                                        3     0      3     331
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (4) _FRAME_DataUpdateAndChangeOption                      3     1      2     243
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AxisStatus                                     5     3      2     212
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AveragingTimes                                 3     1      2     212
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AnalogValue                                    6     2      4     238
                                              5 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _FRAME_AdressOfNeighbors                             12     8      4    1626
                                              5 COMRAM    10     6      4
                 _CAN_SetupFilter_Ne
 ---------------------------------------------------------------------------------
 (3) _FRAME_AccelerometerStatus                            3     1      2     305
                                              7 COMRAM     3     1      2
             _MOCK_Klikniecie_Spadek
               _MOCK_PrzyspieszenieX
               _MOCK_PrzyspieszenieY
               _MOCK_PrzyspieszenieZ
 ---------------------------------------------------------------------------------
 (4) _MOCK_PrzyspieszenieZ                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOCK_PrzyspieszenieY                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOCK_PrzyspieszenieX                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOCK_Klikniecie_Spadek                               2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _CAN_SendFrame                                        5     3      2    1128
                                             10 COMRAM     5     3      2
              _CAN_MoveBuffIntoFrame
 ---------------------------------------------------------------------------------
 (3) _CAN_GenID                                            5     2      3     455
                                              5 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (2) _CAN_TakeFrame                                        6     4      2    2121
                                             13 COMRAM     6     4      2
              _CAN_MoveBuffIntoFrame
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     811
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _CAN_MoveBuffIntoFrame                                5     1      4     668
                                              5 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) _TMR1_Update_flag_Set                                 2     0      2     202
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR1_Update_flag_Get                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _LED_Update                                           0     0      0    6660
                        _LED_Control
                           _LED_Left
                      _LED_Light_Pos
                          _LED_Right
 ---------------------------------------------------------------------------------
 (2) _LED_Light_Pos                                       11     7      4    4176
                                             12 COMRAM    11     7      4
                        _LED_Control
                           _LED_Left
                          _LED_Right
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     717
                                              5 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _LED_Right                                            6     4      2     364
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _LED_Left                                             4     2      2     364
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _INI_All                                              0     0      0    4931
                          _CAN_Setup
                _INI_GlobalInterrupt
                      _INI_LED_Start
                         _INI_OUTPUT
                          _INI_Timer
                            _NVMInit
                   _ReadDataToEEPROM
 ---------------------------------------------------------------------------------
 (2) _ReadDataToEEPROM                                     0     0      0    2688
                            _NVMRead
 ---------------------------------------------------------------------------------
 (3) _NVMRead                                              6     0      6    2688
                                              7 COMRAM     6     0      6
                     _ReadfromEEPROM
 ---------------------------------------------------------------------------------
 (4) _ReadfromEEPROM                                       2     0      2     147
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _NVMInit                                              1     1      0     487
                                             11 COMRAM     1     1      0
                           _NVMalloc
 ---------------------------------------------------------------------------------
 (3) _NVMalloc                                             6     2      4     478
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _INI_Timer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INI_OUTPUT                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INI_LED_Start                                        0     0      0    1756
                        _LED_Control
 ---------------------------------------------------------------------------------
 (4) _LED_Control                                          5     3      2    1756
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _INI_GlobalInterrupt                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CAN_Setup                                            1     1      0       0
                                              5 COMRAM     1     1      0
                     _CAN_SetupClock
                      _CAN_SetupMask
 ---------------------------------------------------------------------------------
 (3) _CAN_SetupMask                                        0     0      0       0
                 _CAN_SetupFilter_Ne
 ---------------------------------------------------------------------------------
 (4) _CAN_SetupFilter_Ne                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CAN_SetupClock                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR_low                                              3     3      0      76
                                              2 COMRAM     3     3      0
                   _TMR1_Timer_reset
             i1_TMR1_Update_flag_Set
 ---------------------------------------------------------------------------------
 (8) i1_TMR1_Update_flag_Set                               2     0      2      48
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (8) _TMR1_Timer_reset                                     2     2      0      28
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_high                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _INI_All
     _CAN_Setup
       _CAN_SetupClock
       _CAN_SetupMask
         _CAN_SetupFilter_Ne
     _INI_GlobalInterrupt
     _INI_LED_Start
       _LED_Control
     _INI_OUTPUT
     _INI_Timer
     _NVMInit
       _NVMalloc
     _ReadDataToEEPROM
       _NVMRead
         _ReadfromEEPROM
   _LED_Update
     _LED_Control
     _LED_Left
     _LED_Light_Pos
       _LED_Control
       _LED_Left
       _LED_Right
       ___lwdiv
     _LED_Right
   _TMR1_Update_flag_Get
   _TMR1_Update_flag_Set
   _TRM_DataTransmition
     _CAN_TakeFrame
       _CAN_MoveBuffIntoFrame
       ___awdiv
     _FRAME_HandleCanFrame
       _CAN_GenID
       _CAN_SendFrame
         _CAN_MoveBuffIntoFrame
       _FRAME_AccelerometerStatus
         _MOCK_Klikniecie_Spadek
         _MOCK_PrzyspieszenieX
         _MOCK_PrzyspieszenieY
         _MOCK_PrzyspieszenieZ
       _FRAME_AdressOfNeighbors
         _CAN_SetupFilter_Ne
       _FRAME_AnalogValue
       _FRAME_AveragingTimes
       _FRAME_AxisStatus
       _FRAME_DeviceReset
         _FRAME_DataUpdateAndChangeOption
         _WriteDataToEEPROM
           _NVMWrite
             _WritetoEEPROM
       _FRAME_ExcitationMultiplier
       _FRAME_ExcitationValue
       _FRAME_MapPosition
       _FRAME_Plot
         ___lwdiv
       _FRAME_PrzypisanieDokarty
       _FRAME_SensorExcitationStatus
         _IsInNeighbors
         _LOCK_Get
         _LOCK_Set
         _MOC_Aktualna_Temperatura
         _MOC_Frame_Counter
         _MOC_NOTWORK
         _MOC_Wynikowa_wartosc_roznicowa
       _FRAME_SoftwareVersion
       _LED_Error
         _LED_Control
       ___awdiv

 _ISR_low (ROOT)
   _TMR1_Timer_reset
   i1_TMR1_Update_flag_Set

 _ISR_high (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0     220      31       16.4%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     11      7F       5       79.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1A      4B       1       79.8%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      CA      20        0.0%
DATA                 0      0     2EA       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Fri Jul 26 09:29:09 2019

               __end_of_FRAME_DeviceReset 0BBA                     ?_FRAME_AveragingTimes 002A  
                            ___awdiv@sign 002F                                        bsr 000FE0  
                             __CFG_BORV$3 000000                         ?_FRAME_AxisStatus 002A  
                       _FRAME_MapPosition 1A94                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            NVMRead@count 0030                              __CFG_CP3$OFF 000000  
                       WritetoEEPROM@Data 002C                        __size_of_CAN_GenID 0078  
                                     l412 09CA                                       l280 07CC  
                                     l281 07CA                                       l290 03AC  
                                     l291 0342                                       l292 0348  
                                     l293 034E                                       l294 0354  
                                     l295 035A                                       l384 120C  
                                     l296 0360                               ?_LED_Update 0025  
                                     l297 0366                                       l289 033C  
                                     l920 1860                                       l912 1858  
                                     l688 07AA                                       l929 1754  
                                     l689 07A2                              __CFG_CPB$OFF 000000  
                      ??_FRAME_AxisStatus 002C                              __CFG_CPD$OFF 000000  
                      ?_FRAME_MapPosition 002A                        __size_of_CAN_Setup 0064  
                            __CFG_IDLOC0$ 000004                              ?_LED_Control 002A  
                                     wreg 000FE8                     __end_of_CAN_TakeFrame 05AA  
                             ?_INI_OUTPUT 0025                    __size_of_INI_LED_Start 0034  
                           NVMInit@result 0030                  ??_MOCK_Klikniecie_Spadek 002C  
                   __end_of_CAN_SendFrame 0922                              __CFG_LVP$OFF 000000  
                         _neighborsAdress 0015                 TRM_DataTransmition@weWyU8 0011  
            __size_of_INI_GlobalInterrupt 000E                       ??_FRAME_MapPosition 002C  
                            __CFG_WDT$OFF 000000                                      l4001 0EBA  
                                    l3131 1688                                      l1427 15B0  
                                    l4013 0EEA                                      l3303 180E  
                                    l4031 0F32                                      l4007 0ED2  
                                    l4025 0F1A                           __end_of_INI_All 198E  
                                    l3147 16CE                                      l4019 0F02  
                                    l4221 15E6                                      l4037 0F4A  
                                    l3257 1888                                      l4321 117A  
                                    l4313 115C                                      l4153 0866  
                                    l4067 157E                                      l4331 119A  
                                    l4307 114C                                      l4411 0536  
                                    l4403 04FE                                      l4251 0B74  
                                    l4243 0B36                                      l4069 1586  
                                    l4421 055E                                      l4413 053E  
                                    l4405 0518                                      l4157 091A  
                                    l4501 0616                                      l4079 15A6  
                                    l4319 1172                                      l4335 11A4  
                                    l4415 0546                                      l4407 052A  
                                    l4255 0B96                                      l4183 0C5C  
                                    l4511 065C                                      l4503 0624  
                                    l4345 13FC                                      l4417 054E  
                                    l4409 0530                                      l4425 0566  
                                    l4265 154A                                      l4193 0CBE  
                                    l4513 066A                                      l4505 0632  
                                    l4339 11B2                                      l4419 0556  
                                    l4427 05A6                                      l4363 036C  
                                    l4259 0BA8                                      l4275 105A  
                                    l4515 0684                                      l4507 0640  
                                    l4523 06BE                                      l4357 144E  
                                    l4381 0484                                      l4293 0266  
                                    l4189 0CA2                                      l4517 0692  
                                    l4509 064E                                      l4525 0728  
                                    l3903 09C4                                      l4391 04AA  
                                    l4383 048A                                      l4295 026C  
                                    l4287 011C                                      l4519 06A8  
                                    l3921 09FA                                      l4465 0FB6  
                                    l4473 0FEC                                      l4393 04B2  
                                    l4385 0492                                      l4289 019E  
                                    l3915 09EA                                      l4467 0FC0  
                                    l4459 0F8A                                      l3835 18FA  
                                    l4387 049A                                      l4379 047E  
                                    l3933 0A1A                                      l3909 09DA  
                                    l3861 0954                                      l4389 04A2  
                                    l4397 04BA                                      l4493 05DE  
                                    l4573 1634                                      l3951 0A4A  
                                    l3927 0A0A                                      l3855 0944  
                                    l4559 11E8                                      l4399 04FA  
                                    l4495 05EC                                      l3945 0A3A  
                                    l3873 0974                                      l3849 0934  
                                    l3793 177E                                      l4497 05FA  
                                    l3963 0A6C                                      l3939 0A2A  
                                    l3891 09A4                                      l3867 0964  
                                    l4499 0608                                      l4587 18CC  
                                    l3957 0A5A                                      l3885 0994  
                                    l4597 18EE                                      _BIE0 000DFA  
                                    l3879 0984                                      l3897 09B4  
                                    l3995 0EA2                         _MOC_Frame_Counter 19F6  
                                    _LATA 000F89                                      u2310 158A  
                                    _LATB 000F8A                                      _LATC 000F8B  
                                    _LATD 000F8C                                      _LATE 000F8D  
                                    u2500 0ADC                                      u2506 0ADE  
                                    u2450 15F6                                      u2375 083C  
                                    _IPR3 000FA5                                      u2640 117E  
                                    _IPEN 007E87                                      u2705 0416  
                                    _PIE3 000FA3                                      u2490 0AC4  
                                    u2750 0FF4                                      u2496 0AC6  
                                    u1955 1854                                      _PEIE 007F96  
                                    u1956 1856                                      _LOCK 0014  
                                    _PIR3 000FA4                                      _RCON 000FD0  
             ??_FRAME_AccelerometerStatus 002E                                      _Dane 000D  
                         __end_of_ISR_low 005E                          LED_Control@diode 002A  
                    FRAME_AnalogValue@set 002C                        ?_MOC_Frame_Counter 002A  
                                    _main 18C6                          LED_Control@color 002E  
                         __end_of_NVMInit 171C                           __end_of_NVMRead 1892  
                                    fsr1h 000FE2                                      fsr2h 000FDA  
                                    indf1 000FE7                                      indf2 000FDF  
                                    fsr1l 000FE1                                      fsr2l 000FD9  
                                    btemp 004C                            _CAN_SetupClock 1920  
                                    prodh 000FF4                                      prodl 000FF3  
                   __end_of_CAN_SetupMask 1392             __size_of_TMR1_Update_flag_Get 000A  
                                    start 005E             __size_of_TMR1_Update_flag_Set 000A  
                      __size_of_LED_Error 001E                             __CFG_IESO$OFF 000000  
                      __size_of_LED_Right 004C             __size_of_FRAME_HandleCanFrame 0206  
                           _LED_Light_Pos 0F54                             __CFG_MCLRE$ON 000000  
                            ___param_bank 000000                       ??_MOC_Frame_Counter 002C  
              ??_MOC_Aktualna_Temperatura 002C         FRAME_HandleCanFrame@identyfikator 003E  
                      __size_of_INI_Timer 0018                 __end_of_FRAME_MapPosition 1A96  
                           _NeightAdress1 004A                             _NeightAdress2 0048  
                           _NeightAdress3 0023                             _NeightAdress4 0021  
                           _NeightAdress5 001F                             _NeightAdress6 001D  
                           _NeightAdress7 001B                             _NeightAdress8 0019  
                        __end_of_LED_Left 16E2             __size_of_MOCK_PrzyspieszenieX 000A  
           __size_of_MOCK_PrzyspieszenieY 000A             __size_of_MOCK_PrzyspieszenieZ 000A  
                   ReadfromEEPROM@Address 002A                                     _B0CON 000E20  
                                   _B1CON 000E30                                     _B2CON 000E40  
                                   _B3CON 000E50                                     _B4CON 000E60  
                                   _B5CON 000E70                          __end_of_LOCK_Get 1A94  
                                   ?_main 0025                          __end_of_LOCK_Set 1A8A  
                         __end_of___awdiv 11BC                                     _EEADR 000FA9  
                                   _BSEL0 000DF8                           ___awdiv@divisor 002C  
                                   _T1CON 000FCD                                     _IRCF0 007E9C  
                                   _IRCF1 007E9D         FRAME_ExcitationMultiplier@message 002A  
                                   _IRCF2 007E9E                           __end_of___lwdiv 15BA  
                                   i1l775 004E                       __size_of_FRAME_Plot 0058  
                         ___awdiv@counter 002E                                     _MSEL0 000DF0  
                                   _MSEL1 000DF1                                     _MSEL2 000DF2  
                                   _MSEL3 000DF3                                     _TMR1H 000FCF  
                                   _TMR1L 000FCE                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
                                   _TRISD 000F95                                     _TRISE 000F96  
                           __CFG_PWRT$OFF 000000                                     _Flagi 00C6  
                  ?_CAN_MoveBuffIntoFrame 002A                             __CFG_WRT0$OFF 000000  
              __size_of_FRAME_AnalogValue 0002                             __CFG_WRT1$OFF 000000  
                           __CFG_WRT2$OFF 000000                             __CFG_WRT3$OFF 000000  
                          __CFG_EBTR0$OFF 000000                            __CFG_FCMEN$OFF 000000  
                          __CFG_EBTR1$OFF 000000                            __CFG_EBTR2$OFF 000000  
                          __CFG_EBTR3$OFF 000000                          __end_of_ISR_high 1A90  
                           __CFG_WRTB$OFF 000000                             __CFG_WRTC$OFF 000000  
                           __CFG_WRTD$OFF 000000                 __end_of_MOC_Frame_Counter 1A04  
                          __CFG_EBTRB$OFF 000000                   i1TMR1_Update_flag_Set@a 0025  
                            ?_MOC_NOTWORK 002A                 __size_of_ReadDataToEEPROM 00E2  
                        __end_of_NVMWrite 1788                          __end_of_NVMalloc 182A  
                                   tablat 000FF5                    __end_of_CAN_SetupClock 1948  
                                   ttemp5 004D                                     ttemp6 0050  
                                   ttemp7 0054                                     status 000FD8  
                                   wtemp8 004D                         __end_of_CAN_GenID 12AE  
                          __CFG_PBADEN$ON 000000                       __size_of_LED_Update 007A  
                          ?_LED_Light_Pos 0031                          _TMR1_Timer_reset 1948  
                       __end_of_CAN_Setup 145C                             _INI_LED_Start 1892  
                   _FRAME_ExcitationValue 171C          FRAME_AccelerometerStatus@message 002C  
                         __initialization 145C                       __size_of_INI_OUTPUT 0020  
                        CAN_GenID@frameID 002C                              __end_of_main 18F6  
                  ??_FRAME_AveragingTimes 002C                __size_of_FRAME_DeviceReset 0146  
                ?_FRAME_AdressOfNeighbors 002A                    __size_of_WritetoEEPROM 0034  
                        CAN_GenID@message 002A                 _FRAME_AccelerometerStatus 12AE  
                                  ??_main 003F                    CAN_MoveBuffIntoFrame@i 002E  
                           __activetblptr 000002                              NVMWrite@addr 002F  
                        _TMR1_Update_flag 000B                   WritetoEEPROM@GIE_Status 000F  
                   __end_of_IsInNeighbors 0F54                           _wartosciSasiada 00DF  
                               ??_INI_All 0032                         __end_of_LED_Error 19CC  
                       __end_of_LED_Right 16A0                      WritetoEEPROM@Address 002A  
         __size_of_MOCK_Klikniecie_Spadek 000A                                 ??_ISR_low 0027  
                               ??_NVMInit 0030                                 ??_NVMRead 0032  
                                  _CANCON 000F6F                                    _EEADRH 000FAA  
                                  _EEDATA 000FA8                                    _EECON2 000FA7  
                        ___awdiv@dividend 002A               FRAME_ExcitationMultiplier@i 002D  
                                  _CIOCON 000F73                           __CFG_BBSIZ$1024 000000  
                       __end_of_INI_Timer 19E4                                    i1l3679 004C  
                         ?_CAN_SetupClock 0025                                    _RXB0D0 000F66  
                                  _TMR1IE 007CE8                                    _TMR1IF 007CF0  
                                  _TMR1IP 007CF8                                    _TMR1ON 007E68  
            ??_FRAME_ExcitationMultiplier 002C                            ?_INI_LED_Start 0025  
                          __CFG_XINST$OFF 000000                                 ??___awdiv 002E  
                          __CFG_STVREN$ON 000000                          LED_Light_Pos@pos 0031  
              __size_of_FRAME_MapPosition 0002                                 ??___lwdiv 002E  
                                  clear_0 1484                                    clear_1 1496  
                                  clear_2 14A2                          ___awdiv@quotient 0030  
                            NVMalloc@size 002A                ??_FRAME_PrzypisanieDokarty 002C  
                ??i1_TMR1_Update_flag_Set 0027                           __CFG_BOREN$BOHW 000000  
                 __size_of_ReadfromEEPROM 0012                              __pdataCOMRAM 003F  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8       __size_of_FRAME_ExcitationMultiplier 004E  
              __size_of_MOC_Frame_Counter 000E                      __size_of_LED_Control 0152  
                           _WritetoEEPROM 182A                  FRAME_MapPosition@message 002A  
                   TMR1_Update_flag_Set@a 002A                                __accesstop 0060  
                 __end_of__initialization 14A8                              ??_FRAME_Plot 0033  
                     ISR_low@ramkaStanuU8 0012                                 ?_LED_Left 002A  
                         ??_LED_Light_Pos 0035                             ___rparam_used 000001  
                  ?_FRAME_ExcitationValue 002A                                 ?_LOCK_Get 0025  
                               ?_LOCK_Set 0025           __end_of_FRAME_AdressOfNeighbors 032E  
                  _MOCK_Klikniecie_Spadek 1A52                            __pcstackCOMRAM 0025  
                               LED_Left@a 002A                                 LED_Left@b 002C  
                     _INI_GlobalInterrupt 1A04                                 ?_ISR_high 0025  
                               ?_NVMWrite 002D                                 ?_NVMalloc 002A  
                            ??_LED_Update 003C               __end_of_TRM_DataTransmition 1654  
                   _FRAME_SoftwareVersion 1392                        __end_of_FRAME_Plot 1568  
                            ??_INI_OUTPUT 002A                                 LOCK_Set@k 002A  
                 FRAME_AxisStatus@message 002A               IsInNeighbors@message_adress 002A  
                          ?_WritetoEEPROM 002A                      ?_INI_GlobalInterrupt 0025  
                        _ReadDataToEEPROM 0DA8                 __size_of_FRAME_AxisStatus 0036  
                              __pbssBANK0 0060               __size_of_CAN_SetupFilter_Ne 0096  
                           NVMWrite@count 0031                      __size_of_MOC_NOTWORK 0008  
                         ??_INI_LED_Start 002F                                ??_LED_Left 002C  
                              ??_LOCK_Get 002A                                ??_LOCK_Set 002A  
                      __end_of_LED_Update 1236                        __end_of_INI_OUTPUT 19AE  
                              ??_ISR_high 0025                       TMR1_Timer_reset@t1H 0026  
                     TMR1_Timer_reset@t1L 0025                                   _ECANCON 000F77  
                                 _CANSTAT 000F6E                                ??_NVMWrite 0033  
                 ??_CAN_MoveBuffIntoFrame 002E                                ??_NVMalloc 002E  
            __end_of_TMR1_Update_flag_Get 1A70              __end_of_TMR1_Update_flag_Set 1A66  
         __size_ofi1_TMR1_Update_flag_Set 000A              __end_of_FRAME_HandleCanFrame 07B0  
                                 _INI_All 196C                  __end_of_TMR1_Timer_reset 196C  
                                 _RXB0DLC 000F65                                   _RXB0CON 000F60  
                                 _RXB1CON 000F50                     ??_INI_GlobalInterrupt 002A  
                                 _TXB0CON 000F40                                   _ISR_low 0018  
                                 _NVMInit 16E2                                   _NVMRead 185E  
                                 _DaneCan 0001              __end_of_MOCK_PrzyspieszenieX 1A52  
            __end_of_MOCK_PrzyspieszenieY 1A48              __end_of_MOCK_PrzyspieszenieZ 1A3E  
      __end_of_FRAME_ExcitationMultiplier 1608                _FRAME_ExcitationMultiplier 15BA  
             FRAME_HandleCanFrame@message 0036                                   __Hparam 0000  
        ??_MOC_Wynikowa_wartosc_roznicowa 002C           ?_MOC_Wynikowa_wartosc_roznicowa 002A  
                                 __Lparam 0000                    __size_of_CAN_TakeFrame 027C  
                               _CAN_GenID 1236                                   ___awdiv 1138  
                               _CAN_Setup 13F8                    __size_of_CAN_SendFrame 0172  
                                 ___lwdiv 1568                         LED_Light_Pos@pos2 0038  
                                 __pcinit 145C                                   __ramtop 0D00  
  FRAME_DataUpdateAndChangeOption@message 002A                                   __ptext0 18C6  
                                 __ptext1 1608                                   __ptext2 05AA  
                                 __ptext3 19AE                                   __ptext4 1392  
                                 __ptext5 0BBA                                   __ptext6 1A20  
                                 __ptext7 1A7A                                   __ptext8 19F6  
                                 __ptext9 1A2A                    ?_FRAME_SoftwareVersion 002A  
                          _ReadfromEEPROM 19E4                           ??_WritetoEEPROM 002D  
                  __size_of_CAN_SetupMask 006E         __size_of_MOC_Aktualna_Temperatura 000A  
          FRAME_AdressOfNeighbors@nrRamki 002C                 ?_MOC_Aktualna_Temperatura 002A  
        __size_of_FRAME_AdressOfNeighbors 02CC                          ??_CAN_SetupClock 002A  
          FRAME_AdressOfNeighbors@message 002A                                 _LED_Error 19AE  
                          __pintcode_body 1A8A                                 _LED_Right 1654  
                    end_of_initialization 14A8      FRAME_SensorExcitationStatus@statwect 0009  
                           __Lmediumconst 0000                                   int_func 1A8A  
                               _INI_Timer 19CC                    i1_TMR1_Update_flag_Set 1A70  
        TRM_DataTransmition@czujnikWeWyU8 0010                                ?_CAN_GenID 002A  
                                 postdec1 000FE5                                   postdec2 000FDD  
                                 postinc0 000FEE                                   postinc2 000FDE  
                              ?_CAN_Setup 0025             __size_of_FRAME_AveragingTimes 0036  
                  __end_of_ReadfromEEPROM 19F6                      CAN_SendFrame@message 002F  
                        NVMalloc@location 002C                             LED_Update@Red 0013  
                           _CAN_TakeFrame 032E                               NVMRead@addr 002E  
                           _CAN_SendFrame 07B0                                ?_LED_Error 0025  
                             NVMRead@dest 002C               FRAME_AdressOfNeighbors@kier 0032  
                              ?_LED_Right 002A                          _FRAME_AxisStatus 1788  
                 ??_FRAME_ExcitationValue 002C                                ?_INI_Timer 0025  
                 ?_MOCK_Klikniecie_Spadek 002A                           _ramkaCanRxKarty 0060  
                    _TMR1_Update_flag_Get 1A66                           _ramkaCanTxKarty 00B5  
                    _TMR1_Update_flag_Set 1A5C                             _CAN_SetupMask 1324  
                       __size_of_LED_Left 0042                      _FRAME_HandleCanFrame 05AA  
                  __size_of_IsInNeighbors 00CA                         __size_of_LOCK_Get 0004  
                       __size_of_LOCK_Set 0008                         _WriteDataToEEPROM 0CC6  
                __end_of_ReadDataToEEPROM 0E8A                            CAN_TakeFrame@k 0037  
                      ?_WriteDataToEEPROM 0025                           ?_ReadfromEEPROM 002A  
                           __pidataCOMRAM 1A12                         __size_of_ISR_high 1A88  
                    _MOCK_PrzyspieszenieX 1A48                      _MOCK_PrzyspieszenieY 1A3E  
                    _MOCK_PrzyspieszenieZ 1A34                                LED_Right@a 002A  
                              LED_Right@b 002E                     MOC_Frame_Counter@zeta 003F  
                       __size_of_NVMWrite 0036                             ??_LED_Control 002C  
                     ??_WriteDataToEEPROM 0033                         __size_of_NVMalloc 0036  
                     start_initialization 145C                            ?_CAN_TakeFrame 0032  
                          ?_CAN_SendFrame 002F           FRAME_SensorExcitationStatus@tru 0030  
          __end_of_MOCK_Klikniecie_Spadek 1A5C                          __CFG_OSC$IRCIO67 000000  
       __size_of_FRAME_PrzypisanieDokarty 009E                 ?_FRAME_PrzypisanieDokarty 002A  
                   ?_TMR1_Update_flag_Get 002A                     ?_TMR1_Update_flag_Set 002A  
                          ?_CAN_SetupMask 0025                     __end_of_LED_Light_Pos 1004  
                   ?_FRAME_HandleCanFrame 0036                 __end_of_WriteDataToEEPROM 0DA8  
                             ??_CAN_GenID 002D                               ??_CAN_Setup 002A  
                        __CFG_LPT1OSC$OFF 000000                     ?_MOCK_PrzyspieszenieX 002A  
                   ?_MOCK_PrzyspieszenieY 002A                     ?_MOCK_PrzyspieszenieZ 002A  
                CAN_MoveBuffIntoFrame@Buf 002C      __end_of_FRAME_SensorExcitationStatus 0CC6  
   __size_of_FRAME_SensorExcitationStatus 010C                  CAN_MoveBuffIntoFrame@Ram 002A  
            _FRAME_SensorExcitationStatus 0BBA            __size_of_CAN_MoveBuffIntoFrame 002A  
                             __pbssBIGRAM 00DF             __end_of_CAN_MoveBuffIntoFrame 1920  
                         _Fulfillment_Lvl 0045                               __pbssCOMRAM 0001  
                                ?_INI_All 0025                   _FRAME_AdressOfNeighbors 0062  
                           __pcstackBANK0 00CE                             _IsInNeighbors 0E8A  
                       ?_TMR1_Timer_reset 0025                           _ustawieniaKarty 0017  
                             _BRGCON1bits 000F70                               _BRGCON2bits 000F71  
                             _BRGCON3bits 000F72                                  ?_ISR_low 0025  
 __end_of_FRAME_DataUpdateAndChangeOption 1510  __size_of_FRAME_DataUpdateAndChangeOption 005A  
       ??_FRAME_DataUpdateAndChangeOption 002C          ?_FRAME_DataUpdateAndChangeOption 002A  
         _FRAME_DataUpdateAndChangeOption 14B6                             ??_MOC_NOTWORK 002C  
              __end_of_CAN_SetupFilter_Ne 1138                                  ?_NVMInit 0025  
                                ?_NVMRead 002C                        ??_TMR1_Timer_reset 0025  
                             ??_LED_Error 002F                            NVMWrite@source 002D  
                             ??_LED_Right 002C              __size_of_TRM_DataTransmition 004C  
                     __end_of_LED_Control 0A74               ?_FRAME_ExcitationMultiplier 002A  
                             ??_INI_Timer 002A                     __end_of_INI_LED_Start 18C6  
                        ___lwdiv@dividend 002A                                 __pintcode 0008  
                                ?___awdiv 002A                   ??_FRAME_SoftwareVersion 002C  
        __end_of_MOC_Aktualna_Temperatura 1A34                                  ?___lwdiv 002A  
                       FRAME_Plot@message 0031                               __pintcodelo 0018  
             __end_of_INI_GlobalInterrupt 1A12                           ??_CAN_TakeFrame 0034  
           ?_FRAME_SensorExcitationStatus 002C    __end_of_MOC_Wynikowa_wartosc_roznicowa 1A2A  
 __size_of_MOC_Wynikowa_wartosc_roznicowa 000A            _MOC_Wynikowa_wartosc_roznicowa 1A20  
                             _COMSTATbits 000F74                            ?_IsInNeighbors 002A  
                         ??_CAN_SendFrame 0031                          ___lwdiv@quotient 002F  
                 ?i1_TMR1_Update_flag_Set 0025               FRAME_AveragingTimes@message 002A  
                  ??_TMR1_Update_flag_Get 002C                    ??_TMR1_Update_flag_Set 002C  
                         ??_CAN_SetupMask 002A                                  _LED_Left 16A0  
                  ??_FRAME_HandleCanFrame 0038                      CAN_TakeFrame@message 0032  
                     __end_of_MOC_NOTWORK 1A82                                  _LOCK_Get 1A90  
                    CAN_TakeFrame@tempCON 0036                                  _LOCK_Set 1A82  
              __size_of_WriteDataToEEPROM 00E2                                  _RXB0EIDH 000F63  
                                _RXB0EIDL 000F64                                  _RCONbits 000FD0  
                        __CFG_WDTPS$32768 000000                                  _RXB0SIDH 000F61  
                                _RXB0SIDL 000F62                                  _RXF0EIDH 000F02  
                                _RXF0EIDL 000F03                                  _RXF1EIDH 000F06  
                                _RXF1EIDL 000F07                                  _RXF2EIDH 000F0A  
                                _RXF2EIDL 000F0B                                  _RXF3EIDH 000F0E  
                                _RXF3EIDL 000F0F                                  _RXF4EIDH 000F12  
                                _RXF4EIDL 000F13                                  _RXF5EIDH 000F16  
                                _RXF5EIDL 000F17                                  _RXF6EIDH 000D62  
                                _RXF6EIDL 000D63                                  _RXF0SIDH 000F00  
                                _RXF7EIDH 000D66                                  _RXF0SIDL 000F01  
                                _RXF7EIDL 000D67                                  _RXF1SIDH 000F04  
                                _RXF8EIDH 000D6A                                  _RXF1SIDL 000F05  
                                _RXF8EIDL 000D6B                                  _RXF2SIDH 000F08  
                                _RXF9EIDH 000D72                                  _RXF2SIDL 000F09  
                                _RXF9EIDL 000D73                                  _RXF3SIDH 000F0C  
                                _RXF3SIDL 000F0D                                  _ISR_high 0008  
                                _RXF4SIDH 000F10                                  _RXF4SIDL 000F11  
                                _RXF5SIDH 000F14                                  _RXF5SIDL 000F15  
                                _RXF6SIDH 000D60                                  _RXF6SIDL 000D61  
                                _RXM0EIDH 000F1A                                  _RXF7SIDH 000D64  
                                _RXM0EIDL 000F1B                                  _RXF7SIDL 000D65  
                                _RXM1EIDH 000F1E                                  _RXF8SIDH 000D68  
                                _RXM1EIDL 000F1F                                  _RXF8SIDL 000D69  
                                _RXF9SIDH 000D70                    ??_MOCK_PrzyspieszenieX 002C  
                  ??_MOCK_PrzyspieszenieY 002C                                  _RXF9SIDL 000D71  
                  ??_MOCK_PrzyspieszenieZ 002C                                  _RXFBCON0 000DE0  
                                _RXFBCON1 000DE1                                  _RXFBCON2 000DE2  
                                _RXFBCON3 000DE3                                  _RXFBCON4 000DE4  
                                _RXM0SIDH 000F18                                  _RXM0SIDL 000F19  
                                _RXM1SIDH 000F1C                                  _RXM1SIDL 000F1D  
                __end_of_FRAME_AxisStatus 17BE                                  _NVMWrite 1752  
                                _NVMalloc 17F4                 ??_FRAME_AdressOfNeighbors 002E  
                        _DetectorLedRadar 00CB                               _LED_Control 0922  
                        __size_of_INI_All 0022              FRAME_ExcitationValue@message 002A  
                   __end_of_WritetoEEPROM 185E            __end_ofi1_TMR1_Update_flag_Set 1A7A  
                          _nextEEPosition 0005                                 copy_data0 1470  
                        __size_of_ISR_low 0046        __size_of_FRAME_AccelerometerStatus 0076  
            __end_of_FRAME_AveragingTimes 17F4                          __size_of_NVMInit 003A  
                        __size_of_NVMRead 0034                ?_FRAME_AccelerometerStatus 002C  
          __size_of_FRAME_ExcitationValue 0036             __end_of_FRAME_ExcitationValue 1752  
                              _EECON1bits 000FA6                                  __Hrparam 0000  
                            _RXB0SIDLbits 000F62                          ??_ReadfromEEPROM 002C  
                                __Lrparam 0000                         ?_ReadDataToEEPROM 0025  
                        __size_of___awdiv 0084                          __size_of___lwdiv 0052  
                      ??_ReadDataToEEPROM 0032                           ??_IsInNeighbors 002C  
                _MOC_Aktualna_Temperatura 1A2A           FRAME_PrzypisanieDokarty@message 002A  
                      LED_Light_Pos@flage 003A                        LED_Light_Pos@color 0035  
        __end_of_FRAME_PrzypisanieDokarty 10A2                              _RXF0SIDLbits 000F01  
                FRAME_AnalogValue@message 002A                           ___lwdiv@divisor 002C  
                            _RXF1SIDLbits 000F05                           ___lwdiv@counter 002E  
                                __ptext10 1A82                                  __ptext11 1A90  
                                __ptext20 1752                                  __ptext12 0E8A  
                                __ptext21 182A                                  __ptext13 1004  
                                __ptext30 1A48                                  __ptext22 14B6  
                                __ptext14 1510                                  __ptext31 1A52  
                                __ptext23 1788                                  __ptext15 1A94  
                                __ptext40 0F54                                  __ptext32 07B0  
                                __ptext24 17BE                                  __ptext16 171C  
                                __ptext41 1568                                  __ptext33 1236  
                                __ptext25 1A96                                  __ptext17 15BA  
                                __ptext50 19CC                                  __ptext42 1654  
                                __ptext34 032E                                  __ptext26 0062  
                                __ptext18 0A74                                  __ptext51 198E  
                                __ptext43 16A0                                  __ptext35 1138  
                                __ptext27 12AE                                  __ptext19 0CC6  
                                __ptext60 1A70                                  __ptext52 1892  
                                __ptext44 196C                                  __ptext36 18F6  
                                __ptext28 1A34            ??_FRAME_SensorExcitationStatus 002E  
                                __ptext61 1948                                  __ptext53 0922  
                                __ptext45 0DA8                                  __ptext37 1A5C  
                                __ptext29 1A3E                                  __ptext54 1A04  
                                __ptext46 185E                                  __ptext38 1A66  
                                __ptext55 13F8                                  __ptext47 19E4  
                                __ptext39 11BC                                  __ptext56 1324  
                                __ptext48 16E2                                  __ptext57 10A2  
                                __ptext49 17F4                                  __ptext58 1920  
           TRM_DataTransmition@canMessage 00CE                              _RXF2SIDLbits 000F09  
                             _MOC_NOTWORK 1A7A                              _RXF3SIDLbits 000F0D  
               FRAME_HandleCanFrame@ident 003C                              _RXF4SIDLbits 000F11  
                FRAME_DeviceReset@message 0033         __end_of_FRAME_AccelerometerStatus 1324  
                            _RXF5SIDLbits 000F15                                _FRAME_Plot 1510  
                           __size_of_main 0030                              _RXF6SIDLbits 000D61  
                            _RXF7SIDLbits 000D65                   __size_of_CAN_SetupClock 0028  
                            _RXF8SIDLbits 000D69                              _RXF9SIDLbits 000D71  
                                int$flags 004C                       _TRM_DataTransmition 1608  
                             _RXB0DLCbits 000F65                                _LED_Update 11BC  
                             _RXB0CONbits 000F60                                _INTCONbits 000FF2  
                              _INI_OUTPUT 198E                         _FRAME_AnalogValue 1A96  
                    ?_TRM_DataTransmition 0025              FRAME_SoftwareVersion@message 002A  
                                intlevel1 0000                                  intlevel2 0000  
                         _czujnikiNaMapie 0007                        ?_FRAME_AnalogValue 002A  
     FRAME_SensorExcitationStatus@message 002C                               _TXB0CONbits 000F40  
                     ??_FRAME_AnalogValue 002E                 __size_of_TMR1_Timer_reset 0024  
                      _CAN_SetupFilter_Ne 10A2                  LED_Light_Pos@fulfillment 0033  
                    _FRAME_AveragingTimes 17BE                       ?_CAN_SetupFilter_Ne 0025  
          __size_of_FRAME_SoftwareVersion 0066                         _FRAME_DeviceReset 0A74  
           __end_of_FRAME_SoftwareVersion 13F8                        ?_FRAME_DeviceReset 0033  
                         LED_Update@Green 0047                 __end_of_FRAME_AnalogValue 1A98  
                  __size_of_LED_Light_Pos 00B0                     _CAN_MoveBuffIntoFrame 18F6  
                              _WDTCONbits 000FD1                       ??_FRAME_DeviceReset 0035  
                   ??_TRM_DataTransmition 003F                  _FRAME_PrzypisanieDokarty 1004  
                  LED_Light_Pos@LED_array 0036                      ??_CAN_SetupFilter_Ne 002A  
                          LED_Update@pos1 0043                            LED_Update@pos2 0041  
                             ?_FRAME_Plot 0031  
