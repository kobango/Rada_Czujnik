

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Aug 20 15:31:35 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4680
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    80                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    81                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    82                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    83                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    84  0000                     
    85                           ; Version 2.05
    86                           ; Generated 20/12/2018 GMT
    87                           ; 
    88                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    89                           ; All rights reserved.
    90                           ; 
    91                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    92                           ; 
    93                           ; Redistribution and use in source and binary forms, with or without modification, are
    94                           ; permitted provided that the following conditions are met:
    95                           ; 
    96                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    97                           ;        conditions and the following disclaimer.
    98                           ; 
    99                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   100                           ;        of conditions and the following disclaimer in the documentation and/or other
   101                           ;        materials provided with the distribution.
   102                           ; 
   103                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   104                           ;        software without specific prior written permission.
   105                           ; 
   106                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   107                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   108                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   109                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   110                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   111                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   112                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   113                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   114                           ; 
   115                           ; 
   116                           ; Code-generator required, PIC18F4680 Definitions
   117                           ; 
   118                           ; SFR Addresses
   119  0000                     
   120                           	psect	idataCOMRAM
   121  002B14                     __pidataCOMRAM:
   122                           	opt callstack 0
   123                           
   124                           ;initializer for _MaxPower
   125  002B14  FFFF               	dw	65535
   126                           
   127                           ;initializer for _MaxRange
   128  002B16  FFFF               	dw	65535
   129                           
   130                           ;initializer for _MaxAdres
   131  002B18  FFFF               	dw	65535
   132                           
   133                           ;initializer for LED_Update@pos2
   134  002B1A  0001               	dw	1
   135                           
   136                           ;initializer for LED_Update@pos1
   137  002B1C  0001               	dw	1
   138                           
   139                           ;initializer for _Fulfillment_Lvl
   140  002B1E  0014               	dw	20
   141                           
   142                           ;initializer for _NeightAdress2
   143  002B20  012A               	dw	298
   144                           
   145                           ;initializer for LED_Update@laststat
   146  002B22  14                 	db	20
   147                           
   148                           ;initializer for LED_Update@Green
   149  002B23  01                 	db	1
   150                           
   151                           ;initializer for _Init_Data
   152  002B24  FFFF               	dw	65535
   153                           
   154                           	psect	idataBANK0
   155  002BAA                     __pidataBANK0:
   156                           	opt callstack 0
   157                           
   158                           ;initializer for MOC_Frame_Counter@zeta
   159  002BAA  0011               	dw	17
   160                           
   161                           ;initializer for LED_Update@Fulfillment_Lvl_for_rest
   162  002BAC  0064               	dw	100
   163  0000                     _RXF9EIDL	set	3443
   164  0000                     _RXF9EIDH	set	3442
   165  0000                     _RXF9SIDLbits	set	3441
   166  0000                     _RXF9SIDL	set	3441
   167  0000                     _RXF9SIDH	set	3440
   168  0000                     _RXF8EIDL	set	3435
   169  0000                     _RXF8EIDH	set	3434
   170  0000                     _RXF8SIDLbits	set	3433
   171  0000                     _RXF8SIDL	set	3433
   172  0000                     _RXF8SIDH	set	3432
   173  0000                     _RXF7EIDL	set	3431
   174  0000                     _RXF7EIDH	set	3430
   175  0000                     _RXF7SIDLbits	set	3429
   176  0000                     _RXF7SIDL	set	3429
   177  0000                     _RXF7SIDH	set	3428
   178  0000                     _RXF6EIDL	set	3427
   179  0000                     _RXF6EIDH	set	3426
   180  0000                     _RXF6SIDLbits	set	3425
   181  0000                     _RXF6SIDL	set	3425
   182  0000                     _RXF6SIDH	set	3424
   183  0000                     _RXFCON1	set	3541
   184  0000                     _RXFCON0	set	3540
   185  0000                     _RXFBCON4	set	3556
   186  0000                     _RXFBCON3	set	3555
   187  0000                     _RXFBCON2	set	3554
   188  0000                     _RXFBCON1	set	3553
   189  0000                     _RXFBCON0	set	3552
   190  0000                     _MSEL3	set	3571
   191  0000                     _MSEL2	set	3570
   192  0000                     _MSEL1	set	3569
   193  0000                     _MSEL0	set	3568
   194  0000                     _BIE0	set	3578
   195  0000                     _BSEL0	set	3576
   196  0000                     _B5CON	set	3696
   197  0000                     _B4CON	set	3680
   198  0000                     _B3CON	set	3664
   199  0000                     _B2CON	set	3648
   200  0000                     _B1CON	set	3632
   201  0000                     _B0CON	set	3616
   202  0000                     _TXB0CONbits	set	3904
   203  0000                     _RXF5EIDL	set	3863
   204  0000                     _RXF5EIDH	set	3862
   205  0000                     _RXF5SIDLbits	set	3861
   206  0000                     _RXF5SIDL	set	3861
   207  0000                     _RXF5SIDH	set	3860
   208  0000                     _RXF4EIDL	set	3859
   209  0000                     _RXF4EIDH	set	3858
   210  0000                     _RXF4SIDLbits	set	3857
   211  0000                     _RXF4SIDL	set	3857
   212  0000                     _RXF4SIDH	set	3856
   213  0000                     _RXF3EIDL	set	3855
   214  0000                     _RXF3EIDH	set	3854
   215  0000                     _RXF3SIDLbits	set	3853
   216  0000                     _RXF3SIDL	set	3853
   217  0000                     _RXF3SIDH	set	3852
   218  0000                     _RXF2EIDL	set	3851
   219  0000                     _RXF2EIDH	set	3850
   220  0000                     _RXF2SIDLbits	set	3849
   221  0000                     _RXF2SIDL	set	3849
   222  0000                     _RXF2SIDH	set	3848
   223  0000                     _RXF1EIDL	set	3847
   224  0000                     _RXF1EIDH	set	3846
   225  0000                     _RXF1SIDLbits	set	3845
   226  0000                     _RXF1SIDL	set	3845
   227  0000                     _RXF1SIDH	set	3844
   228  0000                     _RXF0EIDL	set	3843
   229  0000                     _RXF0EIDH	set	3842
   230  0000                     _RXF0SIDLbits	set	3841
   231  0000                     _RXF0SIDL	set	3841
   232  0000                     _RXF0SIDH	set	3840
   233  0000                     _RXM1EIDL	set	3871
   234  0000                     _RXM1EIDH	set	3870
   235  0000                     _RXM1SIDL	set	3869
   236  0000                     _RXM1SIDH	set	3868
   237  0000                     _RXM0EIDL	set	3867
   238  0000                     _RXM0EIDH	set	3866
   239  0000                     _RXM0SIDL	set	3865
   240  0000                     _RXM0SIDH	set	3864
   241  0000                     _RXB1CON	set	3920
   242  0000                     _TXB0CON	set	3904
   243  0000                     _TBLPTR	set	4086
   244  0000                     _TABLAT	set	4085
   245  0000                     _EECON2	set	4007
   246  0000                     _EEDATA	set	4008
   247  0000                     _EECON1bits	set	4006
   248  0000                     _EEADR	set	4009
   249  0000                     _EEADRH	set	4010
   250  0000                     _INTCONbits	set	4082
   251  0000                     _WDTCONbits	set	4049
   252  0000                     _RCONbits	set	4048
   253  0000                     _TRISC	set	3988
   254  0000                     _LATC	set	3979
   255  0000                     _T1CON	set	4045
   256  0000                     _TMR1H	set	4047
   257  0000                     _TMR1L	set	4046
   258  0000                     _LATE	set	3981
   259  0000                     _LATA	set	3977
   260  0000                     _LATB	set	3978
   261  0000                     _LATD	set	3980
   262  0000                     _TRISD	set	3989
   263  0000                     _TRISE	set	3990
   264  0000                     _TRISB	set	3987
   265  0000                     _TRISA	set	3986
   266  0000                     _RXB0DLCbits	set	3941
   267  0000                     _RXB0DLC	set	3941
   268  0000                     _RXB0SIDH	set	3937
   269  0000                     _RXB0SIDLbits	set	3938
   270  0000                     _RXB0SIDL	set	3938
   271  0000                     _RXB0EIDH	set	3939
   272  0000                     _RXB0EIDL	set	3940
   273  0000                     _COMSTATbits	set	3956
   274  0000                     _RXB0CONbits	set	3936
   275  0000                     _BRGCON3bits	set	3954
   276  0000                     _BRGCON2bits	set	3953
   277  0000                     _BRGCON1bits	set	3952
   278  0000                     _CIOCON	set	3955
   279  0000                     _ECANCON	set	3959
   280  0000                     _PIR3	set	4004
   281  0000                     _IPR3	set	4005
   282  0000                     _PIE3	set	4003
   283  0000                     _RXB0CON	set	3936
   284  0000                     _CANSTAT	set	3950
   285  0000                     _CANCON	set	3951
   286  0000                     _RCON	set	4048
   287  0000                     _RXB0D0	set	3942
   288  0000                     _TMR1IF	set	31984
   289  0000                     _TMR1IP	set	31992
   290  0000                     _PEIE	set	32662
   291  0000                     _IPEN	set	32391
   292  0000                     _TMR1ON	set	32360
   293  0000                     _TMR1IE	set	31976
   294  0000                     _IRCF0	set	32412
   295  0000                     _IRCF1	set	32413
   296  0000                     _IRCF2	set	32414
   297                           
   298                           ; #config settings
   299  0000                     
   300                           	psect	cinit
   301  00234E                     __pcinit:
   302                           	opt callstack 0
   303  00234E                     start_initialization:
   304                           	opt callstack 0
   305  00234E                     __initialization:
   306                           	opt callstack 0
   307                           
   308                           ; Initialize objects allocated to BANK0 (4 bytes)
   309                           ; load TBLPTR registers with __pidataBANK0
   310  00234E  0EAA               	movlw	low __pidataBANK0
   311  002350  6EF6               	movwf	tblptrl,c
   312  002352  0E2B               	movlw	high __pidataBANK0
   313  002354  6EF7               	movwf	tblptrh,c
   314  002356  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   315  002358  6EF8               	movwf	tblptru,c
   316  00235A  EE00  F0EF         	lfsr	0,__pdataBANK0
   317  00235E  EE10 F004          	lfsr	1,4
   318  002362                     copy_data0:
   319  002362  0009               	tblrd		*+
   320  002364  CFF5 FFEE          	movff	tablat,postinc0
   321  002368  50E5               	movf	postdec1,w,c
   322  00236A  50E1               	movf	fsr1l,w,c
   323  00236C  E1FA               	bnz	copy_data0
   324                           
   325                           ; Initialize objects allocated to COMRAM (18 bytes)
   326                           ; load TBLPTR registers with __pidataCOMRAM
   327  00236E  0E14               	movlw	low __pidataCOMRAM
   328  002370  6EF6               	movwf	tblptrl,c
   329  002372  0E2B               	movlw	high __pidataCOMRAM
   330  002374  6EF7               	movwf	tblptrh,c
   331  002376  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   332  002378  6EF8               	movwf	tblptru,c
   333  00237A  EE00  F03A         	lfsr	0,__pdataCOMRAM
   334  00237E  EE10 F012          	lfsr	1,18
   335  002382                     copy_data1:
   336  002382  0009               	tblrd		*+
   337  002384  CFF5 FFEE          	movff	tablat,postinc0
   338  002388  50E5               	movf	postdec1,w,c
   339  00238A  50E1               	movf	fsr1l,w,c
   340  00238C  E1FA               	bnz	copy_data1
   341                           
   342                           ; Clear objects allocated to BIGRAM (544 bytes)
   343  00238E  EE00  F0F3         	lfsr	0,__pbssBIGRAM
   344  002392  EE12 F020          	lfsr	1,544
   345  002396                     clear_0:
   346  002396  6AEE               	clrf	postinc0,c
   347  002398  50E5               	movf	postdec1,w,c
   348  00239A  50E1               	movf	fsr1l,w,c
   349  00239C  E1FC               	bnz	clear_0
   350  00239E  50E2               	movf	fsr1h,w,c
   351  0023A0  E1FA               	bnz	clear_0
   352                           
   353                           ; Clear objects allocated to BANK0 (126 bytes)
   354  0023A2  EE00  F060         	lfsr	0,__pbssBANK0
   355  0023A6  0E7E               	movlw	126
   356  0023A8                     clear_1:
   357  0023A8  6AEE               	clrf	postinc0,c
   358  0023AA  06E8               	decf	wreg,f,c
   359  0023AC  E1FD               	bnz	clear_1
   360                           
   361                           ; Clear objects allocated to COMRAM (28 bytes)
   362  0023AE  EE00  F01E         	lfsr	0,__pbssCOMRAM
   363  0023B2  0E1C               	movlw	28
   364  0023B4                     clear_2:
   365  0023B4  6AEE               	clrf	postinc0,c
   366  0023B6  06E8               	decf	wreg,f,c
   367  0023B8  E1FD               	bnz	clear_2
   368  0023BA                     end_of_initialization:
   369                           	opt callstack 0
   370  0023BA                     __end_of__initialization:
   371                           	opt callstack 0
   372  0023BA  904C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   373  0023BC  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   374  0023BE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   375  0023C0  6EF8               	movwf	tblptru,c
   376  0023C2  0100               	movlb	0
   377  0023C4  EF4D  F00F         	goto	_main	;jump to C main() function
   378                           
   379                           	psect	bssCOMRAM
   380  00001E                     __pbssCOMRAM:
   381                           	opt callstack 0
   382  00001E                     FRAME_SensorExcitationStatus@statwect:
   383                           	opt callstack 0
   384  00001E                     	ds	2
   385  000020                     _MinPower:
   386                           	opt callstack 0
   387  000020                     	ds	2
   388  000022                     _MinRange:
   389                           	opt callstack 0
   390  000022                     	ds	2
   391  000024                     _MinAdres:
   392                           	opt callstack 0
   393  000024                     	ds	2
   394  000026                     _NeightAdress8:
   395                           	opt callstack 0
   396  000026                     	ds	2
   397  000028                     _NeightAdress7:
   398                           	opt callstack 0
   399  000028                     	ds	2
   400  00002A                     _NeightAdress6:
   401                           	opt callstack 0
   402  00002A                     	ds	2
   403  00002C                     _NeightAdress5:
   404                           	opt callstack 0
   405  00002C                     	ds	2
   406  00002E                     _NeightAdress4:
   407                           	opt callstack 0
   408  00002E                     	ds	2
   409  000030                     _NeightAdress3:
   410                           	opt callstack 0
   411  000030                     	ds	2
   412  000032                     _NeightAdress1:
   413                           	opt callstack 0
   414  000032                     	ds	2
   415  000034                     WritetoEEPROM@GIE_Status:
   416                           	opt callstack 0
   417  000034                     	ds	1
   418  000035                     	ds	1
   419  000036                     	ds	1
   420  000037                     ISR_low@ramkaStanuU8:
   421                           	opt callstack 0
   422  000037                     	ds	1
   423  000038                     	ds	1
   424  000039                     _LOCK:
   425                           	opt callstack 0
   426  000039                     	ds	1
   427                           
   428                           	psect	dataCOMRAM
   429  00003A                     __pdataCOMRAM:
   430                           	opt callstack 0
   431  00003A                     _MaxPower:
   432                           	opt callstack 0
   433  00003A                     	ds	2
   434  00003C                     _MaxRange:
   435                           	opt callstack 0
   436  00003C                     	ds	2
   437  00003E                     _MaxAdres:
   438                           	opt callstack 0
   439  00003E                     	ds	2
   440  000040                     LED_Update@pos2:
   441                           	opt callstack 0
   442  000040                     	ds	2
   443  000042                     LED_Update@pos1:
   444                           	opt callstack 0
   445  000042                     	ds	2
   446  000044                     _Fulfillment_Lvl:
   447                           	opt callstack 0
   448  000044                     	ds	2
   449  000046                     _NeightAdress2:
   450                           	opt callstack 0
   451  000046                     	ds	2
   452  000048                     LED_Update@laststat:
   453                           	opt callstack 0
   454  000048                     	ds	1
   455  000049                     LED_Update@Green:
   456                           	opt callstack 0
   457  000049                     	ds	1
   458  00004A                     _Init_Data:
   459                           	opt callstack 0
   460  00004A                     	ds	2
   461                           
   462                           	psect	bssBANK0
   463  000060                     __pbssBANK0:
   464                           	opt callstack 0
   465  000060                     _ramkaCanRxKarty:
   466                           	opt callstack 0
   467  000060                     	ds	85
   468  0000B5                     _ramkaCanTxKarty:
   469                           	opt callstack 0
   470  0000B5                     	ds	17
   471  0000C6                     _Flagi:
   472                           	opt callstack 0
   473  0000C6                     	ds	5
   474  0000CB                     _DaneCan:
   475                           	opt callstack 0
   476  0000CB                     	ds	4
   477  0000CF                     _DetectorLedRadar:
   478                           	opt callstack 0
   479  0000CF                     	ds	3
   480  0000D2                     _nextEEPosition:
   481                           	opt callstack 0
   482  0000D2                     	ds	2
   483  0000D4                     _czujnikiNaMapie:
   484                           	opt callstack 0
   485  0000D4                     	ds	2
   486  0000D6                     _TMR1_Update_flag:
   487                           	opt callstack 0
   488  0000D6                     	ds	2
   489  0000D8                     _Dane:
   490                           	opt callstack 0
   491  0000D8                     	ds	2
   492  0000DA                     _neighborsAdress:
   493                           	opt callstack 0
   494  0000DA                     	ds	2
   495  0000DC                     _ustawieniaKarty:
   496                           	opt callstack 0
   497  0000DC                     	ds	2
   498                           
   499                           	psect	dataBANK0
   500  0000EF                     __pdataBANK0:
   501                           	opt callstack 0
   502  0000EF                     MOC_Frame_Counter@zeta:
   503                           	opt callstack 0
   504  0000EF                     	ds	2
   505  0000F1                     	ds	2
   506                           
   507                           	psect	bssBIGRAM
   508  0000F3                     __pbssBIGRAM:
   509                           	opt callstack 0
   510  0000F3                     _wartosciSasiada:
   511                           	opt callstack 0
   512  0000F3                     	ds	544
   513                           
   514                           	psect	cstackBANK0
   515  0000DE                     __pcstackBANK0:
   516                           	opt callstack 0
   517  0000DE                     TRM_DataTransmition@canMessage:
   518                           	opt callstack 0
   519                           
   520                           ; 17 bytes @ 0x0
   521  0000DE                     	ds	17
   522                           
   523                           	psect	cstackCOMRAM
   524  000001                     __pcstackCOMRAM:
   525                           	opt callstack 0
   526  000001                     TMR1_Timer_reset@t1L:
   527                           	opt callstack 0
   528  000001                     i1TMR1_Update_flag_Set@a:
   529                           	opt callstack 0
   530                           
   531                           ; 2 bytes @ 0x0
   532  000001                     	ds	1
   533  000002                     TMR1_Timer_reset@t1H:
   534                           	opt callstack 0
   535                           
   536                           ; 1 bytes @ 0x1
   537  000002                     	ds	1
   538  000003                     ??_ISR_low:
   539  000003                     
   540                           ; 1 bytes @ 0x2
   541  000003                     	ds	3
   542  000006                     ??_CAN_Setup:
   543  000006                     ?_FLASH_Read:
   544                           	opt callstack 0
   545  000006                     ?_TMR1_Update_flag_Get:
   546                           	opt callstack 0
   547  000006                     ?_LED_Right:
   548                           	opt callstack 0
   549  000006                     ?_LED_Left:
   550                           	opt callstack 0
   551  000006                     ?_MOC_Wynikowa_wartosc_roznicowa:
   552                           	opt callstack 0
   553  000006                     ?_MOC_Frame_Counter:
   554                           	opt callstack 0
   555  000006                     ?_MOC_Aktualna_Temperatura:
   556                           	opt callstack 0
   557  000006                     ?_MOC_NOTWORK:
   558                           	opt callstack 0
   559  000006                     ?_IsInNeighbors:
   560                           	opt callstack 0
   561  000006                     ?___awdiv:
   562                           	opt callstack 0
   563  000006                     ?___awmod:
   564                           	opt callstack 0
   565  000006                     ?___lwdiv:
   566                           	opt callstack 0
   567  000006                     LOCK_Set@k:
   568                           	opt callstack 0
   569  000006                     CAN_MoveBuffIntoFrame@Ram:
   570                           	opt callstack 0
   571  000006                     CAN_GenID@message:
   572                           	opt callstack 0
   573  000006                     LED_Right@a:
   574                           	opt callstack 0
   575  000006                     LED_Left@a:
   576                           	opt callstack 0
   577  000006                     LED_Control@diode:
   578                           	opt callstack 0
   579  000006                     TMR1_Update_flag_Set@a:
   580                           	opt callstack 0
   581  000006                     IsInNeighbors@message_adress:
   582                           	opt callstack 0
   583  000006                     FRAME_ExcitationMultiplier@message:
   584                           	opt callstack 0
   585  000006                     FRAME_AveragingTimes@message:
   586                           	opt callstack 0
   587  000006                     FRAME_AxisStatus@message:
   588                           	opt callstack 0
   589  000006                     FRAME_DataUpdateAndChangeOption@message:
   590                           	opt callstack 0
   591  000006                     FRAME_MapPosition@message:
   592                           	opt callstack 0
   593  000006                     FRAME_SoftwareVersion@message:
   594                           	opt callstack 0
   595  000006                     FRAME_AnalogValue@message:
   596                           	opt callstack 0
   597  000006                     FRAME_PrzypisanieDokarty@message:
   598                           	opt callstack 0
   599  000006                     FRAME_AdressOfNeighbors@message:
   600                           	opt callstack 0
   601  000006                     NVMalloc@size:
   602                           	opt callstack 0
   603  000006                     ReadfromEEPROM@Address:
   604                           	opt callstack 0
   605  000006                     WritetoEEPROM@Address:
   606                           	opt callstack 0
   607  000006                     ___awdiv@dividend:
   608                           	opt callstack 0
   609  000006                     ___awmod@dividend:
   610                           	opt callstack 0
   611  000006                     ___lwdiv@dividend:
   612                           	opt callstack 0
   613  000006                     FLASH_Read@addr:
   614                           	opt callstack 0
   615  000006                     FLASH_Write@addr:
   616                           	opt callstack 0
   617                           
   618                           ; 4 bytes @ 0x5
   619  000006                     	ds	2
   620  000008                     ??_LED_Right:
   621  000008                     ??_FRAME_DataUpdateAndChangeOption:
   622  000008                     ??_FRAME_PrzypisanieDokarty:
   623  000008                     ?_EEPROM_Adres_Readfrom:
   624                           	opt callstack 0
   625  000008                     CAN_GenID@frameID:
   626                           	opt callstack 0
   627  000008                     WritetoEEPROM@Data:
   628                           	opt callstack 0
   629  000008                     CAN_MoveBuffIntoFrame@Buf:
   630                           	opt callstack 0
   631  000008                     LED_Left@b:
   632                           	opt callstack 0
   633  000008                     FRAME_SensorExcitationStatus@message:
   634                           	opt callstack 0
   635  000008                     FRAME_AnalogValue@set:
   636                           	opt callstack 0
   637  000008                     FRAME_AdressOfNeighbors@nrRamki:
   638                           	opt callstack 0
   639  000008                     NVMalloc@location:
   640                           	opt callstack 0
   641  000008                     EEPROM_Adres_Readfrom@StartEEPROMAdres:
   642                           	opt callstack 0
   643  000008                     NVMRead@dest:
   644                           	opt callstack 0
   645  000008                     ___awdiv@divisor:
   646                           	opt callstack 0
   647  000008                     ___awmod@divisor:
   648                           	opt callstack 0
   649  000008                     ___lwdiv@divisor:
   650                           	opt callstack 0
   651                           
   652                           ; 2 bytes @ 0x7
   653  000008                     	ds	1
   654  000009                     ??_CAN_GenID:
   655  000009                     FRAME_ExcitationMultiplier@i:
   656                           	opt callstack 0
   657  000009                     EEPROM_Adres_Writeto@StartEEPROMAdres:
   658                           	opt callstack 0
   659  000009                     NVMWrite@source:
   660                           	opt callstack 0
   661                           
   662                           ; 2 bytes @ 0x8
   663  000009                     	ds	1
   664  00000A                     ??_FRAME_SensorExcitationStatus:
   665  00000A                     ??_FRAME_AdressOfNeighbors:
   666  00000A                     ??_NVMalloc:
   667  00000A                     CAN_MoveBuffIntoFrame@i:
   668                           	opt callstack 0
   669  00000A                     LED_Control@color:
   670                           	opt callstack 0
   671  00000A                     ___awdiv@counter:
   672                           	opt callstack 0
   673  00000A                     ___awmod@counter:
   674                           	opt callstack 0
   675  00000A                     ___lwdiv@counter:
   676                           	opt callstack 0
   677  00000A                     LED_Right@b:
   678                           	opt callstack 0
   679  00000A                     EEPROM_Adres_Readfrom@MinAdres:
   680                           	opt callstack 0
   681  00000A                     NVMRead@addr:
   682                           	opt callstack 0
   683  00000A                     FLASH_Write@val:
   684                           	opt callstack 0
   685                           
   686                           ; 2 bytes @ 0x9
   687  00000A                     	ds	1
   688  00000B                     ___awdiv@sign:
   689                           	opt callstack 0
   690  00000B                     ___awmod@sign:
   691                           	opt callstack 0
   692  00000B                     CAN_SendFrame@message:
   693                           	opt callstack 0
   694  00000B                     EEPROM_Adres_Writeto@AdressOfNeighbor:
   695                           	opt callstack 0
   696  00000B                     NVMWrite@addr:
   697                           	opt callstack 0
   698  00000B                     ___lwdiv@quotient:
   699                           	opt callstack 0
   700                           
   701                           ; 2 bytes @ 0xA
   702  00000B                     	ds	1
   703  00000C                     ??_FLASH_Write:
   704  00000C                     FRAME_SensorExcitationStatus@tru:
   705                           	opt callstack 0
   706  00000C                     FRAME_AccelerometerStatus@message:
   707                           	opt callstack 0
   708  00000C                     FRAME_ExcitationValue@message:
   709                           	opt callstack 0
   710  00000C                     EEPROM_Adres_Readfrom@MaxAdres:
   711                           	opt callstack 0
   712  00000C                     NVMRead@count:
   713                           	opt callstack 0
   714  00000C                     ___awdiv@quotient:
   715                           	opt callstack 0
   716                           
   717                           ; 2 bytes @ 0xB
   718  00000C                     	ds	1
   719  00000D                     ??_CAN_SendFrame:
   720  00000D                     LED_Light_Pos@pos:
   721                           	opt callstack 0
   722  00000D                     FRAME_Plot@message:
   723                           	opt callstack 0
   724  00000D                     EEPROM_Adres_Writeto@MinAdres:
   725                           	opt callstack 0
   726  00000D                     NVMWrite@count:
   727                           	opt callstack 0
   728                           
   729                           ; 2 bytes @ 0xC
   730  00000D                     	ds	1
   731  00000E                     ??_EEPROM_Adres_Readfrom:
   732  00000E                     ??_FRAME_AccelerometerStatus:
   733  00000E                     ??_FRAME_ExcitationValue:
   734  00000E                     NVMInit@result:
   735                           	opt callstack 0
   736  00000E                     CAN_TakeFrame@message:
   737                           	opt callstack 0
   738  00000E                     FRAME_AdressOfNeighbors@kier:
   739                           	opt callstack 0
   740  00000E                     FLASH_Write@GIEBitValue:
   741                           	opt callstack 0
   742                           
   743                           ; 2 bytes @ 0xD
   744  00000E                     	ds	1
   745  00000F                     ??_FRAME_Plot:
   746  00000F                     LED_Light_Pos@fulfillment:
   747                           	opt callstack 0
   748  00000F                     EEPROM_Adres_Writeto@MaxAdres:
   749                           	opt callstack 0
   750                           
   751                           ; 2 bytes @ 0xE
   752  00000F                     	ds	1
   753  000010                     ??_CAN_TakeFrame:
   754  000010                     FLASH_Write@flashWrBufPtr:
   755                           	opt callstack 0
   756                           
   757                           ; 2 bytes @ 0xF
   758  000010                     	ds	1
   759  000011                     LED_Light_Pos@color:
   760                           	opt callstack 0
   761  000011                     FRAME_DeviceReset@message:
   762                           	opt callstack 0
   763                           
   764                           ; 2 bytes @ 0x10
   765  000011                     	ds	1
   766  000012                     CAN_TakeFrame@tempCON:
   767                           	opt callstack 0
   768  000012                     LED_Light_Pos@LED_array:
   769                           	opt callstack 0
   770                           
   771                           ; 2 bytes @ 0x11
   772  000012                     	ds	1
   773  000013                     CAN_TakeFrame@k:
   774                           	opt callstack 0
   775  000013                     EEPROM_Adres_Readfrom@ReadAdressOfNeighbor:
   776                           	opt callstack 0
   777                           
   778                           ; 2 bytes @ 0x12
   779  000013                     	ds	1
   780  000014                     LED_Light_Pos@pos2:
   781                           	opt callstack 0
   782  000014                     FRAME_HandleCanFrame@message:
   783                           	opt callstack 0
   784                           
   785                           ; 2 bytes @ 0x13
   786  000014                     	ds	1
   787  000015                     ??_ReadDataToEEPROM:
   788                           
   789                           ; 1 bytes @ 0x14
   790  000015                     	ds	1
   791  000016                     ??_FRAME_HandleCanFrame:
   792  000016                     LED_Light_Pos@flage:
   793                           	opt callstack 0
   794                           
   795                           ; 2 bytes @ 0x15
   796  000016                     	ds	2
   797  000018                     
   798                           ; 1 bytes @ 0x17
   799  000018                     	ds	1
   800  000019                     FRAME_HandleCanFrame@ident:
   801                           	opt callstack 0
   802                           
   803                           ; 2 bytes @ 0x18
   804  000019                     	ds	2
   805  00001B                     FRAME_HandleCanFrame@identyfikator:
   806                           	opt callstack 0
   807                           
   808                           ; 1 bytes @ 0x1A
   809  00001B                     	ds	1
   810  00001C                     main@adr:
   811                           	opt callstack 0
   812                           
   813                           ; 2 bytes @ 0x1B
   814  00001C                     	ds	2
   815                           
   816 ;;
   817 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   818 ;;
   819 ;; *************** function _main *****************
   820 ;; Defined at:
   821 ;;		line 103 in file "main.c"
   822 ;; Parameters:    Size  Location     Type
   823 ;;		None
   824 ;; Auto vars:     Size  Location     Type
   825 ;;  adr             2   27[COMRAM] int 
   826 ;; Return value:  Size  Location     Type
   827 ;;                  1    wreg      void 
   828 ;; Registers used:
   829 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   830 ;; Tracked objects:
   831 ;;		On entry : 0/0
   832 ;;		On exit  : 0/0
   833 ;;		Unchanged: 0/0
   834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   836 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   838 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   839 ;;Total ram usage:        2 bytes
   840 ;; Hardware stack levels required when called:    9
   841 ;; This function calls:
   842 ;;		_FLASH_Read
   843 ;;		_FLASH_Write
   844 ;;		_INI_All
   845 ;;		_LED_Update
   846 ;;		_RADAR_Use
   847 ;;		_TMR1_Update_flag_Get
   848 ;;		_TMR1_Update_flag_Set
   849 ;;		_TRM_DataTransmition
   850 ;; This function is called by:
   851 ;;		Startup code after reset
   852 ;; This function uses a non-reentrant model
   853 ;;
   854                           
   855                           	psect	text0
   856  001E9A                     __ptext0:
   857                           	opt callstack 0
   858  001E9A                     _main:
   859                           	opt callstack 22
   860                           
   861                           ;main.c: 106: int adr = FLASH_Read(0x200000);
   862                           
   863                           ;incstack = 0
   864  001E9A  0E00               	movlw	0
   865  001E9C  6E06               	movwf	FLASH_Read@addr,c
   866  001E9E  0E00               	movlw	0
   867  001EA0  6E07               	movwf	FLASH_Read@addr+1,c
   868  001EA2  0E20               	movlw	32
   869  001EA4  6E08               	movwf	FLASH_Read@addr+2,c
   870  001EA6  0E00               	movlw	0
   871  001EA8  6E09               	movwf	FLASH_Read@addr+3,c
   872  001EAA  EC7F  F015         	call	_FLASH_Read	;wreg free
   873  001EAE  C006  F01C         	movff	?_FLASH_Read,main@adr
   874  001EB2  C007  F01D         	movff	?_FLASH_Read+1,main@adr+1
   875                           
   876                           ;main.c: 107: adr |= FLASH_Read(0x200001)<<8;
   877  001EB6  0E01               	movlw	1
   878  001EB8  6E06               	movwf	FLASH_Read@addr,c
   879  001EBA  0E00               	movlw	0
   880  001EBC  6E07               	movwf	FLASH_Read@addr+1,c
   881  001EBE  0E20               	movlw	32
   882  001EC0  6E08               	movwf	FLASH_Read@addr+2,c
   883  001EC2  0E00               	movlw	0
   884  001EC4  6E09               	movwf	FLASH_Read@addr+3,c
   885  001EC6  EC7F  F015         	call	_FLASH_Read	;wreg free
   886  001ECA  C006  F007         	movff	?_FLASH_Read,?_FLASH_Read+1
   887  001ECE  6A06               	clrf	?_FLASH_Read,c
   888  001ED0  5006               	movf	?_FLASH_Read,w,c
   889  001ED2  121C               	iorwf	main@adr,f,c
   890  001ED4  5007               	movf	?_FLASH_Read+1,w,c
   891  001ED6  121D               	iorwf	main@adr+1,f,c
   892                           
   893                           ;main.c: 111: FLASH_Write(0x200000,0x76);
   894  001ED8  0E00               	movlw	0
   895  001EDA  6E06               	movwf	FLASH_Write@addr,c
   896  001EDC  0E00               	movlw	0
   897  001EDE  6E07               	movwf	FLASH_Write@addr+1,c
   898  001EE0  0E20               	movlw	32
   899  001EE2  6E08               	movwf	FLASH_Write@addr+2,c
   900  001EE4  0E00               	movlw	0
   901  001EE6  6E09               	movwf	FLASH_Write@addr+3,c
   902  001EE8  0E00               	movlw	0
   903  001EEA  6E0B               	movwf	FLASH_Write@val+1,c
   904  001EEC  0E76               	movlw	118
   905  001EEE  6E0A               	movwf	FLASH_Write@val,c
   906  001EF0  EC69  F011         	call	_FLASH_Write	;wreg free
   907                           
   908                           ;main.c: 112: FLASH_Write(0x200001,0x40);
   909  001EF4  0E01               	movlw	1
   910  001EF6  6E06               	movwf	FLASH_Write@addr,c
   911  001EF8  0E00               	movlw	0
   912  001EFA  6E07               	movwf	FLASH_Write@addr+1,c
   913  001EFC  0E20               	movlw	32
   914  001EFE  6E08               	movwf	FLASH_Write@addr+2,c
   915  001F00  0E00               	movlw	0
   916  001F02  6E09               	movwf	FLASH_Write@addr+3,c
   917  001F04  0E00               	movlw	0
   918  001F06  6E0B               	movwf	FLASH_Write@val+1,c
   919  001F08  0E40               	movlw	64
   920  001F0A  6E0A               	movwf	FLASH_Write@val,c
   921  001F0C  EC69  F011         	call	_FLASH_Write	;wreg free
   922                           
   923                           ;main.c: 117: DaneCan.adresCAN = adr;
   924  001F10  C01C  F0CD         	movff	main@adr,_DaneCan+2
   925  001F14  C01D  F0CE         	movff	main@adr+1,_DaneCan+3
   926                           
   927                           ;main.c: 118: INI_All();
   928  001F18  EC43  F015         	call	_INI_All	;wreg free
   929                           
   930                           ;main.c: 120: RCON = 0xFF;
   931  001F1C  68D0               	setf	4048,c	;volatile
   932  001F1E                     l4971:
   933                           
   934                           ;main.c: 123: {;main.c: 124: if(DetectorLedRadar.Flags.obsluzWeWy == 1)
   935  001F1E  0100               	movlb	0	; () banked
   936  001F20  B1CF               	btfsc	_DetectorLedRadar& (0+255),0,b
   937                           
   938                           ; BSR set to: 0
   939                           ;main.c: 125: {;main.c: 126: DetectorLedRadar.Flags.obsluzWeWy = 0;
   940  001F22  91CF               	bcf	_DetectorLedRadar& (0+255),0,b
   941                           
   942                           ; BSR set to: 0
   943                           ;main.c: 128: };main.c: 130: if(TMR1_Update_flag_Get()==1)
   944  001F24  ECC0  F015         	call	_TMR1_Update_flag_Get	;wreg free
   945  001F28  0406               	decf	?_TMR1_Update_flag_Get,w,c
   946  001F2A  1007               	iorwf	?_TMR1_Update_flag_Get+1,w,c
   947  001F2C  A4D8               	btfss	status,2,c
   948  001F2E  D008               	goto	l4981
   949                           
   950                           ;main.c: 131: {;main.c: 132: LED_Update();
   951  001F30  ECFE  F00F         	call	_LED_Update	;wreg free
   952                           
   953                           ;main.c: 133: TMR1_Update_flag_Set(0);
   954  001F34  0E00               	movlw	0
   955  001F36  6E07               	movwf	TMR1_Update_flag_Set@a+1,c
   956  001F38  0E00               	movlw	0
   957  001F3A  6E06               	movwf	TMR1_Update_flag_Set@a,c
   958  001F3C  ECBB  F015         	call	_TMR1_Update_flag_Set	;wreg free
   959  001F40                     l4981:
   960                           
   961                           ;main.c: 135: };main.c: 139: TRM_DataTransmition();
   962  001F40  EC77  F013         	call	_TRM_DataTransmition	;wreg free
   963                           
   964                           ;main.c: 140: RADAR_Use();
   965  001F44  ECAB  F015         	call	_RADAR_Use	;wreg free
   966  001F48  0004               	clrwdt		;# 
   967                           
   968                           ;main.c: 142: }
   969  001F4A  D7E9               	goto	l4971
   970  001F4C                     __end_of_main:
   971                           	opt callstack 0
   972                           
   973 ;; *************** function _TRM_DataTransmition *****************
   974 ;; Defined at:
   975 ;;		line 19 in file "TRM.c"
   976 ;; Parameters:    Size  Location     Type
   977 ;;		None
   978 ;; Auto vars:     Size  Location     Type
   979 ;;  canMessage     17    0[BANK0 ] struct .
   980 ;;  i               1    0        unsigned char 
   981 ;; Return value:  Size  Location     Type
   982 ;;                  1    wreg      void 
   983 ;; Registers used:
   984 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   985 ;; Tracked objects:
   986 ;;		On entry : 0/0
   987 ;;		On exit  : 0/0
   988 ;;		Unchanged: 0/0
   989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   991 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
   992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   993 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
   994 ;;Total ram usage:       17 bytes
   995 ;; Hardware stack levels used:    1
   996 ;; Hardware stack levels required when called:    8
   997 ;; This function calls:
   998 ;;		_CAN_TakeFrame
   999 ;;		_FRAME_HandleCanFrame
  1000 ;; This function is called by:
  1001 ;;		_main
  1002 ;; This function uses a non-reentrant model
  1003 ;;
  1004                           
  1005                           	psect	text1
  1006  0026EE                     __ptext1:
  1007                           	opt callstack 0
  1008  0026EE                     _TRM_DataTransmition:
  1009                           	opt callstack 22
  1010                           
  1011                           ;TRM.c: 21: static BYTE weWyU8 = 0, czujnikWeWyU8 = 0;;TRM.c: 22: BYTE i;;TRM.c: 23: mID
      +                           canMessage;;TRM.c: 26: if(DaneCan.Flags.wyslijRamkeStanu)
  1012                           
  1013                           ;incstack = 0
  1014  0026EE  0100               	movlb	0	; () banked
  1015  0026F0  A1CB               	btfss	_DaneCan& (0+255),0,b
  1016  0026F2  D014               	goto	l4947
  1017                           
  1018                           ; BSR set to: 0
  1019                           ;TRM.c: 27: {;TRM.c: 29: canMessage.message_type = 0x02;
  1020  0026F4  0E02               	movlw	2
  1021  0026F6  6FDF               	movwf	(TRM_DataTransmition@canMessage+1)& (0+255),b
  1022                           
  1023                           ;TRM.c: 30: canMessage.id.Val = 0;
  1024  0026F8  0E00               	movlw	0
  1025  0026FA  6FE2               	movwf	(TRM_DataTransmition@canMessage+4)& (0+255),b
  1026  0026FC  0E00               	movlw	0
  1027  0026FE  6FE3               	movwf	(TRM_DataTransmition@canMessage+5)& (0+255),b
  1028  002700  0E00               	movlw	0
  1029  002702  6FE4               	movwf	(TRM_DataTransmition@canMessage+6)& (0+255),b
  1030  002704  0E00               	movlw	0
  1031  002706  6FE5               	movwf	(TRM_DataTransmition@canMessage+7)& (0+255),b
  1032                           
  1033                           ;TRM.c: 31: canMessage.id.v[2] = 0x01 *4;
  1034  002708  0E04               	movlw	4
  1035  00270A  6FE4               	movwf	(TRM_DataTransmition@canMessage+6)& (0+255),b
  1036                           
  1037                           ; BSR set to: 0
  1038                           ;TRM.c: 32: FRAME_HandleCanFrame(&canMessage);
  1039  00270C  0EDE               	movlw	low TRM_DataTransmition@canMessage
  1040  00270E  6E14               	movwf	FRAME_HandleCanFrame@message,c
  1041  002710  0E00               	movlw	high TRM_DataTransmition@canMessage
  1042  002712  6E15               	movwf	FRAME_HandleCanFrame@message+1,c
  1043  002714  ECC0  F008         	call	_FRAME_HandleCanFrame	;wreg free
  1044                           
  1045                           ;TRM.c: 49: DaneCan.Flags.wyslijRamkeStanu = 0;
  1046  002718  0100               	movlb	0	; () banked
  1047  00271A  91CB               	bcf	_DaneCan& (0+255),0,b
  1048  00271C                     l4947:
  1049                           
  1050                           ; BSR set to: 0
  1051                           ;TRM.c: 56: };TRM.c: 59: if(CAN_TakeFrame(&canMessage))
  1052  00271C  0EDE               	movlw	low TRM_DataTransmition@canMessage
  1053  00271E  6E0E               	movwf	CAN_TakeFrame@message,c
  1054  002720  0E00               	movlw	high TRM_DataTransmition@canMessage
  1055  002722  6E0F               	movwf	CAN_TakeFrame@message+1,c
  1056  002724  EC97  F007         	call	_CAN_TakeFrame	;wreg free
  1057  002728  0900               	iorlw	0
  1058  00272A  B4D8               	btfsc	status,2,c
  1059  00272C  0012               	return	
  1060                           
  1061                           ;TRM.c: 64: {;TRM.c: 66: FRAME_HandleCanFrame(&canMessage);
  1062  00272E  0EDE               	movlw	low TRM_DataTransmition@canMessage
  1063  002730  6E14               	movwf	FRAME_HandleCanFrame@message,c
  1064  002732  0E00               	movlw	high TRM_DataTransmition@canMessage
  1065  002734  6E15               	movwf	FRAME_HandleCanFrame@message+1,c
  1066  002736  ECC0  F008         	call	_FRAME_HandleCanFrame	;wreg free
  1067                           
  1068                           ;TRM.c: 67: }
  1069  00273A  0012               	return		;funcret
  1070  00273C                     __end_of_TRM_DataTransmition:
  1071                           	opt callstack 0
  1072                           
  1073 ;; *************** function _FRAME_HandleCanFrame *****************
  1074 ;; Defined at:
  1075 ;;		line 805 in file "FRAME.c"
  1076 ;; Parameters:    Size  Location     Type
  1077 ;;  message         2   19[COMRAM] PTR struct .
  1078 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1079 ;; Auto vars:     Size  Location     Type
  1080 ;;  ident           2   24[COMRAM] unsigned short 
  1081 ;;  alfa            2    0        int 
  1082 ;;  identyfikato    1   26[COMRAM] unsigned char 
  1083 ;; Return value:  Size  Location     Type
  1084 ;;                  1    wreg      void 
  1085 ;; Registers used:
  1086 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1087 ;; Tracked objects:
  1088 ;;		On entry : 0/0
  1089 ;;		On exit  : 0/0
  1090 ;;		Unchanged: 0/0
  1091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1092 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1093 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1094 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1095 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1096 ;;Total ram usage:        8 bytes
  1097 ;; Hardware stack levels used:    1
  1098 ;; Hardware stack levels required when called:    7
  1099 ;; This function calls:
  1100 ;;		_CAN_GenID
  1101 ;;		_CAN_SendFrame
  1102 ;;		_FRAME_AccelerometerStatus
  1103 ;;		_FRAME_AdressOfNeighbors
  1104 ;;		_FRAME_AnalogValue
  1105 ;;		_FRAME_AveragingTimes
  1106 ;;		_FRAME_AxisStatus
  1107 ;;		_FRAME_DeviceReset
  1108 ;;		_FRAME_ExcitationMultiplier
  1109 ;;		_FRAME_ExcitationValue
  1110 ;;		_FRAME_MapPosition
  1111 ;;		_FRAME_Plot
  1112 ;;		_FRAME_PrzypisanieDokarty
  1113 ;;		_FRAME_SensorExcitationStatus
  1114 ;;		_FRAME_SoftwareVersion
  1115 ;;		_LED_Error
  1116 ;;		___awdiv
  1117 ;; This function is called by:
  1118 ;;		_TRM_DataTransmition
  1119 ;; This function uses a non-reentrant model
  1120 ;;
  1121                           
  1122                           	psect	text2
  1123  001180                     __ptext2:
  1124                           	opt callstack 0
  1125  001180                     _FRAME_HandleCanFrame:
  1126                           	opt callstack 22
  1127                           
  1128                           ;FRAME.c: 807: BYTE identyfikator = (BYTE) message->id.v[2]/4;
  1129                           
  1130                           ;incstack = 0
  1131  001180  EE20 F006          	lfsr	2,6
  1132  001184  5014               	movf	FRAME_HandleCanFrame@message,w,c
  1133  001186  26D9               	addwf	fsr2l,f,c
  1134  001188  5015               	movf	FRAME_HandleCanFrame@message+1,w,c
  1135  00118A  22DA               	addwfc	fsr2h,f,c
  1136  00118C  50DF               	movf	indf2,w,c
  1137  00118E  6E16               	movwf	??_FRAME_HandleCanFrame& (0+255),c
  1138  001190  5016               	movf	??_FRAME_HandleCanFrame,w,c
  1139  001192  6E06               	movwf	___awdiv@dividend,c
  1140  001194  6A07               	clrf	___awdiv@dividend+1,c
  1141  001196  0E00               	movlw	0
  1142  001198  6E09               	movwf	___awdiv@divisor+1,c
  1143  00119A  0E04               	movlw	4
  1144  00119C  6E08               	movwf	___awdiv@divisor,c
  1145  00119E  ECE9  F010         	call	___awdiv	;wreg free
  1146  0011A2  5006               	movf	?___awdiv,w,c
  1147  0011A4  6E1B               	movwf	FRAME_HandleCanFrame@identyfikator,c
  1148                           
  1149                           ;FRAME.c: 810: if(identyfikator != 0x01)
  1150  0011A6  041B               	decf	FRAME_HandleCanFrame@identyfikator,w,c
  1151  0011A8  B4D8               	btfsc	status,2,c
  1152  0011AA  D074               	goto	l4887
  1153                           
  1154                           ;FRAME.c: 811: {;FRAME.c: 812: WORD ident = identyfikator;
  1155  0011AC  C01B  F019         	movff	FRAME_HandleCanFrame@identyfikator,FRAME_HandleCanFrame@ident
  1156  0011B0  6A1A               	clrf	FRAME_HandleCanFrame@ident+1,c
  1157  0011B2  D070               	goto	l4887
  1158  0011B4                     l4857:
  1159                           
  1160                           ;FRAME.c: 819: FRAME_SensorExcitationStatus(message);
  1161  0011B4  C014  F008         	movff	FRAME_HandleCanFrame@message,FRAME_SensorExcitationStatus@message
  1162  0011B8  C015  F009         	movff	FRAME_HandleCanFrame@message+1,FRAME_SensorExcitationStatus@message+1
  1163  0011BC  EC58  F00D         	call	_FRAME_SensorExcitationStatus	;wreg free
  1164                           
  1165                           ;FRAME.c: 820: break;
  1166  0011C0  D097               	goto	l4889
  1167  0011C2                     l4859:
  1168                           
  1169                           ;FRAME.c: 822: FRAME_AccelerometerStatus(message);
  1170  0011C2  C014  F00C         	movff	FRAME_HandleCanFrame@message,FRAME_AccelerometerStatus@message
  1171  0011C6  C015  F00D         	movff	FRAME_HandleCanFrame@message+1,FRAME_AccelerometerStatus@message+1
  1172  0011CA  EC72  F00E         	call	_FRAME_AccelerometerStatus	;wreg free
  1173                           
  1174                           ;FRAME.c: 823: break;
  1175  0011CE  D090               	goto	l4889
  1176  0011D0                     l4861:
  1177                           
  1178                           ;FRAME.c: 825: FRAME_ExcitationValue(message);
  1179  0011D0  C014  F00C         	movff	FRAME_HandleCanFrame@message,FRAME_ExcitationValue@message
  1180  0011D4  C015  F00D         	movff	FRAME_HandleCanFrame@message+1,FRAME_ExcitationValue@message+1
  1181  0011D8  ECEC  F00D         	call	_FRAME_ExcitationValue	;wreg free
  1182                           
  1183                           ;FRAME.c: 826: break;
  1184  0011DC  D089               	goto	l4889
  1185  0011DE                     l4863:
  1186                           
  1187                           ;FRAME.c: 828: FRAME_ExcitationMultiplier(message);
  1188  0011DE  C014  F006         	movff	FRAME_HandleCanFrame@message,FRAME_ExcitationMultiplier@message
  1189  0011E2  C015  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_ExcitationMultiplier@message+1
  1190  0011E6  EC9E  F013         	call	_FRAME_ExcitationMultiplier	;wreg free
  1191                           
  1192                           ;FRAME.c: 829: break;
  1193  0011EA  D082               	goto	l4889
  1194  0011EC                     l4865:
  1195                           
  1196                           ;FRAME.c: 831: FRAME_AveragingTimes(message);
  1197  0011EC  C014  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AveragingTimes@message
  1198  0011F0  C015  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AveragingTimes@message+1
  1199  0011F4  EC9F  F014         	call	_FRAME_AveragingTimes	;wreg free
  1200                           
  1201                           ;FRAME.c: 832: break;
  1202  0011F8  D07B               	goto	l4889
  1203  0011FA                     l4867:
  1204                           
  1205                           ;FRAME.c: 834: FRAME_AxisStatus(message);
  1206  0011FA  C014  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AxisStatus@message
  1207  0011FE  C015  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AxisStatus@message+1
  1208  001202  EC84  F014         	call	_FRAME_AxisStatus	;wreg free
  1209                           
  1210                           ;FRAME.c: 835: break;
  1211  001206  D074               	goto	l4889
  1212  001208                     l4869:
  1213                           
  1214                           ;FRAME.c: 837: FRAME_DeviceReset(message);
  1215  001208  C014  F011         	movff	FRAME_HandleCanFrame@message,FRAME_DeviceReset@message
  1216  00120C  C015  F012         	movff	FRAME_HandleCanFrame@message+1,FRAME_DeviceReset@message+1
  1217  001210  ECB4  F00C         	call	_FRAME_DeviceReset	;wreg free
  1218                           
  1219                           ;FRAME.c: 838: break;
  1220  001214  D06D               	goto	l4889
  1221  001216                     l4871:
  1222                           
  1223                           ;FRAME.c: 840: FRAME_Plot(message);
  1224  001216  C014  F00D         	movff	FRAME_HandleCanFrame@message,FRAME_Plot@message
  1225  00121A  C015  F00E         	movff	FRAME_HandleCanFrame@message+1,FRAME_Plot@message+1
  1226  00121E  EC22  F013         	call	_FRAME_Plot	;wreg free
  1227                           
  1228                           ;FRAME.c: 841: break;
  1229  001222  D066               	goto	l4889
  1230  001224                     l4873:
  1231                           
  1232                           ;FRAME.c: 843: FRAME_MapPosition(message);
  1233  001224  C014  F006         	movff	FRAME_HandleCanFrame@message,FRAME_MapPosition@message
  1234  001228  C015  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_MapPosition@message+1
  1235  00122C  ECD9  F015         	call	_FRAME_MapPosition	;wreg free
  1236                           
  1237                           ;FRAME.c: 844: break;
  1238  001230  D05F               	goto	l4889
  1239  001232                     l4875:
  1240                           
  1241                           ;FRAME.c: 846: FRAME_SoftwareVersion(message);
  1242  001232  C014  F006         	movff	FRAME_HandleCanFrame@message,FRAME_SoftwareVersion@message
  1243  001236  C015  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_SoftwareVersion@message+1
  1244  00123A  EC94  F012         	call	_FRAME_SoftwareVersion	;wreg free
  1245                           
  1246                           ;FRAME.c: 847: break;
  1247  00123E  D058               	goto	l4889
  1248  001240                     l4877:
  1249                           
  1250                           ;FRAME.c: 849: case 0x0D:;FRAME.c: 850: FRAME_AnalogValue(message, identyfikator - 0x0C)
      +                          ;
  1251  001240  C014  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AnalogValue@message
  1252  001244  C015  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AnalogValue@message+1
  1253  001248  0EF4               	movlw	244
  1254  00124A  241B               	addwf	FRAME_HandleCanFrame@identyfikator,w,c
  1255  00124C  6E08               	movwf	FRAME_AnalogValue@set,c
  1256  00124E  6A09               	clrf	FRAME_AnalogValue@set+1,c
  1257  001250  0EFF               	movlw	255
  1258  001252  2209               	addwfc	FRAME_AnalogValue@set+1,f,c
  1259  001254  ECDA  F015         	call	_FRAME_AnalogValue	;wreg free
  1260                           
  1261                           ;FRAME.c: 851: break;
  1262  001258  D04B               	goto	l4889
  1263  00125A                     l4879:
  1264                           
  1265                           ;FRAME.c: 853: FRAME_PrzypisanieDokarty(message);
  1266  00125A  C014  F006         	movff	FRAME_HandleCanFrame@message,FRAME_PrzypisanieDokarty@message
  1267  00125E  C015  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_PrzypisanieDokarty@message+1
  1268  001262  EC4F  F010         	call	_FRAME_PrzypisanieDokarty	;wreg free
  1269                           
  1270                           ;FRAME.c: 854: break;
  1271  001266  D044               	goto	l4889
  1272  001268                     l4881:
  1273                           
  1274                           ;FRAME.c: 856: FRAME_AdressOfNeighbors(message,0x10);
  1275  001268  C014  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AdressOfNeighbors@message
  1276  00126C  C015  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AdressOfNeighbors@message+1
  1277  001270  0E00               	movlw	0
  1278  001272  6E09               	movwf	FRAME_AdressOfNeighbors@nrRamki+1,c
  1279  001274  0E10               	movlw	16
  1280  001276  6E08               	movwf	FRAME_AdressOfNeighbors@nrRamki,c
  1281  001278  EC31  F006         	call	_FRAME_AdressOfNeighbors	;wreg free
  1282                           
  1283                           ;FRAME.c: 857: break;
  1284  00127C  D039               	goto	l4889
  1285  00127E                     l4883:
  1286                           
  1287                           ;FRAME.c: 859: FRAME_AdressOfNeighbors(message,0x11);
  1288  00127E  C014  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AdressOfNeighbors@message
  1289  001282  C015  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AdressOfNeighbors@message+1
  1290  001286  0E00               	movlw	0
  1291  001288  6E09               	movwf	FRAME_AdressOfNeighbors@nrRamki+1,c
  1292  00128A  0E11               	movlw	17
  1293  00128C  6E08               	movwf	FRAME_AdressOfNeighbors@nrRamki,c
  1294  00128E  EC31  F006         	call	_FRAME_AdressOfNeighbors	;wreg free
  1295                           
  1296                           ;FRAME.c: 860: break;
  1297  001292  D02E               	goto	l4889
  1298  001294                     l4887:
  1299  001294  501B               	movf	FRAME_HandleCanFrame@identyfikator,w,c
  1300                           
  1301                           ; Switch size 1, requested type "simple"
  1302                           ; Number of cases is 15, Range of values is 1 to 17
  1303                           ; switch strategies available:
  1304                           ; Name         Instructions Cycles
  1305                           ; simple_byte           46    24 (average)
  1306                           ;	Chosen strategy is simple_byte
  1307  001296  0A01               	xorlw	1	; case 1
  1308  001298  B4D8               	btfsc	status,2,c
  1309  00129A  D78C               	goto	l4857
  1310  00129C  0A03               	xorlw	3	; case 2
  1311  00129E  B4D8               	btfsc	status,2,c
  1312  0012A0  D790               	goto	l4859
  1313  0012A2  0A01               	xorlw	1	; case 3
  1314  0012A4  B4D8               	btfsc	status,2,c
  1315  0012A6  D794               	goto	l4861
  1316  0012A8  0A07               	xorlw	7	; case 4
  1317  0012AA  B4D8               	btfsc	status,2,c
  1318  0012AC  D798               	goto	l4863
  1319  0012AE  0A01               	xorlw	1	; case 5
  1320  0012B0  B4D8               	btfsc	status,2,c
  1321  0012B2  D79C               	goto	l4865
  1322  0012B4  0A03               	xorlw	3	; case 6
  1323  0012B6  B4D8               	btfsc	status,2,c
  1324  0012B8  D7A0               	goto	l4867
  1325  0012BA  0A01               	xorlw	1	; case 7
  1326  0012BC  B4D8               	btfsc	status,2,c
  1327  0012BE  D7A4               	goto	l4869
  1328  0012C0  0A0E               	xorlw	14	; case 9
  1329  0012C2  B4D8               	btfsc	status,2,c
  1330  0012C4  D7A8               	goto	l4871
  1331  0012C6  0A03               	xorlw	3	; case 10
  1332  0012C8  B4D8               	btfsc	status,2,c
  1333  0012CA  D7AC               	goto	l4873
  1334  0012CC  0A01               	xorlw	1	; case 11
  1335  0012CE  B4D8               	btfsc	status,2,c
  1336  0012D0  D7B0               	goto	l4875
  1337  0012D2  0A07               	xorlw	7	; case 12
  1338  0012D4  B4D8               	btfsc	status,2,c
  1339  0012D6  D7B4               	goto	l4877
  1340  0012D8  0A01               	xorlw	1	; case 13
  1341  0012DA  B4D8               	btfsc	status,2,c
  1342  0012DC  D7B1               	goto	l4877
  1343  0012DE  0A02               	xorlw	2	; case 15
  1344  0012E0  B4D8               	btfsc	status,2,c
  1345  0012E2  D7BB               	goto	l4879
  1346  0012E4  0A1F               	xorlw	31	; case 16
  1347  0012E6  B4D8               	btfsc	status,2,c
  1348  0012E8  D7BF               	goto	l4881
  1349  0012EA  0A01               	xorlw	1	; case 17
  1350  0012EC  B4D8               	btfsc	status,2,c
  1351  0012EE  D7C7               	goto	l4883
  1352  0012F0                     l4889:
  1353                           
  1354                           ;FRAME.c: 869: if(message->message_type == 0x02)
  1355  0012F0  EE20 F001          	lfsr	2,1
  1356  0012F4  5014               	movf	FRAME_HandleCanFrame@message,w,c
  1357  0012F6  26D9               	addwf	fsr2l,f,c
  1358  0012F8  5015               	movf	FRAME_HandleCanFrame@message+1,w,c
  1359  0012FA  22DA               	addwfc	fsr2h,f,c
  1360  0012FC  0E02               	movlw	2
  1361  0012FE  18DE               	xorwf	postinc2,w,c
  1362  001300  A4D8               	btfss	status,2,c
  1363  001302  0012               	return	
  1364                           
  1365                           ;FRAME.c: 870: {;FRAME.c: 872: message->frame_type = 0x03;
  1366  001304  EE20 F002          	lfsr	2,2
  1367  001308  5014               	movf	FRAME_HandleCanFrame@message,w,c
  1368  00130A  26D9               	addwf	fsr2l,f,c
  1369  00130C  5015               	movf	FRAME_HandleCanFrame@message+1,w,c
  1370  00130E  22DA               	addwfc	fsr2h,f,c
  1371  001310  0E03               	movlw	3
  1372  001312  6EDF               	movwf	indf2,c
  1373                           
  1374                           ;FRAME.c: 873: message->message_type = 0x01;
  1375  001314  EE20 F001          	lfsr	2,1
  1376  001318  5014               	movf	FRAME_HandleCanFrame@message,w,c
  1377  00131A  26D9               	addwf	fsr2l,f,c
  1378  00131C  5015               	movf	FRAME_HandleCanFrame@message+1,w,c
  1379  00131E  22DA               	addwfc	fsr2h,f,c
  1380  001320  0E01               	movlw	1
  1381  001322  6EDF               	movwf	indf2,c
  1382                           
  1383                           ;FRAME.c: 874: message->id.Val = 0;
  1384  001324  EE20 F004          	lfsr	2,4
  1385  001328  5014               	movf	FRAME_HandleCanFrame@message,w,c
  1386  00132A  26D9               	addwf	fsr2l,f,c
  1387  00132C  5015               	movf	FRAME_HandleCanFrame@message+1,w,c
  1388  00132E  22DA               	addwfc	fsr2h,f,c
  1389  001330  6ADE               	clrf	postinc2,c
  1390  001332  6ADE               	clrf	postinc2,c
  1391  001334  6ADE               	clrf	postinc2,c
  1392  001336  6ADD               	clrf	postdec2,c
  1393                           
  1394                           ;FRAME.c: 876: message->id.v[2] = identyfikator*4;
  1395  001338  501B               	movf	FRAME_HandleCanFrame@identyfikator,w,c
  1396  00133A  0D04               	mullw	4
  1397  00133C  EE20 F006          	lfsr	2,6
  1398  001340  5014               	movf	FRAME_HandleCanFrame@message,w,c
  1399  001342  26D9               	addwf	fsr2l,f,c
  1400  001344  5015               	movf	FRAME_HandleCanFrame@message+1,w,c
  1401  001346  22DA               	addwfc	fsr2h,f,c
  1402  001348  CFF3 FFDF          	movff	prodl,indf2
  1403                           
  1404                           ;FRAME.c: 877: CAN_GenID(message,identyfikator);
  1405  00134C  C014  F006         	movff	FRAME_HandleCanFrame@message,CAN_GenID@message
  1406  001350  C015  F007         	movff	FRAME_HandleCanFrame@message+1,CAN_GenID@message+1
  1407  001354  C01B  F008         	movff	FRAME_HandleCanFrame@identyfikator,CAN_GenID@frameID
  1408  001358  ECE4  F011         	call	_CAN_GenID	;wreg free
  1409                           
  1410                           ;FRAME.c: 878: CAN_SendFrame(message);
  1411  00135C  C014  F00B         	movff	FRAME_HandleCanFrame@message,CAN_SendFrame@message
  1412  001360  C015  F00C         	movff	FRAME_HandleCanFrame@message+1,CAN_SendFrame@message+1
  1413  001364  EC52  F00B         	call	_CAN_SendFrame	;wreg free
  1414                           
  1415                           ;FRAME.c: 889: while(RXB0CONbits.FILHIT3)
  1416  001368  D004               	goto	l708
  1417  00136A                     l709:
  1418                           
  1419                           ;FRAME.c: 890: {;FRAME.c: 891: if(TXB0CONbits.TXERR == 1){
  1420  00136A  010F               	movlb	15	; () banked
  1421  00136C  B940               	btfsc	64,4,b	;volatile
  1422                           
  1423                           ; BSR set to: 15
  1424                           ;FRAME.c: 892: LED_Error();
  1425  00136E  EC64  F015         	call	_LED_Error	;wreg free
  1426  001372                     l708:
  1427  001372  A660               	btfss	3936,3,c	;volatile
  1428  001374  0012               	return	
  1429  001376  D7F9               	goto	l709
  1430  001378                     __end_of_FRAME_HandleCanFrame:
  1431                           	opt callstack 0
  1432                           
  1433 ;; *************** function _LED_Error *****************
  1434 ;; Defined at:
  1435 ;;		line 49 in file "LED.c"
  1436 ;; Parameters:    Size  Location     Type
  1437 ;;		None
  1438 ;; Auto vars:     Size  Location     Type
  1439 ;;		None
  1440 ;; Return value:  Size  Location     Type
  1441 ;;                  2  368[None  ] unsigned int 
  1442 ;; Registers used:
  1443 ;;		wreg, status,2, status,0, cstack
  1444 ;; Tracked objects:
  1445 ;;		On entry : 0/0
  1446 ;;		On exit  : 0/0
  1447 ;;		Unchanged: 0/0
  1448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1453 ;;Total ram usage:        0 bytes
  1454 ;; Hardware stack levels used:    1
  1455 ;; Hardware stack levels required when called:    4
  1456 ;; This function calls:
  1457 ;;		_LED_Control
  1458 ;; This function is called by:
  1459 ;;		_FRAME_HandleCanFrame
  1460 ;; This function uses a non-reentrant model
  1461 ;;
  1462                           
  1463                           	psect	text3
  1464  002AC8                     __ptext3:
  1465                           	opt callstack 0
  1466  002AC8                     _LED_Error:
  1467                           	opt callstack 24
  1468                           
  1469                           ;LED.c: 51: LED_Control(RED,0b1010101010);
  1470                           
  1471                           ;incstack = 0
  1472  002AC8  0E02               	movlw	2
  1473  002ACA  6E07               	movwf	LED_Control@diode+1,c
  1474  002ACC  0EAA               	movlw	170
  1475  002ACE  6E06               	movwf	LED_Control@diode,c
  1476  002AD0  0E00               	movlw	0
  1477  002AD2  EC0B  F00C         	call	_LED_Control
  1478                           
  1479                           ;LED.c: 52: LED_Control(GREEN,0b0000000000);
  1480  002AD6  0E00               	movlw	0
  1481  002AD8  6E07               	movwf	LED_Control@diode+1,c
  1482  002ADA  0E00               	movlw	0
  1483  002ADC  6E06               	movwf	LED_Control@diode,c
  1484  002ADE  0E01               	movlw	1
  1485  002AE0  EC0B  F00C         	call	_LED_Control
  1486  002AE4  0012               	return		;funcret
  1487  002AE6                     __end_of_LED_Error:
  1488                           	opt callstack 0
  1489                           
  1490 ;; *************** function _FRAME_SoftwareVersion *****************
  1491 ;; Defined at:
  1492 ;;		line 618 in file "FRAME.c"
  1493 ;; Parameters:    Size  Location     Type
  1494 ;;  message         2    5[COMRAM] PTR struct .
  1495 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1496 ;; Auto vars:     Size  Location     Type
  1497 ;;		None
  1498 ;; Return value:  Size  Location     Type
  1499 ;;                  1    wreg      void 
  1500 ;; Registers used:
  1501 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1502 ;; Tracked objects:
  1503 ;;		On entry : 0/0
  1504 ;;		On exit  : 0/0
  1505 ;;		Unchanged: 0/0
  1506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1507 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1509 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1510 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1511 ;;Total ram usage:        3 bytes
  1512 ;; Hardware stack levels used:    1
  1513 ;; Hardware stack levels required when called:    3
  1514 ;; This function calls:
  1515 ;;		Nothing
  1516 ;; This function is called by:
  1517 ;;		_FRAME_HandleCanFrame
  1518 ;; This function uses a non-reentrant model
  1519 ;;
  1520                           
  1521                           	psect	text4
  1522  002528                     __ptext4:
  1523                           	opt callstack 0
  1524  002528                     _FRAME_SoftwareVersion:
  1525                           	opt callstack 25
  1526                           
  1527                           ;FRAME.c: 621: if(message->message_type == 0x02)
  1528                           
  1529                           ;incstack = 0
  1530  002528  EE20 F001          	lfsr	2,1
  1531  00252C  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1532  00252E  26D9               	addwf	fsr2l,f,c
  1533  002530  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1534  002532  22DA               	addwfc	fsr2h,f,c
  1535  002534  0E02               	movlw	2
  1536  002536  18DE               	xorwf	postinc2,w,c
  1537  002538  A4D8               	btfss	status,2,c
  1538  00253A  0012               	return	
  1539                           
  1540                           ;FRAME.c: 622: {;FRAME.c: 623: message->data_length = 4;
  1541  00253C  EE20 F010          	lfsr	2,16
  1542  002540  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1543  002542  26D9               	addwf	fsr2l,f,c
  1544  002544  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1545  002546  22DA               	addwfc	fsr2h,f,c
  1546  002548  0E04               	movlw	4
  1547  00254A  6EDF               	movwf	indf2,c
  1548                           
  1549                           ;FRAME.c: 624: message->data[0] = (unsigned char)(Dane->wersjaOprogramowaniaU16 >> 8);
  1550  00254C  EE20 F008          	lfsr	2,8
  1551  002550  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1552  002552  26D9               	addwf	fsr2l,f,c
  1553  002554  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1554  002556  22DA               	addwfc	fsr2h,f,c
  1555  002558  5005               	movf	5,w,c
  1556  00255A  6EDF               	movwf	indf2,c
  1557                           
  1558                           ;FRAME.c: 625: message->data[1] = (unsigned char)Dane->wersjaOprogramowaniaU16;
  1559  00255C  EE20 F009          	lfsr	2,9
  1560  002560  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1561  002562  26D9               	addwf	fsr2l,f,c
  1562  002564  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1563  002566  22DA               	addwfc	fsr2h,f,c
  1564  002568  C004 FFDF          	movff	4,indf2
  1565                           
  1566                           ;FRAME.c: 626: message->data[2] = (unsigned char)(Dane->wersjaSprzetuU16 >> 8);
  1567  00256C  EE20 F00A          	lfsr	2,10
  1568  002570  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1569  002572  26D9               	addwf	fsr2l,f,c
  1570  002574  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1571  002576  22DA               	addwfc	fsr2h,f,c
  1572  002578  500B               	movf	11,w,c
  1573  00257A  6EDF               	movwf	indf2,c
  1574                           
  1575                           ;FRAME.c: 627: message->data[3] = (unsigned char)Dane->wersjaSprzetuU16;
  1576  00257C  EE20 F00B          	lfsr	2,11
  1577  002580  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1578  002582  26D9               	addwf	fsr2l,f,c
  1579  002584  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1580  002586  22DA               	addwfc	fsr2h,f,c
  1581  002588  C00A FFDF          	movff	10,indf2
  1582                           
  1583                           ;FRAME.c: 628: }
  1584  00258C  0012               	return		;funcret
  1585  00258E                     __end_of_FRAME_SoftwareVersion:
  1586                           	opt callstack 0
  1587                           
  1588 ;; *************** function _FRAME_SensorExcitationStatus *****************
  1589 ;; Defined at:
  1590 ;;		line 64 in file "FRAME.c"
  1591 ;; Parameters:    Size  Location     Type
  1592 ;;  message         2    7[COMRAM] PTR struct .
  1593 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1594 ;; Auto vars:     Size  Location     Type
  1595 ;;  tru             2   11[COMRAM] unsigned int 
  1596 ;; Return value:  Size  Location     Type
  1597 ;;                  1    wreg      void 
  1598 ;; Registers used:
  1599 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1600 ;; Tracked objects:
  1601 ;;		On entry : 0/0
  1602 ;;		On exit  : 0/0
  1603 ;;		Unchanged: 0/0
  1604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1605 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1606 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1607 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1608 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1609 ;;Total ram usage:        6 bytes
  1610 ;; Hardware stack levels used:    1
  1611 ;; Hardware stack levels required when called:    4
  1612 ;; This function calls:
  1613 ;;		_IsInNeighbors
  1614 ;;		_LOCK_Get
  1615 ;;		_LOCK_Set
  1616 ;;		_MOC_Aktualna_Temperatura
  1617 ;;		_MOC_Frame_Counter
  1618 ;;		_MOC_NOTWORK
  1619 ;;		_MOC_Wynikowa_wartosc_roznicowa
  1620 ;; This function is called by:
  1621 ;;		_FRAME_HandleCanFrame
  1622 ;; This function uses a non-reentrant model
  1623 ;;
  1624                           
  1625                           	psect	text5
  1626  001AB0                     __ptext5:
  1627                           	opt callstack 0
  1628  001AB0                     _FRAME_SensorExcitationStatus:
  1629                           	opt callstack 24
  1630                           
  1631                           ;FRAME.c: 67: static UINT statwect = 0b00000000;;FRAME.c: 68: if(message->message_type =
      +                          = 0x02)
  1632                           
  1633                           ;incstack = 0
  1634  001AB0  EE20 F001          	lfsr	2,1
  1635  001AB4  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1636  001AB6  26D9               	addwf	fsr2l,f,c
  1637  001AB8  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1638  001ABA  22DA               	addwfc	fsr2h,f,c
  1639  001ABC  0E02               	movlw	2
  1640  001ABE  18DE               	xorwf	postinc2,w,c
  1641  001AC0  A4D8               	btfss	status,2,c
  1642  001AC2  D047               	goto	l4553
  1643                           
  1644                           ;FRAME.c: 69: {;FRAME.c: 70: message->data_length = 6;
  1645  001AC4  EE20 F010          	lfsr	2,16
  1646  001AC8  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1647  001ACA  26D9               	addwf	fsr2l,f,c
  1648  001ACC  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1649  001ACE  22DA               	addwfc	fsr2h,f,c
  1650  001AD0  0E06               	movlw	6
  1651  001AD2  6EDF               	movwf	indf2,c
  1652                           
  1653                           ;FRAME.c: 76: message->data[0] = LOCK_Get();
  1654  001AD4  EE20 F008          	lfsr	2,8
  1655  001AD8  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1656  001ADA  26D9               	addwf	fsr2l,f,c
  1657  001ADC  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1658  001ADE  22DA               	addwfc	fsr2h,f,c
  1659  001AE0  ECD7  F015         	call	_LOCK_Get	;wreg free
  1660  001AE4  6EDF               	movwf	indf2,c
  1661                           
  1662                           ;FRAME.c: 77: message->data[1] = MOC_Wynikowa_wartosc_roznicowa() >> 8 ;
  1663  001AE6  EE20 F009          	lfsr	2,9
  1664  001AEA  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1665  001AEC  26D9               	addwf	fsr2l,f,c
  1666  001AEE  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1667  001AF0  22DA               	addwfc	fsr2h,f,c
  1668  001AF2  ECB1  F015         	call	_MOC_Wynikowa_wartosc_roznicowa	;wreg free
  1669  001AF6  C007  F006         	movff	?_MOC_Wynikowa_wartosc_roznicowa+1,?_MOC_Wynikowa_wartosc_roznicowa
  1670  001AFA  6A07               	clrf	?_MOC_Wynikowa_wartosc_roznicowa+1,c
  1671  001AFC  5006               	movf	?_MOC_Wynikowa_wartosc_roznicowa,w,c
  1672  001AFE  6EDF               	movwf	indf2,c
  1673                           
  1674                           ;FRAME.c: 78: message->data[2] = MOC_Wynikowa_wartosc_roznicowa() & 0x00FF;
  1675  001B00  EE20 F00A          	lfsr	2,10
  1676  001B04  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1677  001B06  26D9               	addwf	fsr2l,f,c
  1678  001B08  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1679  001B0A  22DA               	addwfc	fsr2h,f,c
  1680  001B0C  ECB1  F015         	call	_MOC_Wynikowa_wartosc_roznicowa	;wreg free
  1681  001B10  5006               	movf	?_MOC_Wynikowa_wartosc_roznicowa,w,c
  1682  001B12  6EDF               	movwf	indf2,c
  1683                           
  1684                           ;FRAME.c: 79: message->data[3] = MOC_Frame_Counter();
  1685  001B14  EE20 F00B          	lfsr	2,11
  1686  001B18  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1687  001B1A  26D9               	addwf	fsr2l,f,c
  1688  001B1C  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1689  001B1E  22DA               	addwfc	fsr2h,f,c
  1690  001B20  EC9C  F015         	call	_MOC_Frame_Counter	;wreg free
  1691  001B24  5006               	movf	?_MOC_Frame_Counter,w,c
  1692  001B26  6EDF               	movwf	indf2,c
  1693                           
  1694                           ;FRAME.c: 80: message->data[4] = MOC_Aktualna_Temperatura();
  1695  001B28  EE20 F00C          	lfsr	2,12
  1696  001B2C  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1697  001B2E  26D9               	addwf	fsr2l,f,c
  1698  001B30  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1699  001B32  22DA               	addwfc	fsr2h,f,c
  1700  001B34  ECB6  F015         	call	_MOC_Aktualna_Temperatura	;wreg free
  1701  001B38  5006               	movf	?_MOC_Aktualna_Temperatura,w,c
  1702  001B3A  6EDF               	movwf	indf2,c
  1703                           
  1704                           ;FRAME.c: 81: message->data[5] = MOC_NOTWORK();
  1705  001B3C  EE20 F00D          	lfsr	2,13
  1706  001B40  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1707  001B42  26D9               	addwf	fsr2l,f,c
  1708  001B44  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1709  001B46  22DA               	addwfc	fsr2h,f,c
  1710  001B48  ECCA  F015         	call	_MOC_NOTWORK	;wreg free
  1711  001B4C  5006               	movf	?_MOC_NOTWORK,w,c
  1712  001B4E  6EDF               	movwf	indf2,c
  1713                           
  1714                           ;FRAME.c: 91: }
  1715  001B50  0012               	return	
  1716  001B52                     l4553:
  1717                           
  1718                           ;FRAME.c: 92: else;FRAME.c: 93: {;FRAME.c: 95: UINT tru = IsInNeighbors(message->id.w[0]
      +                          );
  1719  001B52  EE20 F004          	lfsr	2,4
  1720  001B56  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1721  001B58  26D9               	addwf	fsr2l,f,c
  1722  001B5A  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1723  001B5C  22DA               	addwfc	fsr2h,f,c
  1724  001B5E  CFDE F006          	movff	postinc2,IsInNeighbors@message_adress
  1725  001B62  CFDD F007          	movff	postdec2,IsInNeighbors@message_adress+1
  1726  001B66  ECE8  F00E         	call	_IsInNeighbors	;wreg free
  1727  001B6A  C006  F00C         	movff	?_IsInNeighbors,FRAME_SensorExcitationStatus@tru
  1728  001B6E  C007  F00D         	movff	?_IsInNeighbors+1,FRAME_SensorExcitationStatus@tru+1
  1729                           
  1730                           ;FRAME.c: 98: if(message->data[0]==0)
  1731  001B72  EE20 F008          	lfsr	2,8
  1732  001B76  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1733  001B78  26D9               	addwf	fsr2l,f,c
  1734  001B7A  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1735  001B7C  22DA               	addwfc	fsr2h,f,c
  1736  001B7E  50DF               	movf	indf2,w,c
  1737  001B80  A4D8               	btfss	status,2,c
  1738  001B82  D00A               	goto	l4559
  1739                           
  1740                           ;FRAME.c: 99: {;FRAME.c: 101: statwect = statwect &( ~tru );
  1741  001B84  1C0C               	comf	FRAME_SensorExcitationStatus@tru,w,c
  1742  001B86  6E0A               	movwf	??_FRAME_SensorExcitationStatus& (0+255),c
  1743  001B88  1C0D               	comf	FRAME_SensorExcitationStatus@tru+1,w,c
  1744  001B8A  6E0B               	movwf	(??_FRAME_SensorExcitationStatus+1)& (0+255),c
  1745  001B8C  501E               	movf	FRAME_SensorExcitationStatus@statwect,w,c
  1746  001B8E  140A               	andwf	??_FRAME_SensorExcitationStatus,w,c
  1747  001B90  6E1E               	movwf	FRAME_SensorExcitationStatus@statwect,c
  1748  001B92  501F               	movf	FRAME_SensorExcitationStatus@statwect+1,w,c
  1749  001B94  140B               	andwf	??_FRAME_SensorExcitationStatus+1,w,c
  1750  001B96  D005               	goto	L1
  1751  001B98                     l4559:
  1752                           
  1753                           ;FRAME.c: 103: else;FRAME.c: 104: {;FRAME.c: 105: statwect = statwect| tru;
  1754  001B98  500C               	movf	FRAME_SensorExcitationStatus@tru,w,c
  1755  001B9A  101E               	iorwf	FRAME_SensorExcitationStatus@statwect,w,c
  1756  001B9C  6E1E               	movwf	FRAME_SensorExcitationStatus@statwect,c
  1757  001B9E  500D               	movf	FRAME_SensorExcitationStatus@tru+1,w,c
  1758  001BA0  101F               	iorwf	FRAME_SensorExcitationStatus@statwect+1,w,c
  1759  001BA2                     L1:
  1760  001BA2  6E1F               	movwf	FRAME_SensorExcitationStatus@statwect+1,c
  1761                           
  1762                           ;FRAME.c: 106: };FRAME.c: 108: if(statwect>0)
  1763  001BA4  501E               	movf	FRAME_SensorExcitationStatus@statwect,w,c
  1764  001BA6  101F               	iorwf	FRAME_SensorExcitationStatus@statwect+1,w,c
  1765  001BA8  B4D8               	btfsc	status,2,c
  1766  001BAA  D00B               	goto	l4567
  1767                           
  1768                           ;FRAME.c: 109: {;FRAME.c: 110: if(1 != LOCK_Get())
  1769  001BAC  ECD7  F015         	call	_LOCK_Get	;wreg free
  1770  001BB0  06E8               	decf	wreg,f,c
  1771  001BB2  B4D8               	btfsc	status,2,c
  1772  001BB4  0012               	return	
  1773                           
  1774                           ;FRAME.c: 111: {;FRAME.c: 112: DaneCan.Flags.wyslijRamkeStanu = 1;
  1775  001BB6  0100               	movlb	0	; () banked
  1776  001BB8  81CB               	bsf	_DaneCan& (0+255),0,b
  1777                           
  1778                           ; BSR set to: 0
  1779                           ;FRAME.c: 113: LOCK_Set(1);
  1780  001BBA  0E01               	movlw	1
  1781  001BBC  ECCE  F015         	call	_LOCK_Set
  1782  001BC0  0012               	return	
  1783  001BC2                     l4567:
  1784                           
  1785                           ;FRAME.c: 117: else;FRAME.c: 118: {;FRAME.c: 120: if(1 == LOCK_Get())
  1786  001BC2  ECD7  F015         	call	_LOCK_Get	;wreg free
  1787  001BC6  06E8               	decf	wreg,f,c
  1788  001BC8  A4D8               	btfss	status,2,c
  1789  001BCA  0012               	return	
  1790                           
  1791                           ;FRAME.c: 121: {;FRAME.c: 122: DaneCan.Flags.wyslijRamkeStanu = 1;
  1792  001BCC  0100               	movlb	0	; () banked
  1793  001BCE  81CB               	bsf	_DaneCan& (0+255),0,b
  1794                           
  1795                           ; BSR set to: 0
  1796                           ;FRAME.c: 123: LOCK_Set(0);
  1797  001BD0  0E00               	movlw	0
  1798  001BD2  ECCE  F015         	call	_LOCK_Set
  1799  001BD6  0012               	return		;funcret
  1800  001BD8                     __end_of_FRAME_SensorExcitationStatus:
  1801                           	opt callstack 0
  1802                           
  1803 ;; *************** function _MOC_Wynikowa_wartosc_roznicowa *****************
  1804 ;; Defined at:
  1805 ;;		line 34 in file "MOC_Funct.c"
  1806 ;; Parameters:    Size  Location     Type
  1807 ;;		None
  1808 ;; Auto vars:     Size  Location     Type
  1809 ;;		None
  1810 ;; Return value:  Size  Location     Type
  1811 ;;                  2    5[COMRAM] unsigned int 
  1812 ;; Registers used:
  1813 ;;		wreg, status,2
  1814 ;; Tracked objects:
  1815 ;;		On entry : 0/0
  1816 ;;		On exit  : 0/0
  1817 ;;		Unchanged: 0/0
  1818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1819 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1822 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1823 ;;Total ram usage:        2 bytes
  1824 ;; Hardware stack levels used:    1
  1825 ;; Hardware stack levels required when called:    3
  1826 ;; This function calls:
  1827 ;;		Nothing
  1828 ;; This function is called by:
  1829 ;;		_FRAME_SensorExcitationStatus
  1830 ;; This function uses a non-reentrant model
  1831 ;;
  1832                           
  1833                           	psect	text6
  1834  002B62                     __ptext6:
  1835                           	opt callstack 0
  1836  002B62                     _MOC_Wynikowa_wartosc_roznicowa:
  1837                           	opt callstack 24
  1838                           
  1839                           ;MOC_Funct.c: 36: return 0x0220;
  1840                           
  1841                           ;incstack = 0
  1842  002B62  0E02               	movlw	2
  1843  002B64  6E07               	movwf	?_MOC_Wynikowa_wartosc_roznicowa+1,c
  1844  002B66  0E20               	movlw	32
  1845  002B68  6E06               	movwf	?_MOC_Wynikowa_wartosc_roznicowa,c
  1846  002B6A  0012               	return		;funcret
  1847  002B6C                     __end_of_MOC_Wynikowa_wartosc_roznicowa:
  1848                           	opt callstack 0
  1849                           
  1850 ;; *************** function _MOC_NOTWORK *****************
  1851 ;; Defined at:
  1852 ;;		line 48 in file "MOC_Funct.c"
  1853 ;; Parameters:    Size  Location     Type
  1854 ;;		None
  1855 ;; Auto vars:     Size  Location     Type
  1856 ;;		None
  1857 ;; Return value:  Size  Location     Type
  1858 ;;                  2    5[COMRAM] unsigned int 
  1859 ;; Registers used:
  1860 ;;		wreg, status,2
  1861 ;; Tracked objects:
  1862 ;;		On entry : 0/0
  1863 ;;		On exit  : 0/0
  1864 ;;		Unchanged: 0/0
  1865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1866 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1869 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1870 ;;Total ram usage:        2 bytes
  1871 ;; Hardware stack levels used:    1
  1872 ;; Hardware stack levels required when called:    3
  1873 ;; This function calls:
  1874 ;;		Nothing
  1875 ;; This function is called by:
  1876 ;;		_FRAME_SensorExcitationStatus
  1877 ;; This function uses a non-reentrant model
  1878 ;;
  1879                           
  1880                           	psect	text7
  1881  002B94                     __ptext7:
  1882                           	opt callstack 0
  1883  002B94                     _MOC_NOTWORK:
  1884                           	opt callstack 24
  1885                           
  1886                           ;MOC_Funct.c: 50: return 0xFF;
  1887                           
  1888                           ;incstack = 0
  1889  002B94  0E00               	movlw	0
  1890  002B96  6E07               	movwf	?_MOC_NOTWORK+1,c
  1891  002B98  6806               	setf	?_MOC_NOTWORK,c
  1892  002B9A  0012               	return		;funcret
  1893  002B9C                     __end_of_MOC_NOTWORK:
  1894                           	opt callstack 0
  1895                           
  1896 ;; *************** function _MOC_Frame_Counter *****************
  1897 ;; Defined at:
  1898 ;;		line 39 in file "MOC_Funct.c"
  1899 ;; Parameters:    Size  Location     Type
  1900 ;;		None
  1901 ;; Auto vars:     Size  Location     Type
  1902 ;;		None
  1903 ;; Return value:  Size  Location     Type
  1904 ;;                  2    5[COMRAM] unsigned int 
  1905 ;; Registers used:
  1906 ;;		wreg, status,2, status,0
  1907 ;; Tracked objects:
  1908 ;;		On entry : 0/0
  1909 ;;		On exit  : 0/0
  1910 ;;		Unchanged: 0/0
  1911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1912 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1915 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1916 ;;Total ram usage:        2 bytes
  1917 ;; Hardware stack levels used:    1
  1918 ;; Hardware stack levels required when called:    3
  1919 ;; This function calls:
  1920 ;;		Nothing
  1921 ;; This function is called by:
  1922 ;;		_FRAME_SensorExcitationStatus
  1923 ;; This function uses a non-reentrant model
  1924 ;;
  1925                           
  1926                           	psect	text8
  1927  002B38                     __ptext8:
  1928                           	opt callstack 0
  1929  002B38                     _MOC_Frame_Counter:
  1930                           	opt callstack 24
  1931                           
  1932                           ;MOC_Funct.c: 41: static UINT zeta = 0x11;;MOC_Funct.c: 42: return zeta++;
  1933                           
  1934                           ;incstack = 0
  1935  002B38  0100               	movlb	0	; () banked
  1936  002B3A  51EF               	movf	MOC_Frame_Counter@zeta& (0+255),w,b
  1937  002B3C  6E06               	movwf	?_MOC_Frame_Counter,c
  1938  002B3E  51F0               	movf	(MOC_Frame_Counter@zeta+1)& (0+255),w,b
  1939  002B40  6E07               	movwf	?_MOC_Frame_Counter+1,c
  1940  002B42  4BEF               	infsnz	MOC_Frame_Counter@zeta& (0+255),f,b
  1941  002B44  2BF0               	incf	(MOC_Frame_Counter@zeta+1)& (0+255),f,b
  1942                           
  1943                           ; BSR set to: 0
  1944  002B46  0012               	return		;funcret
  1945  002B48                     __end_of_MOC_Frame_Counter:
  1946                           	opt callstack 0
  1947                           
  1948 ;; *************** function _MOC_Aktualna_Temperatura *****************
  1949 ;; Defined at:
  1950 ;;		line 44 in file "MOC_Funct.c"
  1951 ;; Parameters:    Size  Location     Type
  1952 ;;		None
  1953 ;; Auto vars:     Size  Location     Type
  1954 ;;		None
  1955 ;; Return value:  Size  Location     Type
  1956 ;;                  2    5[COMRAM] unsigned int 
  1957 ;; Registers used:
  1958 ;;		wreg, status,2
  1959 ;; Tracked objects:
  1960 ;;		On entry : 0/0
  1961 ;;		On exit  : 0/0
  1962 ;;		Unchanged: 0/0
  1963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1964 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1967 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1968 ;;Total ram usage:        2 bytes
  1969 ;; Hardware stack levels used:    1
  1970 ;; Hardware stack levels required when called:    3
  1971 ;; This function calls:
  1972 ;;		Nothing
  1973 ;; This function is called by:
  1974 ;;		_FRAME_SensorExcitationStatus
  1975 ;; This function uses a non-reentrant model
  1976 ;;
  1977                           
  1978                           	psect	text9
  1979  002B6C                     __ptext9:
  1980                           	opt callstack 0
  1981  002B6C                     _MOC_Aktualna_Temperatura:
  1982                           	opt callstack 24
  1983                           
  1984                           ;MOC_Funct.c: 46: return 0x1B;
  1985                           
  1986                           ; BSR set to: 0
  1987                           ;incstack = 0
  1988  002B6C  0E00               	movlw	0
  1989  002B6E  6E07               	movwf	?_MOC_Aktualna_Temperatura+1,c
  1990  002B70  0E1B               	movlw	27
  1991  002B72  6E06               	movwf	?_MOC_Aktualna_Temperatura,c
  1992  002B74  0012               	return		;funcret
  1993  002B76                     __end_of_MOC_Aktualna_Temperatura:
  1994                           	opt callstack 0
  1995                           
  1996 ;; *************** function _LOCK_Set *****************
  1997 ;; Defined at:
  1998 ;;		line 84 in file "LED.c"
  1999 ;; Parameters:    Size  Location     Type
  2000 ;;  k               1    wreg     unsigned char 
  2001 ;; Auto vars:     Size  Location     Type
  2002 ;;  k               1    5[COMRAM] unsigned char 
  2003 ;; Return value:  Size  Location     Type
  2004 ;;                  1    wreg      void 
  2005 ;; Registers used:
  2006 ;;		wreg
  2007 ;; Tracked objects:
  2008 ;;		On entry : 0/0
  2009 ;;		On exit  : 0/0
  2010 ;;		Unchanged: 0/0
  2011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2013 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2015 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2016 ;;Total ram usage:        1 bytes
  2017 ;; Hardware stack levels used:    1
  2018 ;; Hardware stack levels required when called:    3
  2019 ;; This function calls:
  2020 ;;		Nothing
  2021 ;; This function is called by:
  2022 ;;		_FRAME_SensorExcitationStatus
  2023 ;; This function uses a non-reentrant model
  2024 ;;
  2025                           
  2026                           	psect	text10
  2027  002B9C                     __ptext10:
  2028                           	opt callstack 0
  2029  002B9C                     _LOCK_Set:
  2030                           	opt callstack 24
  2031                           
  2032                           ;incstack = 0
  2033                           ;LOCK_Set@k stored from wreg
  2034  002B9C  6E06               	movwf	LOCK_Set@k,c
  2035                           
  2036                           ;LED.c: 86: LOCK = k;
  2037  002B9E  C006  F039         	movff	LOCK_Set@k,_LOCK
  2038  002BA2  0012               	return		;funcret
  2039  002BA4                     __end_of_LOCK_Set:
  2040                           	opt callstack 0
  2041                           
  2042 ;; *************** function _LOCK_Get *****************
  2043 ;; Defined at:
  2044 ;;		line 100 in file "LED.c"
  2045 ;; Parameters:    Size  Location     Type
  2046 ;;		None
  2047 ;; Auto vars:     Size  Location     Type
  2048 ;;		None
  2049 ;; Return value:  Size  Location     Type
  2050 ;;                  1    wreg      unsigned char 
  2051 ;; Registers used:
  2052 ;;		wreg, status,2
  2053 ;; Tracked objects:
  2054 ;;		On entry : 0/0
  2055 ;;		On exit  : 0/0
  2056 ;;		Unchanged: 0/0
  2057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2061 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2062 ;;Total ram usage:        0 bytes
  2063 ;; Hardware stack levels used:    1
  2064 ;; Hardware stack levels required when called:    3
  2065 ;; This function calls:
  2066 ;;		Nothing
  2067 ;; This function is called by:
  2068 ;;		_FRAME_SensorExcitationStatus
  2069 ;; This function uses a non-reentrant model
  2070 ;;
  2071                           
  2072                           	psect	text11
  2073  002BAE                     __ptext11:
  2074                           	opt callstack 0
  2075  002BAE                     _LOCK_Get:
  2076                           	opt callstack 24
  2077                           
  2078                           ;LED.c: 102: return LOCK;
  2079                           
  2080                           ;incstack = 0
  2081  002BAE  5039               	movf	_LOCK,w,c
  2082  002BB0  0012               	return		;funcret
  2083  002BB2                     __end_of_LOCK_Get:
  2084                           	opt callstack 0
  2085                           
  2086 ;; *************** function _IsInNeighbors *****************
  2087 ;; Defined at:
  2088 ;;		line 142 in file "FRAME.c"
  2089 ;; Parameters:    Size  Location     Type
  2090 ;;  message_adre    2    5[COMRAM] unsigned int 
  2091 ;; Auto vars:     Size  Location     Type
  2092 ;;  i               2    0        unsigned short 
  2093 ;; Return value:  Size  Location     Type
  2094 ;;                  2    5[COMRAM] unsigned int 
  2095 ;; Registers used:
  2096 ;;		wreg, status,2, status,0
  2097 ;; Tracked objects:
  2098 ;;		On entry : 0/0
  2099 ;;		On exit  : 0/0
  2100 ;;		Unchanged: 0/0
  2101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2102 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2105 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2106 ;;Total ram usage:        2 bytes
  2107 ;; Hardware stack levels used:    1
  2108 ;; Hardware stack levels required when called:    3
  2109 ;; This function calls:
  2110 ;;		Nothing
  2111 ;; This function is called by:
  2112 ;;		_FRAME_SensorExcitationStatus
  2113 ;; This function uses a non-reentrant model
  2114 ;;
  2115                           
  2116                           	psect	text12
  2117  001DD0                     __ptext12:
  2118                           	opt callstack 0
  2119  001DD0                     _IsInNeighbors:
  2120                           	opt callstack 24
  2121                           
  2122                           ;FRAME.c: 144: WORD i;;FRAME.c: 146: if(NeightAdress1==message_adress)
  2123                           
  2124                           ;incstack = 0
  2125  001DD0  5006               	movf	IsInNeighbors@message_adress,w,c
  2126  001DD2  1832               	xorwf	_NeightAdress1,w,c	;volatile
  2127  001DD4  E109               	bnz	l4313
  2128  001DD6  5007               	movf	IsInNeighbors@message_adress+1,w,c
  2129  001DD8  1833               	xorwf	_NeightAdress1+1,w,c	;volatile
  2130  001DDA  A4D8               	btfss	status,2,c
  2131  001DDC  D005               	goto	l4313
  2132                           
  2133                           ;FRAME.c: 147: {;FRAME.c: 148: return 0b1;
  2134  001DDE  0E00               	movlw	0
  2135  001DE0  6E07               	movwf	?_IsInNeighbors+1,c
  2136  001DE2  0E01               	movlw	1
  2137  001DE4  6E06               	movwf	?_IsInNeighbors,c
  2138  001DE6  0012               	return	
  2139  001DE8                     l4313:
  2140                           
  2141                           ;FRAME.c: 149: };FRAME.c: 150: if(NeightAdress2==message_adress)
  2142  001DE8  5006               	movf	IsInNeighbors@message_adress,w,c
  2143  001DEA  1846               	xorwf	_NeightAdress2,w,c	;volatile
  2144  001DEC  E109               	bnz	l4319
  2145  001DEE  5007               	movf	IsInNeighbors@message_adress+1,w,c
  2146  001DF0  1847               	xorwf	_NeightAdress2+1,w,c	;volatile
  2147  001DF2  A4D8               	btfss	status,2,c
  2148  001DF4  D005               	goto	l4319
  2149                           
  2150                           ;FRAME.c: 151: {;FRAME.c: 152: return 0b10;
  2151  001DF6  0E00               	movlw	0
  2152  001DF8  6E07               	movwf	?_IsInNeighbors+1,c
  2153  001DFA  0E02               	movlw	2
  2154  001DFC  6E06               	movwf	?_IsInNeighbors,c
  2155  001DFE  0012               	return	
  2156  001E00                     l4319:
  2157                           
  2158                           ;FRAME.c: 153: };FRAME.c: 154: if(NeightAdress3==message_adress)
  2159  001E00  5006               	movf	IsInNeighbors@message_adress,w,c
  2160  001E02  1830               	xorwf	_NeightAdress3,w,c	;volatile
  2161  001E04  E109               	bnz	l4325
  2162  001E06  5007               	movf	IsInNeighbors@message_adress+1,w,c
  2163  001E08  1831               	xorwf	_NeightAdress3+1,w,c	;volatile
  2164  001E0A  A4D8               	btfss	status,2,c
  2165  001E0C  D005               	goto	l4325
  2166                           
  2167                           ;FRAME.c: 155: {;FRAME.c: 156: return 0b100;
  2168  001E0E  0E00               	movlw	0
  2169  001E10  6E07               	movwf	?_IsInNeighbors+1,c
  2170  001E12  0E04               	movlw	4
  2171  001E14  6E06               	movwf	?_IsInNeighbors,c
  2172  001E16  0012               	return	
  2173  001E18                     l4325:
  2174                           
  2175                           ;FRAME.c: 157: };FRAME.c: 158: if(NeightAdress4==message_adress)
  2176  001E18  5006               	movf	IsInNeighbors@message_adress,w,c
  2177  001E1A  182E               	xorwf	_NeightAdress4,w,c	;volatile
  2178  001E1C  E109               	bnz	l4331
  2179  001E1E  5007               	movf	IsInNeighbors@message_adress+1,w,c
  2180  001E20  182F               	xorwf	_NeightAdress4+1,w,c	;volatile
  2181  001E22  A4D8               	btfss	status,2,c
  2182  001E24  D005               	goto	l4331
  2183                           
  2184                           ;FRAME.c: 159: {;FRAME.c: 160: return 0b1000;
  2185  001E26  0E00               	movlw	0
  2186  001E28  6E07               	movwf	?_IsInNeighbors+1,c
  2187  001E2A  0E08               	movlw	8
  2188  001E2C  6E06               	movwf	?_IsInNeighbors,c
  2189  001E2E  0012               	return	
  2190  001E30                     l4331:
  2191                           
  2192                           ;FRAME.c: 161: };FRAME.c: 162: if(NeightAdress5==message_adress)
  2193  001E30  5006               	movf	IsInNeighbors@message_adress,w,c
  2194  001E32  182C               	xorwf	_NeightAdress5,w,c	;volatile
  2195  001E34  E109               	bnz	l4337
  2196  001E36  5007               	movf	IsInNeighbors@message_adress+1,w,c
  2197  001E38  182D               	xorwf	_NeightAdress5+1,w,c	;volatile
  2198  001E3A  A4D8               	btfss	status,2,c
  2199  001E3C  D005               	goto	l4337
  2200                           
  2201                           ;FRAME.c: 163: {;FRAME.c: 164: return 0b10000;
  2202  001E3E  0E00               	movlw	0
  2203  001E40  6E07               	movwf	?_IsInNeighbors+1,c
  2204  001E42  0E10               	movlw	16
  2205  001E44  6E06               	movwf	?_IsInNeighbors,c
  2206  001E46  0012               	return	
  2207  001E48                     l4337:
  2208                           
  2209                           ;FRAME.c: 165: };FRAME.c: 166: if(NeightAdress6==message_adress)
  2210  001E48  5006               	movf	IsInNeighbors@message_adress,w,c
  2211  001E4A  182A               	xorwf	_NeightAdress6,w,c	;volatile
  2212  001E4C  E109               	bnz	l4343
  2213  001E4E  5007               	movf	IsInNeighbors@message_adress+1,w,c
  2214  001E50  182B               	xorwf	_NeightAdress6+1,w,c	;volatile
  2215  001E52  A4D8               	btfss	status,2,c
  2216  001E54  D005               	goto	l4343
  2217                           
  2218                           ;FRAME.c: 167: {;FRAME.c: 168: return 0b100000;
  2219  001E56  0E00               	movlw	0
  2220  001E58  6E07               	movwf	?_IsInNeighbors+1,c
  2221  001E5A  0E20               	movlw	32
  2222  001E5C  6E06               	movwf	?_IsInNeighbors,c
  2223  001E5E  0012               	return	
  2224  001E60                     l4343:
  2225                           
  2226                           ;FRAME.c: 169: };FRAME.c: 170: if(NeightAdress7==message_adress)
  2227  001E60  5006               	movf	IsInNeighbors@message_adress,w,c
  2228  001E62  1828               	xorwf	_NeightAdress7,w,c	;volatile
  2229  001E64  E109               	bnz	l4349
  2230  001E66  5007               	movf	IsInNeighbors@message_adress+1,w,c
  2231  001E68  1829               	xorwf	_NeightAdress7+1,w,c	;volatile
  2232  001E6A  A4D8               	btfss	status,2,c
  2233  001E6C  D005               	goto	l4349
  2234                           
  2235                           ;FRAME.c: 171: {;FRAME.c: 172: return 0b1000000;
  2236  001E6E  0E00               	movlw	0
  2237  001E70  6E07               	movwf	?_IsInNeighbors+1,c
  2238  001E72  0E40               	movlw	64
  2239  001E74  6E06               	movwf	?_IsInNeighbors,c
  2240  001E76  0012               	return	
  2241  001E78                     l4349:
  2242                           
  2243                           ;FRAME.c: 173: };FRAME.c: 174: if(NeightAdress8==message_adress)
  2244  001E78  5006               	movf	IsInNeighbors@message_adress,w,c
  2245  001E7A  1826               	xorwf	_NeightAdress8,w,c	;volatile
  2246  001E7C  E109               	bnz	l4355
  2247  001E7E  5007               	movf	IsInNeighbors@message_adress+1,w,c
  2248  001E80  1827               	xorwf	_NeightAdress8+1,w,c	;volatile
  2249  001E82  A4D8               	btfss	status,2,c
  2250  001E84  D005               	goto	l4355
  2251                           
  2252                           ;FRAME.c: 175: {;FRAME.c: 176: return 0b10000000;
  2253  001E86  0E00               	movlw	0
  2254  001E88  6E07               	movwf	?_IsInNeighbors+1,c
  2255  001E8A  0E80               	movlw	128
  2256  001E8C  6E06               	movwf	?_IsInNeighbors,c
  2257  001E8E  0012               	return	
  2258  001E90                     l4355:
  2259                           
  2260                           ;FRAME.c: 177: };FRAME.c: 192: return 0;
  2261  001E90  0E00               	movlw	0
  2262  001E92  6E07               	movwf	?_IsInNeighbors+1,c
  2263  001E94  0E00               	movlw	0
  2264  001E96  6E06               	movwf	?_IsInNeighbors,c
  2265  001E98  0012               	return		;funcret
  2266  001E9A                     __end_of_IsInNeighbors:
  2267                           	opt callstack 0
  2268                           
  2269 ;; *************** function _FRAME_PrzypisanieDokarty *****************
  2270 ;; Defined at:
  2271 ;;		line 677 in file "FRAME.c"
  2272 ;; Parameters:    Size  Location     Type
  2273 ;;  message         2    5[COMRAM] PTR struct .
  2274 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2275 ;; Auto vars:     Size  Location     Type
  2276 ;;		None
  2277 ;; Return value:  Size  Location     Type
  2278 ;;                  1    wreg      void 
  2279 ;; Registers used:
  2280 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2281 ;; Tracked objects:
  2282 ;;		On entry : 0/0
  2283 ;;		On exit  : 0/0
  2284 ;;		Unchanged: 0/0
  2285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2286 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2288 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2289 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2290 ;;Total ram usage:        6 bytes
  2291 ;; Hardware stack levels used:    1
  2292 ;; Hardware stack levels required when called:    3
  2293 ;; This function calls:
  2294 ;;		Nothing
  2295 ;; This function is called by:
  2296 ;;		_FRAME_HandleCanFrame
  2297 ;; This function uses a non-reentrant model
  2298 ;;
  2299                           
  2300                           	psect	text13
  2301  00209E                     __ptext13:
  2302                           	opt callstack 0
  2303  00209E                     _FRAME_PrzypisanieDokarty:
  2304                           	opt callstack 25
  2305                           
  2306                           ;FRAME.c: 679: if(message->message_type == 0x02)
  2307                           
  2308                           ;incstack = 0
  2309  00209E  EE20 F001          	lfsr	2,1
  2310  0020A2  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2311  0020A4  26D9               	addwf	fsr2l,f,c
  2312  0020A6  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2313  0020A8  22DA               	addwfc	fsr2h,f,c
  2314  0020AA  0E02               	movlw	2
  2315  0020AC  18DE               	xorwf	postinc2,w,c
  2316  0020AE  A4D8               	btfss	status,2,c
  2317  0020B0  D021               	goto	l4651
  2318                           
  2319                           ;FRAME.c: 680: {;FRAME.c: 681: message->data_length = 3;
  2320  0020B2  EE20 F010          	lfsr	2,16
  2321  0020B6  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2322  0020B8  26D9               	addwf	fsr2l,f,c
  2323  0020BA  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2324  0020BC  22DA               	addwfc	fsr2h,f,c
  2325  0020BE  0E03               	movlw	3
  2326  0020C0  6EDF               	movwf	indf2,c
  2327                           
  2328                           ;FRAME.c: 682: message->data[0] = (unsigned char)Dane->NrKarty >> 8 ;
  2329  0020C2  EE20 F008          	lfsr	2,8
  2330  0020C6  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2331  0020C8  26D9               	addwf	fsr2l,f,c
  2332  0020CA  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2333  0020CC  22DA               	addwfc	fsr2h,f,c
  2334  0020CE  0E00               	movlw	0
  2335  0020D0  6EDF               	movwf	indf2,c
  2336                           
  2337                           ;FRAME.c: 683: message->data[1] = (unsigned char)Dane->NrKarty ;
  2338  0020D2  EE20 F009          	lfsr	2,9
  2339  0020D6  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2340  0020D8  26D9               	addwf	fsr2l,f,c
  2341  0020DA  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2342  0020DC  22DA               	addwfc	fsr2h,f,c
  2343  0020DE  C040 FFDF          	movff	64,indf2
  2344                           
  2345                           ;FRAME.c: 684: message->data[2] = (unsigned char)Dane->Nr_WeWy ;
  2346  0020E2  EE20 F00A          	lfsr	2,10
  2347  0020E6  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2348  0020E8  26D9               	addwf	fsr2l,f,c
  2349  0020EA  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2350  0020EC  22DA               	addwfc	fsr2h,f,c
  2351  0020EE  C042 FFDF          	movff	66,indf2
  2352                           
  2353                           ;FRAME.c: 686: }
  2354  0020F2  0012               	return	
  2355  0020F4                     l4651:
  2356                           
  2357                           ;FRAME.c: 687: else;FRAME.c: 688: {;FRAME.c: 689: Dane->NrKarty = (message->data[0] << 8
      +                          ) | (message->data[1]);
  2358  0020F4  EE20 F008          	lfsr	2,8
  2359  0020F8  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2360  0020FA  26D9               	addwf	fsr2l,f,c
  2361  0020FC  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2362  0020FE  22DA               	addwfc	fsr2h,f,c
  2363  002100  50DF               	movf	indf2,w,c
  2364  002102  6E08               	movwf	??_FRAME_PrzypisanieDokarty& (0+255),c
  2365  002104  5008               	movf	??_FRAME_PrzypisanieDokarty,w,c
  2366  002106  6E0A               	movwf	(??_FRAME_PrzypisanieDokarty+2)& (0+255),c
  2367  002108  6A09               	clrf	(??_FRAME_PrzypisanieDokarty+1)& (0+255),c
  2368  00210A  EE20 F009          	lfsr	2,9
  2369  00210E  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2370  002110  26D9               	addwf	fsr2l,f,c
  2371  002112  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2372  002114  22DA               	addwfc	fsr2h,f,c
  2373  002116  50DF               	movf	indf2,w,c
  2374  002118  6E0B               	movwf	(??_FRAME_PrzypisanieDokarty+3)& (0+255),c
  2375  00211A  500B               	movf	??_FRAME_PrzypisanieDokarty+3,w,c
  2376  00211C  1009               	iorwf	??_FRAME_PrzypisanieDokarty+1,w,c
  2377  00211E  6E40               	movwf	64,c
  2378  002120  500A               	movf	??_FRAME_PrzypisanieDokarty+2,w,c
  2379  002122  6E41               	movwf	65,c
  2380                           
  2381                           ;FRAME.c: 690: Dane->Nr_WeWy = (message->data[2]);
  2382  002124  EE20 F00A          	lfsr	2,10
  2383  002128  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2384  00212A  26D9               	addwf	fsr2l,f,c
  2385  00212C  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2386  00212E  22DA               	addwfc	fsr2h,f,c
  2387  002130  50DF               	movf	indf2,w,c
  2388  002132  6E08               	movwf	??_FRAME_PrzypisanieDokarty& (0+255),c
  2389  002134  5008               	movf	??_FRAME_PrzypisanieDokarty,w,c
  2390  002136  6E42               	movwf	66,c
  2391  002138  6A43               	clrf	67,c
  2392  00213A  0012               	return		;funcret
  2393  00213C                     __end_of_FRAME_PrzypisanieDokarty:
  2394                           	opt callstack 0
  2395                           
  2396 ;; *************** function _FRAME_Plot *****************
  2397 ;; Defined at:
  2398 ;;		line 562 in file "FRAME.c"
  2399 ;; Parameters:    Size  Location     Type
  2400 ;;  message         2   12[COMRAM] PTR struct .
  2401 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2402 ;; Auto vars:     Size  Location     Type
  2403 ;;		None
  2404 ;; Return value:  Size  Location     Type
  2405 ;;                  1    wreg      void 
  2406 ;; Registers used:
  2407 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2408 ;; Tracked objects:
  2409 ;;		On entry : 0/0
  2410 ;;		On exit  : 0/0
  2411 ;;		Unchanged: 0/0
  2412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2413 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2415 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2416 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2417 ;;Total ram usage:        3 bytes
  2418 ;; Hardware stack levels used:    1
  2419 ;; Hardware stack levels required when called:    4
  2420 ;; This function calls:
  2421 ;;		___lwdiv
  2422 ;; This function is called by:
  2423 ;;		_FRAME_HandleCanFrame
  2424 ;; This function uses a non-reentrant model
  2425 ;;
  2426                           
  2427                           	psect	text14
  2428  002644                     __ptext14:
  2429                           	opt callstack 0
  2430  002644                     _FRAME_Plot:
  2431                           	opt callstack 24
  2432                           
  2433                           ;FRAME.c: 565: if(message->message_type == 0x02)
  2434                           
  2435                           ;incstack = 0
  2436  002644  EE20 F001          	lfsr	2,1
  2437  002648  500D               	movf	FRAME_Plot@message,w,c
  2438  00264A  26D9               	addwf	fsr2l,f,c
  2439  00264C  500E               	movf	FRAME_Plot@message+1,w,c
  2440  00264E  22DA               	addwfc	fsr2h,f,c
  2441  002650  0E02               	movlw	2
  2442  002652  18DE               	xorwf	postinc2,w,c
  2443  002654  A4D8               	btfss	status,2,c
  2444  002656  D013               	goto	l4641
  2445                           
  2446                           ;FRAME.c: 566: {;FRAME.c: 567: message->data[0] = (BYTE)(Dane->timerRysowaniaWykresuU16/
      +                          10);
  2447  002658  EE20 F008          	lfsr	2,8
  2448  00265C  500D               	movf	FRAME_Plot@message,w,c
  2449  00265E  26D9               	addwf	fsr2l,f,c
  2450  002660  500E               	movf	FRAME_Plot@message+1,w,c
  2451  002662  22DA               	addwfc	fsr2h,f,c
  2452  002664  C00C F006          	movff	12,___lwdiv@dividend
  2453  002668  C00D F007          	movff	13,___lwdiv@dividend+1
  2454  00266C  0E00               	movlw	0
  2455  00266E  6E09               	movwf	___lwdiv@divisor+1,c
  2456  002670  0E0A               	movlw	10
  2457  002672  6E08               	movwf	___lwdiv@divisor,c
  2458  002674  EC4E  F013         	call	___lwdiv	;wreg free
  2459  002678  5006               	movf	?___lwdiv,w,c
  2460  00267A  6EDF               	movwf	indf2,c
  2461                           
  2462                           ;FRAME.c: 568: }
  2463  00267C  0012               	return	
  2464  00267E                     l4641:
  2465                           
  2466                           ;FRAME.c: 569: else;FRAME.c: 570: {;FRAME.c: 571: Dane->timerRysowaniaWykresuU16 = (WORD
      +                          )message->data[0]*10;
  2467  00267E  EE20 F008          	lfsr	2,8
  2468  002682  500D               	movf	FRAME_Plot@message,w,c
  2469  002684  26D9               	addwf	fsr2l,f,c
  2470  002686  500E               	movf	FRAME_Plot@message+1,w,c
  2471  002688  22DA               	addwfc	fsr2h,f,c
  2472  00268A  50DF               	movf	indf2,w,c
  2473  00268C  6E0F               	movwf	??_FRAME_Plot& (0+255),c
  2474  00268E  500F               	movf	??_FRAME_Plot,w,c
  2475  002690  0D0A               	mullw	10
  2476  002692  CFF3 F00C          	movff	prodl,12
  2477  002696  CFF4 F00D          	movff	prodh,13
  2478  00269A  0012               	return		;funcret
  2479  00269C                     __end_of_FRAME_Plot:
  2480                           	opt callstack 0
  2481                           
  2482 ;; *************** function _FRAME_MapPosition *****************
  2483 ;; Defined at:
  2484 ;;		line 588 in file "FRAME.c"
  2485 ;; Parameters:    Size  Location     Type
  2486 ;;  message         2    5[COMRAM] PTR struct .
  2487 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2488 ;; Auto vars:     Size  Location     Type
  2489 ;;		None
  2490 ;; Return value:  Size  Location     Type
  2491 ;;                  1    wreg      void 
  2492 ;; Registers used:
  2493 ;;		None
  2494 ;; Tracked objects:
  2495 ;;		On entry : 0/0
  2496 ;;		On exit  : 0/0
  2497 ;;		Unchanged: 0/0
  2498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2499 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2502 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2503 ;;Total ram usage:        2 bytes
  2504 ;; Hardware stack levels used:    1
  2505 ;; Hardware stack levels required when called:    3
  2506 ;; This function calls:
  2507 ;;		Nothing
  2508 ;; This function is called by:
  2509 ;;		_FRAME_HandleCanFrame
  2510 ;; This function uses a non-reentrant model
  2511 ;;
  2512                           
  2513                           	psect	text15
  2514  002BB2                     __ptext15:
  2515                           	opt callstack 0
  2516  002BB2                     _FRAME_MapPosition:
  2517                           	opt callstack 25
  2518                           
  2519                           ;incstack = 0
  2520  002BB2  0012               	return		;funcret
  2521  002BB4                     __end_of_FRAME_MapPosition:
  2522                           	opt callstack 0
  2523                           
  2524 ;; *************** function _FRAME_ExcitationValue *****************
  2525 ;; Defined at:
  2526 ;;		line 238 in file "FRAME.c"
  2527 ;; Parameters:    Size  Location     Type
  2528 ;;  message         2   11[COMRAM] PTR struct .
  2529 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2530 ;; Auto vars:     Size  Location     Type
  2531 ;;		None
  2532 ;; Return value:  Size  Location     Type
  2533 ;;                  1    wreg      void 
  2534 ;; Registers used:
  2535 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2536 ;; Tracked objects:
  2537 ;;		On entry : 0/0
  2538 ;;		On exit  : 0/0
  2539 ;;		Unchanged: 0/0
  2540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2541 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2543 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2544 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2545 ;;Total ram usage:        6 bytes
  2546 ;; Hardware stack levels used:    1
  2547 ;; Hardware stack levels required when called:    4
  2548 ;; This function calls:
  2549 ;;		___awmod
  2550 ;; This function is called by:
  2551 ;;		_FRAME_HandleCanFrame
  2552 ;; This function uses a non-reentrant model
  2553 ;;
  2554                           
  2555                           	psect	text16
  2556  001BD8                     __ptext16:
  2557                           	opt callstack 0
  2558  001BD8                     _FRAME_ExcitationValue:
  2559                           	opt callstack 24
  2560                           
  2561                           ;FRAME.c: 240: if(message->message_type == 0x02)
  2562                           
  2563                           ;incstack = 0
  2564  001BD8  EE20 F001          	lfsr	2,1
  2565  001BDC  500C               	movf	FRAME_ExcitationValue@message,w,c
  2566  001BDE  26D9               	addwf	fsr2l,f,c
  2567  001BE0  500D               	movf	FRAME_ExcitationValue@message+1,w,c
  2568  001BE2  22DA               	addwfc	fsr2h,f,c
  2569  001BE4  0E02               	movlw	2
  2570  001BE6  18DE               	xorwf	postinc2,w,c
  2571  001BE8  A4D8               	btfss	status,2,c
  2572  001BEA  D039               	goto	l4583
  2573                           
  2574                           ;FRAME.c: 241: {;FRAME.c: 242: message->data_length = 6;
  2575  001BEC  EE20 F010          	lfsr	2,16
  2576  001BF0  500C               	movf	FRAME_ExcitationValue@message,w,c
  2577  001BF2  26D9               	addwf	fsr2l,f,c
  2578  001BF4  500D               	movf	FRAME_ExcitationValue@message+1,w,c
  2579  001BF6  22DA               	addwfc	fsr2h,f,c
  2580  001BF8  0E06               	movlw	6
  2581  001BFA  6EDF               	movwf	indf2,c
  2582                           
  2583                           ;FRAME.c: 247: message->data[0] = MinPower/0x100;
  2584  001BFC  EE20 F008          	lfsr	2,8
  2585  001C00  500C               	movf	FRAME_ExcitationValue@message,w,c
  2586  001C02  26D9               	addwf	fsr2l,f,c
  2587  001C04  500D               	movf	FRAME_ExcitationValue@message+1,w,c
  2588  001C06  22DA               	addwfc	fsr2h,f,c
  2589  001C08  5021               	movf	_MinPower+1,w,c	;volatile
  2590  001C0A  6EDF               	movwf	indf2,c
  2591                           
  2592                           ;FRAME.c: 248: message->data[1] = MinPower & 0xFF;
  2593  001C0C  EE20 F009          	lfsr	2,9
  2594  001C10  500C               	movf	FRAME_ExcitationValue@message,w,c
  2595  001C12  26D9               	addwf	fsr2l,f,c
  2596  001C14  500D               	movf	FRAME_ExcitationValue@message+1,w,c
  2597  001C16  22DA               	addwfc	fsr2h,f,c
  2598  001C18  C020  FFDF         	movff	_MinPower,indf2	;volatile
  2599                           
  2600                           ;FRAME.c: 249: message->data[2] = MaxPower/0x100;
  2601  001C1C  EE20 F00A          	lfsr	2,10
  2602  001C20  500C               	movf	FRAME_ExcitationValue@message,w,c
  2603  001C22  26D9               	addwf	fsr2l,f,c
  2604  001C24  500D               	movf	FRAME_ExcitationValue@message+1,w,c
  2605  001C26  22DA               	addwfc	fsr2h,f,c
  2606  001C28  503B               	movf	_MaxPower+1,w,c	;volatile
  2607  001C2A  6EDF               	movwf	indf2,c
  2608                           
  2609                           ;FRAME.c: 250: message->data[3] = MaxPower & 0xFF;
  2610  001C2C  EE20 F00B          	lfsr	2,11
  2611  001C30  500C               	movf	FRAME_ExcitationValue@message,w,c
  2612  001C32  26D9               	addwf	fsr2l,f,c
  2613  001C34  500D               	movf	FRAME_ExcitationValue@message+1,w,c
  2614  001C36  22DA               	addwfc	fsr2h,f,c
  2615  001C38  C03A  FFDF         	movff	_MaxPower,indf2	;volatile
  2616                           
  2617                           ;FRAME.c: 251: message->data[4] = 0;
  2618  001C3C  EE20 F00C          	lfsr	2,12
  2619  001C40  500C               	movf	FRAME_ExcitationValue@message,w,c
  2620  001C42  26D9               	addwf	fsr2l,f,c
  2621  001C44  500D               	movf	FRAME_ExcitationValue@message+1,w,c
  2622  001C46  22DA               	addwfc	fsr2h,f,c
  2623  001C48  0E00               	movlw	0
  2624  001C4A  6EDF               	movwf	indf2,c
  2625                           
  2626                           ;FRAME.c: 252: message->data[5] = 0;
  2627  001C4C  EE20 F00D          	lfsr	2,13
  2628  001C50  500C               	movf	FRAME_ExcitationValue@message,w,c
  2629  001C52  26D9               	addwf	fsr2l,f,c
  2630  001C54  500D               	movf	FRAME_ExcitationValue@message+1,w,c
  2631  001C56  22DA               	addwfc	fsr2h,f,c
  2632  001C58  0E00               	movlw	0
  2633  001C5A  6EDF               	movwf	indf2,c
  2634                           
  2635                           ;FRAME.c: 253: }
  2636  001C5C  0012               	return	
  2637  001C5E                     l4583:
  2638                           
  2639                           ;FRAME.c: 254: else;FRAME.c: 255: {;FRAME.c: 258: MinPower = ((message->data[0])*0x100) 
      +                          | ((message->data[1]) % 0xFF);
  2640  001C5E  EE20 F009          	lfsr	2,9
  2641  001C62  500C               	movf	FRAME_ExcitationValue@message,w,c
  2642  001C64  26D9               	addwf	fsr2l,f,c
  2643  001C66  500D               	movf	FRAME_ExcitationValue@message+1,w,c
  2644  001C68  22DA               	addwfc	fsr2h,f,c
  2645  001C6A  50DF               	movf	indf2,w,c
  2646  001C6C  6E0E               	movwf	??_FRAME_ExcitationValue& (0+255),c
  2647  001C6E  500E               	movf	??_FRAME_ExcitationValue,w,c
  2648  001C70  6E06               	movwf	___awmod@dividend,c
  2649  001C72  6A07               	clrf	___awmod@dividend+1,c
  2650  001C74  0E00               	movlw	0
  2651  001C76  6E09               	movwf	___awmod@divisor+1,c
  2652  001C78  6808               	setf	___awmod@divisor,c
  2653  001C7A  EC5C  F012         	call	___awmod	;wreg free
  2654  001C7E  EE20 F008          	lfsr	2,8
  2655  001C82  500C               	movf	FRAME_ExcitationValue@message,w,c
  2656  001C84  26D9               	addwf	fsr2l,f,c
  2657  001C86  500D               	movf	FRAME_ExcitationValue@message+1,w,c
  2658  001C88  22DA               	addwfc	fsr2h,f,c
  2659  001C8A  50DF               	movf	indf2,w,c
  2660  001C8C  6E0F               	movwf	(??_FRAME_ExcitationValue+1)& (0+255),c
  2661  001C8E  500F               	movf	??_FRAME_ExcitationValue+1,w,c
  2662  001C90  6E11               	movwf	(??_FRAME_ExcitationValue+3)& (0+255),c
  2663  001C92  6A10               	clrf	(??_FRAME_ExcitationValue+2)& (0+255),c
  2664  001C94  5006               	movf	?___awmod,w,c
  2665  001C96  1010               	iorwf	??_FRAME_ExcitationValue+2,w,c
  2666  001C98  6E20               	movwf	_MinPower,c	;volatile
  2667  001C9A  5007               	movf	?___awmod+1,w,c
  2668  001C9C  1011               	iorwf	??_FRAME_ExcitationValue+3,w,c
  2669  001C9E  6E21               	movwf	_MinPower+1,c	;volatile
  2670                           
  2671                           ;FRAME.c: 259: MaxPower = ((message->data[2])*0x100) | ((message->data[3]) % 0xFF);
  2672  001CA0  EE20 F00B          	lfsr	2,11
  2673  001CA4  500C               	movf	FRAME_ExcitationValue@message,w,c
  2674  001CA6  26D9               	addwf	fsr2l,f,c
  2675  001CA8  500D               	movf	FRAME_ExcitationValue@message+1,w,c
  2676  001CAA  22DA               	addwfc	fsr2h,f,c
  2677  001CAC  50DF               	movf	indf2,w,c
  2678  001CAE  6E0E               	movwf	??_FRAME_ExcitationValue& (0+255),c
  2679  001CB0  500E               	movf	??_FRAME_ExcitationValue,w,c
  2680  001CB2  6E06               	movwf	___awmod@dividend,c
  2681  001CB4  6A07               	clrf	___awmod@dividend+1,c
  2682  001CB6  0E00               	movlw	0
  2683  001CB8  6E09               	movwf	___awmod@divisor+1,c
  2684  001CBA  6808               	setf	___awmod@divisor,c
  2685  001CBC  EC5C  F012         	call	___awmod	;wreg free
  2686  001CC0  EE20 F00A          	lfsr	2,10
  2687  001CC4  500C               	movf	FRAME_ExcitationValue@message,w,c
  2688  001CC6  26D9               	addwf	fsr2l,f,c
  2689  001CC8  500D               	movf	FRAME_ExcitationValue@message+1,w,c
  2690  001CCA  22DA               	addwfc	fsr2h,f,c
  2691  001CCC  50DF               	movf	indf2,w,c
  2692  001CCE  6E0F               	movwf	(??_FRAME_ExcitationValue+1)& (0+255),c
  2693  001CD0  500F               	movf	??_FRAME_ExcitationValue+1,w,c
  2694  001CD2  6E11               	movwf	(??_FRAME_ExcitationValue+3)& (0+255),c
  2695  001CD4  6A10               	clrf	(??_FRAME_ExcitationValue+2)& (0+255),c
  2696  001CD6  5006               	movf	?___awmod,w,c
  2697  001CD8  1010               	iorwf	??_FRAME_ExcitationValue+2,w,c
  2698  001CDA  6E3A               	movwf	_MaxPower,c	;volatile
  2699  001CDC  5007               	movf	?___awmod+1,w,c
  2700  001CDE  1011               	iorwf	??_FRAME_ExcitationValue+3,w,c
  2701  001CE0  6E3B               	movwf	_MaxPower+1,c	;volatile
  2702  001CE2  0012               	return		;funcret
  2703  001CE4                     __end_of_FRAME_ExcitationValue:
  2704                           	opt callstack 0
  2705                           
  2706 ;; *************** function _FRAME_ExcitationMultiplier *****************
  2707 ;; Defined at:
  2708 ;;		line 274 in file "FRAME.c"
  2709 ;; Parameters:    Size  Location     Type
  2710 ;;  message         2    5[COMRAM] PTR struct .
  2711 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2712 ;; Auto vars:     Size  Location     Type
  2713 ;;  i               2    8[COMRAM] unsigned short 
  2714 ;; Return value:  Size  Location     Type
  2715 ;;                  1    wreg      void 
  2716 ;; Registers used:
  2717 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2718 ;; Tracked objects:
  2719 ;;		On entry : 0/0
  2720 ;;		On exit  : 0/0
  2721 ;;		Unchanged: 0/0
  2722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2723 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2724 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2725 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2726 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2727 ;;Total ram usage:        5 bytes
  2728 ;; Hardware stack levels used:    1
  2729 ;; Hardware stack levels required when called:    3
  2730 ;; This function calls:
  2731 ;;		Nothing
  2732 ;; This function is called by:
  2733 ;;		_FRAME_HandleCanFrame
  2734 ;; This function uses a non-reentrant model
  2735 ;;
  2736                           
  2737                           	psect	text17
  2738  00273C                     __ptext17:
  2739                           	opt callstack 0
  2740  00273C                     _FRAME_ExcitationMultiplier:
  2741                           	opt callstack 25
  2742                           
  2743                           ;FRAME.c: 276: WORD i;;FRAME.c: 278: if(message->message_type == 0x02)
  2744                           
  2745                           ;incstack = 0
  2746  00273C  EE20 F001          	lfsr	2,1
  2747  002740  5006               	movf	FRAME_ExcitationMultiplier@message,w,c
  2748  002742  26D9               	addwf	fsr2l,f,c
  2749  002744  5007               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  2750  002746  22DA               	addwfc	fsr2h,f,c
  2751  002748  0E02               	movlw	2
  2752  00274A  18DE               	xorwf	postinc2,w,c
  2753  00274C  A4D8               	btfss	status,2,c
  2754  00274E  0012               	return	
  2755                           
  2756                           ;FRAME.c: 279: {;FRAME.c: 280: message->data_length = 1;
  2757  002750  EE20 F010          	lfsr	2,16
  2758  002754  5006               	movf	FRAME_ExcitationMultiplier@message,w,c
  2759  002756  26D9               	addwf	fsr2l,f,c
  2760  002758  5007               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  2761  00275A  22DA               	addwfc	fsr2h,f,c
  2762  00275C  0E01               	movlw	1
  2763  00275E  6EDF               	movwf	indf2,c
  2764                           
  2765                           ;FRAME.c: 281: for(i=0; i<3; i++)
  2766  002760  0E00               	movlw	0
  2767  002762  6E0A               	movwf	FRAME_ExcitationMultiplier@i+1,c
  2768  002764  0E00               	movlw	0
  2769  002766  6E09               	movwf	FRAME_ExcitationMultiplier@i,c
  2770  002768                     l4595:
  2771                           
  2772                           ;FRAME.c: 282: {
  2773  002768  4A09               	infsnz	FRAME_ExcitationMultiplier@i,f,c
  2774  00276A  2A0A               	incf	FRAME_ExcitationMultiplier@i+1,f,c
  2775  00276C  500A               	movf	FRAME_ExcitationMultiplier@i+1,w,c
  2776  00276E  E104               	bnz	u2890
  2777  002770  0E03               	movlw	3
  2778  002772  5C09               	subwf	FRAME_ExcitationMultiplier@i,w,c
  2779  002774  A0D8               	btfss	status,0,c
  2780  002776  D7F8               	goto	l4595
  2781  002778                     u2890:
  2782                           
  2783                           ;FRAME.c: 285: };FRAME.c: 286: message->data[0] = 0xFF;
  2784  002778  EE20 F008          	lfsr	2,8
  2785  00277C  5006               	movf	FRAME_ExcitationMultiplier@message,w,c
  2786  00277E  26D9               	addwf	fsr2l,f,c
  2787  002780  5007               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  2788  002782  22DA               	addwfc	fsr2h,f,c
  2789  002784  0EFF               	movlw	255
  2790  002786  6EDF               	movwf	indf2,c
  2791                           
  2792                           ;FRAME.c: 287: }
  2793  002788  0012               	return		;funcret
  2794  00278A                     __end_of_FRAME_ExcitationMultiplier:
  2795                           	opt callstack 0
  2796                           
  2797 ;; *************** function _FRAME_DeviceReset *****************
  2798 ;; Defined at:
  2799 ;;		line 428 in file "FRAME.c"
  2800 ;; Parameters:    Size  Location     Type
  2801 ;;  message         2   16[COMRAM] PTR struct .
  2802 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2803 ;; Auto vars:     Size  Location     Type
  2804 ;;		None
  2805 ;; Return value:  Size  Location     Type
  2806 ;;                  1    wreg      void 
  2807 ;; Registers used:
  2808 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2809 ;; Tracked objects:
  2810 ;;		On entry : 0/0
  2811 ;;		On exit  : 0/0
  2812 ;;		Unchanged: 0/0
  2813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2814 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2816 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2817 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2818 ;;Total ram usage:        3 bytes
  2819 ;; Hardware stack levels used:    1
  2820 ;; Hardware stack levels required when called:    6
  2821 ;; This function calls:
  2822 ;;		_FRAME_DataUpdateAndChangeOption
  2823 ;;		_WriteDataToEEPROM
  2824 ;; This function is called by:
  2825 ;;		_FRAME_HandleCanFrame
  2826 ;; This function uses a non-reentrant model
  2827 ;;
  2828                           
  2829                           	psect	text18
  2830  001968                     __ptext18:
  2831                           	opt callstack 0
  2832  001968                     _FRAME_DeviceReset:
  2833                           	opt callstack 22
  2834                           
  2835                           ;FRAME.c: 430: if(message->message_type == 0x02)
  2836                           
  2837                           ;incstack = 0
  2838  001968  EE20 F001          	lfsr	2,1
  2839  00196C  5011               	movf	FRAME_DeviceReset@message,w,c
  2840  00196E  26D9               	addwf	fsr2l,f,c
  2841  001970  5012               	movf	FRAME_DeviceReset@message+1,w,c
  2842  001972  22DA               	addwfc	fsr2h,f,c
  2843  001974  0E02               	movlw	2
  2844  001976  18DE               	xorwf	postinc2,w,c
  2845  001978  A4D8               	btfss	status,2,c
  2846  00197A  D057               	goto	l4617
  2847                           
  2848                           ;FRAME.c: 431: {;FRAME.c: 432: message->data_length = 8;
  2849  00197C  EE20 F010          	lfsr	2,16
  2850  001980  5011               	movf	FRAME_DeviceReset@message,w,c
  2851  001982  26D9               	addwf	fsr2l,f,c
  2852  001984  5012               	movf	FRAME_DeviceReset@message+1,w,c
  2853  001986  22DA               	addwfc	fsr2h,f,c
  2854  001988  0E08               	movlw	8
  2855  00198A  6EDF               	movwf	indf2,c
  2856                           
  2857                           ;FRAME.c: 434: message->data[0] = (RCON>>6) & 0x01;
  2858  00198C  EE20 F008          	lfsr	2,8
  2859  001990  5011               	movf	FRAME_DeviceReset@message,w,c
  2860  001992  26D9               	addwf	fsr2l,f,c
  2861  001994  5012               	movf	FRAME_DeviceReset@message+1,w,c
  2862  001996  22DA               	addwfc	fsr2h,f,c
  2863  001998  44D0               	rlncf	4048,w,c	;volatile
  2864  00199A  46E8               	rlncf	wreg,f,c
  2865  00199C  0B03               	andlw	3
  2866  00199E  0B01               	andlw	1
  2867  0019A0  6EDF               	movwf	indf2,c
  2868                           
  2869                           ;FRAME.c: 435: message->data[1] = Flagi.wykonanoZapisDoFlash;
  2870  0019A2  EE20 F009          	lfsr	2,9
  2871  0019A6  5011               	movf	FRAME_DeviceReset@message,w,c
  2872  0019A8  26D9               	addwf	fsr2l,f,c
  2873  0019AA  5012               	movf	FRAME_DeviceReset@message+1,w,c
  2874  0019AC  22DA               	addwfc	fsr2h,f,c
  2875  0019AE  0100               	movlb	0	; () banked
  2876  0019B0  A9C6               	btfss	_Flagi& (0+255),4,b
  2877  0019B2  D002               	goto	u2930
  2878  0019B4  0E01               	movlw	1
  2879  0019B6  D001               	goto	u2936
  2880  0019B8                     u2930:
  2881  0019B8  0E00               	movlw	0
  2882  0019BA                     u2936:
  2883  0019BA  6EDF               	movwf	indf2,c
  2884                           
  2885                           ;FRAME.c: 436: message->data[2] = Flagi.pomiarTla;
  2886  0019BC  EE20 F00A          	lfsr	2,10
  2887  0019C0  5011               	movf	FRAME_DeviceReset@message,w,c
  2888  0019C2  26D9               	addwf	fsr2l,f,c
  2889  0019C4  5012               	movf	FRAME_DeviceReset@message+1,w,c
  2890  0019C6  22DA               	addwfc	fsr2h,f,c
  2891  0019C8  A1C6               	btfss	_Flagi& (0+255),0,b
  2892  0019CA  D002               	goto	u2940
  2893  0019CC  0E01               	movlw	1
  2894  0019CE  D001               	goto	u2946
  2895  0019D0                     u2940:
  2896  0019D0  0E00               	movlw	0
  2897  0019D2                     u2946:
  2898  0019D2  6EDF               	movwf	indf2,c
  2899                           
  2900                           ;FRAME.c: 437: message->data[3] = 0;
  2901  0019D4  EE20 F00B          	lfsr	2,11
  2902  0019D8  5011               	movf	FRAME_DeviceReset@message,w,c
  2903  0019DA  26D9               	addwf	fsr2l,f,c
  2904  0019DC  5012               	movf	FRAME_DeviceReset@message+1,w,c
  2905  0019DE  22DA               	addwfc	fsr2h,f,c
  2906  0019E0  0E00               	movlw	0
  2907  0019E2  6EDF               	movwf	indf2,c
  2908                           
  2909                           ;FRAME.c: 438: message->data[4] = Dane->rokU16;
  2910  0019E4  EE20 F00C          	lfsr	2,12
  2911  0019E8  5011               	movf	FRAME_DeviceReset@message,w,c
  2912  0019EA  26D9               	addwf	fsr2l,f,c
  2913  0019EC  5012               	movf	FRAME_DeviceReset@message+1,w,c
  2914  0019EE  22DA               	addwfc	fsr2h,f,c
  2915  0019F0  C036 FFDF          	movff	54,indf2
  2916                           
  2917                           ;FRAME.c: 439: message->data[5] = Dane->miesiacU16;
  2918  0019F4  EE20 F00D          	lfsr	2,13
  2919  0019F8  5011               	movf	FRAME_DeviceReset@message,w,c
  2920  0019FA  26D9               	addwf	fsr2l,f,c
  2921  0019FC  5012               	movf	FRAME_DeviceReset@message+1,w,c
  2922  0019FE  22DA               	addwfc	fsr2h,f,c
  2923  001A00  C038 FFDF          	movff	56,indf2
  2924                           
  2925                           ;FRAME.c: 440: message->data[6] = Dane->dzienU16;
  2926  001A04  EE20 F00E          	lfsr	2,14
  2927  001A08  5011               	movf	FRAME_DeviceReset@message,w,c
  2928  001A0A  26D9               	addwf	fsr2l,f,c
  2929  001A0C  5012               	movf	FRAME_DeviceReset@message+1,w,c
  2930  001A0E  22DA               	addwfc	fsr2h,f,c
  2931  001A10  C03A FFDF          	movff	58,indf2
  2932                           
  2933                           ;FRAME.c: 441: message->data[7] = Dane->godzinaU16;
  2934  001A14  EE20 F00F          	lfsr	2,15
  2935  001A18  5011               	movf	FRAME_DeviceReset@message,w,c
  2936  001A1A  26D9               	addwf	fsr2l,f,c
  2937  001A1C  5012               	movf	FRAME_DeviceReset@message+1,w,c
  2938  001A1E  22DA               	addwfc	fsr2h,f,c
  2939  001A20  C03C FFDF          	movff	60,indf2
  2940                           
  2941                           ; BSR set to: 0
  2942                           ;FRAME.c: 442: RCON &= ~(1<<6);
  2943  001A24  9CD0               	bcf	4048,6,c	;volatile
  2944                           
  2945                           ; BSR set to: 0
  2946                           ;FRAME.c: 443: Flagi.wykonanoZapisDoFlash = 0;
  2947  001A26  99C6               	bcf	_Flagi& (0+255),4,b
  2948                           
  2949                           ;FRAME.c: 457: }
  2950  001A28  0012               	return	
  2951  001A2A                     l4617:
  2952                           
  2953                           ;FRAME.c: 458: else;FRAME.c: 459: {;FRAME.c: 460: message->data_length = 1;
  2954  001A2A  EE20 F010          	lfsr	2,16
  2955  001A2E  5011               	movf	FRAME_DeviceReset@message,w,c
  2956  001A30  26D9               	addwf	fsr2l,f,c
  2957  001A32  5012               	movf	FRAME_DeviceReset@message+1,w,c
  2958  001A34  22DA               	addwfc	fsr2h,f,c
  2959  001A36  0E01               	movlw	1
  2960  001A38  6EDF               	movwf	indf2,c
  2961                           
  2962                           ;FRAME.c: 462: if(message->data[2])
  2963  001A3A  EE20 F00A          	lfsr	2,10
  2964  001A3E  5011               	movf	FRAME_DeviceReset@message,w,c
  2965  001A40  26D9               	addwf	fsr2l,f,c
  2966  001A42  5012               	movf	FRAME_DeviceReset@message+1,w,c
  2967  001A44  22DA               	addwfc	fsr2h,f,c
  2968  001A46  50DF               	movf	indf2,w,c
  2969  001A48  B4D8               	btfsc	status,2,c
  2970  001A4A  D00F               	goto	l4627
  2971                           
  2972                           ;FRAME.c: 463: {;FRAME.c: 464: Flagi.pomiarTla = 1;
  2973  001A4C  0100               	movlb	0	; () banked
  2974  001A4E  81C6               	bsf	_Flagi& (0+255),0,b
  2975                           
  2976                           ; BSR set to: 0
  2977                           ;FRAME.c: 465: if(message->data[1])
  2978  001A50  EE20 F009          	lfsr	2,9
  2979  001A54  5011               	movf	FRAME_DeviceReset@message,w,c
  2980  001A56  26D9               	addwf	fsr2l,f,c
  2981  001A58  5012               	movf	FRAME_DeviceReset@message+1,w,c
  2982  001A5A  22DA               	addwfc	fsr2h,f,c
  2983  001A5C  50DF               	movf	indf2,w,c
  2984  001A5E  B4D8               	btfsc	status,2,c
  2985  001A60  D01E               	goto	l4635
  2986                           
  2987                           ; BSR set to: 0
  2988                           ;FRAME.c: 466: {;FRAME.c: 467: Flagi.zapisDoFlash = 1;
  2989  001A62  87C6               	bsf	_Flagi& (0+255),3,b
  2990                           
  2991                           ; BSR set to: 0
  2992                           ;FRAME.c: 468: WriteDataToEEPROM();
  2993  001A64  ECBC  F009         	call	_WriteDataToEEPROM	;wreg free
  2994  001A68  D01A               	goto	l4635
  2995  001A6A                     l4627:
  2996                           
  2997                           ;FRAME.c: 471: else;FRAME.c: 472: {;FRAME.c: 473: if(message->data[1])
  2998  001A6A  EE20 F009          	lfsr	2,9
  2999  001A6E  5011               	movf	FRAME_DeviceReset@message,w,c
  3000  001A70  26D9               	addwf	fsr2l,f,c
  3001  001A72  5012               	movf	FRAME_DeviceReset@message+1,w,c
  3002  001A74  22DA               	addwfc	fsr2h,f,c
  3003  001A76  50DF               	movf	indf2,w,c
  3004  001A78  B4D8               	btfsc	status,2,c
  3005  001A7A  D008               	goto	l4631
  3006                           
  3007                           ;FRAME.c: 474: {;FRAME.c: 475: FRAME_DataUpdateAndChangeOption(message);
  3008  001A7C  C011  F006         	movff	FRAME_DeviceReset@message,FRAME_DataUpdateAndChangeOption@message
  3009  001A80  C012  F007         	movff	FRAME_DeviceReset@message+1,FRAME_DataUpdateAndChangeOption@message+1
  3010  001A84  ECF5  F012         	call	_FRAME_DataUpdateAndChangeOption	;wreg free
  3011                           
  3012                           ;FRAME.c: 476: WriteDataToEEPROM();
  3013  001A88  ECBC  F009         	call	_WriteDataToEEPROM	;wreg free
  3014  001A8C                     l4631:
  3015                           
  3016                           ;FRAME.c: 478: };FRAME.c: 479: if(message->data[0])
  3017  001A8C  EE20 F008          	lfsr	2,8
  3018  001A90  5011               	movf	FRAME_DeviceReset@message,w,c
  3019  001A92  26D9               	addwf	fsr2l,f,c
  3020  001A94  5012               	movf	FRAME_DeviceReset@message+1,w,c
  3021  001A96  22DA               	addwfc	fsr2h,f,c
  3022  001A98  50DF               	movf	indf2,w,c
  3023  001A9A  A4D8               	btfss	status,2,c
  3024  001A9C  00FF               	reset		;# 
  3025  001A9E                     l4635:
  3026                           
  3027                           ;FRAME.c: 482: };FRAME.c: 483: };FRAME.c: 484: message->data[0] = 0xFF;
  3028  001A9E  EE20 F008          	lfsr	2,8
  3029  001AA2  5011               	movf	FRAME_DeviceReset@message,w,c
  3030  001AA4  26D9               	addwf	fsr2l,f,c
  3031  001AA6  5012               	movf	FRAME_DeviceReset@message+1,w,c
  3032  001AA8  22DA               	addwfc	fsr2h,f,c
  3033  001AAA  0EFF               	movlw	255
  3034  001AAC  6EDF               	movwf	indf2,c
  3035  001AAE  0012               	return		;funcret
  3036  001AB0                     __end_of_FRAME_DeviceReset:
  3037                           	opt callstack 0
  3038                           
  3039 ;; *************** function _WriteDataToEEPROM *****************
  3040 ;; Defined at:
  3041 ;;		line 528 in file "FRAME.c"
  3042 ;; Parameters:    Size  Location     Type
  3043 ;;		None
  3044 ;; Auto vars:     Size  Location     Type
  3045 ;;		None
  3046 ;; Return value:  Size  Location     Type
  3047 ;;                  1    wreg      void 
  3048 ;; Registers used:
  3049 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3050 ;; Tracked objects:
  3051 ;;		On entry : 0/0
  3052 ;;		On exit  : 0/0
  3053 ;;		Unchanged: 0/0
  3054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3059 ;;Total ram usage:        0 bytes
  3060 ;; Hardware stack levels used:    1
  3061 ;; Hardware stack levels required when called:    5
  3062 ;; This function calls:
  3063 ;;		_EEPROM_Adres_Writeto
  3064 ;;		_NVMWrite
  3065 ;;		_WritetoEEPROM
  3066 ;; This function is called by:
  3067 ;;		_FRAME_DeviceReset
  3068 ;; This function uses a non-reentrant model
  3069 ;;
  3070                           
  3071                           	psect	text19
  3072  001378                     __ptext19:
  3073                           	opt callstack 0
  3074  001378                     _WriteDataToEEPROM:
  3075                           	opt callstack 22
  3076                           
  3077                           ;FRAME.c: 530: NVMWrite(&Init_Data,110,2);
  3078                           
  3079                           ;incstack = 0
  3080  001378  0E4A               	movlw	low _Init_Data
  3081  00137A  6E09               	movwf	NVMWrite@source,c
  3082  00137C  0E00               	movlw	high _Init_Data
  3083  00137E  6E0A               	movwf	NVMWrite@source+1,c
  3084  001380  0E00               	movlw	0
  3085  001382  6E0C               	movwf	NVMWrite@addr+1,c
  3086  001384  0E6E               	movlw	110
  3087  001386  6E0B               	movwf	NVMWrite@addr,c
  3088  001388  0E00               	movlw	0
  3089  00138A  6E0E               	movwf	NVMWrite@count+1,c
  3090  00138C  0E02               	movlw	2
  3091  00138E  6E0D               	movwf	NVMWrite@count,c
  3092  001390  EC69  F014         	call	_NVMWrite	;wreg free
  3093                           
  3094                           ;FRAME.c: 532: EEPROM_Adres_Writeto(113,NeightAdress1,MinAdres,MaxAdres);
  3095  001394  0E00               	movlw	0
  3096  001396  6E0A               	movwf	EEPROM_Adres_Writeto@StartEEPROMAdres+1,c
  3097  001398  0E71               	movlw	113
  3098  00139A  6E09               	movwf	EEPROM_Adres_Writeto@StartEEPROMAdres,c
  3099  00139C  C032  F00B         	movff	_NeightAdress1,EEPROM_Adres_Writeto@AdressOfNeighbor	;volatile
  3100  0013A0  C033  F00C         	movff	_NeightAdress1+1,EEPROM_Adres_Writeto@AdressOfNeighbor+1	;volatile
  3101  0013A4  C024  F00D         	movff	_MinAdres,EEPROM_Adres_Writeto@MinAdres	;volatile
  3102  0013A8  C025  F00E         	movff	_MinAdres+1,EEPROM_Adres_Writeto@MinAdres+1	;volatile
  3103  0013AC  C03E  F00F         	movff	_MaxAdres,EEPROM_Adres_Writeto@MaxAdres	;volatile
  3104  0013B0  C03F  F010         	movff	_MaxAdres+1,EEPROM_Adres_Writeto@MaxAdres+1	;volatile
  3105  0013B4  ECEB  F013         	call	_EEPROM_Adres_Writeto	;wreg free
  3106                           
  3107                           ;FRAME.c: 533: EEPROM_Adres_Writeto(116,NeightAdress2,MinAdres,MaxAdres);
  3108  0013B8  0E00               	movlw	0
  3109  0013BA  6E0A               	movwf	EEPROM_Adres_Writeto@StartEEPROMAdres+1,c
  3110  0013BC  0E74               	movlw	116
  3111  0013BE  6E09               	movwf	EEPROM_Adres_Writeto@StartEEPROMAdres,c
  3112  0013C0  C046  F00B         	movff	_NeightAdress2,EEPROM_Adres_Writeto@AdressOfNeighbor	;volatile
  3113  0013C4  C047  F00C         	movff	_NeightAdress2+1,EEPROM_Adres_Writeto@AdressOfNeighbor+1	;volatile
  3114  0013C8  C024  F00D         	movff	_MinAdres,EEPROM_Adres_Writeto@MinAdres	;volatile
  3115  0013CC  C025  F00E         	movff	_MinAdres+1,EEPROM_Adres_Writeto@MinAdres+1	;volatile
  3116  0013D0  C03E  F00F         	movff	_MaxAdres,EEPROM_Adres_Writeto@MaxAdres	;volatile
  3117  0013D4  C03F  F010         	movff	_MaxAdres+1,EEPROM_Adres_Writeto@MaxAdres+1	;volatile
  3118  0013D8  ECEB  F013         	call	_EEPROM_Adres_Writeto	;wreg free
  3119                           
  3120                           ;FRAME.c: 534: EEPROM_Adres_Writeto(119,NeightAdress3,MinAdres,MaxAdres);
  3121  0013DC  0E00               	movlw	0
  3122  0013DE  6E0A               	movwf	EEPROM_Adres_Writeto@StartEEPROMAdres+1,c
  3123  0013E0  0E77               	movlw	119
  3124  0013E2  6E09               	movwf	EEPROM_Adres_Writeto@StartEEPROMAdres,c
  3125  0013E4  C030  F00B         	movff	_NeightAdress3,EEPROM_Adres_Writeto@AdressOfNeighbor	;volatile
  3126  0013E8  C031  F00C         	movff	_NeightAdress3+1,EEPROM_Adres_Writeto@AdressOfNeighbor+1	;volatile
  3127  0013EC  C024  F00D         	movff	_MinAdres,EEPROM_Adres_Writeto@MinAdres	;volatile
  3128  0013F0  C025  F00E         	movff	_MinAdres+1,EEPROM_Adres_Writeto@MinAdres+1	;volatile
  3129  0013F4  C03E  F00F         	movff	_MaxAdres,EEPROM_Adres_Writeto@MaxAdres	;volatile
  3130  0013F8  C03F  F010         	movff	_MaxAdres+1,EEPROM_Adres_Writeto@MaxAdres+1	;volatile
  3131  0013FC  ECEB  F013         	call	_EEPROM_Adres_Writeto	;wreg free
  3132                           
  3133                           ;FRAME.c: 535: EEPROM_Adres_Writeto(122,NeightAdress4,MinAdres,MaxAdres);
  3134  001400  0E00               	movlw	0
  3135  001402  6E0A               	movwf	EEPROM_Adres_Writeto@StartEEPROMAdres+1,c
  3136  001404  0E7A               	movlw	122
  3137  001406  6E09               	movwf	EEPROM_Adres_Writeto@StartEEPROMAdres,c
  3138  001408  C02E  F00B         	movff	_NeightAdress4,EEPROM_Adres_Writeto@AdressOfNeighbor	;volatile
  3139  00140C  C02F  F00C         	movff	_NeightAdress4+1,EEPROM_Adres_Writeto@AdressOfNeighbor+1	;volatile
  3140  001410  C024  F00D         	movff	_MinAdres,EEPROM_Adres_Writeto@MinAdres	;volatile
  3141  001414  C025  F00E         	movff	_MinAdres+1,EEPROM_Adres_Writeto@MinAdres+1	;volatile
  3142  001418  C03E  F00F         	movff	_MaxAdres,EEPROM_Adres_Writeto@MaxAdres	;volatile
  3143  00141C  C03F  F010         	movff	_MaxAdres+1,EEPROM_Adres_Writeto@MaxAdres+1	;volatile
  3144  001420  ECEB  F013         	call	_EEPROM_Adres_Writeto	;wreg free
  3145                           
  3146                           ;FRAME.c: 536: EEPROM_Adres_Writeto(125,NeightAdress5,MinAdres,MaxAdres);
  3147  001424  0E00               	movlw	0
  3148  001426  6E0A               	movwf	EEPROM_Adres_Writeto@StartEEPROMAdres+1,c
  3149  001428  0E7D               	movlw	125
  3150  00142A  6E09               	movwf	EEPROM_Adres_Writeto@StartEEPROMAdres,c
  3151  00142C  C02C  F00B         	movff	_NeightAdress5,EEPROM_Adres_Writeto@AdressOfNeighbor	;volatile
  3152  001430  C02D  F00C         	movff	_NeightAdress5+1,EEPROM_Adres_Writeto@AdressOfNeighbor+1	;volatile
  3153  001434  C024  F00D         	movff	_MinAdres,EEPROM_Adres_Writeto@MinAdres	;volatile
  3154  001438  C025  F00E         	movff	_MinAdres+1,EEPROM_Adres_Writeto@MinAdres+1	;volatile
  3155  00143C  C03E  F00F         	movff	_MaxAdres,EEPROM_Adres_Writeto@MaxAdres	;volatile
  3156  001440  C03F  F010         	movff	_MaxAdres+1,EEPROM_Adres_Writeto@MaxAdres+1	;volatile
  3157  001444  ECEB  F013         	call	_EEPROM_Adres_Writeto	;wreg free
  3158                           
  3159                           ;FRAME.c: 537: EEPROM_Adres_Writeto(129,NeightAdress6,MinAdres,MaxAdres);
  3160  001448  0E00               	movlw	0
  3161  00144A  6E0A               	movwf	EEPROM_Adres_Writeto@StartEEPROMAdres+1,c
  3162  00144C  0E81               	movlw	129
  3163  00144E  6E09               	movwf	EEPROM_Adres_Writeto@StartEEPROMAdres,c
  3164  001450  C02A  F00B         	movff	_NeightAdress6,EEPROM_Adres_Writeto@AdressOfNeighbor	;volatile
  3165  001454  C02B  F00C         	movff	_NeightAdress6+1,EEPROM_Adres_Writeto@AdressOfNeighbor+1	;volatile
  3166  001458  C024  F00D         	movff	_MinAdres,EEPROM_Adres_Writeto@MinAdres	;volatile
  3167  00145C  C025  F00E         	movff	_MinAdres+1,EEPROM_Adres_Writeto@MinAdres+1	;volatile
  3168  001460  C03E  F00F         	movff	_MaxAdres,EEPROM_Adres_Writeto@MaxAdres	;volatile
  3169  001464  C03F  F010         	movff	_MaxAdres+1,EEPROM_Adres_Writeto@MaxAdres+1	;volatile
  3170  001468  ECEB  F013         	call	_EEPROM_Adres_Writeto	;wreg free
  3171                           
  3172                           ;FRAME.c: 538: EEPROM_Adres_Writeto(131,NeightAdress7,MinAdres,MaxAdres);
  3173  00146C  0E00               	movlw	0
  3174  00146E  6E0A               	movwf	EEPROM_Adres_Writeto@StartEEPROMAdres+1,c
  3175  001470  0E83               	movlw	131
  3176  001472  6E09               	movwf	EEPROM_Adres_Writeto@StartEEPROMAdres,c
  3177  001474  C028  F00B         	movff	_NeightAdress7,EEPROM_Adres_Writeto@AdressOfNeighbor	;volatile
  3178  001478  C029  F00C         	movff	_NeightAdress7+1,EEPROM_Adres_Writeto@AdressOfNeighbor+1	;volatile
  3179  00147C  C024  F00D         	movff	_MinAdres,EEPROM_Adres_Writeto@MinAdres	;volatile
  3180  001480  C025  F00E         	movff	_MinAdres+1,EEPROM_Adres_Writeto@MinAdres+1	;volatile
  3181  001484  C03E  F00F         	movff	_MaxAdres,EEPROM_Adres_Writeto@MaxAdres	;volatile
  3182  001488  C03F  F010         	movff	_MaxAdres+1,EEPROM_Adres_Writeto@MaxAdres+1	;volatile
  3183  00148C  ECEB  F013         	call	_EEPROM_Adres_Writeto	;wreg free
  3184                           
  3185                           ;FRAME.c: 539: EEPROM_Adres_Writeto(134,NeightAdress8,MinAdres,MaxAdres);
  3186  001490  0E00               	movlw	0
  3187  001492  6E0A               	movwf	EEPROM_Adres_Writeto@StartEEPROMAdres+1,c
  3188  001494  0E86               	movlw	134
  3189  001496  6E09               	movwf	EEPROM_Adres_Writeto@StartEEPROMAdres,c
  3190  001498  C026  F00B         	movff	_NeightAdress8,EEPROM_Adres_Writeto@AdressOfNeighbor	;volatile
  3191  00149C  C027  F00C         	movff	_NeightAdress8+1,EEPROM_Adres_Writeto@AdressOfNeighbor+1	;volatile
  3192  0014A0  C024  F00D         	movff	_MinAdres,EEPROM_Adres_Writeto@MinAdres	;volatile
  3193  0014A4  C025  F00E         	movff	_MinAdres+1,EEPROM_Adres_Writeto@MinAdres+1	;volatile
  3194  0014A8  C03E  F00F         	movff	_MaxAdres,EEPROM_Adres_Writeto@MaxAdres	;volatile
  3195  0014AC  C03F  F010         	movff	_MaxAdres+1,EEPROM_Adres_Writeto@MaxAdres+1	;volatile
  3196  0014B0  ECEB  F013         	call	_EEPROM_Adres_Writeto	;wreg free
  3197                           
  3198                           ;FRAME.c: 542: WritetoEEPROM(1400,MinRange & 0xFF);
  3199  0014B4  0E05               	movlw	5
  3200  0014B6  6E07               	movwf	WritetoEEPROM@Address+1,c
  3201  0014B8  0E78               	movlw	120
  3202  0014BA  6E06               	movwf	WritetoEEPROM@Address,c
  3203  0014BC  C022  F008         	movff	_MinRange,WritetoEEPROM@Data	;volatile
  3204  0014C0  ECBA  F014         	call	_WritetoEEPROM	;wreg free
  3205                           
  3206                           ;FRAME.c: 543: WritetoEEPROM(1401,MinRange >> 8);
  3207  0014C4  0E05               	movlw	5
  3208  0014C6  6E07               	movwf	WritetoEEPROM@Address+1,c
  3209  0014C8  0E79               	movlw	121
  3210  0014CA  6E06               	movwf	WritetoEEPROM@Address,c
  3211  0014CC  5023               	movf	_MinRange+1,w,c	;volatile
  3212  0014CE  6E08               	movwf	WritetoEEPROM@Data,c
  3213  0014D0  ECBA  F014         	call	_WritetoEEPROM	;wreg free
  3214                           
  3215                           ;FRAME.c: 544: WritetoEEPROM(1440,MaxRange & 0xFF);
  3216  0014D4  0E05               	movlw	5
  3217  0014D6  6E07               	movwf	WritetoEEPROM@Address+1,c
  3218  0014D8  0EA0               	movlw	160
  3219  0014DA  6E06               	movwf	WritetoEEPROM@Address,c
  3220  0014DC  C03C  F008         	movff	_MaxRange,WritetoEEPROM@Data	;volatile
  3221  0014E0  ECBA  F014         	call	_WritetoEEPROM	;wreg free
  3222                           
  3223                           ;FRAME.c: 545: WritetoEEPROM(1441,MaxRange >> 8);
  3224  0014E4  0E05               	movlw	5
  3225  0014E6  6E07               	movwf	WritetoEEPROM@Address+1,c
  3226  0014E8  0EA1               	movlw	161
  3227  0014EA  6E06               	movwf	WritetoEEPROM@Address,c
  3228  0014EC  503D               	movf	_MaxRange+1,w,c	;volatile
  3229  0014EE  6E08               	movwf	WritetoEEPROM@Data,c
  3230  0014F0  ECBA  F014         	call	_WritetoEEPROM	;wreg free
  3231                           
  3232                           ;FRAME.c: 546: WritetoEEPROM(1480,MinPower);
  3233  0014F4  0E05               	movlw	5
  3234  0014F6  6E07               	movwf	WritetoEEPROM@Address+1,c
  3235  0014F8  0EC8               	movlw	200
  3236  0014FA  6E06               	movwf	WritetoEEPROM@Address,c
  3237  0014FC  C020  F008         	movff	_MinPower,WritetoEEPROM@Data	;volatile
  3238  001500  ECBA  F014         	call	_WritetoEEPROM	;wreg free
  3239                           
  3240                           ;FRAME.c: 547: WritetoEEPROM(1520,MaxPower);
  3241  001504  0E05               	movlw	5
  3242  001506  6E07               	movwf	WritetoEEPROM@Address+1,c
  3243  001508  0EF0               	movlw	240
  3244  00150A  6E06               	movwf	WritetoEEPROM@Address,c
  3245  00150C  C03A  F008         	movff	_MaxPower,WritetoEEPROM@Data	;volatile
  3246  001510  ECBA  F014         	call	_WritetoEEPROM	;wreg free
  3247  001514  0012               	return		;funcret
  3248  001516                     __end_of_WriteDataToEEPROM:
  3249                           	opt callstack 0
  3250                           
  3251 ;; *************** function _NVMWrite *****************
  3252 ;; Defined at:
  3253 ;;		line 168 in file "EEPROM.c"
  3254 ;; Parameters:    Size  Location     Type
  3255 ;;  source          2    8[COMRAM] PTR unsigned char 
  3256 ;;		 -> Init_Data(2), 
  3257 ;;  addr            2   10[COMRAM] unsigned short 
  3258 ;;  count           2   12[COMRAM] unsigned short 
  3259 ;; Auto vars:     Size  Location     Type
  3260 ;;		None
  3261 ;; Return value:  Size  Location     Type
  3262 ;;                  1    wreg      void 
  3263 ;; Registers used:
  3264 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3265 ;; Tracked objects:
  3266 ;;		On entry : 0/0
  3267 ;;		On exit  : 0/0
  3268 ;;		Unchanged: 0/0
  3269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3270 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3273 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3274 ;;Total ram usage:        6 bytes
  3275 ;; Hardware stack levels used:    1
  3276 ;; Hardware stack levels required when called:    4
  3277 ;; This function calls:
  3278 ;;		_WritetoEEPROM
  3279 ;; This function is called by:
  3280 ;;		_WriteDataToEEPROM
  3281 ;; This function uses a non-reentrant model
  3282 ;;
  3283                           
  3284                           	psect	text20
  3285  0028D2                     __ptext20:
  3286                           	opt callstack 0
  3287  0028D2                     _NVMWrite:
  3288                           	opt callstack 22
  3289                           
  3290                           ;EEPROM.c: 170: while(count > 0)
  3291                           
  3292                           ;incstack = 0
  3293  0028D2  D015               	goto	l4101
  3294  0028D4                     l961:
  3295  0028D4  B2A6               	btfsc	4006,1,c	;volsfr
  3296  0028D6  D7FE               	goto	l961
  3297                           
  3298                           ;EEPROM.c: 173: WritetoEEPROM(addr++,*source);
  3299  0028D8  C00B  F006         	movff	NVMWrite@addr,WritetoEEPROM@Address
  3300  0028DC  C00C  F007         	movff	NVMWrite@addr+1,WritetoEEPROM@Address+1
  3301  0028E0  C009  FFD9         	movff	NVMWrite@source,fsr2l
  3302  0028E4  C00A  FFDA         	movff	NVMWrite@source+1,fsr2h
  3303  0028E8  50DF               	movf	indf2,w,c
  3304  0028EA  6E08               	movwf	WritetoEEPROM@Data,c
  3305  0028EC  ECBA  F014         	call	_WritetoEEPROM	;wreg free
  3306  0028F0  4A0B               	infsnz	NVMWrite@addr,f,c
  3307  0028F2  2A0C               	incf	NVMWrite@addr+1,f,c
  3308                           
  3309                           ;EEPROM.c: 174: count--;
  3310  0028F4  060D               	decf	NVMWrite@count,f,c
  3311  0028F6  A0D8               	btfss	status,0,c
  3312  0028F8  060E               	decf	NVMWrite@count+1,f,c
  3313                           
  3314                           ;EEPROM.c: 175: source++;
  3315  0028FA  4A09               	infsnz	NVMWrite@source,f,c
  3316  0028FC  2A0A               	incf	NVMWrite@source+1,f,c
  3317  0028FE                     l4101:
  3318  0028FE  500D               	movf	NVMWrite@count,w,c
  3319  002900  100E               	iorwf	NVMWrite@count+1,w,c
  3320  002902  B4D8               	btfsc	status,2,c
  3321  002904  0012               	return	
  3322  002906  D7E6               	goto	l961
  3323  002908                     __end_of_NVMWrite:
  3324                           	opt callstack 0
  3325                           
  3326 ;; *************** function _EEPROM_Adres_Writeto *****************
  3327 ;; Defined at:
  3328 ;;		line 124 in file "EEPROM.c"
  3329 ;; Parameters:    Size  Location     Type
  3330 ;;  StartEEPROMA    2    8[COMRAM] unsigned int 
  3331 ;;  AdressOfNeig    2   10[COMRAM] unsigned int 
  3332 ;;  MinAdres        2   12[COMRAM] unsigned int 
  3333 ;;  MaxAdres        2   14[COMRAM] unsigned int 
  3334 ;; Auto vars:     Size  Location     Type
  3335 ;;		None
  3336 ;; Return value:  Size  Location     Type
  3337 ;;                  1    wreg      void 
  3338 ;; Registers used:
  3339 ;;		wreg, status,2, status,0, cstack
  3340 ;; Tracked objects:
  3341 ;;		On entry : 0/0
  3342 ;;		On exit  : 0/0
  3343 ;;		Unchanged: 0/0
  3344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3345 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3348 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3349 ;;Total ram usage:        8 bytes
  3350 ;; Hardware stack levels used:    1
  3351 ;; Hardware stack levels required when called:    4
  3352 ;; This function calls:
  3353 ;;		_WritetoEEPROM
  3354 ;; This function is called by:
  3355 ;;		_WriteDataToEEPROM
  3356 ;; This function uses a non-reentrant model
  3357 ;;
  3358                           
  3359                           	psect	text21
  3360  0027D6                     __ptext21:
  3361                           	opt callstack 0
  3362  0027D6                     _EEPROM_Adres_Writeto:
  3363                           	opt callstack 22
  3364                           
  3365                           ;EEPROM.c: 126: if((MinAdres>AdressOfNeighbor) || (AdressOfNeighbor>MaxAdres))
  3366                           
  3367                           ;incstack = 0
  3368  0027D6  500D               	movf	EEPROM_Adres_Writeto@MinAdres,w,c
  3369  0027D8  5C0B               	subwf	EEPROM_Adres_Writeto@AdressOfNeighbor,w,c
  3370  0027DA  500E               	movf	EEPROM_Adres_Writeto@MinAdres+1,w,c
  3371  0027DC  580C               	subwfb	EEPROM_Adres_Writeto@AdressOfNeighbor+1,w,c
  3372  0027DE  A0D8               	btfss	status,0,c
  3373  0027E0  D006               	goto	u2340
  3374  0027E2  500B               	movf	EEPROM_Adres_Writeto@AdressOfNeighbor,w,c
  3375  0027E4  5C0F               	subwf	EEPROM_Adres_Writeto@MaxAdres,w,c
  3376  0027E6  500C               	movf	EEPROM_Adres_Writeto@AdressOfNeighbor+1,w,c
  3377  0027E8  5810               	subwfb	EEPROM_Adres_Writeto@MaxAdres+1,w,c
  3378  0027EA  B0D8               	btfsc	status,0,c
  3379  0027EC  D004               	goto	l4109
  3380  0027EE                     u2340:
  3381                           
  3382                           ;EEPROM.c: 127: {;EEPROM.c: 128: AdressOfNeighbor=0;
  3383  0027EE  0E00               	movlw	0
  3384  0027F0  6E0C               	movwf	EEPROM_Adres_Writeto@AdressOfNeighbor+1,c
  3385  0027F2  0E00               	movlw	0
  3386  0027F4  6E0B               	movwf	EEPROM_Adres_Writeto@AdressOfNeighbor,c
  3387  0027F6                     l4109:
  3388                           
  3389                           ;EEPROM.c: 129: };EEPROM.c: 130: WritetoEEPROM(StartEEPROMAdres,AdressOfNeighbor&0xFF);
  3390  0027F6  C009  F006         	movff	EEPROM_Adres_Writeto@StartEEPROMAdres,WritetoEEPROM@Address
  3391  0027FA  C00A  F007         	movff	EEPROM_Adres_Writeto@StartEEPROMAdres+1,WritetoEEPROM@Address+1
  3392  0027FE  C00B  F008         	movff	EEPROM_Adres_Writeto@AdressOfNeighbor,WritetoEEPROM@Data
  3393  002802  ECBA  F014         	call	_WritetoEEPROM	;wreg free
  3394                           
  3395                           ;EEPROM.c: 131: WritetoEEPROM(StartEEPROMAdres+1,((AdressOfNeighbor>>8)&0x00FF));
  3396  002806  0E01               	movlw	1
  3397  002808  2409               	addwf	EEPROM_Adres_Writeto@StartEEPROMAdres,w,c
  3398  00280A  6E06               	movwf	WritetoEEPROM@Address,c
  3399  00280C  0E00               	movlw	0
  3400  00280E  200A               	addwfc	EEPROM_Adres_Writeto@StartEEPROMAdres+1,w,c
  3401  002810  6E07               	movwf	WritetoEEPROM@Address+1,c
  3402  002812  500C               	movf	EEPROM_Adres_Writeto@AdressOfNeighbor+1,w,c
  3403  002814  6E08               	movwf	WritetoEEPROM@Data,c
  3404  002816  ECBA  F014         	call	_WritetoEEPROM	;wreg free
  3405  00281A  0012               	return		;funcret
  3406  00281C                     __end_of_EEPROM_Adres_Writeto:
  3407                           	opt callstack 0
  3408                           
  3409 ;; *************** function _WritetoEEPROM *****************
  3410 ;; Defined at:
  3411 ;;		line 106 in file "EEPROM.c"
  3412 ;; Parameters:    Size  Location     Type
  3413 ;;  Address         2    5[COMRAM] unsigned short 
  3414 ;;  Data            1    7[COMRAM] unsigned char 
  3415 ;; Auto vars:     Size  Location     Type
  3416 ;;		None
  3417 ;; Return value:  Size  Location     Type
  3418 ;;                  1    wreg      void 
  3419 ;; Registers used:
  3420 ;;		wreg, status,2
  3421 ;; Tracked objects:
  3422 ;;		On entry : 0/0
  3423 ;;		On exit  : 0/0
  3424 ;;		Unchanged: 0/0
  3425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3426 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3429 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3430 ;;Total ram usage:        3 bytes
  3431 ;; Hardware stack levels used:    1
  3432 ;; Hardware stack levels required when called:    3
  3433 ;; This function calls:
  3434 ;;		Nothing
  3435 ;; This function is called by:
  3436 ;;		_WriteDataToEEPROM
  3437 ;;		_EEPROM_Adres_Writeto
  3438 ;;		_NVMWrite
  3439 ;; This function uses a non-reentrant model
  3440 ;;
  3441                           
  3442                           	psect	text22
  3443  002974                     __ptext22:
  3444                           	opt callstack 0
  3445  002974                     _WritetoEEPROM:
  3446                           	opt callstack 23
  3447                           
  3448                           ;EEPROM.c: 108: static BYTE GIE_Status;;EEPROM.c: 110: EEADRH = (BYTE)(Address>>8);
  3449                           
  3450                           ;incstack = 0
  3451  002974  5007               	movf	WritetoEEPROM@Address+1,w,c
  3452  002976  6EAA               	movwf	4010,c	;volatile
  3453                           
  3454                           ;EEPROM.c: 111: EEADR = (BYTE)Address;
  3455  002978  C006  FFA9         	movff	WritetoEEPROM@Address,4009	;volatile
  3456                           
  3457                           ;EEPROM.c: 112: EEDATA = Data;
  3458  00297C  C008  FFA8         	movff	WritetoEEPROM@Data,4008	;volatile
  3459                           
  3460                           ;EEPROM.c: 113: EECON1bits.WREN = 1;
  3461  002980  84A6               	bsf	4006,2,c	;volsfr
  3462                           
  3463                           ;EEPROM.c: 114: GIE_Status = INTCONbits.GIE;
  3464  002982  0E00               	movlw	0
  3465  002984  BEF2               	btfsc	4082,7,c	;volatile
  3466  002986  0E01               	movlw	1
  3467  002988  6E34               	movwf	WritetoEEPROM@GIE_Status,c
  3468                           
  3469                           ;EEPROM.c: 115: INTCONbits.GIE = 0;
  3470  00298A  9EF2               	bcf	4082,7,c	;volatile
  3471                           
  3472                           ;EEPROM.c: 116: EECON2 = 0x55;
  3473  00298C  0E55               	movlw	85
  3474  00298E  6EA7               	movwf	4007,c	;volsfr
  3475                           
  3476                           ;EEPROM.c: 117: EECON2 = 0xAA;
  3477  002990  0EAA               	movlw	170
  3478  002992  6EA7               	movwf	4007,c	;volsfr
  3479                           
  3480                           ;EEPROM.c: 118: EECON1bits.WR = 1;
  3481  002994  82A6               	bsf	4006,1,c	;volsfr
  3482                           
  3483                           ;EEPROM.c: 119: INTCONbits.GIE = GIE_Status;
  3484  002996  B034               	btfsc	WritetoEEPROM@GIE_Status,0,c
  3485  002998  D002               	bra	u2295
  3486  00299A  9EF2               	bcf	4082,7,c	;volatile
  3487  00299C  D001               	bra	u2296
  3488  00299E                     u2295:
  3489  00299E  8EF2               	bsf	4082,7,c	;volatile
  3490  0029A0                     u2296:
  3491                           
  3492                           ;EEPROM.c: 120: EECON1bits.WREN = 0;
  3493  0029A0  94A6               	bcf	4006,2,c	;volsfr
  3494  0029A2                     l938:
  3495  0029A2  B2A6               	btfsc	4006,1,c	;volsfr
  3496  0029A4  D7FE               	goto	l938
  3497  0029A6  0012               	return	
  3498  0029A8                     __end_of_WritetoEEPROM:
  3499                           	opt callstack 0
  3500                           
  3501 ;; *************** function _FRAME_DataUpdateAndChangeOption *****************
  3502 ;; Defined at:
  3503 ;;		line 407 in file "FRAME.c"
  3504 ;; Parameters:    Size  Location     Type
  3505 ;;  message         2    5[COMRAM] PTR struct .
  3506 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3507 ;; Auto vars:     Size  Location     Type
  3508 ;;		None
  3509 ;; Return value:  Size  Location     Type
  3510 ;;                  1    wreg      void 
  3511 ;; Registers used:
  3512 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3513 ;; Tracked objects:
  3514 ;;		On entry : 0/0
  3515 ;;		On exit  : 0/0
  3516 ;;		Unchanged: 0/0
  3517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3518 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3520 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3521 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3522 ;;Total ram usage:        3 bytes
  3523 ;; Hardware stack levels used:    1
  3524 ;; Hardware stack levels required when called:    3
  3525 ;; This function calls:
  3526 ;;		Nothing
  3527 ;; This function is called by:
  3528 ;;		_FRAME_DeviceReset
  3529 ;; This function uses a non-reentrant model
  3530 ;;
  3531                           
  3532                           	psect	text23
  3533  0025EA                     __ptext23:
  3534                           	opt callstack 0
  3535  0025EA                     _FRAME_DataUpdateAndChangeOption:
  3536                           	opt callstack 24
  3537                           
  3538                           ;FRAME.c: 410: Dane->rokU16 = message->data[4];
  3539                           
  3540                           ;incstack = 0
  3541  0025EA  EE20 F00C          	lfsr	2,12
  3542  0025EE  5006               	movf	FRAME_DataUpdateAndChangeOption@message,w,c
  3543  0025F0  26D9               	addwf	fsr2l,f,c
  3544  0025F2  5007               	movf	FRAME_DataUpdateAndChangeOption@message+1,w,c
  3545  0025F4  22DA               	addwfc	fsr2h,f,c
  3546  0025F6  50DF               	movf	indf2,w,c
  3547  0025F8  6E08               	movwf	??_FRAME_DataUpdateAndChangeOption& (0+255),c
  3548  0025FA  5008               	movf	??_FRAME_DataUpdateAndChangeOption,w,c
  3549  0025FC  6E36               	movwf	54,c
  3550  0025FE  6A37               	clrf	55,c
  3551                           
  3552                           ;FRAME.c: 411: Dane->miesiacU16 = message->data[5];
  3553  002600  EE20 F00D          	lfsr	2,13
  3554  002604  5006               	movf	FRAME_DataUpdateAndChangeOption@message,w,c
  3555  002606  26D9               	addwf	fsr2l,f,c
  3556  002608  5007               	movf	FRAME_DataUpdateAndChangeOption@message+1,w,c
  3557  00260A  22DA               	addwfc	fsr2h,f,c
  3558  00260C  50DF               	movf	indf2,w,c
  3559  00260E  6E08               	movwf	??_FRAME_DataUpdateAndChangeOption& (0+255),c
  3560  002610  5008               	movf	??_FRAME_DataUpdateAndChangeOption,w,c
  3561  002612  6E38               	movwf	56,c
  3562  002614  6A39               	clrf	57,c
  3563                           
  3564                           ;FRAME.c: 412: Dane->dzienU16 = message->data[6];
  3565  002616  EE20 F00E          	lfsr	2,14
  3566  00261A  5006               	movf	FRAME_DataUpdateAndChangeOption@message,w,c
  3567  00261C  26D9               	addwf	fsr2l,f,c
  3568  00261E  5007               	movf	FRAME_DataUpdateAndChangeOption@message+1,w,c
  3569  002620  22DA               	addwfc	fsr2h,f,c
  3570  002622  50DF               	movf	indf2,w,c
  3571  002624  6E08               	movwf	??_FRAME_DataUpdateAndChangeOption& (0+255),c
  3572  002626  5008               	movf	??_FRAME_DataUpdateAndChangeOption,w,c
  3573  002628  6E3A               	movwf	58,c
  3574  00262A  6A3B               	clrf	59,c
  3575                           
  3576                           ;FRAME.c: 413: Dane->godzinaU16 = message->data[7];
  3577  00262C  EE20 F00F          	lfsr	2,15
  3578  002630  5006               	movf	FRAME_DataUpdateAndChangeOption@message,w,c
  3579  002632  26D9               	addwf	fsr2l,f,c
  3580  002634  5007               	movf	FRAME_DataUpdateAndChangeOption@message+1,w,c
  3581  002636  22DA               	addwfc	fsr2h,f,c
  3582  002638  50DF               	movf	indf2,w,c
  3583  00263A  6E08               	movwf	??_FRAME_DataUpdateAndChangeOption& (0+255),c
  3584  00263C  5008               	movf	??_FRAME_DataUpdateAndChangeOption,w,c
  3585  00263E  6E3C               	movwf	60,c
  3586  002640  6A3D               	clrf	61,c
  3587  002642  0012               	return		;funcret
  3588  002644                     __end_of_FRAME_DataUpdateAndChangeOption:
  3589                           	opt callstack 0
  3590                           
  3591 ;; *************** function _FRAME_AxisStatus *****************
  3592 ;; Defined at:
  3593 ;;		line 371 in file "FRAME.c"
  3594 ;; Parameters:    Size  Location     Type
  3595 ;;  message         2    5[COMRAM] PTR struct .
  3596 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3597 ;; Auto vars:     Size  Location     Type
  3598 ;;  i               2    0        unsigned short 
  3599 ;; Return value:  Size  Location     Type
  3600 ;;                  1    wreg      void 
  3601 ;; Registers used:
  3602 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3603 ;; Tracked objects:
  3604 ;;		On entry : 0/0
  3605 ;;		On exit  : 0/0
  3606 ;;		Unchanged: 0/0
  3607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3608 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3610 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3611 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3612 ;;Total ram usage:        3 bytes
  3613 ;; Hardware stack levels used:    1
  3614 ;; Hardware stack levels required when called:    3
  3615 ;; This function calls:
  3616 ;;		Nothing
  3617 ;; This function is called by:
  3618 ;;		_FRAME_HandleCanFrame
  3619 ;; This function uses a non-reentrant model
  3620 ;;
  3621                           
  3622                           	psect	text24
  3623  002908                     __ptext24:
  3624                           	opt callstack 0
  3625  002908                     _FRAME_AxisStatus:
  3626                           	opt callstack 25
  3627                           
  3628                           ;FRAME.c: 373: WORD i;;FRAME.c: 375: if(message->message_type == 0x02)
  3629                           
  3630                           ;incstack = 0
  3631  002908  EE20 F001          	lfsr	2,1
  3632  00290C  5006               	movf	FRAME_AxisStatus@message,w,c
  3633  00290E  26D9               	addwf	fsr2l,f,c
  3634  002910  5007               	movf	FRAME_AxisStatus@message+1,w,c
  3635  002912  22DA               	addwfc	fsr2h,f,c
  3636  002914  0E02               	movlw	2
  3637  002916  18DE               	xorwf	postinc2,w,c
  3638  002918  A4D8               	btfss	status,2,c
  3639  00291A  0012               	return	
  3640                           
  3641                           ;FRAME.c: 376: {;FRAME.c: 377: message->data_length = 1;
  3642  00291C  EE20 F010          	lfsr	2,16
  3643  002920  5006               	movf	FRAME_AxisStatus@message,w,c
  3644  002922  26D9               	addwf	fsr2l,f,c
  3645  002924  5007               	movf	FRAME_AxisStatus@message+1,w,c
  3646  002926  22DA               	addwfc	fsr2h,f,c
  3647  002928  0E01               	movlw	1
  3648  00292A  6EDF               	movwf	indf2,c
  3649                           
  3650                           ;FRAME.c: 388: message->data[0] = 0xFF;
  3651  00292C  EE20 F008          	lfsr	2,8
  3652  002930  5006               	movf	FRAME_AxisStatus@message,w,c
  3653  002932  26D9               	addwf	fsr2l,f,c
  3654  002934  5007               	movf	FRAME_AxisStatus@message+1,w,c
  3655  002936  22DA               	addwfc	fsr2h,f,c
  3656  002938  0EFF               	movlw	255
  3657  00293A  6EDF               	movwf	indf2,c
  3658                           
  3659                           ;FRAME.c: 389: }
  3660  00293C  0012               	return		;funcret
  3661  00293E                     __end_of_FRAME_AxisStatus:
  3662                           	opt callstack 0
  3663                           
  3664 ;; *************** function _FRAME_AveragingTimes *****************
  3665 ;; Defined at:
  3666 ;;		line 307 in file "FRAME.c"
  3667 ;; Parameters:    Size  Location     Type
  3668 ;;  message         2    5[COMRAM] PTR struct .
  3669 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3670 ;; Auto vars:     Size  Location     Type
  3671 ;;		None
  3672 ;; Return value:  Size  Location     Type
  3673 ;;                  1    wreg      void 
  3674 ;; Registers used:
  3675 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3676 ;; Tracked objects:
  3677 ;;		On entry : 0/0
  3678 ;;		On exit  : 0/0
  3679 ;;		Unchanged: 0/0
  3680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3681 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3683 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3684 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3685 ;;Total ram usage:        3 bytes
  3686 ;; Hardware stack levels used:    1
  3687 ;; Hardware stack levels required when called:    3
  3688 ;; This function calls:
  3689 ;;		Nothing
  3690 ;; This function is called by:
  3691 ;;		_FRAME_HandleCanFrame
  3692 ;; This function uses a non-reentrant model
  3693 ;;
  3694                           
  3695                           	psect	text25
  3696  00293E                     __ptext25:
  3697                           	opt callstack 0
  3698  00293E                     _FRAME_AveragingTimes:
  3699                           	opt callstack 25
  3700                           
  3701                           ;FRAME.c: 309: if(message->message_type == 0x02)
  3702                           
  3703                           ;incstack = 0
  3704  00293E  EE20 F001          	lfsr	2,1
  3705  002942  5006               	movf	FRAME_AveragingTimes@message,w,c
  3706  002944  26D9               	addwf	fsr2l,f,c
  3707  002946  5007               	movf	FRAME_AveragingTimes@message+1,w,c
  3708  002948  22DA               	addwfc	fsr2h,f,c
  3709  00294A  0E02               	movlw	2
  3710  00294C  18DE               	xorwf	postinc2,w,c
  3711  00294E  A4D8               	btfss	status,2,c
  3712  002950  0012               	return	
  3713                           
  3714                           ;FRAME.c: 310: {;FRAME.c: 311: message->data_length = 1;
  3715  002952  EE20 F010          	lfsr	2,16
  3716  002956  5006               	movf	FRAME_AveragingTimes@message,w,c
  3717  002958  26D9               	addwf	fsr2l,f,c
  3718  00295A  5007               	movf	FRAME_AveragingTimes@message+1,w,c
  3719  00295C  22DA               	addwfc	fsr2h,f,c
  3720  00295E  0E01               	movlw	1
  3721  002960  6EDF               	movwf	indf2,c
  3722                           
  3723                           ;FRAME.c: 319: message->data[0] = 0xFF;
  3724  002962  EE20 F008          	lfsr	2,8
  3725  002966  5006               	movf	FRAME_AveragingTimes@message,w,c
  3726  002968  26D9               	addwf	fsr2l,f,c
  3727  00296A  5007               	movf	FRAME_AveragingTimes@message+1,w,c
  3728  00296C  22DA               	addwfc	fsr2h,f,c
  3729  00296E  0EFF               	movlw	255
  3730  002970  6EDF               	movwf	indf2,c
  3731                           
  3732                           ;FRAME.c: 320: }
  3733  002972  0012               	return		;funcret
  3734  002974                     __end_of_FRAME_AveragingTimes:
  3735                           	opt callstack 0
  3736                           
  3737 ;; *************** function _FRAME_AnalogValue *****************
  3738 ;; Defined at:
  3739 ;;		line 646 in file "FRAME.c"
  3740 ;; Parameters:    Size  Location     Type
  3741 ;;  message         2    5[COMRAM] PTR struct .
  3742 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3743 ;;  set             2    7[COMRAM] unsigned short 
  3744 ;; Auto vars:     Size  Location     Type
  3745 ;;  i               2    0        unsigned short 
  3746 ;; Return value:  Size  Location     Type
  3747 ;;                  1    wreg      void 
  3748 ;; Registers used:
  3749 ;;		None
  3750 ;; Tracked objects:
  3751 ;;		On entry : 0/0
  3752 ;;		On exit  : 0/0
  3753 ;;		Unchanged: 0/0
  3754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3755 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3758 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3759 ;;Total ram usage:        4 bytes
  3760 ;; Hardware stack levels used:    1
  3761 ;; Hardware stack levels required when called:    3
  3762 ;; This function calls:
  3763 ;;		Nothing
  3764 ;; This function is called by:
  3765 ;;		_FRAME_HandleCanFrame
  3766 ;; This function uses a non-reentrant model
  3767 ;;
  3768                           
  3769                           	psect	text26
  3770  002BB4                     __ptext26:
  3771                           	opt callstack 0
  3772  002BB4                     _FRAME_AnalogValue:
  3773                           	opt callstack 25
  3774                           
  3775                           ;incstack = 0
  3776  002BB4  0012               	return		;funcret
  3777  002BB6                     __end_of_FRAME_AnalogValue:
  3778                           	opt callstack 0
  3779                           
  3780 ;; *************** function _FRAME_AdressOfNeighbors *****************
  3781 ;; Defined at:
  3782 ;;		line 704 in file "FRAME.c"
  3783 ;; Parameters:    Size  Location     Type
  3784 ;;  message         2    5[COMRAM] PTR struct .
  3785 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3786 ;;  nrRamki         2    7[COMRAM] unsigned short 
  3787 ;; Auto vars:     Size  Location     Type
  3788 ;;  kier            2   13[COMRAM] unsigned short 
  3789 ;;  it              2    0        unsigned short 
  3790 ;; Return value:  Size  Location     Type
  3791 ;;                  1    wreg      void 
  3792 ;; Registers used:
  3793 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3794 ;; Tracked objects:
  3795 ;;		On entry : 0/0
  3796 ;;		On exit  : 0/0
  3797 ;;		Unchanged: 0/0
  3798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3799 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3800 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3801 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3802 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3803 ;;Total ram usage:       10 bytes
  3804 ;; Hardware stack levels used:    1
  3805 ;; Hardware stack levels required when called:    4
  3806 ;; This function calls:
  3807 ;;		_CAN_SetupFilter_Ne
  3808 ;; This function is called by:
  3809 ;;		_FRAME_HandleCanFrame
  3810 ;; This function uses a non-reentrant model
  3811 ;;
  3812                           
  3813                           	psect	text27
  3814  000C62                     __ptext27:
  3815                           	opt callstack 0
  3816  000C62                     _FRAME_AdressOfNeighbors:
  3817                           	opt callstack 24
  3818                           
  3819                           ;FRAME.c: 706: WORD it;;FRAME.c: 709: WORD kier = (nrRamki-0x10);
  3820                           
  3821                           ;incstack = 0
  3822  000C62  0EF0               	movlw	240
  3823  000C64  2408               	addwf	FRAME_AdressOfNeighbors@nrRamki,w,c
  3824  000C66  6E0E               	movwf	FRAME_AdressOfNeighbors@kier,c
  3825  000C68  0EFF               	movlw	255
  3826  000C6A  2009               	addwfc	FRAME_AdressOfNeighbors@nrRamki+1,w,c
  3827  000C6C  6E0F               	movwf	FRAME_AdressOfNeighbors@kier+1,c
  3828                           
  3829                           ;FRAME.c: 710: if(message->message_type == 0x02)
  3830  000C6E  EE20 F001          	lfsr	2,1
  3831  000C72  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3832  000C74  26D9               	addwf	fsr2l,f,c
  3833  000C76  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3834  000C78  22DA               	addwfc	fsr2h,f,c
  3835  000C7A  0E02               	movlw	2
  3836  000C7C  18DE               	xorwf	postinc2,w,c
  3837  000C7E  A4D8               	btfss	status,2,c
  3838  000C80  D08E               	goto	l4665
  3839                           
  3840                           ;FRAME.c: 711: {;FRAME.c: 713: message->data_length = 8;
  3841  000C82  EE20 F010          	lfsr	2,16
  3842  000C86  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3843  000C88  26D9               	addwf	fsr2l,f,c
  3844  000C8A  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3845  000C8C  22DA               	addwfc	fsr2h,f,c
  3846  000C8E  0E08               	movlw	8
  3847  000C90  6EDF               	movwf	indf2,c
  3848                           
  3849                           ;FRAME.c: 715: if(kier == 0)
  3850  000C92  500E               	movf	FRAME_AdressOfNeighbors@kier,w,c
  3851  000C94  100F               	iorwf	FRAME_AdressOfNeighbors@kier+1,w,c
  3852  000C96  A4D8               	btfss	status,2,c
  3853  000C98  D041               	goto	l4663
  3854                           
  3855                           ;FRAME.c: 716: {;FRAME.c: 717: message->data[0] = (NeightAdress1>> 8);
  3856  000C9A  EE20 F008          	lfsr	2,8
  3857  000C9E  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3858  000CA0  26D9               	addwf	fsr2l,f,c
  3859  000CA2  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3860  000CA4  22DA               	addwfc	fsr2h,f,c
  3861  000CA6  5033               	movf	_NeightAdress1+1,w,c	;volatile
  3862  000CA8  6EDF               	movwf	indf2,c
  3863                           
  3864                           ;FRAME.c: 718: message->data[1] = NeightAdress1 & 0b11111111;
  3865  000CAA  EE20 F009          	lfsr	2,9
  3866  000CAE  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3867  000CB0  26D9               	addwf	fsr2l,f,c
  3868  000CB2  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3869  000CB4  22DA               	addwfc	fsr2h,f,c
  3870  000CB6  C032  FFDF         	movff	_NeightAdress1,indf2	;volatile
  3871                           
  3872                           ;FRAME.c: 719: message->data[2] = (NeightAdress2>> 8);
  3873  000CBA  EE20 F00A          	lfsr	2,10
  3874  000CBE  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3875  000CC0  26D9               	addwf	fsr2l,f,c
  3876  000CC2  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3877  000CC4  22DA               	addwfc	fsr2h,f,c
  3878  000CC6  5047               	movf	_NeightAdress2+1,w,c	;volatile
  3879  000CC8  6EDF               	movwf	indf2,c
  3880                           
  3881                           ;FRAME.c: 720: message->data[3] = NeightAdress2 & 0b11111111;
  3882  000CCA  EE20 F00B          	lfsr	2,11
  3883  000CCE  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3884  000CD0  26D9               	addwf	fsr2l,f,c
  3885  000CD2  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3886  000CD4  22DA               	addwfc	fsr2h,f,c
  3887  000CD6  C046  FFDF         	movff	_NeightAdress2,indf2	;volatile
  3888                           
  3889                           ;FRAME.c: 721: message->data[4] = (NeightAdress3>> 8);
  3890  000CDA  EE20 F00C          	lfsr	2,12
  3891  000CDE  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3892  000CE0  26D9               	addwf	fsr2l,f,c
  3893  000CE2  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3894  000CE4  22DA               	addwfc	fsr2h,f,c
  3895  000CE6  5031               	movf	_NeightAdress3+1,w,c	;volatile
  3896  000CE8  6EDF               	movwf	indf2,c
  3897                           
  3898                           ;FRAME.c: 722: message->data[5] = NeightAdress3 & 0b11111111;
  3899  000CEA  EE20 F00D          	lfsr	2,13
  3900  000CEE  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3901  000CF0  26D9               	addwf	fsr2l,f,c
  3902  000CF2  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3903  000CF4  22DA               	addwfc	fsr2h,f,c
  3904  000CF6  C030  FFDF         	movff	_NeightAdress3,indf2	;volatile
  3905                           
  3906                           ;FRAME.c: 723: message->data[6] = (NeightAdress4>> 8);
  3907  000CFA  EE20 F00E          	lfsr	2,14
  3908  000CFE  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3909  000D00  26D9               	addwf	fsr2l,f,c
  3910  000D02  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3911  000D04  22DA               	addwfc	fsr2h,f,c
  3912  000D06  502F               	movf	_NeightAdress4+1,w,c	;volatile
  3913  000D08  6EDF               	movwf	indf2,c
  3914                           
  3915                           ;FRAME.c: 724: message->data[7] = NeightAdress4 & 0b11111111;
  3916  000D0A  EE20 F00F          	lfsr	2,15
  3917  000D0E  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3918  000D10  26D9               	addwf	fsr2l,f,c
  3919  000D12  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3920  000D14  22DA               	addwfc	fsr2h,f,c
  3921  000D16  C02E  FFDF         	movff	_NeightAdress4,indf2	;volatile
  3922                           
  3923                           ;FRAME.c: 725: }
  3924  000D1A  0012               	return	
  3925  000D1C                     l4663:
  3926                           
  3927                           ;FRAME.c: 726: else;FRAME.c: 727: {;FRAME.c: 728: message->data[0] = (NeightAdress5>> 8)
      +                          ;
  3928  000D1C  EE20 F008          	lfsr	2,8
  3929  000D20  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3930  000D22  26D9               	addwf	fsr2l,f,c
  3931  000D24  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3932  000D26  22DA               	addwfc	fsr2h,f,c
  3933  000D28  502D               	movf	_NeightAdress5+1,w,c	;volatile
  3934  000D2A  6EDF               	movwf	indf2,c
  3935                           
  3936                           ;FRAME.c: 729: message->data[1] = NeightAdress5 & 0b11111111;
  3937  000D2C  EE20 F009          	lfsr	2,9
  3938  000D30  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3939  000D32  26D9               	addwf	fsr2l,f,c
  3940  000D34  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3941  000D36  22DA               	addwfc	fsr2h,f,c
  3942  000D38  C02C  FFDF         	movff	_NeightAdress5,indf2	;volatile
  3943                           
  3944                           ;FRAME.c: 730: message->data[2] = (NeightAdress6>> 8);
  3945  000D3C  EE20 F00A          	lfsr	2,10
  3946  000D40  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3947  000D42  26D9               	addwf	fsr2l,f,c
  3948  000D44  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3949  000D46  22DA               	addwfc	fsr2h,f,c
  3950  000D48  502B               	movf	_NeightAdress6+1,w,c	;volatile
  3951  000D4A  6EDF               	movwf	indf2,c
  3952                           
  3953                           ;FRAME.c: 731: message->data[3] = NeightAdress6 & 0b11111111;
  3954  000D4C  EE20 F00B          	lfsr	2,11
  3955  000D50  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3956  000D52  26D9               	addwf	fsr2l,f,c
  3957  000D54  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3958  000D56  22DA               	addwfc	fsr2h,f,c
  3959  000D58  C02A  FFDF         	movff	_NeightAdress6,indf2	;volatile
  3960                           
  3961                           ;FRAME.c: 732: message->data[4] = (NeightAdress7>> 8);
  3962  000D5C  EE20 F00C          	lfsr	2,12
  3963  000D60  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3964  000D62  26D9               	addwf	fsr2l,f,c
  3965  000D64  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3966  000D66  22DA               	addwfc	fsr2h,f,c
  3967  000D68  5029               	movf	_NeightAdress7+1,w,c	;volatile
  3968  000D6A  6EDF               	movwf	indf2,c
  3969                           
  3970                           ;FRAME.c: 733: message->data[5] = NeightAdress7 & 0b11111111;
  3971  000D6C  EE20 F00D          	lfsr	2,13
  3972  000D70  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3973  000D72  26D9               	addwf	fsr2l,f,c
  3974  000D74  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3975  000D76  22DA               	addwfc	fsr2h,f,c
  3976  000D78  C028  FFDF         	movff	_NeightAdress7,indf2	;volatile
  3977                           
  3978                           ;FRAME.c: 734: message->data[6] = (NeightAdress8>> 8);
  3979  000D7C  EE20 F00E          	lfsr	2,14
  3980  000D80  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3981  000D82  26D9               	addwf	fsr2l,f,c
  3982  000D84  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3983  000D86  22DA               	addwfc	fsr2h,f,c
  3984  000D88  5027               	movf	_NeightAdress8+1,w,c	;volatile
  3985  000D8A  6EDF               	movwf	indf2,c
  3986                           
  3987                           ;FRAME.c: 735: message->data[7] = NeightAdress8 & 0b11111111;
  3988  000D8C  EE20 F00F          	lfsr	2,15
  3989  000D90  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3990  000D92  26D9               	addwf	fsr2l,f,c
  3991  000D94  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3992  000D96  22DA               	addwfc	fsr2h,f,c
  3993  000D98  C026  FFDF         	movff	_NeightAdress8,indf2	;volatile
  3994  000D9C  0012               	return	
  3995  000D9E                     l4665:
  3996                           
  3997                           ;FRAME.c: 741: else;FRAME.c: 742: {;FRAME.c: 745: if(kier == 0)
  3998  000D9E  500E               	movf	FRAME_AdressOfNeighbors@kier,w,c
  3999  000DA0  100F               	iorwf	FRAME_AdressOfNeighbors@kier+1,w,c
  4000  000DA2  A4D8               	btfss	status,2,c
  4001  000DA4  D063               	goto	l4671
  4002                           
  4003                           ;FRAME.c: 746: {;FRAME.c: 747: NeightAdress1 = (message->data[0] << 8)| message->data[1]
      +                          ;
  4004  000DA6  EE20 F008          	lfsr	2,8
  4005  000DAA  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  4006  000DAC  26D9               	addwf	fsr2l,f,c
  4007  000DAE  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  4008  000DB0  22DA               	addwfc	fsr2h,f,c
  4009  000DB2  50DF               	movf	indf2,w,c
  4010  000DB4  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  4011  000DB6  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  4012  000DB8  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  4013  000DBA  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  4014  000DBC  EE20 F009          	lfsr	2,9
  4015  000DC0  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  4016  000DC2  26D9               	addwf	fsr2l,f,c
  4017  000DC4  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  4018  000DC6  22DA               	addwfc	fsr2h,f,c
  4019  000DC8  50DF               	movf	indf2,w,c
  4020  000DCA  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  4021  000DCC  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  4022  000DCE  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  4023  000DD0  6E32               	movwf	_NeightAdress1,c	;volatile
  4024  000DD2  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  4025  000DD4  6E33               	movwf	_NeightAdress1+1,c	;volatile
  4026                           
  4027                           ;FRAME.c: 748: NeightAdress2 = (message->data[2] << 8)| message->data[3];
  4028  000DD6  EE20 F00A          	lfsr	2,10
  4029  000DDA  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  4030  000DDC  26D9               	addwf	fsr2l,f,c
  4031  000DDE  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  4032  000DE0  22DA               	addwfc	fsr2h,f,c
  4033  000DE2  50DF               	movf	indf2,w,c
  4034  000DE4  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  4035  000DE6  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  4036  000DE8  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  4037  000DEA  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  4038  000DEC  EE20 F00B          	lfsr	2,11
  4039  000DF0  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  4040  000DF2  26D9               	addwf	fsr2l,f,c
  4041  000DF4  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  4042  000DF6  22DA               	addwfc	fsr2h,f,c
  4043  000DF8  50DF               	movf	indf2,w,c
  4044  000DFA  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  4045  000DFC  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  4046  000DFE  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  4047  000E00  6E46               	movwf	_NeightAdress2,c	;volatile
  4048  000E02  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  4049  000E04  6E47               	movwf	_NeightAdress2+1,c	;volatile
  4050                           
  4051                           ;FRAME.c: 749: NeightAdress3 = (message->data[4] << 8)| message->data[5];
  4052  000E06  EE20 F00C          	lfsr	2,12
  4053  000E0A  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  4054  000E0C  26D9               	addwf	fsr2l,f,c
  4055  000E0E  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  4056  000E10  22DA               	addwfc	fsr2h,f,c
  4057  000E12  50DF               	movf	indf2,w,c
  4058  000E14  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  4059  000E16  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  4060  000E18  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  4061  000E1A  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  4062  000E1C  EE20 F00D          	lfsr	2,13
  4063  000E20  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  4064  000E22  26D9               	addwf	fsr2l,f,c
  4065  000E24  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  4066  000E26  22DA               	addwfc	fsr2h,f,c
  4067  000E28  50DF               	movf	indf2,w,c
  4068  000E2A  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  4069  000E2C  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  4070  000E2E  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  4071  000E30  6E30               	movwf	_NeightAdress3,c	;volatile
  4072  000E32  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  4073  000E34  6E31               	movwf	_NeightAdress3+1,c	;volatile
  4074                           
  4075                           ;FRAME.c: 750: NeightAdress4 = (message->data[6] << 8)| message->data[7];
  4076  000E36  EE20 F00E          	lfsr	2,14
  4077  000E3A  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  4078  000E3C  26D9               	addwf	fsr2l,f,c
  4079  000E3E  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  4080  000E40  22DA               	addwfc	fsr2h,f,c
  4081  000E42  50DF               	movf	indf2,w,c
  4082  000E44  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  4083  000E46  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  4084  000E48  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  4085  000E4A  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  4086  000E4C  EE20 F00F          	lfsr	2,15
  4087  000E50  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  4088  000E52  26D9               	addwf	fsr2l,f,c
  4089  000E54  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  4090  000E56  22DA               	addwfc	fsr2h,f,c
  4091  000E58  50DF               	movf	indf2,w,c
  4092  000E5A  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  4093  000E5C  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  4094  000E5E  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  4095  000E60  6E2E               	movwf	_NeightAdress4,c	;volatile
  4096  000E62  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  4097  000E64  6E2F               	movwf	_NeightAdress4+1,c	;volatile
  4098  000E66                     l4669:
  4099                           
  4100                           ;FRAME.c: 751: CAN_SetupFilter_Ne();
  4101  000E66  EC9E  F010         	call	_CAN_SetupFilter_Ne	;wreg free
  4102                           
  4103                           ;FRAME.c: 754: }
  4104  000E6A  0012               	return	
  4105  000E6C                     l4671:
  4106                           
  4107                           ;FRAME.c: 755: else;FRAME.c: 756: {;FRAME.c: 757: NeightAdress5 = (message->data[0] << 8
      +                          )| message->data[1];
  4108  000E6C  EE20 F008          	lfsr	2,8
  4109  000E70  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  4110  000E72  26D9               	addwf	fsr2l,f,c
  4111  000E74  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  4112  000E76  22DA               	addwfc	fsr2h,f,c
  4113  000E78  50DF               	movf	indf2,w,c
  4114  000E7A  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  4115  000E7C  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  4116  000E7E  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  4117  000E80  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  4118  000E82  EE20 F009          	lfsr	2,9
  4119  000E86  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  4120  000E88  26D9               	addwf	fsr2l,f,c
  4121  000E8A  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  4122  000E8C  22DA               	addwfc	fsr2h,f,c
  4123  000E8E  50DF               	movf	indf2,w,c
  4124  000E90  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  4125  000E92  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  4126  000E94  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  4127  000E96  6E2C               	movwf	_NeightAdress5,c	;volatile
  4128  000E98  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  4129  000E9A  6E2D               	movwf	_NeightAdress5+1,c	;volatile
  4130                           
  4131                           ;FRAME.c: 758: NeightAdress6 = (message->data[2] << 8)| message->data[3];
  4132  000E9C  EE20 F00A          	lfsr	2,10
  4133  000EA0  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  4134  000EA2  26D9               	addwf	fsr2l,f,c
  4135  000EA4  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  4136  000EA6  22DA               	addwfc	fsr2h,f,c
  4137  000EA8  50DF               	movf	indf2,w,c
  4138  000EAA  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  4139  000EAC  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  4140  000EAE  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  4141  000EB0  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  4142  000EB2  EE20 F00B          	lfsr	2,11
  4143  000EB6  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  4144  000EB8  26D9               	addwf	fsr2l,f,c
  4145  000EBA  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  4146  000EBC  22DA               	addwfc	fsr2h,f,c
  4147  000EBE  50DF               	movf	indf2,w,c
  4148  000EC0  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  4149  000EC2  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  4150  000EC4  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  4151  000EC6  6E2A               	movwf	_NeightAdress6,c	;volatile
  4152  000EC8  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  4153  000ECA  6E2B               	movwf	_NeightAdress6+1,c	;volatile
  4154                           
  4155                           ;FRAME.c: 759: NeightAdress7 = (message->data[4] << 8)| message->data[5];
  4156  000ECC  EE20 F00C          	lfsr	2,12
  4157  000ED0  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  4158  000ED2  26D9               	addwf	fsr2l,f,c
  4159  000ED4  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  4160  000ED6  22DA               	addwfc	fsr2h,f,c
  4161  000ED8  50DF               	movf	indf2,w,c
  4162  000EDA  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  4163  000EDC  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  4164  000EDE  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  4165  000EE0  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  4166  000EE2  EE20 F00D          	lfsr	2,13
  4167  000EE6  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  4168  000EE8  26D9               	addwf	fsr2l,f,c
  4169  000EEA  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  4170  000EEC  22DA               	addwfc	fsr2h,f,c
  4171  000EEE  50DF               	movf	indf2,w,c
  4172  000EF0  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  4173  000EF2  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  4174  000EF4  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  4175  000EF6  6E28               	movwf	_NeightAdress7,c	;volatile
  4176  000EF8  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  4177  000EFA  6E29               	movwf	_NeightAdress7+1,c	;volatile
  4178                           
  4179                           ;FRAME.c: 760: NeightAdress8 = (message->data[6] << 8)| message->data[7];
  4180  000EFC  EE20 F00E          	lfsr	2,14
  4181  000F00  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  4182  000F02  26D9               	addwf	fsr2l,f,c
  4183  000F04  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  4184  000F06  22DA               	addwfc	fsr2h,f,c
  4185  000F08  50DF               	movf	indf2,w,c
  4186  000F0A  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  4187  000F0C  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  4188  000F0E  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  4189  000F10  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  4190  000F12  EE20 F00F          	lfsr	2,15
  4191  000F16  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  4192  000F18  26D9               	addwf	fsr2l,f,c
  4193  000F1A  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  4194  000F1C  22DA               	addwfc	fsr2h,f,c
  4195  000F1E  50DF               	movf	indf2,w,c
  4196  000F20  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  4197  000F22  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  4198  000F24  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  4199  000F26  6E26               	movwf	_NeightAdress8,c	;volatile
  4200  000F28  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  4201  000F2A  6E27               	movwf	_NeightAdress8+1,c	;volatile
  4202  000F2C  D79C               	goto	l4669
  4203  000F2E                     __end_of_FRAME_AdressOfNeighbors:
  4204                           	opt callstack 0
  4205                           
  4206 ;; *************** function _FRAME_AccelerometerStatus *****************
  4207 ;; Defined at:
  4208 ;;		line 206 in file "FRAME.c"
  4209 ;; Parameters:    Size  Location     Type
  4210 ;;  message         2   11[COMRAM] PTR struct .
  4211 ;;		 -> TRM_DataTransmition@canMessage(17), 
  4212 ;; Auto vars:     Size  Location     Type
  4213 ;;		None
  4214 ;; Return value:  Size  Location     Type
  4215 ;;                  1    wreg      void 
  4216 ;; Registers used:
  4217 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4218 ;; Tracked objects:
  4219 ;;		On entry : 0/0
  4220 ;;		On exit  : 0/0
  4221 ;;		Unchanged: 0/0
  4222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4223 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4225 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4226 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4227 ;;Total ram usage:        6 bytes
  4228 ;; Hardware stack levels used:    1
  4229 ;; Hardware stack levels required when called:    4
  4230 ;; This function calls:
  4231 ;;		___awmod
  4232 ;; This function is called by:
  4233 ;;		_FRAME_HandleCanFrame
  4234 ;; This function uses a non-reentrant model
  4235 ;;
  4236                           
  4237                           	psect	text28
  4238  001CE4                     __ptext28:
  4239                           	opt callstack 0
  4240  001CE4                     _FRAME_AccelerometerStatus:
  4241                           	opt callstack 24
  4242                           
  4243                           ;FRAME.c: 208: if(message->message_type == 0x02)
  4244                           
  4245                           ;incstack = 0
  4246  001CE4  EE20 F001          	lfsr	2,1
  4247  001CE8  500C               	movf	FRAME_AccelerometerStatus@message,w,c
  4248  001CEA  26D9               	addwf	fsr2l,f,c
  4249  001CEC  500D               	movf	FRAME_AccelerometerStatus@message+1,w,c
  4250  001CEE  22DA               	addwfc	fsr2h,f,c
  4251  001CF0  0E02               	movlw	2
  4252  001CF2  18DE               	xorwf	postinc2,w,c
  4253  001CF4  A4D8               	btfss	status,2,c
  4254  001CF6  D029               	goto	l4577
  4255                           
  4256                           ;FRAME.c: 209: {;FRAME.c: 210: message->data_length = 4;
  4257  001CF8  EE20 F010          	lfsr	2,16
  4258  001CFC  500C               	movf	FRAME_AccelerometerStatus@message,w,c
  4259  001CFE  26D9               	addwf	fsr2l,f,c
  4260  001D00  500D               	movf	FRAME_AccelerometerStatus@message+1,w,c
  4261  001D02  22DA               	addwfc	fsr2h,f,c
  4262  001D04  0E04               	movlw	4
  4263  001D06  6EDF               	movwf	indf2,c
  4264                           
  4265                           ;FRAME.c: 214: message->data[0] = MinRange/0x100;
  4266  001D08  EE20 F008          	lfsr	2,8
  4267  001D0C  500C               	movf	FRAME_AccelerometerStatus@message,w,c
  4268  001D0E  26D9               	addwf	fsr2l,f,c
  4269  001D10  500D               	movf	FRAME_AccelerometerStatus@message+1,w,c
  4270  001D12  22DA               	addwfc	fsr2h,f,c
  4271  001D14  5023               	movf	_MinRange+1,w,c	;volatile
  4272  001D16  6EDF               	movwf	indf2,c
  4273                           
  4274                           ;FRAME.c: 215: message->data[1] = MinRange & 0xFF;
  4275  001D18  EE20 F009          	lfsr	2,9
  4276  001D1C  500C               	movf	FRAME_AccelerometerStatus@message,w,c
  4277  001D1E  26D9               	addwf	fsr2l,f,c
  4278  001D20  500D               	movf	FRAME_AccelerometerStatus@message+1,w,c
  4279  001D22  22DA               	addwfc	fsr2h,f,c
  4280  001D24  C022  FFDF         	movff	_MinRange,indf2	;volatile
  4281                           
  4282                           ;FRAME.c: 216: message->data[2] = MaxRange/0x100;
  4283  001D28  EE20 F00A          	lfsr	2,10
  4284  001D2C  500C               	movf	FRAME_AccelerometerStatus@message,w,c
  4285  001D2E  26D9               	addwf	fsr2l,f,c
  4286  001D30  500D               	movf	FRAME_AccelerometerStatus@message+1,w,c
  4287  001D32  22DA               	addwfc	fsr2h,f,c
  4288  001D34  503D               	movf	_MaxRange+1,w,c	;volatile
  4289  001D36  6EDF               	movwf	indf2,c
  4290                           
  4291                           ;FRAME.c: 217: message->data[3] = MaxRange & 0xFF;
  4292  001D38  EE20 F00B          	lfsr	2,11
  4293  001D3C  500C               	movf	FRAME_AccelerometerStatus@message,w,c
  4294  001D3E  26D9               	addwf	fsr2l,f,c
  4295  001D40  500D               	movf	FRAME_AccelerometerStatus@message+1,w,c
  4296  001D42  22DA               	addwfc	fsr2h,f,c
  4297  001D44  C03C  FFDF         	movff	_MaxRange,indf2	;volatile
  4298                           
  4299                           ;FRAME.c: 218: }
  4300  001D48  0012               	return	
  4301  001D4A                     l4577:
  4302                           
  4303                           ;FRAME.c: 219: else;FRAME.c: 220: {;FRAME.c: 221: MinRange = ((message->data[0])*0x100) 
      +                          | ((message->data[1]) % 0xFF);
  4304  001D4A  EE20 F009          	lfsr	2,9
  4305  001D4E  500C               	movf	FRAME_AccelerometerStatus@message,w,c
  4306  001D50  26D9               	addwf	fsr2l,f,c
  4307  001D52  500D               	movf	FRAME_AccelerometerStatus@message+1,w,c
  4308  001D54  22DA               	addwfc	fsr2h,f,c
  4309  001D56  50DF               	movf	indf2,w,c
  4310  001D58  6E0E               	movwf	??_FRAME_AccelerometerStatus& (0+255),c
  4311  001D5A  500E               	movf	??_FRAME_AccelerometerStatus,w,c
  4312  001D5C  6E06               	movwf	___awmod@dividend,c
  4313  001D5E  6A07               	clrf	___awmod@dividend+1,c
  4314  001D60  0E00               	movlw	0
  4315  001D62  6E09               	movwf	___awmod@divisor+1,c
  4316  001D64  6808               	setf	___awmod@divisor,c
  4317  001D66  EC5C  F012         	call	___awmod	;wreg free
  4318  001D6A  EE20 F008          	lfsr	2,8
  4319  001D6E  500C               	movf	FRAME_AccelerometerStatus@message,w,c
  4320  001D70  26D9               	addwf	fsr2l,f,c
  4321  001D72  500D               	movf	FRAME_AccelerometerStatus@message+1,w,c
  4322  001D74  22DA               	addwfc	fsr2h,f,c
  4323  001D76  50DF               	movf	indf2,w,c
  4324  001D78  6E0F               	movwf	(??_FRAME_AccelerometerStatus+1)& (0+255),c
  4325  001D7A  500F               	movf	??_FRAME_AccelerometerStatus+1,w,c
  4326  001D7C  6E11               	movwf	(??_FRAME_AccelerometerStatus+3)& (0+255),c
  4327  001D7E  6A10               	clrf	(??_FRAME_AccelerometerStatus+2)& (0+255),c
  4328  001D80  5006               	movf	?___awmod,w,c
  4329  001D82  1010               	iorwf	??_FRAME_AccelerometerStatus+2,w,c
  4330  001D84  6E22               	movwf	_MinRange,c	;volatile
  4331  001D86  5007               	movf	?___awmod+1,w,c
  4332  001D88  1011               	iorwf	??_FRAME_AccelerometerStatus+3,w,c
  4333  001D8A  6E23               	movwf	_MinRange+1,c	;volatile
  4334                           
  4335                           ;FRAME.c: 222: MaxRange = ((message->data[2])*0x100) | ((message->data[3]) % 0xFF);
  4336  001D8C  EE20 F00B          	lfsr	2,11
  4337  001D90  500C               	movf	FRAME_AccelerometerStatus@message,w,c
  4338  001D92  26D9               	addwf	fsr2l,f,c
  4339  001D94  500D               	movf	FRAME_AccelerometerStatus@message+1,w,c
  4340  001D96  22DA               	addwfc	fsr2h,f,c
  4341  001D98  50DF               	movf	indf2,w,c
  4342  001D9A  6E0E               	movwf	??_FRAME_AccelerometerStatus& (0+255),c
  4343  001D9C  500E               	movf	??_FRAME_AccelerometerStatus,w,c
  4344  001D9E  6E06               	movwf	___awmod@dividend,c
  4345  001DA0  6A07               	clrf	___awmod@dividend+1,c
  4346  001DA2  0E00               	movlw	0
  4347  001DA4  6E09               	movwf	___awmod@divisor+1,c
  4348  001DA6  6808               	setf	___awmod@divisor,c
  4349  001DA8  EC5C  F012         	call	___awmod	;wreg free
  4350  001DAC  EE20 F00A          	lfsr	2,10
  4351  001DB0  500C               	movf	FRAME_AccelerometerStatus@message,w,c
  4352  001DB2  26D9               	addwf	fsr2l,f,c
  4353  001DB4  500D               	movf	FRAME_AccelerometerStatus@message+1,w,c
  4354  001DB6  22DA               	addwfc	fsr2h,f,c
  4355  001DB8  50DF               	movf	indf2,w,c
  4356  001DBA  6E0F               	movwf	(??_FRAME_AccelerometerStatus+1)& (0+255),c
  4357  001DBC  500F               	movf	??_FRAME_AccelerometerStatus+1,w,c
  4358  001DBE  6E11               	movwf	(??_FRAME_AccelerometerStatus+3)& (0+255),c
  4359  001DC0  6A10               	clrf	(??_FRAME_AccelerometerStatus+2)& (0+255),c
  4360  001DC2  5006               	movf	?___awmod,w,c
  4361  001DC4  1010               	iorwf	??_FRAME_AccelerometerStatus+2,w,c
  4362  001DC6  6E3C               	movwf	_MaxRange,c	;volatile
  4363  001DC8  5007               	movf	?___awmod+1,w,c
  4364  001DCA  1011               	iorwf	??_FRAME_AccelerometerStatus+3,w,c
  4365  001DCC  6E3D               	movwf	_MaxRange+1,c	;volatile
  4366  001DCE  0012               	return		;funcret
  4367  001DD0                     __end_of_FRAME_AccelerometerStatus:
  4368                           	opt callstack 0
  4369                           
  4370 ;; *************** function ___awmod *****************
  4371 ;; Defined at:
  4372 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awmod.c"
  4373 ;; Parameters:    Size  Location     Type
  4374 ;;  dividend        2    5[COMRAM] int 
  4375 ;;  divisor         2    7[COMRAM] int 
  4376 ;; Auto vars:     Size  Location     Type
  4377 ;;  sign            1   10[COMRAM] unsigned char 
  4378 ;;  counter         1    9[COMRAM] unsigned char 
  4379 ;; Return value:  Size  Location     Type
  4380 ;;                  2    5[COMRAM] int 
  4381 ;; Registers used:
  4382 ;;		wreg, status,2, status,0
  4383 ;; Tracked objects:
  4384 ;;		On entry : 0/0
  4385 ;;		On exit  : 0/0
  4386 ;;		Unchanged: 0/0
  4387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4388 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4389 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4391 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4392 ;;Total ram usage:        6 bytes
  4393 ;; Hardware stack levels used:    1
  4394 ;; Hardware stack levels required when called:    3
  4395 ;; This function calls:
  4396 ;;		Nothing
  4397 ;; This function is called by:
  4398 ;;		_FRAME_AccelerometerStatus
  4399 ;;		_FRAME_ExcitationValue
  4400 ;; This function uses a non-reentrant model
  4401 ;;
  4402                           
  4403                           	psect	text29
  4404  0024B8                     __ptext29:
  4405                           	opt callstack 0
  4406  0024B8                     ___awmod:
  4407                           	opt callstack 24
  4408                           
  4409                           ;incstack = 0
  4410  0024B8  0E00               	movlw	0
  4411  0024BA  6E0B               	movwf	___awmod@sign,c
  4412  0024BC  AE07               	btfss	___awmod@dividend+1,7,c
  4413  0024BE  D006               	goto	l4399
  4414  0024C0  6C06               	negf	___awmod@dividend,c
  4415  0024C2  1E07               	comf	___awmod@dividend+1,f,c
  4416  0024C4  B0D8               	btfsc	status,0,c
  4417  0024C6  2A07               	incf	___awmod@dividend+1,f,c
  4418  0024C8  0E01               	movlw	1
  4419  0024CA  6E0B               	movwf	___awmod@sign,c
  4420  0024CC                     l4399:
  4421  0024CC  AE09               	btfss	___awmod@divisor+1,7,c
  4422  0024CE  D004               	goto	l4403
  4423  0024D0  6C08               	negf	___awmod@divisor,c
  4424  0024D2  1E09               	comf	___awmod@divisor+1,f,c
  4425  0024D4  B0D8               	btfsc	status,0,c
  4426  0024D6  2A09               	incf	___awmod@divisor+1,f,c
  4427  0024D8                     l4403:
  4428  0024D8  5008               	movf	___awmod@divisor,w,c
  4429  0024DA  1009               	iorwf	___awmod@divisor+1,w,c
  4430  0024DC  B4D8               	btfsc	status,2,c
  4431  0024DE  D018               	goto	l4419
  4432  0024E0  0E01               	movlw	1
  4433  0024E2  6E0A               	movwf	___awmod@counter,c
  4434  0024E4  D004               	goto	l4409
  4435  0024E6                     l4407:
  4436  0024E6  90D8               	bcf	status,0,c
  4437  0024E8  3608               	rlcf	___awmod@divisor,f,c
  4438  0024EA  3609               	rlcf	___awmod@divisor+1,f,c
  4439  0024EC  2A0A               	incf	___awmod@counter,f,c
  4440  0024EE                     l4409:
  4441  0024EE  AE09               	btfss	___awmod@divisor+1,7,c
  4442  0024F0  D7FA               	goto	l4407
  4443  0024F2                     u2690:
  4444  0024F2  5008               	movf	___awmod@divisor,w,c
  4445  0024F4  5C06               	subwf	___awmod@dividend,w,c
  4446  0024F6  5009               	movf	___awmod@divisor+1,w,c
  4447  0024F8  5807               	subwfb	___awmod@dividend+1,w,c
  4448  0024FA  A0D8               	btfss	status,0,c
  4449  0024FC  D004               	goto	l4415
  4450  0024FE  5008               	movf	___awmod@divisor,w,c
  4451  002500  5E06               	subwf	___awmod@dividend,f,c
  4452  002502  5009               	movf	___awmod@divisor+1,w,c
  4453  002504  5A07               	subwfb	___awmod@dividend+1,f,c
  4454  002506                     l4415:
  4455  002506  90D8               	bcf	status,0,c
  4456  002508  3209               	rrcf	___awmod@divisor+1,f,c
  4457  00250A  3208               	rrcf	___awmod@divisor,f,c
  4458  00250C  2E0A               	decfsz	___awmod@counter,f,c
  4459  00250E  D7F1               	goto	u2690
  4460  002510                     l4419:
  4461  002510  500B               	movf	___awmod@sign,w,c
  4462  002512  B4D8               	btfsc	status,2,c
  4463  002514  D004               	goto	l4423
  4464  002516  6C06               	negf	___awmod@dividend,c
  4465  002518  1E07               	comf	___awmod@dividend+1,f,c
  4466  00251A  B0D8               	btfsc	status,0,c
  4467  00251C  2A07               	incf	___awmod@dividend+1,f,c
  4468  00251E                     l4423:
  4469  00251E  C006  F006         	movff	___awmod@dividend,?___awmod
  4470  002522  C007  F007         	movff	___awmod@dividend+1,?___awmod+1
  4471  002526  0012               	return		;funcret
  4472  002528                     __end_of___awmod:
  4473                           	opt callstack 0
  4474                           
  4475 ;; *************** function _CAN_SendFrame *****************
  4476 ;; Defined at:
  4477 ;;		line 247 in file "CAN.c"
  4478 ;; Parameters:    Size  Location     Type
  4479 ;;  message         2   10[COMRAM] PTR struct .
  4480 ;;		 -> TRM_DataTransmition@canMessage(17), 
  4481 ;; Auto vars:     Size  Location     Type
  4482 ;;		None
  4483 ;; Return value:  Size  Location     Type
  4484 ;;                  1    wreg      void 
  4485 ;; Registers used:
  4486 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4487 ;; Tracked objects:
  4488 ;;		On entry : 0/0
  4489 ;;		On exit  : 0/0
  4490 ;;		Unchanged: 0/0
  4491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4492 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4494 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4495 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4496 ;;Total ram usage:        5 bytes
  4497 ;; Hardware stack levels used:    1
  4498 ;; Hardware stack levels required when called:    4
  4499 ;; This function calls:
  4500 ;;		_CAN_MoveBuffIntoFrame
  4501 ;; This function is called by:
  4502 ;;		_FRAME_HandleCanFrame
  4503 ;; This function uses a non-reentrant model
  4504 ;;
  4505                           
  4506                           	psect	text30
  4507  0016A4                     __ptext30:
  4508                           	opt callstack 0
  4509  0016A4                     _CAN_SendFrame:
  4510                           	opt callstack 24
  4511                           
  4512                           ;CAN.c: 252: {;CAN.c: 253: ECANCON = 0x83;
  4513                           
  4514                           ;incstack = 0
  4515                           ;CAN.c: 251: for(;;)
  4516  0016A4  0E83               	movlw	131
  4517  0016A6  6E77               	movwf	3959,c	;volatile
  4518                           
  4519                           ;CAN.c: 254: if(!RXB0CONbits.FILHIT3)
  4520  0016A8  A660               	btfss	3936,3,c	;volatile
  4521  0016AA  D00A               	goto	l292
  4522                           
  4523                           ;CAN.c: 258: };CAN.c: 259: ECANCON = 0x84;
  4524  0016AC  0E84               	movlw	132
  4525  0016AE  6E77               	movwf	3959,c	;volatile
  4526                           
  4527                           ;CAN.c: 260: if(!RXB0CONbits.FILHIT3)
  4528  0016B0  A660               	btfss	3936,3,c	;volatile
  4529  0016B2  D006               	goto	l292
  4530                           
  4531                           ;CAN.c: 264: };CAN.c: 265: ECANCON = 0x85;
  4532  0016B4  0E85               	movlw	133
  4533  0016B6  6E77               	movwf	3959,c	;volatile
  4534                           
  4535                           ;CAN.c: 266: if(!RXB0CONbits.FILHIT3)
  4536  0016B8  A660               	btfss	3936,3,c	;volatile
  4537  0016BA  D002               	goto	l292
  4538  0016BC  D7F3               	goto	_CAN_SendFrame
  4539  0016BE                     l293:
  4540  0016BE  00FF               	reset		;# 
  4541  0016C0                     l292:
  4542  0016C0  B474               	btfsc	3956,2,c	;volatile
  4543  0016C2  D7FD               	goto	l293
  4544                           
  4545                           ;CAN.c: 276: };CAN.c: 277: DetectorLedRadar.timerRamkiTxCANU8 = 0;
  4546  0016C4  0E00               	movlw	0
  4547  0016C6  0100               	movlb	0	; () banked
  4548  0016C8  6FD1               	movwf	(_DetectorLedRadar+2)& (0+255),b
  4549                           
  4550                           ; BSR set to: 0
  4551                           ;CAN.c: 278: RXB0EIDL = message->id.v[0];
  4552  0016CA  EE20 F004          	lfsr	2,4
  4553  0016CE  500B               	movf	CAN_SendFrame@message,w,c
  4554  0016D0  26D9               	addwf	fsr2l,f,c
  4555  0016D2  500C               	movf	CAN_SendFrame@message+1,w,c
  4556  0016D4  22DA               	addwfc	fsr2h,f,c
  4557  0016D6  50DF               	movf	indf2,w,c
  4558  0016D8  6E64               	movwf	3940,c	;volatile
  4559                           
  4560                           ; BSR set to: 0
  4561                           ;CAN.c: 279: RXB0EIDH = message->id.v[1];
  4562  0016DA  EE20 F005          	lfsr	2,5
  4563  0016DE  500B               	movf	CAN_SendFrame@message,w,c
  4564  0016E0  26D9               	addwf	fsr2l,f,c
  4565  0016E2  500C               	movf	CAN_SendFrame@message+1,w,c
  4566  0016E4  22DA               	addwfc	fsr2h,f,c
  4567  0016E6  50DF               	movf	indf2,w,c
  4568  0016E8  6E63               	movwf	3939,c	;volatile
  4569                           
  4570                           ; BSR set to: 0
  4571                           ;CAN.c: 280: RXB0SIDL = ((message->id.v[2]&0xFC)*8) | (message->id.v[2] & (0x03));
  4572  0016EA  EE20 F006          	lfsr	2,6
  4573  0016EE  500B               	movf	CAN_SendFrame@message,w,c
  4574  0016F0  26D9               	addwf	fsr2l,f,c
  4575  0016F2  500C               	movf	CAN_SendFrame@message+1,w,c
  4576  0016F4  22DA               	addwfc	fsr2h,f,c
  4577  0016F6  50DF               	movf	indf2,w,c
  4578  0016F8  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  4579  0016FA  0E03               	movlw	3
  4580  0016FC  160D               	andwf	??_CAN_SendFrame,f,c
  4581  0016FE  EE20 F006          	lfsr	2,6
  4582  001702  500B               	movf	CAN_SendFrame@message,w,c
  4583  001704  26D9               	addwf	fsr2l,f,c
  4584  001706  500C               	movf	CAN_SendFrame@message+1,w,c
  4585  001708  22DA               	addwfc	fsr2h,f,c
  4586  00170A  50DF               	movf	indf2,w,c
  4587  00170C  0BFC               	andlw	252
  4588  00170E  0D08               	mullw	8
  4589  001710  50F3               	movf	prodl,w,c
  4590  001712  100D               	iorwf	??_CAN_SendFrame,w,c
  4591  001714  6E62               	movwf	3938,c	;volatile
  4592                           
  4593                           ; BSR set to: 0
  4594                           ;CAN.c: 281: RXB0SIDLbits.EXID = 1;
  4595  001716  8662               	bsf	3938,3,c	;volatile
  4596                           
  4597                           ; BSR set to: 0
  4598                           ;CAN.c: 282: RXB0SIDH = (BYTE)(message->id.w[1]/32);
  4599  001718  EE20 F006          	lfsr	2,6
  4600  00171C  500B               	movf	CAN_SendFrame@message,w,c
  4601  00171E  26D9               	addwf	fsr2l,f,c
  4602  001720  500C               	movf	CAN_SendFrame@message+1,w,c
  4603  001722  22DA               	addwfc	fsr2h,f,c
  4604  001724  CFDE F00D          	movff	postinc2,??_CAN_SendFrame
  4605  001728  CFDD F00E          	movff	postdec2,??_CAN_SendFrame+1
  4606  00172C  0E05               	movlw	5
  4607  00172E  6E0F               	movwf	(??_CAN_SendFrame+2)& (0+255),c
  4608  001730                     u2795:
  4609  001730  90D8               	bcf	status,0,c
  4610  001732  320E               	rrcf	??_CAN_SendFrame+1,f,c
  4611  001734  320D               	rrcf	??_CAN_SendFrame,f,c
  4612  001736  2E0F               	decfsz	(??_CAN_SendFrame+2)& (0+255),f,c
  4613  001738  D7FB               	goto	u2795
  4614  00173A  500D               	movf	??_CAN_SendFrame,w,c
  4615  00173C  6E61               	movwf	3937,c	;volatile
  4616                           
  4617                           ; BSR set to: 0
  4618                           ;CAN.c: 284: RXB0DLC = 0;
  4619  00173E  0E00               	movlw	0
  4620  001740  6E65               	movwf	3941,c	;volatile
  4621                           
  4622                           ; BSR set to: 0
  4623                           ;CAN.c: 286: if(message->message_type==0x02)
  4624  001742  EE20 F001          	lfsr	2,1
  4625  001746  500B               	movf	CAN_SendFrame@message,w,c
  4626  001748  26D9               	addwf	fsr2l,f,c
  4627  00174A  500C               	movf	CAN_SendFrame@message+1,w,c
  4628  00174C  22DA               	addwfc	fsr2h,f,c
  4629  00174E  0E02               	movlw	2
  4630  001750  18DE               	xorwf	postinc2,w,c
  4631  001752  A4D8               	btfss	status,2,c
  4632  001754  D002               	goto	l4523
  4633                           
  4634                           ; BSR set to: 0
  4635                           ;CAN.c: 287: {;CAN.c: 288: RXB0DLCbits.RXRTR = 1;
  4636  001756  8C65               	bsf	3941,6,c	;volatile
  4637                           
  4638                           ;CAN.c: 289: }
  4639  001758  D05A               	goto	l4527
  4640  00175A                     l4523:
  4641                           
  4642                           ; BSR set to: 0
  4643                           ;CAN.c: 290: else;CAN.c: 291: {;CAN.c: 292: RXB0DLCbits.DLC0 = (message->data_length & 0
      +                          x0F);
  4644  00175A  EE20 F010          	lfsr	2,16
  4645  00175E  500B               	movf	CAN_SendFrame@message,w,c
  4646  001760  26D9               	addwf	fsr2l,f,c
  4647  001762  500C               	movf	CAN_SendFrame@message+1,w,c
  4648  001764  22DA               	addwfc	fsr2h,f,c
  4649  001766  50DF               	movf	indf2,w,c
  4650  001768  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  4651  00176A  0E0F               	movlw	15
  4652  00176C  160D               	andwf	??_CAN_SendFrame,f,c
  4653  00176E  5065               	movf	3941,w,c	;volatile
  4654  001770  180D               	xorwf	??_CAN_SendFrame,w,c
  4655  001772  0BFE               	andlw	-2
  4656  001774  180D               	xorwf	??_CAN_SendFrame,w,c
  4657  001776  6E65               	movwf	3941,c	;volatile
  4658                           
  4659                           ;CAN.c: 293: RXB0DLCbits.DLC1 = ((message->data_length & 0x0F)>> 1);
  4660  001778  EE20 F010          	lfsr	2,16
  4661  00177C  500B               	movf	CAN_SendFrame@message,w,c
  4662  00177E  26D9               	addwf	fsr2l,f,c
  4663  001780  500C               	movf	CAN_SendFrame@message+1,w,c
  4664  001782  22DA               	addwfc	fsr2h,f,c
  4665  001784  50DF               	movf	indf2,w,c
  4666  001786  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  4667  001788  90D8               	bcf	status,0,c
  4668  00178A  320D               	rrcf	??_CAN_SendFrame,f,c
  4669  00178C  0E07               	movlw	7
  4670  00178E  160D               	andwf	??_CAN_SendFrame,f,c
  4671  001790  460D               	rlncf	??_CAN_SendFrame,f,c
  4672  001792  5065               	movf	3941,w,c	;volatile
  4673  001794  180D               	xorwf	??_CAN_SendFrame,w,c
  4674  001796  0BFD               	andlw	-3
  4675  001798  180D               	xorwf	??_CAN_SendFrame,w,c
  4676  00179A  6E65               	movwf	3941,c	;volatile
  4677                           
  4678                           ;CAN.c: 294: RXB0DLCbits.DLC2 = ((message->data_length & 0x0F)>> 2);
  4679  00179C  EE20 F010          	lfsr	2,16
  4680  0017A0  500B               	movf	CAN_SendFrame@message,w,c
  4681  0017A2  26D9               	addwf	fsr2l,f,c
  4682  0017A4  500C               	movf	CAN_SendFrame@message+1,w,c
  4683  0017A6  22DA               	addwfc	fsr2h,f,c
  4684  0017A8  50DF               	movf	indf2,w,c
  4685  0017AA  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  4686  0017AC  90D8               	bcf	status,0,c
  4687  0017AE  320D               	rrcf	??_CAN_SendFrame,f,c
  4688  0017B0  90D8               	bcf	status,0,c
  4689  0017B2  320D               	rrcf	??_CAN_SendFrame,f,c
  4690  0017B4  0E03               	movlw	3
  4691  0017B6  160D               	andwf	??_CAN_SendFrame,f,c
  4692  0017B8  460D               	rlncf	??_CAN_SendFrame,f,c
  4693  0017BA  460D               	rlncf	??_CAN_SendFrame,f,c
  4694  0017BC  5065               	movf	3941,w,c	;volatile
  4695  0017BE  180D               	xorwf	??_CAN_SendFrame,w,c
  4696  0017C0  0BFB               	andlw	-5
  4697  0017C2  180D               	xorwf	??_CAN_SendFrame,w,c
  4698  0017C4  6E65               	movwf	3941,c	;volatile
  4699                           
  4700                           ;CAN.c: 295: RXB0DLCbits.DLC3 = ((message->data_length & 0x0F)>> 3);
  4701  0017C6  EE20 F010          	lfsr	2,16
  4702  0017CA  500B               	movf	CAN_SendFrame@message,w,c
  4703  0017CC  26D9               	addwf	fsr2l,f,c
  4704  0017CE  500C               	movf	CAN_SendFrame@message+1,w,c
  4705  0017D0  22DA               	addwfc	fsr2h,f,c
  4706  0017D2  50DF               	movf	indf2,w,c
  4707  0017D4  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  4708  0017D6  90D8               	bcf	status,0,c
  4709  0017D8  320D               	rrcf	??_CAN_SendFrame,f,c
  4710  0017DA  90D8               	bcf	status,0,c
  4711  0017DC  320D               	rrcf	??_CAN_SendFrame,f,c
  4712  0017DE  90D8               	bcf	status,0,c
  4713  0017E0  320D               	rrcf	??_CAN_SendFrame,f,c
  4714  0017E2  0E01               	movlw	1
  4715  0017E4  160D               	andwf	??_CAN_SendFrame,f,c
  4716  0017E6  460D               	rlncf	??_CAN_SendFrame,f,c
  4717  0017E8  460D               	rlncf	??_CAN_SendFrame,f,c
  4718  0017EA  460D               	rlncf	??_CAN_SendFrame,f,c
  4719  0017EC  5065               	movf	3941,w,c	;volatile
  4720  0017EE  180D               	xorwf	??_CAN_SendFrame,w,c
  4721  0017F0  0BF7               	andlw	-9
  4722  0017F2  180D               	xorwf	??_CAN_SendFrame,w,c
  4723  0017F4  6E65               	movwf	3941,c	;volatile
  4724                           
  4725                           ; BSR set to: 0
  4726                           ;CAN.c: 297: CAN_MoveBuffIntoFrame(&RXB0D0, message->data);
  4727  0017F6  0E66               	movlw	102
  4728  0017F8  6E06               	movwf	CAN_MoveBuffIntoFrame@Ram,c
  4729  0017FA  0E0F               	movlw	15
  4730  0017FC  6E07               	movwf	CAN_MoveBuffIntoFrame@Ram+1,c
  4731  0017FE  0E08               	movlw	8
  4732  001800  240B               	addwf	CAN_SendFrame@message,w,c
  4733  001802  6E08               	movwf	CAN_MoveBuffIntoFrame@Buf,c
  4734  001804  0E00               	movlw	0
  4735  001806  200C               	addwfc	CAN_SendFrame@message+1,w,c
  4736  001808  6E09               	movwf	CAN_MoveBuffIntoFrame@Buf+1,c
  4737  00180A  EC08  F015         	call	_CAN_MoveBuffIntoFrame	;wreg free
  4738  00180E                     l4527:
  4739                           
  4740                           ;CAN.c: 298: };CAN.c: 300: RXB0CONbits.FILHIT3 = 1;
  4741  00180E  8660               	bsf	3936,3,c	;volatile
  4742                           
  4743                           ;CAN.c: 302: DetectorLedRadar.Flags.ramkaTx = 1;
  4744  001810  0100               	movlb	0	; () banked
  4745  001812  89CF               	bsf	_DetectorLedRadar& (0+255),4,b
  4746                           
  4747                           ; BSR set to: 0
  4748  001814  0012               	return		;funcret
  4749  001816                     __end_of_CAN_SendFrame:
  4750                           	opt callstack 0
  4751                           
  4752 ;; *************** function _CAN_GenID *****************
  4753 ;; Defined at:
  4754 ;;		line 446 in file "CAN.c"
  4755 ;; Parameters:    Size  Location     Type
  4756 ;;  message         2    5[COMRAM] PTR struct .
  4757 ;;		 -> TRM_DataTransmition@canMessage(17), 
  4758 ;;  frameID         1    7[COMRAM] unsigned char 
  4759 ;; Auto vars:     Size  Location     Type
  4760 ;;		None
  4761 ;; Return value:  Size  Location     Type
  4762 ;;                  1    wreg      void 
  4763 ;; Registers used:
  4764 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4765 ;; Tracked objects:
  4766 ;;		On entry : 0/0
  4767 ;;		On exit  : 0/0
  4768 ;;		Unchanged: 0/0
  4769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4770 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4772 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4773 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4774 ;;Total ram usage:        5 bytes
  4775 ;; Hardware stack levels used:    1
  4776 ;; Hardware stack levels required when called:    3
  4777 ;; This function calls:
  4778 ;;		Nothing
  4779 ;; This function is called by:
  4780 ;;		_FRAME_HandleCanFrame
  4781 ;; This function uses a non-reentrant model
  4782 ;;
  4783                           
  4784                           	psect	text31
  4785  0023C8                     __ptext31:
  4786                           	opt callstack 0
  4787  0023C8                     _CAN_GenID:
  4788                           	opt callstack 25
  4789                           
  4790                           ;CAN.c: 449: message->frame_type = 0x03;
  4791                           
  4792                           ; BSR set to: 0
  4793                           ;incstack = 0
  4794  0023C8  EE20 F002          	lfsr	2,2
  4795  0023CC  5006               	movf	CAN_GenID@message,w,c
  4796  0023CE  26D9               	addwf	fsr2l,f,c
  4797  0023D0  5007               	movf	CAN_GenID@message+1,w,c
  4798  0023D2  22DA               	addwfc	fsr2h,f,c
  4799  0023D4  0E03               	movlw	3
  4800  0023D6  6EDF               	movwf	indf2,c
  4801                           
  4802                           ;CAN.c: 450: message->message_type = 0x01;
  4803  0023D8  EE20 F001          	lfsr	2,1
  4804  0023DC  5006               	movf	CAN_GenID@message,w,c
  4805  0023DE  26D9               	addwf	fsr2l,f,c
  4806  0023E0  5007               	movf	CAN_GenID@message+1,w,c
  4807  0023E2  22DA               	addwfc	fsr2h,f,c
  4808  0023E4  0E01               	movlw	1
  4809  0023E6  6EDF               	movwf	indf2,c
  4810                           
  4811                           ;CAN.c: 451: message->id.w[1] = (WORD)frameID * (WORD)4;
  4812  0023E8  5008               	movf	CAN_GenID@frameID,w,c
  4813  0023EA  6E09               	movwf	??_CAN_GenID& (0+255),c
  4814  0023EC  6A0A               	clrf	(??_CAN_GenID+1)& (0+255),c
  4815  0023EE  90D8               	bcf	status,0,c
  4816  0023F0  3609               	rlcf	??_CAN_GenID,f,c
  4817  0023F2  360A               	rlcf	??_CAN_GenID+1,f,c
  4818  0023F4  90D8               	bcf	status,0,c
  4819  0023F6  3609               	rlcf	??_CAN_GenID,f,c
  4820  0023F8  360A               	rlcf	??_CAN_GenID+1,f,c
  4821  0023FA  EE20 F006          	lfsr	2,6
  4822  0023FE  5006               	movf	CAN_GenID@message,w,c
  4823  002400  26D9               	addwf	fsr2l,f,c
  4824  002402  5007               	movf	CAN_GenID@message+1,w,c
  4825  002404  22DA               	addwfc	fsr2h,f,c
  4826  002406  C009  FFDE         	movff	??_CAN_GenID,postinc2
  4827  00240A  C00A  FFDD         	movff	??_CAN_GenID+1,postdec2
  4828                           
  4829                           ;CAN.c: 452: message->id.w[0] = DaneCan.adresCAN;
  4830  00240E  EE20 F004          	lfsr	2,4
  4831  002412  5006               	movf	CAN_GenID@message,w,c
  4832  002414  26D9               	addwf	fsr2l,f,c
  4833  002416  5007               	movf	CAN_GenID@message+1,w,c
  4834  002418  22DA               	addwfc	fsr2h,f,c
  4835  00241A  C0CD  FFDE         	movff	_DaneCan+2,postinc2
  4836  00241E  C0CE  FFDD         	movff	_DaneCan+3,postdec2
  4837                           
  4838                           ;CAN.c: 455: message ->id.bits.b16 = 0;
  4839  002422  EE20 F006          	lfsr	2,6
  4840  002426  5006               	movf	CAN_GenID@message,w,c
  4841  002428  26D9               	addwf	fsr2l,f,c
  4842  00242A  5007               	movf	CAN_GenID@message+1,w,c
  4843  00242C  22DA               	addwfc	fsr2h,f,c
  4844  00242E  90DF               	bcf	indf2,0,c
  4845                           
  4846                           ;CAN.c: 456: message ->id.bits.b17 = 0;
  4847  002430  EE20 F006          	lfsr	2,6
  4848  002434  5006               	movf	CAN_GenID@message,w,c
  4849  002436  26D9               	addwf	fsr2l,f,c
  4850  002438  5007               	movf	CAN_GenID@message+1,w,c
  4851  00243A  22DA               	addwfc	fsr2h,f,c
  4852  00243C  92DF               	bcf	indf2,1,c
  4853  00243E  0012               	return		;funcret
  4854  002440                     __end_of_CAN_GenID:
  4855                           	opt callstack 0
  4856                           
  4857 ;; *************** function _CAN_TakeFrame *****************
  4858 ;; Defined at:
  4859 ;;		line 311 in file "CAN.c"
  4860 ;; Parameters:    Size  Location     Type
  4861 ;;  message         2   13[COMRAM] PTR struct .
  4862 ;;		 -> TRM_DataTransmition@canMessage(17), 
  4863 ;; Auto vars:     Size  Location     Type
  4864 ;;  k               1   18[COMRAM] unsigned char 
  4865 ;;  tempCON         1   17[COMRAM] unsigned char 
  4866 ;; Return value:  Size  Location     Type
  4867 ;;                  1    wreg      enum E10294
  4868 ;; Registers used:
  4869 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4870 ;; Tracked objects:
  4871 ;;		On entry : 0/0
  4872 ;;		On exit  : 0/0
  4873 ;;		Unchanged: 0/0
  4874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4875 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4876 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4877 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4878 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4879 ;;Total ram usage:        6 bytes
  4880 ;; Hardware stack levels used:    1
  4881 ;; Hardware stack levels required when called:    4
  4882 ;; This function calls:
  4883 ;;		_CAN_MoveBuffIntoFrame
  4884 ;;		___awdiv
  4885 ;; This function is called by:
  4886 ;;		_TRM_DataTransmition
  4887 ;; This function uses a non-reentrant model
  4888 ;;
  4889                           
  4890                           	psect	text32
  4891  000F2E                     __ptext32:
  4892                           	opt callstack 0
  4893  000F2E                     _CAN_TakeFrame:
  4894                           	opt callstack 25
  4895                           
  4896                           ;CAN.c: 313: BYTE k, tempCON;;CAN.c: 315: k = CANCON&0x0F;
  4897                           
  4898                           ;incstack = 0
  4899  000F2E  506F               	movf	3951,w,c	;volatile
  4900  000F30  0B0F               	andlw	15
  4901  000F32  6E13               	movwf	CAN_TakeFrame@k,c
  4902                           
  4903                           ;CAN.c: 317: ECANCON = 0x90 | k;
  4904  000F34  5013               	movf	CAN_TakeFrame@k,w,c
  4905  000F36  0990               	iorlw	144
  4906  000F38  6E77               	movwf	3959,c	;volatile
  4907                           
  4908                           ;CAN.c: 320: switch(k)
  4909  000F3A  D018               	goto	l4739
  4910  000F3C                     l301:
  4911                           
  4912                           ;CAN.c: 323: tempCON = RXB0CON;
  4913  000F3C  CF60 F012          	movff	3936,CAN_TakeFrame@tempCON	;volatile
  4914                           
  4915                           ;CAN.c: 324: break;
  4916  000F40  D02E               	goto	l302
  4917  000F42                     l303:
  4918                           
  4919                           ;CAN.c: 326: tempCON = RXB1CON;
  4920  000F42  CF50 F012          	movff	3920,CAN_TakeFrame@tempCON	;volatile
  4921                           
  4922                           ;CAN.c: 327: break;
  4923  000F46  D02B               	goto	l302
  4924  000F48                     l304:
  4925                           
  4926                           ;CAN.c: 329: tempCON = B0CON;
  4927  000F48  CE20 F012          	movff	3616,CAN_TakeFrame@tempCON	;volatile
  4928                           
  4929                           ;CAN.c: 330: break;
  4930  000F4C  D028               	goto	l302
  4931  000F4E                     l305:
  4932                           
  4933                           ;CAN.c: 332: tempCON = B1CON;
  4934  000F4E  CE30 F012          	movff	3632,CAN_TakeFrame@tempCON	;volatile
  4935                           
  4936                           ;CAN.c: 333: break;
  4937  000F52  D025               	goto	l302
  4938  000F54                     l306:
  4939                           
  4940                           ;CAN.c: 335: tempCON = B2CON;
  4941  000F54  CE40 F012          	movff	3648,CAN_TakeFrame@tempCON	;volatile
  4942                           
  4943                           ;CAN.c: 336: break;
  4944  000F58  D022               	goto	l302
  4945  000F5A                     l307:
  4946                           
  4947                           ;CAN.c: 338: tempCON = B3CON;
  4948  000F5A  CE50 F012          	movff	3664,CAN_TakeFrame@tempCON	;volatile
  4949                           
  4950                           ;CAN.c: 339: break;
  4951  000F5E  D01F               	goto	l302
  4952  000F60                     l308:
  4953                           
  4954                           ;CAN.c: 341: tempCON = B4CON;
  4955  000F60  CE60 F012          	movff	3680,CAN_TakeFrame@tempCON	;volatile
  4956                           
  4957                           ;CAN.c: 342: break;
  4958  000F64  D01C               	goto	l302
  4959  000F66                     l309:
  4960                           
  4961                           ;CAN.c: 344: tempCON = B5CON;
  4962  000F66  CE70 F012          	movff	3696,CAN_TakeFrame@tempCON	;volatile
  4963                           
  4964                           ;CAN.c: 345: break;
  4965  000F6A  D019               	goto	l302
  4966  000F6C                     l4739:
  4967  000F6C  5013               	movf	CAN_TakeFrame@k,w,c
  4968                           
  4969                           ; Switch size 1, requested type "simple"
  4970                           ; Number of cases is 8, Range of values is 0 to 7
  4971                           ; switch strategies available:
  4972                           ; Name         Instructions Cycles
  4973                           ; simple_byte           25    13 (average)
  4974                           ;	Chosen strategy is simple_byte
  4975  000F6E  0A00               	xorlw	0	; case 0
  4976  000F70  B4D8               	btfsc	status,2,c
  4977  000F72  D7E4               	goto	l301
  4978  000F74  0A01               	xorlw	1	; case 1
  4979  000F76  B4D8               	btfsc	status,2,c
  4980  000F78  D7E4               	goto	l303
  4981  000F7A  0A03               	xorlw	3	; case 2
  4982  000F7C  B4D8               	btfsc	status,2,c
  4983  000F7E  D7E4               	goto	l304
  4984  000F80  0A01               	xorlw	1	; case 3
  4985  000F82  B4D8               	btfsc	status,2,c
  4986  000F84  D7E4               	goto	l305
  4987  000F86  0A07               	xorlw	7	; case 4
  4988  000F88  B4D8               	btfsc	status,2,c
  4989  000F8A  D7E4               	goto	l306
  4990  000F8C  0A01               	xorlw	1	; case 5
  4991  000F8E  B4D8               	btfsc	status,2,c
  4992  000F90  D7E4               	goto	l307
  4993  000F92  0A03               	xorlw	3	; case 6
  4994  000F94  B4D8               	btfsc	status,2,c
  4995  000F96  D7E4               	goto	l308
  4996  000F98  0A01               	xorlw	1	; case 7
  4997  000F9A  B4D8               	btfsc	status,2,c
  4998  000F9C  D7E4               	goto	l309
  4999  000F9E                     l302:
  5000                           
  5001                           ;CAN.c: 349: if((tempCON & 0x80) > 0)
  5002  000F9E  AE12               	btfss	CAN_TakeFrame@tempCON,7,c
  5003  000FA0  D09E               	goto	l4775
  5004                           
  5005                           ;CAN.c: 350: {;CAN.c: 351: message->buffer = RXB0CON & 0x1F;
  5006  000FA2  EE20 F003          	lfsr	2,3
  5007  000FA6  500E               	movf	CAN_TakeFrame@message,w,c
  5008  000FA8  26D9               	addwf	fsr2l,f,c
  5009  000FAA  500F               	movf	CAN_TakeFrame@message+1,w,c
  5010  000FAC  22DA               	addwfc	fsr2h,f,c
  5011  000FAE  5060               	movf	3936,w,c	;volatile
  5012  000FB0  0B1F               	andlw	31
  5013  000FB2  6EDF               	movwf	indf2,c
  5014                           
  5015                           ;CAN.c: 352: message->id.v[0] = RXB0EIDL;
  5016  000FB4  EE20 F004          	lfsr	2,4
  5017  000FB8  500E               	movf	CAN_TakeFrame@message,w,c
  5018  000FBA  26D9               	addwf	fsr2l,f,c
  5019  000FBC  500F               	movf	CAN_TakeFrame@message+1,w,c
  5020  000FBE  22DA               	addwfc	fsr2h,f,c
  5021  000FC0  CF64 FFDF          	movff	3940,indf2	;volatile
  5022                           
  5023                           ;CAN.c: 353: message->id.v[1] = RXB0EIDH;
  5024  000FC4  EE20 F005          	lfsr	2,5
  5025  000FC8  500E               	movf	CAN_TakeFrame@message,w,c
  5026  000FCA  26D9               	addwf	fsr2l,f,c
  5027  000FCC  500F               	movf	CAN_TakeFrame@message+1,w,c
  5028  000FCE  22DA               	addwfc	fsr2h,f,c
  5029  000FD0  CF63 FFDF          	movff	3939,indf2	;volatile
  5030                           
  5031                           ;CAN.c: 354: message->id.v[2] = (RXB0SIDL/8) | (RXB0SIDL&0x03);
  5032  000FD4  EE20 F006          	lfsr	2,6
  5033  000FD8  500E               	movf	CAN_TakeFrame@message,w,c
  5034  000FDA  26D9               	addwf	fsr2l,f,c
  5035  000FDC  500F               	movf	CAN_TakeFrame@message+1,w,c
  5036  000FDE  22DA               	addwfc	fsr2h,f,c
  5037  000FE0  CF62 F010          	movff	3938,??_CAN_TakeFrame	;volatile
  5038  000FE4  0E03               	movlw	3
  5039  000FE6  1610               	andwf	??_CAN_TakeFrame,f,c
  5040  000FE8  CF62 F006          	movff	3938,___awdiv@dividend	;volatile
  5041  000FEC  6A07               	clrf	___awdiv@dividend+1,c
  5042  000FEE  0E00               	movlw	0
  5043  000FF0  6E09               	movwf	___awdiv@divisor+1,c
  5044  000FF2  0E08               	movlw	8
  5045  000FF4  6E08               	movwf	___awdiv@divisor,c
  5046  000FF6  ECE9  F010         	call	___awdiv	;wreg free
  5047  000FFA  5006               	movf	?___awdiv,w,c
  5048  000FFC  1010               	iorwf	??_CAN_TakeFrame,w,c
  5049  000FFE  6EDF               	movwf	indf2,c
  5050                           
  5051                           ;CAN.c: 355: message->id.w[1] |= (WORD)RXB0SIDH*32;
  5052  001000  5061               	movf	3937,w,c	;volatile
  5053  001002  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  5054  001004  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  5055  001006  0E05               	movlw	5
  5056  001008                     u3145:
  5057  001008  90D8               	bcf	status,0,c
  5058  00100A  3610               	rlcf	??_CAN_TakeFrame,f,c
  5059  00100C  3611               	rlcf	??_CAN_TakeFrame+1,f,c
  5060  00100E  2EE8               	decfsz	wreg,f,c
  5061  001010  D7FB               	goto	u3145
  5062  001012  EE20 F006          	lfsr	2,6
  5063  001016  500E               	movf	CAN_TakeFrame@message,w,c
  5064  001018  26D9               	addwf	fsr2l,f,c
  5065  00101A  500F               	movf	CAN_TakeFrame@message+1,w,c
  5066  00101C  22DA               	addwfc	fsr2h,f,c
  5067  00101E  5010               	movf	??_CAN_TakeFrame,w,c
  5068  001020  12DE               	iorwf	postinc2,f,c
  5069  001022  5011               	movf	??_CAN_TakeFrame+1,w,c
  5070  001024  12DD               	iorwf	postdec2,f,c
  5071                           
  5072                           ;CAN.c: 356: message->frame_type=0x03;
  5073  001026  EE20 F002          	lfsr	2,2
  5074  00102A  500E               	movf	CAN_TakeFrame@message,w,c
  5075  00102C  26D9               	addwf	fsr2l,f,c
  5076  00102E  500F               	movf	CAN_TakeFrame@message+1,w,c
  5077  001030  22DA               	addwfc	fsr2h,f,c
  5078  001032  0E03               	movlw	3
  5079  001034  6EDF               	movwf	indf2,c
  5080                           
  5081                           ;CAN.c: 360: if(RXB0DLCbits.RXRTR == 0)
  5082  001036  BC65               	btfsc	3941,6,c	;volatile
  5083  001038  D061               	goto	l4781
  5084                           
  5085                           ;CAN.c: 361: {;CAN.c: 362: message->message_type = 0x01;
  5086  00103A  EE20 F001          	lfsr	2,1
  5087  00103E  500E               	movf	CAN_TakeFrame@message,w,c
  5088  001040  26D9               	addwf	fsr2l,f,c
  5089  001042  500F               	movf	CAN_TakeFrame@message+1,w,c
  5090  001044  22DA               	addwfc	fsr2h,f,c
  5091  001046  0E01               	movlw	1
  5092  001048  6EDF               	movwf	indf2,c
  5093                           
  5094                           ;CAN.c: 363: message->data_length= RXB0DLC & 0x0F;
  5095  00104A  EE20 F010          	lfsr	2,16
  5096  00104E  500E               	movf	CAN_TakeFrame@message,w,c
  5097  001050  26D9               	addwf	fsr2l,f,c
  5098  001052  500F               	movf	CAN_TakeFrame@message+1,w,c
  5099  001054  22DA               	addwfc	fsr2h,f,c
  5100  001056  5065               	movf	3941,w,c	;volatile
  5101  001058  0B0F               	andlw	15
  5102  00105A  6EDF               	movwf	indf2,c
  5103                           
  5104                           ;CAN.c: 364: if(message->data_length > 8)
  5105  00105C  EE20 F010          	lfsr	2,16
  5106  001060  500E               	movf	CAN_TakeFrame@message,w,c
  5107  001062  26D9               	addwf	fsr2l,f,c
  5108  001064  500F               	movf	CAN_TakeFrame@message+1,w,c
  5109  001066  22DA               	addwfc	fsr2h,f,c
  5110  001068  0E08               	movlw	8
  5111  00106A  64DF               	cpfsgt	indf2,c
  5112  00106C  D03A               	goto	l4779
  5113  00106E  D01E               	goto	l4773
  5114  001070                     l4755:
  5115                           
  5116                           ;CAN.c: 370: RXB0CON = 0;
  5117  001070  0E00               	movlw	0
  5118  001072  6E60               	movwf	3936,c	;volatile
  5119                           
  5120                           ;CAN.c: 371: break;
  5121  001074  D034               	goto	l4775
  5122  001076                     l4757:
  5123                           
  5124                           ;CAN.c: 373: RXB1CON = 0;
  5125  001076  0E00               	movlw	0
  5126  001078  010F               	movlb	15	; () banked
  5127  00107A  D00E               	goto	L2
  5128  00107C                     l4759:
  5129                           
  5130                           ;CAN.c: 376: B0CON = 0;
  5131  00107C  0E00               	movlw	0
  5132  00107E  010E               	movlb	14	; () banked
  5133  001080  6F20               	movwf	32,b	;volatile
  5134                           
  5135                           ;CAN.c: 377: break;
  5136  001082  D02D               	goto	l4775
  5137  001084                     l4761:
  5138                           
  5139                           ;CAN.c: 379: B1CON = 0;
  5140  001084  0E00               	movlw	0
  5141  001086  010E               	movlb	14	; () banked
  5142  001088  6F30               	movwf	48,b	;volatile
  5143                           
  5144                           ;CAN.c: 380: break;
  5145  00108A  D029               	goto	l4775
  5146  00108C                     l4763:
  5147                           
  5148                           ;CAN.c: 382: B2CON = 0;
  5149  00108C  0E00               	movlw	0
  5150  00108E  010E               	movlb	14	; () banked
  5151  001090  6F40               	movwf	64,b	;volatile
  5152                           
  5153                           ;CAN.c: 383: break;
  5154  001092  D025               	goto	l4775
  5155  001094                     l4765:
  5156                           
  5157                           ;CAN.c: 385: B3CON = 0;
  5158  001094  0E00               	movlw	0
  5159  001096  010E               	movlb	14	; () banked
  5160  001098                     L2:
  5161  001098  6F50               	movwf	80,b	;volatile
  5162                           
  5163                           ;CAN.c: 386: break;
  5164  00109A  D021               	goto	l4775
  5165  00109C                     l4767:
  5166                           
  5167                           ;CAN.c: 388: B4CON = 0;
  5168  00109C  0E00               	movlw	0
  5169  00109E  010E               	movlb	14	; () banked
  5170  0010A0  6F60               	movwf	96,b	;volatile
  5171                           
  5172                           ;CAN.c: 389: break;
  5173  0010A2  D01D               	goto	l4775
  5174  0010A4                     l4769:
  5175                           
  5176                           ;CAN.c: 391: B5CON = 0;
  5177  0010A4  0E00               	movlw	0
  5178  0010A6  010E               	movlb	14	; () banked
  5179  0010A8  6F70               	movwf	112,b	;volatile
  5180                           
  5181                           ;CAN.c: 392: break;
  5182  0010AA  D019               	goto	l4775
  5183  0010AC                     l4773:
  5184  0010AC  5013               	movf	CAN_TakeFrame@k,w,c
  5185                           
  5186                           ; Switch size 1, requested type "simple"
  5187                           ; Number of cases is 8, Range of values is 0 to 7
  5188                           ; switch strategies available:
  5189                           ; Name         Instructions Cycles
  5190                           ; simple_byte           25    13 (average)
  5191                           ;	Chosen strategy is simple_byte
  5192  0010AE  0A00               	xorlw	0	; case 0
  5193  0010B0  B4D8               	btfsc	status,2,c
  5194  0010B2  D7DE               	goto	l4755
  5195  0010B4  0A01               	xorlw	1	; case 1
  5196  0010B6  B4D8               	btfsc	status,2,c
  5197  0010B8  D7DE               	goto	l4757
  5198  0010BA  0A03               	xorlw	3	; case 2
  5199  0010BC  B4D8               	btfsc	status,2,c
  5200  0010BE  D7DE               	goto	l4759
  5201  0010C0  0A01               	xorlw	1	; case 3
  5202  0010C2  B4D8               	btfsc	status,2,c
  5203  0010C4  D7DF               	goto	l4761
  5204  0010C6  0A07               	xorlw	7	; case 4
  5205  0010C8  B4D8               	btfsc	status,2,c
  5206  0010CA  D7E0               	goto	l4763
  5207  0010CC  0A01               	xorlw	1	; case 5
  5208  0010CE  B4D8               	btfsc	status,2,c
  5209  0010D0  D7E1               	goto	l4765
  5210  0010D2  0A03               	xorlw	3	; case 6
  5211  0010D4  B4D8               	btfsc	status,2,c
  5212  0010D6  D7E2               	goto	l4767
  5213  0010D8  0A01               	xorlw	1	; case 7
  5214  0010DA  B4D8               	btfsc	status,2,c
  5215  0010DC  D7E3               	goto	l4769
  5216  0010DE                     l4775:
  5217                           
  5218                           ;CAN.c: 394: return FALSE;
  5219  0010DE  0E00               	movlw	0
  5220  0010E0  0012               	return	
  5221  0010E2                     l4779:
  5222                           
  5223                           ;CAN.c: 395: };CAN.c: 396: CAN_MoveBuffIntoFrame(message->data, &RXB0D0);
  5224  0010E2  0E08               	movlw	8
  5225  0010E4  240E               	addwf	CAN_TakeFrame@message,w,c
  5226  0010E6  6E06               	movwf	CAN_MoveBuffIntoFrame@Ram,c
  5227  0010E8  0E00               	movlw	0
  5228  0010EA  200F               	addwfc	CAN_TakeFrame@message+1,w,c
  5229  0010EC  6E07               	movwf	CAN_MoveBuffIntoFrame@Ram+1,c
  5230  0010EE  0E66               	movlw	102
  5231  0010F0  6E08               	movwf	CAN_MoveBuffIntoFrame@Buf,c
  5232  0010F2  0E0F               	movlw	15
  5233  0010F4  6E09               	movwf	CAN_MoveBuffIntoFrame@Buf+1,c
  5234  0010F6  EC08  F015         	call	_CAN_MoveBuffIntoFrame	;wreg free
  5235                           
  5236                           ;CAN.c: 397: }
  5237  0010FA  D027               	goto	l4801
  5238  0010FC                     l4781:
  5239                           
  5240                           ;CAN.c: 399: else;CAN.c: 400: {;CAN.c: 401: message->message_type=0x02;
  5241  0010FC  EE20 F001          	lfsr	2,1
  5242  001100  500E               	movf	CAN_TakeFrame@message,w,c
  5243  001102  26D9               	addwf	fsr2l,f,c
  5244  001104  500F               	movf	CAN_TakeFrame@message+1,w,c
  5245  001106  22DA               	addwfc	fsr2h,f,c
  5246  001108  0E02               	movlw	2
  5247  00110A  6EDF               	movwf	indf2,c
  5248  00110C  D01E               	goto	l4801
  5249  00110E                     l4783:
  5250                           
  5251                           ;CAN.c: 407: RXB0CON = 0;
  5252  00110E  0E00               	movlw	0
  5253  001110  6E60               	movwf	3936,c	;volatile
  5254                           
  5255                           ;CAN.c: 408: break;
  5256  001112  D034               	goto	l4803
  5257  001114                     l4785:
  5258                           
  5259                           ;CAN.c: 410: RXB1CON = 0;
  5260  001114  0E00               	movlw	0
  5261  001116  010F               	movlb	15	; () banked
  5262  001118  D00E               	goto	L3
  5263  00111A                     l4787:
  5264                           
  5265                           ;CAN.c: 413: B0CON = 0;
  5266  00111A  0E00               	movlw	0
  5267  00111C  010E               	movlb	14	; () banked
  5268  00111E  6F20               	movwf	32,b	;volatile
  5269                           
  5270                           ;CAN.c: 414: break;
  5271  001120  D02D               	goto	l4803
  5272  001122                     l4789:
  5273                           
  5274                           ;CAN.c: 416: B1CON = 0;
  5275  001122  0E00               	movlw	0
  5276  001124  010E               	movlb	14	; () banked
  5277  001126  6F30               	movwf	48,b	;volatile
  5278                           
  5279                           ;CAN.c: 417: break;
  5280  001128  D029               	goto	l4803
  5281  00112A                     l4791:
  5282                           
  5283                           ;CAN.c: 419: B2CON = 0;
  5284  00112A  0E00               	movlw	0
  5285  00112C  010E               	movlb	14	; () banked
  5286  00112E  6F40               	movwf	64,b	;volatile
  5287                           
  5288                           ;CAN.c: 420: break;
  5289  001130  D025               	goto	l4803
  5290  001132                     l4793:
  5291                           
  5292                           ;CAN.c: 422: B3CON = 0;
  5293  001132  0E00               	movlw	0
  5294  001134  010E               	movlb	14	; () banked
  5295  001136                     L3:
  5296  001136  6F50               	movwf	80,b	;volatile
  5297                           
  5298                           ;CAN.c: 423: break;
  5299  001138  D021               	goto	l4803
  5300  00113A                     l4795:
  5301                           
  5302                           ;CAN.c: 425: B4CON = 0;
  5303  00113A  0E00               	movlw	0
  5304  00113C  010E               	movlb	14	; () banked
  5305  00113E  6F60               	movwf	96,b	;volatile
  5306                           
  5307                           ;CAN.c: 426: break;
  5308  001140  D01D               	goto	l4803
  5309  001142                     l4797:
  5310                           
  5311                           ;CAN.c: 428: B5CON = 0;
  5312  001142  0E00               	movlw	0
  5313  001144  010E               	movlb	14	; () banked
  5314  001146  6F70               	movwf	112,b	;volatile
  5315                           
  5316                           ;CAN.c: 429: break;
  5317  001148  D019               	goto	l4803
  5318  00114A                     l4801:
  5319  00114A  5013               	movf	CAN_TakeFrame@k,w,c
  5320                           
  5321                           ; Switch size 1, requested type "simple"
  5322                           ; Number of cases is 8, Range of values is 0 to 7
  5323                           ; switch strategies available:
  5324                           ; Name         Instructions Cycles
  5325                           ; simple_byte           25    13 (average)
  5326                           ;	Chosen strategy is simple_byte
  5327  00114C  0A00               	xorlw	0	; case 0
  5328  00114E  B4D8               	btfsc	status,2,c
  5329  001150  D7DE               	goto	l4783
  5330  001152  0A01               	xorlw	1	; case 1
  5331  001154  B4D8               	btfsc	status,2,c
  5332  001156  D7DE               	goto	l4785
  5333  001158  0A03               	xorlw	3	; case 2
  5334  00115A  B4D8               	btfsc	status,2,c
  5335  00115C  D7DE               	goto	l4787
  5336  00115E  0A01               	xorlw	1	; case 3
  5337  001160  B4D8               	btfsc	status,2,c
  5338  001162  D7DF               	goto	l4789
  5339  001164  0A07               	xorlw	7	; case 4
  5340  001166  B4D8               	btfsc	status,2,c
  5341  001168  D7E0               	goto	l4791
  5342  00116A  0A01               	xorlw	1	; case 5
  5343  00116C  B4D8               	btfsc	status,2,c
  5344  00116E  D7E1               	goto	l4793
  5345  001170  0A03               	xorlw	3	; case 6
  5346  001172  B4D8               	btfsc	status,2,c
  5347  001174  D7E2               	goto	l4795
  5348  001176  0A01               	xorlw	1	; case 7
  5349  001178  B4D8               	btfsc	status,2,c
  5350  00117A  D7E3               	goto	l4797
  5351  00117C                     l4803:
  5352                           
  5353                           ;CAN.c: 431: return TRUE;
  5354  00117C  0E01               	movlw	1
  5355  00117E  0012               	return		;funcret
  5356  001180                     __end_of_CAN_TakeFrame:
  5357                           	opt callstack 0
  5358                           
  5359 ;; *************** function ___awdiv *****************
  5360 ;; Defined at:
  5361 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awdiv.c"
  5362 ;; Parameters:    Size  Location     Type
  5363 ;;  dividend        2    5[COMRAM] int 
  5364 ;;  divisor         2    7[COMRAM] int 
  5365 ;; Auto vars:     Size  Location     Type
  5366 ;;  quotient        2   11[COMRAM] int 
  5367 ;;  sign            1   10[COMRAM] unsigned char 
  5368 ;;  counter         1    9[COMRAM] unsigned char 
  5369 ;; Return value:  Size  Location     Type
  5370 ;;                  2    5[COMRAM] int 
  5371 ;; Registers used:
  5372 ;;		wreg, status,2, status,0
  5373 ;; Tracked objects:
  5374 ;;		On entry : 0/0
  5375 ;;		On exit  : 0/0
  5376 ;;		Unchanged: 0/0
  5377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5378 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5379 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5381 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5382 ;;Total ram usage:        8 bytes
  5383 ;; Hardware stack levels used:    1
  5384 ;; Hardware stack levels required when called:    3
  5385 ;; This function calls:
  5386 ;;		Nothing
  5387 ;; This function is called by:
  5388 ;;		_CAN_TakeFrame
  5389 ;;		_FRAME_HandleCanFrame
  5390 ;; This function uses a non-reentrant model
  5391 ;;
  5392                           
  5393                           	psect	text33
  5394  0021D2                     __ptext33:
  5395                           	opt callstack 0
  5396  0021D2                     ___awdiv:
  5397                           	opt callstack 25
  5398                           
  5399                           ;incstack = 0
  5400  0021D2  0E00               	movlw	0
  5401  0021D4  6E0B               	movwf	___awdiv@sign,c
  5402  0021D6  AE09               	btfss	___awdiv@divisor+1,7,c
  5403  0021D8  D006               	goto	l4683
  5404  0021DA  6C08               	negf	___awdiv@divisor,c
  5405  0021DC  1E09               	comf	___awdiv@divisor+1,f,c
  5406  0021DE  B0D8               	btfsc	status,0,c
  5407  0021E0  2A09               	incf	___awdiv@divisor+1,f,c
  5408  0021E2  0E01               	movlw	1
  5409  0021E4  6E0B               	movwf	___awdiv@sign,c
  5410  0021E6                     l4683:
  5411  0021E6  AE07               	btfss	___awdiv@dividend+1,7,c
  5412  0021E8  D006               	goto	l4689
  5413  0021EA  6C06               	negf	___awdiv@dividend,c
  5414  0021EC  1E07               	comf	___awdiv@dividend+1,f,c
  5415  0021EE  B0D8               	btfsc	status,0,c
  5416  0021F0  2A07               	incf	___awdiv@dividend+1,f,c
  5417  0021F2  0E01               	movlw	1
  5418  0021F4  1A0B               	xorwf	___awdiv@sign,f,c
  5419  0021F6                     l4689:
  5420  0021F6  0E00               	movlw	0
  5421  0021F8  6E0D               	movwf	___awdiv@quotient+1,c
  5422  0021FA  0E00               	movlw	0
  5423  0021FC  6E0C               	movwf	___awdiv@quotient,c
  5424  0021FE  5008               	movf	___awdiv@divisor,w,c
  5425  002200  1009               	iorwf	___awdiv@divisor+1,w,c
  5426  002202  B4D8               	btfsc	status,2,c
  5427  002204  D01C               	goto	l4711
  5428  002206  0E01               	movlw	1
  5429  002208  6E0A               	movwf	___awdiv@counter,c
  5430  00220A  D004               	goto	l4697
  5431  00220C                     l4695:
  5432  00220C  90D8               	bcf	status,0,c
  5433  00220E  3608               	rlcf	___awdiv@divisor,f,c
  5434  002210  3609               	rlcf	___awdiv@divisor+1,f,c
  5435  002212  2A0A               	incf	___awdiv@counter,f,c
  5436  002214                     l4697:
  5437  002214  AE09               	btfss	___awdiv@divisor+1,7,c
  5438  002216  D7FA               	goto	l4695
  5439  002218                     u3080:
  5440  002218  90D8               	bcf	status,0,c
  5441  00221A  360C               	rlcf	___awdiv@quotient,f,c
  5442  00221C  360D               	rlcf	___awdiv@quotient+1,f,c
  5443  00221E  5008               	movf	___awdiv@divisor,w,c
  5444  002220  5C06               	subwf	___awdiv@dividend,w,c
  5445  002222  5009               	movf	___awdiv@divisor+1,w,c
  5446  002224  5807               	subwfb	___awdiv@dividend+1,w,c
  5447  002226  A0D8               	btfss	status,0,c
  5448  002228  D005               	goto	l4707
  5449  00222A  5008               	movf	___awdiv@divisor,w,c
  5450  00222C  5E06               	subwf	___awdiv@dividend,f,c
  5451  00222E  5009               	movf	___awdiv@divisor+1,w,c
  5452  002230  5A07               	subwfb	___awdiv@dividend+1,f,c
  5453  002232  800C               	bsf	___awdiv@quotient,0,c
  5454  002234                     l4707:
  5455  002234  90D8               	bcf	status,0,c
  5456  002236  3209               	rrcf	___awdiv@divisor+1,f,c
  5457  002238  3208               	rrcf	___awdiv@divisor,f,c
  5458  00223A  2E0A               	decfsz	___awdiv@counter,f,c
  5459  00223C  D7ED               	goto	u3080
  5460  00223E                     l4711:
  5461  00223E  500B               	movf	___awdiv@sign,w,c
  5462  002240  B4D8               	btfsc	status,2,c
  5463  002242  D004               	goto	l4715
  5464  002244  6C0C               	negf	___awdiv@quotient,c
  5465  002246  1E0D               	comf	___awdiv@quotient+1,f,c
  5466  002248  B0D8               	btfsc	status,0,c
  5467  00224A  2A0D               	incf	___awdiv@quotient+1,f,c
  5468  00224C                     l4715:
  5469  00224C  C00C  F006         	movff	___awdiv@quotient,?___awdiv
  5470  002250  C00D  F007         	movff	___awdiv@quotient+1,?___awdiv+1
  5471  002254  0012               	return		;funcret
  5472  002256                     __end_of___awdiv:
  5473                           	opt callstack 0
  5474                           
  5475 ;; *************** function _CAN_MoveBuffIntoFrame *****************
  5476 ;; Defined at:
  5477 ;;		line 233 in file "CAN.c"
  5478 ;; Parameters:    Size  Location     Type
  5479 ;;  Ram             2    5[COMRAM] PTR unsigned char 
  5480 ;;		 -> TRM_DataTransmition@canMessage(17), RXB0D0(1), 
  5481 ;;  Buf             2    7[COMRAM] PTR unsigned char 
  5482 ;;		 -> TRM_DataTransmition@canMessage(17), RXB0D0(1), 
  5483 ;; Auto vars:     Size  Location     Type
  5484 ;;  i               1    9[COMRAM] unsigned char 
  5485 ;; Return value:  Size  Location     Type
  5486 ;;                  1    wreg      void 
  5487 ;; Registers used:
  5488 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5489 ;; Tracked objects:
  5490 ;;		On entry : 0/0
  5491 ;;		On exit  : 0/0
  5492 ;;		Unchanged: 0/0
  5493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5494 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5495 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5497 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5498 ;;Total ram usage:        5 bytes
  5499 ;; Hardware stack levels used:    1
  5500 ;; Hardware stack levels required when called:    3
  5501 ;; This function calls:
  5502 ;;		Nothing
  5503 ;; This function is called by:
  5504 ;;		_CAN_SendFrame
  5505 ;;		_CAN_TakeFrame
  5506 ;; This function uses a non-reentrant model
  5507 ;;
  5508                           
  5509                           	psect	text34
  5510  002A10                     __ptext34:
  5511                           	opt callstack 0
  5512  002A10                     _CAN_MoveBuffIntoFrame:
  5513                           	opt callstack 24
  5514                           
  5515                           ;CAN.c: 235: BYTE i;;CAN.c: 236: for(i=0; i<8; ++i)
  5516                           
  5517                           ;incstack = 0
  5518  002A10  0E00               	movlw	0
  5519  002A12  6E0A               	movwf	CAN_MoveBuffIntoFrame@i,c
  5520  002A14                     l4153:
  5521                           
  5522                           ;CAN.c: 237: {;CAN.c: 238: Ram[i]=(*(Buf+i));
  5523  002A14  500A               	movf	CAN_MoveBuffIntoFrame@i,w,c
  5524  002A16  2408               	addwf	CAN_MoveBuffIntoFrame@Buf,w,c
  5525  002A18  6ED9               	movwf	fsr2l,c
  5526  002A1A  0E00               	movlw	0
  5527  002A1C  2009               	addwfc	CAN_MoveBuffIntoFrame@Buf+1,w,c
  5528  002A1E  6EDA               	movwf	fsr2h,c
  5529  002A20  500A               	movf	CAN_MoveBuffIntoFrame@i,w,c
  5530  002A22  2406               	addwf	CAN_MoveBuffIntoFrame@Ram,w,c
  5531  002A24  6EE1               	movwf	fsr1l,c
  5532  002A26  0E00               	movlw	0
  5533  002A28  2007               	addwfc	CAN_MoveBuffIntoFrame@Ram+1,w,c
  5534  002A2A  6EE2               	movwf	fsr1h,c
  5535  002A2C  CFDF FFE7          	movff	indf2,indf1
  5536  002A30  2A0A               	incf	CAN_MoveBuffIntoFrame@i,f,c
  5537  002A32  0E07               	movlw	7
  5538  002A34  640A               	cpfsgt	CAN_MoveBuffIntoFrame@i,c
  5539  002A36  D7EE               	goto	l4153
  5540  002A38  0012               	return	
  5541  002A3A                     __end_of_CAN_MoveBuffIntoFrame:
  5542                           	opt callstack 0
  5543                           
  5544 ;; *************** function _TMR1_Update_flag_Set *****************
  5545 ;; Defined at:
  5546 ;;		line 32 in file "TMR1.c"
  5547 ;; Parameters:    Size  Location     Type
  5548 ;;  a               2    5[COMRAM] unsigned int 
  5549 ;; Auto vars:     Size  Location     Type
  5550 ;;		None
  5551 ;; Return value:  Size  Location     Type
  5552 ;;                  1    wreg      void 
  5553 ;; Registers used:
  5554 ;;		None
  5555 ;; Tracked objects:
  5556 ;;		On entry : 0/0
  5557 ;;		On exit  : 0/0
  5558 ;;		Unchanged: 0/0
  5559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5560 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5563 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5564 ;;Total ram usage:        2 bytes
  5565 ;; Hardware stack levels used:    1
  5566 ;; Hardware stack levels required when called:    3
  5567 ;; This function calls:
  5568 ;;		Nothing
  5569 ;; This function is called by:
  5570 ;;		_main
  5571 ;; This function uses a non-reentrant model
  5572 ;;
  5573                           
  5574                           	psect	text35
  5575  002B76                     __ptext35:
  5576                           	opt callstack 0
  5577  002B76                     _TMR1_Update_flag_Set:
  5578                           	opt callstack 27
  5579                           
  5580                           ;TMR1.c: 34: TMR1_Update_flag = a;
  5581                           
  5582                           ;incstack = 0
  5583  002B76  C006  F0D6         	movff	TMR1_Update_flag_Set@a,_TMR1_Update_flag
  5584  002B7A  C007  F0D7         	movff	TMR1_Update_flag_Set@a+1,_TMR1_Update_flag+1
  5585  002B7E  0012               	return		;funcret
  5586  002B80                     __end_of_TMR1_Update_flag_Set:
  5587                           	opt callstack 0
  5588                           
  5589 ;; *************** function _TMR1_Update_flag_Get *****************
  5590 ;; Defined at:
  5591 ;;		line 47 in file "TMR1.c"
  5592 ;; Parameters:    Size  Location     Type
  5593 ;;		None
  5594 ;; Auto vars:     Size  Location     Type
  5595 ;;		None
  5596 ;; Return value:  Size  Location     Type
  5597 ;;                  2    5[COMRAM] unsigned int 
  5598 ;; Registers used:
  5599 ;;		None
  5600 ;; Tracked objects:
  5601 ;;		On entry : 0/0
  5602 ;;		On exit  : 0/0
  5603 ;;		Unchanged: 0/0
  5604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5605 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5608 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5609 ;;Total ram usage:        2 bytes
  5610 ;; Hardware stack levels used:    1
  5611 ;; Hardware stack levels required when called:    3
  5612 ;; This function calls:
  5613 ;;		Nothing
  5614 ;; This function is called by:
  5615 ;;		_main
  5616 ;; This function uses a non-reentrant model
  5617 ;;
  5618                           
  5619                           	psect	text36
  5620  002B80                     __ptext36:
  5621                           	opt callstack 0
  5622  002B80                     _TMR1_Update_flag_Get:
  5623                           	opt callstack 27
  5624                           
  5625                           ;TMR1.c: 49: return TMR1_Update_flag;
  5626                           
  5627                           ;incstack = 0
  5628  002B80  C0D6  F006         	movff	_TMR1_Update_flag,?_TMR1_Update_flag_Get
  5629  002B84  C0D7  F007         	movff	_TMR1_Update_flag+1,?_TMR1_Update_flag_Get+1
  5630  002B88  0012               	return		;funcret
  5631  002B8A                     __end_of_TMR1_Update_flag_Get:
  5632                           	opt callstack 0
  5633                           
  5634 ;; *************** function _RADAR_Use *****************
  5635 ;; Defined at:
  5636 ;;		line 16 in file "RADARMETADATA.c"
  5637 ;; Parameters:    Size  Location     Type
  5638 ;;		None
  5639 ;; Auto vars:     Size  Location     Type
  5640 ;;		None
  5641 ;; Return value:  Size  Location     Type
  5642 ;;                  1    wreg      void 
  5643 ;; Registers used:
  5644 ;;		None
  5645 ;; Tracked objects:
  5646 ;;		On entry : 0/0
  5647 ;;		On exit  : 0/0
  5648 ;;		Unchanged: 0/0
  5649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5653 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5654 ;;Total ram usage:        0 bytes
  5655 ;; Hardware stack levels used:    1
  5656 ;; Hardware stack levels required when called:    3
  5657 ;; This function calls:
  5658 ;;		Nothing
  5659 ;; This function is called by:
  5660 ;;		_main
  5661 ;; This function uses a non-reentrant model
  5662 ;;
  5663                           
  5664                           	psect	text37
  5665  002B56                     __ptext37:
  5666                           	opt callstack 0
  5667  002B56                     _RADAR_Use:
  5668                           	opt callstack 27
  5669                           
  5670                           ;RADARMETADATA.c: 18: if(Flagi.pomiarTla == 1)
  5671                           
  5672                           ;incstack = 0
  5673  002B56  0100               	movlb	0	; () banked
  5674  002B58  A1C6               	btfss	_Flagi& (0+255),0,b
  5675  002B5A  0012               	return	
  5676                           
  5677                           ; BSR set to: 0
  5678                           ;RADARMETADATA.c: 19: {;RADARMETADATA.c: 20: Flagi.detekcja = 0;
  5679  002B5C  93C6               	bcf	_Flagi& (0+255),1,b
  5680                           
  5681                           ;RADARMETADATA.c: 21: Flagi.pomiarTla = 0;
  5682  002B5E  91C6               	bcf	_Flagi& (0+255),0,b
  5683                           
  5684                           ; BSR set to: 0
  5685  002B60  0012               	return		;funcret
  5686  002B62                     __end_of_RADAR_Use:
  5687                           	opt callstack 0
  5688                           
  5689 ;; *************** function _LED_Update *****************
  5690 ;; Defined at:
  5691 ;;		line 148 in file "LED.c"
  5692 ;; Parameters:    Size  Location     Type
  5693 ;;		None
  5694 ;; Auto vars:     Size  Location     Type
  5695 ;;		None
  5696 ;; Return value:  Size  Location     Type
  5697 ;;                  1    wreg      unsigned char 
  5698 ;; Registers used:
  5699 ;;		wreg, status,2, status,0, cstack
  5700 ;; Tracked objects:
  5701 ;;		On entry : 0/0
  5702 ;;		On exit  : 0/0
  5703 ;;		Unchanged: 0/0
  5704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5708 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5709 ;;Total ram usage:        0 bytes
  5710 ;; Hardware stack levels used:    1
  5711 ;; Hardware stack levels required when called:    5
  5712 ;; This function calls:
  5713 ;;		_LED_Control
  5714 ;;		_LED_Left
  5715 ;;		_LED_Light_Pos
  5716 ;;		_LED_Right
  5717 ;; This function is called by:
  5718 ;;		_main
  5719 ;; This function uses a non-reentrant model
  5720 ;;
  5721                           
  5722                           	psect	text38
  5723  001FFC                     __ptext38:
  5724                           	opt callstack 0
  5725  001FFC                     _LED_Update:
  5726                           	opt callstack 25
  5727                           
  5728                           ;LED.c: 150: static LED_RGA_type Red = RED;;LED.c: 151: static LED_RGA_type Green = GREE
      +                          N;;LED.c: 152: static UINT pos1 = 0b0000000001;;LED.c: 153: static UINT pos2 = 0b0000000
      +                          001;;LED.c: 154: static BOOL laststat = 20;;LED.c: 155: static UINT Fulfillment_Lvl_for_
      +                          rest = 100;;LED.c: 158: if(LOCK == 0)
  5729                           
  5730                           ; BSR set to: 0
  5731                           ;incstack = 0
  5732  001FFC  5039               	movf	_LOCK,w,c
  5733  001FFE  A4D8               	btfss	status,2,c
  5734  002000  D025               	goto	l4927
  5735                           
  5736                           ;LED.c: 159: {;LED.c: 160: if(laststat>0)
  5737  002002  5048               	movf	LED_Update@laststat,w,c
  5738  002004  B4D8               	btfsc	status,2,c
  5739  002006  D014               	goto	l4923
  5740                           
  5741                           ;LED.c: 161: {;LED.c: 162: LED_Control(RED,0b0000000000);
  5742  002008  0E00               	movlw	0
  5743  00200A  6E07               	movwf	LED_Control@diode+1,c
  5744  00200C  0E00               	movlw	0
  5745  00200E  6E06               	movwf	LED_Control@diode,c
  5746  002010  0E00               	movlw	0
  5747  002012  EC0B  F00C         	call	_LED_Control
  5748                           
  5749                           ;LED.c: 163: LED_Light_Pos(Green,pos2,Fulfillment_Lvl);
  5750  002016  C040  F00D         	movff	LED_Update@pos2,LED_Light_Pos@pos
  5751  00201A  C041  F00E         	movff	LED_Update@pos2+1,LED_Light_Pos@pos+1
  5752  00201E  C044  F00F         	movff	_Fulfillment_Lvl,LED_Light_Pos@fulfillment
  5753  002022  C045  F010         	movff	_Fulfillment_Lvl+1,LED_Light_Pos@fulfillment+1
  5754  002026  5049               	movf	LED_Update@Green,w,c
  5755  002028  ECA6  F00F         	call	_LED_Light_Pos
  5756                           
  5757                           ;LED.c: 164: laststat--;
  5758  00202C  0648               	decf	LED_Update@laststat,f,c
  5759                           
  5760                           ;LED.c: 165: }
  5761  00202E  D022               	goto	l4931
  5762  002030                     l4923:
  5763                           
  5764                           ;LED.c: 166: else;LED.c: 167: {;LED.c: 168: laststat = 0;
  5765  002030  0E00               	movlw	0
  5766  002032  6E48               	movwf	LED_Update@laststat,c
  5767                           
  5768                           ;LED.c: 169: LED_Light_Pos(Green,pos2,Fulfillment_Lvl_for_rest);
  5769  002034  C040  F00D         	movff	LED_Update@pos2,LED_Light_Pos@pos
  5770  002038  C041  F00E         	movff	LED_Update@pos2+1,LED_Light_Pos@pos+1
  5771  00203C  0E00               	movlw	0
  5772  00203E  6E10               	movwf	LED_Light_Pos@fulfillment+1,c
  5773  002040  0E64               	movlw	100
  5774  002042  6E0F               	movwf	LED_Light_Pos@fulfillment,c
  5775  002044  5049               	movf	LED_Update@Green,w,c
  5776  002046  ECA6  F00F         	call	_LED_Light_Pos
  5777  00204A  D014               	goto	l4931
  5778  00204C                     l4927:
  5779                           
  5780                           ;LED.c: 173: else;LED.c: 174: {;LED.c: 175: LED_Control(Green,0b0000000000);
  5781  00204C  0E00               	movlw	0
  5782  00204E  6E07               	movwf	LED_Control@diode+1,c
  5783  002050  0E00               	movlw	0
  5784  002052  6E06               	movwf	LED_Control@diode,c
  5785  002054  5049               	movf	LED_Update@Green,w,c
  5786  002056  EC0B  F00C         	call	_LED_Control
  5787                           
  5788                           ;LED.c: 176: LED_Light_Pos(RED,pos1,Fulfillment_Lvl);
  5789  00205A  C042  F00D         	movff	LED_Update@pos1,LED_Light_Pos@pos
  5790  00205E  C043  F00E         	movff	LED_Update@pos1+1,LED_Light_Pos@pos+1
  5791  002062  C044  F00F         	movff	_Fulfillment_Lvl,LED_Light_Pos@fulfillment
  5792  002066  C045  F010         	movff	_Fulfillment_Lvl+1,LED_Light_Pos@fulfillment+1
  5793  00206A  0E00               	movlw	0
  5794  00206C  ECA6  F00F         	call	_LED_Light_Pos
  5795                           
  5796                           ;LED.c: 177: laststat=100;
  5797  002070  0E64               	movlw	100
  5798  002072  6E48               	movwf	LED_Update@laststat,c
  5799  002074                     l4931:
  5800                           
  5801                           ;LED.c: 178: };LED.c: 179: pos1 = LED_Right(pos1);
  5802  002074  C042  F006         	movff	LED_Update@pos1,LED_Right@a
  5803  002078  C043  F007         	movff	LED_Update@pos1+1,LED_Right@a+1
  5804  00207C  ECC5  F013         	call	_LED_Right	;wreg free
  5805  002080  C006  F042         	movff	?_LED_Right,LED_Update@pos1
  5806  002084  C007  F043         	movff	?_LED_Right+1,LED_Update@pos1+1
  5807                           
  5808                           ;LED.c: 180: pos2 = LED_Left(pos2);
  5809  002088  C040  F006         	movff	LED_Update@pos2,LED_Left@a
  5810  00208C  C041  F007         	movff	LED_Update@pos2+1,LED_Left@a+1
  5811  002090  EC0E  F014         	call	_LED_Left	;wreg free
  5812  002094  C006  F040         	movff	?_LED_Left,LED_Update@pos2
  5813  002098  C007  F041         	movff	?_LED_Left+1,LED_Update@pos2+1
  5814  00209C  0012               	return		;funcret
  5815  00209E                     __end_of_LED_Update:
  5816                           	opt callstack 0
  5817                           
  5818 ;; *************** function _LED_Light_Pos *****************
  5819 ;; Defined at:
  5820 ;;		line 252 in file "LED.c"
  5821 ;; Parameters:    Size  Location     Type
  5822 ;;  color           1    wreg     enum E10511
  5823 ;;  pos             2   12[COMRAM] unsigned int 
  5824 ;;  fulfillment     2   14[COMRAM] unsigned int 
  5825 ;; Auto vars:     Size  Location     Type
  5826 ;;  color           1   16[COMRAM] enum E10511
  5827 ;;  flage           2   21[COMRAM] unsigned int 
  5828 ;;  pos2            2   19[COMRAM] unsigned int 
  5829 ;;  LED_array       2   17[COMRAM] unsigned int 
  5830 ;; Return value:  Size  Location     Type
  5831 ;;                  2   12[COMRAM] unsigned int 
  5832 ;; Registers used:
  5833 ;;		wreg, status,2, status,0, cstack
  5834 ;; Tracked objects:
  5835 ;;		On entry : 0/0
  5836 ;;		On exit  : 0/0
  5837 ;;		Unchanged: 0/0
  5838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5839 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5840 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5842 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5843 ;;Total ram usage:       11 bytes
  5844 ;; Hardware stack levels used:    1
  5845 ;; Hardware stack levels required when called:    4
  5846 ;; This function calls:
  5847 ;;		_LED_Control
  5848 ;;		_LED_Left
  5849 ;;		_LED_Right
  5850 ;;		___lwdiv
  5851 ;; This function is called by:
  5852 ;;		_LED_Update
  5853 ;; This function uses a non-reentrant model
  5854 ;;
  5855                           
  5856                           	psect	text39
  5857  001F4C                     __ptext39:
  5858                           	opt callstack 0
  5859  001F4C                     _LED_Light_Pos:
  5860                           	opt callstack 25
  5861                           
  5862                           ;incstack = 0
  5863                           ;LED_Light_Pos@color stored from wreg
  5864  001F4C  6E11               	movwf	LED_Light_Pos@color,c
  5865                           
  5866                           ;LED.c: 254: UINT pos2 =pos;
  5867  001F4E  C00D  F014         	movff	LED_Light_Pos@pos,LED_Light_Pos@pos2
  5868  001F52  C00E  F015         	movff	LED_Light_Pos@pos+1,LED_Light_Pos@pos2+1
  5869                           
  5870                           ;LED.c: 255: UINT LED_array = 0b0000000000;
  5871  001F56  0E00               	movlw	0
  5872  001F58  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  5873  001F5A  0E00               	movlw	0
  5874  001F5C  6E12               	movwf	LED_Light_Pos@LED_array,c
  5875                           
  5876                           ;LED.c: 256: UINT flage = fulfillment/10;
  5877  001F5E  C00F  F006         	movff	LED_Light_Pos@fulfillment,___lwdiv@dividend
  5878  001F62  C010  F007         	movff	LED_Light_Pos@fulfillment+1,___lwdiv@dividend+1
  5879  001F66  0E00               	movlw	0
  5880  001F68  6E09               	movwf	___lwdiv@divisor+1,c
  5881  001F6A  0E0A               	movlw	10
  5882  001F6C  6E08               	movwf	___lwdiv@divisor,c
  5883  001F6E  EC4E  F013         	call	___lwdiv	;wreg free
  5884  001F72  C006  F016         	movff	?___lwdiv,LED_Light_Pos@flage
  5885  001F76  C007  F017         	movff	?___lwdiv+1,LED_Light_Pos@flage+1
  5886                           
  5887                           ;LED.c: 257: if(color == RED)
  5888  001F7A  5011               	movf	LED_Light_Pos@color,w,c
  5889  001F7C  B4D8               	btfsc	status,2,c
  5890  001F7E  D017               	goto	l4829
  5891  001F80  D031               	goto	l4837
  5892  001F82                     l4823:
  5893                           
  5894                           ;LED.c: 260: {;LED.c: 261: LED_array = pos2|LED_array;
  5895  001F82  5012               	movf	LED_Light_Pos@LED_array,w,c
  5896  001F84  1014               	iorwf	LED_Light_Pos@pos2,w,c
  5897  001F86  6E12               	movwf	LED_Light_Pos@LED_array,c
  5898  001F88  5013               	movf	LED_Light_Pos@LED_array+1,w,c
  5899  001F8A  1015               	iorwf	LED_Light_Pos@pos2+1,w,c
  5900  001F8C  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  5901                           
  5902                           ;LED.c: 262: pos2 = LED_Left(pos2);
  5903  001F8E  C014  F006         	movff	LED_Light_Pos@pos2,LED_Left@a
  5904  001F92  C015  F007         	movff	LED_Light_Pos@pos2+1,LED_Left@a+1
  5905  001F96  EC0E  F014         	call	_LED_Left	;wreg free
  5906  001F9A  C006  F014         	movff	?_LED_Left,LED_Light_Pos@pos2
  5907  001F9E  C007  F015         	movff	?_LED_Left+1,LED_Light_Pos@pos2+1
  5908                           
  5909                           ;LED.c: 263: flage = flage - 1;
  5910  001FA2  0EFF               	movlw	255
  5911  001FA4  2416               	addwf	LED_Light_Pos@flage,w,c
  5912  001FA6  6E16               	movwf	LED_Light_Pos@flage,c
  5913  001FA8  0EFF               	movlw	255
  5914  001FAA  2017               	addwfc	LED_Light_Pos@flage+1,w,c
  5915  001FAC  6E17               	movwf	LED_Light_Pos@flage+1,c
  5916  001FAE                     l4829:
  5917  001FAE  5016               	movf	LED_Light_Pos@flage,w,c
  5918  001FB0  1017               	iorwf	LED_Light_Pos@flage+1,w,c
  5919  001FB2  B4D8               	btfsc	status,2,c
  5920  001FB4  D01B               	goto	u3190
  5921  001FB6  D7E5               	goto	l4823
  5922  001FB8                     l4831:
  5923                           
  5924                           ;LED.c: 269: {;LED.c: 270: LED_array = pos2|LED_array;
  5925  001FB8  5012               	movf	LED_Light_Pos@LED_array,w,c
  5926  001FBA  1014               	iorwf	LED_Light_Pos@pos2,w,c
  5927  001FBC  6E12               	movwf	LED_Light_Pos@LED_array,c
  5928  001FBE  5013               	movf	LED_Light_Pos@LED_array+1,w,c
  5929  001FC0  1015               	iorwf	LED_Light_Pos@pos2+1,w,c
  5930  001FC2  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  5931                           
  5932                           ;LED.c: 271: pos2 = LED_Right(pos2);
  5933  001FC4  C014  F006         	movff	LED_Light_Pos@pos2,LED_Right@a
  5934  001FC8  C015  F007         	movff	LED_Light_Pos@pos2+1,LED_Right@a+1
  5935  001FCC  ECC5  F013         	call	_LED_Right	;wreg free
  5936  001FD0  C006  F014         	movff	?_LED_Right,LED_Light_Pos@pos2
  5937  001FD4  C007  F015         	movff	?_LED_Right+1,LED_Light_Pos@pos2+1
  5938                           
  5939                           ;LED.c: 272: flage = flage - 1;
  5940  001FD8  0EFF               	movlw	255
  5941  001FDA  2416               	addwf	LED_Light_Pos@flage,w,c
  5942  001FDC  6E16               	movwf	LED_Light_Pos@flage,c
  5943  001FDE  0EFF               	movlw	255
  5944  001FE0  2017               	addwfc	LED_Light_Pos@flage+1,w,c
  5945  001FE2  6E17               	movwf	LED_Light_Pos@flage+1,c
  5946  001FE4                     l4837:
  5947  001FE4  5016               	movf	LED_Light_Pos@flage,w,c
  5948  001FE6  1017               	iorwf	LED_Light_Pos@flage+1,w,c
  5949  001FE8  A4D8               	btfss	status,2,c
  5950  001FEA  D7E6               	goto	l4831
  5951  001FEC                     u3190:
  5952                           
  5953                           ;LED.c: 273: };LED.c: 274: };LED.c: 275: LED_Control(color, LED_array);
  5954  001FEC  C012  F006         	movff	LED_Light_Pos@LED_array,LED_Control@diode
  5955  001FF0  C013  F007         	movff	LED_Light_Pos@LED_array+1,LED_Control@diode+1
  5956  001FF4  5011               	movf	LED_Light_Pos@color,w,c
  5957  001FF6  EC0B  F00C         	call	_LED_Control
  5958  001FFA  0012               	return		;funcret
  5959  001FFC                     __end_of_LED_Light_Pos:
  5960                           	opt callstack 0
  5961                           
  5962 ;; *************** function ___lwdiv *****************
  5963 ;; Defined at:
  5964 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
  5965 ;; Parameters:    Size  Location     Type
  5966 ;;  dividend        2    5[COMRAM] unsigned int 
  5967 ;;  divisor         2    7[COMRAM] unsigned int 
  5968 ;; Auto vars:     Size  Location     Type
  5969 ;;  quotient        2   10[COMRAM] unsigned int 
  5970 ;;  counter         1    9[COMRAM] unsigned char 
  5971 ;; Return value:  Size  Location     Type
  5972 ;;                  2    5[COMRAM] unsigned int 
  5973 ;; Registers used:
  5974 ;;		wreg, status,2, status,0
  5975 ;; Tracked objects:
  5976 ;;		On entry : 0/0
  5977 ;;		On exit  : 0/0
  5978 ;;		Unchanged: 0/0
  5979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5980 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5981 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5983 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5984 ;;Total ram usage:        7 bytes
  5985 ;; Hardware stack levels used:    1
  5986 ;; Hardware stack levels required when called:    3
  5987 ;; This function calls:
  5988 ;;		Nothing
  5989 ;; This function is called by:
  5990 ;;		_LED_Light_Pos
  5991 ;;		_FRAME_Plot
  5992 ;; This function uses a non-reentrant model
  5993 ;;
  5994                           
  5995                           	psect	text40
  5996  00269C                     __ptext40:
  5997                           	opt callstack 0
  5998  00269C                     ___lwdiv:
  5999                           	opt callstack 24
  6000                           
  6001                           ;incstack = 0
  6002  00269C  0E00               	movlw	0
  6003  00269E  6E0C               	movwf	___lwdiv@quotient+1,c
  6004  0026A0  0E00               	movlw	0
  6005  0026A2  6E0B               	movwf	___lwdiv@quotient,c
  6006  0026A4  5008               	movf	___lwdiv@divisor,w,c
  6007  0026A6  1009               	iorwf	___lwdiv@divisor+1,w,c
  6008  0026A8  B4D8               	btfsc	status,2,c
  6009  0026AA  D01C               	goto	l1469
  6010  0026AC  0E01               	movlw	1
  6011  0026AE  6E0A               	movwf	___lwdiv@counter,c
  6012  0026B0  D004               	goto	l4435
  6013  0026B2                     l4433:
  6014  0026B2  90D8               	bcf	status,0,c
  6015  0026B4  3608               	rlcf	___lwdiv@divisor,f,c
  6016  0026B6  3609               	rlcf	___lwdiv@divisor+1,f,c
  6017  0026B8  2A0A               	incf	___lwdiv@counter,f,c
  6018  0026BA                     l4435:
  6019  0026BA  AE09               	btfss	___lwdiv@divisor+1,7,c
  6020  0026BC  D7FA               	goto	l4433
  6021  0026BE                     u2730:
  6022  0026BE  90D8               	bcf	status,0,c
  6023  0026C0  360B               	rlcf	___lwdiv@quotient,f,c
  6024  0026C2  360C               	rlcf	___lwdiv@quotient+1,f,c
  6025  0026C4  5008               	movf	___lwdiv@divisor,w,c
  6026  0026C6  5C06               	subwf	___lwdiv@dividend,w,c
  6027  0026C8  5009               	movf	___lwdiv@divisor+1,w,c
  6028  0026CA  5807               	subwfb	___lwdiv@dividend+1,w,c
  6029  0026CC  A0D8               	btfss	status,0,c
  6030  0026CE  D005               	goto	l4445
  6031  0026D0  5008               	movf	___lwdiv@divisor,w,c
  6032  0026D2  5E06               	subwf	___lwdiv@dividend,f,c
  6033  0026D4  5009               	movf	___lwdiv@divisor+1,w,c
  6034  0026D6  5A07               	subwfb	___lwdiv@dividend+1,f,c
  6035  0026D8  800B               	bsf	___lwdiv@quotient,0,c
  6036  0026DA                     l4445:
  6037  0026DA  90D8               	bcf	status,0,c
  6038  0026DC  3209               	rrcf	___lwdiv@divisor+1,f,c
  6039  0026DE  3208               	rrcf	___lwdiv@divisor,f,c
  6040  0026E0  2E0A               	decfsz	___lwdiv@counter,f,c
  6041  0026E2  D7ED               	goto	u2730
  6042  0026E4                     l1469:
  6043  0026E4  C00B  F006         	movff	___lwdiv@quotient,?___lwdiv
  6044  0026E8  C00C  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  6045  0026EC  0012               	return		;funcret
  6046  0026EE                     __end_of___lwdiv:
  6047                           	opt callstack 0
  6048                           
  6049 ;; *************** function _LED_Right *****************
  6050 ;; Defined at:
  6051 ;;		line 196 in file "LED.c"
  6052 ;; Parameters:    Size  Location     Type
  6053 ;;  a               2    5[COMRAM] unsigned int 
  6054 ;; Auto vars:     Size  Location     Type
  6055 ;;  b               2    9[COMRAM] unsigned int 
  6056 ;; Return value:  Size  Location     Type
  6057 ;;                  2    5[COMRAM] unsigned int 
  6058 ;; Registers used:
  6059 ;;		wreg, status,2, status,0
  6060 ;; Tracked objects:
  6061 ;;		On entry : 0/0
  6062 ;;		On exit  : 0/0
  6063 ;;		Unchanged: 0/0
  6064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6065 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6066 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6067 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6068 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6069 ;;Total ram usage:        6 bytes
  6070 ;; Hardware stack levels used:    1
  6071 ;; Hardware stack levels required when called:    3
  6072 ;; This function calls:
  6073 ;;		Nothing
  6074 ;; This function is called by:
  6075 ;;		_LED_Update
  6076 ;;		_LED_Light_Pos
  6077 ;; This function uses a non-reentrant model
  6078 ;;
  6079                           
  6080                           	psect	text41
  6081  00278A                     __ptext41:
  6082                           	opt callstack 0
  6083  00278A                     _LED_Right:
  6084                           	opt callstack 26
  6085                           
  6086                           ;LED.c: 198: if ((a & 0b0000000001) == 0b0000000001)
  6087                           
  6088                           ;incstack = 0
  6089  00278A  A006               	btfss	LED_Right@a,0,c
  6090  00278C  D018               	goto	l3425
  6091                           
  6092                           ;LED.c: 199: {;LED.c: 200: UINT b = a & 0b1111111110;
  6093  00278E  0EFE               	movlw	254
  6094  002790  1406               	andwf	LED_Right@a,w,c
  6095  002792  6E0A               	movwf	LED_Right@b,c
  6096  002794  0E03               	movlw	3
  6097  002796  1407               	andwf	LED_Right@a+1,w,c
  6098  002798  6E0B               	movwf	LED_Right@b+1,c
  6099                           
  6100                           ;LED.c: 201: b = b >> 1;
  6101  00279A  90D8               	bcf	status,0,c
  6102  00279C  300B               	rrcf	LED_Right@b+1,w,c
  6103  00279E  6E08               	movwf	??_LED_Right& (0+255),c
  6104  0027A0  300A               	rrcf	LED_Right@b,w,c
  6105  0027A2  6E0A               	movwf	LED_Right@b,c
  6106  0027A4  C008  F00B         	movff	??_LED_Right,LED_Right@b+1
  6107                           
  6108                           ;LED.c: 202: b = b | 0b1000000000;
  6109  0027A8  0E00               	movlw	0
  6110  0027AA  100A               	iorwf	LED_Right@b,w,c
  6111  0027AC  6E0A               	movwf	LED_Right@b,c
  6112  0027AE  0E02               	movlw	2
  6113  0027B0  100B               	iorwf	LED_Right@b+1,w,c
  6114  0027B2  6E0B               	movwf	LED_Right@b+1,c
  6115                           
  6116                           ;LED.c: 203: return b;
  6117  0027B4  C00A  F006         	movff	LED_Right@b,?_LED_Right
  6118  0027B8  C00B  F007         	movff	LED_Right@b+1,?_LED_Right+1
  6119  0027BC  0012               	return	
  6120  0027BE                     l3425:
  6121                           
  6122                           ;LED.c: 205: else;LED.c: 206: {;LED.c: 207: a =a >> 1;
  6123  0027BE  90D8               	bcf	status,0,c
  6124  0027C0  3007               	rrcf	LED_Right@a+1,w,c
  6125  0027C2  6E08               	movwf	??_LED_Right& (0+255),c
  6126  0027C4  3006               	rrcf	LED_Right@a,w,c
  6127  0027C6  6E06               	movwf	LED_Right@a,c
  6128  0027C8  C008  F007         	movff	??_LED_Right,LED_Right@a+1
  6129                           
  6130                           ;LED.c: 208: return a;
  6131  0027CC  C006  F006         	movff	LED_Right@a,?_LED_Right
  6132  0027D0  C007  F007         	movff	LED_Right@a+1,?_LED_Right+1
  6133  0027D4  0012               	return		;funcret
  6134  0027D6                     __end_of_LED_Right:
  6135                           	opt callstack 0
  6136                           
  6137 ;; *************** function _LED_Left *****************
  6138 ;; Defined at:
  6139 ;;		line 223 in file "LED.c"
  6140 ;; Parameters:    Size  Location     Type
  6141 ;;  a               2    5[COMRAM] unsigned int 
  6142 ;; Auto vars:     Size  Location     Type
  6143 ;;  b               2    7[COMRAM] unsigned int 
  6144 ;; Return value:  Size  Location     Type
  6145 ;;                  2    5[COMRAM] unsigned int 
  6146 ;; Registers used:
  6147 ;;		wreg, status,2, status,0
  6148 ;; Tracked objects:
  6149 ;;		On entry : 0/0
  6150 ;;		On exit  : 0/0
  6151 ;;		Unchanged: 0/0
  6152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6153 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6154 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6156 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6157 ;;Total ram usage:        4 bytes
  6158 ;; Hardware stack levels used:    1
  6159 ;; Hardware stack levels required when called:    3
  6160 ;; This function calls:
  6161 ;;		Nothing
  6162 ;; This function is called by:
  6163 ;;		_LED_Update
  6164 ;;		_LED_Light_Pos
  6165 ;; This function uses a non-reentrant model
  6166 ;;
  6167                           
  6168                           	psect	text42
  6169  00281C                     __ptext42:
  6170                           	opt callstack 0
  6171  00281C                     _LED_Left:
  6172                           	opt callstack 25
  6173                           
  6174                           ;LED.c: 225: if ((a & 0b1000000000) == 0b1000000000)
  6175                           
  6176                           ;incstack = 0
  6177  00281C  A207               	btfss	LED_Left@a+1,1,c
  6178  00281E  D015               	goto	l3441
  6179                           
  6180                           ;LED.c: 226: {;LED.c: 227: UINT b = a & 0b0111111111;
  6181  002820  0EFF               	movlw	255
  6182  002822  1406               	andwf	LED_Left@a,w,c
  6183  002824  6E08               	movwf	LED_Left@b,c
  6184  002826  0E01               	movlw	1
  6185  002828  1407               	andwf	LED_Left@a+1,w,c
  6186  00282A  6E09               	movwf	LED_Left@b+1,c
  6187                           
  6188                           ;LED.c: 228: b = b << 1;
  6189  00282C  90D8               	bcf	status,0,c
  6190  00282E  3408               	rlcf	LED_Left@b,w,c
  6191  002830  6E08               	movwf	LED_Left@b,c
  6192  002832  3409               	rlcf	LED_Left@b+1,w,c
  6193  002834  6E09               	movwf	LED_Left@b+1,c
  6194                           
  6195                           ;LED.c: 229: b = b | 0b0000000001;
  6196  002836  0E01               	movlw	1
  6197  002838  1008               	iorwf	LED_Left@b,w,c
  6198  00283A  6E08               	movwf	LED_Left@b,c
  6199  00283C  5009               	movf	LED_Left@b+1,w,c
  6200  00283E  6E09               	movwf	LED_Left@b+1,c
  6201                           
  6202                           ;LED.c: 230: return b;
  6203  002840  C008  F006         	movff	LED_Left@b,?_LED_Left
  6204  002844  C009  F007         	movff	LED_Left@b+1,?_LED_Left+1
  6205  002848  0012               	return	
  6206  00284A                     l3441:
  6207                           
  6208                           ;LED.c: 232: else;LED.c: 233: {;LED.c: 234: a = a << 1;
  6209  00284A  90D8               	bcf	status,0,c
  6210  00284C  3406               	rlcf	LED_Left@a,w,c
  6211  00284E  6E06               	movwf	LED_Left@a,c
  6212  002850  3407               	rlcf	LED_Left@a+1,w,c
  6213  002852  6E07               	movwf	LED_Left@a+1,c
  6214                           
  6215                           ;LED.c: 235: return a;
  6216  002854  C006  F006         	movff	LED_Left@a,?_LED_Left
  6217  002858  C007  F007         	movff	LED_Left@a+1,?_LED_Left+1
  6218  00285C  0012               	return		;funcret
  6219  00285E                     __end_of_LED_Left:
  6220                           	opt callstack 0
  6221                           
  6222 ;; *************** function _INI_All *****************
  6223 ;; Defined at:
  6224 ;;		line 54 in file "INI.c"
  6225 ;; Parameters:    Size  Location     Type
  6226 ;;		None
  6227 ;; Auto vars:     Size  Location     Type
  6228 ;;		None
  6229 ;; Return value:  Size  Location     Type
  6230 ;;                  1    wreg      void 
  6231 ;; Registers used:
  6232 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6233 ;; Tracked objects:
  6234 ;;		On entry : 0/0
  6235 ;;		On exit  : 0/0
  6236 ;;		Unchanged: 0/0
  6237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6242 ;;Total ram usage:        0 bytes
  6243 ;; Hardware stack levels used:    1
  6244 ;; Hardware stack levels required when called:    6
  6245 ;; This function calls:
  6246 ;;		_CAN_Setup
  6247 ;;		_INI_GlobalInterrupt
  6248 ;;		_INI_LED_Start
  6249 ;;		_INI_OUTPUT
  6250 ;;		_INI_Timer
  6251 ;;		_NVMInit
  6252 ;;		_ReadDataToEEPROM
  6253 ;; This function is called by:
  6254 ;;		_main
  6255 ;; This function uses a non-reentrant model
  6256 ;;
  6257                           
  6258                           	psect	text43
  6259  002A86                     __ptext43:
  6260                           	opt callstack 0
  6261  002A86                     _INI_All:
  6262                           	opt callstack 24
  6263                           
  6264                           ;INI.c: 57: WDTCONbits.SWDTEN = 1;
  6265                           
  6266                           ;incstack = 0
  6267  002A86  80D1               	bsf	4049,0,c	;volatile
  6268                           
  6269                           ;INI.c: 60: NVMInit();
  6270  002A88  EC2F  F014         	call	_NVMInit	;wreg free
  6271                           
  6272                           ;INI.c: 62: ReadDataToEEPROM();
  6273  002A8C  EC8B  F00A         	call	_ReadDataToEEPROM	;wreg free
  6274  002A90  0004               	clrwdt		;# 
  6275                           
  6276                           ;INI.c: 66: INI_OUTPUT();
  6277  002A92  EC54  F015         	call	_INI_OUTPUT	;wreg free
  6278                           
  6279                           ;INI.c: 68: CAN_Setup();
  6280  002A96  ECC7  F012         	call	_CAN_Setup	;wreg free
  6281                           
  6282                           ;INI.c: 69: INI_GlobalInterrupt();
  6283  002A9A  ECA4  F015         	call	_INI_GlobalInterrupt	;wreg free
  6284                           
  6285                           ;INI.c: 71: INI_Timer();
  6286  002A9E  EC73  F015         	call	_INI_Timer	;wreg free
  6287                           
  6288                           ;INI.c: 73: INI_LED_Start();
  6289  002AA2  ECEE  F014         	call	_INI_LED_Start	;wreg free
  6290  002AA6  0012               	return		;funcret
  6291  002AA8                     __end_of_INI_All:
  6292                           	opt callstack 0
  6293                           
  6294 ;; *************** function _ReadDataToEEPROM *****************
  6295 ;; Defined at:
  6296 ;;		line 498 in file "FRAME.c"
  6297 ;; Parameters:    Size  Location     Type
  6298 ;;		None
  6299 ;; Auto vars:     Size  Location     Type
  6300 ;;		None
  6301 ;; Return value:  Size  Location     Type
  6302 ;;                  1    wreg      void 
  6303 ;; Registers used:
  6304 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6305 ;; Tracked objects:
  6306 ;;		On entry : 0/0
  6307 ;;		On exit  : 0/0
  6308 ;;		Unchanged: 0/0
  6309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6312 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6313 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6314 ;;Total ram usage:        1 bytes
  6315 ;; Hardware stack levels used:    1
  6316 ;; Hardware stack levels required when called:    5
  6317 ;; This function calls:
  6318 ;;		_EEPROM_Adres_Readfrom
  6319 ;;		_NVMRead
  6320 ;;		_ReadfromEEPROM
  6321 ;; This function is called by:
  6322 ;;		_INI_All
  6323 ;; This function uses a non-reentrant model
  6324 ;;
  6325                           
  6326                           	psect	text44
  6327  001516                     __ptext44:
  6328                           	opt callstack 0
  6329  001516                     _ReadDataToEEPROM:
  6330                           	opt callstack 24
  6331                           
  6332                           ;FRAME.c: 501: NVMRead(&Init_Data,110,2);
  6333                           
  6334                           ;incstack = 0
  6335  001516  0E4A               	movlw	low _Init_Data
  6336  001518  6E08               	movwf	NVMRead@dest,c
  6337  00151A  0E00               	movlw	high _Init_Data
  6338  00151C  6E09               	movwf	NVMRead@dest+1,c
  6339  00151E  0E00               	movlw	0
  6340  001520  6E0B               	movwf	NVMRead@addr+1,c
  6341  001522  0E6E               	movlw	110
  6342  001524  6E0A               	movwf	NVMRead@addr,c
  6343  001526  0E00               	movlw	0
  6344  001528  6E0D               	movwf	NVMRead@count+1,c
  6345  00152A  0E02               	movlw	2
  6346  00152C  6E0C               	movwf	NVMRead@count,c
  6347  00152E  ECD4  F014         	call	_NVMRead	;wreg free
  6348                           
  6349                           ;FRAME.c: 503: NeightAdress1 = EEPROM_Adres_Readfrom(113, MinAdres, MaxAdres);
  6350  001532  0E00               	movlw	0
  6351  001534  6E09               	movwf	EEPROM_Adres_Readfrom@StartEEPROMAdres+1,c
  6352  001536  0E71               	movlw	113
  6353  001538  6E08               	movwf	EEPROM_Adres_Readfrom@StartEEPROMAdres,c
  6354  00153A  C024  F00A         	movff	_MinAdres,EEPROM_Adres_Readfrom@MinAdres	;volatile
  6355  00153E  C025  F00B         	movff	_MinAdres+1,EEPROM_Adres_Readfrom@MinAdres+1	;volatile
  6356  001542  C03E  F00C         	movff	_MaxAdres,EEPROM_Adres_Readfrom@MaxAdres	;volatile
  6357  001546  C03F  F00D         	movff	_MaxAdres+1,EEPROM_Adres_Readfrom@MaxAdres+1	;volatile
  6358  00154A  EC2B  F011         	call	_EEPROM_Adres_Readfrom	;wreg free
  6359  00154E  C008  F032         	movff	?_EEPROM_Adres_Readfrom,_NeightAdress1	;volatile
  6360  001552  C009  F033         	movff	?_EEPROM_Adres_Readfrom+1,_NeightAdress1+1	;volatile
  6361                           
  6362                           ;FRAME.c: 504: NeightAdress2 = EEPROM_Adres_Readfrom(116, MinAdres, MaxAdres);
  6363  001556  0E00               	movlw	0
  6364  001558  6E09               	movwf	EEPROM_Adres_Readfrom@StartEEPROMAdres+1,c
  6365  00155A  0E74               	movlw	116
  6366  00155C  6E08               	movwf	EEPROM_Adres_Readfrom@StartEEPROMAdres,c
  6367  00155E  C024  F00A         	movff	_MinAdres,EEPROM_Adres_Readfrom@MinAdres	;volatile
  6368  001562  C025  F00B         	movff	_MinAdres+1,EEPROM_Adres_Readfrom@MinAdres+1	;volatile
  6369  001566  C03E  F00C         	movff	_MaxAdres,EEPROM_Adres_Readfrom@MaxAdres	;volatile
  6370  00156A  C03F  F00D         	movff	_MaxAdres+1,EEPROM_Adres_Readfrom@MaxAdres+1	;volatile
  6371  00156E  EC2B  F011         	call	_EEPROM_Adres_Readfrom	;wreg free
  6372  001572  C008  F046         	movff	?_EEPROM_Adres_Readfrom,_NeightAdress2	;volatile
  6373  001576  C009  F047         	movff	?_EEPROM_Adres_Readfrom+1,_NeightAdress2+1	;volatile
  6374                           
  6375                           ;FRAME.c: 505: NeightAdress3 = EEPROM_Adres_Readfrom(119, MinAdres, MaxAdres);
  6376  00157A  0E00               	movlw	0
  6377  00157C  6E09               	movwf	EEPROM_Adres_Readfrom@StartEEPROMAdres+1,c
  6378  00157E  0E77               	movlw	119
  6379  001580  6E08               	movwf	EEPROM_Adres_Readfrom@StartEEPROMAdres,c
  6380  001582  C024  F00A         	movff	_MinAdres,EEPROM_Adres_Readfrom@MinAdres	;volatile
  6381  001586  C025  F00B         	movff	_MinAdres+1,EEPROM_Adres_Readfrom@MinAdres+1	;volatile
  6382  00158A  C03E  F00C         	movff	_MaxAdres,EEPROM_Adres_Readfrom@MaxAdres	;volatile
  6383  00158E  C03F  F00D         	movff	_MaxAdres+1,EEPROM_Adres_Readfrom@MaxAdres+1	;volatile
  6384  001592  EC2B  F011         	call	_EEPROM_Adres_Readfrom	;wreg free
  6385  001596  C008  F030         	movff	?_EEPROM_Adres_Readfrom,_NeightAdress3	;volatile
  6386  00159A  C009  F031         	movff	?_EEPROM_Adres_Readfrom+1,_NeightAdress3+1	;volatile
  6387                           
  6388                           ;FRAME.c: 506: NeightAdress4 = EEPROM_Adres_Readfrom(122, MinAdres, MaxAdres);
  6389  00159E  0E00               	movlw	0
  6390  0015A0  6E09               	movwf	EEPROM_Adres_Readfrom@StartEEPROMAdres+1,c
  6391  0015A2  0E7A               	movlw	122
  6392  0015A4  6E08               	movwf	EEPROM_Adres_Readfrom@StartEEPROMAdres,c
  6393  0015A6  C024  F00A         	movff	_MinAdres,EEPROM_Adres_Readfrom@MinAdres	;volatile
  6394  0015AA  C025  F00B         	movff	_MinAdres+1,EEPROM_Adres_Readfrom@MinAdres+1	;volatile
  6395  0015AE  C03E  F00C         	movff	_MaxAdres,EEPROM_Adres_Readfrom@MaxAdres	;volatile
  6396  0015B2  C03F  F00D         	movff	_MaxAdres+1,EEPROM_Adres_Readfrom@MaxAdres+1	;volatile
  6397  0015B6  EC2B  F011         	call	_EEPROM_Adres_Readfrom	;wreg free
  6398  0015BA  C008  F02E         	movff	?_EEPROM_Adres_Readfrom,_NeightAdress4	;volatile
  6399  0015BE  C009  F02F         	movff	?_EEPROM_Adres_Readfrom+1,_NeightAdress4+1	;volatile
  6400                           
  6401                           ;FRAME.c: 507: NeightAdress5 = EEPROM_Adres_Readfrom(125, MinAdres, MaxAdres);
  6402  0015C2  0E00               	movlw	0
  6403  0015C4  6E09               	movwf	EEPROM_Adres_Readfrom@StartEEPROMAdres+1,c
  6404  0015C6  0E7D               	movlw	125
  6405  0015C8  6E08               	movwf	EEPROM_Adres_Readfrom@StartEEPROMAdres,c
  6406  0015CA  C024  F00A         	movff	_MinAdres,EEPROM_Adres_Readfrom@MinAdres	;volatile
  6407  0015CE  C025  F00B         	movff	_MinAdres+1,EEPROM_Adres_Readfrom@MinAdres+1	;volatile
  6408  0015D2  C03E  F00C         	movff	_MaxAdres,EEPROM_Adres_Readfrom@MaxAdres	;volatile
  6409  0015D6  C03F  F00D         	movff	_MaxAdres+1,EEPROM_Adres_Readfrom@MaxAdres+1	;volatile
  6410  0015DA  EC2B  F011         	call	_EEPROM_Adres_Readfrom	;wreg free
  6411  0015DE  C008  F02C         	movff	?_EEPROM_Adres_Readfrom,_NeightAdress5	;volatile
  6412  0015E2  C009  F02D         	movff	?_EEPROM_Adres_Readfrom+1,_NeightAdress5+1	;volatile
  6413                           
  6414                           ;FRAME.c: 508: NeightAdress6 = EEPROM_Adres_Readfrom(128, MinAdres, MaxAdres);
  6415  0015E6  0E00               	movlw	0
  6416  0015E8  6E09               	movwf	EEPROM_Adres_Readfrom@StartEEPROMAdres+1,c
  6417  0015EA  0E80               	movlw	128
  6418  0015EC  6E08               	movwf	EEPROM_Adres_Readfrom@StartEEPROMAdres,c
  6419  0015EE  C024  F00A         	movff	_MinAdres,EEPROM_Adres_Readfrom@MinAdres	;volatile
  6420  0015F2  C025  F00B         	movff	_MinAdres+1,EEPROM_Adres_Readfrom@MinAdres+1	;volatile
  6421  0015F6  C03E  F00C         	movff	_MaxAdres,EEPROM_Adres_Readfrom@MaxAdres	;volatile
  6422  0015FA  C03F  F00D         	movff	_MaxAdres+1,EEPROM_Adres_Readfrom@MaxAdres+1	;volatile
  6423  0015FE  EC2B  F011         	call	_EEPROM_Adres_Readfrom	;wreg free
  6424  001602  C008  F02A         	movff	?_EEPROM_Adres_Readfrom,_NeightAdress6	;volatile
  6425  001606  C009  F02B         	movff	?_EEPROM_Adres_Readfrom+1,_NeightAdress6+1	;volatile
  6426                           
  6427                           ;FRAME.c: 509: NeightAdress7 = EEPROM_Adres_Readfrom(131, MinAdres, MaxAdres);
  6428  00160A  0E00               	movlw	0
  6429  00160C  6E09               	movwf	EEPROM_Adres_Readfrom@StartEEPROMAdres+1,c
  6430  00160E  0E83               	movlw	131
  6431  001610  6E08               	movwf	EEPROM_Adres_Readfrom@StartEEPROMAdres,c
  6432  001612  C024  F00A         	movff	_MinAdres,EEPROM_Adres_Readfrom@MinAdres	;volatile
  6433  001616  C025  F00B         	movff	_MinAdres+1,EEPROM_Adres_Readfrom@MinAdres+1	;volatile
  6434  00161A  C03E  F00C         	movff	_MaxAdres,EEPROM_Adres_Readfrom@MaxAdres	;volatile
  6435  00161E  C03F  F00D         	movff	_MaxAdres+1,EEPROM_Adres_Readfrom@MaxAdres+1	;volatile
  6436  001622  EC2B  F011         	call	_EEPROM_Adres_Readfrom	;wreg free
  6437  001626  C008  F028         	movff	?_EEPROM_Adres_Readfrom,_NeightAdress7	;volatile
  6438  00162A  C009  F029         	movff	?_EEPROM_Adres_Readfrom+1,_NeightAdress7+1	;volatile
  6439                           
  6440                           ;FRAME.c: 510: NeightAdress8 = EEPROM_Adres_Readfrom(134, MinAdres, MaxAdres);
  6441  00162E  0E00               	movlw	0
  6442  001630  6E09               	movwf	EEPROM_Adres_Readfrom@StartEEPROMAdres+1,c
  6443  001632  0E86               	movlw	134
  6444  001634  6E08               	movwf	EEPROM_Adres_Readfrom@StartEEPROMAdres,c
  6445  001636  C024  F00A         	movff	_MinAdres,EEPROM_Adres_Readfrom@MinAdres	;volatile
  6446  00163A  C025  F00B         	movff	_MinAdres+1,EEPROM_Adres_Readfrom@MinAdres+1	;volatile
  6447  00163E  C03E  F00C         	movff	_MaxAdres,EEPROM_Adres_Readfrom@MaxAdres	;volatile
  6448  001642  C03F  F00D         	movff	_MaxAdres+1,EEPROM_Adres_Readfrom@MaxAdres+1	;volatile
  6449  001646  EC2B  F011         	call	_EEPROM_Adres_Readfrom	;wreg free
  6450  00164A  C008  F026         	movff	?_EEPROM_Adres_Readfrom,_NeightAdress8	;volatile
  6451  00164E  C009  F027         	movff	?_EEPROM_Adres_Readfrom+1,_NeightAdress8+1	;volatile
  6452                           
  6453                           ;FRAME.c: 512: MinRange = ReadfromEEPROM((WORD)1400);
  6454  001652  0E05               	movlw	5
  6455  001654  6E07               	movwf	ReadfromEEPROM@Address+1,c
  6456  001656  0E78               	movlw	120
  6457  001658  6E06               	movwf	ReadfromEEPROM@Address,c
  6458  00165A  EC93  F015         	call	_ReadfromEEPROM	;wreg free
  6459  00165E  6E15               	movwf	??_ReadDataToEEPROM& (0+255),c
  6460  001660  5015               	movf	??_ReadDataToEEPROM,w,c
  6461  001662  6E22               	movwf	_MinRange,c	;volatile
  6462  001664  6A23               	clrf	_MinRange+1,c	;volatile
  6463                           
  6464                           ;FRAME.c: 513: MaxRange = ReadfromEEPROM((WORD)1440);
  6465  001666  0E05               	movlw	5
  6466  001668  6E07               	movwf	ReadfromEEPROM@Address+1,c
  6467  00166A  0EA0               	movlw	160
  6468  00166C  6E06               	movwf	ReadfromEEPROM@Address,c
  6469  00166E  EC93  F015         	call	_ReadfromEEPROM	;wreg free
  6470  001672  6E15               	movwf	??_ReadDataToEEPROM& (0+255),c
  6471  001674  5015               	movf	??_ReadDataToEEPROM,w,c
  6472  001676  6E3C               	movwf	_MaxRange,c	;volatile
  6473  001678  6A3D               	clrf	_MaxRange+1,c	;volatile
  6474                           
  6475                           ;FRAME.c: 514: MinPower = ReadfromEEPROM((WORD)1480);
  6476  00167A  0E05               	movlw	5
  6477  00167C  6E07               	movwf	ReadfromEEPROM@Address+1,c
  6478  00167E  0EC8               	movlw	200
  6479  001680  6E06               	movwf	ReadfromEEPROM@Address,c
  6480  001682  EC93  F015         	call	_ReadfromEEPROM	;wreg free
  6481  001686  6E15               	movwf	??_ReadDataToEEPROM& (0+255),c
  6482  001688  5015               	movf	??_ReadDataToEEPROM,w,c
  6483  00168A  6E20               	movwf	_MinPower,c	;volatile
  6484  00168C  6A21               	clrf	_MinPower+1,c	;volatile
  6485                           
  6486                           ;FRAME.c: 515: MaxPower = ReadfromEEPROM((WORD)1520);
  6487  00168E  0E05               	movlw	5
  6488  001690  6E07               	movwf	ReadfromEEPROM@Address+1,c
  6489  001692  0EF0               	movlw	240
  6490  001694  6E06               	movwf	ReadfromEEPROM@Address,c
  6491  001696  EC93  F015         	call	_ReadfromEEPROM	;wreg free
  6492  00169A  6E15               	movwf	??_ReadDataToEEPROM& (0+255),c
  6493  00169C  5015               	movf	??_ReadDataToEEPROM,w,c
  6494  00169E  6E3A               	movwf	_MaxPower,c	;volatile
  6495  0016A0  6A3B               	clrf	_MaxPower+1,c	;volatile
  6496  0016A2  0012               	return		;funcret
  6497  0016A4                     __end_of_ReadDataToEEPROM:
  6498                           	opt callstack 0
  6499                           
  6500 ;; *************** function _NVMRead *****************
  6501 ;; Defined at:
  6502 ;;		line 145 in file "EEPROM.c"
  6503 ;; Parameters:    Size  Location     Type
  6504 ;;  dest            2    7[COMRAM] PTR unsigned char 
  6505 ;;		 -> Init_Data(2), 
  6506 ;;  addr            2    9[COMRAM] unsigned short 
  6507 ;;  count           2   11[COMRAM] unsigned short 
  6508 ;; Auto vars:     Size  Location     Type
  6509 ;;		None
  6510 ;; Return value:  Size  Location     Type
  6511 ;;                  1    wreg      void 
  6512 ;; Registers used:
  6513 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6514 ;; Tracked objects:
  6515 ;;		On entry : 0/0
  6516 ;;		On exit  : 0/0
  6517 ;;		Unchanged: 0/0
  6518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6519 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6522 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6523 ;;Total ram usage:        6 bytes
  6524 ;; Hardware stack levels used:    1
  6525 ;; Hardware stack levels required when called:    4
  6526 ;; This function calls:
  6527 ;;		_ReadfromEEPROM
  6528 ;; This function is called by:
  6529 ;;		_ReadDataToEEPROM
  6530 ;; This function uses a non-reentrant model
  6531 ;;
  6532                           
  6533                           	psect	text45
  6534  0029A8                     __ptext45:
  6535                           	opt callstack 0
  6536  0029A8                     _NVMRead:
  6537                           	opt callstack 24
  6538                           
  6539                           ;EEPROM.c: 147: while( count > 0 )
  6540                           
  6541                           ;incstack = 0
  6542  0029A8  D014               	goto	l3557
  6543  0029AA                     l952:
  6544  0029AA  B2A6               	btfsc	4006,1,c	;volsfr
  6545  0029AC  D7FE               	goto	l952
  6546                           
  6547                           ;EEPROM.c: 150: *dest++ = ReadfromEEPROM(addr++);
  6548  0029AE  C00A  F006         	movff	NVMRead@addr,ReadfromEEPROM@Address
  6549  0029B2  C00B  F007         	movff	NVMRead@addr+1,ReadfromEEPROM@Address+1
  6550  0029B6  EC93  F015         	call	_ReadfromEEPROM	;wreg free
  6551  0029BA  C008  FFD9         	movff	NVMRead@dest,fsr2l
  6552  0029BE  C009  FFDA         	movff	NVMRead@dest+1,fsr2h
  6553  0029C2  6EDF               	movwf	indf2,c
  6554  0029C4  4A0A               	infsnz	NVMRead@addr,f,c
  6555  0029C6  2A0B               	incf	NVMRead@addr+1,f,c
  6556  0029C8  4A08               	infsnz	NVMRead@dest,f,c
  6557  0029CA  2A09               	incf	NVMRead@dest+1,f,c
  6558                           
  6559                           ;EEPROM.c: 151: count--;
  6560  0029CC  060C               	decf	NVMRead@count,f,c
  6561  0029CE  A0D8               	btfss	status,0,c
  6562  0029D0  060D               	decf	NVMRead@count+1,f,c
  6563  0029D2                     l3557:
  6564  0029D2  500C               	movf	NVMRead@count,w,c
  6565  0029D4  100D               	iorwf	NVMRead@count+1,w,c
  6566  0029D6  B4D8               	btfsc	status,2,c
  6567  0029D8  0012               	return	
  6568  0029DA  D7E7               	goto	l952
  6569  0029DC                     __end_of_NVMRead:
  6570                           	opt callstack 0
  6571                           
  6572 ;; *************** function _EEPROM_Adres_Readfrom *****************
  6573 ;; Defined at:
  6574 ;;		line 83 in file "EEPROM.c"
  6575 ;; Parameters:    Size  Location     Type
  6576 ;;  StartEEPROMA    2    7[COMRAM] unsigned int 
  6577 ;;  MinAdres        2    9[COMRAM] unsigned int 
  6578 ;;  MaxAdres        2   11[COMRAM] unsigned int 
  6579 ;; Auto vars:     Size  Location     Type
  6580 ;;  ReadAdressOf    2   18[COMRAM] unsigned int 
  6581 ;; Return value:  Size  Location     Type
  6582 ;;                  2    7[COMRAM] unsigned int 
  6583 ;; Registers used:
  6584 ;;		wreg, status,2, status,0, cstack
  6585 ;; Tracked objects:
  6586 ;;		On entry : 0/0
  6587 ;;		On exit  : 0/0
  6588 ;;		Unchanged: 0/0
  6589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6590 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6591 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6592 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6593 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6594 ;;Total ram usage:       13 bytes
  6595 ;; Hardware stack levels used:    1
  6596 ;; Hardware stack levels required when called:    4
  6597 ;; This function calls:
  6598 ;;		_ReadfromEEPROM
  6599 ;; This function is called by:
  6600 ;;		_ReadDataToEEPROM
  6601 ;; This function uses a non-reentrant model
  6602 ;;
  6603                           
  6604                           	psect	text46
  6605  002256                     __ptext46:
  6606                           	opt callstack 0
  6607  002256                     _EEPROM_Adres_Readfrom:
  6608                           	opt callstack 24
  6609                           
  6610                           ;EEPROM.c: 87: ReadAdressOfNeighbor = ReadfromEEPROM(StartEEPROMAdres);
  6611                           
  6612                           ;incstack = 0
  6613  002256  C008  F006         	movff	EEPROM_Adres_Readfrom@StartEEPROMAdres,ReadfromEEPROM@Address
  6614  00225A  C009  F007         	movff	EEPROM_Adres_Readfrom@StartEEPROMAdres+1,ReadfromEEPROM@Address+1
  6615  00225E  EC93  F015         	call	_ReadfromEEPROM	;wreg free
  6616  002262  6E0E               	movwf	??_EEPROM_Adres_Readfrom& (0+255),c
  6617  002264  500E               	movf	??_EEPROM_Adres_Readfrom,w,c
  6618  002266  6E13               	movwf	EEPROM_Adres_Readfrom@ReadAdressOfNeighbor,c
  6619  002268  6A14               	clrf	EEPROM_Adres_Readfrom@ReadAdressOfNeighbor+1,c
  6620                           
  6621                           ;EEPROM.c: 88: ReadAdressOfNeighbor = ((ReadfromEEPROM(StartEEPROMAdres+1)<<8)&0xFF00)| 
      +                          ReadAdressOfNeighbor;
  6622  00226A  0E00               	movlw	0
  6623  00226C  6E0E               	movwf	??_EEPROM_Adres_Readfrom& (0+255),c
  6624  00226E  0EFF               	movlw	255
  6625  002270  6E0F               	movwf	(??_EEPROM_Adres_Readfrom+1)& (0+255),c
  6626  002272  0E01               	movlw	1
  6627  002274  2408               	addwf	EEPROM_Adres_Readfrom@StartEEPROMAdres,w,c
  6628  002276  6E06               	movwf	ReadfromEEPROM@Address,c
  6629  002278  0E00               	movlw	0
  6630  00227A  2009               	addwfc	EEPROM_Adres_Readfrom@StartEEPROMAdres+1,w,c
  6631  00227C  6E07               	movwf	ReadfromEEPROM@Address+1,c
  6632  00227E  EC93  F015         	call	_ReadfromEEPROM	;wreg free
  6633  002282  6E10               	movwf	(??_EEPROM_Adres_Readfrom+2)& (0+255),c
  6634  002284  5010               	movf	??_EEPROM_Adres_Readfrom+2,w,c
  6635  002286  6E12               	movwf	(??_EEPROM_Adres_Readfrom+4)& (0+255),c
  6636  002288  6A11               	clrf	(??_EEPROM_Adres_Readfrom+3)& (0+255),c
  6637  00228A  500E               	movf	??_EEPROM_Adres_Readfrom,w,c
  6638  00228C  1611               	andwf	??_EEPROM_Adres_Readfrom+3,f,c
  6639  00228E  500F               	movf	??_EEPROM_Adres_Readfrom+1,w,c
  6640  002290  1612               	andwf	??_EEPROM_Adres_Readfrom+4,f,c
  6641  002292  5013               	movf	EEPROM_Adres_Readfrom@ReadAdressOfNeighbor,w,c
  6642  002294  1011               	iorwf	??_EEPROM_Adres_Readfrom+3,w,c
  6643  002296  6E13               	movwf	EEPROM_Adres_Readfrom@ReadAdressOfNeighbor,c
  6644  002298  5014               	movf	EEPROM_Adres_Readfrom@ReadAdressOfNeighbor+1,w,c
  6645  00229A  1012               	iorwf	??_EEPROM_Adres_Readfrom+4,w,c
  6646  00229C  6E14               	movwf	EEPROM_Adres_Readfrom@ReadAdressOfNeighbor+1,c
  6647                           
  6648                           ;EEPROM.c: 89: if(ReadAdressOfNeighbor==0xFFFF || (MinAdres>ReadAdressOfNeighbor)||(Read
      +                          AdressOfNeighbor>MaxAdres))
  6649  00229E  2813               	incf	EEPROM_Adres_Readfrom@ReadAdressOfNeighbor,w,c
  6650  0022A0  E103               	bnz	u1890
  6651  0022A2  2814               	incf	EEPROM_Adres_Readfrom@ReadAdressOfNeighbor+1,w,c
  6652  0022A4  B4D8               	btfsc	status,2,c
  6653  0022A6  D00C               	goto	u1910
  6654  0022A8                     u1890:
  6655  0022A8  500A               	movf	EEPROM_Adres_Readfrom@MinAdres,w,c
  6656  0022AA  5C13               	subwf	EEPROM_Adres_Readfrom@ReadAdressOfNeighbor,w,c
  6657  0022AC  500B               	movf	EEPROM_Adres_Readfrom@MinAdres+1,w,c
  6658  0022AE  5814               	subwfb	EEPROM_Adres_Readfrom@ReadAdressOfNeighbor+1,w,c
  6659  0022B0  A0D8               	btfss	status,0,c
  6660  0022B2  D006               	goto	u1910
  6661  0022B4  5013               	movf	EEPROM_Adres_Readfrom@ReadAdressOfNeighbor,w,c
  6662  0022B6  5C0C               	subwf	EEPROM_Adres_Readfrom@MaxAdres,w,c
  6663  0022B8  5014               	movf	EEPROM_Adres_Readfrom@ReadAdressOfNeighbor+1,w,c
  6664  0022BA  580D               	subwfb	EEPROM_Adres_Readfrom@MaxAdres+1,w,c
  6665  0022BC  B0D8               	btfsc	status,0,c
  6666  0022BE  D004               	goto	l3573
  6667  0022C0                     u1910:
  6668                           
  6669                           ;EEPROM.c: 90: {;EEPROM.c: 91: ReadAdressOfNeighbor=0;
  6670  0022C0  0E00               	movlw	0
  6671  0022C2  6E14               	movwf	EEPROM_Adres_Readfrom@ReadAdressOfNeighbor+1,c
  6672  0022C4  0E00               	movlw	0
  6673  0022C6  6E13               	movwf	EEPROM_Adres_Readfrom@ReadAdressOfNeighbor,c
  6674  0022C8                     l3573:
  6675                           
  6676                           ;EEPROM.c: 92: };EEPROM.c: 93: return ReadAdressOfNeighbor;
  6677  0022C8  C013  F008         	movff	EEPROM_Adres_Readfrom@ReadAdressOfNeighbor,?_EEPROM_Adres_Readfrom
  6678  0022CC  C014  F009         	movff	EEPROM_Adres_Readfrom@ReadAdressOfNeighbor+1,?_EEPROM_Adres_Readfrom+1
  6679  0022D0  0012               	return		;funcret
  6680  0022D2                     __end_of_EEPROM_Adres_Readfrom:
  6681                           	opt callstack 0
  6682                           
  6683 ;; *************** function _ReadfromEEPROM *****************
  6684 ;; Defined at:
  6685 ;;		line 73 in file "EEPROM.c"
  6686 ;; Parameters:    Size  Location     Type
  6687 ;;  Address         2    5[COMRAM] unsigned short 
  6688 ;; Auto vars:     Size  Location     Type
  6689 ;;		None
  6690 ;; Return value:  Size  Location     Type
  6691 ;;                  1    wreg      unsigned char 
  6692 ;; Registers used:
  6693 ;;		wreg, status,2
  6694 ;; Tracked objects:
  6695 ;;		On entry : 0/0
  6696 ;;		On exit  : 0/0
  6697 ;;		Unchanged: 0/0
  6698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6699 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6702 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6703 ;;Total ram usage:        2 bytes
  6704 ;; Hardware stack levels used:    1
  6705 ;; Hardware stack levels required when called:    3
  6706 ;; This function calls:
  6707 ;;		Nothing
  6708 ;; This function is called by:
  6709 ;;		_ReadDataToEEPROM
  6710 ;;		_EEPROM_Adres_Readfrom
  6711 ;;		_NVMRead
  6712 ;; This function uses a non-reentrant model
  6713 ;;
  6714                           
  6715                           	psect	text47
  6716  002B26                     __ptext47:
  6717                           	opt callstack 0
  6718  002B26                     _ReadfromEEPROM:
  6719                           	opt callstack 25
  6720                           
  6721                           ;EEPROM.c: 75: EEADRH = (BYTE)(Address>>8);
  6722                           
  6723                           ;incstack = 0
  6724  002B26  5007               	movf	ReadfromEEPROM@Address+1,w,c
  6725  002B28  6EAA               	movwf	4010,c	;volatile
  6726                           
  6727                           ;EEPROM.c: 76: EEADR = (BYTE)Address;
  6728  002B2A  C006  FFA9         	movff	ReadfromEEPROM@Address,4009	;volatile
  6729                           
  6730                           ;EEPROM.c: 77: EECON1bits.RD = 1;
  6731  002B2E  80A6               	bsf	4006,0,c	;volsfr
  6732                           
  6733                           ;EEPROM.c: 78: EECON1bits.EEPGD = 0;
  6734  002B30  9EA6               	bcf	4006,7,c	;volsfr
  6735                           
  6736                           ;EEPROM.c: 79: EECON1bits.CFGS = 0;
  6737  002B32  9CA6               	bcf	4006,6,c	;volsfr
  6738                           
  6739                           ;EEPROM.c: 80: return EEDATA;
  6740  002B34  50A8               	movf	4008,w,c	;volatile
  6741  002B36  0012               	return		;funcret
  6742  002B38                     __end_of_ReadfromEEPROM:
  6743                           	opt callstack 0
  6744                           
  6745 ;; *************** function _NVMInit *****************
  6746 ;; Defined at:
  6747 ;;		line 49 in file "EEPROM.c"
  6748 ;; Parameters:    Size  Location     Type
  6749 ;;		None
  6750 ;; Auto vars:     Size  Location     Type
  6751 ;;  NeightAdress    2    0        unsigned int 
  6752 ;;  result          1   13[COMRAM] enum E10294
  6753 ;; Return value:  Size  Location     Type
  6754 ;;                  1    wreg      enum E10294
  6755 ;; Registers used:
  6756 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6757 ;; Tracked objects:
  6758 ;;		On entry : 0/0
  6759 ;;		On exit  : 0/0
  6760 ;;		Unchanged: 0/0
  6761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6763 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6765 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6766 ;;Total ram usage:        3 bytes
  6767 ;; Hardware stack levels used:    1
  6768 ;; Hardware stack levels required when called:    4
  6769 ;; This function calls:
  6770 ;;		_NVMalloc
  6771 ;; This function is called by:
  6772 ;;		_INI_All
  6773 ;; This function uses a non-reentrant model
  6774 ;;
  6775                           
  6776                           	psect	text48
  6777  00285E                     __ptext48:
  6778                           	opt callstack 0
  6779  00285E                     _NVMInit:
  6780                           	opt callstack 25
  6781                           
  6782                           ;EEPROM.c: 51: BOOL result = TRUE;
  6783                           
  6784                           ;incstack = 0
  6785  00285E  0E01               	movlw	1
  6786  002860  6E0E               	movwf	NVMInit@result,c
  6787                           
  6788                           ;EEPROM.c: 53: nextEEPosition = 0;
  6789  002862  0E00               	movlw	0
  6790  002864  0100               	movlb	0	; () banked
  6791  002866  6FD3               	movwf	(_nextEEPosition+1)& (0+255),b
  6792  002868  0E00               	movlw	0
  6793  00286A  6FD2               	movwf	_nextEEPosition& (0+255),b
  6794                           
  6795                           ; BSR set to: 0
  6796                           ;EEPROM.c: 55: result &= NVMalloc(sizeof(KartaStruct), &ustawieniaKarty);
  6797  00286C  0E00               	movlw	0
  6798  00286E  6E07               	movwf	NVMalloc@size+1,c
  6799  002870  0E03               	movlw	3
  6800  002872  6E06               	movwf	NVMalloc@size,c
  6801  002874  0EDC               	movlw	low _ustawieniaKarty
  6802  002876  6E08               	movwf	NVMalloc@location,c
  6803  002878  0E00               	movlw	high _ustawieniaKarty
  6804  00287A  6E09               	movwf	NVMalloc@location+1,c
  6805  00287C  EC4D  F014         	call	_NVMalloc	;wreg free
  6806  002880  160E               	andwf	NVMInit@result,f,c
  6807                           
  6808                           ;EEPROM.c: 56: result &= NVMalloc(8*sizeof(NeightAdress_Example), &neighborsAdress);
  6809  002882  0E00               	movlw	0
  6810  002884  6E07               	movwf	NVMalloc@size+1,c
  6811  002886  0E10               	movlw	16
  6812  002888  6E06               	movwf	NVMalloc@size,c
  6813  00288A  0EDA               	movlw	low _neighborsAdress
  6814  00288C  6E08               	movwf	NVMalloc@location,c
  6815  00288E  0E00               	movlw	high _neighborsAdress
  6816  002890  6E09               	movwf	NVMalloc@location+1,c
  6817  002892  EC4D  F014         	call	_NVMalloc	;wreg free
  6818  002896  160E               	andwf	NVMInit@result,f,c
  6819  002898  0012               	return		;funcret
  6820  00289A                     __end_of_NVMInit:
  6821                           	opt callstack 0
  6822                           
  6823 ;; *************** function _NVMalloc *****************
  6824 ;; Defined at:
  6825 ;;		line 24 in file "EEPROM.c"
  6826 ;; Parameters:    Size  Location     Type
  6827 ;;  size            2    5[COMRAM] unsigned short 
  6828 ;;  location        2    7[COMRAM] PTR unsigned short 
  6829 ;;		 -> neighborsAdress(2), ustawieniaKarty(2), 
  6830 ;; Auto vars:     Size  Location     Type
  6831 ;;		None
  6832 ;; Return value:  Size  Location     Type
  6833 ;;                  1    wreg      enum E10294
  6834 ;; Registers used:
  6835 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6836 ;; Tracked objects:
  6837 ;;		On entry : 0/0
  6838 ;;		On exit  : 0/0
  6839 ;;		Unchanged: 0/0
  6840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6841 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6843 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6844 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6845 ;;Total ram usage:        6 bytes
  6846 ;; Hardware stack levels used:    1
  6847 ;; Hardware stack levels required when called:    3
  6848 ;; This function calls:
  6849 ;;		Nothing
  6850 ;; This function is called by:
  6851 ;;		_NVMInit
  6852 ;; This function uses a non-reentrant model
  6853 ;;
  6854                           
  6855                           	psect	text49
  6856  00289A                     __ptext49:
  6857                           	opt callstack 0
  6858  00289A                     _NVMalloc:
  6859                           	opt callstack 25
  6860                           
  6861                           ;EEPROM.c: 28: if ((nextEEPosition + (WORD)size) > (WORD)0x400)
  6862                           
  6863                           ;incstack = 0
  6864  00289A  5006               	movf	NVMalloc@size,w,c
  6865  00289C  0100               	movlb	0	; () banked
  6866  00289E  25D2               	addwf	_nextEEPosition& (0+255),w,b
  6867  0028A0  6E0A               	movwf	??_NVMalloc& (0+255),c
  6868  0028A2  5007               	movf	NVMalloc@size+1,w,c
  6869  0028A4  21D3               	addwfc	(_nextEEPosition+1)& (0+255),w,b
  6870  0028A6  6E0B               	movwf	(??_NVMalloc+1)& (0+255),c
  6871  0028A8  040A               	decf	??_NVMalloc,w,c
  6872  0028AA  0E04               	movlw	4
  6873  0028AC  580B               	subwfb	??_NVMalloc+1,w,c
  6874  0028AE  A0D8               	btfss	status,0,c
  6875  0028B0  D002               	goto	l3621
  6876                           
  6877                           ; BSR set to: 0
  6878                           ;EEPROM.c: 29: {;EEPROM.c: 30: return FALSE;
  6879  0028B2  0E00               	movlw	0
  6880  0028B4  0012               	return	
  6881  0028B6                     l3621:
  6882                           
  6883                           ; BSR set to: 0
  6884                           ;EEPROM.c: 31: };EEPROM.c: 33: *location = nextEEPosition;
  6885  0028B6  C008  FFD9         	movff	NVMalloc@location,fsr2l
  6886  0028BA  C009  FFDA         	movff	NVMalloc@location+1,fsr2h
  6887  0028BE  C0D2  FFDE         	movff	_nextEEPosition,postinc2
  6888  0028C2  C0D3  FFDD         	movff	_nextEEPosition+1,postdec2
  6889                           
  6890                           ; BSR set to: 0
  6891                           ;EEPROM.c: 34: nextEEPosition += size;
  6892  0028C6  5006               	movf	NVMalloc@size,w,c
  6893  0028C8  27D2               	addwf	_nextEEPosition& (0+255),f,b
  6894  0028CA  5007               	movf	NVMalloc@size+1,w,c
  6895  0028CC  23D3               	addwfc	(_nextEEPosition+1)& (0+255),f,b
  6896                           
  6897                           ; BSR set to: 0
  6898                           ;EEPROM.c: 35: return TRUE;
  6899  0028CE  0E01               	movlw	1
  6900                           
  6901                           ; BSR set to: 0
  6902  0028D0  0012               	return		;funcret
  6903  0028D2                     __end_of_NVMalloc:
  6904                           	opt callstack 0
  6905                           
  6906 ;; *************** function _INI_Timer *****************
  6907 ;; Defined at:
  6908 ;;		line 92 in file "TMR1.c"
  6909 ;; Parameters:    Size  Location     Type
  6910 ;;		None
  6911 ;; Auto vars:     Size  Location     Type
  6912 ;;		None
  6913 ;; Return value:  Size  Location     Type
  6914 ;;                  1    wreg      unsigned char 
  6915 ;; Registers used:
  6916 ;;		wreg, status,2
  6917 ;; Tracked objects:
  6918 ;;		On entry : 0/0
  6919 ;;		On exit  : 0/0
  6920 ;;		Unchanged: 0/0
  6921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6926 ;;Total ram usage:        0 bytes
  6927 ;; Hardware stack levels used:    1
  6928 ;; Hardware stack levels required when called:    3
  6929 ;; This function calls:
  6930 ;;		Nothing
  6931 ;; This function is called by:
  6932 ;;		_INI_All
  6933 ;; This function uses a non-reentrant model
  6934 ;;
  6935                           
  6936                           	psect	text50
  6937  002AE6                     __ptext50:
  6938                           	opt callstack 0
  6939  002AE6                     _INI_Timer:
  6940                           	opt callstack 26
  6941                           
  6942                           ;TMR1.c: 96: IRCF2 = 1;
  6943                           
  6944                           ; BSR set to: 0
  6945                           ;incstack = 0
  6946  002AE6  8CD3               	bsf	4051,6,c	;volatile
  6947                           
  6948                           ;TMR1.c: 97: IRCF1 = 1;
  6949  002AE8  8AD3               	bsf	4051,5,c	;volatile
  6950                           
  6951                           ;TMR1.c: 98: IRCF0 = 1;
  6952  002AEA  88D3               	bsf	4051,4,c	;volatile
  6953                           
  6954                           ;TMR1.c: 99: T1CON = 0b00111101;
  6955  002AEC  0E3D               	movlw	61
  6956  002AEE  6ECD               	movwf	4045,c	;volatile
  6957                           
  6958                           ;TMR1.c: 100: TMR1H= (UINT8)((0xFFFF - (((8000000/8)/4)/10)) >> 8);
  6959  002AF0  0E9E               	movlw	158
  6960  002AF2  6ECF               	movwf	4047,c	;volatile
  6961                           
  6962                           ;TMR1.c: 101: TMR1L=(UINT8)((0xFFFF - (((8000000/8)/4)/10)) & 0xFF);
  6963  002AF4  0E57               	movlw	87
  6964  002AF6  6ECE               	movwf	4046,c	;volatile
  6965                           
  6966                           ;TMR1.c: 102: TMR1IE=1;
  6967  002AF8  809D               	bsf	3997,0,c	;volatile
  6968                           
  6969                           ;TMR1.c: 103: TMR1ON = 1;
  6970  002AFA  80CD               	bsf	4045,0,c	;volatile
  6971  002AFC  0012               	return		;funcret
  6972  002AFE                     __end_of_INI_Timer:
  6973                           	opt callstack 0
  6974                           
  6975 ;; *************** function _INI_OUTPUT *****************
  6976 ;; Defined at:
  6977 ;;		line 29 in file "INI.c"
  6978 ;; Parameters:    Size  Location     Type
  6979 ;;		None
  6980 ;; Auto vars:     Size  Location     Type
  6981 ;;		None
  6982 ;; Return value:  Size  Location     Type
  6983 ;;                  1    wreg      void 
  6984 ;; Registers used:
  6985 ;;		wreg, status,2
  6986 ;; Tracked objects:
  6987 ;;		On entry : 0/0
  6988 ;;		On exit  : 0/0
  6989 ;;		Unchanged: 0/0
  6990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6994 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6995 ;;Total ram usage:        0 bytes
  6996 ;; Hardware stack levels used:    1
  6997 ;; Hardware stack levels required when called:    3
  6998 ;; This function calls:
  6999 ;;		Nothing
  7000 ;; This function is called by:
  7001 ;;		_INI_All
  7002 ;; This function uses a non-reentrant model
  7003 ;;
  7004                           
  7005                           	psect	text51
  7006  002AA8                     __ptext51:
  7007                           	opt callstack 0
  7008  002AA8                     _INI_OUTPUT:
  7009                           	opt callstack 26
  7010                           
  7011                           ;INI.c: 33: LATA = 0;
  7012                           
  7013                           ;incstack = 0
  7014  002AA8  0E00               	movlw	0
  7015  002AAA  6E89               	movwf	3977,c	;volatile
  7016                           
  7017                           ;INI.c: 34: LATB = 0;
  7018  002AAC  0E00               	movlw	0
  7019  002AAE  6E8A               	movwf	3978,c	;volatile
  7020                           
  7021                           ;INI.c: 35: LATC = 0;
  7022  002AB0  0E00               	movlw	0
  7023  002AB2  6E8B               	movwf	3979,c	;volatile
  7024                           
  7025                           ;INI.c: 36: TRISA = 0x0C;
  7026  002AB4  0E0C               	movlw	12
  7027  002AB6  6E92               	movwf	3986,c	;volatile
  7028                           
  7029                           ;INI.c: 37: TRISB = 0b10001000;
  7030  002AB8  0E88               	movlw	136
  7031  002ABA  6E93               	movwf	3987,c	;volatile
  7032                           
  7033                           ;INI.c: 38: TRISC = 0xBF;
  7034  002ABC  0EBF               	movlw	191
  7035  002ABE  6E94               	movwf	3988,c	;volatile
  7036                           
  7037                           ;INI.c: 39: RCONbits.IPEN = 1;
  7038  002AC0  8ED0               	bsf	4048,7,c	;volatile
  7039                           
  7040                           ;INI.c: 42: DetectorLedRadar.Flags.inicjalizacja = 1;
  7041  002AC2  0100               	movlb	0	; () banked
  7042  002AC4  87CF               	bsf	_DetectorLedRadar& (0+255),3,b
  7043                           
  7044                           ; BSR set to: 0
  7045  002AC6  0012               	return		;funcret
  7046  002AC8                     __end_of_INI_OUTPUT:
  7047                           	opt callstack 0
  7048                           
  7049 ;; *************** function _INI_LED_Start *****************
  7050 ;; Defined at:
  7051 ;;		line 287 in file "LED.c"
  7052 ;; Parameters:    Size  Location     Type
  7053 ;;		None
  7054 ;; Auto vars:     Size  Location     Type
  7055 ;;		None
  7056 ;; Return value:  Size  Location     Type
  7057 ;;                  1    wreg      void 
  7058 ;; Registers used:
  7059 ;;		wreg, status,2, status,0, cstack
  7060 ;; Tracked objects:
  7061 ;;		On entry : 0/0
  7062 ;;		On exit  : 0/0
  7063 ;;		Unchanged: 0/0
  7064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7068 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7069 ;;Total ram usage:        0 bytes
  7070 ;; Hardware stack levels used:    1
  7071 ;; Hardware stack levels required when called:    4
  7072 ;; This function calls:
  7073 ;;		_LED_Control
  7074 ;; This function is called by:
  7075 ;;		_INI_All
  7076 ;; This function uses a non-reentrant model
  7077 ;;
  7078                           
  7079                           	psect	text52
  7080  0029DC                     __ptext52:
  7081                           	opt callstack 0
  7082  0029DC                     _INI_LED_Start:
  7083                           	opt callstack 25
  7084                           
  7085                           ;LED.c: 289: TRISA = TRISA & 0b00000001;
  7086                           
  7087                           ; BSR set to: 0
  7088                           ;incstack = 0
  7089  0029DC  5092               	movf	3986,w,c	;volatile
  7090  0029DE  0B01               	andlw	1
  7091  0029E0  6E92               	movwf	3986,c	;volatile
  7092                           
  7093                           ;LED.c: 290: TRISB = TRISB & 0b11111100;
  7094  0029E2  5093               	movf	3987,w,c	;volatile
  7095  0029E4  0BFC               	andlw	252
  7096  0029E6  6E93               	movwf	3987,c	;volatile
  7097                           
  7098                           ;LED.c: 291: TRISE = TRISE & 0b11111000;
  7099  0029E8  5096               	movf	3990,w,c	;volatile
  7100  0029EA  0BF8               	andlw	248
  7101  0029EC  6E96               	movwf	3990,c	;volatile
  7102                           
  7103                           ;LED.c: 292: TRISD = TRISD & 0b00000000;
  7104  0029EE  0E00               	movlw	0
  7105  0029F0  6E95               	movwf	3989,c	;volatile
  7106                           
  7107                           ;LED.c: 293: LED_Control(RED,0b0000000000);
  7108  0029F2  0E00               	movlw	0
  7109  0029F4  6E07               	movwf	LED_Control@diode+1,c
  7110  0029F6  0E00               	movlw	0
  7111  0029F8  6E06               	movwf	LED_Control@diode,c
  7112  0029FA  0E00               	movlw	0
  7113  0029FC  EC0B  F00C         	call	_LED_Control
  7114                           
  7115                           ;LED.c: 294: LED_Control(GREEN,0b0000000000);
  7116  002A00  0E00               	movlw	0
  7117  002A02  6E07               	movwf	LED_Control@diode+1,c
  7118  002A04  0E00               	movlw	0
  7119  002A06  6E06               	movwf	LED_Control@diode,c
  7120  002A08  0E01               	movlw	1
  7121  002A0A  EC0B  F00C         	call	_LED_Control
  7122  002A0E  0012               	return		;funcret
  7123  002A10                     __end_of_INI_LED_Start:
  7124                           	opt callstack 0
  7125                           
  7126 ;; *************** function _LED_Control *****************
  7127 ;; Defined at:
  7128 ;;		line 312 in file "LED.c"
  7129 ;; Parameters:    Size  Location     Type
  7130 ;;  color           1    wreg     enum E10511
  7131 ;;  diode           2    5[COMRAM] unsigned int 
  7132 ;; Auto vars:     Size  Location     Type
  7133 ;;  color           1    9[COMRAM] enum E10511
  7134 ;;  cos             2    0        unsigned int 
  7135 ;; Return value:  Size  Location     Type
  7136 ;;                  1    wreg      unsigned char 
  7137 ;; Registers used:
  7138 ;;		wreg, status,2, status,0
  7139 ;; Tracked objects:
  7140 ;;		On entry : 0/0
  7141 ;;		On exit  : 0/0
  7142 ;;		Unchanged: 0/0
  7143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7144 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7145 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7147 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7148 ;;Total ram usage:        5 bytes
  7149 ;; Hardware stack levels used:    1
  7150 ;; Hardware stack levels required when called:    3
  7151 ;; This function calls:
  7152 ;;		Nothing
  7153 ;; This function is called by:
  7154 ;;		_LED_Error
  7155 ;;		_LED_Update
  7156 ;;		_LED_Light_Pos
  7157 ;;		_INI_LED_Start
  7158 ;;		_LED_Clear
  7159 ;; This function uses a non-reentrant model
  7160 ;;
  7161                           
  7162                           	psect	text53
  7163  001816                     __ptext53:
  7164                           	opt callstack 0
  7165  001816                     _LED_Control:
  7166                           	opt callstack 24
  7167                           
  7168                           ;incstack = 0
  7169                           ;LED_Control@color stored from wreg
  7170  001816  6E0A               	movwf	LED_Control@color,c
  7171                           
  7172                           ;LED.c: 315: if(color == RED)
  7173  001818  500A               	movf	LED_Control@color,w,c
  7174  00181A  A4D8               	btfss	status,2,c
  7175  00181C  D050               	goto	l430
  7176                           
  7177                           ;LED.c: 316: {;LED.c: 318: if((diode & 0b0000000001)== 0b0000000001)
  7178  00181E  A006               	btfss	LED_Control@diode,0,c
  7179  001820  D003               	goto	l4167
  7180                           
  7181                           ;LED.c: 319: {;LED.c: 320: LATD = LATD | ~0b11101111;
  7182  001822  508C               	movf	3980,w,c	;volatile
  7183  001824  0910               	iorlw	16
  7184  001826  D002               	goto	L4
  7185  001828                     l4167:
  7186                           
  7187                           ;LED.c: 322: else;LED.c: 323: {;LED.c: 324: LATD = LATD &0b11101111;
  7188  001828  508C               	movf	3980,w,c	;volatile
  7189  00182A  0BEF               	andlw	239
  7190  00182C                     L4:
  7191  00182C  6E8C               	movwf	3980,c	;volatile
  7192                           
  7193                           ;LED.c: 325: };LED.c: 327: if((diode & 0b0000000010) == 0b0000000010)
  7194  00182E  A206               	btfss	LED_Control@diode,1,c
  7195  001830  D003               	goto	l4173
  7196                           
  7197                           ;LED.c: 328: {;LED.c: 329: LATD = LATD | ~0b10111111;
  7198  001832  508C               	movf	3980,w,c	;volatile
  7199  001834  0940               	iorlw	64
  7200  001836  D002               	goto	L5
  7201  001838                     l4173:
  7202                           
  7203                           ;LED.c: 331: else;LED.c: 332: {;LED.c: 333: LATD = LATD & 0b10111111;
  7204  001838  508C               	movf	3980,w,c	;volatile
  7205  00183A  0BBF               	andlw	191
  7206  00183C                     L5:
  7207  00183C  6E8C               	movwf	3980,c	;volatile
  7208                           
  7209                           ;LED.c: 334: };LED.c: 336: if((diode & 0b0000000100) == 0b0000000100)
  7210  00183E  A406               	btfss	LED_Control@diode,2,c
  7211  001840  D003               	goto	l4179
  7212                           
  7213                           ;LED.c: 337: {;LED.c: 338: LATB = LATB | ~0b11111110;
  7214  001842  508A               	movf	3978,w,c	;volatile
  7215  001844  0901               	iorlw	1
  7216  001846  D002               	goto	L6
  7217  001848                     l4179:
  7218                           
  7219                           ;LED.c: 340: else;LED.c: 341: {;LED.c: 342: LATB = LATB & 0b11111110;
  7220  001848  508A               	movf	3978,w,c	;volatile
  7221  00184A  0BFE               	andlw	254
  7222  00184C                     L6:
  7223  00184C  6E8A               	movwf	3978,c	;volatile
  7224                           
  7225                           ;LED.c: 343: };LED.c: 346: if((diode & 0b0000001000) == 0b0000001000)
  7226  00184E  A606               	btfss	LED_Control@diode,3,c
  7227  001850  D003               	goto	l4185
  7228                           
  7229                           ;LED.c: 347: {;LED.c: 348: LATA = LATA | ~0b11111101;
  7230  001852  5089               	movf	3977,w,c	;volatile
  7231  001854  0902               	iorlw	2
  7232  001856  D002               	goto	L7
  7233  001858                     l4185:
  7234                           
  7235                           ;LED.c: 350: else;LED.c: 351: {;LED.c: 352: LATA = LATA & 0b11111101;
  7236  001858  5089               	movf	3977,w,c	;volatile
  7237  00185A  0BFD               	andlw	253
  7238  00185C                     L7:
  7239  00185C  6E89               	movwf	3977,c	;volatile
  7240                           
  7241                           ;LED.c: 353: };LED.c: 356: if((diode & 0b0000010000) == 0b0000010000)
  7242  00185E  A806               	btfss	LED_Control@diode,4,c
  7243  001860  D003               	goto	l4191
  7244                           
  7245                           ;LED.c: 357: {;LED.c: 358: LATA = LATA | ~0b11110111;
  7246  001862  5089               	movf	3977,w,c	;volatile
  7247  001864  0908               	iorlw	8
  7248  001866  D002               	goto	L8
  7249  001868                     l4191:
  7250                           
  7251                           ;LED.c: 360: else;LED.c: 361: {;LED.c: 362: LATA = LATA & 0b11110111;
  7252  001868  5089               	movf	3977,w,c	;volatile
  7253  00186A  0BF7               	andlw	247
  7254  00186C                     L8:
  7255  00186C  6E89               	movwf	3977,c	;volatile
  7256                           
  7257                           ;LED.c: 363: };LED.c: 366: if((diode & 0b0000100000) == 0b0000100000)
  7258  00186E  AA06               	btfss	LED_Control@diode,5,c
  7259  001870  D003               	goto	l4197
  7260                           
  7261                           ;LED.c: 367: {;LED.c: 368: LATA = LATA | ~0b11011111;
  7262  001872  5089               	movf	3977,w,c	;volatile
  7263  001874  0920               	iorlw	32
  7264  001876  D002               	goto	L9
  7265  001878                     l4197:
  7266                           
  7267                           ;LED.c: 370: else;LED.c: 371: {;LED.c: 372: LATA = LATA & 0b11011111;
  7268  001878  5089               	movf	3977,w,c	;volatile
  7269  00187A  0BDF               	andlw	223
  7270  00187C                     L9:
  7271  00187C  6E89               	movwf	3977,c	;volatile
  7272                           
  7273                           ;LED.c: 373: };LED.c: 375: if((diode & 0b0001000000) == 0b0001000000)
  7274  00187E  AC06               	btfss	LED_Control@diode,6,c
  7275  001880  D003               	goto	l4203
  7276                           
  7277                           ;LED.c: 376: {;LED.c: 377: LATE = LATE | ~0b11111101;
  7278  001882  508D               	movf	3981,w,c	;volatile
  7279  001884  0902               	iorlw	2
  7280  001886  D002               	goto	L10
  7281  001888                     l4203:
  7282                           
  7283                           ;LED.c: 379: else;LED.c: 380: {;LED.c: 381: LATE = LATE & 0b11111101;
  7284  001888  508D               	movf	3981,w,c	;volatile
  7285  00188A  0BFD               	andlw	253
  7286  00188C                     L10:
  7287  00188C  6E8D               	movwf	3981,c	;volatile
  7288                           
  7289                           ;LED.c: 382: };LED.c: 384: if((diode & 0b0010000000) == 0b0010000000)
  7290  00188E  AE06               	btfss	LED_Control@diode,7,c
  7291  001890  D003               	goto	l4209
  7292                           
  7293                           ;LED.c: 385: {;LED.c: 386: LATA = LATA | ~0b01111111;
  7294  001892  5089               	movf	3977,w,c	;volatile
  7295  001894  0980               	iorlw	128
  7296  001896  D002               	goto	L11
  7297  001898                     l4209:
  7298                           
  7299                           ;LED.c: 388: else;LED.c: 389: {;LED.c: 390: LATA = LATA & 0b01111111;
  7300  001898  5089               	movf	3977,w,c	;volatile
  7301  00189A  0B7F               	andlw	127
  7302  00189C                     L11:
  7303  00189C  6E89               	movwf	3977,c	;volatile
  7304                           
  7305                           ;LED.c: 391: };LED.c: 394: if((diode & 0b0100000000) == 0b0100000000)
  7306  00189E  A007               	btfss	LED_Control@diode+1,0,c
  7307  0018A0  D003               	goto	l4215
  7308                           
  7309                           ;LED.c: 395: {;LED.c: 396: LATD = LATD | ~0b11111110;
  7310  0018A2  508C               	movf	3980,w,c	;volatile
  7311  0018A4  0901               	iorlw	1
  7312  0018A6  D002               	goto	L12
  7313  0018A8                     l4215:
  7314                           
  7315                           ;LED.c: 398: else;LED.c: 399: {;LED.c: 400: LATD = LATD & 0b11111110;
  7316  0018A8  508C               	movf	3980,w,c	;volatile
  7317  0018AA  0BFE               	andlw	254
  7318  0018AC                     L12:
  7319  0018AC  6E8C               	movwf	3980,c	;volatile
  7320                           
  7321                           ;LED.c: 401: };LED.c: 403: if((diode & 0b1000000000) == 0b1000000000)
  7322  0018AE  A207               	btfss	LED_Control@diode+1,1,c
  7323  0018B0  D003               	goto	l4221
  7324                           
  7325                           ;LED.c: 404: {;LED.c: 405: LATD = LATD | ~0b11111011;
  7326  0018B2  508C               	movf	3980,w,c	;volatile
  7327  0018B4  0904               	iorlw	4
  7328  0018B6  D002               	goto	L13
  7329  0018B8                     l4221:
  7330                           
  7331                           ;LED.c: 407: else;LED.c: 408: {;LED.c: 409: LATD = LATD & 0b11111011;
  7332  0018B8  508C               	movf	3980,w,c	;volatile
  7333  0018BA  0BFB               	andlw	251
  7334  0018BC                     L13:
  7335  0018BC  6E8C               	movwf	3980,c	;volatile
  7336  0018BE                     l430:
  7337                           
  7338                           ;LED.c: 410: };LED.c: 412: };LED.c: 414: if(color == GREEN)
  7339  0018BE  040A               	decf	LED_Control@color,w,c
  7340  0018C0  A4D8               	btfss	status,2,c
  7341  0018C2  0012               	return	
  7342                           
  7343                           ;LED.c: 415: {;LED.c: 417: if((diode & 0b0000000001) == 0b0000000001)
  7344  0018C4  A006               	btfss	LED_Control@diode,0,c
  7345  0018C6  D003               	goto	l4227
  7346                           
  7347                           ;LED.c: 418: {;LED.c: 419: LATD = LATD | ~0b11011111;
  7348  0018C8  508C               	movf	3980,w,c	;volatile
  7349  0018CA  0920               	iorlw	32
  7350  0018CC  D002               	goto	L14
  7351  0018CE                     l4227:
  7352                           
  7353                           ;LED.c: 421: else;LED.c: 422: {;LED.c: 423: LATD = LATD & 0b11011111;
  7354  0018CE  508C               	movf	3980,w,c	;volatile
  7355  0018D0  0BDF               	andlw	223
  7356  0018D2                     L14:
  7357  0018D2  6E8C               	movwf	3980,c	;volatile
  7358                           
  7359                           ;LED.c: 424: };LED.c: 427: if((diode & 0b0000000010) == 0b0000000010)
  7360  0018D4  A206               	btfss	LED_Control@diode,1,c
  7361  0018D6  D003               	goto	l4233
  7362                           
  7363                           ;LED.c: 428: {;LED.c: 429: LATD = LATD | ~0b01111111;
  7364  0018D8  508C               	movf	3980,w,c	;volatile
  7365  0018DA  0980               	iorlw	128
  7366  0018DC  D002               	goto	L15
  7367  0018DE                     l4233:
  7368                           
  7369                           ;LED.c: 431: else;LED.c: 432: {;LED.c: 433: LATD = LATD & 0b01111111;
  7370  0018DE  508C               	movf	3980,w,c	;volatile
  7371  0018E0  0B7F               	andlw	127
  7372  0018E2                     L15:
  7373  0018E2  6E8C               	movwf	3980,c	;volatile
  7374                           
  7375                           ;LED.c: 434: };LED.c: 437: if((diode & 0b0000000100) == 0b0000000100)
  7376  0018E4  A406               	btfss	LED_Control@diode,2,c
  7377  0018E6  D003               	goto	l4239
  7378                           
  7379                           ;LED.c: 438: {;LED.c: 439: LATB = LATB | ~0b11111101;
  7380  0018E8  508A               	movf	3978,w,c	;volatile
  7381  0018EA  0902               	iorlw	2
  7382  0018EC  D002               	goto	L16
  7383  0018EE                     l4239:
  7384                           
  7385                           ;LED.c: 441: else;LED.c: 442: {;LED.c: 443: LATB = LATB & 0b11111101;
  7386  0018EE  508A               	movf	3978,w,c	;volatile
  7387  0018F0  0BFD               	andlw	253
  7388  0018F2                     L16:
  7389  0018F2  6E8A               	movwf	3978,c	;volatile
  7390                           
  7391                           ;LED.c: 444: };LED.c: 446: if((diode & 0b0000001000) == 0b0000001000)
  7392  0018F4  A606               	btfss	LED_Control@diode,3,c
  7393  0018F6  D003               	goto	l4245
  7394                           
  7395                           ;LED.c: 447: {;LED.c: 448: LATA = LATA | ~0b11111011;
  7396  0018F8  5089               	movf	3977,w,c	;volatile
  7397  0018FA  0904               	iorlw	4
  7398  0018FC  D002               	goto	L17
  7399  0018FE                     l4245:
  7400                           
  7401                           ;LED.c: 450: else;LED.c: 451: {;LED.c: 452: LATA = LATA & 0b11111011;
  7402  0018FE  5089               	movf	3977,w,c	;volatile
  7403  001900  0BFB               	andlw	251
  7404  001902                     L17:
  7405  001902  6E89               	movwf	3977,c	;volatile
  7406                           
  7407                           ;LED.c: 453: };LED.c: 456: if((diode & 0b0000010000) == 0b0000010000)
  7408  001904  A806               	btfss	LED_Control@diode,4,c
  7409  001906  D003               	goto	l4251
  7410                           
  7411                           ;LED.c: 457: {;LED.c: 458: LATA = LATA | ~0b11101111;
  7412  001908  5089               	movf	3977,w,c	;volatile
  7413  00190A  0910               	iorlw	16
  7414  00190C  D002               	goto	L18
  7415  00190E                     l4251:
  7416                           
  7417                           ;LED.c: 460: else;LED.c: 461: {;LED.c: 462: LATA = LATA & 0b11101111;
  7418  00190E  5089               	movf	3977,w,c	;volatile
  7419  001910  0BEF               	andlw	239
  7420  001912                     L18:
  7421  001912  6E89               	movwf	3977,c	;volatile
  7422                           
  7423                           ;LED.c: 463: };LED.c: 466: if((diode & 0b0000100000) == 0b0000100000)
  7424  001914  AA06               	btfss	LED_Control@diode,5,c
  7425  001916  D003               	goto	l4257
  7426                           
  7427                           ;LED.c: 467: {;LED.c: 468: LATE = LATE | ~0b11111110;
  7428  001918  508D               	movf	3981,w,c	;volatile
  7429  00191A  0901               	iorlw	1
  7430  00191C  D002               	goto	L19
  7431  00191E                     l4257:
  7432                           
  7433                           ;LED.c: 470: else;LED.c: 471: {;LED.c: 472: LATE = LATE & 0b11111110;
  7434  00191E  508D               	movf	3981,w,c	;volatile
  7435  001920  0BFE               	andlw	254
  7436  001922                     L19:
  7437  001922  6E8D               	movwf	3981,c	;volatile
  7438                           
  7439                           ;LED.c: 473: };LED.c: 476: if((diode & 0b0001000000) == 0b0001000000)
  7440  001924  AC06               	btfss	LED_Control@diode,6,c
  7441  001926  D003               	goto	l4263
  7442                           
  7443                           ;LED.c: 477: {;LED.c: 478: LATE = LATE | ~0b11111011;
  7444  001928  508D               	movf	3981,w,c	;volatile
  7445  00192A  0904               	iorlw	4
  7446  00192C  D002               	goto	L20
  7447  00192E                     l4263:
  7448                           
  7449                           ;LED.c: 480: else;LED.c: 481: {;LED.c: 482: LATE = LATE & 0b11111011;
  7450  00192E  508D               	movf	3981,w,c	;volatile
  7451  001930  0BFB               	andlw	251
  7452  001932                     L20:
  7453  001932  6E8D               	movwf	3981,c	;volatile
  7454                           
  7455                           ;LED.c: 483: };LED.c: 485: if((diode & 0b0010000000) == 0b0010000000)
  7456  001934  AE06               	btfss	LED_Control@diode,7,c
  7457  001936  D003               	goto	l4269
  7458                           
  7459                           ;LED.c: 486: {;LED.c: 487: LATA = LATA | ~0b10111111;
  7460  001938  5089               	movf	3977,w,c	;volatile
  7461  00193A  0940               	iorlw	64
  7462  00193C  D002               	goto	L21
  7463  00193E                     l4269:
  7464                           
  7465                           ;LED.c: 489: else;LED.c: 490: {;LED.c: 491: LATA = LATA & 0b10111111;
  7466  00193E  5089               	movf	3977,w,c	;volatile
  7467  001940  0BBF               	andlw	191
  7468  001942                     L21:
  7469  001942  6E89               	movwf	3977,c	;volatile
  7470                           
  7471                           ;LED.c: 492: };LED.c: 494: if((diode & 0b0100000000) == 0b0100000000)
  7472  001944  A007               	btfss	LED_Control@diode+1,0,c
  7473  001946  D003               	goto	l4275
  7474                           
  7475                           ;LED.c: 495: {;LED.c: 496: LATD = LATD | ~0b11111101;
  7476  001948  508C               	movf	3980,w,c	;volatile
  7477  00194A  0902               	iorlw	2
  7478  00194C  D002               	goto	L22
  7479  00194E                     l4275:
  7480                           
  7481                           ;LED.c: 498: else;LED.c: 499: {;LED.c: 500: LATD = LATD & 0b11111101;
  7482  00194E  508C               	movf	3980,w,c	;volatile
  7483  001950  0BFD               	andlw	253
  7484  001952                     L22:
  7485  001952  6E8C               	movwf	3980,c	;volatile
  7486                           
  7487                           ;LED.c: 501: };LED.c: 503: if((diode & 0b1000000000) == 0b1000000000)
  7488  001954  A207               	btfss	LED_Control@diode+1,1,c
  7489  001956  D004               	goto	l4281
  7490                           
  7491                           ;LED.c: 504: {;LED.c: 505: LATD = LATD | ~0b11110111;
  7492  001958  508C               	movf	3980,w,c	;volatile
  7493  00195A  0908               	iorlw	8
  7494  00195C  6E8C               	movwf	3980,c	;volatile
  7495                           
  7496                           ;LED.c: 506: }
  7497  00195E  0012               	return	
  7498  001960                     l4281:
  7499                           
  7500                           ;LED.c: 507: else;LED.c: 508: {;LED.c: 509: LATD = LATD &0b11110111;
  7501  001960  508C               	movf	3980,w,c	;volatile
  7502  001962  0BF7               	andlw	247
  7503  001964  6E8C               	movwf	3980,c	;volatile
  7504  001966  0012               	return		;funcret
  7505  001968                     __end_of_LED_Control:
  7506                           	opt callstack 0
  7507                           
  7508 ;; *************** function _INI_GlobalInterrupt *****************
  7509 ;; Defined at:
  7510 ;;		line 78 in file "INI.c"
  7511 ;; Parameters:    Size  Location     Type
  7512 ;;		None
  7513 ;; Auto vars:     Size  Location     Type
  7514 ;;		None
  7515 ;; Return value:  Size  Location     Type
  7516 ;;                  1    wreg      void 
  7517 ;; Registers used:
  7518 ;;		None
  7519 ;; Tracked objects:
  7520 ;;		On entry : 0/0
  7521 ;;		On exit  : 0/0
  7522 ;;		Unchanged: 0/0
  7523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7528 ;;Total ram usage:        0 bytes
  7529 ;; Hardware stack levels used:    1
  7530 ;; Hardware stack levels required when called:    3
  7531 ;; This function calls:
  7532 ;;		Nothing
  7533 ;; This function is called by:
  7534 ;;		_INI_All
  7535 ;; This function uses a non-reentrant model
  7536 ;;
  7537                           
  7538                           	psect	text54
  7539  002B48                     __ptext54:
  7540                           	opt callstack 0
  7541  002B48                     _INI_GlobalInterrupt:
  7542                           	opt callstack 26
  7543                           
  7544                           ;INI.c: 80: INTCONbits.GIEH=1;
  7545                           
  7546                           ;incstack = 0
  7547  002B48  8EF2               	bsf	4082,7,c	;volatile
  7548                           
  7549                           ;INI.c: 81: INTCONbits.GIEL=1;
  7550  002B4A  8CF2               	bsf	4082,6,c	;volatile
  7551                           
  7552                           ;INI.c: 82: RCONbits.IPEN=1;
  7553  002B4C  8ED0               	bsf	4048,7,c	;volatile
  7554                           
  7555                           ;INI.c: 83: IPEN =1;
  7556  002B4E  8ED0               	bsf	4048,7,c	;volatile
  7557                           
  7558                           ;INI.c: 85: PEIE=1;
  7559  002B50  8CF2               	bsf	4082,6,c	;volatile
  7560                           
  7561                           ;INI.c: 86: TMR1IP = 0;
  7562  002B52  909F               	bcf	3999,0,c	;volatile
  7563  002B54  0012               	return		;funcret
  7564  002B56                     __end_of_INI_GlobalInterrupt:
  7565                           	opt callstack 0
  7566                           
  7567 ;; *************** function _CAN_Setup *****************
  7568 ;; Defined at:
  7569 ;;		line 24 in file "CAN.c"
  7570 ;; Parameters:    Size  Location     Type
  7571 ;;		None
  7572 ;; Auto vars:     Size  Location     Type
  7573 ;;		None
  7574 ;; Return value:  Size  Location     Type
  7575 ;;                  1    wreg      void 
  7576 ;; Registers used:
  7577 ;;		wreg, status,2, status,0, cstack
  7578 ;; Tracked objects:
  7579 ;;		On entry : 0/0
  7580 ;;		On exit  : 0/0
  7581 ;;		Unchanged: 0/0
  7582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7585 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7586 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7587 ;;Total ram usage:        1 bytes
  7588 ;; Hardware stack levels used:    1
  7589 ;; Hardware stack levels required when called:    5
  7590 ;; This function calls:
  7591 ;;		_CAN_SetupClock
  7592 ;;		_CAN_SetupMask
  7593 ;; This function is called by:
  7594 ;;		_INI_All
  7595 ;; This function uses a non-reentrant model
  7596 ;;
  7597                           
  7598                           	psect	text55
  7599  00258E                     __ptext55:
  7600                           	opt callstack 0
  7601  00258E                     _CAN_Setup:
  7602                           	opt callstack 24
  7603                           
  7604                           ;CAN.c: 29: CANCON = 0x80;
  7605                           
  7606                           ;incstack = 0
  7607  00258E  0E80               	movlw	128
  7608  002590  6E6F               	movwf	3951,c	;volatile
  7609  002592                     l4721:
  7610  002592  506E               	movf	3950,w,c	;volatile
  7611  002594  0BE0               	andlw	224
  7612  002596  0A80               	xorlw	128
  7613  002598  A4D8               	btfss	status,2,c
  7614  00259A  D7FB               	goto	l4721
  7615                           
  7616                           ;CAN.c: 33: };CAN.c: 35: BSEL0 = 0;
  7617  00259C  0E00               	movlw	0
  7618  00259E  010D               	movlb	13	; () banked
  7619  0025A0  6FF8               	movwf	248,b	;volatile
  7620                           
  7621                           ;CAN.c: 36: TXB0CON = 0;
  7622  0025A2  0E00               	movlw	0
  7623  0025A4  010F               	movlb	15	; () banked
  7624  0025A6  6F40               	movwf	64,b	;volatile
  7625                           
  7626                           ;CAN.c: 37: RXB0CON = 0;
  7627  0025A8  0E00               	movlw	0
  7628  0025AA  6E60               	movwf	3936,c	;volatile
  7629                           
  7630                           ;CAN.c: 38: RXB1CON = 0;
  7631  0025AC  0E00               	movlw	0
  7632  0025AE  6F50               	movwf	80,b	;volatile
  7633                           
  7634                           ;CAN.c: 39: B0CON = 0;
  7635  0025B0  0E00               	movlw	0
  7636  0025B2  010E               	movlb	14	; () banked
  7637  0025B4  6F20               	movwf	32,b	;volatile
  7638                           
  7639                           ;CAN.c: 40: B1CON = 0;
  7640  0025B6  0E00               	movlw	0
  7641  0025B8  6F30               	movwf	48,b	;volatile
  7642                           
  7643                           ;CAN.c: 41: PIE3 = 0;
  7644  0025BA  0E00               	movlw	0
  7645  0025BC  6EA3               	movwf	4003,c	;volatile
  7646                           
  7647                           ; BSR set to: 14
  7648                           ;CAN.c: 42: IPR3 = 0xFF;
  7649  0025BE  68A5               	setf	4005,c	;volatile
  7650                           
  7651                           ;CAN.c: 43: PIR3 = 0x00;
  7652  0025C0  0E00               	movlw	0
  7653  0025C2  6EA4               	movwf	4004,c	;volatile
  7654                           
  7655                           ;CAN.c: 44: BIE0 = 0;
  7656  0025C4  0E00               	movlw	0
  7657  0025C6  010D               	movlb	13	; () banked
  7658  0025C8  6FFA               	movwf	250,b	;volatile
  7659                           
  7660                           ;CAN.c: 48: ECANCON = 0x90;
  7661  0025CA  0E90               	movlw	144
  7662  0025CC  6E77               	movwf	3959,c	;volatile
  7663                           
  7664                           ; BSR set to: 13
  7665                           ;CAN.c: 51: CAN_SetupClock();
  7666  0025CE  EC1D  F015         	call	_CAN_SetupClock	;wreg free
  7667                           
  7668                           ;CAN.c: 54: CAN_SetupMask();
  7669  0025D2  EC20  F012         	call	_CAN_SetupMask	;wreg free
  7670                           
  7671                           ;CAN.c: 56: CIOCON = 0xff;
  7672  0025D6  6873               	setf	3955,c	;volatile
  7673                           
  7674                           ;CAN.c: 62: CANCON = 0x00;
  7675  0025D8  0E00               	movlw	0
  7676  0025DA  6E6F               	movwf	3951,c	;volatile
  7677  0025DC                     l4733:
  7678  0025DC  CF6E F006          	movff	3950,??_CAN_Setup	;volatile
  7679  0025E0  0EE0               	movlw	224
  7680  0025E2  1606               	andwf	??_CAN_Setup,f,c
  7681  0025E4  B4D8               	btfsc	status,2,c
  7682  0025E6  0012               	return	
  7683  0025E8  D7F9               	goto	l4733
  7684  0025EA                     __end_of_CAN_Setup:
  7685                           	opt callstack 0
  7686                           
  7687 ;; *************** function _CAN_SetupMask *****************
  7688 ;; Defined at:
  7689 ;;		line 84 in file "CAN.c"
  7690 ;; Parameters:    Size  Location     Type
  7691 ;;		None
  7692 ;; Auto vars:     Size  Location     Type
  7693 ;;		None
  7694 ;; Return value:  Size  Location     Type
  7695 ;;                  1    wreg      void 
  7696 ;; Registers used:
  7697 ;;		wreg, status,2, cstack
  7698 ;; Tracked objects:
  7699 ;;		On entry : 0/0
  7700 ;;		On exit  : 0/0
  7701 ;;		Unchanged: 0/0
  7702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7706 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7707 ;;Total ram usage:        0 bytes
  7708 ;; Hardware stack levels used:    1
  7709 ;; Hardware stack levels required when called:    4
  7710 ;; This function calls:
  7711 ;;		_CAN_SetupFilter_Ne
  7712 ;; This function is called by:
  7713 ;;		_CAN_Setup
  7714 ;; This function uses a non-reentrant model
  7715 ;;
  7716                           
  7717                           	psect	text56
  7718  002440                     __ptext56:
  7719                           	opt callstack 0
  7720  002440                     _CAN_SetupMask:
  7721                           	opt callstack 24
  7722                           
  7723                           ;CAN.c: 86: MSEL0 = 0x50;
  7724                           
  7725                           ;incstack = 0
  7726  002440  0E50               	movlw	80
  7727  002442  010D               	movlb	13	; () banked
  7728  002444  6FF0               	movwf	240,b	;volatile
  7729                           
  7730                           ;CAN.c: 87: MSEL1 = 0x55;
  7731  002446  0E55               	movlw	85
  7732  002448  6FF1               	movwf	241,b	;volatile
  7733                           
  7734                           ;CAN.c: 88: MSEL2 = 0x55;
  7735  00244A  0E55               	movlw	85
  7736  00244C  6FF2               	movwf	242,b	;volatile
  7737                           
  7738                           ;CAN.c: 89: MSEL3 = 0x55;
  7739  00244E  0E55               	movlw	85
  7740  002450  6FF3               	movwf	243,b	;volatile
  7741                           
  7742                           ;CAN.c: 92: RXM0SIDH = 0b00000000;
  7743  002452  0E00               	movlw	0
  7744  002454  010F               	movlb	15	; () banked
  7745  002456  6F18               	movwf	24,b	;volatile
  7746                           
  7747                           ;CAN.c: 93: RXM0SIDL = 0b00001011;
  7748  002458  0E0B               	movlw	11
  7749  00245A  6F19               	movwf	25,b	;volatile
  7750                           
  7751                           ; BSR set to: 15
  7752                           ;CAN.c: 94: RXM0EIDH = 0xFF;
  7753  00245C  691A               	setf	26,b	;volatile
  7754                           
  7755                           ; BSR set to: 15
  7756                           ;CAN.c: 95: RXM0EIDL = 0xFF;
  7757  00245E  691B               	setf	27,b	;volatile
  7758                           
  7759                           ; BSR set to: 15
  7760                           ;CAN.c: 98: RXM1SIDH = 0xFF;
  7761  002460  691C               	setf	28,b	;volatile
  7762                           
  7763                           ; BSR set to: 15
  7764                           ;CAN.c: 99: RXM1SIDL = 0xFF;
  7765  002462  691D               	setf	29,b	;volatile
  7766                           
  7767                           ; BSR set to: 15
  7768                           ;CAN.c: 100: RXM1EIDH = 0xFF;
  7769  002464  691E               	setf	30,b	;volatile
  7770                           
  7771                           ; BSR set to: 15
  7772                           ;CAN.c: 101: RXM1EIDL = 0xFF;
  7773  002466  691F               	setf	31,b	;volatile
  7774                           
  7775                           ;CAN.c: 104: RXM0SIDH = 0x00;
  7776  002468  0E00               	movlw	0
  7777  00246A  6F18               	movwf	24,b	;volatile
  7778                           
  7779                           ;CAN.c: 105: RXM0SIDL = 0x00;
  7780  00246C  0E00               	movlw	0
  7781  00246E  6F19               	movwf	25,b	;volatile
  7782                           
  7783                           ;CAN.c: 110: RXF0SIDH = 0x00;
  7784  002470  0E00               	movlw	0
  7785  002472  6F00               	movwf	0,b	;volatile
  7786                           
  7787                           ;CAN.c: 111: RXF0SIDL = 0x01;
  7788  002474  0E01               	movlw	1
  7789  002476  6F01               	movwf	1,b	;volatile
  7790                           
  7791                           ; BSR set to: 15
  7792                           ;CAN.c: 112: RXF0SIDLbits.EXIDEN = 1;
  7793  002478  8701               	bsf	1,3,b	;volatile
  7794                           
  7795                           ;CAN.c: 113: RXF0EIDH = (BYTE)(DaneCan.adresCAN>>8);
  7796  00247A  0100               	movlb	0	; () banked
  7797  00247C  51CE               	movf	(_DaneCan+3)& (0+255),w,b
  7798  00247E  010F               	movlb	15	; () banked
  7799  002480  6F02               	movwf	2,b	;volatile
  7800                           
  7801                           ; BSR set to: 15
  7802                           ;CAN.c: 115: RXF0EIDL = (BYTE)DaneCan.adresCAN;
  7803  002482  C0CD  FF03         	movff	_DaneCan+2,3843	;volatile
  7804                           
  7805                           ;CAN.c: 117: RXF1SIDH = 0x00;
  7806  002486  0E00               	movlw	0
  7807  002488  6F04               	movwf	4,b	;volatile
  7808                           
  7809                           ;CAN.c: 118: RXF1SIDL = 0x01;
  7810  00248A  0E01               	movlw	1
  7811  00248C  6F05               	movwf	5,b	;volatile
  7812                           
  7813                           ; BSR set to: 15
  7814                           ;CAN.c: 119: RXF1SIDLbits.EXIDEN = 1;
  7815  00248E  8705               	bsf	5,3,b	;volatile
  7816                           
  7817                           ;CAN.c: 120: RXF1EIDH = 0x7F;
  7818  002490  0E7F               	movlw	127
  7819  002492  6F06               	movwf	6,b	;volatile
  7820                           
  7821                           ; BSR set to: 15
  7822                           ;CAN.c: 121: RXF1EIDL = 0xFF;
  7823  002494  6907               	setf	7,b	;volatile
  7824                           
  7825                           ; BSR set to: 15
  7826                           ;CAN.c: 123: CAN_SetupFilter_Ne();
  7827  002496  EC9E  F010         	call	_CAN_SetupFilter_Ne	;wreg free
  7828                           
  7829                           ;CAN.c: 126: RXFBCON0 = 0b00000000;
  7830  00249A  0E00               	movlw	0
  7831  00249C  010D               	movlb	13	; () banked
  7832  00249E  6FE0               	movwf	224,b	;volatile
  7833                           
  7834                           ; BSR set to: 13
  7835                           ;CAN.c: 128: RXFBCON1 = 0b00010001;
  7836  0024A0  0E11               	movlw	17
  7837  0024A2  6FE1               	movwf	225,b	;volatile
  7838                           
  7839                           ; BSR set to: 13
  7840                           ;CAN.c: 130: RXFBCON2 = 0b00010001;
  7841  0024A4  0E11               	movlw	17
  7842  0024A6  6FE2               	movwf	226,b	;volatile
  7843                           
  7844                           ; BSR set to: 13
  7845                           ;CAN.c: 132: RXFBCON3 = 0b00010001;
  7846  0024A8  0E11               	movlw	17
  7847  0024AA  6FE3               	movwf	227,b	;volatile
  7848                           
  7849                           ; BSR set to: 13
  7850                           ;CAN.c: 134: RXFBCON4 = 0b00010001;
  7851  0024AC  0E11               	movlw	17
  7852  0024AE  6FE4               	movwf	228,b	;volatile
  7853                           
  7854                           ; BSR set to: 13
  7855                           ;CAN.c: 136: RXFCON0 = 0b11111111;
  7856  0024B0  69D4               	setf	212,b	;volatile
  7857                           
  7858                           ; BSR set to: 13
  7859                           ;CAN.c: 137: RXFCON1 = 0b00000011;
  7860  0024B2  0E03               	movlw	3
  7861  0024B4  6FD5               	movwf	213,b	;volatile
  7862                           
  7863                           ; BSR set to: 13
  7864  0024B6  0012               	return		;funcret
  7865  0024B8                     __end_of_CAN_SetupMask:
  7866                           	opt callstack 0
  7867                           
  7868 ;; *************** function _CAN_SetupFilter_Ne *****************
  7869 ;; Defined at:
  7870 ;;		line 141 in file "CAN.c"
  7871 ;; Parameters:    Size  Location     Type
  7872 ;;		None
  7873 ;; Auto vars:     Size  Location     Type
  7874 ;;		None
  7875 ;; Return value:  Size  Location     Type
  7876 ;;                  1    wreg      void 
  7877 ;; Registers used:
  7878 ;;		wreg, status,2
  7879 ;; Tracked objects:
  7880 ;;		On entry : 0/0
  7881 ;;		On exit  : 0/0
  7882 ;;		Unchanged: 0/0
  7883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7888 ;;Total ram usage:        0 bytes
  7889 ;; Hardware stack levels used:    1
  7890 ;; Hardware stack levels required when called:    3
  7891 ;; This function calls:
  7892 ;;		Nothing
  7893 ;; This function is called by:
  7894 ;;		_CAN_SetupMask
  7895 ;;		_FRAME_AdressOfNeighbors
  7896 ;; This function uses a non-reentrant model
  7897 ;;
  7898                           
  7899                           	psect	text57
  7900  00213C                     __ptext57:
  7901                           	opt callstack 0
  7902  00213C                     _CAN_SetupFilter_Ne:
  7903                           	opt callstack 24
  7904                           
  7905                           ;CAN.c: 145: RXF2SIDH = 0;
  7906                           
  7907                           ; BSR set to: 13
  7908                           ;incstack = 0
  7909  00213C  0E00               	movlw	0
  7910  00213E  010F               	movlb	15	; () banked
  7911  002140  6F08               	movwf	8,b	;volatile
  7912                           
  7913                           ;CAN.c: 146: RXF2SIDL = 0x20;
  7914  002142  0E20               	movlw	32
  7915  002144  6F09               	movwf	9,b	;volatile
  7916                           
  7917                           ; BSR set to: 15
  7918                           ;CAN.c: 147: RXF2SIDLbits.EXIDEN = 1;
  7919  002146  8709               	bsf	9,3,b	;volatile
  7920                           
  7921                           ;CAN.c: 148: RXF2EIDH = (BYTE)(NeightAdress1>>8);
  7922  002148  5033               	movf	_NeightAdress1+1,w,c	;volatile
  7923  00214A  6F0A               	movwf	10,b	;volatile
  7924                           
  7925                           ; BSR set to: 15
  7926                           ;CAN.c: 149: RXF2EIDL = (BYTE)(NeightAdress1 & 0xFF);
  7927  00214C  C032  FF0B         	movff	_NeightAdress1,3851	;volatile
  7928                           
  7929                           ;CAN.c: 152: RXF3SIDH = 0;
  7930  002150  0E00               	movlw	0
  7931  002152  6F0C               	movwf	12,b	;volatile
  7932                           
  7933                           ;CAN.c: 153: RXF3SIDL = 0x20;
  7934  002154  0E20               	movlw	32
  7935  002156  6F0D               	movwf	13,b	;volatile
  7936                           
  7937                           ; BSR set to: 15
  7938                           ;CAN.c: 154: RXF3SIDLbits.EXIDEN = 1;
  7939  002158  870D               	bsf	13,3,b	;volatile
  7940                           
  7941                           ;CAN.c: 155: RXF3EIDH = (BYTE)(NeightAdress2>>8);
  7942  00215A  5047               	movf	_NeightAdress2+1,w,c	;volatile
  7943  00215C  6F0E               	movwf	14,b	;volatile
  7944                           
  7945                           ; BSR set to: 15
  7946                           ;CAN.c: 156: RXF3EIDL = (BYTE)(NeightAdress2 & 0xFF);
  7947  00215E  C046  FF0F         	movff	_NeightAdress2,3855	;volatile
  7948                           
  7949                           ;CAN.c: 158: RXF4SIDH = 0;
  7950  002162  0E00               	movlw	0
  7951  002164  6F10               	movwf	16,b	;volatile
  7952                           
  7953                           ;CAN.c: 159: RXF4SIDL = 0x20;
  7954  002166  0E20               	movlw	32
  7955  002168  6F11               	movwf	17,b	;volatile
  7956                           
  7957                           ; BSR set to: 15
  7958                           ;CAN.c: 160: RXF4SIDLbits.EXIDEN = 1;
  7959  00216A  8711               	bsf	17,3,b	;volatile
  7960                           
  7961                           ;CAN.c: 161: RXF4EIDH = (BYTE)(NeightAdress3>>8);
  7962  00216C  5031               	movf	_NeightAdress3+1,w,c	;volatile
  7963  00216E  6F12               	movwf	18,b	;volatile
  7964                           
  7965                           ; BSR set to: 15
  7966                           ;CAN.c: 162: RXF4EIDL = (BYTE)(NeightAdress3 & 0xFF);
  7967  002170  C030  FF13         	movff	_NeightAdress3,3859	;volatile
  7968                           
  7969                           ;CAN.c: 164: RXF5SIDH = 0;
  7970  002174  0E00               	movlw	0
  7971  002176  6F14               	movwf	20,b	;volatile
  7972                           
  7973                           ;CAN.c: 165: RXF5SIDL = 0x20;
  7974  002178  0E20               	movlw	32
  7975  00217A  6F15               	movwf	21,b	;volatile
  7976                           
  7977                           ; BSR set to: 15
  7978                           ;CAN.c: 166: RXF5SIDLbits.EXIDEN = 1;
  7979  00217C  8715               	bsf	21,3,b	;volatile
  7980                           
  7981                           ;CAN.c: 167: RXF5EIDH = (BYTE)(NeightAdress4>>8);
  7982  00217E  502F               	movf	_NeightAdress4+1,w,c	;volatile
  7983  002180  6F16               	movwf	22,b	;volatile
  7984                           
  7985                           ; BSR set to: 15
  7986                           ;CAN.c: 168: RXF5EIDL = (BYTE)(NeightAdress4 & 0xFF);
  7987  002182  C02E  FF17         	movff	_NeightAdress4,3863	;volatile
  7988                           
  7989                           ;CAN.c: 170: RXF6SIDH = 0;
  7990  002186  0E00               	movlw	0
  7991  002188  010D               	movlb	13	; () banked
  7992  00218A  6F60               	movwf	96,b	;volatile
  7993                           
  7994                           ;CAN.c: 171: RXF6SIDL = 0x20;
  7995  00218C  0E20               	movlw	32
  7996  00218E  6F61               	movwf	97,b	;volatile
  7997                           
  7998                           ; BSR set to: 13
  7999                           ;CAN.c: 172: RXF6SIDLbits.EXIDEN = 1;
  8000  002190  8761               	bsf	97,3,b	;volatile
  8001                           
  8002                           ;CAN.c: 173: RXF6EIDH = (BYTE)(NeightAdress5>>8);
  8003  002192  502D               	movf	_NeightAdress5+1,w,c	;volatile
  8004  002194  6F62               	movwf	98,b	;volatile
  8005                           
  8006                           ; BSR set to: 13
  8007                           ;CAN.c: 174: RXF6EIDL = (BYTE)(NeightAdress5 & 0xFF);
  8008  002196  C02C  FD63         	movff	_NeightAdress5,3427	;volatile
  8009                           
  8010                           ;CAN.c: 176: RXF7SIDH = 0;
  8011  00219A  0E00               	movlw	0
  8012  00219C  6F64               	movwf	100,b	;volatile
  8013                           
  8014                           ;CAN.c: 177: RXF7SIDL = 0x20;
  8015  00219E  0E20               	movlw	32
  8016  0021A0  6F65               	movwf	101,b	;volatile
  8017                           
  8018                           ; BSR set to: 13
  8019                           ;CAN.c: 178: RXF7SIDLbits.EXIDEN = 1;
  8020  0021A2  8765               	bsf	101,3,b	;volatile
  8021                           
  8022                           ;CAN.c: 179: RXF7EIDH = (BYTE)(NeightAdress6>>8);
  8023  0021A4  502B               	movf	_NeightAdress6+1,w,c	;volatile
  8024  0021A6  6F66               	movwf	102,b	;volatile
  8025                           
  8026                           ; BSR set to: 13
  8027                           ;CAN.c: 180: RXF7EIDL = (BYTE)(NeightAdress6 & 0xFF);
  8028  0021A8  C02A  FD67         	movff	_NeightAdress6,3431	;volatile
  8029                           
  8030                           ;CAN.c: 182: RXF8SIDH = 0;
  8031  0021AC  0E00               	movlw	0
  8032  0021AE  6F68               	movwf	104,b	;volatile
  8033                           
  8034                           ;CAN.c: 183: RXF8SIDL = 0x20;
  8035  0021B0  0E20               	movlw	32
  8036  0021B2  6F69               	movwf	105,b	;volatile
  8037                           
  8038                           ; BSR set to: 13
  8039                           ;CAN.c: 184: RXF8SIDLbits.EXIDEN = 1;
  8040  0021B4  8769               	bsf	105,3,b	;volatile
  8041                           
  8042                           ;CAN.c: 185: RXF8EIDH = (BYTE)(NeightAdress7>>8);
  8043  0021B6  5029               	movf	_NeightAdress7+1,w,c	;volatile
  8044  0021B8  6F6A               	movwf	106,b	;volatile
  8045                           
  8046                           ; BSR set to: 13
  8047                           ;CAN.c: 186: RXF8EIDL = (BYTE)(NeightAdress7 & 0xFF);
  8048  0021BA  C028  FD6B         	movff	_NeightAdress7,3435	;volatile
  8049                           
  8050                           ;CAN.c: 188: RXF9SIDH = 0;
  8051  0021BE  0E00               	movlw	0
  8052  0021C0  6F70               	movwf	112,b	;volatile
  8053                           
  8054                           ;CAN.c: 189: RXF9SIDL = 0x20;
  8055  0021C2  0E20               	movlw	32
  8056  0021C4  6F71               	movwf	113,b	;volatile
  8057                           
  8058                           ; BSR set to: 13
  8059                           ;CAN.c: 190: RXF9SIDLbits.EXIDEN = 1;
  8060  0021C6  8771               	bsf	113,3,b	;volatile
  8061                           
  8062                           ;CAN.c: 191: RXF9EIDH = (BYTE)(NeightAdress8>>8);
  8063  0021C8  5027               	movf	_NeightAdress8+1,w,c	;volatile
  8064  0021CA  6F72               	movwf	114,b	;volatile
  8065                           
  8066                           ; BSR set to: 13
  8067                           ;CAN.c: 192: RXF9EIDL = (BYTE)(NeightAdress8 & 0xFF);
  8068  0021CC  C026  FD73         	movff	_NeightAdress8,3443	;volatile
  8069                           
  8070                           ; BSR set to: 13
  8071  0021D0  0012               	return		;funcret
  8072  0021D2                     __end_of_CAN_SetupFilter_Ne:
  8073                           	opt callstack 0
  8074                           
  8075 ;; *************** function _CAN_SetupClock *****************
  8076 ;; Defined at:
  8077 ;;		line 200 in file "CAN.c"
  8078 ;; Parameters:    Size  Location     Type
  8079 ;;		None
  8080 ;; Auto vars:     Size  Location     Type
  8081 ;;		None
  8082 ;; Return value:  Size  Location     Type
  8083 ;;                  1    wreg      void 
  8084 ;; Registers used:
  8085 ;;		None
  8086 ;; Tracked objects:
  8087 ;;		On entry : 0/0
  8088 ;;		On exit  : 0/0
  8089 ;;		Unchanged: 0/0
  8090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8095 ;;Total ram usage:        0 bytes
  8096 ;; Hardware stack levels used:    1
  8097 ;; Hardware stack levels required when called:    3
  8098 ;; This function calls:
  8099 ;;		Nothing
  8100 ;; This function is called by:
  8101 ;;		_CAN_Setup
  8102 ;; This function uses a non-reentrant model
  8103 ;;
  8104                           
  8105                           	psect	text58
  8106  002A3A                     __ptext58:
  8107                           	opt callstack 0
  8108  002A3A                     _CAN_SetupClock:
  8109                           	opt callstack 25
  8110                           
  8111                           ;CAN.c: 202: BRGCON1bits.BRP0 = (((32000000/4)/(2*20*50000))-1) & 0b000001;
  8112                           
  8113                           ; BSR set to: 13
  8114                           ;incstack = 0
  8115  002A3A  8070               	bsf	3952,0,c	;volatile
  8116                           
  8117                           ;CAN.c: 203: BRGCON1bits.BRP1 = ((((32000000/4)/(2*20*50000))-1) >> 1) & 0b000001;
  8118  002A3C  8270               	bsf	3952,1,c	;volatile
  8119                           
  8120                           ;CAN.c: 204: BRGCON1bits.BRP2 = ((((32000000/4)/(2*20*50000))-1) >> 2) & 0b000001;
  8121  002A3E  9470               	bcf	3952,2,c	;volatile
  8122                           
  8123                           ;CAN.c: 205: BRGCON1bits.BRP3 = ((((32000000/4)/(2*20*50000))-1) >> 3) & 0b000001;
  8124  002A40  9670               	bcf	3952,3,c	;volatile
  8125                           
  8126                           ;CAN.c: 206: BRGCON1bits.BRP4 = ((((32000000/4)/(2*20*50000))-1) >> 4) & 0b000001;
  8127  002A42  9870               	bcf	3952,4,c	;volatile
  8128                           
  8129                           ;CAN.c: 207: BRGCON1bits.BRP5 = ((((32000000/4)/(2*20*50000))-1) >> 5) & 0b000001;
  8130  002A44  9A70               	bcf	3952,5,c	;volatile
  8131                           
  8132                           ;CAN.c: 209: BRGCON1bits.SJW0 = 1;
  8133  002A46  8C70               	bsf	3952,6,c	;volatile
  8134                           
  8135                           ;CAN.c: 210: BRGCON1bits.SJW1 = 1;
  8136  002A48  8E70               	bsf	3952,7,c	;volatile
  8137                           
  8138                           ;CAN.c: 212: BRGCON2bits.SEG1PH0 = 1;
  8139  002A4A  8671               	bsf	3953,3,c	;volatile
  8140                           
  8141                           ;CAN.c: 213: BRGCON2bits.SEG1PH1 = 1;
  8142  002A4C  8871               	bsf	3953,4,c	;volatile
  8143                           
  8144                           ;CAN.c: 214: BRGCON2bits.SEG1PH2 = 1;
  8145  002A4E  8A71               	bsf	3953,5,c	;volatile
  8146                           
  8147                           ;CAN.c: 216: BRGCON2bits.PRSEG2 = 1;
  8148  002A50  8471               	bsf	3953,2,c	;volatile
  8149                           
  8150                           ;CAN.c: 217: BRGCON2bits.PRSEG1 = 0;
  8151  002A52  9271               	bcf	3953,1,c	;volatile
  8152                           
  8153                           ;CAN.c: 218: BRGCON2bits.PRSEG0 = 0;
  8154  002A54  9071               	bcf	3953,0,c	;volatile
  8155                           
  8156                           ;CAN.c: 220: BRGCON3bits.SEG2PH0 = 1;
  8157  002A56  8072               	bsf	3954,0,c	;volatile
  8158                           
  8159                           ;CAN.c: 221: BRGCON3bits.SEG2PH1 = 0;
  8160  002A58  9272               	bcf	3954,1,c	;volatile
  8161                           
  8162                           ;CAN.c: 222: BRGCON3bits.SEG2PH2 = 1;
  8163  002A5A  8472               	bsf	3954,2,c	;volatile
  8164                           
  8165                           ;CAN.c: 224: BRGCON2bits.SAM = 1;
  8166  002A5C  8C71               	bsf	3953,6,c	;volatile
  8167                           
  8168                           ;CAN.c: 225: BRGCON2bits.SEG2PHTS = 1;
  8169  002A5E  8E71               	bsf	3953,7,c	;volatile
  8170  002A60  0012               	return		;funcret
  8171  002A62                     __end_of_CAN_SetupClock:
  8172                           	opt callstack 0
  8173                           
  8174 ;; *************** function _FLASH_Write *****************
  8175 ;; Defined at:
  8176 ;;		line 47 in file "FLASH.c"
  8177 ;; Parameters:    Size  Location     Type
  8178 ;;  addr            4    5[COMRAM] long 
  8179 ;;  val             2    9[COMRAM] unsigned int 
  8180 ;; Auto vars:     Size  Location     Type
  8181 ;;  flashWrBufPt    2   15[COMRAM] PTR unsigned int 
  8182 ;;		 -> FLASH_Write@val(2), 
  8183 ;;  GIEBitValue     2   13[COMRAM] unsigned int 
  8184 ;;  i               2    0        int 
  8185 ;; Return value:  Size  Location     Type
  8186 ;;                  1    wreg      void 
  8187 ;; Registers used:
  8188 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8189 ;; Tracked objects:
  8190 ;;		On entry : 0/0
  8191 ;;		On exit  : 0/0
  8192 ;;		Unchanged: 0/0
  8193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8194 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8195 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8196 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8197 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8198 ;;Total ram usage:       12 bytes
  8199 ;; Hardware stack levels used:    1
  8200 ;; Hardware stack levels required when called:    3
  8201 ;; This function calls:
  8202 ;;		Nothing
  8203 ;; This function is called by:
  8204 ;;		_main
  8205 ;; This function uses a non-reentrant model
  8206 ;;
  8207                           
  8208                           	psect	text59
  8209  0022D2                     __ptext59:
  8210                           	opt callstack 0
  8211  0022D2                     _FLASH_Write:
  8212                           	opt callstack 27
  8213                           
  8214                           ;FLASH.c: 49: UINT *flashWrBufPtr = &val;
  8215                           
  8216                           ;incstack = 0
  8217  0022D2  0E0A               	movlw	low FLASH_Write@val
  8218  0022D4  6E10               	movwf	FLASH_Write@flashWrBufPtr,c
  8219  0022D6  0E00               	movlw	high FLASH_Write@val
  8220  0022D8  6E11               	movwf	FLASH_Write@flashWrBufPtr+1,c
  8221                           
  8222                           ;FLASH.c: 50: int i;;FLASH.c: 51: UINT GIEBitValue = INTCONbits.GIE;
  8223  0022DA  AEF2               	btfss	4082,7,c	;volatile
  8224  0022DC  D003               	goto	u2180
  8225  0022DE  6A0C               	clrf	??_FLASH_Write& (0+255),c
  8226  0022E0  2A0C               	incf	??_FLASH_Write& (0+255),f,c
  8227  0022E2  D001               	goto	u2188
  8228  0022E4                     u2180:
  8229  0022E4  6A0C               	clrf	??_FLASH_Write& (0+255),c
  8230  0022E6                     u2188:
  8231  0022E6  500C               	movf	??_FLASH_Write,w,c
  8232  0022E8  6E0E               	movwf	FLASH_Write@GIEBitValue,c
  8233  0022EA  6A0F               	clrf	FLASH_Write@GIEBitValue+1,c
  8234                           
  8235                           ;FLASH.c: 54: TBLPTR = addr;
  8236  0022EC  C006  FFF6         	movff	FLASH_Write@addr,tblptrl	;volatile
  8237  0022F0  C007  FFF7         	movff	FLASH_Write@addr+1,tblptrh	;volatile
  8238  0022F4  C008  FFF8         	movff	FLASH_Write@addr+2,tblptru	;volatile
  8239                           
  8240                           ;FLASH.c: 58: TABLAT = (flashWrBufPtr[0] >> 8);
  8241  0022F8  C010  FFD9         	movff	FLASH_Write@flashWrBufPtr,fsr2l
  8242  0022FC  C011  FFDA         	movff	FLASH_Write@flashWrBufPtr+1,fsr2h
  8243  002300  CFDE F00C          	movff	postinc2,??_FLASH_Write
  8244  002304  CFDD F00D          	movff	postdec2,??_FLASH_Write+1
  8245  002308  C00D  F00C         	movff	??_FLASH_Write+1,??_FLASH_Write
  8246  00230C  6A0D               	clrf	??_FLASH_Write+1,c
  8247  00230E  500C               	movf	??_FLASH_Write,w,c
  8248  002310  6EF5               	movwf	tablat,c	;volatile
  8249  002312  000C               	tblwt		*	;# 
  8250                           
  8251                           ;FLASH.c: 60: TABLAT = (flashWrBufPtr[0] & 0xff);
  8252  002314  C010  FFD9         	movff	FLASH_Write@flashWrBufPtr,fsr2l
  8253  002318  C011  FFDA         	movff	FLASH_Write@flashWrBufPtr+1,fsr2h
  8254  00231C  50DF               	movf	indf2,w,c
  8255  00231E  6EF5               	movwf	tablat,c	;volatile
  8256  002320  000C               	tblwt		*	;# 
  8257                           
  8258                           ;FLASH.c: 64: TBLPTR = addr;
  8259  002322  C006  FFF6         	movff	FLASH_Write@addr,tblptrl	;volatile
  8260  002326  C007  FFF7         	movff	FLASH_Write@addr+1,tblptrh	;volatile
  8261  00232A  C008  FFF8         	movff	FLASH_Write@addr+2,tblptru	;volatile
  8262                           
  8263                           ;FLASH.c: 66: EECON1bits.EEPGD = 1;
  8264  00232E  8EA6               	bsf	4006,7,c	;volsfr
  8265                           
  8266                           ;FLASH.c: 67: EECON1bits.CFGS = 0;
  8267  002330  9CA6               	bcf	4006,6,c	;volsfr
  8268                           
  8269                           ;FLASH.c: 68: EECON1bits.WREN = 1;
  8270  002332  84A6               	bsf	4006,2,c	;volsfr
  8271                           
  8272                           ;FLASH.c: 70: INTCONbits.GIE = 0;
  8273  002334  9EF2               	bcf	4082,7,c	;volatile
  8274                           
  8275                           ;FLASH.c: 71: EECON2 = 0x55;
  8276  002336  0E55               	movlw	85
  8277  002338  6EA7               	movwf	4007,c	;volsfr
  8278                           
  8279                           ;FLASH.c: 72: EECON2 = 0xAA;
  8280  00233A  0EAA               	movlw	170
  8281  00233C  6EA7               	movwf	4007,c	;volsfr
  8282                           
  8283                           ;FLASH.c: 73: EECON1bits.WR = 1;
  8284  00233E  82A6               	bsf	4006,1,c	;volsfr
  8285                           
  8286                           ;FLASH.c: 74: INTCONbits.GIE = GIEBitValue;
  8287  002340  B00E               	btfsc	FLASH_Write@GIEBitValue,0,c
  8288  002342  D002               	bra	u2195
  8289  002344  9EF2               	bcf	4082,7,c	;volatile
  8290  002346  D001               	bra	u2196
  8291  002348                     u2195:
  8292  002348  8EF2               	bsf	4082,7,c	;volatile
  8293  00234A                     u2196:
  8294                           
  8295                           ;FLASH.c: 75: EECON1bits.WREN = 0;
  8296  00234A  94A6               	bcf	4006,2,c	;volsfr
  8297  00234C  0012               	return		;funcret
  8298  00234E                     __end_of_FLASH_Write:
  8299                           	opt callstack 0
  8300                           
  8301 ;; *************** function _FLASH_Read *****************
  8302 ;; Defined at:
  8303 ;;		line 28 in file "FLASH.c"
  8304 ;; Parameters:    Size  Location     Type
  8305 ;;  addr            4    5[COMRAM] long 
  8306 ;; Auto vars:     Size  Location     Type
  8307 ;;		None
  8308 ;; Return value:  Size  Location     Type
  8309 ;;                  2    5[COMRAM] unsigned int 
  8310 ;; Registers used:
  8311 ;;		None
  8312 ;; Tracked objects:
  8313 ;;		On entry : 0/0
  8314 ;;		On exit  : 0/0
  8315 ;;		Unchanged: 0/0
  8316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8317 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8320 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8321 ;;Total ram usage:        4 bytes
  8322 ;; Hardware stack levels used:    1
  8323 ;; Hardware stack levels required when called:    3
  8324 ;; This function calls:
  8325 ;;		Nothing
  8326 ;; This function is called by:
  8327 ;;		_main
  8328 ;; This function uses a non-reentrant model
  8329 ;;
  8330                           
  8331                           	psect	text60
  8332  002AFE                     __ptext60:
  8333                           	opt callstack 0
  8334  002AFE                     _FLASH_Read:
  8335                           	opt callstack 27
  8336                           
  8337                           ;FLASH.c: 30: TBLPTR = addr;
  8338                           
  8339                           ;incstack = 0
  8340  002AFE  C006  FFF6         	movff	FLASH_Read@addr,tblptrl	;volatile
  8341  002B02  C007  FFF7         	movff	FLASH_Read@addr+1,tblptrh	;volatile
  8342  002B06  C008  FFF8         	movff	FLASH_Read@addr+2,tblptru	;volatile
  8343  002B0A  0008               	tblrd		*	; ;# 
  8344                           
  8345                           ;FLASH.c: 32: return TABLAT;
  8346  002B0C  CFF5 F006          	movff	tablat,?_FLASH_Read	;volatile
  8347  002B10  6A07               	clrf	?_FLASH_Read+1,c
  8348  002B12  0012               	return		;funcret
  8349  002B14                     __end_of_FLASH_Read:
  8350                           	opt callstack 0
  8351                           
  8352 ;; *************** function _ISR_low *****************
  8353 ;; Defined at:
  8354 ;;		line 16 in file "ISR.c"
  8355 ;; Parameters:    Size  Location     Type
  8356 ;;		None
  8357 ;; Auto vars:     Size  Location     Type
  8358 ;;		None
  8359 ;; Return value:  Size  Location     Type
  8360 ;;                  1    wreg      void 
  8361 ;; Registers used:
  8362 ;;		wreg, status,2, status,0, cstack
  8363 ;; Tracked objects:
  8364 ;;		On entry : 0/0
  8365 ;;		On exit  : 0/0
  8366 ;;		Unchanged: 0/0
  8367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8370 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8371 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8372 ;;Total ram usage:        3 bytes
  8373 ;; Hardware stack levels used:    1
  8374 ;; Hardware stack levels required when called:    2
  8375 ;; This function calls:
  8376 ;;		_TMR1_Timer_reset
  8377 ;;		i1_TMR1_Update_flag_Set
  8378 ;; This function is called by:
  8379 ;;		Interrupt level 1
  8380 ;; This function uses a non-reentrant model
  8381 ;;
  8382                           
  8383                           	psect	intcodelo
  8384  000C18                     __pintcodelo:
  8385                           	opt callstack 0
  8386  000C18                     _ISR_low:
  8387                           	opt callstack 22
  8388                           
  8389                           ;incstack = 0
  8390  000C18  804C               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  8391  000C1A  CFD8 F003          	movff	status,??_ISR_low
  8392  000C1E  CFE8 F004          	movff	wreg,??_ISR_low+1
  8393  000C22  CFE0 F005          	movff	bsr,??_ISR_low+2
  8394                           
  8395                           ;ISR.c: 21: if(TMR1IF==1)
  8396  000C26  A09E               	btfss	3998,0,c	;volatile
  8397  000C28  D012               	goto	i1l795
  8398                           
  8399                           ;ISR.c: 22: {;ISR.c: 23: TMR1_Timer_reset();
  8400  000C2A  EC31  F015         	call	_TMR1_Timer_reset	;wreg free
  8401                           
  8402                           ;ISR.c: 26: static BYTE ramkaStanuU8=0;;ISR.c: 29: TMR1_Update_flag_Set(1);
  8403  000C2E  0E00               	movlw	0
  8404  000C30  6E02               	movwf	i1TMR1_Update_flag_Set@a+1,c
  8405  000C32  0E01               	movlw	1
  8406  000C34  6E01               	movwf	i1TMR1_Update_flag_Set@a,c
  8407  000C36  ECC5  F015         	call	i1_TMR1_Update_flag_Set	;wreg free
  8408                           
  8409                           ;ISR.c: 31: DetectorLedRadar.Flags.obsluzWeWy = 1;
  8410  000C3A  0100               	movlb	0	; () banked
  8411  000C3C  81CF               	bsf	_DetectorLedRadar& (0+255),0,b
  8412                           
  8413                           ; BSR set to: 0
  8414                           ;ISR.c: 33: if(++ramkaStanuU8 > (2*10))
  8415  000C3E  2A37               	incf	ISR_low@ramkaStanuU8,f,c
  8416  000C40  0E14               	movlw	20
  8417  000C42  6437               	cpfsgt	ISR_low@ramkaStanuU8,c
  8418  000C44  D003               	goto	i1l4067
  8419                           
  8420                           ; BSR set to: 0
  8421                           ;ISR.c: 34: {;ISR.c: 35: ramkaStanuU8 = 0;
  8422  000C46  0E00               	movlw	0
  8423  000C48  6E37               	movwf	ISR_low@ramkaStanuU8,c
  8424                           
  8425                           ; BSR set to: 0
  8426                           ;ISR.c: 36: DaneCan.Flags.wyslijRamkeStanu = 1;
  8427  000C4A  81CB               	bsf	_DaneCan& (0+255),0,b
  8428  000C4C                     i1l4067:
  8429                           
  8430                           ; BSR set to: 0
  8431                           ;ISR.c: 37: };ISR.c: 41: TMR1IF=0;
  8432  000C4C  909E               	bcf	3998,0,c	;volatile
  8433  000C4E                     i1l795:
  8434  000C4E  C005  FFE0         	movff	??_ISR_low+2,bsr
  8435  000C52  C004  FFE8         	movff	??_ISR_low+1,wreg
  8436  000C56  C003  FFD8         	movff	??_ISR_low,status
  8437  000C5A  904C               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  8438  000C5C  0010               	retfie	
  8439  000C5E                     __end_of_ISR_low:
  8440                           	opt callstack 0
  8441                           
  8442 ;; *************** function i1_TMR1_Update_flag_Set *****************
  8443 ;; Defined at:
  8444 ;;		line 32 in file "TMR1.c"
  8445 ;; Parameters:    Size  Location     Type
  8446 ;;  a               2    0[COMRAM] unsigned int 
  8447 ;; Auto vars:     Size  Location     Type
  8448 ;;		None
  8449 ;; Return value:  Size  Location     Type
  8450 ;;                  1    wreg      void 
  8451 ;; Registers used:
  8452 ;;		None
  8453 ;; Tracked objects:
  8454 ;;		On entry : 0/0
  8455 ;;		On exit  : 0/0
  8456 ;;		Unchanged: 0/0
  8457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8458 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8461 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8462 ;;Total ram usage:        2 bytes
  8463 ;; Hardware stack levels used:    1
  8464 ;; Hardware stack levels required when called:    1
  8465 ;; This function calls:
  8466 ;;		Nothing
  8467 ;; This function is called by:
  8468 ;;		_ISR_low
  8469 ;; This function uses a non-reentrant model
  8470 ;;
  8471                           
  8472                           	psect	text62
  8473  002B8A                     __ptext62:
  8474                           	opt callstack 0
  8475  002B8A                     i1_TMR1_Update_flag_Set:
  8476                           	opt callstack 22
  8477                           
  8478                           ;TMR1.c: 34: TMR1_Update_flag = a;
  8479                           
  8480                           ;incstack = 0
  8481  002B8A  C001  F0D6         	movff	i1TMR1_Update_flag_Set@a,_TMR1_Update_flag
  8482  002B8E  C002  F0D7         	movff	i1TMR1_Update_flag_Set@a+1,_TMR1_Update_flag+1
  8483  002B92  0012               	return		;funcret
  8484  002B94                     __end_ofi1_TMR1_Update_flag_Set:
  8485                           	opt callstack 0
  8486                           
  8487 ;; *************** function _TMR1_Timer_reset *****************
  8488 ;; Defined at:
  8489 ;;		line 63 in file "TMR1.c"
  8490 ;; Parameters:    Size  Location     Type
  8491 ;;		None
  8492 ;; Auto vars:     Size  Location     Type
  8493 ;;  t1H             1    1[COMRAM] volatile unsigned char 
  8494 ;;  t1L             1    0[COMRAM] volatile unsigned char 
  8495 ;; Return value:  Size  Location     Type
  8496 ;;                  1    wreg      unsigned char 
  8497 ;; Registers used:
  8498 ;;		wreg, status,2, status,0
  8499 ;; Tracked objects:
  8500 ;;		On entry : 0/0
  8501 ;;		On exit  : 0/0
  8502 ;;		Unchanged: 0/0
  8503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8505 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8507 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8508 ;;Total ram usage:        2 bytes
  8509 ;; Hardware stack levels used:    1
  8510 ;; Hardware stack levels required when called:    1
  8511 ;; This function calls:
  8512 ;;		Nothing
  8513 ;; This function is called by:
  8514 ;;		_ISR_low
  8515 ;; This function uses a non-reentrant model
  8516 ;;
  8517                           
  8518                           	psect	text63
  8519  002A62                     __ptext63:
  8520                           	opt callstack 0
  8521  002A62                     _TMR1_Timer_reset:
  8522                           	opt callstack 22
  8523                           
  8524                           ;TMR1.c: 69: volatile BYTE t1L = 0, t1H = 0;
  8525                           
  8526                           ;incstack = 0
  8527  002A62  0E00               	movlw	0
  8528  002A64  6E01               	movwf	TMR1_Timer_reset@t1L,c	;volatile
  8529  002A66  0E00               	movlw	0
  8530  002A68  6E02               	movwf	TMR1_Timer_reset@t1H,c	;volatile
  8531                           
  8532                           ;TMR1.c: 70: t1L = TMR1L;
  8533  002A6A  CFCE F001          	movff	4046,TMR1_Timer_reset@t1L	;volatile
  8534                           
  8535                           ;TMR1.c: 71: t1H = TMR1H;
  8536  002A6E  CFCF F002          	movff	4047,TMR1_Timer_reset@t1H	;volatile
  8537                           
  8538                           ;TMR1.c: 72: __nop();
  8539  002A72  F000               	nop	
  8540                           
  8541                           ;TMR1.c: 73: t1H += (UINT8)((0xFFFF - (((8000000/8)/4)/10)) >> 8);
  8542  002A74  0E9E               	movlw	158
  8543  002A76  2602               	addwf	TMR1_Timer_reset@t1H,f,c	;volatile
  8544                           
  8545                           ;TMR1.c: 74: t1L += (UINT8)((0xFFFF - (((8000000/8)/4)/10)) & 0xFF);
  8546  002A78  0E57               	movlw	87
  8547  002A7A  2601               	addwf	TMR1_Timer_reset@t1L,f,c	;volatile
  8548                           
  8549                           ;TMR1.c: 75: TMR1H = t1H;
  8550  002A7C  C002  FFCF         	movff	TMR1_Timer_reset@t1H,4047	;volatile
  8551                           
  8552                           ;TMR1.c: 76: TMR1L = 0x5B;
  8553  002A80  0E5B               	movlw	91
  8554  002A82  6ECE               	movwf	4046,c	;volatile
  8555  002A84  0012               	return		;funcret
  8556  002A86                     __end_of_TMR1_Timer_reset:
  8557                           	opt callstack 0
  8558                           
  8559 ;; *************** function _ISR_high *****************
  8560 ;; Defined at:
  8561 ;;		line 53 in file "ISR.c"
  8562 ;; Parameters:    Size  Location     Type
  8563 ;;		None
  8564 ;; Auto vars:     Size  Location     Type
  8565 ;;		None
  8566 ;; Return value:  Size  Location     Type
  8567 ;;                  1    wreg      void 
  8568 ;; Registers used:
  8569 ;;		None
  8570 ;; Tracked objects:
  8571 ;;		On entry : 0/0
  8572 ;;		On exit  : 0/0
  8573 ;;		Unchanged: 0/0
  8574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8578 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8579 ;;Total ram usage:        0 bytes
  8580 ;; Hardware stack levels used:    1
  8581 ;; This function calls:
  8582 ;;		Nothing
  8583 ;; This function is called by:
  8584 ;;		Interrupt level 2
  8585 ;; This function uses a non-reentrant model
  8586 ;;
  8587                           
  8588                           	psect	intcode
  8589  000C08                     __pintcode:
  8590                           	opt callstack 0
  8591  000C08                     _ISR_high:
  8592                           	opt callstack 22
  8593                           
  8594                           ;incstack = 0
  8595  000C08  824C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  8596  000C0A  EDD2  F015         	call	int_func,f	;refresh shadow registers
  8597                           
  8598                           	psect	intcode_body
  8599  002BA4                     __pintcode_body:
  8600                           	opt callstack 22
  8601  002BA4                     int_func:
  8602                           	opt callstack 22
  8603  002BA4  0006               	pop		; remove dummy address from shadow register refresh
  8604  002BA6  924C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  8605  002BA8  0011               	retfie		f
  8606  002BAA                     __end_of_ISR_high:
  8607                           	opt callstack 0
  8608  0000                     
  8609                           	psect	rparam
  8610  0000                     
  8611                           	psect	temp
  8612  00004C                     btemp:
  8613                           	opt callstack 0
  8614  00004C                     	ds	1
  8615  0000                     int$flags	set	btemp
  8616  0000                     wtemp8	set	btemp+1
  8617  0000                     ttemp5	set	btemp+1
  8618  0000                     ttemp6	set	btemp+4
  8619  0000                     ttemp7	set	btemp+8
  8620                           tosu	equ	0xFFF
  8621                           tosh	equ	0xFFE
  8622                           tosl	equ	0xFFD
  8623                           stkptr	equ	0xFFC
  8624                           pclatu	equ	0xFFB
  8625                           pclath	equ	0xFFA
  8626                           pcl	equ	0xFF9
  8627                           tblptru	equ	0xFF8
  8628                           tblptrh	equ	0xFF7
  8629                           tblptrl	equ	0xFF6
  8630                           tablat	equ	0xFF5
  8631                           prodh	equ	0xFF4
  8632                           prodl	equ	0xFF3
  8633                           indf0	equ	0xFEF
  8634                           postinc0	equ	0xFEE
  8635                           postdec0	equ	0xFED
  8636                           preinc0	equ	0xFEC
  8637                           plusw0	equ	0xFEB
  8638                           fsr0h	equ	0xFEA
  8639                           fsr0l	equ	0xFE9
  8640                           wreg	equ	0xFE8
  8641                           indf1	equ	0xFE7
  8642                           postinc1	equ	0xFE6
  8643                           postdec1	equ	0xFE5
  8644                           preinc1	equ	0xFE4
  8645                           plusw1	equ	0xFE3
  8646                           fsr1h	equ	0xFE2
  8647                           fsr1l	equ	0xFE1
  8648                           bsr	equ	0xFE0
  8649                           indf2	equ	0xFDF
  8650                           postinc2	equ	0xFDE
  8651                           postdec2	equ	0xFDD
  8652                           preinc2	equ	0xFDC
  8653                           plusw2	equ	0xFDB
  8654                           fsr2h	equ	0xFDA
  8655                           fsr2l	equ	0xFD9
  8656                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        22
    BSS         698
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     29      75
    BANK0           160     17     147
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    FRAME_AnalogValue@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_MapPosition@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FLASH_Write@flashWrBufPtr	PTR unsigned int  size(2) Largest target is 2
		 -> FLASH_Write@val(COMRAM[2]), 

    NVMWrite@source	PTR unsigned char  size(2) Largest target is 2
		 -> Init_Data(COMRAM[2]), 

    NVMRead@dest	PTR unsigned char  size(2) Largest target is 2
		 -> Init_Data(COMRAM[2]), 

    NVMalloc@location	PTR unsigned short  size(2) Largest target is 2
		 -> neighborsAdress(BANK0[2]), ustawieniaKarty(BANK0[2]), 

    FRAME_HandleCanFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_AdressOfNeighbors@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_PrzypisanieDokarty@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_SoftwareVersion@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_Plot@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_DeviceReset@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_DataUpdateAndChangeOption@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    Dane	PTR struct DaneStruct size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    FRAME_AxisStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_AveragingTimes@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_ExcitationMultiplier@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_ExcitationValue@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_AccelerometerStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_SensorExcitationStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    CAN_GenID@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    CAN_TakeFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    CAN_SendFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    CAN_MoveBuffIntoFrame@Buf	PTR unsigned char  size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), RXB0D0(SFR_3[1]), 

    CAN_MoveBuffIntoFrame@Ram	PTR unsigned char  size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), RXB0D0(SFR_3[1]), 


Critical Paths under _main in COMRAM

    _TRM_DataTransmition->_FRAME_HandleCanFrame
    _FRAME_HandleCanFrame->_FRAME_DeviceReset
    _LED_Error->_LED_Control
    _FRAME_SensorExcitationStatus->_IsInNeighbors
    _FRAME_SensorExcitationStatus->_MOC_Aktualna_Temperatura
    _FRAME_SensorExcitationStatus->_MOC_Frame_Counter
    _FRAME_SensorExcitationStatus->_MOC_NOTWORK
    _FRAME_SensorExcitationStatus->_MOC_Wynikowa_wartosc_roznicowa
    _FRAME_Plot->___lwdiv
    _FRAME_ExcitationValue->___awmod
    _WriteDataToEEPROM->_EEPROM_Adres_Writeto
    _NVMWrite->_WritetoEEPROM
    _EEPROM_Adres_Writeto->_WritetoEEPROM
    _FRAME_AccelerometerStatus->___awmod
    _CAN_SendFrame->_CAN_MoveBuffIntoFrame
    _CAN_TakeFrame->___awdiv
    _LED_Update->_LED_Light_Pos
    _LED_Light_Pos->___lwdiv
    _INI_All->_ReadDataToEEPROM
    _ReadDataToEEPROM->_EEPROM_Adres_Readfrom
    _NVMRead->_ReadfromEEPROM
    _EEPROM_Adres_Readfrom->_ReadfromEEPROM
    _NVMInit->_NVMalloc
    _INI_LED_Start->_LED_Control

Critical Paths under _ISR_low in COMRAM

    _ISR_low->_TMR1_Timer_reset
    _ISR_low->i1_TMR1_Update_flag_Set

Critical Paths under _ISR_high in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_TRM_DataTransmition

Critical Paths under _ISR_low in BANK0

    None.

Critical Paths under _ISR_high in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_low in BANK1

    None.

Critical Paths under _ISR_high in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_low in BANK2

    None.

Critical Paths under _ISR_high in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_low in BANK3

    None.

Critical Paths under _ISR_high in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_low in BANK4

    None.

Critical Paths under _ISR_high in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_low in BANK5

    None.

Critical Paths under _ISR_high in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_low in BANK6

    None.

Critical Paths under _ISR_high in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_low in BANK7

    None.

Critical Paths under _ISR_high in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_low in BANK8

    None.

Critical Paths under _ISR_high in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_low in BANK9

    None.

Critical Paths under _ISR_high in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_low in BANK10

    None.

Critical Paths under _ISR_high in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_low in BANK11

    None.

Critical Paths under _ISR_high in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_low in BANK12

    None.

Critical Paths under _ISR_high in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   44126
                                             27 COMRAM     2     2      0
                         _FLASH_Read
                        _FLASH_Write
                            _INI_All
                         _LED_Update
                          _RADAR_Use
               _TMR1_Update_flag_Get
               _TMR1_Update_flag_Set
                _TRM_DataTransmition
 ---------------------------------------------------------------------------------
 (1) _TRM_DataTransmition                                 18    18      0   28622
                                              0 BANK0     17    17      0
                      _CAN_TakeFrame
               _FRAME_HandleCanFrame
 ---------------------------------------------------------------------------------
 (2) _FRAME_HandleCanFrame                                 8     6      2   25517
                                             19 COMRAM     8     6      2
                          _CAN_GenID
                      _CAN_SendFrame
          _FRAME_AccelerometerStatus
            _FRAME_AdressOfNeighbors
                  _FRAME_AnalogValue
               _FRAME_AveragingTimes
                   _FRAME_AxisStatus
                  _FRAME_DeviceReset
         _FRAME_ExcitationMultiplier
              _FRAME_ExcitationValue
                  _FRAME_MapPosition
                         _FRAME_Plot
           _FRAME_PrzypisanieDokarty
       _FRAME_SensorExcitationStatus
              _FRAME_SoftwareVersion
                          _LED_Error
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) _LED_Error                                            0     0      0    1756
                        _LED_Control
 ---------------------------------------------------------------------------------
 (3) _FRAME_SoftwareVersion                                3     1      2     305
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_SensorExcitationStatus                         6     4      2     892
                                              7 COMRAM     6     4      2
                      _IsInNeighbors
                           _LOCK_Get
                           _LOCK_Set
           _MOC_Aktualna_Temperatura
                  _MOC_Frame_Counter
                        _MOC_NOTWORK
     _MOC_Wynikowa_wartosc_roznicowa
 ---------------------------------------------------------------------------------
 (4) _MOC_Wynikowa_wartosc_roznicowa                       2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_NOTWORK                                          2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_Frame_Counter                                    2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_Aktualna_Temperatura                             2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _LOCK_Set                                             1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _LOCK_Get                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _IsInNeighbors                                        4     2      2     367
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_PrzypisanieDokarty                             6     4      2     367
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_Plot                                           3     1      2     929
                                             12 COMRAM     3     1      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) _FRAME_MapPosition                                    2     0      2     119
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_ExcitationValue                                6     4      2    1436
                                             11 COMRAM     6     4      2
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) _FRAME_ExcitationMultiplier                           5     3      2     280
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_DeviceReset                                    3     1      2   12112
                                             16 COMRAM     3     1      2
    _FRAME_DataUpdateAndChangeOption
                  _WriteDataToEEPROM
 ---------------------------------------------------------------------------------
 (4) _WriteDataToEEPROM                                    0     0      0   11223
               _EEPROM_Adres_Writeto
                           _NVMWrite
                      _WritetoEEPROM
 ---------------------------------------------------------------------------------
 (5) _NVMWrite                                             6     0      6    2694
                                              8 COMRAM     6     0      6
                      _WritetoEEPROM
 ---------------------------------------------------------------------------------
 (5) _EEPROM_Adres_Writeto                                 8     0      8    6294
                                              8 COMRAM     8     0      8
                      _WritetoEEPROM
 ---------------------------------------------------------------------------------
 (5) _WritetoEEPROM                                        3     0      3    2235
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (4) _FRAME_DataUpdateAndChangeOption                      3     1      2     243
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AxisStatus                                     5     3      2     212
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AveragingTimes                                 3     1      2     212
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AnalogValue                                    6     2      4     238
                                              5 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _FRAME_AdressOfNeighbors                             12     8      4    1626
                                              5 COMRAM    10     6      4
                 _CAN_SetupFilter_Ne
 ---------------------------------------------------------------------------------
 (3) _FRAME_AccelerometerStatus                            6     4      2    1374
                                             11 COMRAM     6     4      2
                            ___awmod
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     945
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _CAN_SendFrame                                        5     3      2    1128
                                             10 COMRAM     5     3      2
              _CAN_MoveBuffIntoFrame
 ---------------------------------------------------------------------------------
 (3) _CAN_GenID                                            5     2      3     455
                                              5 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (2) _CAN_TakeFrame                                        6     4      2    2121
                                             13 COMRAM     6     4      2
              _CAN_MoveBuffIntoFrame
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     811
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _CAN_MoveBuffIntoFrame                                5     1      4     668
                                              5 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) _TMR1_Update_flag_Set                                 2     0      2     202
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR1_Update_flag_Get                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _RADAR_Use                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_Update                                           0     0      0    6898
                        _LED_Control
                           _LED_Left
                      _LED_Light_Pos
                          _LED_Right
 ---------------------------------------------------------------------------------
 (2) _LED_Light_Pos                                       11     7      4    4414
                                             12 COMRAM    11     7      4
                        _LED_Control
                           _LED_Left
                          _LED_Right
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     717
                                              5 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _LED_Right                                            6     4      2     364
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _LED_Left                                             4     2      2     364
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _INI_All                                              0     0      0    7591
                          _CAN_Setup
                _INI_GlobalInterrupt
                      _INI_LED_Start
                         _INI_OUTPUT
                          _INI_Timer
                            _NVMInit
                   _ReadDataToEEPROM
 ---------------------------------------------------------------------------------
 (2) _ReadDataToEEPROM                                     1     1      0    5347
                                             20 COMRAM     1     1      0
              _EEPROM_Adres_Readfrom
                            _NVMRead
                     _ReadfromEEPROM
 ---------------------------------------------------------------------------------
 (3) _NVMRead                                              6     0      6    1143
                                              7 COMRAM     6     0      6
                     _ReadfromEEPROM
 ---------------------------------------------------------------------------------
 (3) _EEPROM_Adres_Readfrom                               13     7      6    3439
                                              7 COMRAM    13     7      6
                     _ReadfromEEPROM
 ---------------------------------------------------------------------------------
 (3) _ReadfromEEPROM                                       2     0      2     765
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _NVMInit                                              3     3      0     488
                                             11 COMRAM     3     3      0
                           _NVMalloc
 ---------------------------------------------------------------------------------
 (3) _NVMalloc                                             6     2      4     478
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _INI_Timer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INI_OUTPUT                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INI_LED_Start                                        0     0      0    1756
                        _LED_Control
 ---------------------------------------------------------------------------------
 (4) _LED_Control                                          5     3      2    1756
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _INI_GlobalInterrupt                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CAN_Setup                                            1     1      0       0
                                              5 COMRAM     1     1      0
                     _CAN_SetupClock
                      _CAN_SetupMask
 ---------------------------------------------------------------------------------
 (3) _CAN_SetupMask                                        0     0      0       0
                 _CAN_SetupFilter_Ne
 ---------------------------------------------------------------------------------
 (4) _CAN_SetupFilter_Ne                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CAN_SetupClock                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _FLASH_Write                                         14     8      6     548
                                              5 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (1) _FLASH_Read                                           4     0      4     228
                                              5 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR_low                                              3     3      0      76
                                              2 COMRAM     3     3      0
                   _TMR1_Timer_reset
             i1_TMR1_Update_flag_Set
 ---------------------------------------------------------------------------------
 (8) i1_TMR1_Update_flag_Set                               2     0      2      48
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (8) _TMR1_Timer_reset                                     2     2      0      28
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_high                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FLASH_Read
   _FLASH_Write
   _INI_All
     _CAN_Setup
       _CAN_SetupClock
       _CAN_SetupMask
         _CAN_SetupFilter_Ne
     _INI_GlobalInterrupt
     _INI_LED_Start
       _LED_Control
     _INI_OUTPUT
     _INI_Timer
     _NVMInit
       _NVMalloc
     _ReadDataToEEPROM
       _EEPROM_Adres_Readfrom
         _ReadfromEEPROM
       _NVMRead
         _ReadfromEEPROM
       _ReadfromEEPROM
   _LED_Update
     _LED_Control
     _LED_Left
     _LED_Light_Pos
       _LED_Control
       _LED_Left
       _LED_Right
       ___lwdiv
     _LED_Right
   _RADAR_Use
   _TMR1_Update_flag_Get
   _TMR1_Update_flag_Set
   _TRM_DataTransmition
     _CAN_TakeFrame
       _CAN_MoveBuffIntoFrame
       ___awdiv
     _FRAME_HandleCanFrame
       _CAN_GenID
       _CAN_SendFrame
         _CAN_MoveBuffIntoFrame
       _FRAME_AccelerometerStatus
         ___awmod
       _FRAME_AdressOfNeighbors
         _CAN_SetupFilter_Ne
       _FRAME_AnalogValue
       _FRAME_AveragingTimes
       _FRAME_AxisStatus
       _FRAME_DeviceReset
         _FRAME_DataUpdateAndChangeOption
         _WriteDataToEEPROM
           _EEPROM_Adres_Writeto
             _WritetoEEPROM
           _NVMWrite
             _WritetoEEPROM
           _WritetoEEPROM
       _FRAME_ExcitationMultiplier
       _FRAME_ExcitationValue
         ___awmod
       _FRAME_MapPosition
       _FRAME_Plot
         ___lwdiv
       _FRAME_PrzypisanieDokarty
       _FRAME_SensorExcitationStatus
         _IsInNeighbors
         _LOCK_Get
         _LOCK_Set
         _MOC_Aktualna_Temperatura
         _MOC_Frame_Counter
         _MOC_NOTWORK
         _MOC_Wynikowa_wartosc_roznicowa
       _FRAME_SoftwareVersion
       _LED_Error
         _LED_Control
       ___awdiv

 _ISR_low (ROOT)
   _TMR1_Timer_reset
   i1_TMR1_Update_flag_Set

 _ISR_high (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0     220      31       16.4%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     11      93       5       91.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1D      4B       1       79.8%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      DE      20        0.0%
DATA                 0      0     2FE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Aug 20 15:31:35 2019

                __end_of_FRAME_DeviceReset 1AB0                      ?_FRAME_AveragingTimes 0006  
                             ___awdiv@sign 000B                                         bsr 000FE0  
                              __CFG_BORV$3 000000                          ?_FRAME_AxisStatus 0006  
                        _FRAME_MapPosition 2BB2                               __CFG_CP0$OFF 000000  
                             __CFG_CP1$OFF 000000                               __CFG_CP2$OFF 000000  
                             NVMRead@count 000C                               __CFG_CP3$OFF 000000  
                        WritetoEEPROM@Data 0008                         __size_of_CAN_GenID 0078  
                                      l301 0F3C                                        l302 0F9E  
                                      l303 0F42                                        l304 0F48  
                                      l305 0F4E                                        l306 0F54  
                                      l307 0F5A                                        l308 0F60  
                                      l309 0F66                                        l430 18BE  
                                      l292 16C0                                        l293 16BE  
                              ?_LED_Update 0001                                        l708 1372  
                                      l709 136A                                        l952 29AA  
                                      l961 28D4                                        l938 29A2  
                             __CFG_CPB$OFF 000000                         ??_FRAME_AxisStatus 0008  
                             __CFG_CPD$OFF 000000                         ?_FRAME_MapPosition 0006  
                       __size_of_CAN_Setup 005C                               ___awmod@sign 000B  
                             ?_LED_Control 0006                                        wreg 000FE8  
                    __end_of_CAN_TakeFrame 1180                                ?_INI_OUTPUT 0001  
                   __size_of_INI_LED_Start 0034                              NVMInit@result 000E  
                    __end_of_CAN_SendFrame 1816                               __CFG_LVP$OFF 000000  
                          _neighborsAdress 00DA                  TRM_DataTransmition@weWyU8 0036  
             __size_of_INI_GlobalInterrupt 000E                        ??_FRAME_MapPosition 0008  
                             __CFG_WDT$OFF 000000                                       l4101 28FE  
                                     l4203 1888                            __end_of_INI_All 2AA8  
                                     l4221 18B8                                       l1469 26E4  
                                     l4109 27F6                                       l4215 18A8  
                                     l4233 18DE                                       l4209 1898  
                                     l3441 284A                                       l3425 27BE  
                                     l4153 2A14                                       l4313 1DE8  
                                     l4251 190E                                       l4227 18CE  
                                     l4403 24D8                                       l4331 1E30  
                                     l4245 18FE                                       l4173 1838  
                                     l3621 28B6                                       l4325 1E18  
                                     l4263 192E                                       l4239 18EE  
                                     l4191 1868                                       l4167 1828  
                                     l4423 251E                                       l4415 2506  
                                     l4407 24E6                                       l4343 1E60  
                                     l4319 1E00                                       l4281 1960  
                                     l4257 191E                                       l4185 1858  
                                     l4433 26B2                                       l4409 24EE  
                                     l4337 1E48                                       l4275 194E  
                                     l4179 1848                                       l4435 26BA  
                                     l4523 175A                                       l4419 2510  
                                     l4355 1E90                                       l4269 193E  
                                     l4197 1878                                       l3573 22C8  
                                     l3557 29D2                                       l4445 26DA  
                                     l4349 1E78                                       l4711 223E  
                                     l4527 180E                                       l4631 1A8C  
                                     l4721 2592                                       l4801 114A  
                                     l4617 1A2A                                       l4641 267E  
                                     l4553 1B52                                       l4715 224C  
                                     l4707 2234                                       l4803 117C  
                                     l4635 1A9E                                       l4627 1A6A  
                                     l4651 20F4                                       l4733 25DC  
                                     l4831 1FB8                                       l4823 1F82  
                                     l4399 24CC                                       l4671 0E6C  
                                     l4663 0D1C                                       l4583 1C5E  
                                     l4567 1BC2                                       l4559 1B98  
                                     l4761 1084                                       l4577 1D4A  
                                     l4665 0D9E                                       l4931 2074  
                                     l4923 2030                                       l4683 21E6  
                                     l4763 108C                                       l4755 1070  
                                     l4739 0F6C                                       l4595 2768  
                                     l4829 1FAE                                       l4837 1FE4  
                                     l4765 1094                                       l4757 1076  
                                     l4773 10AC                                       l4781 10FC  
                                     l4669 0E66                                       l4861 11D0  
                                     _BIE0 000DFA                                       l4927 204C  
                                     l4695 220C                                       l4791 112A  
                                     l4783 110E                                       l4767 109C  
                                     l4759 107C                                       l4775 10DE  
                                     l4871 1216                                       l4863 11DE  
                                     l4697 2214                                       l4689 21F6  
                                     l4793 1132                                       l4785 1114  
                                     l4769 10A4                                       l4881 1268  
                                     l4873 1224                                       l4865 11EC  
                                     l4857 11B4                                       l4795 113A  
                                     l4787 111A                                       l4779 10E2  
                                     l4883 127E                                       l4875 1232  
                                     l4867 11FA                                       l4859 11C2  
                                     l4947 271C                                       l4971 1F1E  
                                     l4797 1142                                       l4789 1122  
                                     l4877 1240                                       l4869 1208  
                                     l4981 1F40                                       l4879 125A  
                                     l4887 1294                                       l4889 12F0  
                        _MOC_Frame_Counter 2B38                                       _LATA 000F89  
                                     _LATB 000F8A                                       _LATC 000F8B  
                                     _LATD 000F8C                                       _LATE 000F8D  
                                     u2180 22E4                                       u2340 27EE  
                                     u3080 2218                                       u3145 1008  
                                     u2195 2348                                       u2196 234A  
                                     u2188 22E6                                       u1910 22C0  
                                     u3190 1FEC                                       u2295 299E  
                                     _IPR3 000FA5                                       u2296 29A0  
                                     _IPEN 007E87                                       _PIE3 000FA3  
                                     u2730 26BE                                       u1890 22A8  
                                     u2690 24F2                                       u2930 19B8  
                                     _PEIE 007F96                                       u2940 19D0  
                                     _LOCK 0039                                       u2936 19BA  
                                     u2946 19D2                                       u2890 2778  
                                     u2795 1730                                       _PIR3 000FA4  
                                     _RCON 000FD0                ??_FRAME_AccelerometerStatus 000E  
                                     _Dane 00D8                            __end_of_ISR_low 0C5E  
                         LED_Control@diode 0006                       FRAME_AnalogValue@set 0008  
                       ?_MOC_Frame_Counter 0006                                       _main 1E9A  
                         LED_Control@color 000A                            __end_of_NVMInit 289A  
                          __end_of_NVMRead 29DC                                       fsr1h 000FE2  
                                     fsr2h 000FDA                                       indf1 000FE7  
                                     indf2 000FDF                                       fsr1l 000FE1  
                                     fsr2l 000FD9                                       btemp 004C  
                           _CAN_SetupClock 2A3A                                       prodh 000FF4  
                                     prodl 000FF3                      __end_of_CAN_SetupMask 24B8  
            __size_of_TMR1_Update_flag_Get 000A                                       start 0C5E  
            __size_of_TMR1_Update_flag_Set 000A                         __size_of_RADAR_Use 000C  
                       __size_of_LED_Error 001E                              __CFG_IESO$OFF 000000  
                       __size_of_LED_Right 004C              __size_of_FRAME_HandleCanFrame 01F8  
                            _LED_Light_Pos 1F4C                              __CFG_MCLRE$ON 000000  
                             ___param_bank 000000                        ??_MOC_Frame_Counter 0008  
               ??_MOC_Aktualna_Temperatura 0008          FRAME_HandleCanFrame@identyfikator 001B  
                      __size_of_FLASH_Read 0016                         __size_of_INI_Timer 0018  
                __end_of_FRAME_MapPosition 2BB4                              _NeightAdress1 0032  
                            _NeightAdress2 0046                              _NeightAdress3 0030  
                            _NeightAdress4 002E                              _NeightAdress5 002C  
                            _NeightAdress6 002A                              _NeightAdress7 0028  
                            _NeightAdress8 0026                           __end_of_LED_Left 285E  
                    ReadfromEEPROM@Address 0006                                      _B0CON 000E20  
                                    _B1CON 000E30                                      _B2CON 000E40  
                                    _B3CON 000E50                                      _B4CON 000E60  
                                    _B5CON 000E70                           __end_of_LOCK_Get 2BB2  
                                    ?_main 0001                           __end_of_LOCK_Set 2BA4  
                          __end_of___awdiv 2256                                      _EEADR 000FA9  
                          __end_of___awmod 2528                     ??_EEPROM_Adres_Writeto 0011  
                                    _BSEL0 000DF8                            ___awdiv@divisor 0008  
                                    _T1CON 000FCD                                      _IRCF0 007E9C  
                                    _IRCF1 007E9D          FRAME_ExcitationMultiplier@message 0006  
                                    _IRCF2 007E9E                            __end_of___lwdiv 26EE  
                                    i1l795 0C4E                        __size_of_FRAME_Plot 0058  
                          ___awdiv@counter 000A                                      _MSEL0 000DF0  
                                    _MSEL1 000DF1                                      _MSEL2 000DF2  
                                    _MSEL3 000DF3                                      _TMR1H 000FCF  
                                    _TMR1L 000FCE                                      _TRISA 000F92  
                                    _TRISB 000F93                                      _TRISC 000F94  
                                    _TRISD 000F95                                      _TRISE 000F96  
                            __CFG_PWRT$OFF 000000                                      _Flagi 00C6  
                   ?_CAN_MoveBuffIntoFrame 0006                              __CFG_WRT0$OFF 000000  
               __size_of_FRAME_AnalogValue 0002                              __CFG_WRT1$OFF 000000  
                            __CFG_WRT2$OFF 000000                              __CFG_WRT3$OFF 000000  
                           __CFG_EBTR0$OFF 000000                             __CFG_FCMEN$OFF 000000  
                           __CFG_EBTR1$OFF 000000                             __CFG_EBTR2$OFF 000000  
                           __CFG_EBTR3$OFF 000000                           __end_of_ISR_high 2BAA  
                            __CFG_WRTB$OFF 000000                              __CFG_WRTC$OFF 000000  
                            __CFG_WRTD$OFF 000000                  __end_of_MOC_Frame_Counter 2B48  
                           __CFG_EBTRB$OFF 000000                    i1TMR1_Update_flag_Set@a 0001  
                             ?_MOC_NOTWORK 0006                  __size_of_ReadDataToEEPROM 018E  
                         __end_of_NVMWrite 2908                           __end_of_NVMalloc 28D2  
                                    tablat 000FF5                     __end_of_CAN_SetupClock 2A62  
            EEPROM_Adres_Readfrom@MaxAdres 000C                                      ttemp5 004D  
                                    ttemp6 0050                                      ttemp7 0054  
                                    status 000FD8              EEPROM_Adres_Readfrom@MinAdres 000A  
                                    wtemp8 004D                          __end_of_CAN_GenID 2440  
                           __CFG_PBADEN$ON 000000                        __size_of_LED_Update 00A2  
                           ?_LED_Light_Pos 000D                           _TMR1_Timer_reset 2A62  
                        __end_of_CAN_Setup 25EA                              _INI_LED_Start 29DC  
                 FLASH_Write@flashWrBufPtr 0010                      _FRAME_ExcitationValue 1BD8  
         FRAME_AccelerometerStatus@message 000C                            __initialization 234E  
                      __size_of_INI_OUTPUT 0020                           CAN_GenID@frameID 0008  
                             __end_of_main 1F4C                     ??_FRAME_AveragingTimes 0008  
               __size_of_FRAME_DeviceReset 0148                   ?_FRAME_AdressOfNeighbors 0006  
                   __size_of_WritetoEEPROM 0034                           CAN_GenID@message 0006  
                  ??_EEPROM_Adres_Readfrom 000E                  _FRAME_AccelerometerStatus 1CE4  
                     __size_of_FLASH_Write 007C                                     ??_main 001C  
                   CAN_MoveBuffIntoFrame@i 000A                              __activetblptr 000002  
                             NVMWrite@addr 000B                           _TMR1_Update_flag 00D6  
                  WritetoEEPROM@GIE_Status 0034                      __end_of_IsInNeighbors 1E9A  
                          _wartosciSasiada 00F3                          __end_of_RADAR_Use 2B62  
                                ??_INI_All 0016                          __end_of_LED_Error 2AE6  
                        __end_of_LED_Right 27D6                       WritetoEEPROM@Address 0006  
                                ??_ISR_low 0003                                  ??_NVMInit 000C  
                                ??_NVMRead 000E                                     _CANCON 000F6F  
                                   _EEADRH 000FAA                                     _EEDATA 000FA8  
                                   _EECON2 000FA7                           ___awdiv@dividend 0006  
              FRAME_ExcitationMultiplier@i 0009                                     _CIOCON 000F73  
                          __CFG_BBSIZ$1024 000000                          __end_of_INI_Timer 2AFE  
                                   i1l4067 0C4C                                     _TABLAT 000FF5  
                          ?_CAN_SetupClock 0001                                     _TBLPTR 000FF6  
                                   _RXB0D0 000F66                                     _TMR1IE 007CE8  
                                   _TMR1IF 007CF0                                     _TMR1IP 007CF8  
                                   _TMR1ON 007E68               ??_FRAME_ExcitationMultiplier 0008  
                           ?_INI_LED_Start 0001                             __CFG_XINST$OFF 000000  
                                ??___awdiv 000A                             __CFG_STVREN$ON 000000  
                                ??___awmod 000A                           LED_Light_Pos@pos 000D  
               __size_of_FRAME_MapPosition 0002                                  ??___lwdiv 000A  
                                   clear_0 2396                                     clear_1 23A8  
                                   clear_2 23B4                           ___awdiv@quotient 000C  
                          ___awmod@divisor 0008         LED_Update@Fulfillment_Lvl_for_rest 00F1  
                          ___awmod@counter 000A                               NVMalloc@size 0006  
               ??_FRAME_PrzypisanieDokarty 0008                   ??i1_TMR1_Update_flag_Set 0003  
                          __CFG_BOREN$BOHW 000000                    __size_of_ReadfromEEPROM 0012  
                             __pdataCOMRAM 003A                                     tblptrh 000FF7  
                                   tblptrl 000FF6                                     tblptru 000FF8  
                             ??_FLASH_Read 000A        __size_of_FRAME_ExcitationMultiplier 004E  
               __size_of_MOC_Frame_Counter 0010                       __size_of_LED_Control 0152  
                            _WritetoEEPROM 2974                   FRAME_MapPosition@message 0006  
                           FLASH_Read@addr 0006                      TMR1_Update_flag_Set@a 0006  
                               __accesstop 0060                    __end_of__initialization 23BA  
                             ??_FRAME_Plot 000F                        ISR_low@ramkaStanuU8 0037  
                                ?_LED_Left 0006                            ??_LED_Light_Pos 0011  
                            ___rparam_used 000001                     ?_FRAME_ExcitationValue 000C  
                                ?_LOCK_Get 0001                                  ?_LOCK_Set 0001  
          __end_of_FRAME_AdressOfNeighbors 0F2E       EEPROM_Adres_Writeto@AdressOfNeighbor 000B  
                           __pcstackCOMRAM 0001                               __pidataBANK0 2BAA  
                                LED_Left@a 0006                                  LED_Left@b 0008  
                      _INI_GlobalInterrupt 2B48                                  ?_ISR_high 0001  
                       __end_of_FLASH_Read 2B14                                  ?_NVMWrite 0009  
                                ?_NVMalloc 0006                               ??_LED_Update 0018  
              __end_of_TRM_DataTransmition 273C                      _FRAME_SoftwareVersion 2528  
                       __end_of_FRAME_Plot 269C                               ??_INI_OUTPUT 0006  
                                LOCK_Set@k 0006                    FRAME_AxisStatus@message 0006  
              IsInNeighbors@message_adress 0006                             ?_WritetoEEPROM 0006  
                     ?_INI_GlobalInterrupt 0001                           _ReadDataToEEPROM 1516  
                __size_of_FRAME_AxisStatus 0036                                 __pbssBANK0 0060  
              __size_of_CAN_SetupFilter_Ne 0096                             FLASH_Write@val 000A  
                            NVMWrite@count 000D                       __size_of_MOC_NOTWORK 0008  
                          ??_INI_LED_Start 000B                                 ??_LED_Left 0008  
                               ??_LOCK_Get 0006                                 ??_LOCK_Set 0006  
                       __end_of_LED_Update 209E                         __end_of_INI_OUTPUT 2AC8  
                               ??_ISR_high 0001                        TMR1_Timer_reset@t1H 0002  
                      TMR1_Timer_reset@t1L 0001                                    _ECANCON 000F77  
                                  _CANSTAT 000F6E                                 ??_NVMWrite 000F  
                  ??_CAN_MoveBuffIntoFrame 000A                                 ??_NVMalloc 000A  
             __end_of_TMR1_Update_flag_Get 2B8A               __end_of_TMR1_Update_flag_Set 2B80  
          __size_ofi1_TMR1_Update_flag_Set 000A               __end_of_FRAME_HandleCanFrame 1378  
                                  _INI_All 2A86                   __end_of_TMR1_Timer_reset 2A86  
                                  _RXB0DLC 000F65                                    _RXB0CON 000F60  
                                  _RXB1CON 000F50                      ??_INI_GlobalInterrupt 0006  
                                  _TXB0CON 000F40                                    _ISR_low 0C18  
                                  _RXFCON0 000DD4                                    _RXFCON1 000DD5  
                                  _NVMInit 285E                                    _NVMRead 29A8  
                                  _DaneCan 00CB      EEPROM_Adres_Readfrom@StartEEPROMAdres 0008  
       __end_of_FRAME_ExcitationMultiplier 278A                 _FRAME_ExcitationMultiplier 273C  
              FRAME_HandleCanFrame@message 0014                                    __Hparam 0000  
         ??_MOC_Wynikowa_wartosc_roznicowa 0008            ?_MOC_Wynikowa_wartosc_roznicowa 0006  
                                  __Lparam 0000                     __size_of_CAN_TakeFrame 0252  
                                _CAN_GenID 23C8                                    ___awdiv 21D2  
                                  ___awmod 24B8                                  _CAN_Setup 258E  
                   __size_of_CAN_SendFrame 0172                                    ___lwdiv 269C  
                        LED_Light_Pos@pos2 0014                                    __pcinit 234E  
           __size_of_EEPROM_Adres_Readfrom 007C                                    __ramtop 0D00  
   FRAME_DataUpdateAndChangeOption@message 0006              __end_of_EEPROM_Adres_Readfrom 22D2  
                                  __ptext0 1E9A                                    __ptext1 26EE  
                                  __ptext2 1180                                    __ptext3 2AC8  
                                  __ptext4 2528                                    __ptext5 1AB0  
                                  __ptext6 2B62                                    __ptext7 2B94  
                                  __ptext8 2B38                                    __ptext9 2B6C  
                   ?_FRAME_SoftwareVersion 0006                             _ReadfromEEPROM 2B26  
                         ___awmod@dividend 0006              __size_of_EEPROM_Adres_Writeto 0046  
                          ??_WritetoEEPROM 0009                     __size_of_CAN_SetupMask 0078  
        __size_of_MOC_Aktualna_Temperatura 000A             FRAME_AdressOfNeighbors@nrRamki 0008  
                ?_MOC_Aktualna_Temperatura 0006           __size_of_FRAME_AdressOfNeighbors 02CC  
                         ??_CAN_SetupClock 0006             FRAME_AdressOfNeighbors@message 0006  
                                  main@adr 001C                                  _RADAR_Use 2B56  
                                _LED_Error 2AC8                             __pintcode_body 2BA4  
                                _LED_Right 278A                       end_of_initialization 23BA  
     FRAME_SensorExcitationStatus@statwect 001E                              __Lmediumconst 0000  
                                  int_func 2BA4                                  _INI_Timer 2AE6  
                   i1_TMR1_Update_flag_Set 2B8A           TRM_DataTransmition@czujnikWeWyU8 0035  
                               ?_CAN_GenID 0006                              ??_FLASH_Write 000C  
                                  postdec1 000FE5                                    postdec2 000FDD  
                                  postinc0 000FEE                                    postinc2 000FDE  
                               ?_CAN_Setup 0001  EEPROM_Adres_Readfrom@ReadAdressOfNeighbor 0013  
            __size_of_FRAME_AveragingTimes 0036                     __end_of_ReadfromEEPROM 2B38  
                     CAN_SendFrame@message 000B                           NVMalloc@location 0008  
                            LED_Update@Red 0038                              _CAN_TakeFrame 0F2E  
                              NVMRead@addr 000A                              _CAN_SendFrame 16A4  
                               ?_RADAR_Use 0001                                 ?_LED_Error 0001  
                              NVMRead@dest 0008                FRAME_AdressOfNeighbors@kier 000E  
                               ?_LED_Right 0006                           _FRAME_AxisStatus 2908  
                  ??_FRAME_ExcitationValue 000E               EEPROM_Adres_Writeto@MaxAdres 000F  
                               ?_INI_Timer 0001               EEPROM_Adres_Writeto@MinAdres 000D  
                          _ramkaCanRxKarty 0060                       _TMR1_Update_flag_Get 2B80  
                          _ramkaCanTxKarty 00B5                       _TMR1_Update_flag_Set 2B76  
                            _CAN_SetupMask 2440                          __size_of_LED_Left 0042  
                     _FRAME_HandleCanFrame 1180                     __size_of_IsInNeighbors 00CA  
                        __size_of_LOCK_Get 0004                          __size_of_LOCK_Set 0008  
                        _WriteDataToEEPROM 1378                   __end_of_ReadDataToEEPROM 16A4  
                           CAN_TakeFrame@k 0013                         ?_WriteDataToEEPROM 0001  
                          ?_ReadfromEEPROM 0006                              __pidataCOMRAM 2B14  
                        __size_of_ISR_high 1FA2                                 LED_Right@a 0006  
                               LED_Right@b 000A                        __end_of_FLASH_Write 234E  
                    MOC_Frame_Counter@zeta 00EF                          __size_of_NVMWrite 0036  
                            ??_LED_Control 0008                        ??_WriteDataToEEPROM 0011  
                        __size_of_NVMalloc 0038                        start_initialization 234E  
                           ?_CAN_TakeFrame 000E                                  _Init_Data 004A  
                           ?_CAN_SendFrame 000B            FRAME_SensorExcitationStatus@tru 000C  
                         __CFG_OSC$IRCIO67 000000          __size_of_FRAME_PrzypisanieDokarty 009E  
                ?_FRAME_PrzypisanieDokarty 0006                      ?_TMR1_Update_flag_Get 0006  
                    ?_TMR1_Update_flag_Set 0006                             ?_CAN_SetupMask 0001  
                    __end_of_LED_Light_Pos 1FFC                      ?_FRAME_HandleCanFrame 0014  
                __end_of_WriteDataToEEPROM 1516                                ??_CAN_GenID 0009  
                              ??_CAN_Setup 0006                                __pdataBANK0 00EF  
                         __CFG_LPT1OSC$OFF 000000                   CAN_MoveBuffIntoFrame@Buf 0008  
     __end_of_FRAME_SensorExcitationStatus 1BD8      __size_of_FRAME_SensorExcitationStatus 0128  
                 CAN_MoveBuffIntoFrame@Ram 0006               _FRAME_SensorExcitationStatus 1AB0  
           __size_of_CAN_MoveBuffIntoFrame 002A                                __pbssBIGRAM 00F3  
            __end_of_CAN_MoveBuffIntoFrame 2A3A                            _Fulfillment_Lvl 0044  
                              __pbssCOMRAM 001E                                   ?_INI_All 0001  
                  _FRAME_AdressOfNeighbors 0C62                            FLASH_Write@addr 0006  
                            __pcstackBANK0 00DE                              _IsInNeighbors 1DD0  
                        ?_TMR1_Timer_reset 0001                            _ustawieniaKarty 00DC  
                              _BRGCON1bits 000F70                                _BRGCON2bits 000F71  
                              _BRGCON3bits 000F72                                   ?_ISR_low 0001  
  __end_of_FRAME_DataUpdateAndChangeOption 2644   __size_of_FRAME_DataUpdateAndChangeOption 005A  
        ??_FRAME_DataUpdateAndChangeOption 0008           ?_FRAME_DataUpdateAndChangeOption 0006  
          _FRAME_DataUpdateAndChangeOption 25EA                              ??_MOC_NOTWORK 0008  
               __end_of_CAN_SetupFilter_Ne 21D2                                   ?_NVMInit 0001  
                                 ?_NVMRead 0008                         ??_TMR1_Timer_reset 0001  
                              ??_RADAR_Use 0006                                ??_LED_Error 000B  
                           NVMWrite@source 0009                                ??_LED_Right 0008  
             __size_of_TRM_DataTransmition 004E                        __end_of_LED_Control 1968  
              ?_FRAME_ExcitationMultiplier 0006                                ??_INI_Timer 0006  
                    __end_of_INI_LED_Start 2A10                           ___lwdiv@dividend 0006  
                                __pintcode 0C08                                   ?___awdiv 0006  
                              _FLASH_Write 22D2                                   ?___awmod 0006  
                  ??_FRAME_SoftwareVersion 0008           __end_of_MOC_Aktualna_Temperatura 2B76  
                                 ?___lwdiv 0006                          FRAME_Plot@message 000D  
                              __pintcodelo 0C18                __end_of_INI_GlobalInterrupt 2B56  
                          ??_CAN_TakeFrame 0010              ?_FRAME_SensorExcitationStatus 0008  
   __end_of_MOC_Wynikowa_wartosc_roznicowa 2B6C    __size_of_MOC_Wynikowa_wartosc_roznicowa 000A  
           _MOC_Wynikowa_wartosc_roznicowa 2B62                                _COMSTATbits 000F74  
                           ?_IsInNeighbors 0006                            ??_CAN_SendFrame 000D  
                         ___lwdiv@quotient 000B                    ?i1_TMR1_Update_flag_Set 0001  
              FRAME_AveragingTimes@message 0006                     ??_TMR1_Update_flag_Get 0008  
                   ??_TMR1_Update_flag_Set 0008                            ??_CAN_SetupMask 0006  
                                 _LED_Left 281C                     ??_FRAME_HandleCanFrame 0016  
                     CAN_TakeFrame@message 000E                        __end_of_MOC_NOTWORK 2B9C  
             __end_of_EEPROM_Adres_Writeto 281C                                   _LOCK_Get 2BAE  
                     CAN_TakeFrame@tempCON 0012                                   _LOCK_Set 2B9C  
               __size_of_WriteDataToEEPROM 019E                                   _RXB0EIDH 000F63  
                                 _RXB0EIDL 000F64                                   _RCONbits 000FD0  
                         __CFG_WDTPS$32768 000000                                   _RXB0SIDH 000F61  
                                 _RXB0SIDL 000F62                                   _RXF0EIDH 000F02  
                                 _RXF0EIDL 000F03                                   _RXF1EIDH 000F06  
                                 _RXF1EIDL 000F07                                   _RXF2EIDH 000F0A  
                                 _RXF2EIDL 000F0B                                   _RXF3EIDH 000F0E  
                                 _RXF3EIDL 000F0F                                   _RXF4EIDH 000F12  
                                 _RXF4EIDL 000F13                                   _RXF5EIDH 000F16  
                                 _RXF5EIDL 000F17                                   _RXF6EIDH 000D62  
                                 _RXF6EIDL 000D63                                   _RXF0SIDH 000F00  
                                 _RXF7EIDH 000D66                                   _RXF0SIDL 000F01  
                                 _RXF7EIDL 000D67                                   _RXF1SIDH 000F04  
                                 _RXF8EIDH 000D6A                                   _RXF1SIDL 000F05  
                                 _RXF8EIDL 000D6B                                   _RXF2SIDH 000F08  
                                 _RXF9EIDH 000D72                                   _RXF2SIDL 000F09  
                                 _RXF9EIDL 000D73                                   _RXF3SIDH 000F0C  
                                 _RXF3SIDL 000F0D                                   _ISR_high 0C08  
                                 _RXF4SIDH 000F10                                   _RXF4SIDL 000F11  
                                 _RXF5SIDH 000F14                                   _RXF5SIDL 000F15  
                                 _RXF6SIDH 000D60                                   _RXF6SIDL 000D61  
                                 _RXM0EIDH 000F1A                                   _RXF7SIDH 000D64  
                                 _RXM0EIDL 000F1B                                   _RXF7SIDL 000D65  
                                 _RXM1EIDH 000F1E                                   _RXF8SIDH 000D68  
                                 _RXM1EIDL 000F1F                                   _RXF8SIDL 000D69  
                                 _RXF9SIDH 000D70                                   _RXF9SIDL 000D71  
                                 _RXFBCON0 000DE0                                   _RXFBCON1 000DE1  
                                 _RXFBCON2 000DE2                                   _RXFBCON3 000DE3  
                                 _RXFBCON4 000DE4                                   _RXM0SIDH 000F18  
                                 _RXM0SIDL 000F19                                   _RXM1SIDH 000F1C  
                                 _RXM1SIDL 000F1D                   __end_of_FRAME_AxisStatus 293E  
                                 _NVMWrite 28D2                     FLASH_Write@GIEBitValue 000E  
                                 _NVMalloc 289A                  ??_FRAME_AdressOfNeighbors 000A  
                    _EEPROM_Adres_Readfrom 2256                         LED_Update@laststat 0048  
                         _DetectorLedRadar 00CF                                _LED_Control 1816  
                         __size_of_INI_All 0022               FRAME_ExcitationValue@message 000C  
                    __end_of_WritetoEEPROM 29A8             __end_ofi1_TMR1_Update_flag_Set 2B94  
                           _nextEEPosition 00D2                                  copy_data0 2362  
                                copy_data1 2382                           __size_of_ISR_low 0046  
       __size_of_FRAME_AccelerometerStatus 00EC               __end_of_FRAME_AveragingTimes 2974  
                                 _MaxAdres 003E                           __size_of_NVMInit 003C  
                         __size_of_NVMRead 0034                 ?_FRAME_AccelerometerStatus 000C  
                                 _MinAdres 0024                                   _MaxRange 003C  
                                 _MaxPower 003A                                   _MinRange 0022  
                                 _MinPower 0020             __size_of_FRAME_ExcitationValue 010C  
            __end_of_FRAME_ExcitationValue 1CE4                                 _EECON1bits 000FA6  
                                 __Hrparam 0000                               _RXB0SIDLbits 000F62  
                         ??_ReadfromEEPROM 0008                                   __Lrparam 0000  
                        ?_ReadDataToEEPROM 0001                           __size_of___awdiv 0084  
                         __size_of___awmod 0070                           __size_of___lwdiv 0052  
                       ??_ReadDataToEEPROM 0015                            ??_IsInNeighbors 0008  
                 _MOC_Aktualna_Temperatura 2B6C            FRAME_PrzypisanieDokarty@message 0006  
                       LED_Light_Pos@flage 0016                         LED_Light_Pos@color 0011  
         __end_of_FRAME_PrzypisanieDokarty 213C                               _RXF0SIDLbits 000F01  
                 FRAME_AnalogValue@message 0006                            ___lwdiv@divisor 0008  
                             _RXF1SIDLbits 000F05                                 _FLASH_Read 2AFE  
                          ___lwdiv@counter 000A                                   __ptext10 2B9C  
                                 __ptext11 2BAE                                   __ptext20 28D2  
                                 __ptext12 1DD0                                   __ptext21 27D6  
                                 __ptext13 209E                                   __ptext30 16A4  
                                 __ptext22 2974                                   __ptext14 2644  
                                 __ptext31 23C8                                   __ptext23 25EA  
                                 __ptext15 2BB2                                   __ptext40 269C  
                                 __ptext32 0F2E                                   __ptext24 2908  
                                 __ptext16 1BD8                                   __ptext41 278A  
                                 __ptext33 21D2                                   __ptext25 293E  
                                 __ptext17 273C                                   __ptext50 2AE6  
                                 __ptext42 281C                                   __ptext34 2A10  
                                 __ptext26 2BB4                                   __ptext18 1968  
                                 __ptext51 2AA8                                   __ptext43 2A86  
                                 __ptext35 2B76                                   __ptext27 0C62  
                                 __ptext19 1378                                   __ptext60 2AFE  
                                 __ptext52 29DC                                   __ptext44 1516  
                                 __ptext36 2B80                                   __ptext28 1CE4  
           ??_FRAME_SensorExcitationStatus 000A                                   __ptext53 1816  
                                 __ptext45 29A8                                   __ptext37 2B56  
                                 __ptext29 24B8                                   __ptext62 2B8A  
                                 __ptext54 2B48                                   __ptext46 2256  
                                 __ptext38 1FFC                                   __ptext63 2A62  
                                 __ptext55 258E                                   __ptext47 2B26  
                                 __ptext39 1F4C                                   __ptext56 2440  
                                 __ptext48 285E                                   __ptext57 213C  
                                 __ptext49 289A                                   __ptext58 2A3A  
                                 __ptext59 22D2              TRM_DataTransmition@canMessage 00DE  
                             _RXF2SIDLbits 000F09                                _MOC_NOTWORK 2B94  
                             _RXF3SIDLbits 000F0D                  FRAME_HandleCanFrame@ident 0019  
                             _RXF4SIDLbits 000F11                   FRAME_DeviceReset@message 0011  
        __end_of_FRAME_AccelerometerStatus 1DD0                               _RXF5SIDLbits 000F15  
                               _FRAME_Plot 2644                              __size_of_main 00B2  
                             _RXF6SIDLbits 000D61                               _RXF7SIDLbits 000D65  
                  __size_of_CAN_SetupClock 0028                               _RXF8SIDLbits 000D69  
                             _RXF9SIDLbits 000D71                                   int$flags 004C  
                      _TRM_DataTransmition 26EE                                _RXB0DLCbits 000F65  
                   ?_EEPROM_Adres_Readfrom 0008                                 _LED_Update 1FFC  
                              _RXB0CONbits 000F60                                 _INTCONbits 000FF2  
                     _EEPROM_Adres_Writeto 27D6                                 _INI_OUTPUT 2AA8  
                        _FRAME_AnalogValue 2BB4                       ?_TRM_DataTransmition 0001  
             FRAME_SoftwareVersion@message 0006                                   intlevel1 0000  
                                 intlevel2 0000                            _czujnikiNaMapie 00D4  
                       ?_FRAME_AnalogValue 0006        FRAME_SensorExcitationStatus@message 0008  
                              _TXB0CONbits 000F40                        ??_FRAME_AnalogValue 000A  
                __size_of_TMR1_Timer_reset 0024                         _CAN_SetupFilter_Ne 213C  
                             ?_FLASH_Write 0006                   LED_Light_Pos@fulfillment 000F  
                     _FRAME_AveragingTimes 293E                        ?_CAN_SetupFilter_Ne 0001  
           __size_of_FRAME_SoftwareVersion 0066                          _FRAME_DeviceReset 1968  
            __end_of_FRAME_SoftwareVersion 258E                         ?_FRAME_DeviceReset 0011  
                    ?_EEPROM_Adres_Writeto 0009                            LED_Update@Green 0049  
                __end_of_FRAME_AnalogValue 2BB6       EEPROM_Adres_Writeto@StartEEPROMAdres 0009  
                   __size_of_LED_Light_Pos 00B0                                ?_FLASH_Read 0006  
                    _CAN_MoveBuffIntoFrame 2A10                                 _WDTCONbits 000FD1  
                      ??_FRAME_DeviceReset 0013                      ??_TRM_DataTransmition 001C  
                 _FRAME_PrzypisanieDokarty 209E                     LED_Light_Pos@LED_array 0012  
                     ??_CAN_SetupFilter_Ne 0006                             LED_Update@pos1 0042  
                           LED_Update@pos2 0040                                ?_FRAME_Plot 000D  
