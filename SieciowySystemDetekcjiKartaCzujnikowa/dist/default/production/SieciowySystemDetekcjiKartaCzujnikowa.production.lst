

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Thu Jul 18 14:17:56 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4680
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1
    54                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1
    56                           	psect	text44,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    59                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    60                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    61                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    62  0000                     
    63                           ; Version 2.05
    64                           ; Generated 20/12/2018 GMT
    65                           ; 
    66                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    67                           ; All rights reserved.
    68                           ; 
    69                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    70                           ; 
    71                           ; Redistribution and use in source and binary forms, with or without modification, are
    72                           ; permitted provided that the following conditions are met:
    73                           ; 
    74                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    75                           ;        conditions and the following disclaimer.
    76                           ; 
    77                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    78                           ;        of conditions and the following disclaimer in the documentation and/or other
    79                           ;        materials provided with the distribution.
    80                           ; 
    81                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    82                           ;        software without specific prior written permission.
    83                           ; 
    84                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    85                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    86                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    87                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    88                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    89                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    90                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    91                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    92                           ; 
    93                           ; 
    94                           ; Code-generator required, PIC18F4680 Definitions
    95                           ; 
    96                           ; SFR Addresses
    97  0000                     
    98                           	psect	idataCOMRAM
    99  00135E                     __pidataCOMRAM:
   100                           	opt callstack 0
   101                           
   102                           ;initializer for MOC_Frame_Counter@zeta
   103  00135E  0011               	dw	17
   104                           
   105                           ;initializer for LED_Update@pos2
   106  001360  0001               	dw	1
   107                           
   108                           ;initializer for LED_Update@pos1
   109  001362  0001               	dw	1
   110                           
   111                           ;initializer for _Fulfillment_Lvl
   112  001364  0014               	dw	20
   113                           
   114                           ;initializer for LED_Update@Green
   115  001366  01                 	db	1
   116  0000                     _MSEL3	set	3571
   117  0000                     _MSEL2	set	3570
   118  0000                     _MSEL1	set	3569
   119  0000                     _MSEL0	set	3568
   120  0000                     _BIE0	set	3578
   121  0000                     _BSEL0	set	3576
   122  0000                     _B5CON	set	3696
   123  0000                     _B4CON	set	3680
   124  0000                     _B3CON	set	3664
   125  0000                     _B2CON	set	3648
   126  0000                     _B1CON	set	3632
   127  0000                     _B0CON	set	3616
   128  0000                     _TXB0CONbits	set	3904
   129  0000                     _RXF2EIDL	set	3851
   130  0000                     _RXF2EIDH	set	3850
   131  0000                     _RXF2SIDLbits	set	3849
   132  0000                     _RXF2SIDL	set	3849
   133  0000                     _RXF2SIDH	set	3848
   134  0000                     _RXF1EIDL	set	3847
   135  0000                     _RXF1EIDH	set	3846
   136  0000                     _RXF1SIDLbits	set	3845
   137  0000                     _RXF1SIDL	set	3845
   138  0000                     _RXF1SIDH	set	3844
   139  0000                     _RXF0EIDL	set	3843
   140  0000                     _RXF0EIDH	set	3842
   141  0000                     _RXF0SIDLbits	set	3841
   142  0000                     _RXF0SIDL	set	3841
   143  0000                     _RXF0SIDH	set	3840
   144  0000                     _RXM1EIDL	set	3871
   145  0000                     _RXM1EIDH	set	3870
   146  0000                     _RXM1SIDL	set	3869
   147  0000                     _RXM1SIDH	set	3868
   148  0000                     _RXM0EIDL	set	3867
   149  0000                     _RXM0EIDH	set	3866
   150  0000                     _RXM0SIDL	set	3865
   151  0000                     _RXM0SIDH	set	3864
   152  0000                     _RXB1CON	set	3920
   153  0000                     _TXB0CON	set	3904
   154  0000                     _INTCONbits	set	4082
   155  0000                     _WDTCONbits	set	4049
   156  0000                     _RCONbits	set	4048
   157  0000                     _TRISC	set	3988
   158  0000                     _LATC	set	3979
   159  0000                     _T1CON	set	4045
   160  0000                     _TMR1H	set	4047
   161  0000                     _TMR1L	set	4046
   162  0000                     _LATE	set	3981
   163  0000                     _LATA	set	3977
   164  0000                     _LATB	set	3978
   165  0000                     _LATD	set	3980
   166  0000                     _TRISD	set	3989
   167  0000                     _TRISE	set	3990
   168  0000                     _TRISB	set	3987
   169  0000                     _TRISA	set	3986
   170  0000                     _RXB0DLCbits	set	3941
   171  0000                     _RXB0DLC	set	3941
   172  0000                     _RXB0SIDH	set	3937
   173  0000                     _RXB0SIDLbits	set	3938
   174  0000                     _RXB0SIDL	set	3938
   175  0000                     _RXB0EIDH	set	3939
   176  0000                     _RXB0EIDL	set	3940
   177  0000                     _COMSTATbits	set	3956
   178  0000                     _RXB0CONbits	set	3936
   179  0000                     _BRGCON3bits	set	3954
   180  0000                     _BRGCON2bits	set	3953
   181  0000                     _BRGCON1bits	set	3952
   182  0000                     _CIOCON	set	3955
   183  0000                     _ECANCON	set	3959
   184  0000                     _PIR3	set	4004
   185  0000                     _IPR3	set	4005
   186  0000                     _PIE3	set	4003
   187  0000                     _RXB0CON	set	3936
   188  0000                     _CANSTAT	set	3950
   189  0000                     _CANCON	set	3951
   190  0000                     _RCON	set	4048
   191  0000                     _RXB0D0	set	3942
   192  0000                     _TMR1IF	set	31984
   193  0000                     _TMR1IP	set	31992
   194  0000                     _PEIE	set	32662
   195  0000                     _IPEN	set	32391
   196  0000                     _TMR1ON	set	32360
   197  0000                     _TMR1IE	set	31976
   198  0000                     _IRCF0	set	32412
   199  0000                     _IRCF1	set	32413
   200  0000                     _IRCF2	set	32414
   201                           
   202                           ; #config settings
   203  0000                     
   204                           	psect	cinit
   205  000E9C                     __pcinit:
   206                           	opt callstack 0
   207  000E9C                     start_initialization:
   208                           	opt callstack 0
   209  000E9C                     __initialization:
   210                           	opt callstack 0
   211                           
   212                           ; Initialize objects allocated to COMRAM (9 bytes)
   213                           ; load TBLPTR registers with __pidataCOMRAM
   214  000E9C  0E5E               	movlw	low __pidataCOMRAM
   215  000E9E  6EF6               	movwf	tblptrl,c
   216  000EA0  0E13               	movlw	high __pidataCOMRAM
   217  000EA2  6EF7               	movwf	tblptrh,c
   218  000EA4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   219  000EA6  6EF8               	movwf	tblptru,c
   220  000EA8  EE00  F04D         	lfsr	0,__pdataCOMRAM
   221  000EAC  EE10 F009          	lfsr	1,9
   222  000EB0                     copy_data0:
   223  000EB0  0009               	tblrd		*+
   224  000EB2  CFF5 FFEE          	movff	tablat,postinc0
   225  000EB6  50E5               	movf	postdec1,w,c
   226  000EB8  50E1               	movf	fsr1l,w,c
   227  000EBA  E1FA               	bnz	copy_data0
   228                           
   229                           ; Clear objects allocated to BIGRAM (544 bytes)
   230  000EBC  EE00  F0C6         	lfsr	0,__pbssBIGRAM
   231  000EC0  EE12 F020          	lfsr	1,544
   232  000EC4                     clear_0:
   233  000EC4  6AEE               	clrf	postinc0,c
   234  000EC6  50E5               	movf	postdec1,w,c
   235  000EC8  50E1               	movf	fsr1l,w,c
   236  000ECA  E1FC               	bnz	clear_0
   237  000ECC  50E2               	movf	fsr1h,w,c
   238  000ECE  E1FA               	bnz	clear_0
   239                           
   240                           ; Clear objects allocated to BANK0 (102 bytes)
   241  000ED0  EE00  F060         	lfsr	0,__pbssBANK0
   242  000ED4  0E66               	movlw	102
   243  000ED6                     clear_1:
   244  000ED6  6AEE               	clrf	postinc0,c
   245  000ED8  06E8               	decf	wreg,f,c
   246  000EDA  E1FD               	bnz	clear_1
   247                           
   248                           ; Clear objects allocated to COMRAM (21 bytes)
   249  000EDC  EE00  F038         	lfsr	0,__pbssCOMRAM
   250  000EE0  0E15               	movlw	21
   251  000EE2                     clear_2:
   252  000EE2  6AEE               	clrf	postinc0,c
   253  000EE4  06E8               	decf	wreg,f,c
   254  000EE6  E1FD               	bnz	clear_2
   255  000EE8                     end_of_initialization:
   256                           	opt callstack 0
   257  000EE8                     __end_of__initialization:
   258                           	opt callstack 0
   259  000EE8  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   260  000EEA  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   261  000EEC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   262  000EEE  6EF8               	movwf	tblptru,c
   263  000EF0  0100               	movlb	0
   264  000EF2  EFE9  F008         	goto	_main	;jump to C main() function
   265                           
   266                           	psect	bssCOMRAM
   267  000038                     __pbssCOMRAM:
   268                           	opt callstack 0
   269  000038                     _Flagi:
   270                           	opt callstack 0
   271  000038                     	ds	5
   272  00003D                     _DaneCan:
   273                           	opt callstack 0
   274  00003D                     	ds	4
   275  000041                     _DetectorLedRadar:
   276                           	opt callstack 0
   277  000041                     	ds	3
   278  000044                     _TMR1_Update_flag:
   279                           	opt callstack 0
   280  000044                     	ds	2
   281  000046                     _Dane:
   282                           	opt callstack 0
   283  000046                     	ds	2
   284  000048                     	ds	1
   285  000049                     	ds	1
   286  00004A                     ISR_low@ramkaStanuU8:
   287                           	opt callstack 0
   288  00004A                     	ds	1
   289  00004B                     	ds	1
   290  00004C                     _LOCK:
   291                           	opt callstack 0
   292  00004C                     	ds	1
   293                           
   294                           	psect	dataCOMRAM
   295  00004D                     __pdataCOMRAM:
   296                           	opt callstack 0
   297  00004D                     MOC_Frame_Counter@zeta:
   298                           	opt callstack 0
   299  00004D                     	ds	2
   300  00004F                     LED_Update@pos2:
   301                           	opt callstack 0
   302  00004F                     	ds	2
   303  000051                     LED_Update@pos1:
   304                           	opt callstack 0
   305  000051                     	ds	2
   306  000053                     _Fulfillment_Lvl:
   307                           	opt callstack 0
   308  000053                     	ds	2
   309  000055                     LED_Update@Green:
   310                           	opt callstack 0
   311  000055                     	ds	1
   312                           
   313                           	psect	bssBANK0
   314  000060                     __pbssBANK0:
   315                           	opt callstack 0
   316  000060                     _ramkaCanRxKarty:
   317                           	opt callstack 0
   318  000060                     	ds	85
   319  0000B5                     _ramkaCanTxKarty:
   320                           	opt callstack 0
   321  0000B5                     	ds	17
   322                           
   323                           	psect	bssBIGRAM
   324  0000C6                     __pbssBIGRAM:
   325                           	opt callstack 0
   326  0000C6                     _wartosciSasiada:
   327                           	opt callstack 0
   328  0000C6                     	ds	544
   329                           
   330                           	psect	cstackCOMRAM
   331  000001                     __pcstackCOMRAM:
   332                           	opt callstack 0
   333  000001                     TMR1_Timer_reset@t1L:
   334                           	opt callstack 0
   335  000001                     i1TMR1_Update_flag_Set@a:
   336                           	opt callstack 0
   337                           
   338                           ; 2 bytes @ 0x0
   339  000001                     	ds	1
   340  000002                     TMR1_Timer_reset@t1H:
   341                           	opt callstack 0
   342                           
   343                           ; 1 bytes @ 0x1
   344  000002                     	ds	1
   345  000003                     ??_ISR_low:
   346  000003                     
   347                           ; 1 bytes @ 0x2
   348  000003                     	ds	3
   349  000006                     ??_CAN_Setup:
   350  000006                     ?_TMR1_Update_flag_Get:
   351                           	opt callstack 0
   352  000006                     ?_LED_Right:
   353                           	opt callstack 0
   354  000006                     ?_LED_Left:
   355                           	opt callstack 0
   356  000006                     ?_MOCK_PrzyspieszenieX:
   357                           	opt callstack 0
   358  000006                     ?_MOCK_PrzyspieszenieY:
   359                           	opt callstack 0
   360  000006                     ?_MOCK_PrzyspieszenieZ:
   361                           	opt callstack 0
   362  000006                     ?_MOCK_Klikniecie_Spadek:
   363                           	opt callstack 0
   364  000006                     ?___wmul:
   365                           	opt callstack 0
   366  000006                     ?___awdiv:
   367                           	opt callstack 0
   368  000006                     ?___lwdiv:
   369                           	opt callstack 0
   370  000006                     CAN_MoveBuffIntoFrame@Ram:
   371                           	opt callstack 0
   372  000006                     CAN_GenID@message:
   373                           	opt callstack 0
   374  000006                     LED_Right@a:
   375                           	opt callstack 0
   376  000006                     LED_Left@a:
   377                           	opt callstack 0
   378  000006                     LED_Control@diode:
   379                           	opt callstack 0
   380  000006                     TMR1_Update_flag_Set@a:
   381                           	opt callstack 0
   382  000006                     FRAME_ExcitationValue@message:
   383                           	opt callstack 0
   384  000006                     FRAME_ExcitationMultiplier@message:
   385                           	opt callstack 0
   386  000006                     FRAME_AveragingTimes@message:
   387                           	opt callstack 0
   388  000006                     FRAME_AxisStatus@message:
   389                           	opt callstack 0
   390  000006                     FRAME_DeviceReset@message:
   391                           	opt callstack 0
   392  000006                     FRAME_MapPosition@message:
   393                           	opt callstack 0
   394  000006                     FRAME_SoftwareVersion@message:
   395                           	opt callstack 0
   396  000006                     FRAME_AnalogValue@message:
   397                           	opt callstack 0
   398  000006                     FRAME_PrzypisanieDokarty@message:
   399                           	opt callstack 0
   400  000006                     ___wmul@multiplier:
   401                           	opt callstack 0
   402  000006                     ___awdiv@dividend:
   403                           	opt callstack 0
   404  000006                     ___lwdiv@dividend:
   405                           	opt callstack 0
   406                           
   407                           ; 2 bytes @ 0x5
   408  000006                     	ds	2
   409  000008                     ??_LED_Right:
   410  000008                     CAN_GenID@frameID:
   411                           	opt callstack 0
   412  000008                     CAN_MoveBuffIntoFrame@Buf:
   413                           	opt callstack 0
   414  000008                     LED_Left@b:
   415                           	opt callstack 0
   416  000008                     FRAME_AccelerometerStatus@message:
   417                           	opt callstack 0
   418  000008                     FRAME_AnalogValue@set:
   419                           	opt callstack 0
   420  000008                     ___wmul@multiplicand:
   421                           	opt callstack 0
   422  000008                     ___awdiv@divisor:
   423                           	opt callstack 0
   424  000008                     ___lwdiv@divisor:
   425                           	opt callstack 0
   426                           
   427                           ; 2 bytes @ 0x7
   428  000008                     	ds	1
   429  000009                     ??_CAN_GenID:
   430  000009                     FRAME_ExcitationMultiplier@i:
   431                           	opt callstack 0
   432                           
   433                           ; 2 bytes @ 0x8
   434  000009                     	ds	1
   435  00000A                     CAN_MoveBuffIntoFrame@i:
   436                           	opt callstack 0
   437  00000A                     LED_Control@color:
   438                           	opt callstack 0
   439  00000A                     ___awdiv@counter:
   440                           	opt callstack 0
   441  00000A                     LED_Right@b:
   442                           	opt callstack 0
   443  00000A                     ___wmul@product:
   444                           	opt callstack 0
   445  00000A                     ___lwdiv@quotient:
   446                           	opt callstack 0
   447                           
   448                           ; 2 bytes @ 0x9
   449  00000A                     	ds	1
   450  00000B                     ___awdiv@sign:
   451                           	opt callstack 0
   452  00000B                     CAN_SendFrame@message:
   453                           	opt callstack 0
   454                           
   455                           ; 2 bytes @ 0xA
   456  00000B                     	ds	1
   457  00000C                     ___lwdiv@counter:
   458                           	opt callstack 0
   459  00000C                     FRAME_AdressOfNeighbors@message:
   460                           	opt callstack 0
   461  00000C                     ___awdiv@quotient:
   462                           	opt callstack 0
   463                           
   464                           ; 2 bytes @ 0xB
   465  00000C                     	ds	1
   466  00000D                     ??_CAN_SendFrame:
   467  00000D                     LED_Light_Pos@pos:
   468                           	opt callstack 0
   469  00000D                     FRAME_Plot@message:
   470                           	opt callstack 0
   471                           
   472                           ; 2 bytes @ 0xC
   473  00000D                     	ds	1
   474  00000E                     CAN_TakeFrame@message:
   475                           	opt callstack 0
   476  00000E                     FRAME_AdressOfNeighbors@nrRamki:
   477                           	opt callstack 0
   478                           
   479                           ; 2 bytes @ 0xD
   480  00000E                     	ds	1
   481  00000F                     ??_FRAME_Plot:
   482  00000F                     LED_Light_Pos@fulfillment:
   483                           	opt callstack 0
   484                           
   485                           ; 2 bytes @ 0xE
   486  00000F                     	ds	1
   487  000010                     ??_CAN_TakeFrame:
   488  000010                     ??_FRAME_AdressOfNeighbors:
   489                           
   490                           ; 1 bytes @ 0xF
   491  000010                     	ds	1
   492  000011                     LED_Light_Pos@color:
   493                           	opt callstack 0
   494                           
   495                           ; 1 bytes @ 0x10
   496  000011                     	ds	1
   497  000012                     CAN_TakeFrame@tempCON:
   498                           	opt callstack 0
   499  000012                     LED_Light_Pos@LED_array:
   500                           	opt callstack 0
   501                           
   502                           ; 2 bytes @ 0x11
   503  000012                     	ds	1
   504  000013                     CAN_TakeFrame@k:
   505                           	opt callstack 0
   506                           
   507                           ; 1 bytes @ 0x12
   508  000013                     	ds	1
   509  000014                     LED_Light_Pos@pos2:
   510                           	opt callstack 0
   511                           
   512                           ; 2 bytes @ 0x13
   513  000014                     	ds	2
   514  000016                     LED_Light_Pos@flage:
   515                           	opt callstack 0
   516                           
   517                           ; 2 bytes @ 0x15
   518  000016                     	ds	2
   519  000018                     
   520                           ; 1 bytes @ 0x17
   521  000018                     	ds	6
   522  00001E                     FRAME_AdressOfNeighbors@i:
   523                           	opt callstack 0
   524                           
   525                           ; 2 bytes @ 0x1D
   526  00001E                     	ds	2
   527  000020                     FRAME_HandleCanFrame@message:
   528                           	opt callstack 0
   529                           
   530                           ; 2 bytes @ 0x1F
   531  000020                     	ds	2
   532  000022                     ??_FRAME_HandleCanFrame:
   533                           
   534                           ; 1 bytes @ 0x21
   535  000022                     	ds	4
   536  000026                     FRAME_HandleCanFrame@identyfikator:
   537                           	opt callstack 0
   538                           
   539                           ; 1 bytes @ 0x25
   540  000026                     	ds	1
   541  000027                     TRM_DataTransmition@canMessage:
   542                           	opt callstack 0
   543                           
   544                           ; 17 bytes @ 0x26
   545  000027                     	ds	17
   546  000038                     
   547                           ; 1 bytes @ 0x37
   548 ;;
   549 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   550 ;;
   551 ;; *************** function _main *****************
   552 ;; Defined at:
   553 ;;		line 94 in file "main.c"
   554 ;; Parameters:    Size  Location     Type
   555 ;;		None
   556 ;; Auto vars:     Size  Location     Type
   557 ;;		None
   558 ;; Return value:  Size  Location     Type
   559 ;;                  1    wreg      void 
   560 ;; Registers used:
   561 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   562 ;; Tracked objects:
   563 ;;		On entry : 0/0
   564 ;;		On exit  : 0/0
   565 ;;		Unchanged: 0/0
   566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   570 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   571 ;;Total ram usage:        0 bytes
   572 ;; Hardware stack levels required when called:    7
   573 ;; This function calls:
   574 ;;		_INI_All
   575 ;;		_LED_Update
   576 ;;		_TMR1_Update_flag_Get
   577 ;;		_TMR1_Update_flag_Set
   578 ;;		_TRM_DataTransmition
   579 ;; This function is called by:
   580 ;;		Startup code after reset
   581 ;; This function uses a non-reentrant model
   582 ;;
   583                           
   584                           	psect	text0
   585  0011D2                     __ptext0:
   586                           	opt callstack 0
   587  0011D2                     _main:
   588                           	opt callstack 24
   589                           
   590                           ;main.c: 96:     INI_All();
   591                           
   592                           ;incstack = 0
   593  0011D2  EC6C  F009         	call	_INI_All	;wreg free
   594                           
   595                           ;main.c: 98:     RCON = 0xFF;
   596  0011D6  68D0               	setf	4048,c	;volatile
   597  0011D8                     l2955:
   598                           
   599                           ;main.c: 101:     {;main.c: 102:         if(DetectorLedRadar.Flags.obsluzWeWy == 1)
   600  0011D8  B041               	btfsc	_DetectorLedRadar,0,c
   601                           
   602                           ;main.c: 103:         {;main.c: 104:             DetectorLedRadar.Flags.obsluzWeWy = 0;
   603  0011DA  9041               	bcf	_DetectorLedRadar,0,c
   604                           
   605                           ;main.c: 108:         if(TMR1_Update_flag_Get()==1)
   606  0011DC  ECA5  F009         	call	_TMR1_Update_flag_Get	;wreg free
   607  0011E0  0406               	decf	?_TMR1_Update_flag_Get,w,c
   608  0011E2  1007               	iorwf	?_TMR1_Update_flag_Get+1,w,c
   609  0011E4  A4D8               	btfss	status,2,c
   610  0011E6  D008               	goto	l2965
   611                           
   612                           ;main.c: 109:         {;main.c: 110:             LED_Update();
   613  0011E8  EC43  F006         	call	_LED_Update	;wreg free
   614                           
   615                           ;main.c: 111:             TMR1_Update_flag_Set(0);
   616  0011EC  0E00               	movlw	0
   617  0011EE  6E07               	movwf	TMR1_Update_flag_Set@a+1,c
   618  0011F0  0E00               	movlw	0
   619  0011F2  6E06               	movwf	TMR1_Update_flag_Set@a,c
   620  0011F4  ECA0  F009         	call	_TMR1_Update_flag_Set	;wreg free
   621  0011F8                     l2965:
   622                           
   623                           ;main.c: 115:         TRM_DataTransmition();
   624  0011F8  EC1D  F008         	call	_TRM_DataTransmition	;wreg free
   625  0011FC  0004               	clrwdt		;# 
   626                           
   627                           ;main.c: 117:     }
   628  0011FE  D7EC               	goto	l2955
   629  001200                     __end_of_main:
   630                           	opt callstack 0
   631                           
   632 ;; *************** function _TRM_DataTransmition *****************
   633 ;; Defined at:
   634 ;;		line 19 in file "TRM.c"
   635 ;; Parameters:    Size  Location     Type
   636 ;;		None
   637 ;; Auto vars:     Size  Location     Type
   638 ;;  canMessage     17   38[COMRAM] struct .
   639 ;;  i               1    0        unsigned char 
   640 ;; Return value:  Size  Location     Type
   641 ;;                  1    wreg      void 
   642 ;; Registers used:
   643 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   644 ;; Tracked objects:
   645 ;;		On entry : 0/0
   646 ;;		On exit  : 0/0
   647 ;;		Unchanged: 0/0
   648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   650 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   652 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   653 ;;Total ram usage:       17 bytes
   654 ;; Hardware stack levels used:    1
   655 ;; Hardware stack levels required when called:    6
   656 ;; This function calls:
   657 ;;		_CAN_TakeFrame
   658 ;;		_FRAME_HandleCanFrame
   659 ;; This function is called by:
   660 ;;		_main
   661 ;; This function uses a non-reentrant model
   662 ;;
   663                           
   664                           	psect	text1
   665  00103A                     __ptext1:
   666                           	opt callstack 0
   667  00103A                     _TRM_DataTransmition:
   668                           	opt callstack 24
   669                           
   670                           ;TRM.c: 21:     static BYTE weWyU8 = 0, czujnikWeWyU8 = 0;;TRM.c: 22:     BYTE i;;TRM.c:
      +                           23:     mID canMessage;;TRM.c: 26:     if(DaneCan.Flags.wyslijRamkeStanu)
   671                           
   672                           ;incstack = 0
   673  00103A  A03D               	btfss	_DaneCan,0,c
   674  00103C  D013               	goto	l2923
   675                           
   676                           ;TRM.c: 27:     {;TRM.c: 29:         canMessage.message_type = 0x02;
   677  00103E  0E02               	movlw	2
   678  001040  6E28               	movwf	TRM_DataTransmition@canMessage+1,c
   679                           
   680                           ;TRM.c: 30:         canMessage.id.Val = 0;
   681  001042  0E00               	movlw	0
   682  001044  6E2B               	movwf	TRM_DataTransmition@canMessage+4,c
   683  001046  0E00               	movlw	0
   684  001048  6E2C               	movwf	TRM_DataTransmition@canMessage+5,c
   685  00104A  0E00               	movlw	0
   686  00104C  6E2D               	movwf	TRM_DataTransmition@canMessage+6,c
   687  00104E  0E00               	movlw	0
   688  001050  6E2E               	movwf	TRM_DataTransmition@canMessage+7,c
   689                           
   690                           ;TRM.c: 31:         canMessage.id.v[2] = 0x01 *4;
   691  001052  0E04               	movlw	4
   692  001054  6E2D               	movwf	TRM_DataTransmition@canMessage+6,c
   693                           
   694                           ;TRM.c: 32:         FRAME_HandleCanFrame(&canMessage);
   695  001056  0E27               	movlw	low TRM_DataTransmition@canMessage
   696  001058  6E20               	movwf	FRAME_HandleCanFrame@message,c
   697  00105A  0E00               	movlw	high TRM_DataTransmition@canMessage
   698  00105C  6E21               	movwf	FRAME_HandleCanFrame@message+1,c
   699  00105E  ECA0  F002         	call	_FRAME_HandleCanFrame	;wreg free
   700                           
   701                           ;TRM.c: 49:         DaneCan.Flags.wyslijRamkeStanu = 0;
   702  001062  903D               	bcf	_DaneCan,0,c
   703  001064                     l2923:
   704                           
   705                           ;TRM.c: 59:     if(CAN_TakeFrame(&canMessage))
   706  001064  0E27               	movlw	low TRM_DataTransmition@canMessage
   707  001066  6E0E               	movwf	CAN_TakeFrame@message,c
   708  001068  0E00               	movlw	high TRM_DataTransmition@canMessage
   709  00106A  6E0F               	movwf	CAN_TakeFrame@message+1,c
   710  00106C  EC30  F000         	call	_CAN_TakeFrame	;wreg free
   711  001070  0900               	iorlw	0
   712  001072  B4D8               	btfsc	status,2,c
   713  001074  0012               	return	
   714                           
   715                           ;TRM.c: 62:         {;TRM.c: 63:             FRAME_HandleCanFrame(&canMessage);
   716  001076  0E27               	movlw	low TRM_DataTransmition@canMessage
   717  001078  6E20               	movwf	FRAME_HandleCanFrame@message,c
   718  00107A  0E00               	movlw	high TRM_DataTransmition@canMessage
   719  00107C  6E21               	movwf	FRAME_HandleCanFrame@message+1,c
   720  00107E  ECA0  F002         	call	_FRAME_HandleCanFrame	;wreg free
   721                           
   722                           ;TRM.c: 64:         }
   723  001082  0012               	return		;funcret
   724  001084                     __end_of_TRM_DataTransmition:
   725                           	opt callstack 0
   726                           
   727 ;; *************** function _FRAME_HandleCanFrame *****************
   728 ;; Defined at:
   729 ;;		line 486 in file "FRAME.c"
   730 ;; Parameters:    Size  Location     Type
   731 ;;  message         2   31[COMRAM] PTR struct .
   732 ;;		 -> TRM_DataTransmition@canMessage(17), 
   733 ;; Auto vars:     Size  Location     Type
   734 ;;  x               2    0        int 
   735 ;;  identyfikato    1   37[COMRAM] unsigned char 
   736 ;; Return value:  Size  Location     Type
   737 ;;                  1    wreg      void 
   738 ;; Registers used:
   739 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   740 ;; Tracked objects:
   741 ;;		On entry : 0/0
   742 ;;		On exit  : 0/0
   743 ;;		Unchanged: 0/0
   744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   745 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   746 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   747 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   748 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   749 ;;Total ram usage:        7 bytes
   750 ;; Hardware stack levels used:    1
   751 ;; Hardware stack levels required when called:    5
   752 ;; This function calls:
   753 ;;		_CAN_GenID
   754 ;;		_CAN_SendFrame
   755 ;;		_FRAME_AccelerometerStatus
   756 ;;		_FRAME_AdressOfNeighbors
   757 ;;		_FRAME_AnalogValue
   758 ;;		_FRAME_AveragingTimes
   759 ;;		_FRAME_AxisStatus
   760 ;;		_FRAME_DeviceReset
   761 ;;		_FRAME_ExcitationMultiplier
   762 ;;		_FRAME_ExcitationValue
   763 ;;		_FRAME_MapPosition
   764 ;;		_FRAME_Plot
   765 ;;		_FRAME_PrzypisanieDokarty
   766 ;;		_FRAME_SoftwareVersion
   767 ;;		_LED_Error
   768 ;;		___awdiv
   769 ;; This function is called by:
   770 ;;		_TRM_DataTransmition
   771 ;; This function uses a non-reentrant model
   772 ;;
   773                           
   774                           	psect	text2
   775  000540                     __ptext2:
   776                           	opt callstack 0
   777  000540                     _FRAME_HandleCanFrame:
   778                           	opt callstack 24
   779                           
   780                           ;FRAME.c: 486: void FRAME_HandleCanFrame(mID * message);FRAME.c: 487: {;FRAME.c: 488:   
      +                            BYTE identyfikator = (BYTE) message->id.v[2]/4;
   781                           
   782                           ;incstack = 0
   783  000540  EE20 F006          	lfsr	2,6
   784  000544  5020               	movf	FRAME_HandleCanFrame@message,w,c
   785  000546  26D9               	addwf	fsr2l,f,c
   786  000548  5021               	movf	FRAME_HandleCanFrame@message+1,w,c
   787  00054A  22DA               	addwfc	fsr2h,f,c
   788  00054C  50DF               	movf	indf2,w,c
   789  00054E  6E22               	movwf	??_FRAME_HandleCanFrame& (0+255),c
   790  000550  5022               	movf	??_FRAME_HandleCanFrame,w,c
   791  000552  6E06               	movwf	___awdiv@dividend,c
   792  000554  6A07               	clrf	___awdiv@dividend+1,c
   793  000556  0E00               	movlw	0
   794  000558  6E09               	movwf	___awdiv@divisor+1,c
   795  00055A  0E04               	movlw	4
   796  00055C  6E08               	movwf	___awdiv@divisor,c
   797  00055E  EC01  F006         	call	___awdiv	;wreg free
   798  000562  5006               	movf	?___awdiv,w,c
   799  000564  6E26               	movwf	FRAME_HandleCanFrame@identyfikator,c
   800                           
   801                           ;FRAME.c: 489:     if(identyfikator != 0x01)
   802  000566  0426               	decf	FRAME_HandleCanFrame@identyfikator,w,c
   803  000568  D060               	goto	l2871
   804  00056A                     l2843:
   805                           
   806                           ;FRAME.c: 500:             FRAME_AccelerometerStatus(message);
   807  00056A  C020  F008         	movff	FRAME_HandleCanFrame@message,FRAME_AccelerometerStatus@message
   808  00056E  C021  F009         	movff	FRAME_HandleCanFrame@message+1,FRAME_AccelerometerStatus@message+1
   809  000572  EC80  F006         	call	_FRAME_AccelerometerStatus	;wreg free
   810                           
   811                           ;FRAME.c: 501:             break;
   812  000576  D08E               	goto	l2873
   813  000578                     l2845:
   814                           
   815                           ;FRAME.c: 503:             FRAME_ExcitationValue(message);
   816  000578  C020  F006         	movff	FRAME_HandleCanFrame@message,FRAME_ExcitationValue@message
   817  00057C  C021  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_ExcitationValue@message+1
   818  000580  EC7E  F008         	call	_FRAME_ExcitationValue	;wreg free
   819                           
   820                           ;FRAME.c: 504:             break;
   821  000584  D087               	goto	l2873
   822  000586                     l2847:
   823                           
   824                           ;FRAME.c: 506:             FRAME_ExcitationMultiplier(message);
   825  000586  C020  F006         	movff	FRAME_HandleCanFrame@message,FRAME_ExcitationMultiplier@message
   826  00058A  C021  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_ExcitationMultiplier@message+1
   827  00058E  ECD0  F007         	call	_FRAME_ExcitationMultiplier	;wreg free
   828                           
   829                           ;FRAME.c: 507:             break;
   830  000592  D080               	goto	l2873
   831  000594                     l2849:
   832                           
   833                           ;FRAME.c: 509:             FRAME_AveragingTimes(message);
   834  000594  C020  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AveragingTimes@message
   835  000598  C021  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AveragingTimes@message+1
   836  00059C  ECB4  F008         	call	_FRAME_AveragingTimes	;wreg free
   837                           
   838                           ;FRAME.c: 510:             break;
   839  0005A0  D079               	goto	l2873
   840  0005A2                     l2851:
   841                           
   842                           ;FRAME.c: 512:             FRAME_AxisStatus(message);
   843  0005A2  C020  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AxisStatus@message
   844  0005A6  C021  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AxisStatus@message+1
   845  0005AA  EC99  F008         	call	_FRAME_AxisStatus	;wreg free
   846                           
   847                           ;FRAME.c: 513:             break;
   848  0005AE  D072               	goto	l2873
   849  0005B0                     l2853:
   850                           
   851                           ;FRAME.c: 515:             FRAME_DeviceReset(message);
   852  0005B0  C020  F006         	movff	FRAME_HandleCanFrame@message,FRAME_DeviceReset@message
   853  0005B4  C021  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_DeviceReset@message+1
   854  0005B8  ECEE  F004         	call	_FRAME_DeviceReset	;wreg free
   855                           
   856                           ;FRAME.c: 516:             break;
   857  0005BC  D06B               	goto	l2873
   858  0005BE                     l2855:
   859                           
   860                           ;FRAME.c: 518:             FRAME_Plot(message);
   861  0005BE  C020  F00D         	movff	FRAME_HandleCanFrame@message,FRAME_Plot@message
   862  0005C2  C021  F00E         	movff	FRAME_HandleCanFrame@message+1,FRAME_Plot@message+1
   863  0005C6  EC7B  F007         	call	_FRAME_Plot	;wreg free
   864                           
   865                           ;FRAME.c: 519:             break;
   866  0005CA  D064               	goto	l2873
   867  0005CC                     l2857:
   868                           
   869                           ;FRAME.c: 521:             FRAME_MapPosition(message);
   870  0005CC  C020  F006         	movff	FRAME_HandleCanFrame@message,FRAME_MapPosition@message
   871  0005D0  C021  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_MapPosition@message+1
   872  0005D4  ECB7  F009         	call	_FRAME_MapPosition	;wreg free
   873                           
   874                           ;FRAME.c: 522:             break;
   875  0005D8  D05D               	goto	l2873
   876  0005DA                     l2859:
   877                           
   878                           ;FRAME.c: 524:             FRAME_SoftwareVersion(message);
   879  0005DA  C020  F006         	movff	FRAME_HandleCanFrame@message,FRAME_SoftwareVersion@message
   880  0005DE  C021  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_SoftwareVersion@message+1
   881  0005E2  ECBB  F006         	call	_FRAME_SoftwareVersion	;wreg free
   882                           
   883                           ;FRAME.c: 525:             break;
   884  0005E6  D056               	goto	l2873
   885  0005E8                     l2861:
   886                           
   887                           ;FRAME.c: 528:             FRAME_AnalogValue(message, identyfikator - 0x0C);
   888  0005E8  C020  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AnalogValue@message
   889  0005EC  C021  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AnalogValue@message+1
   890  0005F0  0EF4               	movlw	244
   891  0005F2  2426               	addwf	FRAME_HandleCanFrame@identyfikator,w,c
   892  0005F4  6E08               	movwf	FRAME_AnalogValue@set,c
   893  0005F6  6A09               	clrf	FRAME_AnalogValue@set+1,c
   894  0005F8  0EFF               	movlw	255
   895  0005FA  2209               	addwfc	FRAME_AnalogValue@set+1,f,c
   896  0005FC  ECB8  F009         	call	_FRAME_AnalogValue	;wreg free
   897                           
   898                           ;FRAME.c: 529:             break;
   899  000600  D049               	goto	l2873
   900  000602                     l2863:
   901                           
   902                           ;FRAME.c: 531:             FRAME_PrzypisanieDokarty(message);
   903  000602  C020  F006         	movff	FRAME_HandleCanFrame@message,FRAME_PrzypisanieDokarty@message
   904  000606  C021  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_PrzypisanieDokarty@message+1
   905  00060A  EC63  F008         	call	_FRAME_PrzypisanieDokarty	;wreg free
   906                           
   907                           ;FRAME.c: 532:             break;
   908  00060E  D042               	goto	l2873
   909  000610                     l2865:
   910                           
   911                           ;FRAME.c: 534:             FRAME_AdressOfNeighbors(message, identyfikator - 0x10);
   912  000610  C020  F00C         	movff	FRAME_HandleCanFrame@message,FRAME_AdressOfNeighbors@message
   913  000614  C021  F00D         	movff	FRAME_HandleCanFrame@message+1,FRAME_AdressOfNeighbors@message+1
   914  000618  0EF0               	movlw	240
   915  00061A  2426               	addwf	FRAME_HandleCanFrame@identyfikator,w,c
   916  00061C  6E0E               	movwf	FRAME_AdressOfNeighbors@nrRamki,c
   917  00061E  6A0F               	clrf	FRAME_AdressOfNeighbors@nrRamki+1,c
   918  000620  0EFF               	movlw	255
   919  000622  220F               	addwfc	FRAME_AdressOfNeighbors@nrRamki+1,f,c
   920  000624  EC6E  F001         	call	_FRAME_AdressOfNeighbors	;wreg free
   921                           
   922                           ;FRAME.c: 535:             break;
   923  000628  D035               	goto	l2873
   924  00062A                     l2871:
   925  00062A  5026               	movf	FRAME_HandleCanFrame@identyfikator,w,c
   926  00062C  6E22               	movwf	??_FRAME_HandleCanFrame& (0+255),c
   927  00062E  6A23               	clrf	(??_FRAME_HandleCanFrame+1)& (0+255),c
   928                           
   929                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   930                           ; Switch size 1, requested type "simple"
   931                           ; Number of cases is 1, Range of values is 0 to 0
   932                           ; switch strategies available:
   933                           ; Name         Instructions Cycles
   934                           ; simple_byte            4     3 (average)
   935                           ;	Chosen strategy is simple_byte
   936  000630  5023               	movf	??_FRAME_HandleCanFrame+1,w,c
   937  000632  0A00               	xorlw	0	; case 0
   938  000634  A4D8               	btfss	status,2,c
   939  000636  D02E               	goto	l2873
   940                           
   941                           ; Switch size 1, requested type "simple"
   942                           ; Number of cases is 15, Range of values is 1 to 17
   943                           ; switch strategies available:
   944                           ; Name         Instructions Cycles
   945                           ; simple_byte           46    24 (average)
   946                           ;	Chosen strategy is simple_byte
   947  000638  5022               	movf	??_FRAME_HandleCanFrame,w,c
   948  00063A  0A01               	xorlw	1	; case 1
   949  00063C  B4D8               	btfsc	status,2,c
   950  00063E  D02A               	goto	l2873
   951  000640  0A03               	xorlw	3	; case 2
   952  000642  B4D8               	btfsc	status,2,c
   953  000644  D792               	goto	l2843
   954  000646  0A01               	xorlw	1	; case 3
   955  000648  B4D8               	btfsc	status,2,c
   956  00064A  D796               	goto	l2845
   957  00064C  0A07               	xorlw	7	; case 4
   958  00064E  B4D8               	btfsc	status,2,c
   959  000650  D79A               	goto	l2847
   960  000652  0A01               	xorlw	1	; case 5
   961  000654  B4D8               	btfsc	status,2,c
   962  000656  D79E               	goto	l2849
   963  000658  0A03               	xorlw	3	; case 6
   964  00065A  B4D8               	btfsc	status,2,c
   965  00065C  D7A2               	goto	l2851
   966  00065E  0A01               	xorlw	1	; case 7
   967  000660  B4D8               	btfsc	status,2,c
   968  000662  D7A6               	goto	l2853
   969  000664  0A0E               	xorlw	14	; case 9
   970  000666  B4D8               	btfsc	status,2,c
   971  000668  D7AA               	goto	l2855
   972  00066A  0A03               	xorlw	3	; case 10
   973  00066C  B4D8               	btfsc	status,2,c
   974  00066E  D7AE               	goto	l2857
   975  000670  0A01               	xorlw	1	; case 11
   976  000672  B4D8               	btfsc	status,2,c
   977  000674  D7B2               	goto	l2859
   978  000676  0A07               	xorlw	7	; case 12
   979  000678  B4D8               	btfsc	status,2,c
   980  00067A  D7B6               	goto	l2861
   981  00067C  0A01               	xorlw	1	; case 13
   982  00067E  B4D8               	btfsc	status,2,c
   983  000680  D7B3               	goto	l2861
   984  000682  0A02               	xorlw	2	; case 15
   985  000684  B4D8               	btfsc	status,2,c
   986  000686  D7BD               	goto	l2863
   987  000688  0A1F               	xorlw	31	; case 16
   988  00068A  B4D8               	btfsc	status,2,c
   989  00068C  D7C1               	goto	l2865
   990  00068E  0A01               	xorlw	1	; case 17
   991  000690  B4D8               	btfsc	status,2,c
   992  000692  D7BE               	goto	l2865
   993  000694                     l2873:
   994                           
   995                           ;FRAME.c: 540:     if(message->message_type == 0x02)
   996  000694  EE20 F001          	lfsr	2,1
   997  000698  5020               	movf	FRAME_HandleCanFrame@message,w,c
   998  00069A  26D9               	addwf	fsr2l,f,c
   999  00069C  5021               	movf	FRAME_HandleCanFrame@message+1,w,c
  1000  00069E  22DA               	addwfc	fsr2h,f,c
  1001  0006A0  0E02               	movlw	2
  1002  0006A2  18DE               	xorwf	postinc2,w,c
  1003  0006A4  A4D8               	btfss	status,2,c
  1004  0006A6  0012               	return	
  1005                           
  1006                           ;FRAME.c: 541:     {;FRAME.c: 543:         message->frame_type = 0x03;
  1007  0006A8  EE20 F002          	lfsr	2,2
  1008  0006AC  5020               	movf	FRAME_HandleCanFrame@message,w,c
  1009  0006AE  26D9               	addwf	fsr2l,f,c
  1010  0006B0  5021               	movf	FRAME_HandleCanFrame@message+1,w,c
  1011  0006B2  22DA               	addwfc	fsr2h,f,c
  1012  0006B4  0E03               	movlw	3
  1013  0006B6  6EDF               	movwf	indf2,c
  1014                           
  1015                           ;FRAME.c: 544:         message->message_type = 0x01;
  1016  0006B8  EE20 F001          	lfsr	2,1
  1017  0006BC  5020               	movf	FRAME_HandleCanFrame@message,w,c
  1018  0006BE  26D9               	addwf	fsr2l,f,c
  1019  0006C0  5021               	movf	FRAME_HandleCanFrame@message+1,w,c
  1020  0006C2  22DA               	addwfc	fsr2h,f,c
  1021  0006C4  0E01               	movlw	1
  1022  0006C6  6EDF               	movwf	indf2,c
  1023                           
  1024                           ;FRAME.c: 545:         message->id.Val = 0;
  1025  0006C8  EE20 F004          	lfsr	2,4
  1026  0006CC  5020               	movf	FRAME_HandleCanFrame@message,w,c
  1027  0006CE  26D9               	addwf	fsr2l,f,c
  1028  0006D0  5021               	movf	FRAME_HandleCanFrame@message+1,w,c
  1029  0006D2  22DA               	addwfc	fsr2h,f,c
  1030  0006D4  6ADE               	clrf	postinc2,c
  1031  0006D6  6ADE               	clrf	postinc2,c
  1032  0006D8  6ADE               	clrf	postinc2,c
  1033  0006DA  6ADD               	clrf	postdec2,c
  1034                           
  1035                           ;FRAME.c: 547:         message->id.v[2] = identyfikator*4;
  1036  0006DC  5026               	movf	FRAME_HandleCanFrame@identyfikator,w,c
  1037  0006DE  0D04               	mullw	4
  1038  0006E0  EE20 F006          	lfsr	2,6
  1039  0006E4  5020               	movf	FRAME_HandleCanFrame@message,w,c
  1040  0006E6  26D9               	addwf	fsr2l,f,c
  1041  0006E8  5021               	movf	FRAME_HandleCanFrame@message+1,w,c
  1042  0006EA  22DA               	addwfc	fsr2h,f,c
  1043  0006EC  CFF3 FFDF          	movff	prodl,indf2
  1044                           
  1045                           ;FRAME.c: 548:         CAN_GenID(message,identyfikator);
  1046  0006F0  C020  F006         	movff	FRAME_HandleCanFrame@message,CAN_GenID@message
  1047  0006F4  C021  F007         	movff	FRAME_HandleCanFrame@message+1,CAN_GenID@message+1
  1048  0006F8  C026  F008         	movff	FRAME_HandleCanFrame@identyfikator,CAN_GenID@frameID
  1049  0006FC  ECB7  F005         	call	_CAN_GenID	;wreg free
  1050                           
  1051                           ;FRAME.c: 549:         CAN_SendFrame(message);
  1052  000700  C020  F00B         	movff	FRAME_HandleCanFrame@message,CAN_SendFrame@message
  1053  000704  C021  F00C         	movff	FRAME_HandleCanFrame@message+1,CAN_SendFrame@message+1
  1054  000708  EC8E  F003         	call	_CAN_SendFrame	;wreg free
  1055                           
  1056                           ;FRAME.c: 560:        while(RXB0CONbits.FILHIT3)
  1057  00070C  D004               	goto	l528
  1058  00070E                     l529:
  1059                           
  1060                           ;FRAME.c: 561:        {;FRAME.c: 562:            if(TXB0CONbits.TXERR == 1){
  1061  00070E  010F               	movlb	15	; () banked
  1062  000710  B940               	btfsc	64,4,b	;volatile
  1063                           
  1064                           ; BSR set to: 15
  1065                           ;FRAME.c: 563:                LED_Error();
  1066  000712  EC4E  F009         	call	_LED_Error	;wreg free
  1067  000716                     l528:
  1068                           
  1069                           ;FRAME.c: 560:        while(RXB0CONbits.FILHIT3)
  1070  000716  A660               	btfss	3936,3,c	;volatile
  1071  000718  0012               	return	
  1072  00071A  D7F9               	goto	l529
  1073  00071C                     __end_of_FRAME_HandleCanFrame:
  1074                           	opt callstack 0
  1075                           
  1076 ;; *************** function _LED_Error *****************
  1077 ;; Defined at:
  1078 ;;		line 37 in file "LED.c"
  1079 ;; Parameters:    Size  Location     Type
  1080 ;;		None
  1081 ;; Auto vars:     Size  Location     Type
  1082 ;;		None
  1083 ;; Return value:  Size  Location     Type
  1084 ;;                  2  255[None  ] unsigned int 
  1085 ;; Registers used:
  1086 ;;		wreg, status,2, status,0, cstack
  1087 ;; Tracked objects:
  1088 ;;		On entry : 0/0
  1089 ;;		On exit  : 0/0
  1090 ;;		Unchanged: 0/0
  1091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1095 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1096 ;;Total ram usage:        0 bytes
  1097 ;; Hardware stack levels used:    1
  1098 ;; Hardware stack levels required when called:    4
  1099 ;; This function calls:
  1100 ;;		_LED_Control
  1101 ;; This function is called by:
  1102 ;;		_FRAME_HandleCanFrame
  1103 ;; This function uses a non-reentrant model
  1104 ;;
  1105                           
  1106                           	psect	text3
  1107  00129C                     __ptext3:
  1108                           	opt callstack 0
  1109  00129C                     _LED_Error:
  1110                           	opt callstack 24
  1111                           
  1112                           ;LED.c: 39:     LED_Control(RED,0b1010101010);
  1113                           
  1114                           ;incstack = 0
  1115  00129C  0E02               	movlw	2
  1116  00129E  6E07               	movwf	LED_Control@diode+1,c
  1117  0012A0  0EAA               	movlw	170
  1118  0012A2  6E06               	movwf	LED_Control@diode,c
  1119  0012A4  0E00               	movlw	0
  1120  0012A6  EC45  F004         	call	_LED_Control
  1121                           
  1122                           ;LED.c: 40:     LED_Control(GREEN,0b0000000000);
  1123  0012AA  0E00               	movlw	0
  1124  0012AC  6E07               	movwf	LED_Control@diode+1,c
  1125  0012AE  0E00               	movlw	0
  1126  0012B0  6E06               	movwf	LED_Control@diode,c
  1127  0012B2  0E01               	movlw	1
  1128  0012B4  EC45  F004         	call	_LED_Control
  1129  0012B8  0012               	return		;funcret
  1130  0012BA                     __end_of_LED_Error:
  1131                           	opt callstack 0
  1132                           
  1133 ;; *************** function _FRAME_SoftwareVersion *****************
  1134 ;; Defined at:
  1135 ;;		line 383 in file "FRAME.c"
  1136 ;; Parameters:    Size  Location     Type
  1137 ;;  message         2    5[COMRAM] PTR struct .
  1138 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1139 ;; Auto vars:     Size  Location     Type
  1140 ;;		None
  1141 ;; Return value:  Size  Location     Type
  1142 ;;                  1    wreg      void 
  1143 ;; Registers used:
  1144 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1145 ;; Tracked objects:
  1146 ;;		On entry : 0/0
  1147 ;;		On exit  : 0/0
  1148 ;;		Unchanged: 0/0
  1149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1150 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1152 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1153 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1154 ;;Total ram usage:        3 bytes
  1155 ;; Hardware stack levels used:    1
  1156 ;; Hardware stack levels required when called:    3
  1157 ;; This function calls:
  1158 ;;		Nothing
  1159 ;; This function is called by:
  1160 ;;		_FRAME_HandleCanFrame
  1161 ;; This function uses a non-reentrant model
  1162 ;;
  1163                           
  1164                           	psect	text4
  1165  000D76                     __ptext4:
  1166                           	opt callstack 0
  1167  000D76                     _FRAME_SoftwareVersion:
  1168                           	opt callstack 25
  1169                           
  1170                           ;FRAME.c: 383: static void FRAME_SoftwareVersion(mID *message);FRAME.c: 384: {;FRAME.c: 
      +                          386:     if(message->message_type == 0x02)
  1171                           
  1172                           ;incstack = 0
  1173  000D76  EE20 F001          	lfsr	2,1
  1174  000D7A  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1175  000D7C  26D9               	addwf	fsr2l,f,c
  1176  000D7E  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1177  000D80  22DA               	addwfc	fsr2h,f,c
  1178  000D82  0E02               	movlw	2
  1179  000D84  18DE               	xorwf	postinc2,w,c
  1180  000D86  A4D8               	btfss	status,2,c
  1181  000D88  0012               	return	
  1182                           
  1183                           ;FRAME.c: 387:     {;FRAME.c: 388:         message->data_length = 4;
  1184  000D8A  EE20 F010          	lfsr	2,16
  1185  000D8E  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1186  000D90  26D9               	addwf	fsr2l,f,c
  1187  000D92  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1188  000D94  22DA               	addwfc	fsr2h,f,c
  1189  000D96  0E04               	movlw	4
  1190  000D98  6EDF               	movwf	indf2,c
  1191                           
  1192                           ;FRAME.c: 389:         message->data[0] = (unsigned char)(Dane->wersjaOprogramowaniaU16 
      +                          >> 8);
  1193  000D9A  EE20 F008          	lfsr	2,8
  1194  000D9E  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1195  000DA0  26D9               	addwf	fsr2l,f,c
  1196  000DA2  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1197  000DA4  22DA               	addwfc	fsr2h,f,c
  1198  000DA6  5005               	movf	5,w,c
  1199  000DA8  6EDF               	movwf	indf2,c
  1200                           
  1201                           ;FRAME.c: 390:         message->data[1] = (unsigned char)Dane->wersjaOprogramowaniaU16;
  1202  000DAA  EE20 F009          	lfsr	2,9
  1203  000DAE  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1204  000DB0  26D9               	addwf	fsr2l,f,c
  1205  000DB2  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1206  000DB4  22DA               	addwfc	fsr2h,f,c
  1207  000DB6  C004 FFDF          	movff	4,indf2
  1208                           
  1209                           ;FRAME.c: 391:         message->data[2] = (unsigned char)(Dane->wersjaSprzetuU16 >> 8);
  1210  000DBA  EE20 F00A          	lfsr	2,10
  1211  000DBE  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1212  000DC0  26D9               	addwf	fsr2l,f,c
  1213  000DC2  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1214  000DC4  22DA               	addwfc	fsr2h,f,c
  1215  000DC6  500B               	movf	11,w,c
  1216  000DC8  6EDF               	movwf	indf2,c
  1217                           
  1218                           ;FRAME.c: 392:         message->data[3] = (unsigned char)Dane->wersjaSprzetuU16;
  1219  000DCA  EE20 F00B          	lfsr	2,11
  1220  000DCE  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1221  000DD0  26D9               	addwf	fsr2l,f,c
  1222  000DD2  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1223  000DD4  22DA               	addwfc	fsr2h,f,c
  1224  000DD6  C00A FFDF          	movff	10,indf2
  1225                           
  1226                           ;FRAME.c: 393:     }
  1227  000DDA  0012               	return		;funcret
  1228  000DDC                     __end_of_FRAME_SoftwareVersion:
  1229                           	opt callstack 0
  1230                           
  1231 ;; *************** function _FRAME_PrzypisanieDokarty *****************
  1232 ;; Defined at:
  1233 ;;		line 432 in file "FRAME.c"
  1234 ;; Parameters:    Size  Location     Type
  1235 ;;  message         2    5[COMRAM] PTR struct .
  1236 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1237 ;; Auto vars:     Size  Location     Type
  1238 ;;		None
  1239 ;; Return value:  Size  Location     Type
  1240 ;;                  1    wreg      void 
  1241 ;; Registers used:
  1242 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1243 ;; Tracked objects:
  1244 ;;		On entry : 0/0
  1245 ;;		On exit  : 0/0
  1246 ;;		Unchanged: 0/0
  1247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1248 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1250 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1251 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1252 ;;Total ram usage:        3 bytes
  1253 ;; Hardware stack levels used:    1
  1254 ;; Hardware stack levels required when called:    3
  1255 ;; This function calls:
  1256 ;;		Nothing
  1257 ;; This function is called by:
  1258 ;;		_FRAME_HandleCanFrame
  1259 ;; This function uses a non-reentrant model
  1260 ;;
  1261                           
  1262                           	psect	text5
  1263  0010C6                     __ptext5:
  1264                           	opt callstack 0
  1265  0010C6                     _FRAME_PrzypisanieDokarty:
  1266                           	opt callstack 25
  1267                           
  1268                           ;FRAME.c: 432: static void FRAME_PrzypisanieDokarty(mID *message);FRAME.c: 433: {;FRAME.
      +                          c: 434:     if(message->message_type == 0x02)
  1269                           
  1270                           ;incstack = 0
  1271  0010C6  EE20 F001          	lfsr	2,1
  1272  0010CA  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  1273  0010CC  26D9               	addwf	fsr2l,f,c
  1274  0010CE  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  1275  0010D0  22DA               	addwfc	fsr2h,f,c
  1276  0010D2  0E02               	movlw	2
  1277  0010D4  18DE               	xorwf	postinc2,w,c
  1278  0010D6  A4D8               	btfss	status,2,c
  1279  0010D8  0012               	return	
  1280                           
  1281                           ;FRAME.c: 435:     {;FRAME.c: 436:         message->data_length = 1;
  1282  0010DA  EE20 F010          	lfsr	2,16
  1283  0010DE  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  1284  0010E0  26D9               	addwf	fsr2l,f,c
  1285  0010E2  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  1286  0010E4  22DA               	addwfc	fsr2h,f,c
  1287  0010E6  0E01               	movlw	1
  1288  0010E8  6EDF               	movwf	indf2,c
  1289                           
  1290                           ;FRAME.c: 437:         message->data[0] = 0xFF;
  1291  0010EA  EE20 F008          	lfsr	2,8
  1292  0010EE  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  1293  0010F0  26D9               	addwf	fsr2l,f,c
  1294  0010F2  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  1295  0010F4  22DA               	addwfc	fsr2h,f,c
  1296  0010F6  0EFF               	movlw	255
  1297  0010F8  6EDF               	movwf	indf2,c
  1298                           
  1299                           ;FRAME.c: 438:     }
  1300  0010FA  0012               	return		;funcret
  1301  0010FC                     __end_of_FRAME_PrzypisanieDokarty:
  1302                           	opt callstack 0
  1303                           
  1304 ;; *************** function _FRAME_Plot *****************
  1305 ;; Defined at:
  1306 ;;		line 337 in file "FRAME.c"
  1307 ;; Parameters:    Size  Location     Type
  1308 ;;  message         2   12[COMRAM] PTR struct .
  1309 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1310 ;; Auto vars:     Size  Location     Type
  1311 ;;		None
  1312 ;; Return value:  Size  Location     Type
  1313 ;;                  1    wreg      void 
  1314 ;; Registers used:
  1315 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1316 ;; Tracked objects:
  1317 ;;		On entry : 0/0
  1318 ;;		On exit  : 0/0
  1319 ;;		Unchanged: 0/0
  1320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1321 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1323 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1324 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1325 ;;Total ram usage:        3 bytes
  1326 ;; Hardware stack levels used:    1
  1327 ;; Hardware stack levels required when called:    4
  1328 ;; This function calls:
  1329 ;;		___lwdiv
  1330 ;; This function is called by:
  1331 ;;		_FRAME_HandleCanFrame
  1332 ;; This function uses a non-reentrant model
  1333 ;;
  1334                           
  1335                           	psect	text6
  1336  000EF6                     __ptext6:
  1337                           	opt callstack 0
  1338  000EF6                     _FRAME_Plot:
  1339                           	opt callstack 24
  1340                           
  1341                           ;FRAME.c: 337: static void FRAME_Plot(mID *message);FRAME.c: 338: {;FRAME.c: 340:     if
      +                          (message->message_type == 0x02)
  1342                           
  1343                           ;incstack = 0
  1344  000EF6  EE20 F001          	lfsr	2,1
  1345  000EFA  500D               	movf	FRAME_Plot@message,w,c
  1346  000EFC  26D9               	addwf	fsr2l,f,c
  1347  000EFE  500E               	movf	FRAME_Plot@message+1,w,c
  1348  000F00  22DA               	addwfc	fsr2h,f,c
  1349  000F02  0E02               	movlw	2
  1350  000F04  18DE               	xorwf	postinc2,w,c
  1351  000F06  A4D8               	btfss	status,2,c
  1352  000F08  D013               	goto	l2607
  1353                           
  1354                           ;FRAME.c: 341:     {;FRAME.c: 342:         message->data[0] = (BYTE)(Dane->timerRysowani
      +                          aWykresuU16/10);
  1355  000F0A  EE20 F008          	lfsr	2,8
  1356  000F0E  500D               	movf	FRAME_Plot@message,w,c
  1357  000F10  26D9               	addwf	fsr2l,f,c
  1358  000F12  500E               	movf	FRAME_Plot@message+1,w,c
  1359  000F14  22DA               	addwfc	fsr2h,f,c
  1360  000F16  C00C F006          	movff	12,___lwdiv@dividend
  1361  000F1A  C00D F007          	movff	13,___lwdiv@dividend+1
  1362  000F1E  0E00               	movlw	0
  1363  000F20  6E09               	movwf	___lwdiv@divisor+1,c
  1364  000F22  0E0A               	movlw	10
  1365  000F24  6E08               	movwf	___lwdiv@divisor,c
  1366  000F26  ECA7  F007         	call	___lwdiv	;wreg free
  1367  000F2A  5006               	movf	?___lwdiv,w,c
  1368  000F2C  6EDF               	movwf	indf2,c
  1369                           
  1370                           ;FRAME.c: 343:     }
  1371  000F2E  0012               	return	
  1372  000F30                     l2607:
  1373                           
  1374                           ;FRAME.c: 345:     {;FRAME.c: 346:         Dane->timerRysowaniaWykresuU16 = (WORD)messag
      +                          e->data[0]*10;
  1375  000F30  EE20 F008          	lfsr	2,8
  1376  000F34  500D               	movf	FRAME_Plot@message,w,c
  1377  000F36  26D9               	addwf	fsr2l,f,c
  1378  000F38  500E               	movf	FRAME_Plot@message+1,w,c
  1379  000F3A  22DA               	addwfc	fsr2h,f,c
  1380  000F3C  50DF               	movf	indf2,w,c
  1381  000F3E  6E0F               	movwf	??_FRAME_Plot& (0+255),c
  1382  000F40  500F               	movf	??_FRAME_Plot,w,c
  1383  000F42  0D0A               	mullw	10
  1384  000F44  CFF3 F00C          	movff	prodl,12
  1385  000F48  CFF4 F00D          	movff	prodh,13
  1386  000F4C  0012               	return		;funcret
  1387  000F4E                     __end_of_FRAME_Plot:
  1388                           	opt callstack 0
  1389                           
  1390 ;; *************** function _FRAME_MapPosition *****************
  1391 ;; Defined at:
  1392 ;;		line 358 in file "FRAME.c"
  1393 ;; Parameters:    Size  Location     Type
  1394 ;;  message         2    5[COMRAM] PTR struct .
  1395 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1396 ;; Auto vars:     Size  Location     Type
  1397 ;;		None
  1398 ;; Return value:  Size  Location     Type
  1399 ;;                  1    wreg      void 
  1400 ;; Registers used:
  1401 ;;		None
  1402 ;; Tracked objects:
  1403 ;;		On entry : 0/0
  1404 ;;		On exit  : 0/0
  1405 ;;		Unchanged: 0/0
  1406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1407 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1410 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1411 ;;Total ram usage:        2 bytes
  1412 ;; Hardware stack levels used:    1
  1413 ;; Hardware stack levels required when called:    3
  1414 ;; This function calls:
  1415 ;;		Nothing
  1416 ;; This function is called by:
  1417 ;;		_FRAME_HandleCanFrame
  1418 ;; This function uses a non-reentrant model
  1419 ;;
  1420                           
  1421                           	psect	text7
  1422  00136E                     __ptext7:
  1423                           	opt callstack 0
  1424  00136E                     _FRAME_MapPosition:
  1425                           	opt callstack 25
  1426                           
  1427                           ;incstack = 0
  1428  00136E  0012               	return		;funcret
  1429  001370                     __end_of_FRAME_MapPosition:
  1430                           	opt callstack 0
  1431                           
  1432 ;; *************** function _FRAME_ExcitationValue *****************
  1433 ;; Defined at:
  1434 ;;		line 115 in file "FRAME.c"
  1435 ;; Parameters:    Size  Location     Type
  1436 ;;  message         2    5[COMRAM] PTR struct .
  1437 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1438 ;; Auto vars:     Size  Location     Type
  1439 ;;		None
  1440 ;; Return value:  Size  Location     Type
  1441 ;;                  1    wreg      void 
  1442 ;; Registers used:
  1443 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1444 ;; Tracked objects:
  1445 ;;		On entry : 0/0
  1446 ;;		On exit  : 0/0
  1447 ;;		Unchanged: 0/0
  1448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1449 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1451 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1452 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1453 ;;Total ram usage:        3 bytes
  1454 ;; Hardware stack levels used:    1
  1455 ;; Hardware stack levels required when called:    3
  1456 ;; This function calls:
  1457 ;;		Nothing
  1458 ;; This function is called by:
  1459 ;;		_FRAME_HandleCanFrame
  1460 ;; This function uses a non-reentrant model
  1461 ;;
  1462                           
  1463                           	psect	text8
  1464  0010FC                     __ptext8:
  1465                           	opt callstack 0
  1466  0010FC                     _FRAME_ExcitationValue:
  1467                           	opt callstack 25
  1468                           
  1469                           ;FRAME.c: 115: static void FRAME_ExcitationValue(mID *message);FRAME.c: 116: {;FRAME.c: 
      +                          117:     if(message->message_type == 0x02)
  1470                           
  1471                           ;incstack = 0
  1472  0010FC  EE20 F001          	lfsr	2,1
  1473  001100  5006               	movf	FRAME_ExcitationValue@message,w,c
  1474  001102  26D9               	addwf	fsr2l,f,c
  1475  001104  5007               	movf	FRAME_ExcitationValue@message+1,w,c
  1476  001106  22DA               	addwfc	fsr2h,f,c
  1477  001108  0E02               	movlw	2
  1478  00110A  18DE               	xorwf	postinc2,w,c
  1479  00110C  A4D8               	btfss	status,2,c
  1480  00110E  0012               	return	
  1481                           
  1482                           ;FRAME.c: 118:     {;FRAME.c: 119:         message->data_length = 1;
  1483  001110  EE20 F010          	lfsr	2,16
  1484  001114  5006               	movf	FRAME_ExcitationValue@message,w,c
  1485  001116  26D9               	addwf	fsr2l,f,c
  1486  001118  5007               	movf	FRAME_ExcitationValue@message+1,w,c
  1487  00111A  22DA               	addwfc	fsr2h,f,c
  1488  00111C  0E01               	movlw	1
  1489  00111E  6EDF               	movwf	indf2,c
  1490                           
  1491                           ;FRAME.c: 124:         message->data[0] = 0xFF;
  1492  001120  EE20 F008          	lfsr	2,8
  1493  001124  5006               	movf	FRAME_ExcitationValue@message,w,c
  1494  001126  26D9               	addwf	fsr2l,f,c
  1495  001128  5007               	movf	FRAME_ExcitationValue@message+1,w,c
  1496  00112A  22DA               	addwfc	fsr2h,f,c
  1497  00112C  0EFF               	movlw	255
  1498  00112E  6EDF               	movwf	indf2,c
  1499                           
  1500                           ;FRAME.c: 125:     }
  1501  001130  0012               	return		;funcret
  1502  001132                     __end_of_FRAME_ExcitationValue:
  1503                           	opt callstack 0
  1504                           
  1505 ;; *************** function _FRAME_ExcitationMultiplier *****************
  1506 ;; Defined at:
  1507 ;;		line 139 in file "FRAME.c"
  1508 ;; Parameters:    Size  Location     Type
  1509 ;;  message         2    5[COMRAM] PTR struct .
  1510 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1511 ;; Auto vars:     Size  Location     Type
  1512 ;;  i               2    8[COMRAM] unsigned short 
  1513 ;; Return value:  Size  Location     Type
  1514 ;;                  1    wreg      void 
  1515 ;; Registers used:
  1516 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1517 ;; Tracked objects:
  1518 ;;		On entry : 0/0
  1519 ;;		On exit  : 0/0
  1520 ;;		Unchanged: 0/0
  1521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1522 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1523 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1524 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1525 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1526 ;;Total ram usage:        5 bytes
  1527 ;; Hardware stack levels used:    1
  1528 ;; Hardware stack levels required when called:    3
  1529 ;; This function calls:
  1530 ;;		Nothing
  1531 ;; This function is called by:
  1532 ;;		_FRAME_HandleCanFrame
  1533 ;; This function uses a non-reentrant model
  1534 ;;
  1535                           
  1536                           	psect	text9
  1537  000FA0                     __ptext9:
  1538                           	opt callstack 0
  1539  000FA0                     _FRAME_ExcitationMultiplier:
  1540                           	opt callstack 25
  1541                           
  1542                           ;FRAME.c: 139: static void FRAME_ExcitationMultiplier(mID *message);FRAME.c: 140: {;FRAM
      +                          E.c: 141:     WORD i;;FRAME.c: 143:     if(message->message_type == 0x02)
  1543                           
  1544                           ;incstack = 0
  1545  000FA0  EE20 F001          	lfsr	2,1
  1546  000FA4  5006               	movf	FRAME_ExcitationMultiplier@message,w,c
  1547  000FA6  26D9               	addwf	fsr2l,f,c
  1548  000FA8  5007               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  1549  000FAA  22DA               	addwfc	fsr2h,f,c
  1550  000FAC  0E02               	movlw	2
  1551  000FAE  18DE               	xorwf	postinc2,w,c
  1552  000FB0  A4D8               	btfss	status,2,c
  1553  000FB2  0012               	return	
  1554                           
  1555                           ;FRAME.c: 144:     {;FRAME.c: 145:         message->data_length = 1;
  1556  000FB4  EE20 F010          	lfsr	2,16
  1557  000FB8  5006               	movf	FRAME_ExcitationMultiplier@message,w,c
  1558  000FBA  26D9               	addwf	fsr2l,f,c
  1559  000FBC  5007               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  1560  000FBE  22DA               	addwfc	fsr2h,f,c
  1561  000FC0  0E01               	movlw	1
  1562  000FC2  6EDF               	movwf	indf2,c
  1563                           
  1564                           ;FRAME.c: 146:         for(i=0; i<3; i++)
  1565  000FC4  0E00               	movlw	0
  1566  000FC6  6E0A               	movwf	FRAME_ExcitationMultiplier@i+1,c
  1567  000FC8  0E00               	movlw	0
  1568  000FCA  6E09               	movwf	FRAME_ExcitationMultiplier@i,c
  1569  000FCC                     l2579:
  1570                           
  1571                           ;FRAME.c: 147:         {;FRAME.c: 150:         }
  1572  000FCC  4A09               	infsnz	FRAME_ExcitationMultiplier@i,f,c
  1573  000FCE  2A0A               	incf	FRAME_ExcitationMultiplier@i+1,f,c
  1574  000FD0  500A               	movf	FRAME_ExcitationMultiplier@i+1,w,c
  1575  000FD2  E104               	bnz	u1170
  1576  000FD4  0E03               	movlw	3
  1577  000FD6  5C09               	subwf	FRAME_ExcitationMultiplier@i,w,c
  1578  000FD8  A0D8               	btfss	status,0,c
  1579  000FDA  D7F8               	goto	l2579
  1580  000FDC                     u1170:
  1581                           
  1582                           ;FRAME.c: 151:         message->data[0] = 0xFF;
  1583  000FDC  EE20 F008          	lfsr	2,8
  1584  000FE0  5006               	movf	FRAME_ExcitationMultiplier@message,w,c
  1585  000FE2  26D9               	addwf	fsr2l,f,c
  1586  000FE4  5007               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  1587  000FE6  22DA               	addwfc	fsr2h,f,c
  1588  000FE8  0EFF               	movlw	255
  1589  000FEA  6EDF               	movwf	indf2,c
  1590                           
  1591                           ;FRAME.c: 152:     }
  1592  000FEC  0012               	return		;funcret
  1593  000FEE                     __end_of_FRAME_ExcitationMultiplier:
  1594                           	opt callstack 0
  1595                           
  1596 ;; *************** function _FRAME_DeviceReset *****************
  1597 ;; Defined at:
  1598 ;;		line 273 in file "FRAME.c"
  1599 ;; Parameters:    Size  Location     Type
  1600 ;;  message         2    5[COMRAM] PTR struct .
  1601 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1602 ;; Auto vars:     Size  Location     Type
  1603 ;;		None
  1604 ;; Return value:  Size  Location     Type
  1605 ;;                  1    wreg      void 
  1606 ;; Registers used:
  1607 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1608 ;; Tracked objects:
  1609 ;;		On entry : 0/0
  1610 ;;		On exit  : 0/0
  1611 ;;		Unchanged: 0/0
  1612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1613 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1615 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1616 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1617 ;;Total ram usage:        3 bytes
  1618 ;; Hardware stack levels used:    1
  1619 ;; Hardware stack levels required when called:    3
  1620 ;; This function calls:
  1621 ;;		Nothing
  1622 ;; This function is called by:
  1623 ;;		_FRAME_HandleCanFrame
  1624 ;; This function uses a non-reentrant model
  1625 ;;
  1626                           
  1627                           	psect	text10
  1628  0009DC                     __ptext10:
  1629                           	opt callstack 0
  1630  0009DC                     _FRAME_DeviceReset:
  1631                           	opt callstack 25
  1632                           
  1633                           ;FRAME.c: 273: static void FRAME_DeviceReset(mID *message);FRAME.c: 274: {;FRAME.c: 275:
      +                               if(message->message_type == 0x02)
  1634                           
  1635                           ;incstack = 0
  1636  0009DC  EE20 F001          	lfsr	2,1
  1637  0009E0  5006               	movf	FRAME_DeviceReset@message,w,c
  1638  0009E2  26D9               	addwf	fsr2l,f,c
  1639  0009E4  5007               	movf	FRAME_DeviceReset@message+1,w,c
  1640  0009E6  22DA               	addwfc	fsr2h,f,c
  1641  0009E8  0E02               	movlw	2
  1642  0009EA  18DE               	xorwf	postinc2,w,c
  1643  0009EC  A4D8               	btfss	status,2,c
  1644  0009EE  D056               	goto	l2601
  1645                           
  1646                           ;FRAME.c: 276:     {;FRAME.c: 277:         message->data_length = 1;
  1647  0009F0  EE20 F010          	lfsr	2,16
  1648  0009F4  5006               	movf	FRAME_DeviceReset@message,w,c
  1649  0009F6  26D9               	addwf	fsr2l,f,c
  1650  0009F8  5007               	movf	FRAME_DeviceReset@message+1,w,c
  1651  0009FA  22DA               	addwfc	fsr2h,f,c
  1652  0009FC  0E01               	movlw	1
  1653  0009FE  6EDF               	movwf	indf2,c
  1654                           
  1655                           ;FRAME.c: 279:         message->data[0] = (RCON>>6) & 0x01;
  1656  000A00  EE20 F008          	lfsr	2,8
  1657  000A04  5006               	movf	FRAME_DeviceReset@message,w,c
  1658  000A06  26D9               	addwf	fsr2l,f,c
  1659  000A08  5007               	movf	FRAME_DeviceReset@message+1,w,c
  1660  000A0A  22DA               	addwfc	fsr2h,f,c
  1661  000A0C  44D0               	rlncf	4048,w,c	;volatile
  1662  000A0E  46E8               	rlncf	wreg,f,c
  1663  000A10  0B03               	andlw	3
  1664  000A12  0B01               	andlw	1
  1665  000A14  6EDF               	movwf	indf2,c
  1666                           
  1667                           ;FRAME.c: 280:         message->data[1] = Flagi.wykonanoZapisDoFlash;
  1668  000A16  EE20 F009          	lfsr	2,9
  1669  000A1A  5006               	movf	FRAME_DeviceReset@message,w,c
  1670  000A1C  26D9               	addwf	fsr2l,f,c
  1671  000A1E  5007               	movf	FRAME_DeviceReset@message+1,w,c
  1672  000A20  22DA               	addwfc	fsr2h,f,c
  1673  000A22  A838               	btfss	_Flagi,4,c
  1674  000A24  D002               	goto	u1210
  1675  000A26  0E01               	movlw	1
  1676  000A28  D001               	goto	u1216
  1677  000A2A                     u1210:
  1678  000A2A  0E00               	movlw	0
  1679  000A2C                     u1216:
  1680  000A2C  6EDF               	movwf	indf2,c
  1681                           
  1682                           ;FRAME.c: 281:         message->data[2] = Flagi.pomiarTla;
  1683  000A2E  EE20 F00A          	lfsr	2,10
  1684  000A32  5006               	movf	FRAME_DeviceReset@message,w,c
  1685  000A34  26D9               	addwf	fsr2l,f,c
  1686  000A36  5007               	movf	FRAME_DeviceReset@message+1,w,c
  1687  000A38  22DA               	addwfc	fsr2h,f,c
  1688  000A3A  A038               	btfss	_Flagi,0,c
  1689  000A3C  D002               	goto	u1220
  1690  000A3E  0E01               	movlw	1
  1691  000A40  D001               	goto	u1226
  1692  000A42                     u1220:
  1693  000A42  0E00               	movlw	0
  1694  000A44                     u1226:
  1695  000A44  6EDF               	movwf	indf2,c
  1696                           
  1697                           ;FRAME.c: 282:         message->data[3] = 0;
  1698  000A46  EE20 F00B          	lfsr	2,11
  1699  000A4A  5006               	movf	FRAME_DeviceReset@message,w,c
  1700  000A4C  26D9               	addwf	fsr2l,f,c
  1701  000A4E  5007               	movf	FRAME_DeviceReset@message+1,w,c
  1702  000A50  22DA               	addwfc	fsr2h,f,c
  1703  000A52  0E00               	movlw	0
  1704  000A54  6EDF               	movwf	indf2,c
  1705                           
  1706                           ;FRAME.c: 283:         message->data[4] = Dane->rokU16;
  1707  000A56  EE20 F00C          	lfsr	2,12
  1708  000A5A  5006               	movf	FRAME_DeviceReset@message,w,c
  1709  000A5C  26D9               	addwf	fsr2l,f,c
  1710  000A5E  5007               	movf	FRAME_DeviceReset@message+1,w,c
  1711  000A60  22DA               	addwfc	fsr2h,f,c
  1712  000A62  C02E FFDF          	movff	46,indf2
  1713                           
  1714                           ;FRAME.c: 284:         message->data[5] = Dane->miesiacU16;
  1715  000A66  EE20 F00D          	lfsr	2,13
  1716  000A6A  5006               	movf	FRAME_DeviceReset@message,w,c
  1717  000A6C  26D9               	addwf	fsr2l,f,c
  1718  000A6E  5007               	movf	FRAME_DeviceReset@message+1,w,c
  1719  000A70  22DA               	addwfc	fsr2h,f,c
  1720  000A72  C030 FFDF          	movff	48,indf2
  1721                           
  1722                           ;FRAME.c: 285:         message->data[6] = Dane->dzienU16;
  1723  000A76  EE20 F00E          	lfsr	2,14
  1724  000A7A  5006               	movf	FRAME_DeviceReset@message,w,c
  1725  000A7C  26D9               	addwf	fsr2l,f,c
  1726  000A7E  5007               	movf	FRAME_DeviceReset@message+1,w,c
  1727  000A80  22DA               	addwfc	fsr2h,f,c
  1728  000A82  C032 FFDF          	movff	50,indf2
  1729                           
  1730                           ;FRAME.c: 286:         message->data[7] = Dane->godzinaU16;
  1731  000A86  EE20 F00F          	lfsr	2,15
  1732  000A8A  5006               	movf	FRAME_DeviceReset@message,w,c
  1733  000A8C  26D9               	addwf	fsr2l,f,c
  1734  000A8E  5007               	movf	FRAME_DeviceReset@message+1,w,c
  1735  000A90  22DA               	addwfc	fsr2h,f,c
  1736  000A92  C034 FFDF          	movff	52,indf2
  1737                           
  1738                           ;FRAME.c: 287:         RCON &= ~(1<<6);
  1739  000A96  9CD0               	bcf	4048,6,c	;volatile
  1740                           
  1741                           ;FRAME.c: 288:         Flagi.wykonanoZapisDoFlash = 0;
  1742  000A98  9838               	bcf	_Flagi,4,c
  1743                           
  1744                           ;FRAME.c: 302:     }
  1745  000A9A  0012               	return	
  1746  000A9C                     l2601:
  1747                           
  1748                           ;FRAME.c: 304:     {;FRAME.c: 305:         message->data_length = 1;
  1749  000A9C  EE20 F010          	lfsr	2,16
  1750  000AA0  5006               	movf	FRAME_DeviceReset@message,w,c
  1751  000AA2  26D9               	addwf	fsr2l,f,c
  1752  000AA4  5007               	movf	FRAME_DeviceReset@message+1,w,c
  1753  000AA6  22DA               	addwfc	fsr2h,f,c
  1754  000AA8  0E01               	movlw	1
  1755  000AAA  6EDF               	movwf	indf2,c
  1756                           
  1757                           ;FRAME.c: 327:         message->data[0] = 0xFF;
  1758  000AAC  EE20 F008          	lfsr	2,8
  1759  000AB0  5006               	movf	FRAME_DeviceReset@message,w,c
  1760  000AB2  26D9               	addwf	fsr2l,f,c
  1761  000AB4  5007               	movf	FRAME_DeviceReset@message+1,w,c
  1762  000AB6  22DA               	addwfc	fsr2h,f,c
  1763  000AB8  0EFF               	movlw	255
  1764  000ABA  6EDF               	movwf	indf2,c
  1765  000ABC  0012               	return		;funcret
  1766  000ABE                     __end_of_FRAME_DeviceReset:
  1767                           	opt callstack 0
  1768                           
  1769 ;; *************** function _FRAME_AxisStatus *****************
  1770 ;; Defined at:
  1771 ;;		line 226 in file "FRAME.c"
  1772 ;; Parameters:    Size  Location     Type
  1773 ;;  message         2    5[COMRAM] PTR struct .
  1774 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1775 ;; Auto vars:     Size  Location     Type
  1776 ;;  i               2    0        unsigned short 
  1777 ;; Return value:  Size  Location     Type
  1778 ;;                  1    wreg      void 
  1779 ;; Registers used:
  1780 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1781 ;; Tracked objects:
  1782 ;;		On entry : 0/0
  1783 ;;		On exit  : 0/0
  1784 ;;		Unchanged: 0/0
  1785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1786 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1788 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1789 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1790 ;;Total ram usage:        3 bytes
  1791 ;; Hardware stack levels used:    1
  1792 ;; Hardware stack levels required when called:    3
  1793 ;; This function calls:
  1794 ;;		Nothing
  1795 ;; This function is called by:
  1796 ;;		_FRAME_HandleCanFrame
  1797 ;; This function uses a non-reentrant model
  1798 ;;
  1799                           
  1800                           	psect	text11
  1801  001132                     __ptext11:
  1802                           	opt callstack 0
  1803  001132                     _FRAME_AxisStatus:
  1804                           	opt callstack 25
  1805                           
  1806                           ;FRAME.c: 226: static void FRAME_AxisStatus(mID *message);FRAME.c: 227: {;FRAME.c: 228: 
      +                              WORD i;;FRAME.c: 230:     if(message->message_type == 0x02)
  1807                           
  1808                           ;incstack = 0
  1809  001132  EE20 F001          	lfsr	2,1
  1810  001136  5006               	movf	FRAME_AxisStatus@message,w,c
  1811  001138  26D9               	addwf	fsr2l,f,c
  1812  00113A  5007               	movf	FRAME_AxisStatus@message+1,w,c
  1813  00113C  22DA               	addwfc	fsr2h,f,c
  1814  00113E  0E02               	movlw	2
  1815  001140  18DE               	xorwf	postinc2,w,c
  1816  001142  A4D8               	btfss	status,2,c
  1817  001144  0012               	return	
  1818                           
  1819                           ;FRAME.c: 231:     {;FRAME.c: 232:         message->data_length = 1;
  1820  001146  EE20 F010          	lfsr	2,16
  1821  00114A  5006               	movf	FRAME_AxisStatus@message,w,c
  1822  00114C  26D9               	addwf	fsr2l,f,c
  1823  00114E  5007               	movf	FRAME_AxisStatus@message+1,w,c
  1824  001150  22DA               	addwfc	fsr2h,f,c
  1825  001152  0E01               	movlw	1
  1826  001154  6EDF               	movwf	indf2,c
  1827                           
  1828                           ;FRAME.c: 243:         message->data[0] = 0xFF;
  1829  001156  EE20 F008          	lfsr	2,8
  1830  00115A  5006               	movf	FRAME_AxisStatus@message,w,c
  1831  00115C  26D9               	addwf	fsr2l,f,c
  1832  00115E  5007               	movf	FRAME_AxisStatus@message+1,w,c
  1833  001160  22DA               	addwfc	fsr2h,f,c
  1834  001162  0EFF               	movlw	255
  1835  001164  6EDF               	movwf	indf2,c
  1836                           
  1837                           ;FRAME.c: 244:     }
  1838  001166  0012               	return		;funcret
  1839  001168                     __end_of_FRAME_AxisStatus:
  1840                           	opt callstack 0
  1841                           
  1842 ;; *************** function _FRAME_AveragingTimes *****************
  1843 ;; Defined at:
  1844 ;;		line 167 in file "FRAME.c"
  1845 ;; Parameters:    Size  Location     Type
  1846 ;;  message         2    5[COMRAM] PTR struct .
  1847 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1848 ;; Auto vars:     Size  Location     Type
  1849 ;;		None
  1850 ;; Return value:  Size  Location     Type
  1851 ;;                  1    wreg      void 
  1852 ;; Registers used:
  1853 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1854 ;; Tracked objects:
  1855 ;;		On entry : 0/0
  1856 ;;		On exit  : 0/0
  1857 ;;		Unchanged: 0/0
  1858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1859 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1861 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1862 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1863 ;;Total ram usage:        3 bytes
  1864 ;; Hardware stack levels used:    1
  1865 ;; Hardware stack levels required when called:    3
  1866 ;; This function calls:
  1867 ;;		Nothing
  1868 ;; This function is called by:
  1869 ;;		_FRAME_HandleCanFrame
  1870 ;; This function uses a non-reentrant model
  1871 ;;
  1872                           
  1873                           	psect	text12
  1874  001168                     __ptext12:
  1875                           	opt callstack 0
  1876  001168                     _FRAME_AveragingTimes:
  1877                           	opt callstack 25
  1878                           
  1879                           ;FRAME.c: 167: static void FRAME_AveragingTimes(mID *message);FRAME.c: 168: {;FRAME.c: 1
      +                          69:     if(message->message_type == 0x02)
  1880                           
  1881                           ;incstack = 0
  1882  001168  EE20 F001          	lfsr	2,1
  1883  00116C  5006               	movf	FRAME_AveragingTimes@message,w,c
  1884  00116E  26D9               	addwf	fsr2l,f,c
  1885  001170  5007               	movf	FRAME_AveragingTimes@message+1,w,c
  1886  001172  22DA               	addwfc	fsr2h,f,c
  1887  001174  0E02               	movlw	2
  1888  001176  18DE               	xorwf	postinc2,w,c
  1889  001178  A4D8               	btfss	status,2,c
  1890  00117A  0012               	return	
  1891                           
  1892                           ;FRAME.c: 170:     {;FRAME.c: 171:         message->data_length = 1;
  1893  00117C  EE20 F010          	lfsr	2,16
  1894  001180  5006               	movf	FRAME_AveragingTimes@message,w,c
  1895  001182  26D9               	addwf	fsr2l,f,c
  1896  001184  5007               	movf	FRAME_AveragingTimes@message+1,w,c
  1897  001186  22DA               	addwfc	fsr2h,f,c
  1898  001188  0E01               	movlw	1
  1899  00118A  6EDF               	movwf	indf2,c
  1900                           
  1901                           ;FRAME.c: 179:         message->data[0] = 0xFF;
  1902  00118C  EE20 F008          	lfsr	2,8
  1903  001190  5006               	movf	FRAME_AveragingTimes@message,w,c
  1904  001192  26D9               	addwf	fsr2l,f,c
  1905  001194  5007               	movf	FRAME_AveragingTimes@message+1,w,c
  1906  001196  22DA               	addwfc	fsr2h,f,c
  1907  001198  0EFF               	movlw	255
  1908  00119A  6EDF               	movwf	indf2,c
  1909                           
  1910                           ;FRAME.c: 180:     }
  1911  00119C  0012               	return		;funcret
  1912  00119E                     __end_of_FRAME_AveragingTimes:
  1913                           	opt callstack 0
  1914                           
  1915 ;; *************** function _FRAME_AnalogValue *****************
  1916 ;; Defined at:
  1917 ;;		line 406 in file "FRAME.c"
  1918 ;; Parameters:    Size  Location     Type
  1919 ;;  message         2    5[COMRAM] PTR struct .
  1920 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1921 ;;  set             2    7[COMRAM] unsigned short 
  1922 ;; Auto vars:     Size  Location     Type
  1923 ;;  i               2    0        unsigned short 
  1924 ;; Return value:  Size  Location     Type
  1925 ;;                  1    wreg      void 
  1926 ;; Registers used:
  1927 ;;		None
  1928 ;; Tracked objects:
  1929 ;;		On entry : 0/0
  1930 ;;		On exit  : 0/0
  1931 ;;		Unchanged: 0/0
  1932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1933 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1936 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1937 ;;Total ram usage:        4 bytes
  1938 ;; Hardware stack levels used:    1
  1939 ;; Hardware stack levels required when called:    3
  1940 ;; This function calls:
  1941 ;;		Nothing
  1942 ;; This function is called by:
  1943 ;;		_FRAME_HandleCanFrame
  1944 ;; This function uses a non-reentrant model
  1945 ;;
  1946                           
  1947                           	psect	text13
  1948  001370                     __ptext13:
  1949                           	opt callstack 0
  1950  001370                     _FRAME_AnalogValue:
  1951                           	opt callstack 25
  1952                           
  1953                           ;incstack = 0
  1954  001370  0012               	return		;funcret
  1955  001372                     __end_of_FRAME_AnalogValue:
  1956                           	opt callstack 0
  1957                           
  1958 ;; *************** function _FRAME_AdressOfNeighbors *****************
  1959 ;; Defined at:
  1960 ;;		line 450 in file "FRAME.c"
  1961 ;; Parameters:    Size  Location     Type
  1962 ;;  message         2   11[COMRAM] PTR struct .
  1963 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1964 ;;  nrRamki         2   13[COMRAM] unsigned short 
  1965 ;; Auto vars:     Size  Location     Type
  1966 ;;  i               2   29[COMRAM] unsigned short 
  1967 ;; Return value:  Size  Location     Type
  1968 ;;                  1    wreg      void 
  1969 ;; Registers used:
  1970 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1971 ;; Tracked objects:
  1972 ;;		On entry : 0/0
  1973 ;;		On exit  : 0/0
  1974 ;;		Unchanged: 0/0
  1975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1976 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1977 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1978 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1979 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1980 ;;Total ram usage:       20 bytes
  1981 ;; Hardware stack levels used:    1
  1982 ;; Hardware stack levels required when called:    4
  1983 ;; This function calls:
  1984 ;;		___wmul
  1985 ;; This function is called by:
  1986 ;;		_FRAME_HandleCanFrame
  1987 ;; This function uses a non-reentrant model
  1988 ;;
  1989                           
  1990                           	psect	text14
  1991  0002DC                     __ptext14:
  1992                           	opt callstack 0
  1993  0002DC                     _FRAME_AdressOfNeighbors:
  1994                           	opt callstack 24
  1995                           
  1996                           ;FRAME.c: 450: static void FRAME_AdressOfNeighbors(mID *message, WORD nrRamki);FRAME.c: 
      +                          451: {;FRAME.c: 452:     WORD i;;FRAME.c: 456:     if(message->message_type == 0x02)
  1997                           
  1998                           ;incstack = 0
  1999  0002DC  EE20 F001          	lfsr	2,1
  2000  0002E0  500C               	movf	FRAME_AdressOfNeighbors@message,w,c
  2001  0002E2  26D9               	addwf	fsr2l,f,c
  2002  0002E4  500D               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  2003  0002E6  22DA               	addwfc	fsr2h,f,c
  2004  0002E8  0E02               	movlw	2
  2005  0002EA  18DE               	xorwf	postinc2,w,c
  2006  0002EC  A4D8               	btfss	status,2,c
  2007  0002EE  D07F               	goto	l2633
  2008                           
  2009                           ;FRAME.c: 457:     {;FRAME.c: 459:         message->data_length = 8;
  2010  0002F0  EE20 F010          	lfsr	2,16
  2011  0002F4  500C               	movf	FRAME_AdressOfNeighbors@message,w,c
  2012  0002F6  26D9               	addwf	fsr2l,f,c
  2013  0002F8  500D               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  2014  0002FA  22DA               	addwfc	fsr2h,f,c
  2015  0002FC  0E08               	movlw	8
  2016  0002FE  6EDF               	movwf	indf2,c
  2017                           
  2018                           ;FRAME.c: 460:         for(i=0; i<4; i++)
  2019  000300  0E00               	movlw	0
  2020  000302  6E1F               	movwf	FRAME_AdressOfNeighbors@i+1,c
  2021  000304  0E00               	movlw	0
  2022  000306  6E1E               	movwf	FRAME_AdressOfNeighbors@i,c
  2023  000308                     l2627:
  2024                           
  2025                           ;FRAME.c: 461:         {;FRAME.c: 462:             message->data[2*i] = (BYTE)(Dane->sas
      +                          iedzi[i+(4*nrRamki)].adres >> 8);
  2026  000308  C01E  F010         	movff	FRAME_AdressOfNeighbors@i,??_FRAME_AdressOfNeighbors
  2027  00030C  C01F  F011         	movff	FRAME_AdressOfNeighbors@i+1,??_FRAME_AdressOfNeighbors+1
  2028  000310  90D8               	bcf	status,0,c
  2029  000312  3610               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  2030  000314  3611               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  2031  000316  C00C  F012         	movff	FRAME_AdressOfNeighbors@message,??_FRAME_AdressOfNeighbors+2
  2032  00031A  C00D  F013         	movff	FRAME_AdressOfNeighbors@message+1,??_FRAME_AdressOfNeighbors+3
  2033  00031E  5010               	movf	??_FRAME_AdressOfNeighbors,w,c
  2034  000320  2612               	addwf	??_FRAME_AdressOfNeighbors+2,f,c
  2035  000322  5011               	movf	??_FRAME_AdressOfNeighbors+1,w,c
  2036  000324  2213               	addwfc	??_FRAME_AdressOfNeighbors+3,f,c
  2037  000326  0E08               	movlw	8
  2038  000328  2412               	addwf	??_FRAME_AdressOfNeighbors+2,w,c
  2039  00032A  6ED9               	movwf	fsr2l,c
  2040  00032C  0E00               	movlw	0
  2041  00032E  2013               	addwfc	??_FRAME_AdressOfNeighbors+3,w,c
  2042  000330  6EDA               	movwf	fsr2h,c
  2043  000332  C00E  F014         	movff	FRAME_AdressOfNeighbors@nrRamki,??_FRAME_AdressOfNeighbors+4
  2044  000336  C00F  F015         	movff	FRAME_AdressOfNeighbors@nrRamki+1,??_FRAME_AdressOfNeighbors+5
  2045  00033A  90D8               	bcf	status,0,c
  2046  00033C  3614               	rlcf	??_FRAME_AdressOfNeighbors+4,f,c
  2047  00033E  3615               	rlcf	??_FRAME_AdressOfNeighbors+5,f,c
  2048  000340  90D8               	bcf	status,0,c
  2049  000342  3614               	rlcf	??_FRAME_AdressOfNeighbors+4,f,c
  2050  000344  3615               	rlcf	??_FRAME_AdressOfNeighbors+5,f,c
  2051  000346  501E               	movf	FRAME_AdressOfNeighbors@i,w,c
  2052  000348  2614               	addwf	??_FRAME_AdressOfNeighbors+4,f,c
  2053  00034A  501F               	movf	FRAME_AdressOfNeighbors@i+1,w,c
  2054  00034C  2215               	addwfc	??_FRAME_AdressOfNeighbors+5,f,c
  2055  00034E  90D8               	bcf	status,0,c
  2056  000350  3614               	rlcf	??_FRAME_AdressOfNeighbors+4,f,c
  2057  000352  3615               	rlcf	??_FRAME_AdressOfNeighbors+5,f,c
  2058  000354  90D8               	bcf	status,0,c
  2059  000356  3614               	rlcf	??_FRAME_AdressOfNeighbors+4,f,c
  2060  000358  3615               	rlcf	??_FRAME_AdressOfNeighbors+5,f,c
  2061  00035A  0E0E               	movlw	14
  2062  00035C  2414               	addwf	??_FRAME_AdressOfNeighbors+4,w,c
  2063  00035E  6EE1               	movwf	fsr1l,c
  2064  000360  0E00               	movlw	0
  2065  000362  2015               	addwfc	??_FRAME_AdressOfNeighbors+5,w,c
  2066  000364  6EE2               	movwf	fsr1h,c
  2067  000366  CFE6 F016          	movff	postinc1,??_FRAME_AdressOfNeighbors+6
  2068  00036A  CFE5 F017          	movff	postdec1,??_FRAME_AdressOfNeighbors+7
  2069  00036E  C017  F016         	movff	??_FRAME_AdressOfNeighbors+7,??_FRAME_AdressOfNeighbors+6
  2070  000372  6A17               	clrf	??_FRAME_AdressOfNeighbors+7,c
  2071  000374  5016               	movf	??_FRAME_AdressOfNeighbors+6,w,c
  2072  000376  6EDF               	movwf	indf2,c
  2073                           
  2074                           ;FRAME.c: 463:             message->data[(2*i)+1] = (BYTE)Dane->sasiedzi[i+(4*nrRamki)].
      +                          adres;
  2075  000378  C00E  F010         	movff	FRAME_AdressOfNeighbors@nrRamki,??_FRAME_AdressOfNeighbors
  2076  00037C  C00F  F011         	movff	FRAME_AdressOfNeighbors@nrRamki+1,??_FRAME_AdressOfNeighbors+1
  2077  000380  90D8               	bcf	status,0,c
  2078  000382  3610               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  2079  000384  3611               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  2080  000386  90D8               	bcf	status,0,c
  2081  000388  3610               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  2082  00038A  3611               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  2083  00038C  501E               	movf	FRAME_AdressOfNeighbors@i,w,c
  2084  00038E  2610               	addwf	??_FRAME_AdressOfNeighbors,f,c
  2085  000390  501F               	movf	FRAME_AdressOfNeighbors@i+1,w,c
  2086  000392  2211               	addwfc	??_FRAME_AdressOfNeighbors+1,f,c
  2087  000394  90D8               	bcf	status,0,c
  2088  000396  3610               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  2089  000398  3611               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  2090  00039A  90D8               	bcf	status,0,c
  2091  00039C  3610               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  2092  00039E  3611               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  2093  0003A0  0E0E               	movlw	14
  2094  0003A2  2410               	addwf	??_FRAME_AdressOfNeighbors,w,c
  2095  0003A4  6ED9               	movwf	fsr2l,c
  2096  0003A6  0E00               	movlw	0
  2097  0003A8  2011               	addwfc	??_FRAME_AdressOfNeighbors+1,w,c
  2098  0003AA  6EDA               	movwf	fsr2h,c
  2099  0003AC  C01E  F012         	movff	FRAME_AdressOfNeighbors@i,??_FRAME_AdressOfNeighbors+2
  2100  0003B0  C01F  F013         	movff	FRAME_AdressOfNeighbors@i+1,??_FRAME_AdressOfNeighbors+3
  2101  0003B4  90D8               	bcf	status,0,c
  2102  0003B6  3612               	rlcf	??_FRAME_AdressOfNeighbors+2,f,c
  2103  0003B8  3613               	rlcf	??_FRAME_AdressOfNeighbors+3,f,c
  2104  0003BA  C00C  F014         	movff	FRAME_AdressOfNeighbors@message,??_FRAME_AdressOfNeighbors+4
  2105  0003BE  C00D  F015         	movff	FRAME_AdressOfNeighbors@message+1,??_FRAME_AdressOfNeighbors+5
  2106  0003C2  5012               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  2107  0003C4  2614               	addwf	??_FRAME_AdressOfNeighbors+4,f,c
  2108  0003C6  5013               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  2109  0003C8  2215               	addwfc	??_FRAME_AdressOfNeighbors+5,f,c
  2110  0003CA  0E09               	movlw	9
  2111  0003CC  2414               	addwf	??_FRAME_AdressOfNeighbors+4,w,c
  2112  0003CE  6EE1               	movwf	fsr1l,c
  2113  0003D0  0E00               	movlw	0
  2114  0003D2  2015               	addwfc	??_FRAME_AdressOfNeighbors+5,w,c
  2115  0003D4  6EE2               	movwf	fsr1h,c
  2116  0003D6  CFDF FFE7          	movff	indf2,indf1
  2117                           
  2118                           ;FRAME.c: 464:         }
  2119  0003DA  4A1E               	infsnz	FRAME_AdressOfNeighbors@i,f,c
  2120  0003DC  2A1F               	incf	FRAME_AdressOfNeighbors@i+1,f,c
  2121  0003DE  501F               	movf	FRAME_AdressOfNeighbors@i+1,w,c
  2122  0003E0  E105               	bnz	u1270
  2123  0003E2  0E04               	movlw	4
  2124  0003E4  5C1E               	subwf	FRAME_AdressOfNeighbors@i,w,c
  2125  0003E6  B0D8               	btfsc	status,0,c
  2126  0003E8  0012               	return	
  2127  0003EA  D78E               	goto	l2627
  2128  0003EC                     u1270:
  2129  0003EC  0012               	return	
  2130  0003EE                     l2633:
  2131                           
  2132                           ;FRAME.c: 468:     {;FRAME.c: 470:         for(i=0; i<4; i++)
  2133  0003EE  0E00               	movlw	0
  2134  0003F0  6E1F               	movwf	FRAME_AdressOfNeighbors@i+1,c
  2135  0003F2  0E00               	movlw	0
  2136  0003F4  6E1E               	movwf	FRAME_AdressOfNeighbors@i,c
  2137  0003F6                     l2639:
  2138                           
  2139                           ;FRAME.c: 471:         {;FRAME.c: 472:             Dane->sasiedzi[i+(4*nrRamki)].adres =
      +                           ((WORD)message->data[2*i] << 8) |
  2140  0003F6  C01E  F010         	movff	FRAME_AdressOfNeighbors@i,??_FRAME_AdressOfNeighbors
  2141  0003FA  C01F  F011         	movff	FRAME_AdressOfNeighbors@i+1,??_FRAME_AdressOfNeighbors+1
  2142  0003FE  90D8               	bcf	status,0,c
  2143  000400  3610               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  2144  000402  3611               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  2145  000404  C00C  F012         	movff	FRAME_AdressOfNeighbors@message,??_FRAME_AdressOfNeighbors+2
  2146  000408  C00D  F013         	movff	FRAME_AdressOfNeighbors@message+1,??_FRAME_AdressOfNeighbors+3
  2147  00040C  5010               	movf	??_FRAME_AdressOfNeighbors,w,c
  2148  00040E  2612               	addwf	??_FRAME_AdressOfNeighbors+2,f,c
  2149  000410  5011               	movf	??_FRAME_AdressOfNeighbors+1,w,c
  2150  000412  2213               	addwfc	??_FRAME_AdressOfNeighbors+3,f,c
  2151  000414  0E08               	movlw	8
  2152  000416  2412               	addwf	??_FRAME_AdressOfNeighbors+2,w,c
  2153  000418  6ED9               	movwf	fsr2l,c
  2154  00041A  0E00               	movlw	0
  2155  00041C  2013               	addwfc	??_FRAME_AdressOfNeighbors+3,w,c
  2156  00041E  6EDA               	movwf	fsr2h,c
  2157  000420  50DF               	movf	indf2,w,c
  2158  000422  6E14               	movwf	(??_FRAME_AdressOfNeighbors+4)& (0+255),c
  2159  000424  5014               	movf	??_FRAME_AdressOfNeighbors+4,w,c
  2160  000426  6E16               	movwf	(??_FRAME_AdressOfNeighbors+6)& (0+255),c
  2161  000428  6A15               	clrf	(??_FRAME_AdressOfNeighbors+5)& (0+255),c
  2162  00042A  C01E  F017         	movff	FRAME_AdressOfNeighbors@i,??_FRAME_AdressOfNeighbors+7
  2163  00042E  C01F  F018         	movff	FRAME_AdressOfNeighbors@i+1,??_FRAME_AdressOfNeighbors+8
  2164  000432  90D8               	bcf	status,0,c
  2165  000434  3617               	rlcf	??_FRAME_AdressOfNeighbors+7,f,c
  2166  000436  3618               	rlcf	??_FRAME_AdressOfNeighbors+8,f,c
  2167  000438  C00C  F019         	movff	FRAME_AdressOfNeighbors@message,??_FRAME_AdressOfNeighbors+9
  2168  00043C  C00D  F01A         	movff	FRAME_AdressOfNeighbors@message+1,??_FRAME_AdressOfNeighbors+10
  2169  000440  5017               	movf	??_FRAME_AdressOfNeighbors+7,w,c
  2170  000442  2619               	addwf	??_FRAME_AdressOfNeighbors+9,f,c
  2171  000444  5018               	movf	??_FRAME_AdressOfNeighbors+8,w,c
  2172  000446  221A               	addwfc	??_FRAME_AdressOfNeighbors+10,f,c
  2173  000448  0E09               	movlw	9
  2174  00044A  2419               	addwf	??_FRAME_AdressOfNeighbors+9,w,c
  2175  00044C  6ED9               	movwf	fsr2l,c
  2176  00044E  0E00               	movlw	0
  2177  000450  201A               	addwfc	??_FRAME_AdressOfNeighbors+10,w,c
  2178  000452  6EDA               	movwf	fsr2h,c
  2179  000454  50DF               	movf	indf2,w,c
  2180  000456  6E1B               	movwf	(??_FRAME_AdressOfNeighbors+11)& (0+255),c
  2181  000458  501B               	movf	??_FRAME_AdressOfNeighbors+11,w,c
  2182  00045A  1215               	iorwf	??_FRAME_AdressOfNeighbors+5,f,c
  2183  00045C  0E00               	movlw	0
  2184  00045E  1216               	iorwf	??_FRAME_AdressOfNeighbors+6,f,c
  2185  000460  C00E  F01C         	movff	FRAME_AdressOfNeighbors@nrRamki,??_FRAME_AdressOfNeighbors+12
  2186  000464  C00F  F01D         	movff	FRAME_AdressOfNeighbors@nrRamki+1,??_FRAME_AdressOfNeighbors+13
  2187  000468  90D8               	bcf	status,0,c
  2188  00046A  361C               	rlcf	??_FRAME_AdressOfNeighbors+12,f,c
  2189  00046C  361D               	rlcf	??_FRAME_AdressOfNeighbors+13,f,c
  2190  00046E  90D8               	bcf	status,0,c
  2191  000470  361C               	rlcf	??_FRAME_AdressOfNeighbors+12,f,c
  2192  000472  361D               	rlcf	??_FRAME_AdressOfNeighbors+13,f,c
  2193  000474  501E               	movf	FRAME_AdressOfNeighbors@i,w,c
  2194  000476  261C               	addwf	??_FRAME_AdressOfNeighbors+12,f,c
  2195  000478  501F               	movf	FRAME_AdressOfNeighbors@i+1,w,c
  2196  00047A  221D               	addwfc	??_FRAME_AdressOfNeighbors+13,f,c
  2197  00047C  90D8               	bcf	status,0,c
  2198  00047E  361C               	rlcf	??_FRAME_AdressOfNeighbors+12,f,c
  2199  000480  361D               	rlcf	??_FRAME_AdressOfNeighbors+13,f,c
  2200  000482  90D8               	bcf	status,0,c
  2201  000484  361C               	rlcf	??_FRAME_AdressOfNeighbors+12,f,c
  2202  000486  361D               	rlcf	??_FRAME_AdressOfNeighbors+13,f,c
  2203  000488  0E0E               	movlw	14
  2204  00048A  241C               	addwf	??_FRAME_AdressOfNeighbors+12,w,c
  2205  00048C  6ED9               	movwf	fsr2l,c
  2206  00048E  0E00               	movlw	0
  2207  000490  201D               	addwfc	??_FRAME_AdressOfNeighbors+13,w,c
  2208  000492  6EDA               	movwf	fsr2h,c
  2209  000494  C015  FFDE         	movff	??_FRAME_AdressOfNeighbors+5,postinc2
  2210  000498  C016  FFDD         	movff	??_FRAME_AdressOfNeighbors+6,postdec2
  2211                           
  2212                           ;FRAME.c: 475:             Dane->sasiedzi[i+(4*nrRamki)].pointerNaSasiada = &wartosciSas
      +                          iada[i+(4*nrRamki)];
  2213  00049C  C00E  F010         	movff	FRAME_AdressOfNeighbors@nrRamki,??_FRAME_AdressOfNeighbors
  2214  0004A0  C00F  F011         	movff	FRAME_AdressOfNeighbors@nrRamki+1,??_FRAME_AdressOfNeighbors+1
  2215  0004A4  90D8               	bcf	status,0,c
  2216  0004A6  3610               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  2217  0004A8  3611               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  2218  0004AA  90D8               	bcf	status,0,c
  2219  0004AC  3610               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  2220  0004AE  3611               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  2221  0004B0  C010  F006         	movff	??_FRAME_AdressOfNeighbors,___wmul@multiplier
  2222  0004B4  C011  F007         	movff	??_FRAME_AdressOfNeighbors+1,___wmul@multiplier+1
  2223  0004B8  0E00               	movlw	0
  2224  0004BA  6E09               	movwf	___wmul@multiplicand+1,c
  2225  0004BC  0E44               	movlw	68
  2226  0004BE  6E08               	movwf	___wmul@multiplicand,c
  2227  0004C0  EC29  F009         	call	___wmul	;wreg free
  2228  0004C4  0EC6               	movlw	low _wartosciSasiada
  2229  0004C6  6E12               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  2230  0004C8  0E00               	movlw	high _wartosciSasiada
  2231  0004CA  6E13               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  2232  0004CC  5006               	movf	?___wmul,w,c
  2233  0004CE  2612               	addwf	??_FRAME_AdressOfNeighbors+2,f,c
  2234  0004D0  5007               	movf	?___wmul+1,w,c
  2235  0004D2  2213               	addwfc	??_FRAME_AdressOfNeighbors+3,f,c
  2236  0004D4  C01E  F006         	movff	FRAME_AdressOfNeighbors@i,___wmul@multiplier
  2237  0004D8  C01F  F007         	movff	FRAME_AdressOfNeighbors@i+1,___wmul@multiplier+1
  2238  0004DC  0E00               	movlw	0
  2239  0004DE  6E09               	movwf	___wmul@multiplicand+1,c
  2240  0004E0  0E44               	movlw	68
  2241  0004E2  6E08               	movwf	___wmul@multiplicand,c
  2242  0004E4  EC29  F009         	call	___wmul	;wreg free
  2243  0004E8  5006               	movf	?___wmul,w,c
  2244  0004EA  2612               	addwf	??_FRAME_AdressOfNeighbors+2,f,c
  2245  0004EC  5007               	movf	?___wmul+1,w,c
  2246  0004EE  2213               	addwfc	??_FRAME_AdressOfNeighbors+3,f,c
  2247  0004F0  C00E  F014         	movff	FRAME_AdressOfNeighbors@nrRamki,??_FRAME_AdressOfNeighbors+4
  2248  0004F4  C00F  F015         	movff	FRAME_AdressOfNeighbors@nrRamki+1,??_FRAME_AdressOfNeighbors+5
  2249  0004F8  90D8               	bcf	status,0,c
  2250  0004FA  3614               	rlcf	??_FRAME_AdressOfNeighbors+4,f,c
  2251  0004FC  3615               	rlcf	??_FRAME_AdressOfNeighbors+5,f,c
  2252  0004FE  90D8               	bcf	status,0,c
  2253  000500  3614               	rlcf	??_FRAME_AdressOfNeighbors+4,f,c
  2254  000502  3615               	rlcf	??_FRAME_AdressOfNeighbors+5,f,c
  2255  000504  501E               	movf	FRAME_AdressOfNeighbors@i,w,c
  2256  000506  2614               	addwf	??_FRAME_AdressOfNeighbors+4,f,c
  2257  000508  501F               	movf	FRAME_AdressOfNeighbors@i+1,w,c
  2258  00050A  2215               	addwfc	??_FRAME_AdressOfNeighbors+5,f,c
  2259  00050C  90D8               	bcf	status,0,c
  2260  00050E  3614               	rlcf	??_FRAME_AdressOfNeighbors+4,f,c
  2261  000510  3615               	rlcf	??_FRAME_AdressOfNeighbors+5,f,c
  2262  000512  90D8               	bcf	status,0,c
  2263  000514  3614               	rlcf	??_FRAME_AdressOfNeighbors+4,f,c
  2264  000516  3615               	rlcf	??_FRAME_AdressOfNeighbors+5,f,c
  2265  000518  0E10               	movlw	16
  2266  00051A  2414               	addwf	??_FRAME_AdressOfNeighbors+4,w,c
  2267  00051C  6ED9               	movwf	fsr2l,c
  2268  00051E  0E00               	movlw	0
  2269  000520  2015               	addwfc	??_FRAME_AdressOfNeighbors+5,w,c
  2270  000522  6EDA               	movwf	fsr2h,c
  2271  000524  C012  FFDE         	movff	??_FRAME_AdressOfNeighbors+2,postinc2
  2272  000528  C013  FFDD         	movff	??_FRAME_AdressOfNeighbors+3,postdec2
  2273                           
  2274                           ;FRAME.c: 476:         }
  2275  00052C  4A1E               	infsnz	FRAME_AdressOfNeighbors@i,f,c
  2276  00052E  2A1F               	incf	FRAME_AdressOfNeighbors@i+1,f,c
  2277  000530  501F               	movf	FRAME_AdressOfNeighbors@i+1,w,c
  2278  000532  E105               	bnz	u1280
  2279  000534  0E04               	movlw	4
  2280  000536  5C1E               	subwf	FRAME_AdressOfNeighbors@i,w,c
  2281  000538  B0D8               	btfsc	status,0,c
  2282  00053A  0012               	return	
  2283  00053C  D75C               	goto	l2639
  2284  00053E                     u1280:
  2285  00053E  0012               	return		;funcret
  2286  000540                     __end_of_FRAME_AdressOfNeighbors:
  2287                           	opt callstack 0
  2288                           
  2289 ;; *************** function ___wmul *****************
  2290 ;; Defined at:
  2291 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  2292 ;; Parameters:    Size  Location     Type
  2293 ;;  multiplier      2    5[COMRAM] unsigned int 
  2294 ;;  multiplicand    2    7[COMRAM] unsigned int 
  2295 ;; Auto vars:     Size  Location     Type
  2296 ;;  product         2    9[COMRAM] unsigned int 
  2297 ;; Return value:  Size  Location     Type
  2298 ;;                  2    5[COMRAM] unsigned int 
  2299 ;; Registers used:
  2300 ;;		wreg, status,2, status,0, prodl, prodh
  2301 ;; Tracked objects:
  2302 ;;		On entry : 0/0
  2303 ;;		On exit  : 0/0
  2304 ;;		Unchanged: 0/0
  2305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2306 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2307 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2309 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2310 ;;Total ram usage:        6 bytes
  2311 ;; Hardware stack levels used:    1
  2312 ;; Hardware stack levels required when called:    3
  2313 ;; This function calls:
  2314 ;;		Nothing
  2315 ;; This function is called by:
  2316 ;;		_FRAME_AdressOfNeighbors
  2317 ;;		_IsInNeighbors
  2318 ;; This function uses a non-reentrant model
  2319 ;;
  2320                           
  2321                           	psect	text15
  2322  001252                     __ptext15:
  2323                           	opt callstack 0
  2324  001252                     ___wmul:
  2325                           	opt callstack 24
  2326                           
  2327                           ;incstack = 0
  2328  001252  5006               	movf	___wmul@multiplier,w,c
  2329  001254  0208               	mulwf	___wmul@multiplicand,c
  2330  001256  CFF3 F00A          	movff	prodl,___wmul@product
  2331  00125A  CFF4 F00B          	movff	prodh,___wmul@product+1
  2332  00125E  5006               	movf	___wmul@multiplier,w,c
  2333  001260  0209               	mulwf	___wmul@multiplicand+1,c
  2334  001262  50F3               	movf	prodl,w,c
  2335  001264  260B               	addwf	___wmul@product+1,f,c
  2336  001266  5007               	movf	___wmul@multiplier+1,w,c
  2337  001268  0208               	mulwf	___wmul@multiplicand,c
  2338  00126A  50F3               	movf	prodl,w,c
  2339  00126C  260B               	addwf	___wmul@product+1,f,c
  2340  00126E  C00A  F006         	movff	___wmul@product,?___wmul
  2341  001272  C00B  F007         	movff	___wmul@product+1,?___wmul+1
  2342  001276  0012               	return		;funcret
  2343  001278                     __end_of___wmul:
  2344                           	opt callstack 0
  2345                           
  2346 ;; *************** function _FRAME_AccelerometerStatus *****************
  2347 ;; Defined at:
  2348 ;;		line 90 in file "FRAME.c"
  2349 ;; Parameters:    Size  Location     Type
  2350 ;;  message         2    7[COMRAM] PTR struct .
  2351 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2352 ;; Auto vars:     Size  Location     Type
  2353 ;;		None
  2354 ;; Return value:  Size  Location     Type
  2355 ;;                  1    wreg      void 
  2356 ;; Registers used:
  2357 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2358 ;; Tracked objects:
  2359 ;;		On entry : 0/0
  2360 ;;		On exit  : 0/0
  2361 ;;		Unchanged: 0/0
  2362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2363 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2365 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2366 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2367 ;;Total ram usage:        3 bytes
  2368 ;; Hardware stack levels used:    1
  2369 ;; Hardware stack levels required when called:    4
  2370 ;; This function calls:
  2371 ;;		_MOCK_Klikniecie_Spadek
  2372 ;;		_MOCK_PrzyspieszenieX
  2373 ;;		_MOCK_PrzyspieszenieY
  2374 ;;		_MOCK_PrzyspieszenieZ
  2375 ;; This function is called by:
  2376 ;;		_FRAME_HandleCanFrame
  2377 ;; This function uses a non-reentrant model
  2378 ;;
  2379                           
  2380                           	psect	text16
  2381  000D00                     __ptext16:
  2382                           	opt callstack 0
  2383  000D00                     _FRAME_AccelerometerStatus:
  2384                           	opt callstack 24
  2385                           
  2386                           ;FRAME.c: 90: static void FRAME_AccelerometerStatus(mID *message);FRAME.c: 91: {;FRAME.c
      +                          : 92:     if(message->message_type == 0x02)
  2387                           
  2388                           ;incstack = 0
  2389  000D00  EE20 F001          	lfsr	2,1
  2390  000D04  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  2391  000D06  26D9               	addwf	fsr2l,f,c
  2392  000D08  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  2393  000D0A  22DA               	addwfc	fsr2h,f,c
  2394  000D0C  0E02               	movlw	2
  2395  000D0E  18DE               	xorwf	postinc2,w,c
  2396  000D10  A4D8               	btfss	status,2,c
  2397  000D12  0012               	return	
  2398                           
  2399                           ;FRAME.c: 93:     {;FRAME.c: 94:         message->data_length = 4;
  2400  000D14  EE20 F010          	lfsr	2,16
  2401  000D18  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  2402  000D1A  26D9               	addwf	fsr2l,f,c
  2403  000D1C  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  2404  000D1E  22DA               	addwfc	fsr2h,f,c
  2405  000D20  0E04               	movlw	4
  2406  000D22  6EDF               	movwf	indf2,c
  2407                           
  2408                           ;FRAME.c: 98:         message->data[0] = MOCK_PrzyspieszenieX();
  2409  000D24  EE20 F008          	lfsr	2,8
  2410  000D28  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  2411  000D2A  26D9               	addwf	fsr2l,f,c
  2412  000D2C  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  2413  000D2E  22DA               	addwfc	fsr2h,f,c
  2414  000D30  EC96  F009         	call	_MOCK_PrzyspieszenieX	;wreg free
  2415  000D34  5006               	movf	?_MOCK_PrzyspieszenieX,w,c
  2416  000D36  6EDF               	movwf	indf2,c
  2417                           
  2418                           ;FRAME.c: 99:         message->data[1] = MOCK_PrzyspieszenieY();
  2419  000D38  EE20 F009          	lfsr	2,9
  2420  000D3C  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  2421  000D3E  26D9               	addwf	fsr2l,f,c
  2422  000D40  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  2423  000D42  22DA               	addwfc	fsr2h,f,c
  2424  000D44  EC91  F009         	call	_MOCK_PrzyspieszenieY	;wreg free
  2425  000D48  5006               	movf	?_MOCK_PrzyspieszenieY,w,c
  2426  000D4A  6EDF               	movwf	indf2,c
  2427                           
  2428                           ;FRAME.c: 100:         message->data[2] = MOCK_PrzyspieszenieZ();
  2429  000D4C  EE20 F00A          	lfsr	2,10
  2430  000D50  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  2431  000D52  26D9               	addwf	fsr2l,f,c
  2432  000D54  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  2433  000D56  22DA               	addwfc	fsr2h,f,c
  2434  000D58  EC8C  F009         	call	_MOCK_PrzyspieszenieZ	;wreg free
  2435  000D5C  5006               	movf	?_MOCK_PrzyspieszenieZ,w,c
  2436  000D5E  6EDF               	movwf	indf2,c
  2437                           
  2438                           ;FRAME.c: 101:         message->data[3] = MOCK_Klikniecie_Spadek();
  2439  000D60  EE20 F00B          	lfsr	2,11
  2440  000D64  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  2441  000D66  26D9               	addwf	fsr2l,f,c
  2442  000D68  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  2443  000D6A  22DA               	addwfc	fsr2h,f,c
  2444  000D6C  EC9B  F009         	call	_MOCK_Klikniecie_Spadek	;wreg free
  2445  000D70  5006               	movf	?_MOCK_Klikniecie_Spadek,w,c
  2446  000D72  6EDF               	movwf	indf2,c
  2447                           
  2448                           ;FRAME.c: 102:     }
  2449  000D74  0012               	return		;funcret
  2450  000D76                     __end_of_FRAME_AccelerometerStatus:
  2451                           	opt callstack 0
  2452                           
  2453 ;; *************** function _MOCK_PrzyspieszenieZ *****************
  2454 ;; Defined at:
  2455 ;;		line 72 in file "MOC_Funct.c"
  2456 ;; Parameters:    Size  Location     Type
  2457 ;;		None
  2458 ;; Auto vars:     Size  Location     Type
  2459 ;;		None
  2460 ;; Return value:  Size  Location     Type
  2461 ;;                  2    5[COMRAM] unsigned int 
  2462 ;; Registers used:
  2463 ;;		wreg, status,2
  2464 ;; Tracked objects:
  2465 ;;		On entry : 0/0
  2466 ;;		On exit  : 0/0
  2467 ;;		Unchanged: 0/0
  2468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2469 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2472 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2473 ;;Total ram usage:        2 bytes
  2474 ;; Hardware stack levels used:    1
  2475 ;; Hardware stack levels required when called:    3
  2476 ;; This function calls:
  2477 ;;		Nothing
  2478 ;; This function is called by:
  2479 ;;		_FRAME_AccelerometerStatus
  2480 ;; This function uses a non-reentrant model
  2481 ;;
  2482                           
  2483                           	psect	text17
  2484  001318                     __ptext17:
  2485                           	opt callstack 0
  2486  001318                     _MOCK_PrzyspieszenieZ:
  2487                           	opt callstack 24
  2488                           
  2489                           ;MOC_Funct.c: 74:     return 0xFE;
  2490                           
  2491                           ;incstack = 0
  2492  001318  0E00               	movlw	0
  2493  00131A  6E07               	movwf	?_MOCK_PrzyspieszenieZ+1,c
  2494  00131C  0EFE               	movlw	254
  2495  00131E  6E06               	movwf	?_MOCK_PrzyspieszenieZ,c
  2496  001320  0012               	return		;funcret
  2497  001322                     __end_of_MOCK_PrzyspieszenieZ:
  2498                           	opt callstack 0
  2499                           
  2500 ;; *************** function _MOCK_PrzyspieszenieY *****************
  2501 ;; Defined at:
  2502 ;;		line 68 in file "MOC_Funct.c"
  2503 ;; Parameters:    Size  Location     Type
  2504 ;;		None
  2505 ;; Auto vars:     Size  Location     Type
  2506 ;;		None
  2507 ;; Return value:  Size  Location     Type
  2508 ;;                  2    5[COMRAM] unsigned int 
  2509 ;; Registers used:
  2510 ;;		wreg, status,2
  2511 ;; Tracked objects:
  2512 ;;		On entry : 0/0
  2513 ;;		On exit  : 0/0
  2514 ;;		Unchanged: 0/0
  2515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2516 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2519 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2520 ;;Total ram usage:        2 bytes
  2521 ;; Hardware stack levels used:    1
  2522 ;; Hardware stack levels required when called:    3
  2523 ;; This function calls:
  2524 ;;		Nothing
  2525 ;; This function is called by:
  2526 ;;		_FRAME_AccelerometerStatus
  2527 ;; This function uses a non-reentrant model
  2528 ;;
  2529                           
  2530                           	psect	text18
  2531  001322                     __ptext18:
  2532                           	opt callstack 0
  2533  001322                     _MOCK_PrzyspieszenieY:
  2534                           	opt callstack 24
  2535                           
  2536                           ;MOC_Funct.c: 70:     return 0xFE;
  2537                           
  2538                           ;incstack = 0
  2539  001322  0E00               	movlw	0
  2540  001324  6E07               	movwf	?_MOCK_PrzyspieszenieY+1,c
  2541  001326  0EFE               	movlw	254
  2542  001328  6E06               	movwf	?_MOCK_PrzyspieszenieY,c
  2543  00132A  0012               	return		;funcret
  2544  00132C                     __end_of_MOCK_PrzyspieszenieY:
  2545                           	opt callstack 0
  2546                           
  2547 ;; *************** function _MOCK_PrzyspieszenieX *****************
  2548 ;; Defined at:
  2549 ;;		line 63 in file "MOC_Funct.c"
  2550 ;; Parameters:    Size  Location     Type
  2551 ;;		None
  2552 ;; Auto vars:     Size  Location     Type
  2553 ;;		None
  2554 ;; Return value:  Size  Location     Type
  2555 ;;                  2    5[COMRAM] unsigned int 
  2556 ;; Registers used:
  2557 ;;		wreg, status,2
  2558 ;; Tracked objects:
  2559 ;;		On entry : 0/0
  2560 ;;		On exit  : 0/0
  2561 ;;		Unchanged: 0/0
  2562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2563 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2566 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2567 ;;Total ram usage:        2 bytes
  2568 ;; Hardware stack levels used:    1
  2569 ;; Hardware stack levels required when called:    3
  2570 ;; This function calls:
  2571 ;;		Nothing
  2572 ;; This function is called by:
  2573 ;;		_FRAME_AccelerometerStatus
  2574 ;; This function uses a non-reentrant model
  2575 ;;
  2576                           
  2577                           	psect	text19
  2578  00132C                     __ptext19:
  2579                           	opt callstack 0
  2580  00132C                     _MOCK_PrzyspieszenieX:
  2581                           	opt callstack 24
  2582                           
  2583                           ;MOC_Funct.c: 65:     return 0xFE;
  2584                           
  2585                           ;incstack = 0
  2586  00132C  0E00               	movlw	0
  2587  00132E  6E07               	movwf	?_MOCK_PrzyspieszenieX+1,c
  2588  001330  0EFE               	movlw	254
  2589  001332  6E06               	movwf	?_MOCK_PrzyspieszenieX,c
  2590  001334  0012               	return		;funcret
  2591  001336                     __end_of_MOCK_PrzyspieszenieX:
  2592                           	opt callstack 0
  2593                           
  2594 ;; *************** function _MOCK_Klikniecie_Spadek *****************
  2595 ;; Defined at:
  2596 ;;		line 76 in file "MOC_Funct.c"
  2597 ;; Parameters:    Size  Location     Type
  2598 ;;		None
  2599 ;; Auto vars:     Size  Location     Type
  2600 ;;		None
  2601 ;; Return value:  Size  Location     Type
  2602 ;;                  2    5[COMRAM] unsigned int 
  2603 ;; Registers used:
  2604 ;;		wreg, status,2
  2605 ;; Tracked objects:
  2606 ;;		On entry : 0/0
  2607 ;;		On exit  : 0/0
  2608 ;;		Unchanged: 0/0
  2609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2610 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2613 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2614 ;;Total ram usage:        2 bytes
  2615 ;; Hardware stack levels used:    1
  2616 ;; Hardware stack levels required when called:    3
  2617 ;; This function calls:
  2618 ;;		Nothing
  2619 ;; This function is called by:
  2620 ;;		_FRAME_AccelerometerStatus
  2621 ;; This function uses a non-reentrant model
  2622 ;;
  2623                           
  2624                           	psect	text20
  2625  001336                     __ptext20:
  2626                           	opt callstack 0
  2627  001336                     _MOCK_Klikniecie_Spadek:
  2628                           	opt callstack 24
  2629                           
  2630                           ;MOC_Funct.c: 78:     return 0b00000000;
  2631                           
  2632                           ;incstack = 0
  2633  001336  0E00               	movlw	0
  2634  001338  6E07               	movwf	?_MOCK_Klikniecie_Spadek+1,c
  2635  00133A  0E00               	movlw	0
  2636  00133C  6E06               	movwf	?_MOCK_Klikniecie_Spadek,c
  2637  00133E  0012               	return		;funcret
  2638  001340                     __end_of_MOCK_Klikniecie_Spadek:
  2639                           	opt callstack 0
  2640                           
  2641 ;; *************** function _CAN_SendFrame *****************
  2642 ;; Defined at:
  2643 ;;		line 183 in file "CAN.c"
  2644 ;; Parameters:    Size  Location     Type
  2645 ;;  message         2   10[COMRAM] PTR struct .
  2646 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2647 ;; Auto vars:     Size  Location     Type
  2648 ;;		None
  2649 ;; Return value:  Size  Location     Type
  2650 ;;                  1    wreg      void 
  2651 ;; Registers used:
  2652 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2653 ;; Tracked objects:
  2654 ;;		On entry : 0/0
  2655 ;;		On exit  : 0/0
  2656 ;;		Unchanged: 0/0
  2657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2658 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2660 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2661 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2662 ;;Total ram usage:        5 bytes
  2663 ;; Hardware stack levels used:    1
  2664 ;; Hardware stack levels required when called:    4
  2665 ;; This function calls:
  2666 ;;		_CAN_MoveBuffIntoFrame
  2667 ;; This function is called by:
  2668 ;;		_FRAME_HandleCanFrame
  2669 ;; This function uses a non-reentrant model
  2670 ;;
  2671                           
  2672                           	psect	text21
  2673  00071C                     __ptext21:
  2674                           	opt callstack 0
  2675  00071C                     _CAN_SendFrame:
  2676                           	opt callstack 24
  2677                           
  2678                           ;CAN.c: 188:     {;CAN.c: 189:         ECANCON = 0x83;
  2679                           
  2680                           ;incstack = 0
  2681                           ;CAN.c: 183: void CAN_SendFrame(mID * message);CAN.c: 184: {;CAN.c: 187:     for(;;)
  2682  00071C  0E83               	movlw	131
  2683  00071E  6E77               	movwf	3959,c	;volatile
  2684                           
  2685                           ;CAN.c: 190:         if(!RXB0CONbits.FILHIT3)
  2686  000720  A660               	btfss	3936,3,c	;volatile
  2687  000722  D00A               	goto	l179
  2688                           
  2689                           ;CAN.c: 195:         ECANCON = 0x84;
  2690  000724  0E84               	movlw	132
  2691  000726  6E77               	movwf	3959,c	;volatile
  2692                           
  2693                           ;CAN.c: 196:         if(!RXB0CONbits.FILHIT3)
  2694  000728  A660               	btfss	3936,3,c	;volatile
  2695  00072A  D006               	goto	l179
  2696                           
  2697                           ;CAN.c: 201:         ECANCON = 0x85;
  2698  00072C  0E85               	movlw	133
  2699  00072E  6E77               	movwf	3959,c	;volatile
  2700                           
  2701                           ;CAN.c: 202:         if(!RXB0CONbits.FILHIT3)
  2702  000730  A660               	btfss	3936,3,c	;volatile
  2703  000732  D002               	goto	l179
  2704  000734  D7F3               	goto	_CAN_SendFrame
  2705  000736                     l180:
  2706  000736  00FF               	reset		;# 
  2707  000738                     l179:
  2708                           
  2709                           ;CAN.c: 209:     while(COMSTATbits.TXWARN)
  2710  000738  B474               	btfsc	3956,2,c	;volatile
  2711  00073A  D7FD               	goto	l180
  2712                           
  2713                           ;CAN.c: 213:     DetectorLedRadar.timerRamkiTxCANU8 = 0;
  2714  00073C  0E00               	movlw	0
  2715  00073E  6E43               	movwf	_DetectorLedRadar+2,c
  2716                           
  2717                           ;CAN.c: 214:     RXB0EIDL = message->id.v[0];
  2718  000740  EE20 F004          	lfsr	2,4
  2719  000744  500B               	movf	CAN_SendFrame@message,w,c
  2720  000746  26D9               	addwf	fsr2l,f,c
  2721  000748  500C               	movf	CAN_SendFrame@message+1,w,c
  2722  00074A  22DA               	addwfc	fsr2h,f,c
  2723  00074C  50DF               	movf	indf2,w,c
  2724  00074E  6E64               	movwf	3940,c	;volatile
  2725                           
  2726                           ;CAN.c: 215:     RXB0EIDH = message->id.v[1];
  2727  000750  EE20 F005          	lfsr	2,5
  2728  000754  500B               	movf	CAN_SendFrame@message,w,c
  2729  000756  26D9               	addwf	fsr2l,f,c
  2730  000758  500C               	movf	CAN_SendFrame@message+1,w,c
  2731  00075A  22DA               	addwfc	fsr2h,f,c
  2732  00075C  50DF               	movf	indf2,w,c
  2733  00075E  6E63               	movwf	3939,c	;volatile
  2734                           
  2735                           ;CAN.c: 216:     RXB0SIDL = ((message->id.v[2]&0xFC)*8) | (message->id.v[2] & (0x03));
  2736  000760  EE20 F006          	lfsr	2,6
  2737  000764  500B               	movf	CAN_SendFrame@message,w,c
  2738  000766  26D9               	addwf	fsr2l,f,c
  2739  000768  500C               	movf	CAN_SendFrame@message+1,w,c
  2740  00076A  22DA               	addwfc	fsr2h,f,c
  2741  00076C  50DF               	movf	indf2,w,c
  2742  00076E  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  2743  000770  0E03               	movlw	3
  2744  000772  160D               	andwf	??_CAN_SendFrame,f,c
  2745  000774  EE20 F006          	lfsr	2,6
  2746  000778  500B               	movf	CAN_SendFrame@message,w,c
  2747  00077A  26D9               	addwf	fsr2l,f,c
  2748  00077C  500C               	movf	CAN_SendFrame@message+1,w,c
  2749  00077E  22DA               	addwfc	fsr2h,f,c
  2750  000780  50DF               	movf	indf2,w,c
  2751  000782  0BFC               	andlw	252
  2752  000784  0D08               	mullw	8
  2753  000786  50F3               	movf	prodl,w,c
  2754  000788  100D               	iorwf	??_CAN_SendFrame,w,c
  2755  00078A  6E62               	movwf	3938,c	;volatile
  2756                           
  2757                           ;CAN.c: 217:     RXB0SIDLbits.EXID = 1;
  2758  00078C  8662               	bsf	3938,3,c	;volatile
  2759                           
  2760                           ;CAN.c: 218:     RXB0SIDH = (BYTE)(message->id.w[1]/32);
  2761  00078E  EE20 F006          	lfsr	2,6
  2762  000792  500B               	movf	CAN_SendFrame@message,w,c
  2763  000794  26D9               	addwf	fsr2l,f,c
  2764  000796  500C               	movf	CAN_SendFrame@message+1,w,c
  2765  000798  22DA               	addwfc	fsr2h,f,c
  2766  00079A  CFDE F00D          	movff	postinc2,??_CAN_SendFrame
  2767  00079E  CFDD F00E          	movff	postdec2,??_CAN_SendFrame+1
  2768  0007A2  0E05               	movlw	5
  2769  0007A4  6E0F               	movwf	(??_CAN_SendFrame+2)& (0+255),c
  2770  0007A6                     u1105:
  2771  0007A6  90D8               	bcf	status,0,c
  2772  0007A8  320E               	rrcf	??_CAN_SendFrame+1,f,c
  2773  0007AA  320D               	rrcf	??_CAN_SendFrame,f,c
  2774  0007AC  2E0F               	decfsz	(??_CAN_SendFrame+2)& (0+255),f,c
  2775  0007AE  D7FB               	goto	u1105
  2776  0007B0  500D               	movf	??_CAN_SendFrame,w,c
  2777  0007B2  6E61               	movwf	3937,c	;volatile
  2778                           
  2779                           ;CAN.c: 220:     RXB0DLC = 0;
  2780  0007B4  0E00               	movlw	0
  2781  0007B6  6E65               	movwf	3941,c	;volatile
  2782                           
  2783                           ;CAN.c: 222:     if(message->message_type==0x02)
  2784  0007B8  EE20 F001          	lfsr	2,1
  2785  0007BC  500B               	movf	CAN_SendFrame@message,w,c
  2786  0007BE  26D9               	addwf	fsr2l,f,c
  2787  0007C0  500C               	movf	CAN_SendFrame@message+1,w,c
  2788  0007C2  22DA               	addwfc	fsr2h,f,c
  2789  0007C4  0E02               	movlw	2
  2790  0007C6  18DE               	xorwf	postinc2,w,c
  2791  0007C8  A4D8               	btfss	status,2,c
  2792  0007CA  D002               	goto	l2507
  2793                           
  2794                           ;CAN.c: 223:     {;CAN.c: 224:         RXB0DLCbits.RXRTR = 1;
  2795  0007CC  8C65               	bsf	3941,6,c	;volatile
  2796                           
  2797                           ;CAN.c: 225:     }
  2798  0007CE  D05A               	goto	l2511
  2799  0007D0                     l2507:
  2800                           
  2801                           ;CAN.c: 227:     {;CAN.c: 228:         RXB0DLCbits.DLC0 = (message->data_length & 0x0F);
  2802  0007D0  EE20 F010          	lfsr	2,16
  2803  0007D4  500B               	movf	CAN_SendFrame@message,w,c
  2804  0007D6  26D9               	addwf	fsr2l,f,c
  2805  0007D8  500C               	movf	CAN_SendFrame@message+1,w,c
  2806  0007DA  22DA               	addwfc	fsr2h,f,c
  2807  0007DC  50DF               	movf	indf2,w,c
  2808  0007DE  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  2809  0007E0  0E0F               	movlw	15
  2810  0007E2  160D               	andwf	??_CAN_SendFrame,f,c
  2811  0007E4  5065               	movf	3941,w,c	;volatile
  2812  0007E6  180D               	xorwf	??_CAN_SendFrame,w,c
  2813  0007E8  0BFE               	andlw	-2
  2814  0007EA  180D               	xorwf	??_CAN_SendFrame,w,c
  2815  0007EC  6E65               	movwf	3941,c	;volatile
  2816                           
  2817                           ;CAN.c: 229:         RXB0DLCbits.DLC1 = ((message->data_length & 0x0F)>> 1);
  2818  0007EE  EE20 F010          	lfsr	2,16
  2819  0007F2  500B               	movf	CAN_SendFrame@message,w,c
  2820  0007F4  26D9               	addwf	fsr2l,f,c
  2821  0007F6  500C               	movf	CAN_SendFrame@message+1,w,c
  2822  0007F8  22DA               	addwfc	fsr2h,f,c
  2823  0007FA  50DF               	movf	indf2,w,c
  2824  0007FC  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  2825  0007FE  90D8               	bcf	status,0,c
  2826  000800  320D               	rrcf	??_CAN_SendFrame,f,c
  2827  000802  0E07               	movlw	7
  2828  000804  160D               	andwf	??_CAN_SendFrame,f,c
  2829  000806  460D               	rlncf	??_CAN_SendFrame,f,c
  2830  000808  5065               	movf	3941,w,c	;volatile
  2831  00080A  180D               	xorwf	??_CAN_SendFrame,w,c
  2832  00080C  0BFD               	andlw	-3
  2833  00080E  180D               	xorwf	??_CAN_SendFrame,w,c
  2834  000810  6E65               	movwf	3941,c	;volatile
  2835                           
  2836                           ;CAN.c: 230:         RXB0DLCbits.DLC2 = ((message->data_length & 0x0F)>> 2);
  2837  000812  EE20 F010          	lfsr	2,16
  2838  000816  500B               	movf	CAN_SendFrame@message,w,c
  2839  000818  26D9               	addwf	fsr2l,f,c
  2840  00081A  500C               	movf	CAN_SendFrame@message+1,w,c
  2841  00081C  22DA               	addwfc	fsr2h,f,c
  2842  00081E  50DF               	movf	indf2,w,c
  2843  000820  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  2844  000822  90D8               	bcf	status,0,c
  2845  000824  320D               	rrcf	??_CAN_SendFrame,f,c
  2846  000826  90D8               	bcf	status,0,c
  2847  000828  320D               	rrcf	??_CAN_SendFrame,f,c
  2848  00082A  0E03               	movlw	3
  2849  00082C  160D               	andwf	??_CAN_SendFrame,f,c
  2850  00082E  460D               	rlncf	??_CAN_SendFrame,f,c
  2851  000830  460D               	rlncf	??_CAN_SendFrame,f,c
  2852  000832  5065               	movf	3941,w,c	;volatile
  2853  000834  180D               	xorwf	??_CAN_SendFrame,w,c
  2854  000836  0BFB               	andlw	-5
  2855  000838  180D               	xorwf	??_CAN_SendFrame,w,c
  2856  00083A  6E65               	movwf	3941,c	;volatile
  2857                           
  2858                           ;CAN.c: 231:         RXB0DLCbits.DLC3 = ((message->data_length & 0x0F)>> 3);
  2859  00083C  EE20 F010          	lfsr	2,16
  2860  000840  500B               	movf	CAN_SendFrame@message,w,c
  2861  000842  26D9               	addwf	fsr2l,f,c
  2862  000844  500C               	movf	CAN_SendFrame@message+1,w,c
  2863  000846  22DA               	addwfc	fsr2h,f,c
  2864  000848  50DF               	movf	indf2,w,c
  2865  00084A  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  2866  00084C  90D8               	bcf	status,0,c
  2867  00084E  320D               	rrcf	??_CAN_SendFrame,f,c
  2868  000850  90D8               	bcf	status,0,c
  2869  000852  320D               	rrcf	??_CAN_SendFrame,f,c
  2870  000854  90D8               	bcf	status,0,c
  2871  000856  320D               	rrcf	??_CAN_SendFrame,f,c
  2872  000858  0E01               	movlw	1
  2873  00085A  160D               	andwf	??_CAN_SendFrame,f,c
  2874  00085C  460D               	rlncf	??_CAN_SendFrame,f,c
  2875  00085E  460D               	rlncf	??_CAN_SendFrame,f,c
  2876  000860  460D               	rlncf	??_CAN_SendFrame,f,c
  2877  000862  5065               	movf	3941,w,c	;volatile
  2878  000864  180D               	xorwf	??_CAN_SendFrame,w,c
  2879  000866  0BF7               	andlw	-9
  2880  000868  180D               	xorwf	??_CAN_SendFrame,w,c
  2881  00086A  6E65               	movwf	3941,c	;volatile
  2882                           
  2883                           ;CAN.c: 233:         CAN_MoveBuffIntoFrame(&RXB0D0, message->data);
  2884  00086C  0E66               	movlw	102
  2885  00086E  6E06               	movwf	CAN_MoveBuffIntoFrame@Ram,c
  2886  000870  0E0F               	movlw	15
  2887  000872  6E07               	movwf	CAN_MoveBuffIntoFrame@Ram+1,c
  2888  000874  0E08               	movlw	8
  2889  000876  240B               	addwf	CAN_SendFrame@message,w,c
  2890  000878  6E08               	movwf	CAN_MoveBuffIntoFrame@Buf,c
  2891  00087A  0E00               	movlw	0
  2892  00087C  200C               	addwfc	CAN_SendFrame@message+1,w,c
  2893  00087E  6E09               	movwf	CAN_MoveBuffIntoFrame@Buf+1,c
  2894  000880  EC00  F009         	call	_CAN_MoveBuffIntoFrame	;wreg free
  2895  000884                     l2511:
  2896                           
  2897                           ;CAN.c: 236:     RXB0CONbits.FILHIT3 = 1;
  2898  000884  8660               	bsf	3936,3,c	;volatile
  2899                           
  2900                           ;CAN.c: 238:     DetectorLedRadar.Flags.ramkaTx = 1;
  2901  000886  8841               	bsf	_DetectorLedRadar,4,c
  2902  000888  0012               	return		;funcret
  2903  00088A                     __end_of_CAN_SendFrame:
  2904                           	opt callstack 0
  2905                           
  2906 ;; *************** function _CAN_GenID *****************
  2907 ;; Defined at:
  2908 ;;		line 382 in file "CAN.c"
  2909 ;; Parameters:    Size  Location     Type
  2910 ;;  message         2    5[COMRAM] PTR struct .
  2911 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2912 ;;  frameID         1    7[COMRAM] unsigned char 
  2913 ;; Auto vars:     Size  Location     Type
  2914 ;;		None
  2915 ;; Return value:  Size  Location     Type
  2916 ;;                  1    wreg      void 
  2917 ;; Registers used:
  2918 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2919 ;; Tracked objects:
  2920 ;;		On entry : 0/0
  2921 ;;		On exit  : 0/0
  2922 ;;		Unchanged: 0/0
  2923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2924 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2926 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2927 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2928 ;;Total ram usage:        7 bytes
  2929 ;; Hardware stack levels used:    1
  2930 ;; Hardware stack levels required when called:    3
  2931 ;; This function calls:
  2932 ;;		Nothing
  2933 ;; This function is called by:
  2934 ;;		_FRAME_HandleCanFrame
  2935 ;; This function uses a non-reentrant model
  2936 ;;
  2937                           
  2938                           	psect	text22
  2939  000B6E                     __ptext22:
  2940                           	opt callstack 0
  2941  000B6E                     _CAN_GenID:
  2942                           	opt callstack 25
  2943                           
  2944                           ;CAN.c: 382: void CAN_GenID(mID * message, BYTE frameID);CAN.c: 383: {;CAN.c: 385:     m
      +                          essage->frame_type = 0x03;
  2945                           
  2946                           ;incstack = 0
  2947  000B6E  EE20 F002          	lfsr	2,2
  2948  000B72  5006               	movf	CAN_GenID@message,w,c
  2949  000B74  26D9               	addwf	fsr2l,f,c
  2950  000B76  5007               	movf	CAN_GenID@message+1,w,c
  2951  000B78  22DA               	addwfc	fsr2h,f,c
  2952  000B7A  0E03               	movlw	3
  2953  000B7C  6EDF               	movwf	indf2,c
  2954                           
  2955                           ;CAN.c: 386:     message->message_type = 0x01;
  2956  000B7E  EE20 F001          	lfsr	2,1
  2957  000B82  5006               	movf	CAN_GenID@message,w,c
  2958  000B84  26D9               	addwf	fsr2l,f,c
  2959  000B86  5007               	movf	CAN_GenID@message+1,w,c
  2960  000B88  22DA               	addwfc	fsr2h,f,c
  2961  000B8A  0E01               	movlw	1
  2962  000B8C  6EDF               	movwf	indf2,c
  2963                           
  2964                           ;CAN.c: 387:     message->id.w[1] = (WORD)frameID * (WORD)4;
  2965  000B8E  5008               	movf	CAN_GenID@frameID,w,c
  2966  000B90  6E09               	movwf	??_CAN_GenID& (0+255),c
  2967  000B92  6A0A               	clrf	(??_CAN_GenID+1)& (0+255),c
  2968  000B94  90D8               	bcf	status,0,c
  2969  000B96  3609               	rlcf	??_CAN_GenID,f,c
  2970  000B98  360A               	rlcf	??_CAN_GenID+1,f,c
  2971  000B9A  90D8               	bcf	status,0,c
  2972  000B9C  3609               	rlcf	??_CAN_GenID,f,c
  2973  000B9E  360A               	rlcf	??_CAN_GenID+1,f,c
  2974  000BA0  EE20 F006          	lfsr	2,6
  2975  000BA4  5006               	movf	CAN_GenID@message,w,c
  2976  000BA6  26D9               	addwf	fsr2l,f,c
  2977  000BA8  5007               	movf	CAN_GenID@message+1,w,c
  2978  000BAA  22DA               	addwfc	fsr2h,f,c
  2979  000BAC  C009  FFDE         	movff	??_CAN_GenID,postinc2
  2980  000BB0  C00A  FFDD         	movff	??_CAN_GenID+1,postdec2
  2981                           
  2982                           ;CAN.c: 388:     message->id.w[0] = DaneCan.adresCAN + 0x012c;
  2983  000BB4  0E2C               	movlw	44
  2984  000BB6  6E09               	movwf	??_CAN_GenID& (0+255),c
  2985  000BB8  0E01               	movlw	1
  2986  000BBA  6E0A               	movwf	(??_CAN_GenID+1)& (0+255),c
  2987  000BBC  EE20  F03F         	lfsr	2,_DaneCan+2
  2988  000BC0  CFDE F00B          	movff	postinc2,??_CAN_GenID+2
  2989  000BC4  CFDD F00C          	movff	postdec2,??_CAN_GenID+3
  2990  000BC8  5009               	movf	??_CAN_GenID,w,c
  2991  000BCA  260B               	addwf	??_CAN_GenID+2,f,c
  2992  000BCC  500A               	movf	??_CAN_GenID+1,w,c
  2993  000BCE  220C               	addwfc	??_CAN_GenID+3,f,c
  2994  000BD0  EE20 F004          	lfsr	2,4
  2995  000BD4  5006               	movf	CAN_GenID@message,w,c
  2996  000BD6  26D9               	addwf	fsr2l,f,c
  2997  000BD8  5007               	movf	CAN_GenID@message+1,w,c
  2998  000BDA  22DA               	addwfc	fsr2h,f,c
  2999  000BDC  C00B  FFDE         	movff	??_CAN_GenID+2,postinc2
  3000  000BE0  C00C  FFDD         	movff	??_CAN_GenID+3,postdec2
  3001                           
  3002                           ;CAN.c: 391:     message ->id.bits.b16 = 0;
  3003  000BE4  EE20 F006          	lfsr	2,6
  3004  000BE8  5006               	movf	CAN_GenID@message,w,c
  3005  000BEA  26D9               	addwf	fsr2l,f,c
  3006  000BEC  5007               	movf	CAN_GenID@message+1,w,c
  3007  000BEE  22DA               	addwfc	fsr2h,f,c
  3008  000BF0  90DF               	bcf	indf2,0,c
  3009                           
  3010                           ;CAN.c: 392:     message ->id.bits.b17 = 0;
  3011  000BF2  EE20 F006          	lfsr	2,6
  3012  000BF6  5006               	movf	CAN_GenID@message,w,c
  3013  000BF8  26D9               	addwf	fsr2l,f,c
  3014  000BFA  5007               	movf	CAN_GenID@message+1,w,c
  3015  000BFC  22DA               	addwfc	fsr2h,f,c
  3016  000BFE  92DF               	bcf	indf2,1,c
  3017  000C00  0012               	return		;funcret
  3018  000C02                     __end_of_CAN_GenID:
  3019                           	opt callstack 0
  3020                           
  3021 ;; *************** function _CAN_TakeFrame *****************
  3022 ;; Defined at:
  3023 ;;		line 247 in file "CAN.c"
  3024 ;; Parameters:    Size  Location     Type
  3025 ;;  message         2   13[COMRAM] PTR struct .
  3026 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3027 ;; Auto vars:     Size  Location     Type
  3028 ;;  k               1   18[COMRAM] unsigned char 
  3029 ;;  tempCON         1   17[COMRAM] unsigned char 
  3030 ;; Return value:  Size  Location     Type
  3031 ;;                  1    wreg      enum E10433
  3032 ;; Registers used:
  3033 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3034 ;; Tracked objects:
  3035 ;;		On entry : 0/0
  3036 ;;		On exit  : 0/0
  3037 ;;		Unchanged: 0/0
  3038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3039 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3040 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3041 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3042 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3043 ;;Total ram usage:        6 bytes
  3044 ;; Hardware stack levels used:    1
  3045 ;; Hardware stack levels required when called:    4
  3046 ;; This function calls:
  3047 ;;		_CAN_MoveBuffIntoFrame
  3048 ;;		___awdiv
  3049 ;; This function is called by:
  3050 ;;		_TRM_DataTransmition
  3051 ;; This function uses a non-reentrant model
  3052 ;;
  3053                           
  3054                           	psect	text23
  3055  000060                     __ptext23:
  3056                           	opt callstack 0
  3057  000060                     _CAN_TakeFrame:
  3058                           	opt callstack 25
  3059                           
  3060                           ;CAN.c: 247: BOOL CAN_TakeFrame(mID * message);CAN.c: 248: {;CAN.c: 249:     BYTE k, tem
      +                          pCON;;CAN.c: 251:     k = CANCON&0x0F;
  3061                           
  3062                           ;incstack = 0
  3063  000060  506F               	movf	3951,w,c	;volatile
  3064  000062  0B0F               	andlw	15
  3065  000064  6E13               	movwf	CAN_TakeFrame@k,c
  3066                           
  3067                           ;CAN.c: 253:     ECANCON = 0x90 | k;
  3068  000066  5013               	movf	CAN_TakeFrame@k,w,c
  3069  000068  0990               	iorlw	144
  3070  00006A  6E77               	movwf	3959,c	;volatile
  3071                           
  3072                           ;CAN.c: 256:     switch(k)
  3073  00006C  D018               	goto	l2713
  3074  00006E                     l188:
  3075                           
  3076                           ;CAN.c: 259:             tempCON = RXB0CON;
  3077  00006E  CF60 F012          	movff	3936,CAN_TakeFrame@tempCON	;volatile
  3078                           
  3079                           ;CAN.c: 260:             break;
  3080  000072  D035               	goto	l189
  3081  000074                     l190:
  3082                           
  3083                           ;CAN.c: 262:             tempCON = RXB1CON;
  3084  000074  CF50 F012          	movff	3920,CAN_TakeFrame@tempCON	;volatile
  3085                           
  3086                           ;CAN.c: 263:             break;
  3087  000078  D032               	goto	l189
  3088  00007A                     l191:
  3089                           
  3090                           ;CAN.c: 265:             tempCON = B0CON;
  3091  00007A  CE20 F012          	movff	3616,CAN_TakeFrame@tempCON	;volatile
  3092                           
  3093                           ;CAN.c: 266:             break;
  3094  00007E  D02F               	goto	l189
  3095  000080                     l192:
  3096                           
  3097                           ;CAN.c: 268:             tempCON = B1CON;
  3098  000080  CE30 F012          	movff	3632,CAN_TakeFrame@tempCON	;volatile
  3099                           
  3100                           ;CAN.c: 269:             break;
  3101  000084  D02C               	goto	l189
  3102  000086                     l193:
  3103                           
  3104                           ;CAN.c: 271:             tempCON = B2CON;
  3105  000086  CE40 F012          	movff	3648,CAN_TakeFrame@tempCON	;volatile
  3106                           
  3107                           ;CAN.c: 272:             break;
  3108  00008A  D029               	goto	l189
  3109  00008C                     l194:
  3110                           
  3111                           ;CAN.c: 274:             tempCON = B3CON;
  3112  00008C  CE50 F012          	movff	3664,CAN_TakeFrame@tempCON	;volatile
  3113                           
  3114                           ;CAN.c: 275:             break;
  3115  000090  D026               	goto	l189
  3116  000092                     l195:
  3117                           
  3118                           ;CAN.c: 277:             tempCON = B4CON;
  3119  000092  CE60 F012          	movff	3680,CAN_TakeFrame@tempCON	;volatile
  3120                           
  3121                           ;CAN.c: 278:             break;
  3122  000096  D023               	goto	l189
  3123  000098                     l196:
  3124                           
  3125                           ;CAN.c: 280:             tempCON = B5CON;
  3126  000098  CE70 F012          	movff	3696,CAN_TakeFrame@tempCON	;volatile
  3127                           
  3128                           ;CAN.c: 281:             break;
  3129  00009C  D020               	goto	l189
  3130  00009E                     l2713:
  3131  00009E  5013               	movf	CAN_TakeFrame@k,w,c
  3132  0000A0  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  3133  0000A2  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  3134                           
  3135                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3136                           ; Switch size 1, requested type "simple"
  3137                           ; Number of cases is 1, Range of values is 0 to 0
  3138                           ; switch strategies available:
  3139                           ; Name         Instructions Cycles
  3140                           ; simple_byte            4     3 (average)
  3141                           ;	Chosen strategy is simple_byte
  3142  0000A4  5011               	movf	??_CAN_TakeFrame+1,w,c
  3143  0000A6  0A00               	xorlw	0	; case 0
  3144  0000A8  A4D8               	btfss	status,2,c
  3145  0000AA  D019               	goto	l189
  3146                           
  3147                           ; Switch size 1, requested type "simple"
  3148                           ; Number of cases is 8, Range of values is 0 to 7
  3149                           ; switch strategies available:
  3150                           ; Name         Instructions Cycles
  3151                           ; simple_byte           25    13 (average)
  3152                           ;	Chosen strategy is simple_byte
  3153  0000AC  5010               	movf	??_CAN_TakeFrame,w,c
  3154  0000AE  0A00               	xorlw	0	; case 0
  3155  0000B0  B4D8               	btfsc	status,2,c
  3156  0000B2  D7DD               	goto	l188
  3157  0000B4  0A01               	xorlw	1	; case 1
  3158  0000B6  B4D8               	btfsc	status,2,c
  3159  0000B8  D7DD               	goto	l190
  3160  0000BA  0A03               	xorlw	3	; case 2
  3161  0000BC  B4D8               	btfsc	status,2,c
  3162  0000BE  D7DD               	goto	l191
  3163  0000C0  0A01               	xorlw	1	; case 3
  3164  0000C2  B4D8               	btfsc	status,2,c
  3165  0000C4  D7DD               	goto	l192
  3166  0000C6  0A07               	xorlw	7	; case 4
  3167  0000C8  B4D8               	btfsc	status,2,c
  3168  0000CA  D7DD               	goto	l193
  3169  0000CC  0A01               	xorlw	1	; case 5
  3170  0000CE  B4D8               	btfsc	status,2,c
  3171  0000D0  D7DD               	goto	l194
  3172  0000D2  0A03               	xorlw	3	; case 6
  3173  0000D4  B4D8               	btfsc	status,2,c
  3174  0000D6  D7DD               	goto	l195
  3175  0000D8  0A01               	xorlw	1	; case 7
  3176  0000DA  B4D8               	btfsc	status,2,c
  3177  0000DC  D7DD               	goto	l196
  3178  0000DE                     l189:
  3179                           
  3180                           ;CAN.c: 285:     if((tempCON & 0x80) > 0)
  3181  0000DE  AE12               	btfss	CAN_TakeFrame@tempCON,7,c
  3182  0000E0  D0A5               	goto	l2749
  3183                           
  3184                           ;CAN.c: 286:     {;CAN.c: 287:         message->buffer = RXB0CON & 0x1F;
  3185  0000E2  EE20 F003          	lfsr	2,3
  3186  0000E6  500E               	movf	CAN_TakeFrame@message,w,c
  3187  0000E8  26D9               	addwf	fsr2l,f,c
  3188  0000EA  500F               	movf	CAN_TakeFrame@message+1,w,c
  3189  0000EC  22DA               	addwfc	fsr2h,f,c
  3190  0000EE  5060               	movf	3936,w,c	;volatile
  3191  0000F0  0B1F               	andlw	31
  3192  0000F2  6EDF               	movwf	indf2,c
  3193                           
  3194                           ;CAN.c: 288:         message->id.v[0] = RXB0EIDL;
  3195  0000F4  EE20 F004          	lfsr	2,4
  3196  0000F8  500E               	movf	CAN_TakeFrame@message,w,c
  3197  0000FA  26D9               	addwf	fsr2l,f,c
  3198  0000FC  500F               	movf	CAN_TakeFrame@message+1,w,c
  3199  0000FE  22DA               	addwfc	fsr2h,f,c
  3200  000100  CF64 FFDF          	movff	3940,indf2	;volatile
  3201                           
  3202                           ;CAN.c: 289:         message->id.v[1] = RXB0EIDH;
  3203  000104  EE20 F005          	lfsr	2,5
  3204  000108  500E               	movf	CAN_TakeFrame@message,w,c
  3205  00010A  26D9               	addwf	fsr2l,f,c
  3206  00010C  500F               	movf	CAN_TakeFrame@message+1,w,c
  3207  00010E  22DA               	addwfc	fsr2h,f,c
  3208  000110  CF63 FFDF          	movff	3939,indf2	;volatile
  3209                           
  3210                           ;CAN.c: 290:         message->id.v[2] = (RXB0SIDL/8) | (RXB0SIDL&0x03);
  3211  000114  EE20 F006          	lfsr	2,6
  3212  000118  500E               	movf	CAN_TakeFrame@message,w,c
  3213  00011A  26D9               	addwf	fsr2l,f,c
  3214  00011C  500F               	movf	CAN_TakeFrame@message+1,w,c
  3215  00011E  22DA               	addwfc	fsr2h,f,c
  3216  000120  CF62 F010          	movff	3938,??_CAN_TakeFrame	;volatile
  3217  000124  0E03               	movlw	3
  3218  000126  1610               	andwf	??_CAN_TakeFrame,f,c
  3219  000128  CF62 F006          	movff	3938,___awdiv@dividend	;volatile
  3220  00012C  6A07               	clrf	___awdiv@dividend+1,c
  3221  00012E  0E00               	movlw	0
  3222  000130  6E09               	movwf	___awdiv@divisor+1,c
  3223  000132  0E08               	movlw	8
  3224  000134  6E08               	movwf	___awdiv@divisor,c
  3225  000136  EC01  F006         	call	___awdiv	;wreg free
  3226  00013A  5006               	movf	?___awdiv,w,c
  3227  00013C  1010               	iorwf	??_CAN_TakeFrame,w,c
  3228  00013E  6EDF               	movwf	indf2,c
  3229                           
  3230                           ;CAN.c: 291:         message->id.w[1] |= (WORD)RXB0SIDH*32;
  3231  000140  5061               	movf	3937,w,c	;volatile
  3232  000142  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  3233  000144  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  3234  000146  0E05               	movlw	5
  3235  000148                     u1385:
  3236  000148  90D8               	bcf	status,0,c
  3237  00014A  3610               	rlcf	??_CAN_TakeFrame,f,c
  3238  00014C  3611               	rlcf	??_CAN_TakeFrame+1,f,c
  3239  00014E  2EE8               	decfsz	wreg,f,c
  3240  000150  D7FB               	goto	u1385
  3241  000152  EE20 F006          	lfsr	2,6
  3242  000156  500E               	movf	CAN_TakeFrame@message,w,c
  3243  000158  26D9               	addwf	fsr2l,f,c
  3244  00015A  500F               	movf	CAN_TakeFrame@message+1,w,c
  3245  00015C  22DA               	addwfc	fsr2h,f,c
  3246  00015E  5010               	movf	??_CAN_TakeFrame,w,c
  3247  000160  12DE               	iorwf	postinc2,f,c
  3248  000162  5011               	movf	??_CAN_TakeFrame+1,w,c
  3249  000164  12DD               	iorwf	postdec2,f,c
  3250                           
  3251                           ;CAN.c: 292:         message->frame_type=0x03;
  3252  000166  EE20 F002          	lfsr	2,2
  3253  00016A  500E               	movf	CAN_TakeFrame@message,w,c
  3254  00016C  26D9               	addwf	fsr2l,f,c
  3255  00016E  500F               	movf	CAN_TakeFrame@message+1,w,c
  3256  000170  22DA               	addwfc	fsr2h,f,c
  3257  000172  0E03               	movlw	3
  3258  000174  6EDF               	movwf	indf2,c
  3259                           
  3260                           ;CAN.c: 296:         if(RXB0DLCbits.RXRTR == 0)
  3261  000176  BC65               	btfsc	3941,6,c	;volatile
  3262  000178  D068               	goto	l2755
  3263                           
  3264                           ;CAN.c: 297:         {;CAN.c: 298:             message->message_type = 0x01;
  3265  00017A  EE20 F001          	lfsr	2,1
  3266  00017E  500E               	movf	CAN_TakeFrame@message,w,c
  3267  000180  26D9               	addwf	fsr2l,f,c
  3268  000182  500F               	movf	CAN_TakeFrame@message+1,w,c
  3269  000184  22DA               	addwfc	fsr2h,f,c
  3270  000186  0E01               	movlw	1
  3271  000188  6EDF               	movwf	indf2,c
  3272                           
  3273                           ;CAN.c: 299:             message->data_length= RXB0DLC & 0x0F;
  3274  00018A  EE20 F010          	lfsr	2,16
  3275  00018E  500E               	movf	CAN_TakeFrame@message,w,c
  3276  000190  26D9               	addwf	fsr2l,f,c
  3277  000192  500F               	movf	CAN_TakeFrame@message+1,w,c
  3278  000194  22DA               	addwfc	fsr2h,f,c
  3279  000196  5065               	movf	3941,w,c	;volatile
  3280  000198  0B0F               	andlw	15
  3281  00019A  6EDF               	movwf	indf2,c
  3282                           
  3283                           ;CAN.c: 300:             if(message->data_length > 8)
  3284  00019C  EE20 F010          	lfsr	2,16
  3285  0001A0  500E               	movf	CAN_TakeFrame@message,w,c
  3286  0001A2  26D9               	addwf	fsr2l,f,c
  3287  0001A4  500F               	movf	CAN_TakeFrame@message+1,w,c
  3288  0001A6  22DA               	addwfc	fsr2h,f,c
  3289  0001A8  0E08               	movlw	8
  3290  0001AA  64DF               	cpfsgt	indf2,c
  3291  0001AC  D041               	goto	l2753
  3292  0001AE  D01E               	goto	l2747
  3293  0001B0                     l2729:
  3294                           
  3295                           ;CAN.c: 306:                         RXB0CON = 0;
  3296  0001B0  0E00               	movlw	0
  3297  0001B2  6E60               	movwf	3936,c	;volatile
  3298                           
  3299                           ;CAN.c: 307:                         break;
  3300  0001B4  D03B               	goto	l2749
  3301  0001B6                     l2731:
  3302                           
  3303                           ;CAN.c: 309:                         RXB1CON = 0;
  3304  0001B6  0E00               	movlw	0
  3305  0001B8  010F               	movlb	15	; () banked
  3306  0001BA  D00E               	goto	L1
  3307  0001BC                     l2733:
  3308                           
  3309                           ;CAN.c: 312:                         B0CON = 0;
  3310  0001BC  0E00               	movlw	0
  3311  0001BE  010E               	movlb	14	; () banked
  3312  0001C0  6F20               	movwf	32,b	;volatile
  3313                           
  3314                           ;CAN.c: 313:                         break;
  3315  0001C2  D034               	goto	l2749
  3316  0001C4                     l2735:
  3317                           
  3318                           ;CAN.c: 315:                         B1CON = 0;
  3319  0001C4  0E00               	movlw	0
  3320  0001C6  010E               	movlb	14	; () banked
  3321  0001C8  6F30               	movwf	48,b	;volatile
  3322                           
  3323                           ;CAN.c: 316:                         break;
  3324  0001CA  D030               	goto	l2749
  3325  0001CC                     l2737:
  3326                           
  3327                           ;CAN.c: 318:                         B2CON = 0;
  3328  0001CC  0E00               	movlw	0
  3329  0001CE  010E               	movlb	14	; () banked
  3330  0001D0  6F40               	movwf	64,b	;volatile
  3331                           
  3332                           ;CAN.c: 319:                         break;
  3333  0001D2  D02C               	goto	l2749
  3334  0001D4                     l2739:
  3335                           
  3336                           ;CAN.c: 321:                         B3CON = 0;
  3337  0001D4  0E00               	movlw	0
  3338  0001D6  010E               	movlb	14	; () banked
  3339  0001D8                     L1:
  3340  0001D8  6F50               	movwf	80,b	;volatile
  3341                           
  3342                           ;CAN.c: 322:                         break;
  3343  0001DA  D028               	goto	l2749
  3344  0001DC                     l2741:
  3345                           
  3346                           ;CAN.c: 324:                         B4CON = 0;
  3347  0001DC  0E00               	movlw	0
  3348  0001DE  010E               	movlb	14	; () banked
  3349  0001E0  6F60               	movwf	96,b	;volatile
  3350                           
  3351                           ;CAN.c: 325:                         break;
  3352  0001E2  D024               	goto	l2749
  3353  0001E4                     l2743:
  3354                           
  3355                           ;CAN.c: 327:                         B5CON = 0;
  3356  0001E4  0E00               	movlw	0
  3357  0001E6  010E               	movlb	14	; () banked
  3358  0001E8  6F70               	movwf	112,b	;volatile
  3359                           
  3360                           ;CAN.c: 328:                         break;
  3361  0001EA  D020               	goto	l2749
  3362  0001EC                     l2747:
  3363  0001EC  5013               	movf	CAN_TakeFrame@k,w,c
  3364  0001EE  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  3365  0001F0  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  3366                           
  3367                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3368                           ; Switch size 1, requested type "simple"
  3369                           ; Number of cases is 1, Range of values is 0 to 0
  3370                           ; switch strategies available:
  3371                           ; Name         Instructions Cycles
  3372                           ; simple_byte            4     3 (average)
  3373                           ;	Chosen strategy is simple_byte
  3374  0001F2  5011               	movf	??_CAN_TakeFrame+1,w,c
  3375  0001F4  0A00               	xorlw	0	; case 0
  3376  0001F6  A4D8               	btfss	status,2,c
  3377  0001F8  D019               	goto	l2749
  3378                           
  3379                           ; Switch size 1, requested type "simple"
  3380                           ; Number of cases is 8, Range of values is 0 to 7
  3381                           ; switch strategies available:
  3382                           ; Name         Instructions Cycles
  3383                           ; simple_byte           25    13 (average)
  3384                           ;	Chosen strategy is simple_byte
  3385  0001FA  5010               	movf	??_CAN_TakeFrame,w,c
  3386  0001FC  0A00               	xorlw	0	; case 0
  3387  0001FE  B4D8               	btfsc	status,2,c
  3388  000200  D7D7               	goto	l2729
  3389  000202  0A01               	xorlw	1	; case 1
  3390  000204  B4D8               	btfsc	status,2,c
  3391  000206  D7D7               	goto	l2731
  3392  000208  0A03               	xorlw	3	; case 2
  3393  00020A  B4D8               	btfsc	status,2,c
  3394  00020C  D7D7               	goto	l2733
  3395  00020E  0A01               	xorlw	1	; case 3
  3396  000210  B4D8               	btfsc	status,2,c
  3397  000212  D7D8               	goto	l2735
  3398  000214  0A07               	xorlw	7	; case 4
  3399  000216  B4D8               	btfsc	status,2,c
  3400  000218  D7D9               	goto	l2737
  3401  00021A  0A01               	xorlw	1	; case 5
  3402  00021C  B4D8               	btfsc	status,2,c
  3403  00021E  D7DA               	goto	l2739
  3404  000220  0A03               	xorlw	3	; case 6
  3405  000222  B4D8               	btfsc	status,2,c
  3406  000224  D7DB               	goto	l2741
  3407  000226  0A01               	xorlw	1	; case 7
  3408  000228  B4D8               	btfsc	status,2,c
  3409  00022A  D7DC               	goto	l2743
  3410  00022C                     l2749:
  3411                           
  3412                           ;CAN.c: 330:                 return FALSE;
  3413  00022C  0E00               	movlw	0
  3414  00022E  0012               	return	
  3415  000230                     l2753:
  3416                           
  3417                           ;CAN.c: 332:             CAN_MoveBuffIntoFrame(message->data, &RXB0D0);
  3418  000230  0E08               	movlw	8
  3419  000232  240E               	addwf	CAN_TakeFrame@message,w,c
  3420  000234  6E06               	movwf	CAN_MoveBuffIntoFrame@Ram,c
  3421  000236  0E00               	movlw	0
  3422  000238  200F               	addwfc	CAN_TakeFrame@message+1,w,c
  3423  00023A  6E07               	movwf	CAN_MoveBuffIntoFrame@Ram+1,c
  3424  00023C  0E66               	movlw	102
  3425  00023E  6E08               	movwf	CAN_MoveBuffIntoFrame@Buf,c
  3426  000240  0E0F               	movlw	15
  3427  000242  6E09               	movwf	CAN_MoveBuffIntoFrame@Buf+1,c
  3428  000244  EC00  F009         	call	_CAN_MoveBuffIntoFrame	;wreg free
  3429                           
  3430                           ;CAN.c: 333:         }
  3431  000248  D027               	goto	l2775
  3432  00024A                     l2755:
  3433                           
  3434                           ;CAN.c: 336:         {;CAN.c: 337:             message->message_type=0x02;
  3435  00024A  EE20 F001          	lfsr	2,1
  3436  00024E  500E               	movf	CAN_TakeFrame@message,w,c
  3437  000250  26D9               	addwf	fsr2l,f,c
  3438  000252  500F               	movf	CAN_TakeFrame@message+1,w,c
  3439  000254  22DA               	addwfc	fsr2h,f,c
  3440  000256  0E02               	movlw	2
  3441  000258  6EDF               	movwf	indf2,c
  3442  00025A  D01E               	goto	l2775
  3443  00025C                     l2757:
  3444                           
  3445                           ;CAN.c: 343:                 RXB0CON = 0;
  3446  00025C  0E00               	movlw	0
  3447  00025E  6E60               	movwf	3936,c	;volatile
  3448                           
  3449                           ;CAN.c: 344:                 break;
  3450  000260  D03B               	goto	l2777
  3451  000262                     l2759:
  3452                           
  3453                           ;CAN.c: 346:                 RXB1CON = 0;
  3454  000262  0E00               	movlw	0
  3455  000264  010F               	movlb	15	; () banked
  3456  000266  D00E               	goto	L2
  3457  000268                     l2761:
  3458                           
  3459                           ;CAN.c: 349:                 B0CON = 0;
  3460  000268  0E00               	movlw	0
  3461  00026A  010E               	movlb	14	; () banked
  3462  00026C  6F20               	movwf	32,b	;volatile
  3463                           
  3464                           ;CAN.c: 350:                 break;
  3465  00026E  D034               	goto	l2777
  3466  000270                     l2763:
  3467                           
  3468                           ;CAN.c: 352:                 B1CON = 0;
  3469  000270  0E00               	movlw	0
  3470  000272  010E               	movlb	14	; () banked
  3471  000274  6F30               	movwf	48,b	;volatile
  3472                           
  3473                           ;CAN.c: 353:                 break;
  3474  000276  D030               	goto	l2777
  3475  000278                     l2765:
  3476                           
  3477                           ;CAN.c: 355:                 B2CON = 0;
  3478  000278  0E00               	movlw	0
  3479  00027A  010E               	movlb	14	; () banked
  3480  00027C  6F40               	movwf	64,b	;volatile
  3481                           
  3482                           ;CAN.c: 356:                 break;
  3483  00027E  D02C               	goto	l2777
  3484  000280                     l2767:
  3485                           
  3486                           ;CAN.c: 358:                 B3CON = 0;
  3487  000280  0E00               	movlw	0
  3488  000282  010E               	movlb	14	; () banked
  3489  000284                     L2:
  3490  000284  6F50               	movwf	80,b	;volatile
  3491                           
  3492                           ;CAN.c: 359:                 break;
  3493  000286  D028               	goto	l2777
  3494  000288                     l2769:
  3495                           
  3496                           ;CAN.c: 361:                 B4CON = 0;
  3497  000288  0E00               	movlw	0
  3498  00028A  010E               	movlb	14	; () banked
  3499  00028C  6F60               	movwf	96,b	;volatile
  3500                           
  3501                           ;CAN.c: 362:                 break;
  3502  00028E  D024               	goto	l2777
  3503  000290                     l2771:
  3504                           
  3505                           ;CAN.c: 364:                 B5CON = 0;
  3506  000290  0E00               	movlw	0
  3507  000292  010E               	movlb	14	; () banked
  3508  000294  6F70               	movwf	112,b	;volatile
  3509                           
  3510                           ;CAN.c: 365:                 break;
  3511  000296  D020               	goto	l2777
  3512  000298                     l2775:
  3513  000298  5013               	movf	CAN_TakeFrame@k,w,c
  3514  00029A  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  3515  00029C  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  3516                           
  3517                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3518                           ; Switch size 1, requested type "simple"
  3519                           ; Number of cases is 1, Range of values is 0 to 0
  3520                           ; switch strategies available:
  3521                           ; Name         Instructions Cycles
  3522                           ; simple_byte            4     3 (average)
  3523                           ;	Chosen strategy is simple_byte
  3524  00029E  5011               	movf	??_CAN_TakeFrame+1,w,c
  3525  0002A0  0A00               	xorlw	0	; case 0
  3526  0002A2  A4D8               	btfss	status,2,c
  3527  0002A4  D019               	goto	l2777
  3528                           
  3529                           ; Switch size 1, requested type "simple"
  3530                           ; Number of cases is 8, Range of values is 0 to 7
  3531                           ; switch strategies available:
  3532                           ; Name         Instructions Cycles
  3533                           ; simple_byte           25    13 (average)
  3534                           ;	Chosen strategy is simple_byte
  3535  0002A6  5010               	movf	??_CAN_TakeFrame,w,c
  3536  0002A8  0A00               	xorlw	0	; case 0
  3537  0002AA  B4D8               	btfsc	status,2,c
  3538  0002AC  D7D7               	goto	l2757
  3539  0002AE  0A01               	xorlw	1	; case 1
  3540  0002B0  B4D8               	btfsc	status,2,c
  3541  0002B2  D7D7               	goto	l2759
  3542  0002B4  0A03               	xorlw	3	; case 2
  3543  0002B6  B4D8               	btfsc	status,2,c
  3544  0002B8  D7D7               	goto	l2761
  3545  0002BA  0A01               	xorlw	1	; case 3
  3546  0002BC  B4D8               	btfsc	status,2,c
  3547  0002BE  D7D8               	goto	l2763
  3548  0002C0  0A07               	xorlw	7	; case 4
  3549  0002C2  B4D8               	btfsc	status,2,c
  3550  0002C4  D7D9               	goto	l2765
  3551  0002C6  0A01               	xorlw	1	; case 5
  3552  0002C8  B4D8               	btfsc	status,2,c
  3553  0002CA  D7DA               	goto	l2767
  3554  0002CC  0A03               	xorlw	3	; case 6
  3555  0002CE  B4D8               	btfsc	status,2,c
  3556  0002D0  D7DB               	goto	l2769
  3557  0002D2  0A01               	xorlw	1	; case 7
  3558  0002D4  B4D8               	btfsc	status,2,c
  3559  0002D6  D7DC               	goto	l2771
  3560  0002D8                     l2777:
  3561                           
  3562                           ;CAN.c: 367:         return TRUE;
  3563  0002D8  0E01               	movlw	1
  3564  0002DA  0012               	return		;funcret
  3565  0002DC                     __end_of_CAN_TakeFrame:
  3566                           	opt callstack 0
  3567                           
  3568 ;; *************** function ___awdiv *****************
  3569 ;; Defined at:
  3570 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  3571 ;; Parameters:    Size  Location     Type
  3572 ;;  dividend        2    5[COMRAM] int 
  3573 ;;  divisor         2    7[COMRAM] int 
  3574 ;; Auto vars:     Size  Location     Type
  3575 ;;  quotient        2   11[COMRAM] int 
  3576 ;;  sign            1   10[COMRAM] unsigned char 
  3577 ;;  counter         1    9[COMRAM] unsigned char 
  3578 ;; Return value:  Size  Location     Type
  3579 ;;                  2    5[COMRAM] int 
  3580 ;; Registers used:
  3581 ;;		wreg, status,2, status,0
  3582 ;; Tracked objects:
  3583 ;;		On entry : 0/0
  3584 ;;		On exit  : 0/0
  3585 ;;		Unchanged: 0/0
  3586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3587 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3588 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3590 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3591 ;;Total ram usage:        8 bytes
  3592 ;; Hardware stack levels used:    1
  3593 ;; Hardware stack levels required when called:    3
  3594 ;; This function calls:
  3595 ;;		Nothing
  3596 ;; This function is called by:
  3597 ;;		_CAN_TakeFrame
  3598 ;;		_FRAME_HandleCanFrame
  3599 ;; This function uses a non-reentrant model
  3600 ;;
  3601                           
  3602                           	psect	text24
  3603  000C02                     __ptext24:
  3604                           	opt callstack 0
  3605  000C02                     ___awdiv:
  3606                           	opt callstack 25
  3607                           
  3608                           ;incstack = 0
  3609  000C02  0E00               	movlw	0
  3610  000C04  6E0B               	movwf	___awdiv@sign,c
  3611  000C06  AE09               	btfss	___awdiv@divisor+1,7,c
  3612  000C08  D006               	goto	l2655
  3613  000C0A  6C08               	negf	___awdiv@divisor,c
  3614  000C0C  1E09               	comf	___awdiv@divisor+1,f,c
  3615  000C0E  B0D8               	btfsc	status,0,c
  3616  000C10  2A09               	incf	___awdiv@divisor+1,f,c
  3617  000C12  0E01               	movlw	1
  3618  000C14  6E0B               	movwf	___awdiv@sign,c
  3619  000C16                     l2655:
  3620  000C16  AE07               	btfss	___awdiv@dividend+1,7,c
  3621  000C18  D006               	goto	l2661
  3622  000C1A  6C06               	negf	___awdiv@dividend,c
  3623  000C1C  1E07               	comf	___awdiv@dividend+1,f,c
  3624  000C1E  B0D8               	btfsc	status,0,c
  3625  000C20  2A07               	incf	___awdiv@dividend+1,f,c
  3626  000C22  0E01               	movlw	1
  3627  000C24  1A0B               	xorwf	___awdiv@sign,f,c
  3628  000C26                     l2661:
  3629  000C26  0E00               	movlw	0
  3630  000C28  6E0D               	movwf	___awdiv@quotient+1,c
  3631  000C2A  0E00               	movlw	0
  3632  000C2C  6E0C               	movwf	___awdiv@quotient,c
  3633  000C2E  5008               	movf	___awdiv@divisor,w,c
  3634  000C30  1009               	iorwf	___awdiv@divisor+1,w,c
  3635  000C32  B4D8               	btfsc	status,2,c
  3636  000C34  D01C               	goto	l2683
  3637  000C36  0E01               	movlw	1
  3638  000C38  6E0A               	movwf	___awdiv@counter,c
  3639  000C3A  D004               	goto	l2669
  3640  000C3C                     l2667:
  3641  000C3C  90D8               	bcf	status,0,c
  3642  000C3E  3608               	rlcf	___awdiv@divisor,f,c
  3643  000C40  3609               	rlcf	___awdiv@divisor+1,f,c
  3644  000C42  2A0A               	incf	___awdiv@counter,f,c
  3645  000C44                     l2669:
  3646  000C44  AE09               	btfss	___awdiv@divisor+1,7,c
  3647  000C46  D7FA               	goto	l2667
  3648  000C48                     u1320:
  3649  000C48  90D8               	bcf	status,0,c
  3650  000C4A  360C               	rlcf	___awdiv@quotient,f,c
  3651  000C4C  360D               	rlcf	___awdiv@quotient+1,f,c
  3652  000C4E  5008               	movf	___awdiv@divisor,w,c
  3653  000C50  5C06               	subwf	___awdiv@dividend,w,c
  3654  000C52  5009               	movf	___awdiv@divisor+1,w,c
  3655  000C54  5807               	subwfb	___awdiv@dividend+1,w,c
  3656  000C56  A0D8               	btfss	status,0,c
  3657  000C58  D005               	goto	l2679
  3658  000C5A  5008               	movf	___awdiv@divisor,w,c
  3659  000C5C  5E06               	subwf	___awdiv@dividend,f,c
  3660  000C5E  5009               	movf	___awdiv@divisor+1,w,c
  3661  000C60  5A07               	subwfb	___awdiv@dividend+1,f,c
  3662  000C62  800C               	bsf	___awdiv@quotient,0,c
  3663  000C64                     l2679:
  3664  000C64  90D8               	bcf	status,0,c
  3665  000C66  3209               	rrcf	___awdiv@divisor+1,f,c
  3666  000C68  3208               	rrcf	___awdiv@divisor,f,c
  3667  000C6A  2E0A               	decfsz	___awdiv@counter,f,c
  3668  000C6C  D7ED               	goto	u1320
  3669  000C6E                     l2683:
  3670  000C6E  500B               	movf	___awdiv@sign,w,c
  3671  000C70  B4D8               	btfsc	status,2,c
  3672  000C72  D004               	goto	l2687
  3673  000C74  6C0C               	negf	___awdiv@quotient,c
  3674  000C76  1E0D               	comf	___awdiv@quotient+1,f,c
  3675  000C78  B0D8               	btfsc	status,0,c
  3676  000C7A  2A0D               	incf	___awdiv@quotient+1,f,c
  3677  000C7C                     l2687:
  3678  000C7C  C00C  F006         	movff	___awdiv@quotient,?___awdiv
  3679  000C80  C00D  F007         	movff	___awdiv@quotient+1,?___awdiv+1
  3680  000C84  0012               	return		;funcret
  3681  000C86                     __end_of___awdiv:
  3682                           	opt callstack 0
  3683                           
  3684 ;; *************** function _CAN_MoveBuffIntoFrame *****************
  3685 ;; Defined at:
  3686 ;;		line 169 in file "CAN.c"
  3687 ;; Parameters:    Size  Location     Type
  3688 ;;  Ram             2    5[COMRAM] PTR unsigned char 
  3689 ;;		 -> TRM_DataTransmition@canMessage(17), RXB0D0(1), 
  3690 ;;  Buf             2    7[COMRAM] PTR unsigned char 
  3691 ;;		 -> TRM_DataTransmition@canMessage(17), RXB0D0(1), 
  3692 ;; Auto vars:     Size  Location     Type
  3693 ;;  i               1    9[COMRAM] unsigned char 
  3694 ;; Return value:  Size  Location     Type
  3695 ;;                  1    wreg      void 
  3696 ;; Registers used:
  3697 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3698 ;; Tracked objects:
  3699 ;;		On entry : 0/0
  3700 ;;		On exit  : 0/0
  3701 ;;		Unchanged: 0/0
  3702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3703 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3704 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3706 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3707 ;;Total ram usage:        5 bytes
  3708 ;; Hardware stack levels used:    1
  3709 ;; Hardware stack levels required when called:    3
  3710 ;; This function calls:
  3711 ;;		Nothing
  3712 ;; This function is called by:
  3713 ;;		_CAN_SendFrame
  3714 ;;		_CAN_TakeFrame
  3715 ;; This function uses a non-reentrant model
  3716 ;;
  3717                           
  3718                           	psect	text25
  3719  001200                     __ptext25:
  3720                           	opt callstack 0
  3721  001200                     _CAN_MoveBuffIntoFrame:
  3722                           	opt callstack 24
  3723                           
  3724                           ;CAN.c: 169: static void CAN_MoveBuffIntoFrame(BYTE* Ram, BYTE* Buf);CAN.c: 170: {;CAN.c
      +                          : 171:     BYTE i;;CAN.c: 172:     for(i=0; i<8; ++i)
  3725                           
  3726                           ;incstack = 0
  3727  001200  0E00               	movlw	0
  3728  001202  6E0A               	movwf	CAN_MoveBuffIntoFrame@i,c
  3729  001204                     l2259:
  3730                           
  3731                           ;CAN.c: 173:     {;CAN.c: 174:         Ram[i]=(*(Buf+i));
  3732  001204  500A               	movf	CAN_MoveBuffIntoFrame@i,w,c
  3733  001206  2408               	addwf	CAN_MoveBuffIntoFrame@Buf,w,c
  3734  001208  6ED9               	movwf	fsr2l,c
  3735  00120A  0E00               	movlw	0
  3736  00120C  2009               	addwfc	CAN_MoveBuffIntoFrame@Buf+1,w,c
  3737  00120E  6EDA               	movwf	fsr2h,c
  3738  001210  500A               	movf	CAN_MoveBuffIntoFrame@i,w,c
  3739  001212  2406               	addwf	CAN_MoveBuffIntoFrame@Ram,w,c
  3740  001214  6EE1               	movwf	fsr1l,c
  3741  001216  0E00               	movlw	0
  3742  001218  2007               	addwfc	CAN_MoveBuffIntoFrame@Ram+1,w,c
  3743  00121A  6EE2               	movwf	fsr1h,c
  3744  00121C  CFDF FFE7          	movff	indf2,indf1
  3745                           
  3746                           ;CAN.c: 175:     }
  3747  001220  2A0A               	incf	CAN_MoveBuffIntoFrame@i,f,c
  3748  001222  0E07               	movlw	7
  3749  001224  640A               	cpfsgt	CAN_MoveBuffIntoFrame@i,c
  3750  001226  D7EE               	goto	l2259
  3751  001228  0012               	return	
  3752  00122A                     __end_of_CAN_MoveBuffIntoFrame:
  3753                           	opt callstack 0
  3754                           
  3755 ;; *************** function _TMR1_Update_flag_Set *****************
  3756 ;; Defined at:
  3757 ;;		line 32 in file "TMR1.c"
  3758 ;; Parameters:    Size  Location     Type
  3759 ;;  a               2    5[COMRAM] unsigned int 
  3760 ;; Auto vars:     Size  Location     Type
  3761 ;;		None
  3762 ;; Return value:  Size  Location     Type
  3763 ;;                  1    wreg      void 
  3764 ;; Registers used:
  3765 ;;		None
  3766 ;; Tracked objects:
  3767 ;;		On entry : 0/0
  3768 ;;		On exit  : 0/0
  3769 ;;		Unchanged: 0/0
  3770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3771 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3774 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3775 ;;Total ram usage:        2 bytes
  3776 ;; Hardware stack levels used:    1
  3777 ;; Hardware stack levels required when called:    3
  3778 ;; This function calls:
  3779 ;;		Nothing
  3780 ;; This function is called by:
  3781 ;;		_main
  3782 ;; This function uses a non-reentrant model
  3783 ;;
  3784                           
  3785                           	psect	text26
  3786  001340                     __ptext26:
  3787                           	opt callstack 0
  3788  001340                     _TMR1_Update_flag_Set:
  3789                           	opt callstack 27
  3790                           
  3791                           ;TMR1.c: 32: void TMR1_Update_flag_Set(UINT a);TMR1.c: 33: {;TMR1.c: 34:     TMR1_Update
      +                          _flag = a;
  3792                           
  3793                           ;incstack = 0
  3794  001340  C006  F044         	movff	TMR1_Update_flag_Set@a,_TMR1_Update_flag
  3795  001344  C007  F045         	movff	TMR1_Update_flag_Set@a+1,_TMR1_Update_flag+1
  3796  001348  0012               	return		;funcret
  3797  00134A                     __end_of_TMR1_Update_flag_Set:
  3798                           	opt callstack 0
  3799                           
  3800 ;; *************** function _TMR1_Update_flag_Get *****************
  3801 ;; Defined at:
  3802 ;;		line 47 in file "TMR1.c"
  3803 ;; Parameters:    Size  Location     Type
  3804 ;;		None
  3805 ;; Auto vars:     Size  Location     Type
  3806 ;;		None
  3807 ;; Return value:  Size  Location     Type
  3808 ;;                  2    5[COMRAM] unsigned int 
  3809 ;; Registers used:
  3810 ;;		None
  3811 ;; Tracked objects:
  3812 ;;		On entry : 0/0
  3813 ;;		On exit  : 0/0
  3814 ;;		Unchanged: 0/0
  3815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3816 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3819 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3820 ;;Total ram usage:        2 bytes
  3821 ;; Hardware stack levels used:    1
  3822 ;; Hardware stack levels required when called:    3
  3823 ;; This function calls:
  3824 ;;		Nothing
  3825 ;; This function is called by:
  3826 ;;		_main
  3827 ;; This function uses a non-reentrant model
  3828 ;;
  3829                           
  3830                           	psect	text27
  3831  00134A                     __ptext27:
  3832                           	opt callstack 0
  3833  00134A                     _TMR1_Update_flag_Get:
  3834                           	opt callstack 27
  3835                           
  3836                           ;TMR1.c: 49:     return TMR1_Update_flag;
  3837                           
  3838                           ;incstack = 0
  3839  00134A  C044  F006         	movff	_TMR1_Update_flag,?_TMR1_Update_flag_Get
  3840  00134E  C045  F007         	movff	_TMR1_Update_flag+1,?_TMR1_Update_flag_Get+1
  3841  001352  0012               	return		;funcret
  3842  001354                     __end_of_TMR1_Update_flag_Get:
  3843                           	opt callstack 0
  3844                           
  3845 ;; *************** function _LED_Update *****************
  3846 ;; Defined at:
  3847 ;;		line 105 in file "LED.c"
  3848 ;; Parameters:    Size  Location     Type
  3849 ;;		None
  3850 ;; Auto vars:     Size  Location     Type
  3851 ;;		None
  3852 ;; Return value:  Size  Location     Type
  3853 ;;                  1    wreg      unsigned char 
  3854 ;; Registers used:
  3855 ;;		wreg, status,2, status,0, cstack
  3856 ;; Tracked objects:
  3857 ;;		On entry : 0/0
  3858 ;;		On exit  : 0/0
  3859 ;;		Unchanged: 0/0
  3860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3865 ;;Total ram usage:        0 bytes
  3866 ;; Hardware stack levels used:    1
  3867 ;; Hardware stack levels required when called:    5
  3868 ;; This function calls:
  3869 ;;		_LED_Control
  3870 ;;		_LED_Left
  3871 ;;		_LED_Light_Pos
  3872 ;;		_LED_Right
  3873 ;; This function is called by:
  3874 ;;		_main
  3875 ;; This function uses a non-reentrant model
  3876 ;;
  3877                           
  3878                           	psect	text28
  3879  000C86                     __ptext28:
  3880                           	opt callstack 0
  3881  000C86                     _LED_Update:
  3882                           	opt callstack 25
  3883                           
  3884                           ;LED.c: 107:     static LED_RGA_type Red = RED;;LED.c: 108:     static LED_RGA_type Gree
      +                          n = GREEN;;LED.c: 109:     static UINT pos1 = 0b0000000001;;LED.c: 110:     static UINT 
      +                          pos2 = 0b0000000001;;LED.c: 112:     if(LOCK == 0)
  3885                           
  3886                           ;incstack = 0
  3887  000C86  504C               	movf	_LOCK,w,c
  3888  000C88  A4D8               	btfss	status,2,c
  3889  000C8A  D013               	goto	l2907
  3890                           
  3891                           ;LED.c: 113:     {;LED.c: 114:     LED_Control(RED,0b0000000000);
  3892  000C8C  0E00               	movlw	0
  3893  000C8E  6E07               	movwf	LED_Control@diode+1,c
  3894  000C90  0E00               	movlw	0
  3895  000C92  6E06               	movwf	LED_Control@diode,c
  3896  000C94  0E00               	movlw	0
  3897  000C96  EC45  F004         	call	_LED_Control
  3898                           
  3899                           ;LED.c: 115:     LED_Light_Pos(Green,pos2,Fulfillment_Lvl);
  3900  000C9A  C04F  F00D         	movff	LED_Update@pos2,LED_Light_Pos@pos
  3901  000C9E  C050  F00E         	movff	LED_Update@pos2+1,LED_Light_Pos@pos+1
  3902  000CA2  C053  F00F         	movff	_Fulfillment_Lvl,LED_Light_Pos@fulfillment
  3903  000CA6  C054  F010         	movff	_Fulfillment_Lvl+1,LED_Light_Pos@fulfillment+1
  3904  000CAA  5055               	movf	LED_Update@Green,w,c
  3905  000CAC  EC5F  F005         	call	_LED_Light_Pos
  3906                           
  3907                           ;LED.c: 117:     }
  3908  000CB0  D012               	goto	l283
  3909  000CB2                     l2907:
  3910                           
  3911                           ;LED.c: 119:     {;LED.c: 120:     LED_Control(Green,0b0000000000);
  3912  000CB2  0E00               	movlw	0
  3913  000CB4  6E07               	movwf	LED_Control@diode+1,c
  3914  000CB6  0E00               	movlw	0
  3915  000CB8  6E06               	movwf	LED_Control@diode,c
  3916  000CBA  5055               	movf	LED_Update@Green,w,c
  3917  000CBC  EC45  F004         	call	_LED_Control
  3918                           
  3919                           ;LED.c: 121:     LED_Light_Pos(RED,pos1,Fulfillment_Lvl);
  3920  000CC0  C051  F00D         	movff	LED_Update@pos1,LED_Light_Pos@pos
  3921  000CC4  C052  F00E         	movff	LED_Update@pos1+1,LED_Light_Pos@pos+1
  3922  000CC8  C053  F00F         	movff	_Fulfillment_Lvl,LED_Light_Pos@fulfillment
  3923  000CCC  C054  F010         	movff	_Fulfillment_Lvl+1,LED_Light_Pos@fulfillment+1
  3924  000CD0  0E00               	movlw	0
  3925  000CD2  EC5F  F005         	call	_LED_Light_Pos
  3926  000CD6                     l283:
  3927                           
  3928                           ;LED.c: 123:     pos1 = LED_Right(pos1);
  3929  000CD6  C051  F006         	movff	LED_Update@pos1,LED_Right@a
  3930  000CDA  C052  F007         	movff	LED_Update@pos1+1,LED_Right@a+1
  3931  000CDE  ECF7  F007         	call	_LED_Right	;wreg free
  3932  000CE2  C006  F051         	movff	?_LED_Right,LED_Update@pos1
  3933  000CE6  C007  F052         	movff	?_LED_Right+1,LED_Update@pos1+1
  3934                           
  3935                           ;LED.c: 124:     pos2 = LED_Left(pos2);
  3936  000CEA  C04F  F006         	movff	LED_Update@pos2,LED_Left@a
  3937  000CEE  C050  F007         	movff	LED_Update@pos2+1,LED_Left@a+1
  3938  000CF2  EC42  F008         	call	_LED_Left	;wreg free
  3939  000CF6  C006  F04F         	movff	?_LED_Left,LED_Update@pos2
  3940  000CFA  C007  F050         	movff	?_LED_Left+1,LED_Update@pos2+1
  3941  000CFE  0012               	return		;funcret
  3942  000D00                     __end_of_LED_Update:
  3943                           	opt callstack 0
  3944                           
  3945 ;; *************** function _LED_Light_Pos *****************
  3946 ;; Defined at:
  3947 ;;		line 196 in file "LED.c"
  3948 ;; Parameters:    Size  Location     Type
  3949 ;;  color           1    wreg     enum E10644
  3950 ;;  pos             2   12[COMRAM] unsigned int 
  3951 ;;  fulfillment     2   14[COMRAM] unsigned int 
  3952 ;; Auto vars:     Size  Location     Type
  3953 ;;  color           1   16[COMRAM] enum E10644
  3954 ;;  flage           2   21[COMRAM] unsigned int 
  3955 ;;  pos2            2   19[COMRAM] unsigned int 
  3956 ;;  LED_array       2   17[COMRAM] unsigned int 
  3957 ;; Return value:  Size  Location     Type
  3958 ;;                  2   12[COMRAM] unsigned int 
  3959 ;; Registers used:
  3960 ;;		wreg, status,2, status,0, cstack
  3961 ;; Tracked objects:
  3962 ;;		On entry : 0/0
  3963 ;;		On exit  : 0/0
  3964 ;;		Unchanged: 0/0
  3965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3966 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3967 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3969 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3970 ;;Total ram usage:       11 bytes
  3971 ;; Hardware stack levels used:    1
  3972 ;; Hardware stack levels required when called:    4
  3973 ;; This function calls:
  3974 ;;		_LED_Control
  3975 ;;		_LED_Left
  3976 ;;		_LED_Right
  3977 ;;		___lwdiv
  3978 ;; This function is called by:
  3979 ;;		_LED_Update
  3980 ;; This function uses a non-reentrant model
  3981 ;;
  3982                           
  3983                           	psect	text29
  3984  000ABE                     __ptext29:
  3985                           	opt callstack 0
  3986  000ABE                     _LED_Light_Pos:
  3987                           	opt callstack 25
  3988                           
  3989                           ;incstack = 0
  3990                           ;LED_Light_Pos@color stored from wreg
  3991  000ABE  6E11               	movwf	LED_Light_Pos@color,c
  3992                           
  3993                           ;LED.c: 196: UINT LED_Light_Pos(LED_RGA_type color,UINT pos, UINT fulfillment);LED.c: 19
      +                          7: {;LED.c: 198:     UINT pos2 =pos;
  3994  000AC0  C00D  F014         	movff	LED_Light_Pos@pos,LED_Light_Pos@pos2
  3995  000AC4  C00E  F015         	movff	LED_Light_Pos@pos+1,LED_Light_Pos@pos2+1
  3996                           
  3997                           ;LED.c: 199:     UINT LED_array = 0b0000000000;
  3998  000AC8  0E00               	movlw	0
  3999  000ACA  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  4000  000ACC  0E00               	movlw	0
  4001  000ACE  6E12               	movwf	LED_Light_Pos@LED_array,c
  4002                           
  4003                           ;LED.c: 200:     UINT flage = fulfillment/10;
  4004  000AD0  C00F  F006         	movff	LED_Light_Pos@fulfillment,___lwdiv@dividend
  4005  000AD4  C010  F007         	movff	LED_Light_Pos@fulfillment+1,___lwdiv@dividend+1
  4006  000AD8  0E00               	movlw	0
  4007  000ADA  6E09               	movwf	___lwdiv@divisor+1,c
  4008  000ADC  0E0A               	movlw	10
  4009  000ADE  6E08               	movwf	___lwdiv@divisor,c
  4010  000AE0  ECA7  F007         	call	___lwdiv	;wreg free
  4011  000AE4  C006  F016         	movff	?___lwdiv,LED_Light_Pos@flage
  4012  000AE8  C007  F017         	movff	?___lwdiv+1,LED_Light_Pos@flage+1
  4013                           
  4014                           ;LED.c: 201:     if(color == RED)
  4015  000AEC  5011               	movf	LED_Light_Pos@color,w,c
  4016  000AEE  B4D8               	btfsc	status,2,c
  4017  000AF0  D017               	goto	l2815
  4018  000AF2  D031               	goto	l2823
  4019  000AF4                     l2809:
  4020                           
  4021                           ;LED.c: 204:         {;LED.c: 205:             LED_array = pos2|LED_array;
  4022  000AF4  5012               	movf	LED_Light_Pos@LED_array,w,c
  4023  000AF6  1014               	iorwf	LED_Light_Pos@pos2,w,c
  4024  000AF8  6E12               	movwf	LED_Light_Pos@LED_array,c
  4025  000AFA  5013               	movf	LED_Light_Pos@LED_array+1,w,c
  4026  000AFC  1015               	iorwf	LED_Light_Pos@pos2+1,w,c
  4027  000AFE  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  4028                           
  4029                           ;LED.c: 206:             pos2 = LED_Left(pos2);
  4030  000B00  C014  F006         	movff	LED_Light_Pos@pos2,LED_Left@a
  4031  000B04  C015  F007         	movff	LED_Light_Pos@pos2+1,LED_Left@a+1
  4032  000B08  EC42  F008         	call	_LED_Left	;wreg free
  4033  000B0C  C006  F014         	movff	?_LED_Left,LED_Light_Pos@pos2
  4034  000B10  C007  F015         	movff	?_LED_Left+1,LED_Light_Pos@pos2+1
  4035                           
  4036                           ;LED.c: 207:             flage = flage - 1;
  4037  000B14  0EFF               	movlw	255
  4038  000B16  2416               	addwf	LED_Light_Pos@flage,w,c
  4039  000B18  6E16               	movwf	LED_Light_Pos@flage,c
  4040  000B1A  0EFF               	movlw	255
  4041  000B1C  2017               	addwfc	LED_Light_Pos@flage+1,w,c
  4042  000B1E  6E17               	movwf	LED_Light_Pos@flage+1,c
  4043  000B20                     l2815:
  4044                           
  4045                           ;LED.c: 203:         while(flage>0)
  4046  000B20  5016               	movf	LED_Light_Pos@flage,w,c
  4047  000B22  1017               	iorwf	LED_Light_Pos@flage+1,w,c
  4048  000B24  B4D8               	btfsc	status,2,c
  4049  000B26  D01B               	goto	u1430
  4050  000B28  D7E5               	goto	l2809
  4051  000B2A                     l2817:
  4052                           
  4053                           ;LED.c: 213:         {;LED.c: 214:             LED_array = pos2|LED_array;
  4054  000B2A  5012               	movf	LED_Light_Pos@LED_array,w,c
  4055  000B2C  1014               	iorwf	LED_Light_Pos@pos2,w,c
  4056  000B2E  6E12               	movwf	LED_Light_Pos@LED_array,c
  4057  000B30  5013               	movf	LED_Light_Pos@LED_array+1,w,c
  4058  000B32  1015               	iorwf	LED_Light_Pos@pos2+1,w,c
  4059  000B34  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  4060                           
  4061                           ;LED.c: 215:             pos2 = LED_Right(pos2);
  4062  000B36  C014  F006         	movff	LED_Light_Pos@pos2,LED_Right@a
  4063  000B3A  C015  F007         	movff	LED_Light_Pos@pos2+1,LED_Right@a+1
  4064  000B3E  ECF7  F007         	call	_LED_Right	;wreg free
  4065  000B42  C006  F014         	movff	?_LED_Right,LED_Light_Pos@pos2
  4066  000B46  C007  F015         	movff	?_LED_Right+1,LED_Light_Pos@pos2+1
  4067                           
  4068                           ;LED.c: 216:             flage = flage - 1;
  4069  000B4A  0EFF               	movlw	255
  4070  000B4C  2416               	addwf	LED_Light_Pos@flage,w,c
  4071  000B4E  6E16               	movwf	LED_Light_Pos@flage,c
  4072  000B50  0EFF               	movlw	255
  4073  000B52  2017               	addwfc	LED_Light_Pos@flage+1,w,c
  4074  000B54  6E17               	movwf	LED_Light_Pos@flage+1,c
  4075  000B56                     l2823:
  4076                           
  4077                           ;LED.c: 212:         while(flage>0)
  4078  000B56  5016               	movf	LED_Light_Pos@flage,w,c
  4079  000B58  1017               	iorwf	LED_Light_Pos@flage+1,w,c
  4080  000B5A  A4D8               	btfss	status,2,c
  4081  000B5C  D7E6               	goto	l2817
  4082  000B5E                     u1430:
  4083                           
  4084                           ;LED.c: 219:     LED_Control(color, LED_array);
  4085  000B5E  C012  F006         	movff	LED_Light_Pos@LED_array,LED_Control@diode
  4086  000B62  C013  F007         	movff	LED_Light_Pos@LED_array+1,LED_Control@diode+1
  4087  000B66  5011               	movf	LED_Light_Pos@color,w,c
  4088  000B68  EC45  F004         	call	_LED_Control
  4089  000B6C  0012               	return		;funcret
  4090  000B6E                     __end_of_LED_Light_Pos:
  4091                           	opt callstack 0
  4092                           
  4093 ;; *************** function ___lwdiv *****************
  4094 ;; Defined at:
  4095 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwdiv.c"
  4096 ;; Parameters:    Size  Location     Type
  4097 ;;  dividend        2    5[COMRAM] unsigned int 
  4098 ;;  divisor         2    7[COMRAM] unsigned int 
  4099 ;; Auto vars:     Size  Location     Type
  4100 ;;  quotient        2    9[COMRAM] unsigned int 
  4101 ;;  counter         1   11[COMRAM] unsigned char 
  4102 ;; Return value:  Size  Location     Type
  4103 ;;                  2    5[COMRAM] unsigned int 
  4104 ;; Registers used:
  4105 ;;		wreg, status,2, status,0
  4106 ;; Tracked objects:
  4107 ;;		On entry : 0/0
  4108 ;;		On exit  : 0/0
  4109 ;;		Unchanged: 0/0
  4110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4111 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4112 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4114 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4115 ;;Total ram usage:        7 bytes
  4116 ;; Hardware stack levels used:    1
  4117 ;; Hardware stack levels required when called:    3
  4118 ;; This function calls:
  4119 ;;		Nothing
  4120 ;; This function is called by:
  4121 ;;		_LED_Light_Pos
  4122 ;;		_FRAME_Plot
  4123 ;; This function uses a non-reentrant model
  4124 ;;
  4125                           
  4126                           	psect	text30
  4127  000F4E                     __ptext30:
  4128                           	opt callstack 0
  4129  000F4E                     ___lwdiv:
  4130                           	opt callstack 24
  4131                           
  4132                           ;incstack = 0
  4133  000F4E  0E00               	movlw	0
  4134  000F50  6E0B               	movwf	___lwdiv@quotient+1,c
  4135  000F52  0E00               	movlw	0
  4136  000F54  6E0A               	movwf	___lwdiv@quotient,c
  4137  000F56  5008               	movf	___lwdiv@divisor,w,c
  4138  000F58  1009               	iorwf	___lwdiv@divisor+1,w,c
  4139  000F5A  B4D8               	btfsc	status,2,c
  4140  000F5C  D01C               	goto	l1159
  4141  000F5E  0E01               	movlw	1
  4142  000F60  6E0C               	movwf	___lwdiv@counter,c
  4143  000F62  D004               	goto	l2421
  4144  000F64                     l2419:
  4145  000F64  90D8               	bcf	status,0,c
  4146  000F66  3608               	rlcf	___lwdiv@divisor,f,c
  4147  000F68  3609               	rlcf	___lwdiv@divisor+1,f,c
  4148  000F6A  2A0C               	incf	___lwdiv@counter,f,c
  4149  000F6C                     l2421:
  4150  000F6C  AE09               	btfss	___lwdiv@divisor+1,7,c
  4151  000F6E  D7FA               	goto	l2419
  4152  000F70                     u1040:
  4153  000F70  90D8               	bcf	status,0,c
  4154  000F72  360A               	rlcf	___lwdiv@quotient,f,c
  4155  000F74  360B               	rlcf	___lwdiv@quotient+1,f,c
  4156  000F76  5008               	movf	___lwdiv@divisor,w,c
  4157  000F78  5C06               	subwf	___lwdiv@dividend,w,c
  4158  000F7A  5009               	movf	___lwdiv@divisor+1,w,c
  4159  000F7C  5807               	subwfb	___lwdiv@dividend+1,w,c
  4160  000F7E  A0D8               	btfss	status,0,c
  4161  000F80  D005               	goto	l2431
  4162  000F82  5008               	movf	___lwdiv@divisor,w,c
  4163  000F84  5E06               	subwf	___lwdiv@dividend,f,c
  4164  000F86  5009               	movf	___lwdiv@divisor+1,w,c
  4165  000F88  5A07               	subwfb	___lwdiv@dividend+1,f,c
  4166  000F8A  800A               	bsf	___lwdiv@quotient,0,c
  4167  000F8C                     l2431:
  4168  000F8C  90D8               	bcf	status,0,c
  4169  000F8E  3209               	rrcf	___lwdiv@divisor+1,f,c
  4170  000F90  3208               	rrcf	___lwdiv@divisor,f,c
  4171  000F92  2E0C               	decfsz	___lwdiv@counter,f,c
  4172  000F94  D7ED               	goto	u1040
  4173  000F96                     l1159:
  4174  000F96  C00A  F006         	movff	___lwdiv@quotient,?___lwdiv
  4175  000F9A  C00B  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4176  000F9E  0012               	return		;funcret
  4177  000FA0                     __end_of___lwdiv:
  4178                           	opt callstack 0
  4179                           
  4180 ;; *************** function _LED_Right *****************
  4181 ;; Defined at:
  4182 ;;		line 140 in file "LED.c"
  4183 ;; Parameters:    Size  Location     Type
  4184 ;;  a               2    5[COMRAM] unsigned int 
  4185 ;; Auto vars:     Size  Location     Type
  4186 ;;  b               2    9[COMRAM] unsigned int 
  4187 ;; Return value:  Size  Location     Type
  4188 ;;                  2    5[COMRAM] unsigned int 
  4189 ;; Registers used:
  4190 ;;		wreg, status,2, status,0
  4191 ;; Tracked objects:
  4192 ;;		On entry : 0/0
  4193 ;;		On exit  : 0/0
  4194 ;;		Unchanged: 0/0
  4195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4196 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4197 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4198 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4199 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4200 ;;Total ram usage:        6 bytes
  4201 ;; Hardware stack levels used:    1
  4202 ;; Hardware stack levels required when called:    3
  4203 ;; This function calls:
  4204 ;;		Nothing
  4205 ;; This function is called by:
  4206 ;;		_LED_Update
  4207 ;;		_LED_Light_Pos
  4208 ;; This function uses a non-reentrant model
  4209 ;;
  4210                           
  4211                           	psect	text31
  4212  000FEE                     __ptext31:
  4213                           	opt callstack 0
  4214  000FEE                     _LED_Right:
  4215                           	opt callstack 26
  4216                           
  4217                           ;LED.c: 140: UINT LED_Right(UINT a);LED.c: 141: {;LED.c: 142:     if ((a & 0b0000000001)
      +                           == 0b0000000001)
  4218                           
  4219                           ;incstack = 0
  4220  000FEE  A006               	btfss	LED_Right@a,0,c
  4221  000FF0  D018               	goto	l2531
  4222                           
  4223                           ;LED.c: 143:     {;LED.c: 144:         UINT b = a & 0b1111111110;
  4224  000FF2  0EFE               	movlw	254
  4225  000FF4  1406               	andwf	LED_Right@a,w,c
  4226  000FF6  6E0A               	movwf	LED_Right@b,c
  4227  000FF8  0E03               	movlw	3
  4228  000FFA  1407               	andwf	LED_Right@a+1,w,c
  4229  000FFC  6E0B               	movwf	LED_Right@b+1,c
  4230                           
  4231                           ;LED.c: 145:         b = b >> 1;
  4232  000FFE  90D8               	bcf	status,0,c
  4233  001000  300B               	rrcf	LED_Right@b+1,w,c
  4234  001002  6E08               	movwf	??_LED_Right& (0+255),c
  4235  001004  300A               	rrcf	LED_Right@b,w,c
  4236  001006  6E0A               	movwf	LED_Right@b,c
  4237  001008  C008  F00B         	movff	??_LED_Right,LED_Right@b+1
  4238                           
  4239                           ;LED.c: 146:         b = b | 0b1000000000;
  4240  00100C  0E00               	movlw	0
  4241  00100E  100A               	iorwf	LED_Right@b,w,c
  4242  001010  6E0A               	movwf	LED_Right@b,c
  4243  001012  0E02               	movlw	2
  4244  001014  100B               	iorwf	LED_Right@b+1,w,c
  4245  001016  6E0B               	movwf	LED_Right@b+1,c
  4246                           
  4247                           ;LED.c: 147:         return b;
  4248  001018  C00A  F006         	movff	LED_Right@b,?_LED_Right
  4249  00101C  C00B  F007         	movff	LED_Right@b+1,?_LED_Right+1
  4250  001020  0012               	return	
  4251  001022                     l2531:
  4252                           
  4253                           ;LED.c: 150:     {;LED.c: 151:         a =a >> 1;
  4254  001022  90D8               	bcf	status,0,c
  4255  001024  3007               	rrcf	LED_Right@a+1,w,c
  4256  001026  6E08               	movwf	??_LED_Right& (0+255),c
  4257  001028  3006               	rrcf	LED_Right@a,w,c
  4258  00102A  6E06               	movwf	LED_Right@a,c
  4259  00102C  C008  F007         	movff	??_LED_Right,LED_Right@a+1
  4260                           
  4261                           ;LED.c: 152:         return a;
  4262  001030  C006  F006         	movff	LED_Right@a,?_LED_Right
  4263  001034  C007  F007         	movff	LED_Right@a+1,?_LED_Right+1
  4264  001038  0012               	return		;funcret
  4265  00103A                     __end_of_LED_Right:
  4266                           	opt callstack 0
  4267                           
  4268 ;; *************** function _LED_Left *****************
  4269 ;; Defined at:
  4270 ;;		line 167 in file "LED.c"
  4271 ;; Parameters:    Size  Location     Type
  4272 ;;  a               2    5[COMRAM] unsigned int 
  4273 ;; Auto vars:     Size  Location     Type
  4274 ;;  b               2    7[COMRAM] unsigned int 
  4275 ;; Return value:  Size  Location     Type
  4276 ;;                  2    5[COMRAM] unsigned int 
  4277 ;; Registers used:
  4278 ;;		wreg, status,2, status,0
  4279 ;; Tracked objects:
  4280 ;;		On entry : 0/0
  4281 ;;		On exit  : 0/0
  4282 ;;		Unchanged: 0/0
  4283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4284 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4285 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4287 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4288 ;;Total ram usage:        4 bytes
  4289 ;; Hardware stack levels used:    1
  4290 ;; Hardware stack levels required when called:    3
  4291 ;; This function calls:
  4292 ;;		Nothing
  4293 ;; This function is called by:
  4294 ;;		_LED_Update
  4295 ;;		_LED_Light_Pos
  4296 ;; This function uses a non-reentrant model
  4297 ;;
  4298                           
  4299                           	psect	text32
  4300  001084                     __ptext32:
  4301                           	opt callstack 0
  4302  001084                     _LED_Left:
  4303                           	opt callstack 25
  4304                           
  4305                           ;LED.c: 167: UINT LED_Left(UINT a);LED.c: 168: {;LED.c: 169:     if ((a & 0b1000000000) 
      +                          == 0b1000000000)
  4306                           
  4307                           ;incstack = 0
  4308  001084  A207               	btfss	LED_Left@a+1,1,c
  4309  001086  D015               	goto	l2547
  4310                           
  4311                           ;LED.c: 170:     {;LED.c: 171:         UINT b = a & 0b0111111111;
  4312  001088  0EFF               	movlw	255
  4313  00108A  1406               	andwf	LED_Left@a,w,c
  4314  00108C  6E08               	movwf	LED_Left@b,c
  4315  00108E  0E01               	movlw	1
  4316  001090  1407               	andwf	LED_Left@a+1,w,c
  4317  001092  6E09               	movwf	LED_Left@b+1,c
  4318                           
  4319                           ;LED.c: 172:         b = b << 1;
  4320  001094  90D8               	bcf	status,0,c
  4321  001096  3408               	rlcf	LED_Left@b,w,c
  4322  001098  6E08               	movwf	LED_Left@b,c
  4323  00109A  3409               	rlcf	LED_Left@b+1,w,c
  4324  00109C  6E09               	movwf	LED_Left@b+1,c
  4325                           
  4326                           ;LED.c: 173:         b = b | 0b0000000001;
  4327  00109E  0E01               	movlw	1
  4328  0010A0  1008               	iorwf	LED_Left@b,w,c
  4329  0010A2  6E08               	movwf	LED_Left@b,c
  4330  0010A4  5009               	movf	LED_Left@b+1,w,c
  4331  0010A6  6E09               	movwf	LED_Left@b+1,c
  4332                           
  4333                           ;LED.c: 174:         return b;
  4334  0010A8  C008  F006         	movff	LED_Left@b,?_LED_Left
  4335  0010AC  C009  F007         	movff	LED_Left@b+1,?_LED_Left+1
  4336  0010B0  0012               	return	
  4337  0010B2                     l2547:
  4338                           
  4339                           ;LED.c: 177:     {;LED.c: 178:         a = a << 1;
  4340  0010B2  90D8               	bcf	status,0,c
  4341  0010B4  3406               	rlcf	LED_Left@a,w,c
  4342  0010B6  6E06               	movwf	LED_Left@a,c
  4343  0010B8  3407               	rlcf	LED_Left@a+1,w,c
  4344  0010BA  6E07               	movwf	LED_Left@a+1,c
  4345                           
  4346                           ;LED.c: 179:         return a;
  4347  0010BC  C006  F006         	movff	LED_Left@a,?_LED_Left
  4348  0010C0  C007  F007         	movff	LED_Left@a+1,?_LED_Left+1
  4349  0010C4  0012               	return		;funcret
  4350  0010C6                     __end_of_LED_Left:
  4351                           	opt callstack 0
  4352                           
  4353 ;; *************** function _INI_All *****************
  4354 ;; Defined at:
  4355 ;;		line 52 in file "INI.c"
  4356 ;; Parameters:    Size  Location     Type
  4357 ;;		None
  4358 ;; Auto vars:     Size  Location     Type
  4359 ;;		None
  4360 ;; Return value:  Size  Location     Type
  4361 ;;                  1    wreg      void 
  4362 ;; Registers used:
  4363 ;;		wreg, status,2, status,0, cstack
  4364 ;; Tracked objects:
  4365 ;;		On entry : 0/0
  4366 ;;		On exit  : 0/0
  4367 ;;		Unchanged: 0/0
  4368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4372 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4373 ;;Total ram usage:        0 bytes
  4374 ;; Hardware stack levels used:    1
  4375 ;; Hardware stack levels required when called:    5
  4376 ;; This function calls:
  4377 ;;		_CAN_Setup
  4378 ;;		_INI_GlobalInterrupt
  4379 ;;		_INI_LED_Start
  4380 ;;		_INI_OUTPUT
  4381 ;;		_INI_Timer
  4382 ;; This function is called by:
  4383 ;;		_main
  4384 ;; This function uses a non-reentrant model
  4385 ;;
  4386                           
  4387                           	psect	text33
  4388  0012D8                     __ptext33:
  4389                           	opt callstack 0
  4390  0012D8                     _INI_All:
  4391                           	opt callstack 25
  4392                           
  4393                           ;INI.c: 55:     WDTCONbits.SWDTEN = 1;
  4394                           
  4395                           ;incstack = 0
  4396  0012D8  80D1               	bsf	4049,0,c	;volatile
  4397  0012DA  0004               	clrwdt		;# 
  4398                           
  4399                           ;INI.c: 64:     INI_OUTPUT();
  4400  0012DC  EC5D  F009         	call	_INI_OUTPUT	;wreg free
  4401                           
  4402                           ;INI.c: 66:     CAN_Setup();
  4403  0012E0  EC20  F007         	call	_CAN_Setup	;wreg free
  4404                           
  4405                           ;INI.c: 67:     INI_GlobalInterrupt();
  4406  0012E4  EC85  F009         	call	_INI_GlobalInterrupt	;wreg free
  4407                           
  4408                           ;INI.c: 69:     INI_Timer();
  4409  0012E8  EC79  F009         	call	_INI_Timer	;wreg free
  4410                           
  4411                           ;INI.c: 71:     INI_LED_Start();
  4412  0012EC  ECCF  F008         	call	_INI_LED_Start	;wreg free
  4413  0012F0  0012               	return		;funcret
  4414  0012F2                     __end_of_INI_All:
  4415                           	opt callstack 0
  4416                           
  4417 ;; *************** function _INI_Timer *****************
  4418 ;; Defined at:
  4419 ;;		line 92 in file "TMR1.c"
  4420 ;; Parameters:    Size  Location     Type
  4421 ;;		None
  4422 ;; Auto vars:     Size  Location     Type
  4423 ;;		None
  4424 ;; Return value:  Size  Location     Type
  4425 ;;                  1    wreg      unsigned char 
  4426 ;; Registers used:
  4427 ;;		wreg, status,2
  4428 ;; Tracked objects:
  4429 ;;		On entry : 0/0
  4430 ;;		On exit  : 0/0
  4431 ;;		Unchanged: 0/0
  4432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4436 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4437 ;;Total ram usage:        0 bytes
  4438 ;; Hardware stack levels used:    1
  4439 ;; Hardware stack levels required when called:    3
  4440 ;; This function calls:
  4441 ;;		Nothing
  4442 ;; This function is called by:
  4443 ;;		_INI_All
  4444 ;; This function uses a non-reentrant model
  4445 ;;
  4446                           
  4447                           	psect	text34
  4448  0012F2                     __ptext34:
  4449                           	opt callstack 0
  4450  0012F2                     _INI_Timer:
  4451                           	opt callstack 26
  4452                           
  4453                           ;TMR1.c: 96:     IRCF2 = 1;
  4454                           
  4455                           ;incstack = 0
  4456  0012F2  8CD3               	bsf	4051,6,c	;volatile
  4457                           
  4458                           ;TMR1.c: 97:     IRCF1 = 1;
  4459  0012F4  8AD3               	bsf	4051,5,c	;volatile
  4460                           
  4461                           ;TMR1.c: 98:     IRCF0 = 1;
  4462  0012F6  88D3               	bsf	4051,4,c	;volatile
  4463                           
  4464                           ;TMR1.c: 99:     T1CON = 0b00111101;
  4465  0012F8  0E3D               	movlw	61
  4466  0012FA  6ECD               	movwf	4045,c	;volatile
  4467                           
  4468                           ;TMR1.c: 100:     TMR1H= (UINT8)((0xFFFF - (((8000000/8)/4)/10)) >> 8);
  4469  0012FC  0E9E               	movlw	158
  4470  0012FE  6ECF               	movwf	4047,c	;volatile
  4471                           
  4472                           ;TMR1.c: 101:     TMR1L=(UINT8)((0xFFFF - (((8000000/8)/4)/10)) & 0xFF);
  4473  001300  0E57               	movlw	87
  4474  001302  6ECE               	movwf	4046,c	;volatile
  4475                           
  4476                           ;TMR1.c: 102:     TMR1IE=1;
  4477  001304  809D               	bsf	3997,0,c	;volatile
  4478                           
  4479                           ;TMR1.c: 103:     TMR1ON = 1;
  4480  001306  80CD               	bsf	4045,0,c	;volatile
  4481  001308  0012               	return		;funcret
  4482  00130A                     __end_of_INI_Timer:
  4483                           	opt callstack 0
  4484                           
  4485 ;; *************** function _INI_OUTPUT *****************
  4486 ;; Defined at:
  4487 ;;		line 27 in file "INI.c"
  4488 ;; Parameters:    Size  Location     Type
  4489 ;;		None
  4490 ;; Auto vars:     Size  Location     Type
  4491 ;;		None
  4492 ;; Return value:  Size  Location     Type
  4493 ;;                  1    wreg      void 
  4494 ;; Registers used:
  4495 ;;		wreg, status,2
  4496 ;; Tracked objects:
  4497 ;;		On entry : 0/0
  4498 ;;		On exit  : 0/0
  4499 ;;		Unchanged: 0/0
  4500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4505 ;;Total ram usage:        0 bytes
  4506 ;; Hardware stack levels used:    1
  4507 ;; Hardware stack levels required when called:    3
  4508 ;; This function calls:
  4509 ;;		Nothing
  4510 ;; This function is called by:
  4511 ;;		_INI_All
  4512 ;; This function uses a non-reentrant model
  4513 ;;
  4514                           
  4515                           	psect	text35
  4516  0012BA                     __ptext35:
  4517                           	opt callstack 0
  4518  0012BA                     _INI_OUTPUT:
  4519                           	opt callstack 26
  4520                           
  4521                           ;INI.c: 31:     LATA = 0;
  4522                           
  4523                           ;incstack = 0
  4524  0012BA  0E00               	movlw	0
  4525  0012BC  6E89               	movwf	3977,c	;volatile
  4526                           
  4527                           ;INI.c: 32:     LATB = 0;
  4528  0012BE  0E00               	movlw	0
  4529  0012C0  6E8A               	movwf	3978,c	;volatile
  4530                           
  4531                           ;INI.c: 33:     LATC = 0;
  4532  0012C2  0E00               	movlw	0
  4533  0012C4  6E8B               	movwf	3979,c	;volatile
  4534                           
  4535                           ;INI.c: 34:     TRISA = 0x0C;
  4536  0012C6  0E0C               	movlw	12
  4537  0012C8  6E92               	movwf	3986,c	;volatile
  4538                           
  4539                           ;INI.c: 35:     TRISB = 0b10001000;
  4540  0012CA  0E88               	movlw	136
  4541  0012CC  6E93               	movwf	3987,c	;volatile
  4542                           
  4543                           ;INI.c: 36:     TRISC = 0xBF;
  4544  0012CE  0EBF               	movlw	191
  4545  0012D0  6E94               	movwf	3988,c	;volatile
  4546                           
  4547                           ;INI.c: 37:     RCONbits.IPEN = 1;
  4548  0012D2  8ED0               	bsf	4048,7,c	;volatile
  4549                           
  4550                           ;INI.c: 40:     DetectorLedRadar.Flags.inicjalizacja = 1;
  4551  0012D4  8641               	bsf	_DetectorLedRadar,3,c
  4552  0012D6  0012               	return		;funcret
  4553  0012D8                     __end_of_INI_OUTPUT:
  4554                           	opt callstack 0
  4555                           
  4556 ;; *************** function _INI_LED_Start *****************
  4557 ;; Defined at:
  4558 ;;		line 231 in file "LED.c"
  4559 ;; Parameters:    Size  Location     Type
  4560 ;;		None
  4561 ;; Auto vars:     Size  Location     Type
  4562 ;;		None
  4563 ;; Return value:  Size  Location     Type
  4564 ;;                  1    wreg      void 
  4565 ;; Registers used:
  4566 ;;		wreg, status,2, status,0, cstack
  4567 ;; Tracked objects:
  4568 ;;		On entry : 0/0
  4569 ;;		On exit  : 0/0
  4570 ;;		Unchanged: 0/0
  4571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4575 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4576 ;;Total ram usage:        0 bytes
  4577 ;; Hardware stack levels used:    1
  4578 ;; Hardware stack levels required when called:    4
  4579 ;; This function calls:
  4580 ;;		_LED_Control
  4581 ;; This function is called by:
  4582 ;;		_INI_All
  4583 ;; This function uses a non-reentrant model
  4584 ;;
  4585                           
  4586                           	psect	text36
  4587  00119E                     __ptext36:
  4588                           	opt callstack 0
  4589  00119E                     _INI_LED_Start:
  4590                           	opt callstack 25
  4591                           
  4592                           ;LED.c: 233:     TRISA = TRISA & 0b00000001;
  4593                           
  4594                           ;incstack = 0
  4595  00119E  5092               	movf	3986,w,c	;volatile
  4596  0011A0  0B01               	andlw	1
  4597  0011A2  6E92               	movwf	3986,c	;volatile
  4598                           
  4599                           ;LED.c: 234:     TRISB = TRISB & 0b11111100;
  4600  0011A4  5093               	movf	3987,w,c	;volatile
  4601  0011A6  0BFC               	andlw	252
  4602  0011A8  6E93               	movwf	3987,c	;volatile
  4603                           
  4604                           ;LED.c: 235:     TRISE = TRISE & 0b11111000;
  4605  0011AA  5096               	movf	3990,w,c	;volatile
  4606  0011AC  0BF8               	andlw	248
  4607  0011AE  6E96               	movwf	3990,c	;volatile
  4608                           
  4609                           ;LED.c: 236:     TRISD = TRISD & 0b00000000;
  4610  0011B0  0E00               	movlw	0
  4611  0011B2  6E95               	movwf	3989,c	;volatile
  4612                           
  4613                           ;LED.c: 237:     LED_Control(RED,0b0000000000);
  4614  0011B4  0E00               	movlw	0
  4615  0011B6  6E07               	movwf	LED_Control@diode+1,c
  4616  0011B8  0E00               	movlw	0
  4617  0011BA  6E06               	movwf	LED_Control@diode,c
  4618  0011BC  0E00               	movlw	0
  4619  0011BE  EC45  F004         	call	_LED_Control
  4620                           
  4621                           ;LED.c: 238:     LED_Control(GREEN,0b0000000000);
  4622  0011C2  0E00               	movlw	0
  4623  0011C4  6E07               	movwf	LED_Control@diode+1,c
  4624  0011C6  0E00               	movlw	0
  4625  0011C8  6E06               	movwf	LED_Control@diode,c
  4626  0011CA  0E01               	movlw	1
  4627  0011CC  EC45  F004         	call	_LED_Control
  4628  0011D0  0012               	return		;funcret
  4629  0011D2                     __end_of_INI_LED_Start:
  4630                           	opt callstack 0
  4631                           
  4632 ;; *************** function _LED_Control *****************
  4633 ;; Defined at:
  4634 ;;		line 256 in file "LED.c"
  4635 ;; Parameters:    Size  Location     Type
  4636 ;;  color           1    wreg     enum E10644
  4637 ;;  diode           2    5[COMRAM] unsigned int 
  4638 ;; Auto vars:     Size  Location     Type
  4639 ;;  color           1    9[COMRAM] enum E10644
  4640 ;;  cos             2    0        unsigned int 
  4641 ;; Return value:  Size  Location     Type
  4642 ;;                  1    wreg      unsigned char 
  4643 ;; Registers used:
  4644 ;;		wreg, status,2, status,0
  4645 ;; Tracked objects:
  4646 ;;		On entry : 0/0
  4647 ;;		On exit  : 0/0
  4648 ;;		Unchanged: 0/0
  4649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4650 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4651 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4653 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4654 ;;Total ram usage:        5 bytes
  4655 ;; Hardware stack levels used:    1
  4656 ;; Hardware stack levels required when called:    3
  4657 ;; This function calls:
  4658 ;;		Nothing
  4659 ;; This function is called by:
  4660 ;;		_LED_Error
  4661 ;;		_LED_Update
  4662 ;;		_LED_Light_Pos
  4663 ;;		_INI_LED_Start
  4664 ;;		_LED_Clear
  4665 ;; This function uses a non-reentrant model
  4666 ;;
  4667                           
  4668                           	psect	text37
  4669  00088A                     __ptext37:
  4670                           	opt callstack 0
  4671  00088A                     _LED_Control:
  4672                           	opt callstack 24
  4673                           
  4674                           ;incstack = 0
  4675                           ;LED_Control@color stored from wreg
  4676  00088A  6E0A               	movwf	LED_Control@color,c
  4677                           
  4678                           ;LED.c: 259:     if(color == RED)
  4679  00088C  500A               	movf	LED_Control@color,w,c
  4680  00088E  A4D8               	btfss	status,2,c
  4681  000890  D050               	goto	l311
  4682                           
  4683                           ;LED.c: 260:     {;LED.c: 262:         if((diode & 0b0000000001)== 0b0000000001)
  4684  000892  A006               	btfss	LED_Control@diode,0,c
  4685  000894  D003               	goto	l2273
  4686                           
  4687                           ;LED.c: 263:         {;LED.c: 264:             LATD = LATD | ~0b11101111;
  4688  000896  508C               	movf	3980,w,c	;volatile
  4689  000898  0910               	iorlw	16
  4690  00089A  D002               	goto	L3
  4691  00089C                     l2273:
  4692                           
  4693                           ;LED.c: 267:         {;LED.c: 268:             LATD = LATD &0b11101111;
  4694  00089C  508C               	movf	3980,w,c	;volatile
  4695  00089E  0BEF               	andlw	239
  4696  0008A0                     L3:
  4697  0008A0  6E8C               	movwf	3980,c	;volatile
  4698                           
  4699                           ;LED.c: 271:         if((diode & 0b0000000010) == 0b0000000010)
  4700  0008A2  A206               	btfss	LED_Control@diode,1,c
  4701  0008A4  D003               	goto	l2279
  4702                           
  4703                           ;LED.c: 272:         {;LED.c: 273:             LATD = LATD | ~0b10111111;
  4704  0008A6  508C               	movf	3980,w,c	;volatile
  4705  0008A8  0940               	iorlw	64
  4706  0008AA  D002               	goto	L4
  4707  0008AC                     l2279:
  4708                           
  4709                           ;LED.c: 276:         {;LED.c: 277:             LATD = LATD & 0b10111111;
  4710  0008AC  508C               	movf	3980,w,c	;volatile
  4711  0008AE  0BBF               	andlw	191
  4712  0008B0                     L4:
  4713  0008B0  6E8C               	movwf	3980,c	;volatile
  4714                           
  4715                           ;LED.c: 280:         if((diode & 0b0000000100) == 0b0000000100)
  4716  0008B2  A406               	btfss	LED_Control@diode,2,c
  4717  0008B4  D003               	goto	l2285
  4718                           
  4719                           ;LED.c: 281:         {;LED.c: 282:             LATB = LATB | ~0b11111110;
  4720  0008B6  508A               	movf	3978,w,c	;volatile
  4721  0008B8  0901               	iorlw	1
  4722  0008BA  D002               	goto	L5
  4723  0008BC                     l2285:
  4724                           
  4725                           ;LED.c: 285:         {;LED.c: 286:             LATB = LATB & 0b11111110;
  4726  0008BC  508A               	movf	3978,w,c	;volatile
  4727  0008BE  0BFE               	andlw	254
  4728  0008C0                     L5:
  4729  0008C0  6E8A               	movwf	3978,c	;volatile
  4730                           
  4731                           ;LED.c: 290:         if((diode & 0b0000001000) == 0b0000001000)
  4732  0008C2  A606               	btfss	LED_Control@diode,3,c
  4733  0008C4  D003               	goto	l2291
  4734                           
  4735                           ;LED.c: 291:         {;LED.c: 292:             LATA = LATA | ~0b11111101;
  4736  0008C6  5089               	movf	3977,w,c	;volatile
  4737  0008C8  0902               	iorlw	2
  4738  0008CA  D002               	goto	L6
  4739  0008CC                     l2291:
  4740                           
  4741                           ;LED.c: 295:         {;LED.c: 296:             LATA = LATA & 0b11111101;
  4742  0008CC  5089               	movf	3977,w,c	;volatile
  4743  0008CE  0BFD               	andlw	253
  4744  0008D0                     L6:
  4745  0008D0  6E89               	movwf	3977,c	;volatile
  4746                           
  4747                           ;LED.c: 300:         if((diode & 0b0000010000) == 0b0000010000)
  4748  0008D2  A806               	btfss	LED_Control@diode,4,c
  4749  0008D4  D003               	goto	l2297
  4750                           
  4751                           ;LED.c: 301:         {;LED.c: 302:             LATA = LATA | ~0b11110111;
  4752  0008D6  5089               	movf	3977,w,c	;volatile
  4753  0008D8  0908               	iorlw	8
  4754  0008DA  D002               	goto	L7
  4755  0008DC                     l2297:
  4756                           
  4757                           ;LED.c: 305:         {;LED.c: 306:             LATA = LATA & 0b11110111;
  4758  0008DC  5089               	movf	3977,w,c	;volatile
  4759  0008DE  0BF7               	andlw	247
  4760  0008E0                     L7:
  4761  0008E0  6E89               	movwf	3977,c	;volatile
  4762                           
  4763                           ;LED.c: 310:         if((diode & 0b0000100000) == 0b0000100000)
  4764  0008E2  AA06               	btfss	LED_Control@diode,5,c
  4765  0008E4  D003               	goto	l2303
  4766                           
  4767                           ;LED.c: 311:         {;LED.c: 312:             LATA = LATA | ~0b11011111;
  4768  0008E6  5089               	movf	3977,w,c	;volatile
  4769  0008E8  0920               	iorlw	32
  4770  0008EA  D002               	goto	L8
  4771  0008EC                     l2303:
  4772                           
  4773                           ;LED.c: 315:         {;LED.c: 316:             LATA = LATA & 0b11011111;
  4774  0008EC  5089               	movf	3977,w,c	;volatile
  4775  0008EE  0BDF               	andlw	223
  4776  0008F0                     L8:
  4777  0008F0  6E89               	movwf	3977,c	;volatile
  4778                           
  4779                           ;LED.c: 319:         if((diode & 0b0001000000) == 0b0001000000)
  4780  0008F2  AC06               	btfss	LED_Control@diode,6,c
  4781  0008F4  D003               	goto	l2309
  4782                           
  4783                           ;LED.c: 320:         {;LED.c: 321:             LATE = LATE | ~0b11111101;
  4784  0008F6  508D               	movf	3981,w,c	;volatile
  4785  0008F8  0902               	iorlw	2
  4786  0008FA  D002               	goto	L9
  4787  0008FC                     l2309:
  4788                           
  4789                           ;LED.c: 324:         {;LED.c: 325:             LATE = LATE & 0b11111101;
  4790  0008FC  508D               	movf	3981,w,c	;volatile
  4791  0008FE  0BFD               	andlw	253
  4792  000900                     L9:
  4793  000900  6E8D               	movwf	3981,c	;volatile
  4794                           
  4795                           ;LED.c: 328:         if((diode & 0b0010000000) == 0b0010000000)
  4796  000902  AE06               	btfss	LED_Control@diode,7,c
  4797  000904  D003               	goto	l2315
  4798                           
  4799                           ;LED.c: 329:         {;LED.c: 330:             LATA = LATA | ~0b01111111;
  4800  000906  5089               	movf	3977,w,c	;volatile
  4801  000908  0980               	iorlw	128
  4802  00090A  D002               	goto	L10
  4803  00090C                     l2315:
  4804                           
  4805                           ;LED.c: 333:         {;LED.c: 334:             LATA = LATA & 0b01111111;
  4806  00090C  5089               	movf	3977,w,c	;volatile
  4807  00090E  0B7F               	andlw	127
  4808  000910                     L10:
  4809  000910  6E89               	movwf	3977,c	;volatile
  4810                           
  4811                           ;LED.c: 338:         if((diode & 0b0100000000) == 0b0100000000)
  4812  000912  A007               	btfss	LED_Control@diode+1,0,c
  4813  000914  D003               	goto	l2321
  4814                           
  4815                           ;LED.c: 339:         {;LED.c: 340:             LATD = LATD | ~0b11111110;
  4816  000916  508C               	movf	3980,w,c	;volatile
  4817  000918  0901               	iorlw	1
  4818  00091A  D002               	goto	L11
  4819  00091C                     l2321:
  4820                           
  4821                           ;LED.c: 343:         {;LED.c: 344:             LATD = LATD & 0b11111110;
  4822  00091C  508C               	movf	3980,w,c	;volatile
  4823  00091E  0BFE               	andlw	254
  4824  000920                     L11:
  4825  000920  6E8C               	movwf	3980,c	;volatile
  4826                           
  4827                           ;LED.c: 347:         if((diode & 0b1000000000) == 0b1000000000)
  4828  000922  A207               	btfss	LED_Control@diode+1,1,c
  4829  000924  D003               	goto	l2327
  4830                           
  4831                           ;LED.c: 348:         {;LED.c: 349:             LATD = LATD | ~0b11111011;
  4832  000926  508C               	movf	3980,w,c	;volatile
  4833  000928  0904               	iorlw	4
  4834  00092A  D002               	goto	L12
  4835  00092C                     l2327:
  4836                           
  4837                           ;LED.c: 352:         {;LED.c: 353:             LATD = LATD & 0b11111011;
  4838  00092C  508C               	movf	3980,w,c	;volatile
  4839  00092E  0BFB               	andlw	251
  4840  000930                     L12:
  4841  000930  6E8C               	movwf	3980,c	;volatile
  4842  000932                     l311:
  4843                           
  4844                           ;LED.c: 358:     if(color == GREEN)
  4845  000932  040A               	decf	LED_Control@color,w,c
  4846  000934  A4D8               	btfss	status,2,c
  4847  000936  0012               	return	
  4848                           
  4849                           ;LED.c: 359:     {;LED.c: 361:         if((diode & 0b0000000001) == 0b0000000001)
  4850  000938  A006               	btfss	LED_Control@diode,0,c
  4851  00093A  D003               	goto	l2333
  4852                           
  4853                           ;LED.c: 362:         {;LED.c: 363:             LATD = LATD | ~0b11011111;
  4854  00093C  508C               	movf	3980,w,c	;volatile
  4855  00093E  0920               	iorlw	32
  4856  000940  D002               	goto	L13
  4857  000942                     l2333:
  4858                           
  4859                           ;LED.c: 366:         {;LED.c: 367:             LATD = LATD & 0b11011111;
  4860  000942  508C               	movf	3980,w,c	;volatile
  4861  000944  0BDF               	andlw	223
  4862  000946                     L13:
  4863  000946  6E8C               	movwf	3980,c	;volatile
  4864                           
  4865                           ;LED.c: 371:         if((diode & 0b0000000010) == 0b0000000010)
  4866  000948  A206               	btfss	LED_Control@diode,1,c
  4867  00094A  D003               	goto	l2339
  4868                           
  4869                           ;LED.c: 372:         {;LED.c: 373:             LATD = LATD | ~0b01111111;
  4870  00094C  508C               	movf	3980,w,c	;volatile
  4871  00094E  0980               	iorlw	128
  4872  000950  D002               	goto	L14
  4873  000952                     l2339:
  4874                           
  4875                           ;LED.c: 376:         {;LED.c: 377:             LATD = LATD & 0b01111111;
  4876  000952  508C               	movf	3980,w,c	;volatile
  4877  000954  0B7F               	andlw	127
  4878  000956                     L14:
  4879  000956  6E8C               	movwf	3980,c	;volatile
  4880                           
  4881                           ;LED.c: 381:         if((diode & 0b0000000100) == 0b0000000100)
  4882  000958  A406               	btfss	LED_Control@diode,2,c
  4883  00095A  D003               	goto	l2345
  4884                           
  4885                           ;LED.c: 382:         {;LED.c: 383:             LATB = LATB | ~0b11111101;
  4886  00095C  508A               	movf	3978,w,c	;volatile
  4887  00095E  0902               	iorlw	2
  4888  000960  D002               	goto	L15
  4889  000962                     l2345:
  4890                           
  4891                           ;LED.c: 386:         {;LED.c: 387:             LATB = LATB & 0b11111101;
  4892  000962  508A               	movf	3978,w,c	;volatile
  4893  000964  0BFD               	andlw	253
  4894  000966                     L15:
  4895  000966  6E8A               	movwf	3978,c	;volatile
  4896                           
  4897                           ;LED.c: 390:         if((diode & 0b0000001000) == 0b0000001000)
  4898  000968  A606               	btfss	LED_Control@diode,3,c
  4899  00096A  D003               	goto	l2351
  4900                           
  4901                           ;LED.c: 391:         {;LED.c: 392:             LATA = LATA | ~0b11111011;
  4902  00096C  5089               	movf	3977,w,c	;volatile
  4903  00096E  0904               	iorlw	4
  4904  000970  D002               	goto	L16
  4905  000972                     l2351:
  4906                           
  4907                           ;LED.c: 395:         {;LED.c: 396:             LATA = LATA & 0b11111011;
  4908  000972  5089               	movf	3977,w,c	;volatile
  4909  000974  0BFB               	andlw	251
  4910  000976                     L16:
  4911  000976  6E89               	movwf	3977,c	;volatile
  4912                           
  4913                           ;LED.c: 400:         if((diode & 0b0000010000) == 0b0000010000)
  4914  000978  A806               	btfss	LED_Control@diode,4,c
  4915  00097A  D003               	goto	l2357
  4916                           
  4917                           ;LED.c: 401:         {;LED.c: 402:             LATA = LATA | ~0b11101111;
  4918  00097C  5089               	movf	3977,w,c	;volatile
  4919  00097E  0910               	iorlw	16
  4920  000980  D002               	goto	L17
  4921  000982                     l2357:
  4922                           
  4923                           ;LED.c: 405:         {;LED.c: 406:             LATA = LATA & 0b11101111;
  4924  000982  5089               	movf	3977,w,c	;volatile
  4925  000984  0BEF               	andlw	239
  4926  000986                     L17:
  4927  000986  6E89               	movwf	3977,c	;volatile
  4928                           
  4929                           ;LED.c: 410:         if((diode & 0b0000100000) == 0b0000100000)
  4930  000988  AA06               	btfss	LED_Control@diode,5,c
  4931  00098A  D003               	goto	l2363
  4932                           
  4933                           ;LED.c: 411:         {;LED.c: 412:             LATE = LATE | ~0b11111110;
  4934  00098C  508D               	movf	3981,w,c	;volatile
  4935  00098E  0901               	iorlw	1
  4936  000990  D002               	goto	L18
  4937  000992                     l2363:
  4938                           
  4939                           ;LED.c: 415:         {;LED.c: 416:             LATE = LATE & 0b11111110;
  4940  000992  508D               	movf	3981,w,c	;volatile
  4941  000994  0BFE               	andlw	254
  4942  000996                     L18:
  4943  000996  6E8D               	movwf	3981,c	;volatile
  4944                           
  4945                           ;LED.c: 420:         if((diode & 0b0001000000) == 0b0001000000)
  4946  000998  AC06               	btfss	LED_Control@diode,6,c
  4947  00099A  D003               	goto	l2369
  4948                           
  4949                           ;LED.c: 421:         {;LED.c: 422:             LATE = LATE | ~0b11111011;
  4950  00099C  508D               	movf	3981,w,c	;volatile
  4951  00099E  0904               	iorlw	4
  4952  0009A0  D002               	goto	L19
  4953  0009A2                     l2369:
  4954                           
  4955                           ;LED.c: 425:         {;LED.c: 426:             LATE = LATE & 0b11111011;
  4956  0009A2  508D               	movf	3981,w,c	;volatile
  4957  0009A4  0BFB               	andlw	251
  4958  0009A6                     L19:
  4959  0009A6  6E8D               	movwf	3981,c	;volatile
  4960                           
  4961                           ;LED.c: 429:         if((diode & 0b0010000000) == 0b0010000000)
  4962  0009A8  AE06               	btfss	LED_Control@diode,7,c
  4963  0009AA  D003               	goto	l2375
  4964                           
  4965                           ;LED.c: 430:         {;LED.c: 431:             LATA = LATA | ~0b10111111;
  4966  0009AC  5089               	movf	3977,w,c	;volatile
  4967  0009AE  0940               	iorlw	64
  4968  0009B0  D002               	goto	L20
  4969  0009B2                     l2375:
  4970                           
  4971                           ;LED.c: 434:         {;LED.c: 435:             LATA = LATA & 0b10111111;
  4972  0009B2  5089               	movf	3977,w,c	;volatile
  4973  0009B4  0BBF               	andlw	191
  4974  0009B6                     L20:
  4975  0009B6  6E89               	movwf	3977,c	;volatile
  4976                           
  4977                           ;LED.c: 438:         if((diode & 0b0100000000) == 0b0100000000)
  4978  0009B8  A007               	btfss	LED_Control@diode+1,0,c
  4979  0009BA  D003               	goto	l2381
  4980                           
  4981                           ;LED.c: 439:         {;LED.c: 440:             LATD = LATD | ~0b11111101;
  4982  0009BC  508C               	movf	3980,w,c	;volatile
  4983  0009BE  0902               	iorlw	2
  4984  0009C0  D002               	goto	L21
  4985  0009C2                     l2381:
  4986                           
  4987                           ;LED.c: 443:         {;LED.c: 444:             LATD = LATD & 0b11111101;
  4988  0009C2  508C               	movf	3980,w,c	;volatile
  4989  0009C4  0BFD               	andlw	253
  4990  0009C6                     L21:
  4991  0009C6  6E8C               	movwf	3980,c	;volatile
  4992                           
  4993                           ;LED.c: 447:         if((diode & 0b1000000000) == 0b1000000000)
  4994  0009C8  A207               	btfss	LED_Control@diode+1,1,c
  4995  0009CA  D004               	goto	l2387
  4996                           
  4997                           ;LED.c: 448:         {;LED.c: 449:             LATD = LATD | ~0b11110111;
  4998  0009CC  508C               	movf	3980,w,c	;volatile
  4999  0009CE  0908               	iorlw	8
  5000  0009D0  6E8C               	movwf	3980,c	;volatile
  5001                           
  5002                           ;LED.c: 450:         }
  5003  0009D2  0012               	return	
  5004  0009D4                     l2387:
  5005                           
  5006                           ;LED.c: 452:         {;LED.c: 453:             LATD = LATD &0b11110111;
  5007  0009D4  508C               	movf	3980,w,c	;volatile
  5008  0009D6  0BF7               	andlw	247
  5009  0009D8  6E8C               	movwf	3980,c	;volatile
  5010  0009DA  0012               	return		;funcret
  5011  0009DC                     __end_of_LED_Control:
  5012                           	opt callstack 0
  5013                           
  5014 ;; *************** function _INI_GlobalInterrupt *****************
  5015 ;; Defined at:
  5016 ;;		line 74 in file "INI.c"
  5017 ;; Parameters:    Size  Location     Type
  5018 ;;		None
  5019 ;; Auto vars:     Size  Location     Type
  5020 ;;		None
  5021 ;; Return value:  Size  Location     Type
  5022 ;;                  1    wreg      void 
  5023 ;; Registers used:
  5024 ;;		None
  5025 ;; Tracked objects:
  5026 ;;		On entry : 0/0
  5027 ;;		On exit  : 0/0
  5028 ;;		Unchanged: 0/0
  5029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5033 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5034 ;;Total ram usage:        0 bytes
  5035 ;; Hardware stack levels used:    1
  5036 ;; Hardware stack levels required when called:    3
  5037 ;; This function calls:
  5038 ;;		Nothing
  5039 ;; This function is called by:
  5040 ;;		_INI_All
  5041 ;; This function uses a non-reentrant model
  5042 ;;
  5043                           
  5044                           	psect	text38
  5045  00130A                     __ptext38:
  5046                           	opt callstack 0
  5047  00130A                     _INI_GlobalInterrupt:
  5048                           	opt callstack 26
  5049                           
  5050                           ;INI.c: 76: INTCONbits.GIEH=1;
  5051                           
  5052                           ;incstack = 0
  5053  00130A  8EF2               	bsf	4082,7,c	;volatile
  5054                           
  5055                           ;INI.c: 77: INTCONbits.GIEL=1;
  5056  00130C  8CF2               	bsf	4082,6,c	;volatile
  5057                           
  5058                           ;INI.c: 78: RCONbits.IPEN=1;
  5059  00130E  8ED0               	bsf	4048,7,c	;volatile
  5060                           
  5061                           ;INI.c: 79: IPEN =1;
  5062  001310  8ED0               	bsf	4048,7,c	;volatile
  5063                           
  5064                           ;INI.c: 81: PEIE=1;
  5065  001312  8CF2               	bsf	4082,6,c	;volatile
  5066                           
  5067                           ;INI.c: 82: TMR1IP = 0;
  5068  001314  909F               	bcf	3999,0,c	;volatile
  5069  001316  0012               	return		;funcret
  5070  001318                     __end_of_INI_GlobalInterrupt:
  5071                           	opt callstack 0
  5072                           
  5073 ;; *************** function _CAN_Setup *****************
  5074 ;; Defined at:
  5075 ;;		line 22 in file "CAN.c"
  5076 ;; Parameters:    Size  Location     Type
  5077 ;;		None
  5078 ;; Auto vars:     Size  Location     Type
  5079 ;;		None
  5080 ;; Return value:  Size  Location     Type
  5081 ;;                  1    wreg      void 
  5082 ;; Registers used:
  5083 ;;		wreg, status,2, status,0, cstack
  5084 ;; Tracked objects:
  5085 ;;		On entry : 0/0
  5086 ;;		On exit  : 0/0
  5087 ;;		Unchanged: 0/0
  5088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5091 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5092 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5093 ;;Total ram usage:        1 bytes
  5094 ;; Hardware stack levels used:    1
  5095 ;; Hardware stack levels required when called:    4
  5096 ;; This function calls:
  5097 ;;		_CAN_SetupClock
  5098 ;;		_CAN_SetupMask
  5099 ;; This function is called by:
  5100 ;;		_INI_All
  5101 ;; This function uses a non-reentrant model
  5102 ;;
  5103                           
  5104                           	psect	text39
  5105  000E40                     __ptext39:
  5106                           	opt callstack 0
  5107  000E40                     _CAN_Setup:
  5108                           	opt callstack 25
  5109                           
  5110                           ;CAN.c: 27:     CANCON = 0x80;
  5111                           
  5112                           ;incstack = 0
  5113  000E40  0E80               	movlw	128
  5114  000E42  6E6F               	movwf	3951,c	;volatile
  5115  000E44                     l2693:
  5116                           
  5117                           ;CAN.c: 28:     while((CANSTAT & 0xE0)!=0x80)
  5118  000E44  506E               	movf	3950,w,c	;volatile
  5119  000E46  0BE0               	andlw	224
  5120  000E48  0A80               	xorlw	128
  5121  000E4A  A4D8               	btfss	status,2,c
  5122  000E4C  D7FB               	goto	l2693
  5123                           
  5124                           ;CAN.c: 33:     BSEL0 = 0;
  5125  000E4E  0E00               	movlw	0
  5126  000E50  010D               	movlb	13	; () banked
  5127  000E52  6FF8               	movwf	248,b	;volatile
  5128                           
  5129                           ;CAN.c: 34:     TXB0CON = 0;
  5130  000E54  0E00               	movlw	0
  5131  000E56  010F               	movlb	15	; () banked
  5132  000E58  6F40               	movwf	64,b	;volatile
  5133                           
  5134                           ;CAN.c: 35:     RXB0CON = 0;
  5135  000E5A  0E00               	movlw	0
  5136  000E5C  6E60               	movwf	3936,c	;volatile
  5137                           
  5138                           ;CAN.c: 36:     RXB1CON = 0;
  5139  000E5E  0E00               	movlw	0
  5140  000E60  6F50               	movwf	80,b	;volatile
  5141                           
  5142                           ;CAN.c: 37:     B0CON = 0;
  5143  000E62  0E00               	movlw	0
  5144  000E64  010E               	movlb	14	; () banked
  5145  000E66  6F20               	movwf	32,b	;volatile
  5146                           
  5147                           ;CAN.c: 38:     B1CON = 0;
  5148  000E68  0E00               	movlw	0
  5149  000E6A  6F30               	movwf	48,b	;volatile
  5150                           
  5151                           ;CAN.c: 39:     PIE3 = 0;
  5152  000E6C  0E00               	movlw	0
  5153  000E6E  6EA3               	movwf	4003,c	;volatile
  5154                           
  5155                           ; BSR set to: 14
  5156                           ;CAN.c: 40:     IPR3 = 0xFF;
  5157  000E70  68A5               	setf	4005,c	;volatile
  5158                           
  5159                           ;CAN.c: 41:     PIR3 = 0x00;
  5160  000E72  0E00               	movlw	0
  5161  000E74  6EA4               	movwf	4004,c	;volatile
  5162                           
  5163                           ;CAN.c: 42:     BIE0 = 0;
  5164  000E76  0E00               	movlw	0
  5165  000E78  010D               	movlb	13	; () banked
  5166  000E7A  6FFA               	movwf	250,b	;volatile
  5167                           
  5168                           ;CAN.c: 45:     ECANCON = 0x90;
  5169  000E7C  0E90               	movlw	144
  5170  000E7E  6E77               	movwf	3959,c	;volatile
  5171                           
  5172                           ; BSR set to: 13
  5173                           ;CAN.c: 48:     CAN_SetupClock();
  5174  000E80  EC15  F009         	call	_CAN_SetupClock	;wreg free
  5175                           
  5176                           ;CAN.c: 51:     CAN_SetupMask();
  5177  000E84  ECEE  F006         	call	_CAN_SetupMask	;wreg free
  5178                           
  5179                           ;CAN.c: 53:     CIOCON = 0xff;
  5180  000E88  6873               	setf	3955,c	;volatile
  5181                           
  5182                           ;CAN.c: 59:     CANCON = 0x00;
  5183  000E8A  0E00               	movlw	0
  5184  000E8C  6E6F               	movwf	3951,c	;volatile
  5185  000E8E                     l2707:
  5186                           
  5187                           ;CAN.c: 60:     while((CANSTAT & 0xE0) != 0x00)
  5188  000E8E  CF6E F006          	movff	3950,??_CAN_Setup	;volatile
  5189  000E92  0EE0               	movlw	224
  5190  000E94  1606               	andwf	??_CAN_Setup,f,c
  5191  000E96  B4D8               	btfsc	status,2,c
  5192  000E98  0012               	return	
  5193  000E9A  D7F9               	goto	l2707
  5194  000E9C                     __end_of_CAN_Setup:
  5195                           	opt callstack 0
  5196                           
  5197 ;; *************** function _CAN_SetupMask *****************
  5198 ;; Defined at:
  5199 ;;		line 81 in file "CAN.c"
  5200 ;; Parameters:    Size  Location     Type
  5201 ;;		None
  5202 ;; Auto vars:     Size  Location     Type
  5203 ;;		None
  5204 ;; Return value:  Size  Location     Type
  5205 ;;                  1    wreg      void 
  5206 ;; Registers used:
  5207 ;;		wreg, status,2, status,0
  5208 ;; Tracked objects:
  5209 ;;		On entry : 0/0
  5210 ;;		On exit  : 0/0
  5211 ;;		Unchanged: 0/0
  5212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5216 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5217 ;;Total ram usage:        0 bytes
  5218 ;; Hardware stack levels used:    1
  5219 ;; Hardware stack levels required when called:    3
  5220 ;; This function calls:
  5221 ;;		Nothing
  5222 ;; This function is called by:
  5223 ;;		_CAN_Setup
  5224 ;; This function uses a non-reentrant model
  5225 ;;
  5226                           
  5227                           	psect	text40
  5228  000DDC                     __ptext40:
  5229                           	opt callstack 0
  5230  000DDC                     _CAN_SetupMask:
  5231                           	opt callstack 25
  5232                           
  5233                           ;CAN.c: 83:     MSEL0 = 0x50;
  5234                           
  5235                           ;incstack = 0
  5236  000DDC  0E50               	movlw	80
  5237  000DDE  010D               	movlb	13	; () banked
  5238  000DE0  6FF0               	movwf	240,b	;volatile
  5239                           
  5240                           ;CAN.c: 84:     MSEL1 = 0x55;
  5241  000DE2  0E55               	movlw	85
  5242  000DE4  6FF1               	movwf	241,b	;volatile
  5243                           
  5244                           ;CAN.c: 85:     MSEL2 = 0x55;
  5245  000DE6  0E55               	movlw	85
  5246  000DE8  6FF2               	movwf	242,b	;volatile
  5247                           
  5248                           ;CAN.c: 86:     MSEL3 = 0x55;
  5249  000DEA  0E55               	movlw	85
  5250  000DEC  6FF3               	movwf	243,b	;volatile
  5251                           
  5252                           ;CAN.c: 89:     RXM0SIDH = 0b00000000;
  5253  000DEE  0E00               	movlw	0
  5254  000DF0  010F               	movlb	15	; () banked
  5255  000DF2  6F18               	movwf	24,b	;volatile
  5256                           
  5257                           ;CAN.c: 90:     RXM0SIDL = 0b00001011;
  5258  000DF4  0E0B               	movlw	11
  5259  000DF6  6F19               	movwf	25,b	;volatile
  5260                           
  5261                           ; BSR set to: 15
  5262                           ;CAN.c: 91:     RXM0EIDH = 0xFF;
  5263  000DF8  691A               	setf	26,b	;volatile
  5264                           
  5265                           ; BSR set to: 15
  5266                           ;CAN.c: 92:     RXM0EIDL = 0xFF;
  5267  000DFA  691B               	setf	27,b	;volatile
  5268                           
  5269                           ; BSR set to: 15
  5270                           ;CAN.c: 95:     RXM1SIDH = 0xFF;
  5271  000DFC  691C               	setf	28,b	;volatile
  5272                           
  5273                           ; BSR set to: 15
  5274                           ;CAN.c: 96:     RXM1SIDL = 0xFF;
  5275  000DFE  691D               	setf	29,b	;volatile
  5276                           
  5277                           ;CAN.c: 97:     RXM1EIDH = 0;
  5278  000E00  0E00               	movlw	0
  5279  000E02  6F1E               	movwf	30,b	;volatile
  5280                           
  5281                           ;CAN.c: 98:     RXM1EIDL = 0;
  5282  000E04  0E00               	movlw	0
  5283  000E06  6F1F               	movwf	31,b	;volatile
  5284                           
  5285                           ;CAN.c: 101:     RXF0SIDH = 0x00;
  5286  000E08  0E00               	movlw	0
  5287  000E0A  6F00               	movwf	0,b	;volatile
  5288                           
  5289                           ;CAN.c: 102:     RXF0SIDL = 0x01;
  5290  000E0C  0E01               	movlw	1
  5291  000E0E  6F01               	movwf	1,b	;volatile
  5292                           
  5293                           ; BSR set to: 15
  5294                           ;CAN.c: 103:     RXF0SIDLbits.EXIDEN = 1;
  5295  000E10  8701               	bsf	1,3,b	;volatile
  5296                           
  5297                           ;CAN.c: 104:     RXF0EIDH = (BYTE)(DaneCan.adresCAN>>8);
  5298  000E12  5040               	movf	_DaneCan+3,w,c
  5299  000E14  6F02               	movwf	2,b	;volatile
  5300                           
  5301                           ; BSR set to: 15
  5302                           ;CAN.c: 105:  RXF0EIDH |= 0x40;
  5303  000E16  8D02               	bsf	2,6,b	;volatile
  5304                           
  5305                           ; BSR set to: 15
  5306                           ;CAN.c: 106:     RXF0EIDL = (BYTE)DaneCan.adresCAN;
  5307  000E18  C03F  FF03         	movff	_DaneCan+2,3843	;volatile
  5308                           
  5309                           ; BSR set to: 15
  5310                           ;CAN.c: 108:     RXF1SIDH = 0x00;
  5311  000E1C  0E00               	movlw	0
  5312  000E1E  6F04               	movwf	4,b	;volatile
  5313                           
  5314                           ; BSR set to: 15
  5315                           ;CAN.c: 109:     RXF1SIDL = 0x01;
  5316  000E20  0E01               	movlw	1
  5317  000E22  6F05               	movwf	5,b	;volatile
  5318                           
  5319                           ; BSR set to: 15
  5320                           ;CAN.c: 110:     RXF1SIDLbits.EXIDEN = 1;
  5321  000E24  8705               	bsf	5,3,b	;volatile
  5322                           
  5323                           ; BSR set to: 15
  5324                           ;CAN.c: 111:     RXF1EIDH = 0x7F;
  5325  000E26  0E7F               	movlw	127
  5326  000E28  6F06               	movwf	6,b	;volatile
  5327                           
  5328                           ; BSR set to: 15
  5329                           ;CAN.c: 112:     RXF1EIDL = 0xFF;
  5330  000E2A  6907               	setf	7,b	;volatile
  5331                           
  5332                           ; BSR set to: 15
  5333                           ;CAN.c: 115:     RXF2SIDH = 0;
  5334  000E2C  0E00               	movlw	0
  5335  000E2E  6F08               	movwf	8,b	;volatile
  5336                           
  5337                           ; BSR set to: 15
  5338                           ;CAN.c: 116:     RXF2SIDL = 0x20;
  5339  000E30  0E20               	movlw	32
  5340  000E32  6F09               	movwf	9,b	;volatile
  5341                           
  5342                           ; BSR set to: 15
  5343                           ;CAN.c: 117:     RXF2SIDLbits.EXIDEN = 1;
  5344  000E34  8709               	bsf	9,3,b	;volatile
  5345                           
  5346                           ; BSR set to: 15
  5347                           ;CAN.c: 118:     RXF2EIDH = 0;
  5348  000E36  0E00               	movlw	0
  5349  000E38  6F0A               	movwf	10,b	;volatile
  5350                           
  5351                           ; BSR set to: 15
  5352                           ;CAN.c: 119:     RXF2EIDL = 0;
  5353  000E3A  0E00               	movlw	0
  5354  000E3C  6F0B               	movwf	11,b	;volatile
  5355                           
  5356                           ; BSR set to: 15
  5357  000E3E  0012               	return		;funcret
  5358  000E40                     __end_of_CAN_SetupMask:
  5359                           	opt callstack 0
  5360                           
  5361 ;; *************** function _CAN_SetupClock *****************
  5362 ;; Defined at:
  5363 ;;		line 136 in file "CAN.c"
  5364 ;; Parameters:    Size  Location     Type
  5365 ;;		None
  5366 ;; Auto vars:     Size  Location     Type
  5367 ;;		None
  5368 ;; Return value:  Size  Location     Type
  5369 ;;                  1    wreg      void 
  5370 ;; Registers used:
  5371 ;;		None
  5372 ;; Tracked objects:
  5373 ;;		On entry : 0/0
  5374 ;;		On exit  : 0/0
  5375 ;;		Unchanged: 0/0
  5376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5381 ;;Total ram usage:        0 bytes
  5382 ;; Hardware stack levels used:    1
  5383 ;; Hardware stack levels required when called:    3
  5384 ;; This function calls:
  5385 ;;		Nothing
  5386 ;; This function is called by:
  5387 ;;		_CAN_Setup
  5388 ;; This function uses a non-reentrant model
  5389 ;;
  5390                           
  5391                           	psect	text41
  5392  00122A                     __ptext41:
  5393                           	opt callstack 0
  5394  00122A                     _CAN_SetupClock:
  5395                           	opt callstack 25
  5396                           
  5397                           ;CAN.c: 138:     BRGCON1bits.BRP0 = (((32000000/4)/(2*20*50000))-1) & 0b000001;
  5398                           
  5399                           ; BSR set to: 15
  5400                           ;incstack = 0
  5401  00122A  8070               	bsf	3952,0,c	;volatile
  5402                           
  5403                           ;CAN.c: 139:     BRGCON1bits.BRP1 = ((((32000000/4)/(2*20*50000))-1) >> 1) & 0b000001;
  5404  00122C  8270               	bsf	3952,1,c	;volatile
  5405                           
  5406                           ;CAN.c: 140:     BRGCON1bits.BRP2 = ((((32000000/4)/(2*20*50000))-1) >> 2) & 0b000001;
  5407  00122E  9470               	bcf	3952,2,c	;volatile
  5408                           
  5409                           ;CAN.c: 141:     BRGCON1bits.BRP3 = ((((32000000/4)/(2*20*50000))-1) >> 3) & 0b000001;
  5410  001230  9670               	bcf	3952,3,c	;volatile
  5411                           
  5412                           ;CAN.c: 142:     BRGCON1bits.BRP4 = ((((32000000/4)/(2*20*50000))-1) >> 4) & 0b000001;
  5413  001232  9870               	bcf	3952,4,c	;volatile
  5414                           
  5415                           ;CAN.c: 143:     BRGCON1bits.BRP5 = ((((32000000/4)/(2*20*50000))-1) >> 5) & 0b000001;
  5416  001234  9A70               	bcf	3952,5,c	;volatile
  5417                           
  5418                           ;CAN.c: 145:     BRGCON1bits.SJW0 = 1;
  5419  001236  8C70               	bsf	3952,6,c	;volatile
  5420                           
  5421                           ;CAN.c: 146:     BRGCON1bits.SJW1 = 1;
  5422  001238  8E70               	bsf	3952,7,c	;volatile
  5423                           
  5424                           ;CAN.c: 148:     BRGCON2bits.SEG1PH0 = 1;
  5425  00123A  8671               	bsf	3953,3,c	;volatile
  5426                           
  5427                           ;CAN.c: 149:     BRGCON2bits.SEG1PH1 = 1;
  5428  00123C  8871               	bsf	3953,4,c	;volatile
  5429                           
  5430                           ;CAN.c: 150:     BRGCON2bits.SEG1PH2 = 1;
  5431  00123E  8A71               	bsf	3953,5,c	;volatile
  5432                           
  5433                           ;CAN.c: 152:     BRGCON2bits.PRSEG2 = 1;
  5434  001240  8471               	bsf	3953,2,c	;volatile
  5435                           
  5436                           ;CAN.c: 153:     BRGCON2bits.PRSEG1 = 0;
  5437  001242  9271               	bcf	3953,1,c	;volatile
  5438                           
  5439                           ;CAN.c: 154:     BRGCON2bits.PRSEG0 = 0;
  5440  001244  9071               	bcf	3953,0,c	;volatile
  5441                           
  5442                           ;CAN.c: 156:     BRGCON3bits.SEG2PH0 = 1;
  5443  001246  8072               	bsf	3954,0,c	;volatile
  5444                           
  5445                           ;CAN.c: 157:     BRGCON3bits.SEG2PH1 = 0;
  5446  001248  9272               	bcf	3954,1,c	;volatile
  5447                           
  5448                           ;CAN.c: 158:     BRGCON3bits.SEG2PH2 = 1;
  5449  00124A  8472               	bsf	3954,2,c	;volatile
  5450                           
  5451                           ;CAN.c: 160:     BRGCON2bits.SAM = 1;
  5452  00124C  8C71               	bsf	3953,6,c	;volatile
  5453                           
  5454                           ;CAN.c: 161:     BRGCON2bits.SEG2PHTS = 1;
  5455  00124E  8E71               	bsf	3953,7,c	;volatile
  5456  001250  0012               	return		;funcret
  5457  001252                     __end_of_CAN_SetupClock:
  5458                           	opt callstack 0
  5459                           
  5460 ;; *************** function _ISR_low *****************
  5461 ;; Defined at:
  5462 ;;		line 16 in file "ISR.c"
  5463 ;; Parameters:    Size  Location     Type
  5464 ;;		None
  5465 ;; Auto vars:     Size  Location     Type
  5466 ;;		None
  5467 ;; Return value:  Size  Location     Type
  5468 ;;                  1    wreg      void 
  5469 ;; Registers used:
  5470 ;;		wreg, status,2, status,0, cstack
  5471 ;; Tracked objects:
  5472 ;;		On entry : 0/0
  5473 ;;		On exit  : 0/0
  5474 ;;		Unchanged: 0/0
  5475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5478 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5479 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5480 ;;Total ram usage:        3 bytes
  5481 ;; Hardware stack levels used:    1
  5482 ;; Hardware stack levels required when called:    2
  5483 ;; This function calls:
  5484 ;;		_TMR1_Timer_reset
  5485 ;;		i1_TMR1_Update_flag_Set
  5486 ;; This function is called by:
  5487 ;;		Interrupt level 1
  5488 ;; This function uses a non-reentrant model
  5489 ;;
  5490                           
  5491                           	psect	intcodelo
  5492  000018                     __pintcodelo:
  5493                           	opt callstack 0
  5494  000018                     _ISR_low:
  5495                           	opt callstack 24
  5496                           
  5497                           ;incstack = 0
  5498  000018  8056               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  5499  00001A  CFD8 F003          	movff	status,??_ISR_low
  5500  00001E  CFE8 F004          	movff	wreg,??_ISR_low+1
  5501  000022  CFE0 F005          	movff	bsr,??_ISR_low+2
  5502                           
  5503                           ;ISR.c: 21:     if(TMR1IF==1)
  5504  000026  A09E               	btfss	3998,0,c	;volatile
  5505  000028  D011               	goto	i1l595
  5506                           
  5507                           ;ISR.c: 22:         {;ISR.c: 23:             TMR1_Timer_reset();
  5508  00002A  EC3C  F009         	call	_TMR1_Timer_reset	;wreg free
  5509                           
  5510                           ;ISR.c: 26:             static BYTE ramkaStanuU8=0;;ISR.c: 29:             TMR1_Update_f
      +                          lag_Set(1);
  5511  00002E  0E00               	movlw	0
  5512  000030  6E02               	movwf	i1TMR1_Update_flag_Set@a+1,c
  5513  000032  0E01               	movlw	1
  5514  000034  6E01               	movwf	i1TMR1_Update_flag_Set@a,c
  5515  000036  ECAA  F009         	call	i1_TMR1_Update_flag_Set	;wreg free
  5516                           
  5517                           ;ISR.c: 31:             DetectorLedRadar.Flags.obsluzWeWy = 1;
  5518  00003A  8041               	bsf	_DetectorLedRadar,0,c
  5519                           
  5520                           ;ISR.c: 33:             if(++ramkaStanuU8 > (2*10))
  5521  00003C  2A4A               	incf	ISR_low@ramkaStanuU8,f,c
  5522  00003E  0E14               	movlw	20
  5523  000040  644A               	cpfsgt	ISR_low@ramkaStanuU8,c
  5524  000042  D003               	goto	i1l3013
  5525                           
  5526                           ;ISR.c: 34:                 {;ISR.c: 35:                     ramkaStanuU8 = 0;
  5527  000044  0E00               	movlw	0
  5528  000046  6E4A               	movwf	ISR_low@ramkaStanuU8,c
  5529                           
  5530                           ;ISR.c: 36:                     DaneCan.Flags.wyslijRamkeStanu = 1;
  5531  000048  803D               	bsf	_DaneCan,0,c
  5532  00004A                     i1l3013:
  5533                           
  5534                           ;ISR.c: 41:             TMR1IF=0;
  5535  00004A  909E               	bcf	3998,0,c	;volatile
  5536  00004C                     i1l595:
  5537  00004C  C005  FFE0         	movff	??_ISR_low+2,bsr
  5538  000050  C004  FFE8         	movff	??_ISR_low+1,wreg
  5539  000054  C003  FFD8         	movff	??_ISR_low,status
  5540  000058  9056               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  5541  00005A  0010               	retfie	
  5542  00005C                     __end_of_ISR_low:
  5543                           	opt callstack 0
  5544                           
  5545 ;; *************** function i1_TMR1_Update_flag_Set *****************
  5546 ;; Defined at:
  5547 ;;		line 32 in file "TMR1.c"
  5548 ;; Parameters:    Size  Location     Type
  5549 ;;  a               2    0[COMRAM] unsigned int 
  5550 ;; Auto vars:     Size  Location     Type
  5551 ;;		None
  5552 ;; Return value:  Size  Location     Type
  5553 ;;                  1    wreg      void 
  5554 ;; Registers used:
  5555 ;;		None
  5556 ;; Tracked objects:
  5557 ;;		On entry : 0/0
  5558 ;;		On exit  : 0/0
  5559 ;;		Unchanged: 0/0
  5560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5561 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5564 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5565 ;;Total ram usage:        2 bytes
  5566 ;; Hardware stack levels used:    1
  5567 ;; Hardware stack levels required when called:    1
  5568 ;; This function calls:
  5569 ;;		Nothing
  5570 ;; This function is called by:
  5571 ;;		_ISR_low
  5572 ;; This function uses a non-reentrant model
  5573 ;;
  5574                           
  5575                           	psect	text43
  5576  001354                     __ptext43:
  5577                           	opt callstack 0
  5578  001354                     i1_TMR1_Update_flag_Set:
  5579                           	opt callstack 24
  5580                           
  5581                           ;TMR1.c: 32: void TMR1_Update_flag_Set(UINT a);TMR1.c: 33: {;TMR1.c: 34:     TMR1_Update
      +                          _flag = a;
  5582                           
  5583                           ;incstack = 0
  5584  001354  C001  F044         	movff	i1TMR1_Update_flag_Set@a,_TMR1_Update_flag
  5585  001358  C002  F045         	movff	i1TMR1_Update_flag_Set@a+1,_TMR1_Update_flag+1
  5586  00135C  0012               	return		;funcret
  5587  00135E                     __end_ofi1_TMR1_Update_flag_Set:
  5588                           	opt callstack 0
  5589                           
  5590 ;; *************** function _TMR1_Timer_reset *****************
  5591 ;; Defined at:
  5592 ;;		line 63 in file "TMR1.c"
  5593 ;; Parameters:    Size  Location     Type
  5594 ;;		None
  5595 ;; Auto vars:     Size  Location     Type
  5596 ;;  t1H             1    1[COMRAM] volatile unsigned char 
  5597 ;;  t1L             1    0[COMRAM] volatile unsigned char 
  5598 ;; Return value:  Size  Location     Type
  5599 ;;                  1    wreg      unsigned char 
  5600 ;; Registers used:
  5601 ;;		wreg, status,2, status,0
  5602 ;; Tracked objects:
  5603 ;;		On entry : 0/0
  5604 ;;		On exit  : 0/0
  5605 ;;		Unchanged: 0/0
  5606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5608 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5610 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5611 ;;Total ram usage:        2 bytes
  5612 ;; Hardware stack levels used:    1
  5613 ;; Hardware stack levels required when called:    1
  5614 ;; This function calls:
  5615 ;;		Nothing
  5616 ;; This function is called by:
  5617 ;;		_ISR_low
  5618 ;; This function uses a non-reentrant model
  5619 ;;
  5620                           
  5621                           	psect	text44
  5622  001278                     __ptext44:
  5623                           	opt callstack 0
  5624  001278                     _TMR1_Timer_reset:
  5625                           	opt callstack 24
  5626                           
  5627                           ;TMR1.c: 69:     volatile BYTE t1L = 0, t1H = 0;
  5628                           
  5629                           ;incstack = 0
  5630  001278  0E00               	movlw	0
  5631  00127A  6E01               	movwf	TMR1_Timer_reset@t1L,c	;volatile
  5632  00127C  0E00               	movlw	0
  5633  00127E  6E02               	movwf	TMR1_Timer_reset@t1H,c	;volatile
  5634                           
  5635                           ;TMR1.c: 70:     t1L = TMR1L;
  5636  001280  CFCE F001          	movff	4046,TMR1_Timer_reset@t1L	;volatile
  5637                           
  5638                           ;TMR1.c: 71:     t1H = TMR1H;
  5639  001284  CFCF F002          	movff	4047,TMR1_Timer_reset@t1H	;volatile
  5640                           
  5641                           ;TMR1.c: 72:     __nop();
  5642  001288  F000               	nop	
  5643                           
  5644                           ;TMR1.c: 73:     t1H += (UINT8)((0xFFFF - (((8000000/8)/4)/10)) >> 8);
  5645  00128A  0E9E               	movlw	158
  5646  00128C  2602               	addwf	TMR1_Timer_reset@t1H,f,c	;volatile
  5647                           
  5648                           ;TMR1.c: 74:     t1L += (UINT8)((0xFFFF - (((8000000/8)/4)/10)) & 0xFF);
  5649  00128E  0E57               	movlw	87
  5650  001290  2601               	addwf	TMR1_Timer_reset@t1L,f,c	;volatile
  5651                           
  5652                           ;TMR1.c: 75:     TMR1H = t1H;
  5653  001292  C002  FFCF         	movff	TMR1_Timer_reset@t1H,4047	;volatile
  5654                           
  5655                           ;TMR1.c: 76:     TMR1L = 0x5B;
  5656  001296  0E5B               	movlw	91
  5657  001298  6ECE               	movwf	4046,c	;volatile
  5658  00129A  0012               	return		;funcret
  5659  00129C                     __end_of_TMR1_Timer_reset:
  5660                           	opt callstack 0
  5661                           
  5662 ;; *************** function _ISR_high *****************
  5663 ;; Defined at:
  5664 ;;		line 53 in file "ISR.c"
  5665 ;; Parameters:    Size  Location     Type
  5666 ;;		None
  5667 ;; Auto vars:     Size  Location     Type
  5668 ;;		None
  5669 ;; Return value:  Size  Location     Type
  5670 ;;                  1    wreg      void 
  5671 ;; Registers used:
  5672 ;;		None
  5673 ;; Tracked objects:
  5674 ;;		On entry : 0/0
  5675 ;;		On exit  : 0/0
  5676 ;;		Unchanged: 0/0
  5677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5681 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5682 ;;Total ram usage:        0 bytes
  5683 ;; Hardware stack levels used:    1
  5684 ;; This function calls:
  5685 ;;		Nothing
  5686 ;; This function is called by:
  5687 ;;		Interrupt level 2
  5688 ;; This function uses a non-reentrant model
  5689 ;;
  5690                           
  5691                           	psect	intcode
  5692  000008                     __pintcode:
  5693                           	opt callstack 0
  5694  000008                     _ISR_high:
  5695                           	opt callstack 24
  5696                           
  5697                           ;incstack = 0
  5698  000008  8256               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  5699  00000A  EDB4  F009         	call	int_func,f	;refresh shadow registers
  5700                           
  5701                           	psect	intcode_body
  5702  001368                     __pintcode_body:
  5703                           	opt callstack 24
  5704  001368                     int_func:
  5705                           	opt callstack 24
  5706  001368  0006               	pop		; remove dummy address from shadow register refresh
  5707  00136A  9256               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  5708  00136C  0011               	retfie		f
  5709  00136E                     __end_of_ISR_high:
  5710                           	opt callstack 0
  5711  0000                     
  5712                           	psect	rparam
  5713  0000                     
  5714                           	psect	temp
  5715  000056                     btemp:
  5716                           	opt callstack 0
  5717  000056                     	ds	1
  5718  0000                     int$flags	set	btemp
  5719  0000                     wtemp8	set	btemp+1
  5720  0000                     ttemp5	set	btemp+1
  5721  0000                     ttemp6	set	btemp+4
  5722  0000                     ttemp7	set	btemp+8
  5723                           tosu	equ	0xFFF
  5724                           tosh	equ	0xFFE
  5725                           tosl	equ	0xFFD
  5726                           stkptr	equ	0xFFC
  5727                           pclatu	equ	0xFFB
  5728                           pclath	equ	0xFFA
  5729                           pcl	equ	0xFF9
  5730                           tblptru	equ	0xFF8
  5731                           tblptrh	equ	0xFF7
  5732                           tblptrl	equ	0xFF6
  5733                           tablat	equ	0xFF5
  5734                           prodh	equ	0xFF4
  5735                           prodl	equ	0xFF3
  5736                           indf0	equ	0xFEF
  5737                           postinc0	equ	0xFEE
  5738                           postdec0	equ	0xFED
  5739                           preinc0	equ	0xFEC
  5740                           plusw0	equ	0xFEB
  5741                           fsr0h	equ	0xFEA
  5742                           fsr0l	equ	0xFE9
  5743                           wreg	equ	0xFE8
  5744                           indf1	equ	0xFE7
  5745                           postinc1	equ	0xFE6
  5746                           postdec1	equ	0xFE5
  5747                           preinc1	equ	0xFE4
  5748                           plusw1	equ	0xFE3
  5749                           fsr1h	equ	0xFE2
  5750                           fsr1l	equ	0xFE1
  5751                           bsr	equ	0xFE0
  5752                           indf2	equ	0xFDF
  5753                           postinc2	equ	0xFDE
  5754                           postdec2	equ	0xFDD
  5755                           preinc2	equ	0xFDC
  5756                           plusw2	equ	0xFDB
  5757                           fsr2h	equ	0xFDA
  5758                           fsr2l	equ	0xFD9
  5759                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        9
    BSS         667
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     55      85
    BANK0           160      0     102
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    FRAME_AnalogValue@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_MapPosition@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_HandleCanFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_AdressOfNeighbors@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_PrzypisanieDokarty@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_SoftwareVersion@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_Plot@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_DeviceReset@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_AxisStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_AveragingTimes@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_ExcitationMultiplier@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_ExcitationValue@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_AccelerometerStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    S52$pointerNaSasiada	PTR struct . size(2) Largest target is 544
		 -> wartosciSasiada(BIGRAM[544]), 

    Dane.sasiedzi.pointerNaSasiada	PTR struct . size(2) Largest target is 544
		 -> wartosciSasiada(BIGRAM[544]), 

    Dane	PTR struct DaneStruct size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    CAN_GenID@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_TakeFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_SendFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_MoveBuffIntoFrame@Buf	PTR unsigned char  size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), RXB0D0(SFR_3[1]), 

    CAN_MoveBuffIntoFrame@Ram	PTR unsigned char  size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), RXB0D0(SFR_3[1]), 


Critical Paths under _main in COMRAM

    _main->_TRM_DataTransmition
    _TRM_DataTransmition->_FRAME_HandleCanFrame
    _FRAME_HandleCanFrame->_FRAME_AdressOfNeighbors
    _LED_Error->_LED_Control
    _FRAME_Plot->___lwdiv
    _FRAME_AdressOfNeighbors->___wmul
    _FRAME_AccelerometerStatus->_MOCK_Klikniecie_Spadek
    _FRAME_AccelerometerStatus->_MOCK_PrzyspieszenieX
    _FRAME_AccelerometerStatus->_MOCK_PrzyspieszenieY
    _FRAME_AccelerometerStatus->_MOCK_PrzyspieszenieZ
    _CAN_SendFrame->_CAN_MoveBuffIntoFrame
    _CAN_TakeFrame->___awdiv
    _LED_Update->_LED_Light_Pos
    _LED_Light_Pos->___lwdiv
    _INI_LED_Start->_LED_Control

Critical Paths under _ISR_low in COMRAM

    _ISR_low->_TMR1_Timer_reset
    _ISR_low->i1_TMR1_Update_flag_Set

Critical Paths under _ISR_high in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR_low in BANK0

    None.

Critical Paths under _ISR_high in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_low in BANK1

    None.

Critical Paths under _ISR_high in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_low in BANK2

    None.

Critical Paths under _ISR_high in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_low in BANK3

    None.

Critical Paths under _ISR_high in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_low in BANK4

    None.

Critical Paths under _ISR_high in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_low in BANK5

    None.

Critical Paths under _ISR_high in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_low in BANK6

    None.

Critical Paths under _ISR_high in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_low in BANK7

    None.

Critical Paths under _ISR_high in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_low in BANK8

    None.

Critical Paths under _ISR_high in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_low in BANK9

    None.

Critical Paths under _ISR_high in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_low in BANK10

    None.

Critical Paths under _ISR_high in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_low in BANK11

    None.

Critical Paths under _ISR_high in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_low in BANK12

    None.

Critical Paths under _ISR_high in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   19313
                            _INI_All
                         _LED_Update
               _TMR1_Update_flag_Get
               _TMR1_Update_flag_Set
                _TRM_DataTransmition
 ---------------------------------------------------------------------------------
 (1) _TRM_DataTransmition                                 18    18      0   12088
                                             38 COMRAM    17    17      0
                      _CAN_TakeFrame
               _FRAME_HandleCanFrame
 ---------------------------------------------------------------------------------
 (2) _FRAME_HandleCanFrame                                 7     5      2   10125
                                             31 COMRAM     7     5      2
                          _CAN_GenID
                      _CAN_SendFrame
          _FRAME_AccelerometerStatus
            _FRAME_AdressOfNeighbors
                  _FRAME_AnalogValue
               _FRAME_AveragingTimes
                   _FRAME_AxisStatus
                  _FRAME_DeviceReset
         _FRAME_ExcitationMultiplier
              _FRAME_ExcitationValue
                  _FRAME_MapPosition
                         _FRAME_Plot
           _FRAME_PrzypisanieDokarty
              _FRAME_SoftwareVersion
                          _LED_Error
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) _LED_Error                                            0     0      0    1412
                        _LED_Control
 ---------------------------------------------------------------------------------
 (3) _FRAME_SoftwareVersion                                3     1      2     235
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_PrzypisanieDokarty                             3     1      2     169
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_Plot                                           3     1      2     743
                                             12 COMRAM     3     1      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) _FRAME_MapPosition                                    2     0      2     103
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_ExcitationValue                                3     1      2     169
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_ExcitationMultiplier                           5     3      2     215
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_DeviceReset                                    3     1      2     367
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AxisStatus                                     5     3      2     169
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AveragingTimes                                 3     1      2     169
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AnalogValue                                    6     2      4     206
                                              5 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _FRAME_AdressOfNeighbors                             20    16      4    3143
                                             11 COMRAM    20    16      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    2199
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _FRAME_AccelerometerStatus                            3     1      2     235
                                              7 COMRAM     3     1      2
             _MOCK_Klikniecie_Spadek
               _MOCK_PrzyspieszenieX
               _MOCK_PrzyspieszenieY
               _MOCK_PrzyspieszenieZ
 ---------------------------------------------------------------------------------
 (4) _MOCK_PrzyspieszenieZ                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOCK_PrzyspieszenieY                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOCK_PrzyspieszenieX                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOCK_Klikniecie_Spadek                               2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _CAN_SendFrame                                        5     3      2     891
                                             10 COMRAM     5     3      2
              _CAN_MoveBuffIntoFrame
 ---------------------------------------------------------------------------------
 (3) _CAN_GenID                                            7     4      3     360
                                              5 COMRAM     7     4      3
 ---------------------------------------------------------------------------------
 (2) _CAN_TakeFrame                                        6     4      2    1622
                                             13 COMRAM     6     4      2
              _CAN_MoveBuffIntoFrame
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     612
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _CAN_MoveBuffIntoFrame                                5     1      4     546
                                              5 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) _TMR1_Update_flag_Set                                 2     0      2     202
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR1_Update_flag_Get                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _LED_Update                                           0     0      0    5611
                        _LED_Control
                           _LED_Left
                      _LED_Light_Pos
                          _LED_Right
 ---------------------------------------------------------------------------------
 (2) _LED_Light_Pos                                       11     7      4    3471
                                             12 COMRAM    11     7      4
                        _LED_Control
                           _LED_Left
                          _LED_Right
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     574
                                              5 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _LED_Right                                            6     4      2     364
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _LED_Left                                             4     2      2     364
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _INI_All                                              0     0      0    1412
                          _CAN_Setup
                _INI_GlobalInterrupt
                      _INI_LED_Start
                         _INI_OUTPUT
                          _INI_Timer
 ---------------------------------------------------------------------------------
 (2) _INI_Timer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INI_OUTPUT                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INI_LED_Start                                        0     0      0    1412
                        _LED_Control
 ---------------------------------------------------------------------------------
 (4) _LED_Control                                          5     3      2    1412
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _INI_GlobalInterrupt                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CAN_Setup                                            1     1      0       0
                                              5 COMRAM     1     1      0
                     _CAN_SetupClock
                      _CAN_SetupMask
 ---------------------------------------------------------------------------------
 (3) _CAN_SetupMask                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CAN_SetupClock                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR_low                                              3     3      0      76
                                              2 COMRAM     3     3      0
                   _TMR1_Timer_reset
             i1_TMR1_Update_flag_Set
 ---------------------------------------------------------------------------------
 (6) i1_TMR1_Update_flag_Set                               2     0      2      48
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_Timer_reset                                     2     2      0      28
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR_high                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _INI_All
     _CAN_Setup
       _CAN_SetupClock
       _CAN_SetupMask
     _INI_GlobalInterrupt
     _INI_LED_Start
       _LED_Control
     _INI_OUTPUT
     _INI_Timer
   _LED_Update
     _LED_Control
     _LED_Left
     _LED_Light_Pos
       _LED_Control
       _LED_Left
       _LED_Right
       ___lwdiv
     _LED_Right
   _TMR1_Update_flag_Get
   _TMR1_Update_flag_Set
   _TRM_DataTransmition
     _CAN_TakeFrame
       _CAN_MoveBuffIntoFrame
       ___awdiv
     _FRAME_HandleCanFrame
       _CAN_GenID
       _CAN_SendFrame
         _CAN_MoveBuffIntoFrame
       _FRAME_AccelerometerStatus
         _MOCK_Klikniecie_Spadek
         _MOCK_PrzyspieszenieX
         _MOCK_PrzyspieszenieY
         _MOCK_PrzyspieszenieZ
       _FRAME_AdressOfNeighbors
         ___wmul
       _FRAME_AnalogValue
       _FRAME_AveragingTimes
       _FRAME_AxisStatus
       _FRAME_DeviceReset
       _FRAME_ExcitationMultiplier
       _FRAME_ExcitationValue
       _FRAME_MapPosition
       _FRAME_Plot
         ___lwdiv
       _FRAME_PrzypisanieDokarty
       _FRAME_SoftwareVersion
       _LED_Error
         _LED_Control
       ___awdiv

 _ISR_low (ROOT)
   _TMR1_Timer_reset
   i1_TMR1_Update_flag_Set

 _ISR_high (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0     220      31       16.4%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      66       5       63.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     37      55       1       90.4%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      BB      20        0.0%
DATA                 0      0     2DB       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Thu Jul 18 14:17:56 2019

          __end_of_FRAME_DeviceReset 0ABE                ?_FRAME_AveragingTimes 0006  
                       ___awdiv@sign 000B                                   bsr 000FE0  
                ___wmul@multiplicand 0008                          __CFG_BORV$3 000000  
                  ?_FRAME_AxisStatus 0006                    _FRAME_MapPosition 136E  
                       __CFG_CP0$OFF 000000                         __CFG_CP1$OFF 000000  
                       __CFG_CP2$OFF 000000                         __CFG_CP3$OFF 000000  
                 __size_of_CAN_GenID 0094                                  l311 0932  
                                l180 0736                                  l190 0074  
                                l191 007A                                  l192 0080  
                                l193 0086                                  l194 008C  
                                l283 0CD6                                  l195 0092  
                                l179 0738                                  l196 0098  
                                l188 006E                                  l189 00DE  
                                l528 0716                          ?_LED_Update 0001  
                                l529 070E                         __CFG_CPB$OFF 000000  
                 ??_FRAME_AxisStatus 0008                         __CFG_CPD$OFF 000000  
                 ?_FRAME_MapPosition 0006                   __size_of_CAN_Setup 005C  
                       ?_LED_Control 0006                                  wreg 000FE8  
              __end_of_CAN_TakeFrame 02DC                          ?_INI_OUTPUT 0001  
             __size_of_INI_LED_Start 0034             ??_MOCK_Klikniecie_Spadek 0008  
              __end_of_CAN_SendFrame 088A                         __CFG_LVP$OFF 000000  
          TRM_DataTransmition@weWyU8 0049         __size_of_INI_GlobalInterrupt 000E  
                ??_FRAME_MapPosition 0008                         __CFG_WDT$OFF 000000  
                               l2303 08EC                                 l1159 0F96  
                               l2321 091C                                 l2315 090C  
                               l2333 0942                                 l2309 08FC  
                               l2421 0F6C                                 l2351 0972  
                               l2327 092C                                 l2431 0F8C  
                               l2511 0884                                 l2345 0962  
                               l2273 089C                                 l2601 0A9C  
                               l2363 0992                                 l2339 0952  
                               l2291 08CC                      __end_of_INI_All 12F2  
                               l2531 1022                                 l2419 0F64  
                               l2259 1204                                 l2507 07D0  
                               l2381 09C2                                 l2357 0982  
                               l2285 08BC                                 l2375 09B2  
                               l2279 08AC                                 l2607 0F30  
                               l2369 09A2                                 l2297 08DC  
                               l2713 009E                                 l2633 03EE  
                               l2707 0E8E                                 l2387 09D4  
                               l2547 10B2                                 l2731 01B6  
                               l2627 0308                                 l2661 0C26  
                               l2741 01DC                                 l2733 01BC  
                               l2815 0B20                                 l2823 0B56  
                               l2655 0C16                                 l2743 01E4  
                               l2735 01C4                                 l2639 03F6  
                               l2817 0B2A                                 l2809 0AF4  
                               l2761 0268                                 l2737 01CC  
                               l2729 01B0                                 l2753 0230  
                               l2907 0CB2                                 l2667 0C3C  
                               l2683 0C6E                                 l2771 0290  
                               l2763 0270                                 l2739 01D4  
                               l2747 01EC                                 l2755 024A  
                               l2579 0FCC                                 l2851 05A2  
                               l2843 056A                                 l2923 1064  
                               l2693 0E44                                 l2669 0C44  
                               l2765 0278                                 l2757 025C  
                               l2749 022C                                 l2861 05E8  
                               l2853 05B0                                 l2845 0578  
                               l2687 0C7C                                 l2679 0C64  
                               l2767 0280                                 l2759 0262  
                               l2775 0298                                 l2863 0602  
                               l2855 05BE                                 l2847 0586  
                               l2871 062A                                 l2769 0288  
                               l2777 02D8                                 l2865 0610  
                               l2857 05CC                                 l2849 0594  
                               l2873 0694                                 l2859 05DA  
                               l2955 11D8                                 l2965 11F8  
                               _BIE0 000DFA                                 u1040 0F70  
                               u1105 07A6                                 u1210 0A2A  
                               u1220 0A42                                 u1320 0C48  
                               u1216 0A2C                                 u1226 0A44  
                               u1170 0FDC                                 _LATA 000F89  
                               u1430 0B5E                                 u1270 03EC  
                               _LATB 000F8A                                 _LATC 000F8B  
                               u1280 053E                                 _LATD 000F8C  
                               _LATE 000F8D                                 u1385 0148  
                               _IPR3 000FA5                                 _IPEN 007E87  
                               _PIE3 000FA3                                 _PEIE 007F96  
                               _LOCK 004C                                 _PIR3 000FA4  
                               _RCON 000FD0          ??_FRAME_AccelerometerStatus 000A  
                               _Dane 0046                      __end_of_ISR_low 005C  
                   LED_Control@diode 0006                 FRAME_AnalogValue@set 0008  
                               _main 11D2                     LED_Control@color 000A  
                               fsr1h 000FE2                                 fsr2h 000FDA  
                               indf1 000FE7                                 indf2 000FDF  
                               fsr1l 000FE1                                 fsr2l 000FD9  
                               btemp 0056                       _CAN_SetupClock 122A  
                               prodh 000FF4                                 prodl 000FF3  
              __end_of_CAN_SetupMask 0E40        __size_of_TMR1_Update_flag_Get 000A  
                               start 005C        __size_of_TMR1_Update_flag_Set 000A  
                 __size_of_LED_Error 001E                        __CFG_IESO$OFF 000000  
                 __size_of_LED_Right 004C        __size_of_FRAME_HandleCanFrame 01DC  
                      _LED_Light_Pos 0ABE                        __CFG_MCLRE$ON 000000  
                       ___param_bank 000000    FRAME_HandleCanFrame@identyfikator 0026  
                 __size_of_INI_Timer 0018            __end_of_FRAME_MapPosition 1370  
                   __end_of_LED_Left 10C6        __size_of_MOCK_PrzyspieszenieX 000A  
      __size_of_MOCK_PrzyspieszenieY 000A        __size_of_MOCK_PrzyspieszenieZ 000A  
                              _B0CON 000E20                                _B1CON 000E30  
                              _B2CON 000E40                                _B3CON 000E50  
                              _B4CON 000E60                                _B5CON 000E70  
                              ?_main 0001                      __end_of___awdiv 0C86  
                              _BSEL0 000DF8                      ___awdiv@divisor 0008  
                              _T1CON 000FCD                                _IRCF0 007E9C  
                              _IRCF1 007E9D    FRAME_ExcitationMultiplier@message 0006  
                              _IRCF2 007E9E                      __end_of___lwdiv 0FA0  
                              i1l595 004C                  __size_of_FRAME_Plot 0058  
                    ___awdiv@counter 000A                                _MSEL0 000DF0  
                              _MSEL1 000DF1                                _MSEL2 000DF2  
                              _MSEL3 000DF3                                _TMR1H 000FCF  
                              _TMR1L 000FCE                                _TRISA 000F92  
                              _TRISB 000F93                                _TRISC 000F94  
                              _TRISD 000F95                                _TRISE 000F96  
                      __CFG_PWRT$OFF 000000                                _Flagi 0038  
             ?_CAN_MoveBuffIntoFrame 0006                        __CFG_WRT0$OFF 000000  
         __size_of_FRAME_AnalogValue 0002                        __CFG_WRT1$OFF 000000  
                      __CFG_WRT2$OFF 000000                        __CFG_WRT3$OFF 000000  
                     __CFG_EBTR0$OFF 000000                       __CFG_FCMEN$OFF 000000  
                     __CFG_EBTR1$OFF 000000                       __CFG_EBTR2$OFF 000000  
                     __CFG_EBTR3$OFF 000000                     __end_of_ISR_high 136E  
                      __CFG_WRTB$OFF 000000                        __CFG_WRTC$OFF 000000  
                      __CFG_WRTD$OFF 000000                       __CFG_EBTRB$OFF 000000  
            i1TMR1_Update_flag_Set@a 0001                                tablat 000FF5  
             __end_of_CAN_SetupClock 1252                                ttemp5 0057  
                              ttemp6 005A                                ttemp7 005E  
                              status 000FD8                                wtemp8 0057  
                  __end_of_CAN_GenID 0C02                       __CFG_PBADEN$ON 000000  
                __size_of_LED_Update 007A                       ?_LED_Light_Pos 000D  
                   _TMR1_Timer_reset 1278                    __end_of_CAN_Setup 0E9C  
                      _INI_LED_Start 119E                _FRAME_ExcitationValue 10FC  
   FRAME_AccelerometerStatus@message 0008                      __initialization 0E9C  
                __size_of_INI_OUTPUT 001E                     CAN_GenID@frameID 0008  
                       __end_of_main 1200               ??_FRAME_AveragingTimes 0008  
         __size_of_FRAME_DeviceReset 00E2             ?_FRAME_AdressOfNeighbors 000C  
                   CAN_GenID@message 0006            _FRAME_AccelerometerStatus 0D00  
                             ??_main 0038               CAN_MoveBuffIntoFrame@i 000A  
                      __activetblptr 000002                     _TMR1_Update_flag 0044  
                    _wartosciSasiada 00C6                            ??_INI_All 000B  
                  __end_of_LED_Error 12BA                    __end_of_LED_Right 103A  
    __size_of_MOCK_Klikniecie_Spadek 000A                            ??_ISR_low 0003  
                             _CANCON 000F6F                     ___awdiv@dividend 0006  
        FRAME_ExcitationMultiplier@i 0009                               _CIOCON 000F73  
                    __CFG_BBSIZ$1024 000000                    __end_of_INI_Timer 130A  
                             i1l3013 004A                      ?_CAN_SetupClock 0001  
                             _RXB0D0 000F66                               _TMR1IE 007CE8  
                             _TMR1IF 007CF0                               _TMR1IP 007CF8  
                             _TMR1ON 007E68         ??_FRAME_ExcitationMultiplier 0008  
                     ?_INI_LED_Start 0001                       __CFG_XINST$OFF 000000  
                             ___wmul 1252                            ??___awdiv 000A  
                     __CFG_STVREN$ON 000000                     LED_Light_Pos@pos 000D  
         __size_of_FRAME_MapPosition 0002                            ??___lwdiv 000A  
                             clear_0 0EC4                               clear_1 0ED6  
                             clear_2 0EE2                     ___awdiv@quotient 000C  
         ??_FRAME_PrzypisanieDokarty 0008             ??i1_TMR1_Update_flag_Set 0003  
                    __CFG_BOREN$BOHW 000000                         __pdataCOMRAM 004D  
                             tblptrh 000FF7                               tblptrl 000FF6  
                             tblptru 000FF8  __size_of_FRAME_ExcitationMultiplier 004E  
               __size_of_LED_Control 0152             FRAME_MapPosition@message 0006  
              TMR1_Update_flag_Set@a 0006                           __accesstop 0060  
            __end_of__initialization 0EE8                         ??_FRAME_Plot 000F  
                ISR_low@ramkaStanuU8 004A                            ?_LED_Left 0006  
                    ??_LED_Light_Pos 0011                        ___rparam_used 000001  
             ?_FRAME_ExcitationValue 0006      __end_of_FRAME_AdressOfNeighbors 0540  
             _MOCK_Klikniecie_Spadek 1336                       __pcstackCOMRAM 0001  
                          LED_Left@a 0006                            LED_Left@b 0008  
                _INI_GlobalInterrupt 130A                            ?_ISR_high 0001  
                       ??_LED_Update 0018          __end_of_TRM_DataTransmition 1084  
              _FRAME_SoftwareVersion 0D76                   __end_of_FRAME_Plot 0F4E  
                       ??_INI_OUTPUT 0006              FRAME_AxisStatus@message 0006  
               ?_INI_GlobalInterrupt 0001            __size_of_FRAME_AxisStatus 0036  
                         __pbssBANK0 0060                      ??_INI_LED_Start 000B  
                         ??_LED_Left 0008                   __end_of_LED_Update 0D00  
                 __end_of_INI_OUTPUT 12D8                              ?___wmul 0006  
                         ??_ISR_high 0001                  TMR1_Timer_reset@t1H 0002  
                TMR1_Timer_reset@t1L 0001                              _ECANCON 000F77  
                            _CANSTAT 000F6E              ??_CAN_MoveBuffIntoFrame 000A  
       __end_of_TMR1_Update_flag_Get 1354         __end_of_TMR1_Update_flag_Set 134A  
    __size_ofi1_TMR1_Update_flag_Set 000A         __end_of_FRAME_HandleCanFrame 071C  
                            _INI_All 12D8             __end_of_TMR1_Timer_reset 129C  
                            _RXB0DLC 000F65                              _RXB0CON 000F60  
                            _RXB1CON 000F50                ??_INI_GlobalInterrupt 0006  
                            _TXB0CON 000F40                              _ISR_low 0018  
                            _DaneCan 003D         __end_of_MOCK_PrzyspieszenieX 1336  
       __end_of_MOCK_PrzyspieszenieY 132C         __end_of_MOCK_PrzyspieszenieZ 1322  
 __end_of_FRAME_ExcitationMultiplier 0FEE           _FRAME_ExcitationMultiplier 0FA0  
        FRAME_HandleCanFrame@message 0020                              __Hparam 0000  
                            __Lparam 0000               __size_of_CAN_TakeFrame 027C  
                          _CAN_GenID 0B6E                              ___awdiv 0C02  
                          _CAN_Setup 0E40                      __size_of___wmul 0026  
             __size_of_CAN_SendFrame 016E                              ___lwdiv 0F4E  
                  LED_Light_Pos@pos2 0014                              __pcinit 0E9C  
                            __ramtop 0D00                              __ptext0 11D2  
                            __ptext1 103A                              __ptext2 0540  
                            __ptext3 129C                              __ptext4 0D76  
                            __ptext5 10C6                              __ptext6 0EF6  
                            __ptext7 136E                              __ptext8 10FC  
                            __ptext9 0FA0               ?_FRAME_SoftwareVersion 0006  
             __size_of_CAN_SetupMask 0064       FRAME_AdressOfNeighbors@nrRamki 000E  
   __size_of_FRAME_AdressOfNeighbors 0264                     ??_CAN_SetupClock 0006  
     FRAME_AdressOfNeighbors@message 000C                            _LED_Error 129C  
                     __pintcode_body 1368                            _LED_Right 0FEE  
               end_of_initialization 0EE8                        __Lmediumconst 0000  
                            int_func 1368                            _INI_Timer 12F2  
             i1_TMR1_Update_flag_Set 1354     TRM_DataTransmition@czujnikWeWyU8 0048  
                         ?_CAN_GenID 0006                              postdec1 000FE5  
                            postdec2 000FDD                              postinc0 000FEE  
                            postinc1 000FE6                              postinc2 000FDE  
                         ?_CAN_Setup 0001        __size_of_FRAME_AveragingTimes 0036  
               CAN_SendFrame@message 000B                        LED_Update@Red 004B  
                      _CAN_TakeFrame 0060                        _CAN_SendFrame 071C  
                         ?_LED_Error 0001                           ?_LED_Right 0006  
                   _FRAME_AxisStatus 1132              ??_FRAME_ExcitationValue 0008  
                         ?_INI_Timer 0001              ?_MOCK_Klikniecie_Spadek 0006  
                    _ramkaCanRxKarty 0060                 _TMR1_Update_flag_Get 134A  
                    _ramkaCanTxKarty 00B5                 _TMR1_Update_flag_Set 1340  
                      _CAN_SetupMask 0DDC                    __size_of_LED_Left 0042  
               _FRAME_HandleCanFrame 0540                       CAN_TakeFrame@k 0013  
                     __end_of___wmul 1278                        __pidataCOMRAM 135E  
                  __size_of_ISR_high 1366                 _MOCK_PrzyspieszenieX 132C  
               _MOCK_PrzyspieszenieY 1322                 _MOCK_PrzyspieszenieZ 1318  
                         LED_Right@a 0006                           LED_Right@b 000A  
              MOC_Frame_Counter@zeta 004D                        ??_LED_Control 0008  
                start_initialization 0E9C                       ?_CAN_TakeFrame 000E  
                     ?_CAN_SendFrame 000B       __end_of_MOCK_Klikniecie_Spadek 1340  
                   __CFG_OSC$IRCIO67 000000    __size_of_FRAME_PrzypisanieDokarty 0036  
          ?_FRAME_PrzypisanieDokarty 0006                ?_TMR1_Update_flag_Get 0006  
              ?_TMR1_Update_flag_Set 0006                       ?_CAN_SetupMask 0001  
              __end_of_LED_Light_Pos 0B6E                ?_FRAME_HandleCanFrame 0020  
                        ??_CAN_GenID 0009                             ??___wmul 000A  
                        ??_CAN_Setup 0006                     __CFG_LPT1OSC$OFF 000000  
              ?_MOCK_PrzyspieszenieX 0006                ?_MOCK_PrzyspieszenieY 0006  
              ?_MOCK_PrzyspieszenieZ 0006             CAN_MoveBuffIntoFrame@Buf 0008  
           CAN_MoveBuffIntoFrame@Ram 0006       __size_of_CAN_MoveBuffIntoFrame 002A  
                        __pbssBIGRAM 00C6        __end_of_CAN_MoveBuffIntoFrame 122A  
                    _Fulfillment_Lvl 0053                          __pbssCOMRAM 0038  
                           ?_INI_All 0001              _FRAME_AdressOfNeighbors 02DC  
                  ?_TMR1_Timer_reset 0001                          _BRGCON1bits 000F70  
                        _BRGCON2bits 000F71                          _BRGCON3bits 000F72  
                           ?_ISR_low 0001                   ??_TMR1_Timer_reset 0001  
                        ??_LED_Error 000B                          ??_LED_Right 0008  
       __size_of_TRM_DataTransmition 004A             FRAME_AdressOfNeighbors@i 001E  
                __end_of_LED_Control 09DC          ?_FRAME_ExcitationMultiplier 0006  
                        ??_INI_Timer 0006                __end_of_INI_LED_Start 11D2  
                   ___lwdiv@dividend 0006                            __pintcode 0008  
                           ?___awdiv 0006              ??_FRAME_SoftwareVersion 0008  
                           ?___lwdiv 0006                    FRAME_Plot@message 000D  
                        __pintcodelo 0018          __end_of_INI_GlobalInterrupt 1318  
                    ??_CAN_TakeFrame 0010                          _COMSTATbits 000F74  
                    ??_CAN_SendFrame 000D                     ___lwdiv@quotient 000A  
            ?i1_TMR1_Update_flag_Set 0001          FRAME_AveragingTimes@message 0006  
             ??_TMR1_Update_flag_Get 0008               ??_TMR1_Update_flag_Set 0008  
                    ??_CAN_SetupMask 0006                       ___wmul@product 000A  
                           _LED_Left 1084               ??_FRAME_HandleCanFrame 0022  
               CAN_TakeFrame@message 000E                 CAN_TakeFrame@tempCON 0012  
                           _RXB0EIDH 000F63                             _RXB0EIDL 000F64  
                           _RCONbits 000FD0                     __CFG_WDTPS$32768 000000  
                           _RXB0SIDH 000F61                             _RXB0SIDL 000F62  
                           _RXF0EIDH 000F02                             _RXF0EIDL 000F03  
                           _RXF1EIDH 000F06                             _RXF1EIDL 000F07  
                           _RXF2EIDH 000F0A                             _RXF2EIDL 000F0B  
                           _RXF0SIDH 000F00                             _RXF0SIDL 000F01  
                           _RXF1SIDH 000F04                             _RXF1SIDL 000F05  
                           _RXF2SIDH 000F08                             _RXF2SIDL 000F09  
                           _ISR_high 0008                             _RXM0EIDH 000F1A  
                           _RXM0EIDL 000F1B                             _RXM1EIDH 000F1E  
                           _RXM1EIDL 000F1F               ??_MOCK_PrzyspieszenieX 0008  
             ??_MOCK_PrzyspieszenieY 0008               ??_MOCK_PrzyspieszenieZ 0008  
                           _RXM0SIDH 000F18                             _RXM0SIDL 000F19  
                           _RXM1SIDH 000F1C                             _RXM1SIDL 000F1D  
           __end_of_FRAME_AxisStatus 1168            ??_FRAME_AdressOfNeighbors 0010  
                  ___wmul@multiplier 0006                     _DetectorLedRadar 0041  
                        _LED_Control 088A                     __size_of_INI_All 001A  
       FRAME_ExcitationValue@message 0006       __end_ofi1_TMR1_Update_flag_Set 135E  
                          copy_data0 0EB0                     __size_of_ISR_low 0044  
 __size_of_FRAME_AccelerometerStatus 0076         __end_of_FRAME_AveragingTimes 119E  
         ?_FRAME_AccelerometerStatus 0008       __size_of_FRAME_ExcitationValue 0036  
      __end_of_FRAME_ExcitationValue 1132                             __Hrparam 0000  
                       _RXB0SIDLbits 000F62                             __Lrparam 0000  
                   __size_of___awdiv 0084                     __size_of___lwdiv 0052  
    FRAME_PrzypisanieDokarty@message 0006                   LED_Light_Pos@flage 0016  
                 LED_Light_Pos@color 0011     __end_of_FRAME_PrzypisanieDokarty 10FC  
                       _RXF0SIDLbits 000F01             FRAME_AnalogValue@message 0006  
                    ___lwdiv@divisor 0008                         _RXF1SIDLbits 000F05  
                    ___lwdiv@counter 000C                             __ptext10 09DC  
                           __ptext11 1132                             __ptext20 1336  
                           __ptext12 1168                             __ptext21 071C  
                           __ptext13 1370                             __ptext30 0F4E  
                           __ptext22 0B6E                             __ptext14 02DC  
                           __ptext31 0FEE                             __ptext23 0060  
                           __ptext15 1252                             __ptext40 0DDC  
                           __ptext32 1084                             __ptext24 0C02  
                           __ptext16 0D00                             __ptext41 122A  
                           __ptext33 12D8                             __ptext25 1200  
                           __ptext17 1318                             __ptext34 12F2  
                           __ptext26 1340                             __ptext18 1322  
                           __ptext43 1354                             __ptext35 12BA  
                           __ptext27 134A                             __ptext19 132C  
                           __ptext44 1278                             __ptext36 119E  
                           __ptext28 0C86                             __ptext37 088A  
                           __ptext29 0ABE                             __ptext38 130A  
                           __ptext39 0E40        TRM_DataTransmition@canMessage 0027  
                       _RXF2SIDLbits 000F09             FRAME_DeviceReset@message 0006  
  __end_of_FRAME_AccelerometerStatus 0D76                           _FRAME_Plot 0EF6  
                      __size_of_main 002E              __size_of_CAN_SetupClock 0028  
                           int$flags 0056                  _TRM_DataTransmition 103A  
                        _RXB0DLCbits 000F65                           _LED_Update 0C86  
                        _RXB0CONbits 000F60                           _INTCONbits 000FF2  
                         _INI_OUTPUT 12BA                    _FRAME_AnalogValue 1370  
               ?_TRM_DataTransmition 0001         FRAME_SoftwareVersion@message 0006  
                           intlevel1 0000                             intlevel2 0000  
                 ?_FRAME_AnalogValue 0006                          _TXB0CONbits 000F40  
                ??_FRAME_AnalogValue 000A            __size_of_TMR1_Timer_reset 0024  
           LED_Light_Pos@fulfillment 000F                 _FRAME_AveragingTimes 1168  
     __size_of_FRAME_SoftwareVersion 0066                    _FRAME_DeviceReset 09DC  
      __end_of_FRAME_SoftwareVersion 0DDC                   ?_FRAME_DeviceReset 0006  
                    LED_Update@Green 0055            __end_of_FRAME_AnalogValue 1372  
             __size_of_LED_Light_Pos 00B0                _CAN_MoveBuffIntoFrame 1200  
                         _WDTCONbits 000FD1                  ??_FRAME_DeviceReset 0008  
              ??_TRM_DataTransmition 0027             _FRAME_PrzypisanieDokarty 10C6  
             LED_Light_Pos@LED_array 0012                       LED_Update@pos1 0051  
                     LED_Update@pos2 004F                          ?_FRAME_Plot 000D  
