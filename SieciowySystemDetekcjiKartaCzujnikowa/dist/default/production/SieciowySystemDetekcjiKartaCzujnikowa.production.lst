

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Aug 20 13:28:47 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4680
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    79                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    80                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    81                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    82                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    83  0000                     
    84                           ; Version 2.05
    85                           ; Generated 20/12/2018 GMT
    86                           ; 
    87                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    88                           ; All rights reserved.
    89                           ; 
    90                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    91                           ; 
    92                           ; Redistribution and use in source and binary forms, with or without modification, are
    93                           ; permitted provided that the following conditions are met:
    94                           ; 
    95                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    96                           ;        conditions and the following disclaimer.
    97                           ; 
    98                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    99                           ;        of conditions and the following disclaimer in the documentation and/or other
   100                           ;        materials provided with the distribution.
   101                           ; 
   102                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   103                           ;        software without specific prior written permission.
   104                           ; 
   105                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   106                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   107                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   108                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   109                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   110                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   111                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   112                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   113                           ; 
   114                           ; 
   115                           ; Code-generator required, PIC18F4680 Definitions
   116                           ; 
   117                           ; SFR Addresses
   118  0000                     
   119                           	psect	idataCOMRAM
   120  002CC6                     __pidataCOMRAM:
   121                           	opt callstack 0
   122                           
   123                           ;initializer for _MaxPower
   124  002CC6  FFFF               	dw	65535
   125                           
   126                           ;initializer for _MaxRange
   127  002CC8  FFFF               	dw	65535
   128                           
   129                           ;initializer for _MaxAdres
   130  002CCA  FFFF               	dw	65535
   131                           
   132                           ;initializer for LED_Update@pos2
   133  002CCC  0001               	dw	1
   134                           
   135                           ;initializer for LED_Update@pos1
   136  002CCE  0001               	dw	1
   137                           
   138                           ;initializer for _Fulfillment_Lvl
   139  002CD0  0014               	dw	20
   140                           
   141                           ;initializer for LED_Update@laststat
   142  002CD2  14                 	db	20
   143                           
   144                           ;initializer for LED_Update@Green
   145  002CD3  01                 	db	1
   146                           
   147                           ;initializer for _Init_Data
   148  002CD4  FFFF               	dw	65535
   149                           
   150                           ;initializer for _NeightAdress2
   151  002CD6  012A               	dw	298
   152                           
   153                           	psect	idataBANK0
   154  002D60                     __pidataBANK0:
   155                           	opt callstack 0
   156                           
   157                           ;initializer for MOC_Frame_Counter@zeta
   158  002D60  0011               	dw	17
   159  0000                     _RXF9EIDL	set	3443
   160  0000                     _RXF9EIDH	set	3442
   161  0000                     _RXF9SIDLbits	set	3441
   162  0000                     _RXF9SIDL	set	3441
   163  0000                     _RXF9SIDH	set	3440
   164  0000                     _RXF8EIDL	set	3435
   165  0000                     _RXF8EIDH	set	3434
   166  0000                     _RXF8SIDLbits	set	3433
   167  0000                     _RXF8SIDL	set	3433
   168  0000                     _RXF8SIDH	set	3432
   169  0000                     _RXF7EIDL	set	3431
   170  0000                     _RXF7EIDH	set	3430
   171  0000                     _RXF7SIDLbits	set	3429
   172  0000                     _RXF7SIDL	set	3429
   173  0000                     _RXF7SIDH	set	3428
   174  0000                     _RXF6EIDL	set	3427
   175  0000                     _RXF6EIDH	set	3426
   176  0000                     _RXF6SIDLbits	set	3425
   177  0000                     _RXF6SIDL	set	3425
   178  0000                     _RXF6SIDH	set	3424
   179  0000                     _RXFCON1	set	3541
   180  0000                     _RXFCON0	set	3540
   181  0000                     _RXFBCON4	set	3556
   182  0000                     _RXFBCON3	set	3555
   183  0000                     _RXFBCON2	set	3554
   184  0000                     _RXFBCON1	set	3553
   185  0000                     _RXFBCON0	set	3552
   186  0000                     _MSEL3	set	3571
   187  0000                     _MSEL2	set	3570
   188  0000                     _MSEL1	set	3569
   189  0000                     _MSEL0	set	3568
   190  0000                     _BIE0	set	3578
   191  0000                     _BSEL0	set	3576
   192  0000                     _B5CON	set	3696
   193  0000                     _B4CON	set	3680
   194  0000                     _B3CON	set	3664
   195  0000                     _B2CON	set	3648
   196  0000                     _B1CON	set	3632
   197  0000                     _B0CON	set	3616
   198  0000                     _TXB0CONbits	set	3904
   199  0000                     _RXF5EIDL	set	3863
   200  0000                     _RXF5EIDH	set	3862
   201  0000                     _RXF5SIDLbits	set	3861
   202  0000                     _RXF5SIDL	set	3861
   203  0000                     _RXF5SIDH	set	3860
   204  0000                     _RXF4EIDL	set	3859
   205  0000                     _RXF4EIDH	set	3858
   206  0000                     _RXF4SIDLbits	set	3857
   207  0000                     _RXF4SIDL	set	3857
   208  0000                     _RXF4SIDH	set	3856
   209  0000                     _RXF3EIDL	set	3855
   210  0000                     _RXF3EIDH	set	3854
   211  0000                     _RXF3SIDLbits	set	3853
   212  0000                     _RXF3SIDL	set	3853
   213  0000                     _RXF3SIDH	set	3852
   214  0000                     _RXF2EIDL	set	3851
   215  0000                     _RXF2EIDH	set	3850
   216  0000                     _RXF2SIDLbits	set	3849
   217  0000                     _RXF2SIDL	set	3849
   218  0000                     _RXF2SIDH	set	3848
   219  0000                     _RXF1EIDL	set	3847
   220  0000                     _RXF1EIDH	set	3846
   221  0000                     _RXF1SIDLbits	set	3845
   222  0000                     _RXF1SIDL	set	3845
   223  0000                     _RXF1SIDH	set	3844
   224  0000                     _RXF0EIDL	set	3843
   225  0000                     _RXF0EIDH	set	3842
   226  0000                     _RXF0SIDLbits	set	3841
   227  0000                     _RXF0SIDL	set	3841
   228  0000                     _RXF0SIDH	set	3840
   229  0000                     _RXM1EIDL	set	3871
   230  0000                     _RXM1EIDH	set	3870
   231  0000                     _RXM1SIDL	set	3869
   232  0000                     _RXM1SIDH	set	3868
   233  0000                     _RXM0EIDL	set	3867
   234  0000                     _RXM0EIDH	set	3866
   235  0000                     _RXM0SIDL	set	3865
   236  0000                     _RXM0SIDH	set	3864
   237  0000                     _RXB1CON	set	3920
   238  0000                     _TXB0CON	set	3904
   239  0000                     _TBLPTR	set	4086
   240  0000                     _TABLAT	set	4085
   241  0000                     _EECON2	set	4007
   242  0000                     _EEDATA	set	4008
   243  0000                     _EECON1bits	set	4006
   244  0000                     _EEADR	set	4009
   245  0000                     _EEADRH	set	4010
   246  0000                     _INTCONbits	set	4082
   247  0000                     _WDTCONbits	set	4049
   248  0000                     _RCONbits	set	4048
   249  0000                     _TRISC	set	3988
   250  0000                     _LATC	set	3979
   251  0000                     _T1CON	set	4045
   252  0000                     _TMR1H	set	4047
   253  0000                     _TMR1L	set	4046
   254  0000                     _LATE	set	3981
   255  0000                     _LATA	set	3977
   256  0000                     _LATB	set	3978
   257  0000                     _LATD	set	3980
   258  0000                     _TRISD	set	3989
   259  0000                     _TRISE	set	3990
   260  0000                     _TRISB	set	3987
   261  0000                     _TRISA	set	3986
   262  0000                     _RXB0DLCbits	set	3941
   263  0000                     _RXB0DLC	set	3941
   264  0000                     _RXB0SIDH	set	3937
   265  0000                     _RXB0SIDLbits	set	3938
   266  0000                     _RXB0SIDL	set	3938
   267  0000                     _RXB0EIDH	set	3939
   268  0000                     _RXB0EIDL	set	3940
   269  0000                     _COMSTATbits	set	3956
   270  0000                     _RXB0CONbits	set	3936
   271  0000                     _BRGCON3bits	set	3954
   272  0000                     _BRGCON2bits	set	3953
   273  0000                     _BRGCON1bits	set	3952
   274  0000                     _CIOCON	set	3955
   275  0000                     _ECANCON	set	3959
   276  0000                     _PIR3	set	4004
   277  0000                     _IPR3	set	4005
   278  0000                     _PIE3	set	4003
   279  0000                     _RXB0CON	set	3936
   280  0000                     _CANSTAT	set	3950
   281  0000                     _CANCON	set	3951
   282  0000                     _RCON	set	4048
   283  0000                     _RXB0D0	set	3942
   284  0000                     _TMR1IF	set	31984
   285  0000                     _TMR1IP	set	31992
   286  0000                     _PEIE	set	32662
   287  0000                     _IPEN	set	32391
   288  0000                     _TMR1ON	set	32360
   289  0000                     _TMR1IE	set	31976
   290  0000                     _IRCF0	set	32412
   291  0000                     _IRCF1	set	32413
   292  0000                     _IRCF2	set	32414
   293                           
   294                           ; #config settings
   295  0000                     
   296                           	psect	cinit
   297  002620                     __pcinit:
   298                           	opt callstack 0
   299  002620                     start_initialization:
   300                           	opt callstack 0
   301  002620                     __initialization:
   302                           	opt callstack 0
   303                           
   304                           ; Initialize objects allocated to BANK0 (2 bytes)
   305                           ; load TBLPTR registers with __pidataBANK0
   306  002620  0E60               	movlw	low __pidataBANK0
   307  002622  6EF6               	movwf	tblptrl,c
   308  002624  0E2D               	movlw	high __pidataBANK0
   309  002626  6EF7               	movwf	tblptrh,c
   310  002628  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   311  00262A  6EF8               	movwf	tblptru,c
   312  00262C  0009               	tblrd		*+	;fetch initializer
   313  00262E  CFF5 F0EF          	movff	tablat,__pdataBANK0
   314  002632  0009               	tblrd		*+	;fetch initializer
   315  002634  CFF5 F0F0          	movff	tablat,__pdataBANK0+1
   316                           
   317                           ; Initialize objects allocated to COMRAM (18 bytes)
   318                           ; load TBLPTR registers with __pidataCOMRAM
   319  002638  0EC6               	movlw	low __pidataCOMRAM
   320  00263A  6EF6               	movwf	tblptrl,c
   321  00263C  0E2C               	movlw	high __pidataCOMRAM
   322  00263E  6EF7               	movwf	tblptrh,c
   323  002640  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   324  002642  6EF8               	movwf	tblptru,c
   325  002644  EE00  F03A         	lfsr	0,__pdataCOMRAM
   326  002648  EE10 F012          	lfsr	1,18
   327  00264C                     copy_data0:
   328  00264C  0009               	tblrd		*+
   329  00264E  CFF5 FFEE          	movff	tablat,postinc0
   330  002652  50E5               	movf	postdec1,w,c
   331  002654  50E1               	movf	fsr1l,w,c
   332  002656  E1FA               	bnz	copy_data0
   333                           
   334                           ; Clear objects allocated to BIGRAM (544 bytes)
   335  002658  EE00  F0F1         	lfsr	0,__pbssBIGRAM
   336  00265C  EE12 F020          	lfsr	1,544
   337  002660                     clear_0:
   338  002660  6AEE               	clrf	postinc0,c
   339  002662  50E5               	movf	postdec1,w,c
   340  002664  50E1               	movf	fsr1l,w,c
   341  002666  E1FC               	bnz	clear_0
   342  002668  50E2               	movf	fsr1h,w,c
   343  00266A  E1FA               	bnz	clear_0
   344                           
   345                           ; Clear objects allocated to BANK0 (126 bytes)
   346  00266C  EE00  F060         	lfsr	0,__pbssBANK0
   347  002670  0E7E               	movlw	126
   348  002672                     clear_1:
   349  002672  6AEE               	clrf	postinc0,c
   350  002674  06E8               	decf	wreg,f,c
   351  002676  E1FD               	bnz	clear_1
   352                           
   353                           ; Clear objects allocated to COMRAM (28 bytes)
   354  002678  EE00  F01E         	lfsr	0,__pbssCOMRAM
   355  00267C  0E1C               	movlw	28
   356  00267E                     clear_2:
   357  00267E  6AEE               	clrf	postinc0,c
   358  002680  06E8               	decf	wreg,f,c
   359  002682  E1FD               	bnz	clear_2
   360  002684                     end_of_initialization:
   361                           	opt callstack 0
   362  002684                     __end_of__initialization:
   363                           	opt callstack 0
   364  002684  904C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   365  002686  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   366  002688  0E00               	movlw	low (__Lmediumconst shr (0+16))
   367  00268A  6EF8               	movwf	tblptru,c
   368  00268C  0100               	movlb	0
   369  00268E  EF85  F010         	goto	_main	;jump to C main() function
   370                           
   371                           	psect	bssCOMRAM
   372  00001E                     __pbssCOMRAM:
   373                           	opt callstack 0
   374  00001E                     FRAME_SensorExcitationStatus@statwect:
   375                           	opt callstack 0
   376  00001E                     	ds	2
   377  000020                     _MinPower:
   378                           	opt callstack 0
   379  000020                     	ds	2
   380  000022                     _MinRange:
   381                           	opt callstack 0
   382  000022                     	ds	2
   383  000024                     _MinAdres:
   384                           	opt callstack 0
   385  000024                     	ds	2
   386  000026                     WritetoEEPROM@GIE_Status:
   387                           	opt callstack 0
   388  000026                     	ds	1
   389  000027                     	ds	1
   390  000028                     	ds	1
   391  000029                     ISR_low@ramkaStanuU8:
   392                           	opt callstack 0
   393  000029                     	ds	1
   394  00002A                     	ds	1
   395  00002B                     _LOCK:
   396                           	opt callstack 0
   397  00002B                     	ds	1
   398  00002C                     _NeightAdress8:
   399                           	opt callstack 0
   400  00002C                     	ds	2
   401  00002E                     _NeightAdress7:
   402                           	opt callstack 0
   403  00002E                     	ds	2
   404  000030                     _NeightAdress6:
   405                           	opt callstack 0
   406  000030                     	ds	2
   407  000032                     _NeightAdress5:
   408                           	opt callstack 0
   409  000032                     	ds	2
   410  000034                     _NeightAdress4:
   411                           	opt callstack 0
   412  000034                     	ds	2
   413  000036                     _NeightAdress3:
   414                           	opt callstack 0
   415  000036                     	ds	2
   416  000038                     _NeightAdress1:
   417                           	opt callstack 0
   418  000038                     	ds	2
   419                           
   420                           	psect	dataCOMRAM
   421  00003A                     __pdataCOMRAM:
   422                           	opt callstack 0
   423  00003A                     _MaxPower:
   424                           	opt callstack 0
   425  00003A                     	ds	2
   426  00003C                     _MaxRange:
   427                           	opt callstack 0
   428  00003C                     	ds	2
   429  00003E                     _MaxAdres:
   430                           	opt callstack 0
   431  00003E                     	ds	2
   432  000040                     LED_Update@pos2:
   433                           	opt callstack 0
   434  000040                     	ds	2
   435  000042                     LED_Update@pos1:
   436                           	opt callstack 0
   437  000042                     	ds	2
   438  000044                     _Fulfillment_Lvl:
   439                           	opt callstack 0
   440  000044                     	ds	2
   441  000046                     LED_Update@laststat:
   442                           	opt callstack 0
   443  000046                     	ds	1
   444  000047                     LED_Update@Green:
   445                           	opt callstack 0
   446  000047                     	ds	1
   447  000048                     _Init_Data:
   448                           	opt callstack 0
   449  000048                     	ds	2
   450  00004A                     _NeightAdress2:
   451                           	opt callstack 0
   452  00004A                     	ds	2
   453                           
   454                           	psect	bssBANK0
   455  000060                     __pbssBANK0:
   456                           	opt callstack 0
   457  000060                     _ramkaCanRxKarty:
   458                           	opt callstack 0
   459  000060                     	ds	85
   460  0000B5                     _ramkaCanTxKarty:
   461                           	opt callstack 0
   462  0000B5                     	ds	17
   463  0000C6                     _Flagi:
   464                           	opt callstack 0
   465  0000C6                     	ds	5
   466  0000CB                     _DaneCan:
   467                           	opt callstack 0
   468  0000CB                     	ds	4
   469  0000CF                     _DetectorLedRadar:
   470                           	opt callstack 0
   471  0000CF                     	ds	3
   472  0000D2                     _nextEEPosition:
   473                           	opt callstack 0
   474  0000D2                     	ds	2
   475  0000D4                     _czujnikiNaMapie:
   476                           	opt callstack 0
   477  0000D4                     	ds	2
   478  0000D6                     _TMR1_Update_flag:
   479                           	opt callstack 0
   480  0000D6                     	ds	2
   481  0000D8                     _Dane:
   482                           	opt callstack 0
   483  0000D8                     	ds	2
   484  0000DA                     _neighborsAdress:
   485                           	opt callstack 0
   486  0000DA                     	ds	2
   487  0000DC                     _ustawieniaKarty:
   488                           	opt callstack 0
   489  0000DC                     	ds	2
   490                           
   491                           	psect	dataBANK0
   492  0000EF                     __pdataBANK0:
   493                           	opt callstack 0
   494  0000EF                     MOC_Frame_Counter@zeta:
   495                           	opt callstack 0
   496  0000EF                     	ds	2
   497                           
   498                           	psect	bssBIGRAM
   499  0000F1                     __pbssBIGRAM:
   500                           	opt callstack 0
   501  0000F1                     _wartosciSasiada:
   502                           	opt callstack 0
   503  0000F1                     	ds	544
   504                           
   505                           	psect	cstackBANK0
   506  0000DE                     __pcstackBANK0:
   507                           	opt callstack 0
   508  0000DE                     TRM_DataTransmition@canMessage:
   509                           	opt callstack 0
   510                           
   511                           ; 17 bytes @ 0x0
   512  0000DE                     	ds	17
   513                           
   514                           	psect	cstackCOMRAM
   515  000001                     __pcstackCOMRAM:
   516                           	opt callstack 0
   517  000001                     TMR1_Timer_reset@t1L:
   518                           	opt callstack 0
   519  000001                     i1TMR1_Update_flag_Set@a:
   520                           	opt callstack 0
   521                           
   522                           ; 2 bytes @ 0x0
   523  000001                     	ds	1
   524  000002                     TMR1_Timer_reset@t1H:
   525                           	opt callstack 0
   526                           
   527                           ; 1 bytes @ 0x1
   528  000002                     	ds	1
   529  000003                     ??_ISR_low:
   530  000003                     
   531                           ; 1 bytes @ 0x2
   532  000003                     	ds	3
   533  000006                     ??_CAN_Setup:
   534  000006                     ?_FLASH_Read:
   535                           	opt callstack 0
   536  000006                     ?_TMR1_Update_flag_Get:
   537                           	opt callstack 0
   538  000006                     ?_LED_Right:
   539                           	opt callstack 0
   540  000006                     ?_LED_Left:
   541                           	opt callstack 0
   542  000006                     ?_MOC_Wynikowa_wartosc_roznicowa:
   543                           	opt callstack 0
   544  000006                     ?_MOC_Frame_Counter:
   545                           	opt callstack 0
   546  000006                     ?_MOC_Aktualna_Temperatura:
   547                           	opt callstack 0
   548  000006                     ?_MOC_NOTWORK:
   549                           	opt callstack 0
   550  000006                     ?_IsInNeighbors:
   551                           	opt callstack 0
   552  000006                     ?___awdiv:
   553                           	opt callstack 0
   554  000006                     ?___awmod:
   555                           	opt callstack 0
   556  000006                     ?___lwdiv:
   557                           	opt callstack 0
   558  000006                     LOCK_Set@k:
   559                           	opt callstack 0
   560  000006                     CAN_MoveBuffIntoFrame@Ram:
   561                           	opt callstack 0
   562  000006                     CAN_GenID@message:
   563                           	opt callstack 0
   564  000006                     LED_Right@a:
   565                           	opt callstack 0
   566  000006                     LED_Left@a:
   567                           	opt callstack 0
   568  000006                     LED_Control@diode:
   569                           	opt callstack 0
   570  000006                     TMR1_Update_flag_Set@a:
   571                           	opt callstack 0
   572  000006                     IsInNeighbors@message_adress:
   573                           	opt callstack 0
   574  000006                     FRAME_ExcitationMultiplier@message:
   575                           	opt callstack 0
   576  000006                     FRAME_AveragingTimes@message:
   577                           	opt callstack 0
   578  000006                     FRAME_AxisStatus@message:
   579                           	opt callstack 0
   580  000006                     FRAME_DataUpdateAndChangeOption@message:
   581                           	opt callstack 0
   582  000006                     FRAME_MapPosition@message:
   583                           	opt callstack 0
   584  000006                     FRAME_SoftwareVersion@message:
   585                           	opt callstack 0
   586  000006                     FRAME_AnalogValue@message:
   587                           	opt callstack 0
   588  000006                     FRAME_PrzypisanieDokarty@message:
   589                           	opt callstack 0
   590  000006                     FRAME_AdressOfNeighbors@message:
   591                           	opt callstack 0
   592  000006                     NVMalloc@size:
   593                           	opt callstack 0
   594  000006                     ReadfromEEPROM@Address:
   595                           	opt callstack 0
   596  000006                     WritetoEEPROM@Address:
   597                           	opt callstack 0
   598  000006                     ___awdiv@dividend:
   599                           	opt callstack 0
   600  000006                     ___awmod@dividend:
   601                           	opt callstack 0
   602  000006                     ___lwdiv@dividend:
   603                           	opt callstack 0
   604  000006                     FLASH_Read@addr:
   605                           	opt callstack 0
   606  000006                     FLASH_Write@addr:
   607                           	opt callstack 0
   608                           
   609                           ; 4 bytes @ 0x5
   610  000006                     	ds	2
   611  000008                     ??_LED_Right:
   612  000008                     ??_FRAME_DataUpdateAndChangeOption:
   613  000008                     ??_FRAME_PrzypisanieDokarty:
   614  000008                     CAN_GenID@frameID:
   615                           	opt callstack 0
   616  000008                     WritetoEEPROM@Data:
   617                           	opt callstack 0
   618  000008                     CAN_MoveBuffIntoFrame@Buf:
   619                           	opt callstack 0
   620  000008                     LED_Left@b:
   621                           	opt callstack 0
   622  000008                     FRAME_SensorExcitationStatus@message:
   623                           	opt callstack 0
   624  000008                     FRAME_AnalogValue@set:
   625                           	opt callstack 0
   626  000008                     FRAME_AdressOfNeighbors@nrRamki:
   627                           	opt callstack 0
   628  000008                     NVMalloc@location:
   629                           	opt callstack 0
   630  000008                     NVMRead@dest:
   631                           	opt callstack 0
   632  000008                     ___awdiv@divisor:
   633                           	opt callstack 0
   634  000008                     ___awmod@divisor:
   635                           	opt callstack 0
   636  000008                     ___lwdiv@divisor:
   637                           	opt callstack 0
   638                           
   639                           ; 2 bytes @ 0x7
   640  000008                     	ds	1
   641  000009                     ??_CAN_GenID:
   642  000009                     FRAME_ExcitationMultiplier@i:
   643                           	opt callstack 0
   644  000009                     NVMWrite@source:
   645                           	opt callstack 0
   646                           
   647                           ; 2 bytes @ 0x8
   648  000009                     	ds	1
   649  00000A                     ??_FRAME_SensorExcitationStatus:
   650  00000A                     ??_FRAME_AdressOfNeighbors:
   651  00000A                     ??_NVMalloc:
   652  00000A                     CAN_MoveBuffIntoFrame@i:
   653                           	opt callstack 0
   654  00000A                     LED_Control@color:
   655                           	opt callstack 0
   656  00000A                     ___awdiv@counter:
   657                           	opt callstack 0
   658  00000A                     ___awmod@counter:
   659                           	opt callstack 0
   660  00000A                     ___lwdiv@counter:
   661                           	opt callstack 0
   662  00000A                     LED_Right@b:
   663                           	opt callstack 0
   664  00000A                     NVMRead@addr:
   665                           	opt callstack 0
   666  00000A                     FLASH_Write@val:
   667                           	opt callstack 0
   668                           
   669                           ; 2 bytes @ 0x9
   670  00000A                     	ds	1
   671  00000B                     ___awdiv@sign:
   672                           	opt callstack 0
   673  00000B                     ___awmod@sign:
   674                           	opt callstack 0
   675  00000B                     CAN_SendFrame@message:
   676                           	opt callstack 0
   677  00000B                     NVMWrite@addr:
   678                           	opt callstack 0
   679  00000B                     ___lwdiv@quotient:
   680                           	opt callstack 0
   681                           
   682                           ; 2 bytes @ 0xA
   683  00000B                     	ds	1
   684  00000C                     ??_FLASH_Write:
   685  00000C                     FRAME_SensorExcitationStatus@tru:
   686                           	opt callstack 0
   687  00000C                     FRAME_AccelerometerStatus@message:
   688                           	opt callstack 0
   689  00000C                     FRAME_ExcitationValue@message:
   690                           	opt callstack 0
   691  00000C                     NVMRead@count:
   692                           	opt callstack 0
   693  00000C                     ___awdiv@quotient:
   694                           	opt callstack 0
   695                           
   696                           ; 2 bytes @ 0xB
   697  00000C                     	ds	1
   698  00000D                     ??_CAN_SendFrame:
   699  00000D                     LED_Light_Pos@pos:
   700                           	opt callstack 0
   701  00000D                     FRAME_Plot@message:
   702                           	opt callstack 0
   703  00000D                     NVMWrite@count:
   704                           	opt callstack 0
   705                           
   706                           ; 2 bytes @ 0xC
   707  00000D                     	ds	1
   708  00000E                     ??_FRAME_AccelerometerStatus:
   709  00000E                     ??_FRAME_ExcitationValue:
   710  00000E                     ??_ReadDataToEEPROM:
   711  00000E                     NVMInit@result:
   712                           	opt callstack 0
   713  00000E                     CAN_TakeFrame@message:
   714                           	opt callstack 0
   715  00000E                     FRAME_AdressOfNeighbors@kier:
   716                           	opt callstack 0
   717  00000E                     FLASH_Write@GIEBitValue:
   718                           	opt callstack 0
   719                           
   720                           ; 2 bytes @ 0xD
   721  00000E                     	ds	1
   722  00000F                     ??_WriteDataToEEPROM:
   723  00000F                     ??_FRAME_Plot:
   724  00000F                     LED_Light_Pos@fulfillment:
   725                           	opt callstack 0
   726                           
   727                           ; 2 bytes @ 0xE
   728  00000F                     	ds	1
   729  000010                     ??_CAN_TakeFrame:
   730  000010                     FLASH_Write@flashWrBufPtr:
   731                           	opt callstack 0
   732                           
   733                           ; 2 bytes @ 0xF
   734  000010                     	ds	1
   735  000011                     LED_Light_Pos@color:
   736                           	opt callstack 0
   737  000011                     FRAME_DeviceReset@message:
   738                           	opt callstack 0
   739                           
   740                           ; 2 bytes @ 0x10
   741  000011                     	ds	1
   742  000012                     CAN_TakeFrame@tempCON:
   743                           	opt callstack 0
   744  000012                     LED_Light_Pos@LED_array:
   745                           	opt callstack 0
   746                           
   747                           ; 2 bytes @ 0x11
   748  000012                     	ds	1
   749  000013                     CAN_TakeFrame@k:
   750                           	opt callstack 0
   751                           
   752                           ; 1 bytes @ 0x12
   753  000013                     	ds	1
   754  000014                     LED_Light_Pos@pos2:
   755                           	opt callstack 0
   756  000014                     FRAME_HandleCanFrame@message:
   757                           	opt callstack 0
   758                           
   759                           ; 2 bytes @ 0x13
   760  000014                     	ds	2
   761  000016                     ??_FRAME_HandleCanFrame:
   762  000016                     LED_Light_Pos@flage:
   763                           	opt callstack 0
   764                           
   765                           ; 2 bytes @ 0x15
   766  000016                     	ds	2
   767  000018                     
   768                           ; 1 bytes @ 0x17
   769  000018                     	ds	1
   770  000019                     FRAME_HandleCanFrame@ident:
   771                           	opt callstack 0
   772                           
   773                           ; 2 bytes @ 0x18
   774  000019                     	ds	2
   775  00001B                     FRAME_HandleCanFrame@identyfikator:
   776                           	opt callstack 0
   777                           
   778                           ; 1 bytes @ 0x1A
   779  00001B                     	ds	1
   780  00001C                     main@adr:
   781                           	opt callstack 0
   782                           
   783                           ; 2 bytes @ 0x1B
   784  00001C                     	ds	2
   785                           
   786 ;;
   787 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   788 ;;
   789 ;; *************** function _main *****************
   790 ;; Defined at:
   791 ;;		line 103 in file "main.c"
   792 ;; Parameters:    Size  Location     Type
   793 ;;		None
   794 ;; Auto vars:     Size  Location     Type
   795 ;;  adr             2   27[COMRAM] int 
   796 ;; Return value:  Size  Location     Type
   797 ;;                  1    wreg      void 
   798 ;; Registers used:
   799 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   800 ;; Tracked objects:
   801 ;;		On entry : 0/0
   802 ;;		On exit  : 0/0
   803 ;;		Unchanged: 0/0
   804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   806 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   808 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   809 ;;Total ram usage:        2 bytes
   810 ;; Hardware stack levels required when called:    9
   811 ;; This function calls:
   812 ;;		_FLASH_Read
   813 ;;		_FLASH_Write
   814 ;;		_INI_All
   815 ;;		_LED_Update
   816 ;;		_RADAR_Use
   817 ;;		_TMR1_Update_flag_Get
   818 ;;		_TMR1_Update_flag_Set
   819 ;;		_TRM_DataTransmition
   820 ;; This function is called by:
   821 ;;		Startup code after reset
   822 ;; This function uses a non-reentrant model
   823 ;;
   824                           
   825                           	psect	text0
   826  00210A                     __ptext0:
   827                           	opt callstack 0
   828  00210A                     _main:
   829                           	opt callstack 22
   830                           
   831                           ;main.c: 106: int adr = FLASH_Read(0x200000);
   832                           
   833                           ;incstack = 0
   834  00210A  0E00               	movlw	0
   835  00210C  6E06               	movwf	FLASH_Read@addr,c
   836  00210E  0E00               	movlw	0
   837  002110  6E07               	movwf	FLASH_Read@addr+1,c
   838  002112  0E20               	movlw	32
   839  002114  6E08               	movwf	FLASH_Read@addr+2,c
   840  002116  0E00               	movlw	0
   841  002118  6E09               	movwf	FLASH_Read@addr+3,c
   842  00211A  EC58  F016         	call	_FLASH_Read	;wreg free
   843  00211E  C006  F01C         	movff	?_FLASH_Read,main@adr
   844  002122  C007  F01D         	movff	?_FLASH_Read+1,main@adr+1
   845                           
   846                           ;main.c: 107: adr |= FLASH_Read(0x200001)<<8;
   847  002126  0E01               	movlw	1
   848  002128  6E06               	movwf	FLASH_Read@addr,c
   849  00212A  0E00               	movlw	0
   850  00212C  6E07               	movwf	FLASH_Read@addr+1,c
   851  00212E  0E20               	movlw	32
   852  002130  6E08               	movwf	FLASH_Read@addr+2,c
   853  002132  0E00               	movlw	0
   854  002134  6E09               	movwf	FLASH_Read@addr+3,c
   855  002136  EC58  F016         	call	_FLASH_Read	;wreg free
   856  00213A  C006  F007         	movff	?_FLASH_Read,?_FLASH_Read+1
   857  00213E  6A06               	clrf	?_FLASH_Read,c
   858  002140  5006               	movf	?_FLASH_Read,w,c
   859  002142  121C               	iorwf	main@adr,f,c
   860  002144  5007               	movf	?_FLASH_Read+1,w,c
   861  002146  121D               	iorwf	main@adr+1,f,c
   862                           
   863                           ;main.c: 111: FLASH_Write(0x200000,0x76);
   864  002148  0E00               	movlw	0
   865  00214A  6E06               	movwf	FLASH_Write@addr,c
   866  00214C  0E00               	movlw	0
   867  00214E  6E07               	movwf	FLASH_Write@addr+1,c
   868  002150  0E20               	movlw	32
   869  002152  6E08               	movwf	FLASH_Write@addr+2,c
   870  002154  0E00               	movlw	0
   871  002156  6E09               	movwf	FLASH_Write@addr+3,c
   872  002158  0E00               	movlw	0
   873  00215A  6E0B               	movwf	FLASH_Write@val+1,c
   874  00215C  0E76               	movlw	118
   875  00215E  6E0A               	movwf	FLASH_Write@val,c
   876  002160  EC5A  F012         	call	_FLASH_Write	;wreg free
   877                           
   878                           ;main.c: 112: FLASH_Write(0x200001,0x40);
   879  002164  0E01               	movlw	1
   880  002166  6E06               	movwf	FLASH_Write@addr,c
   881  002168  0E00               	movlw	0
   882  00216A  6E07               	movwf	FLASH_Write@addr+1,c
   883  00216C  0E20               	movlw	32
   884  00216E  6E08               	movwf	FLASH_Write@addr+2,c
   885  002170  0E00               	movlw	0
   886  002172  6E09               	movwf	FLASH_Write@addr+3,c
   887  002174  0E00               	movlw	0
   888  002176  6E0B               	movwf	FLASH_Write@val+1,c
   889  002178  0E40               	movlw	64
   890  00217A  6E0A               	movwf	FLASH_Write@val,c
   891  00217C  EC5A  F012         	call	_FLASH_Write	;wreg free
   892                           
   893                           ;main.c: 117: DaneCan.adresCAN = adr;
   894  002180  C01C  F0CD         	movff	main@adr,_DaneCan+2
   895  002184  C01D  F0CE         	movff	main@adr+1,_DaneCan+3
   896                           
   897                           ;main.c: 118: INI_All();
   898  002188  EC0D  F016         	call	_INI_All	;wreg free
   899                           
   900                           ;main.c: 120: RCON = 0xFF;
   901  00218C  68D0               	setf	4048,c	;volatile
   902  00218E                     l5111:
   903                           
   904                           ;main.c: 123: {;main.c: 124: if(DetectorLedRadar.Flags.obsluzWeWy == 1)
   905  00218E  0100               	movlb	0	; () banked
   906  002190  B1CF               	btfsc	_DetectorLedRadar& (0+255),0,b
   907                           
   908                           ; BSR set to: 0
   909                           ;main.c: 125: {;main.c: 126: DetectorLedRadar.Flags.obsluzWeWy = 0;
   910  002192  91CF               	bcf	_DetectorLedRadar& (0+255),0,b
   911                           
   912                           ; BSR set to: 0
   913                           ;main.c: 128: };main.c: 130: if(TMR1_Update_flag_Get()==1)
   914  002194  EC99  F016         	call	_TMR1_Update_flag_Get	;wreg free
   915  002198  0406               	decf	?_TMR1_Update_flag_Get,w,c
   916  00219A  1007               	iorwf	?_TMR1_Update_flag_Get+1,w,c
   917  00219C  A4D8               	btfss	status,2,c
   918  00219E  D008               	goto	l5121
   919                           
   920                           ;main.c: 131: {;main.c: 132: LED_Update();
   921  0021A0  ECD0  F011         	call	_LED_Update	;wreg free
   922                           
   923                           ;main.c: 133: TMR1_Update_flag_Set(0);
   924  0021A4  0E00               	movlw	0
   925  0021A6  6E07               	movwf	TMR1_Update_flag_Set@a+1,c
   926  0021A8  0E00               	movlw	0
   927  0021AA  6E06               	movwf	TMR1_Update_flag_Set@a,c
   928  0021AC  EC94  F016         	call	_TMR1_Update_flag_Set	;wreg free
   929  0021B0                     l5121:
   930                           
   931                           ;main.c: 135: };main.c: 139: TRM_DataTransmition();
   932  0021B0  EC64  F014         	call	_TRM_DataTransmition	;wreg free
   933                           
   934                           ;main.c: 140: RADAR_Use();
   935  0021B4  EC84  F016         	call	_RADAR_Use	;wreg free
   936  0021B8  0004               	clrwdt		;# 
   937                           
   938                           ;main.c: 142: }
   939  0021BA  D7E9               	goto	l5111
   940  0021BC                     __end_of_main:
   941                           	opt callstack 0
   942                           
   943 ;; *************** function _TRM_DataTransmition *****************
   944 ;; Defined at:
   945 ;;		line 19 in file "TRM.c"
   946 ;; Parameters:    Size  Location     Type
   947 ;;		None
   948 ;; Auto vars:     Size  Location     Type
   949 ;;  canMessage     17    0[BANK0 ] struct .
   950 ;;  i               1    0        unsigned char 
   951 ;; Return value:  Size  Location     Type
   952 ;;                  1    wreg      void 
   953 ;; Registers used:
   954 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   955 ;; Tracked objects:
   956 ;;		On entry : 0/0
   957 ;;		On exit  : 0/0
   958 ;;		Unchanged: 0/0
   959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   961 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
   962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   963 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
   964 ;;Total ram usage:       17 bytes
   965 ;; Hardware stack levels used:    1
   966 ;; Hardware stack levels required when called:    8
   967 ;; This function calls:
   968 ;;		_CAN_TakeFrame
   969 ;;		_FRAME_HandleCanFrame
   970 ;; This function is called by:
   971 ;;		_main
   972 ;; This function uses a non-reentrant model
   973 ;;
   974                           
   975                           	psect	text1
   976  0028C8                     __ptext1:
   977                           	opt callstack 0
   978  0028C8                     _TRM_DataTransmition:
   979                           	opt callstack 22
   980                           
   981                           ;TRM.c: 21: static BYTE weWyU8 = 0, czujnikWeWyU8 = 0;;TRM.c: 22: BYTE i;;TRM.c: 23: mID
      +                           canMessage;;TRM.c: 26: if(DaneCan.Flags.wyslijRamkeStanu)
   982                           
   983                           ;incstack = 0
   984  0028C8  0100               	movlb	0	; () banked
   985  0028CA  A1CB               	btfss	_DaneCan& (0+255),0,b
   986  0028CC  D014               	goto	l5087
   987                           
   988                           ; BSR set to: 0
   989                           ;TRM.c: 27: {;TRM.c: 29: canMessage.message_type = 0x02;
   990  0028CE  0E02               	movlw	2
   991  0028D0  6FDF               	movwf	(TRM_DataTransmition@canMessage+1)& (0+255),b
   992                           
   993                           ;TRM.c: 30: canMessage.id.Val = 0;
   994  0028D2  0E00               	movlw	0
   995  0028D4  6FE2               	movwf	(TRM_DataTransmition@canMessage+4)& (0+255),b
   996  0028D6  0E00               	movlw	0
   997  0028D8  6FE3               	movwf	(TRM_DataTransmition@canMessage+5)& (0+255),b
   998  0028DA  0E00               	movlw	0
   999  0028DC  6FE4               	movwf	(TRM_DataTransmition@canMessage+6)& (0+255),b
  1000  0028DE  0E00               	movlw	0
  1001  0028E0  6FE5               	movwf	(TRM_DataTransmition@canMessage+7)& (0+255),b
  1002                           
  1003                           ;TRM.c: 31: canMessage.id.v[2] = 0x01 *4;
  1004  0028E2  0E04               	movlw	4
  1005  0028E4  6FE4               	movwf	(TRM_DataTransmition@canMessage+6)& (0+255),b
  1006                           
  1007                           ; BSR set to: 0
  1008                           ;TRM.c: 32: FRAME_HandleCanFrame(&canMessage);
  1009  0028E6  0EDE               	movlw	low TRM_DataTransmition@canMessage
  1010  0028E8  6E14               	movwf	FRAME_HandleCanFrame@message,c
  1011  0028EA  0E00               	movlw	high TRM_DataTransmition@canMessage
  1012  0028EC  6E15               	movwf	FRAME_HandleCanFrame@message+1,c
  1013  0028EE  EC8E  F00B         	call	_FRAME_HandleCanFrame	;wreg free
  1014                           
  1015                           ;TRM.c: 49: DaneCan.Flags.wyslijRamkeStanu = 0;
  1016  0028F2  0100               	movlb	0	; () banked
  1017  0028F4  91CB               	bcf	_DaneCan& (0+255),0,b
  1018  0028F6                     l5087:
  1019                           
  1020                           ; BSR set to: 0
  1021                           ;TRM.c: 56: };TRM.c: 59: if(CAN_TakeFrame(&canMessage))
  1022  0028F6  0EDE               	movlw	low TRM_DataTransmition@canMessage
  1023  0028F8  6E0E               	movwf	CAN_TakeFrame@message,c
  1024  0028FA  0E00               	movlw	high TRM_DataTransmition@canMessage
  1025  0028FC  6E0F               	movwf	CAN_TakeFrame@message+1,c
  1026  0028FE  EC65  F00A         	call	_CAN_TakeFrame	;wreg free
  1027  002902  0900               	iorlw	0
  1028  002904  B4D8               	btfsc	status,2,c
  1029  002906  0012               	return	
  1030                           
  1031                           ;TRM.c: 64: {;TRM.c: 66: FRAME_HandleCanFrame(&canMessage);
  1032  002908  0EDE               	movlw	low TRM_DataTransmition@canMessage
  1033  00290A  6E14               	movwf	FRAME_HandleCanFrame@message,c
  1034  00290C  0E00               	movlw	high TRM_DataTransmition@canMessage
  1035  00290E  6E15               	movwf	FRAME_HandleCanFrame@message+1,c
  1036  002910  EC8E  F00B         	call	_FRAME_HandleCanFrame	;wreg free
  1037                           
  1038                           ;TRM.c: 67: }
  1039  002914  0012               	return		;funcret
  1040  002916                     __end_of_TRM_DataTransmition:
  1041                           	opt callstack 0
  1042                           
  1043 ;; *************** function _FRAME_HandleCanFrame *****************
  1044 ;; Defined at:
  1045 ;;		line 866 in file "FRAME.c"
  1046 ;; Parameters:    Size  Location     Type
  1047 ;;  message         2   19[COMRAM] PTR struct .
  1048 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1049 ;; Auto vars:     Size  Location     Type
  1050 ;;  ident           2   24[COMRAM] unsigned short 
  1051 ;;  alfa            2    0        int 
  1052 ;;  identyfikato    1   26[COMRAM] unsigned char 
  1053 ;; Return value:  Size  Location     Type
  1054 ;;                  1    wreg      void 
  1055 ;; Registers used:
  1056 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1057 ;; Tracked objects:
  1058 ;;		On entry : 0/0
  1059 ;;		On exit  : 0/0
  1060 ;;		Unchanged: 0/0
  1061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1062 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1063 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1064 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1065 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1066 ;;Total ram usage:        8 bytes
  1067 ;; Hardware stack levels used:    1
  1068 ;; Hardware stack levels required when called:    7
  1069 ;; This function calls:
  1070 ;;		_CAN_GenID
  1071 ;;		_CAN_SendFrame
  1072 ;;		_FRAME_AccelerometerStatus
  1073 ;;		_FRAME_AdressOfNeighbors
  1074 ;;		_FRAME_AnalogValue
  1075 ;;		_FRAME_AveragingTimes
  1076 ;;		_FRAME_AxisStatus
  1077 ;;		_FRAME_DeviceReset
  1078 ;;		_FRAME_ExcitationMultiplier
  1079 ;;		_FRAME_ExcitationValue
  1080 ;;		_FRAME_MapPosition
  1081 ;;		_FRAME_Plot
  1082 ;;		_FRAME_PrzypisanieDokarty
  1083 ;;		_FRAME_SensorExcitationStatus
  1084 ;;		_FRAME_SoftwareVersion
  1085 ;;		_LED_Error
  1086 ;;		___awdiv
  1087 ;; This function is called by:
  1088 ;;		_TRM_DataTransmition
  1089 ;; This function uses a non-reentrant model
  1090 ;;
  1091                           
  1092                           	psect	text2
  1093  00171C                     __ptext2:
  1094                           	opt callstack 0
  1095  00171C                     _FRAME_HandleCanFrame:
  1096                           	opt callstack 22
  1097                           
  1098                           ;FRAME.c: 868: BYTE identyfikator = (BYTE) message->id.v[2]/4;
  1099                           
  1100                           ;incstack = 0
  1101  00171C  EE20 F006          	lfsr	2,6
  1102  001720  5014               	movf	FRAME_HandleCanFrame@message,w,c
  1103  001722  26D9               	addwf	fsr2l,f,c
  1104  001724  5015               	movf	FRAME_HandleCanFrame@message+1,w,c
  1105  001726  22DA               	addwfc	fsr2h,f,c
  1106  001728  50DF               	movf	indf2,w,c
  1107  00172A  6E16               	movwf	??_FRAME_HandleCanFrame& (0+255),c
  1108  00172C  5016               	movf	??_FRAME_HandleCanFrame,w,c
  1109  00172E  6E06               	movwf	___awdiv@dividend,c
  1110  001730  6A07               	clrf	___awdiv@dividend+1,c
  1111  001732  0E00               	movlw	0
  1112  001734  6E09               	movwf	___awdiv@divisor+1,c
  1113  001736  0E04               	movlw	4
  1114  001738  6E08               	movwf	___awdiv@divisor,c
  1115  00173A  EC18  F012         	call	___awdiv	;wreg free
  1116  00173E  5006               	movf	?___awdiv,w,c
  1117  001740  6E1B               	movwf	FRAME_HandleCanFrame@identyfikator,c
  1118                           
  1119                           ;FRAME.c: 871: if(identyfikator != 0x01)
  1120  001742  041B               	decf	FRAME_HandleCanFrame@identyfikator,w,c
  1121  001744  B4D8               	btfsc	status,2,c
  1122  001746  D074               	goto	l5027
  1123                           
  1124                           ;FRAME.c: 872: {;FRAME.c: 873: WORD ident = identyfikator;
  1125  001748  C01B  F019         	movff	FRAME_HandleCanFrame@identyfikator,FRAME_HandleCanFrame@ident
  1126  00174C  6A1A               	clrf	FRAME_HandleCanFrame@ident+1,c
  1127  00174E  D070               	goto	l5027
  1128  001750                     l4997:
  1129                           
  1130                           ;FRAME.c: 880: FRAME_SensorExcitationStatus(message);
  1131  001750  C014  F008         	movff	FRAME_HandleCanFrame@message,FRAME_SensorExcitationStatus@message
  1132  001754  C015  F009         	movff	FRAME_HandleCanFrame@message+1,FRAME_SensorExcitationStatus@message+1
  1133  001758  EC90  F00E         	call	_FRAME_SensorExcitationStatus	;wreg free
  1134                           
  1135                           ;FRAME.c: 881: break;
  1136  00175C  D097               	goto	l5029
  1137  00175E                     l4999:
  1138                           
  1139                           ;FRAME.c: 883: FRAME_AccelerometerStatus(message);
  1140  00175E  C014  F00C         	movff	FRAME_HandleCanFrame@message,FRAME_AccelerometerStatus@message
  1141  001762  C015  F00D         	movff	FRAME_HandleCanFrame@message+1,FRAME_AccelerometerStatus@message+1
  1142  001766  ECAA  F00F         	call	_FRAME_AccelerometerStatus	;wreg free
  1143                           
  1144                           ;FRAME.c: 884: break;
  1145  00176A  D090               	goto	l5029
  1146  00176C                     l5001:
  1147                           
  1148                           ;FRAME.c: 886: FRAME_ExcitationValue(message);
  1149  00176C  C014  F00C         	movff	FRAME_HandleCanFrame@message,FRAME_ExcitationValue@message
  1150  001770  C015  F00D         	movff	FRAME_HandleCanFrame@message+1,FRAME_ExcitationValue@message+1
  1151  001774  EC24  F00F         	call	_FRAME_ExcitationValue	;wreg free
  1152                           
  1153                           ;FRAME.c: 887: break;
  1154  001778  D089               	goto	l5029
  1155  00177A                     l5003:
  1156                           
  1157                           ;FRAME.c: 889: FRAME_ExcitationMultiplier(message);
  1158  00177A  C014  F006         	movff	FRAME_HandleCanFrame@message,FRAME_ExcitationMultiplier@message
  1159  00177E  C015  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_ExcitationMultiplier@message+1
  1160  001782  EC8B  F014         	call	_FRAME_ExcitationMultiplier	;wreg free
  1161                           
  1162                           ;FRAME.c: 890: break;
  1163  001786  D082               	goto	l5029
  1164  001788                     l5005:
  1165                           
  1166                           ;FRAME.c: 892: FRAME_AveragingTimes(message);
  1167  001788  C014  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AveragingTimes@message
  1168  00178C  C015  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AveragingTimes@message+1
  1169  001790  EC69  F015         	call	_FRAME_AveragingTimes	;wreg free
  1170                           
  1171                           ;FRAME.c: 893: break;
  1172  001794  D07B               	goto	l5029
  1173  001796                     l5007:
  1174                           
  1175                           ;FRAME.c: 895: FRAME_AxisStatus(message);
  1176  001796  C014  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AxisStatus@message
  1177  00179A  C015  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AxisStatus@message+1
  1178  00179E  EC4E  F015         	call	_FRAME_AxisStatus	;wreg free
  1179                           
  1180                           ;FRAME.c: 896: break;
  1181  0017A2  D074               	goto	l5029
  1182  0017A4                     l5009:
  1183                           
  1184                           ;FRAME.c: 898: FRAME_DeviceReset(message);
  1185  0017A4  C014  F011         	movff	FRAME_HandleCanFrame@message,FRAME_DeviceReset@message
  1186  0017A8  C015  F012         	movff	FRAME_HandleCanFrame@message+1,FRAME_DeviceReset@message+1
  1187  0017AC  ECEC  F00D         	call	_FRAME_DeviceReset	;wreg free
  1188                           
  1189                           ;FRAME.c: 899: break;
  1190  0017B0  D06D               	goto	l5029
  1191  0017B2                     l5011:
  1192                           
  1193                           ;FRAME.c: 901: FRAME_Plot(message);
  1194  0017B2  C014  F00D         	movff	FRAME_HandleCanFrame@message,FRAME_Plot@message
  1195  0017B6  C015  F00E         	movff	FRAME_HandleCanFrame@message+1,FRAME_Plot@message+1
  1196  0017BA  EC0F  F014         	call	_FRAME_Plot	;wreg free
  1197                           
  1198                           ;FRAME.c: 902: break;
  1199  0017BE  D066               	goto	l5029
  1200  0017C0                     l5013:
  1201                           
  1202                           ;FRAME.c: 904: FRAME_MapPosition(message);
  1203  0017C0  C014  F006         	movff	FRAME_HandleCanFrame@message,FRAME_MapPosition@message
  1204  0017C4  C015  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_MapPosition@message+1
  1205  0017C8  ECB1  F016         	call	_FRAME_MapPosition	;wreg free
  1206                           
  1207                           ;FRAME.c: 905: break;
  1208  0017CC  D05F               	goto	l5029
  1209  0017CE                     l5015:
  1210                           
  1211                           ;FRAME.c: 907: FRAME_SoftwareVersion(message);
  1212  0017CE  C014  F006         	movff	FRAME_HandleCanFrame@message,FRAME_SoftwareVersion@message
  1213  0017D2  C015  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_SoftwareVersion@message+1
  1214  0017D6  EC81  F013         	call	_FRAME_SoftwareVersion	;wreg free
  1215                           
  1216                           ;FRAME.c: 908: break;
  1217  0017DA  D058               	goto	l5029
  1218  0017DC                     l5017:
  1219                           
  1220                           ;FRAME.c: 910: case 0x0D:;FRAME.c: 911: FRAME_AnalogValue(message, identyfikator - 0x0C)
      +                          ;
  1221  0017DC  C014  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AnalogValue@message
  1222  0017E0  C015  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AnalogValue@message+1
  1223  0017E4  0EF4               	movlw	244
  1224  0017E6  241B               	addwf	FRAME_HandleCanFrame@identyfikator,w,c
  1225  0017E8  6E08               	movwf	FRAME_AnalogValue@set,c
  1226  0017EA  6A09               	clrf	FRAME_AnalogValue@set+1,c
  1227  0017EC  0EFF               	movlw	255
  1228  0017EE  2209               	addwfc	FRAME_AnalogValue@set+1,f,c
  1229  0017F0  ECB2  F016         	call	_FRAME_AnalogValue	;wreg free
  1230                           
  1231                           ;FRAME.c: 912: break;
  1232  0017F4  D04B               	goto	l5029
  1233  0017F6                     l5019:
  1234                           
  1235                           ;FRAME.c: 914: FRAME_PrzypisanieDokarty(message);
  1236  0017F6  C014  F006         	movff	FRAME_HandleCanFrame@message,FRAME_PrzypisanieDokarty@message
  1237  0017FA  C015  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_PrzypisanieDokarty@message+1
  1238  0017FE  EC36  F011         	call	_FRAME_PrzypisanieDokarty	;wreg free
  1239                           
  1240                           ;FRAME.c: 915: break;
  1241  001802  D044               	goto	l5029
  1242  001804                     l5021:
  1243                           
  1244                           ;FRAME.c: 917: FRAME_AdressOfNeighbors(message,0x10);
  1245  001804  C014  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AdressOfNeighbors@message
  1246  001808  C015  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AdressOfNeighbors@message+1
  1247  00180C  0E00               	movlw	0
  1248  00180E  6E09               	movwf	FRAME_AdressOfNeighbors@nrRamki+1,c
  1249  001810  0E10               	movlw	16
  1250  001812  6E08               	movwf	FRAME_AdressOfNeighbors@nrRamki,c
  1251  001814  ECA8  F007         	call	_FRAME_AdressOfNeighbors	;wreg free
  1252                           
  1253                           ;FRAME.c: 918: break;
  1254  001818  D039               	goto	l5029
  1255  00181A                     l5023:
  1256                           
  1257                           ;FRAME.c: 920: FRAME_AdressOfNeighbors(message,0x11);
  1258  00181A  C014  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AdressOfNeighbors@message
  1259  00181E  C015  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AdressOfNeighbors@message+1
  1260  001822  0E00               	movlw	0
  1261  001824  6E09               	movwf	FRAME_AdressOfNeighbors@nrRamki+1,c
  1262  001826  0E11               	movlw	17
  1263  001828  6E08               	movwf	FRAME_AdressOfNeighbors@nrRamki,c
  1264  00182A  ECA8  F007         	call	_FRAME_AdressOfNeighbors	;wreg free
  1265                           
  1266                           ;FRAME.c: 921: break;
  1267  00182E  D02E               	goto	l5029
  1268  001830                     l5027:
  1269  001830  501B               	movf	FRAME_HandleCanFrame@identyfikator,w,c
  1270                           
  1271                           ; Switch size 1, requested type "simple"
  1272                           ; Number of cases is 15, Range of values is 1 to 17
  1273                           ; switch strategies available:
  1274                           ; Name         Instructions Cycles
  1275                           ; simple_byte           46    24 (average)
  1276                           ;	Chosen strategy is simple_byte
  1277  001832  0A01               	xorlw	1	; case 1
  1278  001834  B4D8               	btfsc	status,2,c
  1279  001836  D78C               	goto	l4997
  1280  001838  0A03               	xorlw	3	; case 2
  1281  00183A  B4D8               	btfsc	status,2,c
  1282  00183C  D790               	goto	l4999
  1283  00183E  0A01               	xorlw	1	; case 3
  1284  001840  B4D8               	btfsc	status,2,c
  1285  001842  D794               	goto	l5001
  1286  001844  0A07               	xorlw	7	; case 4
  1287  001846  B4D8               	btfsc	status,2,c
  1288  001848  D798               	goto	l5003
  1289  00184A  0A01               	xorlw	1	; case 5
  1290  00184C  B4D8               	btfsc	status,2,c
  1291  00184E  D79C               	goto	l5005
  1292  001850  0A03               	xorlw	3	; case 6
  1293  001852  B4D8               	btfsc	status,2,c
  1294  001854  D7A0               	goto	l5007
  1295  001856  0A01               	xorlw	1	; case 7
  1296  001858  B4D8               	btfsc	status,2,c
  1297  00185A  D7A4               	goto	l5009
  1298  00185C  0A0E               	xorlw	14	; case 9
  1299  00185E  B4D8               	btfsc	status,2,c
  1300  001860  D7A8               	goto	l5011
  1301  001862  0A03               	xorlw	3	; case 10
  1302  001864  B4D8               	btfsc	status,2,c
  1303  001866  D7AC               	goto	l5013
  1304  001868  0A01               	xorlw	1	; case 11
  1305  00186A  B4D8               	btfsc	status,2,c
  1306  00186C  D7B0               	goto	l5015
  1307  00186E  0A07               	xorlw	7	; case 12
  1308  001870  B4D8               	btfsc	status,2,c
  1309  001872  D7B4               	goto	l5017
  1310  001874  0A01               	xorlw	1	; case 13
  1311  001876  B4D8               	btfsc	status,2,c
  1312  001878  D7B1               	goto	l5017
  1313  00187A  0A02               	xorlw	2	; case 15
  1314  00187C  B4D8               	btfsc	status,2,c
  1315  00187E  D7BB               	goto	l5019
  1316  001880  0A1F               	xorlw	31	; case 16
  1317  001882  B4D8               	btfsc	status,2,c
  1318  001884  D7BF               	goto	l5021
  1319  001886  0A01               	xorlw	1	; case 17
  1320  001888  B4D8               	btfsc	status,2,c
  1321  00188A  D7C7               	goto	l5023
  1322  00188C                     l5029:
  1323                           
  1324                           ;FRAME.c: 930: if(message->message_type == 0x02)
  1325  00188C  EE20 F001          	lfsr	2,1
  1326  001890  5014               	movf	FRAME_HandleCanFrame@message,w,c
  1327  001892  26D9               	addwf	fsr2l,f,c
  1328  001894  5015               	movf	FRAME_HandleCanFrame@message+1,w,c
  1329  001896  22DA               	addwfc	fsr2h,f,c
  1330  001898  0E02               	movlw	2
  1331  00189A  18DE               	xorwf	postinc2,w,c
  1332  00189C  A4D8               	btfss	status,2,c
  1333  00189E  0012               	return	
  1334                           
  1335                           ;FRAME.c: 931: {;FRAME.c: 933: message->frame_type = 0x03;
  1336  0018A0  EE20 F002          	lfsr	2,2
  1337  0018A4  5014               	movf	FRAME_HandleCanFrame@message,w,c
  1338  0018A6  26D9               	addwf	fsr2l,f,c
  1339  0018A8  5015               	movf	FRAME_HandleCanFrame@message+1,w,c
  1340  0018AA  22DA               	addwfc	fsr2h,f,c
  1341  0018AC  0E03               	movlw	3
  1342  0018AE  6EDF               	movwf	indf2,c
  1343                           
  1344                           ;FRAME.c: 934: message->message_type = 0x01;
  1345  0018B0  EE20 F001          	lfsr	2,1
  1346  0018B4  5014               	movf	FRAME_HandleCanFrame@message,w,c
  1347  0018B6  26D9               	addwf	fsr2l,f,c
  1348  0018B8  5015               	movf	FRAME_HandleCanFrame@message+1,w,c
  1349  0018BA  22DA               	addwfc	fsr2h,f,c
  1350  0018BC  0E01               	movlw	1
  1351  0018BE  6EDF               	movwf	indf2,c
  1352                           
  1353                           ;FRAME.c: 935: message->id.Val = 0;
  1354  0018C0  EE20 F004          	lfsr	2,4
  1355  0018C4  5014               	movf	FRAME_HandleCanFrame@message,w,c
  1356  0018C6  26D9               	addwf	fsr2l,f,c
  1357  0018C8  5015               	movf	FRAME_HandleCanFrame@message+1,w,c
  1358  0018CA  22DA               	addwfc	fsr2h,f,c
  1359  0018CC  6ADE               	clrf	postinc2,c
  1360  0018CE  6ADE               	clrf	postinc2,c
  1361  0018D0  6ADE               	clrf	postinc2,c
  1362  0018D2  6ADD               	clrf	postdec2,c
  1363                           
  1364                           ;FRAME.c: 937: message->id.v[2] = identyfikator*4;
  1365  0018D4  501B               	movf	FRAME_HandleCanFrame@identyfikator,w,c
  1366  0018D6  0D04               	mullw	4
  1367  0018D8  EE20 F006          	lfsr	2,6
  1368  0018DC  5014               	movf	FRAME_HandleCanFrame@message,w,c
  1369  0018DE  26D9               	addwf	fsr2l,f,c
  1370  0018E0  5015               	movf	FRAME_HandleCanFrame@message+1,w,c
  1371  0018E2  22DA               	addwfc	fsr2h,f,c
  1372  0018E4  CFF3 FFDF          	movff	prodl,indf2
  1373                           
  1374                           ;FRAME.c: 938: CAN_GenID(message,identyfikator);
  1375  0018E8  C014  F006         	movff	FRAME_HandleCanFrame@message,CAN_GenID@message
  1376  0018EC  C015  F007         	movff	FRAME_HandleCanFrame@message+1,CAN_GenID@message+1
  1377  0018F0  C01B  F008         	movff	FRAME_HandleCanFrame@identyfikator,CAN_GenID@frameID
  1378  0018F4  EC98  F012         	call	_CAN_GenID	;wreg free
  1379                           
  1380                           ;FRAME.c: 939: CAN_SendFrame(message);
  1381  0018F8  C014  F00B         	movff	FRAME_HandleCanFrame@message,CAN_SendFrame@message
  1382  0018FC  C015  F00C         	movff	FRAME_HandleCanFrame@message+1,CAN_SendFrame@message+1
  1383  001900  EC8A  F00C         	call	_CAN_SendFrame	;wreg free
  1384                           
  1385                           ;FRAME.c: 950: while(RXB0CONbits.FILHIT3)
  1386  001904  D004               	goto	l734
  1387  001906                     l735:
  1388                           
  1389                           ;FRAME.c: 951: {;FRAME.c: 952: if(TXB0CONbits.TXERR == 1){
  1390  001906  010F               	movlb	15	; () banked
  1391  001908  B940               	btfsc	64,4,b	;volatile
  1392                           
  1393                           ; BSR set to: 15
  1394                           ;FRAME.c: 953: LED_Error();
  1395  00190A  EC2E  F016         	call	_LED_Error	;wreg free
  1396  00190E                     l734:
  1397  00190E  A660               	btfss	3936,3,c	;volatile
  1398  001910  0012               	return	
  1399  001912  D7F9               	goto	l735
  1400  001914                     __end_of_FRAME_HandleCanFrame:
  1401                           	opt callstack 0
  1402                           
  1403 ;; *************** function _LED_Error *****************
  1404 ;; Defined at:
  1405 ;;		line 49 in file "LED.c"
  1406 ;; Parameters:    Size  Location     Type
  1407 ;;		None
  1408 ;; Auto vars:     Size  Location     Type
  1409 ;;		None
  1410 ;; Return value:  Size  Location     Type
  1411 ;;                  2  368[None  ] unsigned int 
  1412 ;; Registers used:
  1413 ;;		wreg, status,2, status,0, cstack
  1414 ;; Tracked objects:
  1415 ;;		On entry : 0/0
  1416 ;;		On exit  : 0/0
  1417 ;;		Unchanged: 0/0
  1418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1423 ;;Total ram usage:        0 bytes
  1424 ;; Hardware stack levels used:    1
  1425 ;; Hardware stack levels required when called:    4
  1426 ;; This function calls:
  1427 ;;		_LED_Control
  1428 ;; This function is called by:
  1429 ;;		_FRAME_HandleCanFrame
  1430 ;; This function uses a non-reentrant model
  1431 ;;
  1432                           
  1433                           	psect	text3
  1434  002C5C                     __ptext3:
  1435                           	opt callstack 0
  1436  002C5C                     _LED_Error:
  1437                           	opt callstack 24
  1438                           
  1439                           ;LED.c: 51: LED_Control(RED,0b1010101010);
  1440                           
  1441                           ;incstack = 0
  1442  002C5C  0E02               	movlw	2
  1443  002C5E  6E07               	movwf	LED_Control@diode+1,c
  1444  002C60  0EAA               	movlw	170
  1445  002C62  6E06               	movwf	LED_Control@diode,c
  1446  002C64  0E00               	movlw	0
  1447  002C66  EC43  F00D         	call	_LED_Control
  1448                           
  1449                           ;LED.c: 52: LED_Control(GREEN,0b0000000000);
  1450  002C6A  0E00               	movlw	0
  1451  002C6C  6E07               	movwf	LED_Control@diode+1,c
  1452  002C6E  0E00               	movlw	0
  1453  002C70  6E06               	movwf	LED_Control@diode,c
  1454  002C72  0E01               	movlw	1
  1455  002C74  EC43  F00D         	call	_LED_Control
  1456  002C78  0012               	return		;funcret
  1457  002C7A                     __end_of_LED_Error:
  1458                           	opt callstack 0
  1459                           
  1460 ;; *************** function _FRAME_SoftwareVersion *****************
  1461 ;; Defined at:
  1462 ;;		line 679 in file "FRAME.c"
  1463 ;; Parameters:    Size  Location     Type
  1464 ;;  message         2    5[COMRAM] PTR struct .
  1465 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1466 ;; Auto vars:     Size  Location     Type
  1467 ;;		None
  1468 ;; Return value:  Size  Location     Type
  1469 ;;                  1    wreg      void 
  1470 ;; Registers used:
  1471 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1472 ;; Tracked objects:
  1473 ;;		On entry : 0/0
  1474 ;;		On exit  : 0/0
  1475 ;;		Unchanged: 0/0
  1476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1477 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1479 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1480 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1481 ;;Total ram usage:        3 bytes
  1482 ;; Hardware stack levels used:    1
  1483 ;; Hardware stack levels required when called:    3
  1484 ;; This function calls:
  1485 ;;		Nothing
  1486 ;; This function is called by:
  1487 ;;		_FRAME_HandleCanFrame
  1488 ;; This function uses a non-reentrant model
  1489 ;;
  1490                           
  1491                           	psect	text4
  1492  002702                     __ptext4:
  1493                           	opt callstack 0
  1494  002702                     _FRAME_SoftwareVersion:
  1495                           	opt callstack 25
  1496                           
  1497                           ;FRAME.c: 682: if(message->message_type == 0x02)
  1498                           
  1499                           ;incstack = 0
  1500  002702  EE20 F001          	lfsr	2,1
  1501  002706  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1502  002708  26D9               	addwf	fsr2l,f,c
  1503  00270A  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1504  00270C  22DA               	addwfc	fsr2h,f,c
  1505  00270E  0E02               	movlw	2
  1506  002710  18DE               	xorwf	postinc2,w,c
  1507  002712  A4D8               	btfss	status,2,c
  1508  002714  0012               	return	
  1509                           
  1510                           ;FRAME.c: 683: {;FRAME.c: 684: message->data_length = 4;
  1511  002716  EE20 F010          	lfsr	2,16
  1512  00271A  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1513  00271C  26D9               	addwf	fsr2l,f,c
  1514  00271E  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1515  002720  22DA               	addwfc	fsr2h,f,c
  1516  002722  0E04               	movlw	4
  1517  002724  6EDF               	movwf	indf2,c
  1518                           
  1519                           ;FRAME.c: 685: message->data[0] = (unsigned char)(Dane->wersjaOprogramowaniaU16 >> 8);
  1520  002726  EE20 F008          	lfsr	2,8
  1521  00272A  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1522  00272C  26D9               	addwf	fsr2l,f,c
  1523  00272E  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1524  002730  22DA               	addwfc	fsr2h,f,c
  1525  002732  5005               	movf	5,w,c
  1526  002734  6EDF               	movwf	indf2,c
  1527                           
  1528                           ;FRAME.c: 686: message->data[1] = (unsigned char)Dane->wersjaOprogramowaniaU16;
  1529  002736  EE20 F009          	lfsr	2,9
  1530  00273A  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1531  00273C  26D9               	addwf	fsr2l,f,c
  1532  00273E  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1533  002740  22DA               	addwfc	fsr2h,f,c
  1534  002742  C004 FFDF          	movff	4,indf2
  1535                           
  1536                           ;FRAME.c: 687: message->data[2] = (unsigned char)(Dane->wersjaSprzetuU16 >> 8);
  1537  002746  EE20 F00A          	lfsr	2,10
  1538  00274A  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1539  00274C  26D9               	addwf	fsr2l,f,c
  1540  00274E  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1541  002750  22DA               	addwfc	fsr2h,f,c
  1542  002752  500B               	movf	11,w,c
  1543  002754  6EDF               	movwf	indf2,c
  1544                           
  1545                           ;FRAME.c: 688: message->data[3] = (unsigned char)Dane->wersjaSprzetuU16;
  1546  002756  EE20 F00B          	lfsr	2,11
  1547  00275A  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1548  00275C  26D9               	addwf	fsr2l,f,c
  1549  00275E  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1550  002760  22DA               	addwfc	fsr2h,f,c
  1551  002762  C00A FFDF          	movff	10,indf2
  1552                           
  1553                           ;FRAME.c: 689: }
  1554  002766  0012               	return		;funcret
  1555  002768                     __end_of_FRAME_SoftwareVersion:
  1556                           	opt callstack 0
  1557                           
  1558 ;; *************** function _FRAME_SensorExcitationStatus *****************
  1559 ;; Defined at:
  1560 ;;		line 64 in file "FRAME.c"
  1561 ;; Parameters:    Size  Location     Type
  1562 ;;  message         2    7[COMRAM] PTR struct .
  1563 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1564 ;; Auto vars:     Size  Location     Type
  1565 ;;  tru             2   11[COMRAM] unsigned int 
  1566 ;; Return value:  Size  Location     Type
  1567 ;;                  1    wreg      void 
  1568 ;; Registers used:
  1569 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1570 ;; Tracked objects:
  1571 ;;		On entry : 0/0
  1572 ;;		On exit  : 0/0
  1573 ;;		Unchanged: 0/0
  1574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1575 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1576 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1577 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1578 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1579 ;;Total ram usage:        6 bytes
  1580 ;; Hardware stack levels used:    1
  1581 ;; Hardware stack levels required when called:    4
  1582 ;; This function calls:
  1583 ;;		_IsInNeighbors
  1584 ;;		_LOCK_Get
  1585 ;;		_LOCK_Set
  1586 ;;		_MOC_Aktualna_Temperatura
  1587 ;;		_MOC_Frame_Counter
  1588 ;;		_MOC_NOTWORK
  1589 ;;		_MOC_Wynikowa_wartosc_roznicowa
  1590 ;; This function is called by:
  1591 ;;		_FRAME_HandleCanFrame
  1592 ;; This function uses a non-reentrant model
  1593 ;;
  1594                           
  1595                           	psect	text5
  1596  001D20                     __ptext5:
  1597                           	opt callstack 0
  1598  001D20                     _FRAME_SensorExcitationStatus:
  1599                           	opt callstack 24
  1600                           
  1601                           ;FRAME.c: 67: static UINT statwect = 0b00000000;;FRAME.c: 68: if(message->message_type =
      +                          = 0x02)
  1602                           
  1603                           ;incstack = 0
  1604  001D20  EE20 F001          	lfsr	2,1
  1605  001D24  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1606  001D26  26D9               	addwf	fsr2l,f,c
  1607  001D28  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1608  001D2A  22DA               	addwfc	fsr2h,f,c
  1609  001D2C  0E02               	movlw	2
  1610  001D2E  18DE               	xorwf	postinc2,w,c
  1611  001D30  A4D8               	btfss	status,2,c
  1612  001D32  D047               	goto	l4689
  1613                           
  1614                           ;FRAME.c: 69: {;FRAME.c: 70: message->data_length = 6;
  1615  001D34  EE20 F010          	lfsr	2,16
  1616  001D38  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1617  001D3A  26D9               	addwf	fsr2l,f,c
  1618  001D3C  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1619  001D3E  22DA               	addwfc	fsr2h,f,c
  1620  001D40  0E06               	movlw	6
  1621  001D42  6EDF               	movwf	indf2,c
  1622                           
  1623                           ;FRAME.c: 76: message->data[0] = LOCK_Get();
  1624  001D44  EE20 F008          	lfsr	2,8
  1625  001D48  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1626  001D4A  26D9               	addwf	fsr2l,f,c
  1627  001D4C  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1628  001D4E  22DA               	addwfc	fsr2h,f,c
  1629  001D50  ECAE  F016         	call	_LOCK_Get	;wreg free
  1630  001D54  6EDF               	movwf	indf2,c
  1631                           
  1632                           ;FRAME.c: 77: message->data[1] = MOC_Wynikowa_wartosc_roznicowa() >> 8 ;
  1633  001D56  EE20 F009          	lfsr	2,9
  1634  001D5A  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1635  001D5C  26D9               	addwf	fsr2l,f,c
  1636  001D5E  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1637  001D60  22DA               	addwfc	fsr2h,f,c
  1638  001D62  EC8A  F016         	call	_MOC_Wynikowa_wartosc_roznicowa	;wreg free
  1639  001D66  C007  F006         	movff	?_MOC_Wynikowa_wartosc_roznicowa+1,?_MOC_Wynikowa_wartosc_roznicowa
  1640  001D6A  6A07               	clrf	?_MOC_Wynikowa_wartosc_roznicowa+1,c
  1641  001D6C  5006               	movf	?_MOC_Wynikowa_wartosc_roznicowa,w,c
  1642  001D6E  6EDF               	movwf	indf2,c
  1643                           
  1644                           ;FRAME.c: 78: message->data[2] = MOC_Wynikowa_wartosc_roznicowa() & 0x00FF;
  1645  001D70  EE20 F00A          	lfsr	2,10
  1646  001D74  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1647  001D76  26D9               	addwf	fsr2l,f,c
  1648  001D78  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1649  001D7A  22DA               	addwfc	fsr2h,f,c
  1650  001D7C  EC8A  F016         	call	_MOC_Wynikowa_wartosc_roznicowa	;wreg free
  1651  001D80  5006               	movf	?_MOC_Wynikowa_wartosc_roznicowa,w,c
  1652  001D82  6EDF               	movwf	indf2,c
  1653                           
  1654                           ;FRAME.c: 79: message->data[3] = MOC_Frame_Counter();
  1655  001D84  EE20 F00B          	lfsr	2,11
  1656  001D88  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1657  001D8A  26D9               	addwf	fsr2l,f,c
  1658  001D8C  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1659  001D8E  22DA               	addwfc	fsr2h,f,c
  1660  001D90  EC75  F016         	call	_MOC_Frame_Counter	;wreg free
  1661  001D94  5006               	movf	?_MOC_Frame_Counter,w,c
  1662  001D96  6EDF               	movwf	indf2,c
  1663                           
  1664                           ;FRAME.c: 80: message->data[4] = MOC_Aktualna_Temperatura();
  1665  001D98  EE20 F00C          	lfsr	2,12
  1666  001D9C  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1667  001D9E  26D9               	addwf	fsr2l,f,c
  1668  001DA0  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1669  001DA2  22DA               	addwfc	fsr2h,f,c
  1670  001DA4  EC8F  F016         	call	_MOC_Aktualna_Temperatura	;wreg free
  1671  001DA8  5006               	movf	?_MOC_Aktualna_Temperatura,w,c
  1672  001DAA  6EDF               	movwf	indf2,c
  1673                           
  1674                           ;FRAME.c: 81: message->data[5] = MOC_NOTWORK();
  1675  001DAC  EE20 F00D          	lfsr	2,13
  1676  001DB0  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1677  001DB2  26D9               	addwf	fsr2l,f,c
  1678  001DB4  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1679  001DB6  22DA               	addwfc	fsr2h,f,c
  1680  001DB8  ECA3  F016         	call	_MOC_NOTWORK	;wreg free
  1681  001DBC  5006               	movf	?_MOC_NOTWORK,w,c
  1682  001DBE  6EDF               	movwf	indf2,c
  1683                           
  1684                           ;FRAME.c: 91: }
  1685  001DC0  0012               	return	
  1686  001DC2                     l4689:
  1687                           
  1688                           ;FRAME.c: 92: else;FRAME.c: 93: {;FRAME.c: 95: UINT tru = IsInNeighbors(message->id.w[0]
      +                          );
  1689  001DC2  EE20 F004          	lfsr	2,4
  1690  001DC6  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1691  001DC8  26D9               	addwf	fsr2l,f,c
  1692  001DCA  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1693  001DCC  22DA               	addwfc	fsr2h,f,c
  1694  001DCE  CFDE F006          	movff	postinc2,IsInNeighbors@message_adress
  1695  001DD2  CFDD F007          	movff	postdec2,IsInNeighbors@message_adress+1
  1696  001DD6  EC20  F010         	call	_IsInNeighbors	;wreg free
  1697  001DDA  C006  F00C         	movff	?_IsInNeighbors,FRAME_SensorExcitationStatus@tru
  1698  001DDE  C007  F00D         	movff	?_IsInNeighbors+1,FRAME_SensorExcitationStatus@tru+1
  1699                           
  1700                           ;FRAME.c: 98: if(message->data[0]==0)
  1701  001DE2  EE20 F008          	lfsr	2,8
  1702  001DE6  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1703  001DE8  26D9               	addwf	fsr2l,f,c
  1704  001DEA  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1705  001DEC  22DA               	addwfc	fsr2h,f,c
  1706  001DEE  50DF               	movf	indf2,w,c
  1707  001DF0  A4D8               	btfss	status,2,c
  1708  001DF2  D00A               	goto	l4695
  1709                           
  1710                           ;FRAME.c: 99: {;FRAME.c: 101: statwect = statwect &( ~tru );
  1711  001DF4  1C0C               	comf	FRAME_SensorExcitationStatus@tru,w,c
  1712  001DF6  6E0A               	movwf	??_FRAME_SensorExcitationStatus& (0+255),c
  1713  001DF8  1C0D               	comf	FRAME_SensorExcitationStatus@tru+1,w,c
  1714  001DFA  6E0B               	movwf	(??_FRAME_SensorExcitationStatus+1)& (0+255),c
  1715  001DFC  501E               	movf	FRAME_SensorExcitationStatus@statwect,w,c
  1716  001DFE  140A               	andwf	??_FRAME_SensorExcitationStatus,w,c
  1717  001E00  6E1E               	movwf	FRAME_SensorExcitationStatus@statwect,c
  1718  001E02  501F               	movf	FRAME_SensorExcitationStatus@statwect+1,w,c
  1719  001E04  140B               	andwf	??_FRAME_SensorExcitationStatus+1,w,c
  1720  001E06  D005               	goto	L1
  1721  001E08                     l4695:
  1722                           
  1723                           ;FRAME.c: 103: else;FRAME.c: 104: {;FRAME.c: 105: statwect = statwect| tru;
  1724  001E08  500C               	movf	FRAME_SensorExcitationStatus@tru,w,c
  1725  001E0A  101E               	iorwf	FRAME_SensorExcitationStatus@statwect,w,c
  1726  001E0C  6E1E               	movwf	FRAME_SensorExcitationStatus@statwect,c
  1727  001E0E  500D               	movf	FRAME_SensorExcitationStatus@tru+1,w,c
  1728  001E10  101F               	iorwf	FRAME_SensorExcitationStatus@statwect+1,w,c
  1729  001E12                     L1:
  1730  001E12  6E1F               	movwf	FRAME_SensorExcitationStatus@statwect+1,c
  1731                           
  1732                           ;FRAME.c: 106: };FRAME.c: 108: if(statwect>0)
  1733  001E14  501E               	movf	FRAME_SensorExcitationStatus@statwect,w,c
  1734  001E16  101F               	iorwf	FRAME_SensorExcitationStatus@statwect+1,w,c
  1735  001E18  B4D8               	btfsc	status,2,c
  1736  001E1A  D00B               	goto	l4703
  1737                           
  1738                           ;FRAME.c: 109: {;FRAME.c: 110: if(1 != LOCK_Get())
  1739  001E1C  ECAE  F016         	call	_LOCK_Get	;wreg free
  1740  001E20  06E8               	decf	wreg,f,c
  1741  001E22  B4D8               	btfsc	status,2,c
  1742  001E24  0012               	return	
  1743                           
  1744                           ;FRAME.c: 111: {;FRAME.c: 112: DaneCan.Flags.wyslijRamkeStanu = 1;
  1745  001E26  0100               	movlb	0	; () banked
  1746  001E28  81CB               	bsf	_DaneCan& (0+255),0,b
  1747                           
  1748                           ; BSR set to: 0
  1749                           ;FRAME.c: 113: LOCK_Set(1);
  1750  001E2A  0E01               	movlw	1
  1751  001E2C  ECA7  F016         	call	_LOCK_Set
  1752  001E30  0012               	return	
  1753  001E32                     l4703:
  1754                           
  1755                           ;FRAME.c: 117: else;FRAME.c: 118: {;FRAME.c: 120: if(1 == LOCK_Get())
  1756  001E32  ECAE  F016         	call	_LOCK_Get	;wreg free
  1757  001E36  06E8               	decf	wreg,f,c
  1758  001E38  A4D8               	btfss	status,2,c
  1759  001E3A  0012               	return	
  1760                           
  1761                           ;FRAME.c: 121: {;FRAME.c: 122: DaneCan.Flags.wyslijRamkeStanu = 1;
  1762  001E3C  0100               	movlb	0	; () banked
  1763  001E3E  81CB               	bsf	_DaneCan& (0+255),0,b
  1764                           
  1765                           ; BSR set to: 0
  1766                           ;FRAME.c: 123: LOCK_Set(0);
  1767  001E40  0E00               	movlw	0
  1768  001E42  ECA7  F016         	call	_LOCK_Set
  1769  001E46  0012               	return		;funcret
  1770  001E48                     __end_of_FRAME_SensorExcitationStatus:
  1771                           	opt callstack 0
  1772                           
  1773 ;; *************** function _MOC_Wynikowa_wartosc_roznicowa *****************
  1774 ;; Defined at:
  1775 ;;		line 34 in file "MOC_Funct.c"
  1776 ;; Parameters:    Size  Location     Type
  1777 ;;		None
  1778 ;; Auto vars:     Size  Location     Type
  1779 ;;		None
  1780 ;; Return value:  Size  Location     Type
  1781 ;;                  2    5[COMRAM] unsigned int 
  1782 ;; Registers used:
  1783 ;;		wreg, status,2
  1784 ;; Tracked objects:
  1785 ;;		On entry : 0/0
  1786 ;;		On exit  : 0/0
  1787 ;;		Unchanged: 0/0
  1788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1789 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1792 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1793 ;;Total ram usage:        2 bytes
  1794 ;; Hardware stack levels used:    1
  1795 ;; Hardware stack levels required when called:    3
  1796 ;; This function calls:
  1797 ;;		Nothing
  1798 ;; This function is called by:
  1799 ;;		_FRAME_SensorExcitationStatus
  1800 ;; This function uses a non-reentrant model
  1801 ;;
  1802                           
  1803                           	psect	text6
  1804  002D14                     __ptext6:
  1805                           	opt callstack 0
  1806  002D14                     _MOC_Wynikowa_wartosc_roznicowa:
  1807                           	opt callstack 24
  1808                           
  1809                           ;MOC_Funct.c: 36: return 0x0220;
  1810                           
  1811                           ;incstack = 0
  1812  002D14  0E02               	movlw	2
  1813  002D16  6E07               	movwf	?_MOC_Wynikowa_wartosc_roznicowa+1,c
  1814  002D18  0E20               	movlw	32
  1815  002D1A  6E06               	movwf	?_MOC_Wynikowa_wartosc_roznicowa,c
  1816  002D1C  0012               	return		;funcret
  1817  002D1E                     __end_of_MOC_Wynikowa_wartosc_roznicowa:
  1818                           	opt callstack 0
  1819                           
  1820 ;; *************** function _MOC_NOTWORK *****************
  1821 ;; Defined at:
  1822 ;;		line 48 in file "MOC_Funct.c"
  1823 ;; Parameters:    Size  Location     Type
  1824 ;;		None
  1825 ;; Auto vars:     Size  Location     Type
  1826 ;;		None
  1827 ;; Return value:  Size  Location     Type
  1828 ;;                  2    5[COMRAM] unsigned int 
  1829 ;; Registers used:
  1830 ;;		wreg, status,2
  1831 ;; Tracked objects:
  1832 ;;		On entry : 0/0
  1833 ;;		On exit  : 0/0
  1834 ;;		Unchanged: 0/0
  1835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1836 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1839 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1840 ;;Total ram usage:        2 bytes
  1841 ;; Hardware stack levels used:    1
  1842 ;; Hardware stack levels required when called:    3
  1843 ;; This function calls:
  1844 ;;		Nothing
  1845 ;; This function is called by:
  1846 ;;		_FRAME_SensorExcitationStatus
  1847 ;; This function uses a non-reentrant model
  1848 ;;
  1849                           
  1850                           	psect	text7
  1851  002D46                     __ptext7:
  1852                           	opt callstack 0
  1853  002D46                     _MOC_NOTWORK:
  1854                           	opt callstack 24
  1855                           
  1856                           ;MOC_Funct.c: 50: return 0xFF;
  1857                           
  1858                           ;incstack = 0
  1859  002D46  0E00               	movlw	0
  1860  002D48  6E07               	movwf	?_MOC_NOTWORK+1,c
  1861  002D4A  6806               	setf	?_MOC_NOTWORK,c
  1862  002D4C  0012               	return		;funcret
  1863  002D4E                     __end_of_MOC_NOTWORK:
  1864                           	opt callstack 0
  1865                           
  1866 ;; *************** function _MOC_Frame_Counter *****************
  1867 ;; Defined at:
  1868 ;;		line 39 in file "MOC_Funct.c"
  1869 ;; Parameters:    Size  Location     Type
  1870 ;;		None
  1871 ;; Auto vars:     Size  Location     Type
  1872 ;;		None
  1873 ;; Return value:  Size  Location     Type
  1874 ;;                  2    5[COMRAM] unsigned int 
  1875 ;; Registers used:
  1876 ;;		wreg, status,2, status,0
  1877 ;; Tracked objects:
  1878 ;;		On entry : 0/0
  1879 ;;		On exit  : 0/0
  1880 ;;		Unchanged: 0/0
  1881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1882 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1885 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1886 ;;Total ram usage:        2 bytes
  1887 ;; Hardware stack levels used:    1
  1888 ;; Hardware stack levels required when called:    3
  1889 ;; This function calls:
  1890 ;;		Nothing
  1891 ;; This function is called by:
  1892 ;;		_FRAME_SensorExcitationStatus
  1893 ;; This function uses a non-reentrant model
  1894 ;;
  1895                           
  1896                           	psect	text8
  1897  002CEA                     __ptext8:
  1898                           	opt callstack 0
  1899  002CEA                     _MOC_Frame_Counter:
  1900                           	opt callstack 24
  1901                           
  1902                           ;MOC_Funct.c: 41: static UINT zeta = 0x11;;MOC_Funct.c: 42: return zeta++;
  1903                           
  1904                           ;incstack = 0
  1905  002CEA  0100               	movlb	0	; () banked
  1906  002CEC  51EF               	movf	MOC_Frame_Counter@zeta& (0+255),w,b
  1907  002CEE  6E06               	movwf	?_MOC_Frame_Counter,c
  1908  002CF0  51F0               	movf	(MOC_Frame_Counter@zeta+1)& (0+255),w,b
  1909  002CF2  6E07               	movwf	?_MOC_Frame_Counter+1,c
  1910  002CF4  4BEF               	infsnz	MOC_Frame_Counter@zeta& (0+255),f,b
  1911  002CF6  2BF0               	incf	(MOC_Frame_Counter@zeta+1)& (0+255),f,b
  1912                           
  1913                           ; BSR set to: 0
  1914  002CF8  0012               	return		;funcret
  1915  002CFA                     __end_of_MOC_Frame_Counter:
  1916                           	opt callstack 0
  1917                           
  1918 ;; *************** function _MOC_Aktualna_Temperatura *****************
  1919 ;; Defined at:
  1920 ;;		line 44 in file "MOC_Funct.c"
  1921 ;; Parameters:    Size  Location     Type
  1922 ;;		None
  1923 ;; Auto vars:     Size  Location     Type
  1924 ;;		None
  1925 ;; Return value:  Size  Location     Type
  1926 ;;                  2    5[COMRAM] unsigned int 
  1927 ;; Registers used:
  1928 ;;		wreg, status,2
  1929 ;; Tracked objects:
  1930 ;;		On entry : 0/0
  1931 ;;		On exit  : 0/0
  1932 ;;		Unchanged: 0/0
  1933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1934 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1937 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1938 ;;Total ram usage:        2 bytes
  1939 ;; Hardware stack levels used:    1
  1940 ;; Hardware stack levels required when called:    3
  1941 ;; This function calls:
  1942 ;;		Nothing
  1943 ;; This function is called by:
  1944 ;;		_FRAME_SensorExcitationStatus
  1945 ;; This function uses a non-reentrant model
  1946 ;;
  1947                           
  1948                           	psect	text9
  1949  002D1E                     __ptext9:
  1950                           	opt callstack 0
  1951  002D1E                     _MOC_Aktualna_Temperatura:
  1952                           	opt callstack 24
  1953                           
  1954                           ;MOC_Funct.c: 46: return 0x1B;
  1955                           
  1956                           ; BSR set to: 0
  1957                           ;incstack = 0
  1958  002D1E  0E00               	movlw	0
  1959  002D20  6E07               	movwf	?_MOC_Aktualna_Temperatura+1,c
  1960  002D22  0E1B               	movlw	27
  1961  002D24  6E06               	movwf	?_MOC_Aktualna_Temperatura,c
  1962  002D26  0012               	return		;funcret
  1963  002D28                     __end_of_MOC_Aktualna_Temperatura:
  1964                           	opt callstack 0
  1965                           
  1966 ;; *************** function _LOCK_Set *****************
  1967 ;; Defined at:
  1968 ;;		line 84 in file "LED.c"
  1969 ;; Parameters:    Size  Location     Type
  1970 ;;  k               1    wreg     unsigned char 
  1971 ;; Auto vars:     Size  Location     Type
  1972 ;;  k               1    5[COMRAM] unsigned char 
  1973 ;; Return value:  Size  Location     Type
  1974 ;;                  1    wreg      void 
  1975 ;; Registers used:
  1976 ;;		wreg
  1977 ;; Tracked objects:
  1978 ;;		On entry : 0/0
  1979 ;;		On exit  : 0/0
  1980 ;;		Unchanged: 0/0
  1981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1983 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1985 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1986 ;;Total ram usage:        1 bytes
  1987 ;; Hardware stack levels used:    1
  1988 ;; Hardware stack levels required when called:    3
  1989 ;; This function calls:
  1990 ;;		Nothing
  1991 ;; This function is called by:
  1992 ;;		_FRAME_SensorExcitationStatus
  1993 ;; This function uses a non-reentrant model
  1994 ;;
  1995                           
  1996                           	psect	text10
  1997  002D4E                     __ptext10:
  1998                           	opt callstack 0
  1999  002D4E                     _LOCK_Set:
  2000                           	opt callstack 24
  2001                           
  2002                           ;incstack = 0
  2003                           ;LOCK_Set@k stored from wreg
  2004  002D4E  6E06               	movwf	LOCK_Set@k,c
  2005                           
  2006                           ;LED.c: 86: LOCK = k;
  2007  002D50  C006  F02B         	movff	LOCK_Set@k,_LOCK
  2008  002D54  0012               	return		;funcret
  2009  002D56                     __end_of_LOCK_Set:
  2010                           	opt callstack 0
  2011                           
  2012 ;; *************** function _LOCK_Get *****************
  2013 ;; Defined at:
  2014 ;;		line 100 in file "LED.c"
  2015 ;; Parameters:    Size  Location     Type
  2016 ;;		None
  2017 ;; Auto vars:     Size  Location     Type
  2018 ;;		None
  2019 ;; Return value:  Size  Location     Type
  2020 ;;                  1    wreg      unsigned char 
  2021 ;; Registers used:
  2022 ;;		wreg, status,2
  2023 ;; Tracked objects:
  2024 ;;		On entry : 0/0
  2025 ;;		On exit  : 0/0
  2026 ;;		Unchanged: 0/0
  2027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2032 ;;Total ram usage:        0 bytes
  2033 ;; Hardware stack levels used:    1
  2034 ;; Hardware stack levels required when called:    3
  2035 ;; This function calls:
  2036 ;;		Nothing
  2037 ;; This function is called by:
  2038 ;;		_FRAME_SensorExcitationStatus
  2039 ;; This function uses a non-reentrant model
  2040 ;;
  2041                           
  2042                           	psect	text11
  2043  002D5C                     __ptext11:
  2044                           	opt callstack 0
  2045  002D5C                     _LOCK_Get:
  2046                           	opt callstack 24
  2047                           
  2048                           ;LED.c: 102: return LOCK;
  2049                           
  2050                           ;incstack = 0
  2051  002D5C  502B               	movf	_LOCK,w,c
  2052  002D5E  0012               	return		;funcret
  2053  002D60                     __end_of_LOCK_Get:
  2054                           	opt callstack 0
  2055                           
  2056 ;; *************** function _IsInNeighbors *****************
  2057 ;; Defined at:
  2058 ;;		line 142 in file "FRAME.c"
  2059 ;; Parameters:    Size  Location     Type
  2060 ;;  message_adre    2    5[COMRAM] unsigned int 
  2061 ;; Auto vars:     Size  Location     Type
  2062 ;;  i               2    0        unsigned short 
  2063 ;; Return value:  Size  Location     Type
  2064 ;;                  2    5[COMRAM] unsigned int 
  2065 ;; Registers used:
  2066 ;;		wreg, status,2, status,0
  2067 ;; Tracked objects:
  2068 ;;		On entry : 0/0
  2069 ;;		On exit  : 0/0
  2070 ;;		Unchanged: 0/0
  2071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2072 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2075 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2076 ;;Total ram usage:        2 bytes
  2077 ;; Hardware stack levels used:    1
  2078 ;; Hardware stack levels required when called:    3
  2079 ;; This function calls:
  2080 ;;		Nothing
  2081 ;; This function is called by:
  2082 ;;		_FRAME_SensorExcitationStatus
  2083 ;; This function uses a non-reentrant model
  2084 ;;
  2085                           
  2086                           	psect	text12
  2087  002040                     __ptext12:
  2088                           	opt callstack 0
  2089  002040                     _IsInNeighbors:
  2090                           	opt callstack 24
  2091                           
  2092                           ;FRAME.c: 144: WORD i;;FRAME.c: 146: if(NeightAdress1==message_adress)
  2093                           
  2094                           ;incstack = 0
  2095  002040  5006               	movf	IsInNeighbors@message_adress,w,c
  2096  002042  1838               	xorwf	_NeightAdress1,w,c	;volatile
  2097  002044  E109               	bnz	l4417
  2098  002046  5007               	movf	IsInNeighbors@message_adress+1,w,c
  2099  002048  1839               	xorwf	_NeightAdress1+1,w,c	;volatile
  2100  00204A  A4D8               	btfss	status,2,c
  2101  00204C  D005               	goto	l4417
  2102                           
  2103                           ;FRAME.c: 147: {;FRAME.c: 148: return 0b1;
  2104  00204E  0E00               	movlw	0
  2105  002050  6E07               	movwf	?_IsInNeighbors+1,c
  2106  002052  0E01               	movlw	1
  2107  002054  6E06               	movwf	?_IsInNeighbors,c
  2108  002056  0012               	return	
  2109  002058                     l4417:
  2110                           
  2111                           ;FRAME.c: 149: };FRAME.c: 150: if(NeightAdress2==message_adress)
  2112  002058  5006               	movf	IsInNeighbors@message_adress,w,c
  2113  00205A  184A               	xorwf	_NeightAdress2,w,c	;volatile
  2114  00205C  E109               	bnz	l4423
  2115  00205E  5007               	movf	IsInNeighbors@message_adress+1,w,c
  2116  002060  184B               	xorwf	_NeightAdress2+1,w,c	;volatile
  2117  002062  A4D8               	btfss	status,2,c
  2118  002064  D005               	goto	l4423
  2119                           
  2120                           ;FRAME.c: 151: {;FRAME.c: 152: return 0b10;
  2121  002066  0E00               	movlw	0
  2122  002068  6E07               	movwf	?_IsInNeighbors+1,c
  2123  00206A  0E02               	movlw	2
  2124  00206C  6E06               	movwf	?_IsInNeighbors,c
  2125  00206E  0012               	return	
  2126  002070                     l4423:
  2127                           
  2128                           ;FRAME.c: 153: };FRAME.c: 154: if(NeightAdress3==message_adress)
  2129  002070  5006               	movf	IsInNeighbors@message_adress,w,c
  2130  002072  1836               	xorwf	_NeightAdress3,w,c	;volatile
  2131  002074  E109               	bnz	l4429
  2132  002076  5007               	movf	IsInNeighbors@message_adress+1,w,c
  2133  002078  1837               	xorwf	_NeightAdress3+1,w,c	;volatile
  2134  00207A  A4D8               	btfss	status,2,c
  2135  00207C  D005               	goto	l4429
  2136                           
  2137                           ;FRAME.c: 155: {;FRAME.c: 156: return 0b100;
  2138  00207E  0E00               	movlw	0
  2139  002080  6E07               	movwf	?_IsInNeighbors+1,c
  2140  002082  0E04               	movlw	4
  2141  002084  6E06               	movwf	?_IsInNeighbors,c
  2142  002086  0012               	return	
  2143  002088                     l4429:
  2144                           
  2145                           ;FRAME.c: 157: };FRAME.c: 158: if(NeightAdress4==message_adress)
  2146  002088  5006               	movf	IsInNeighbors@message_adress,w,c
  2147  00208A  1834               	xorwf	_NeightAdress4,w,c	;volatile
  2148  00208C  E109               	bnz	l4435
  2149  00208E  5007               	movf	IsInNeighbors@message_adress+1,w,c
  2150  002090  1835               	xorwf	_NeightAdress4+1,w,c	;volatile
  2151  002092  A4D8               	btfss	status,2,c
  2152  002094  D005               	goto	l4435
  2153                           
  2154                           ;FRAME.c: 159: {;FRAME.c: 160: return 0b1000;
  2155  002096  0E00               	movlw	0
  2156  002098  6E07               	movwf	?_IsInNeighbors+1,c
  2157  00209A  0E08               	movlw	8
  2158  00209C  6E06               	movwf	?_IsInNeighbors,c
  2159  00209E  0012               	return	
  2160  0020A0                     l4435:
  2161                           
  2162                           ;FRAME.c: 161: };FRAME.c: 162: if(NeightAdress5==message_adress)
  2163  0020A0  5006               	movf	IsInNeighbors@message_adress,w,c
  2164  0020A2  1832               	xorwf	_NeightAdress5,w,c	;volatile
  2165  0020A4  E109               	bnz	l4441
  2166  0020A6  5007               	movf	IsInNeighbors@message_adress+1,w,c
  2167  0020A8  1833               	xorwf	_NeightAdress5+1,w,c	;volatile
  2168  0020AA  A4D8               	btfss	status,2,c
  2169  0020AC  D005               	goto	l4441
  2170                           
  2171                           ;FRAME.c: 163: {;FRAME.c: 164: return 0b10000;
  2172  0020AE  0E00               	movlw	0
  2173  0020B0  6E07               	movwf	?_IsInNeighbors+1,c
  2174  0020B2  0E10               	movlw	16
  2175  0020B4  6E06               	movwf	?_IsInNeighbors,c
  2176  0020B6  0012               	return	
  2177  0020B8                     l4441:
  2178                           
  2179                           ;FRAME.c: 165: };FRAME.c: 166: if(NeightAdress6==message_adress)
  2180  0020B8  5006               	movf	IsInNeighbors@message_adress,w,c
  2181  0020BA  1830               	xorwf	_NeightAdress6,w,c	;volatile
  2182  0020BC  E109               	bnz	l4447
  2183  0020BE  5007               	movf	IsInNeighbors@message_adress+1,w,c
  2184  0020C0  1831               	xorwf	_NeightAdress6+1,w,c	;volatile
  2185  0020C2  A4D8               	btfss	status,2,c
  2186  0020C4  D005               	goto	l4447
  2187                           
  2188                           ;FRAME.c: 167: {;FRAME.c: 168: return 0b100000;
  2189  0020C6  0E00               	movlw	0
  2190  0020C8  6E07               	movwf	?_IsInNeighbors+1,c
  2191  0020CA  0E20               	movlw	32
  2192  0020CC  6E06               	movwf	?_IsInNeighbors,c
  2193  0020CE  0012               	return	
  2194  0020D0                     l4447:
  2195                           
  2196                           ;FRAME.c: 169: };FRAME.c: 170: if(NeightAdress7==message_adress)
  2197  0020D0  5006               	movf	IsInNeighbors@message_adress,w,c
  2198  0020D2  182E               	xorwf	_NeightAdress7,w,c	;volatile
  2199  0020D4  E109               	bnz	l4453
  2200  0020D6  5007               	movf	IsInNeighbors@message_adress+1,w,c
  2201  0020D8  182F               	xorwf	_NeightAdress7+1,w,c	;volatile
  2202  0020DA  A4D8               	btfss	status,2,c
  2203  0020DC  D005               	goto	l4453
  2204                           
  2205                           ;FRAME.c: 171: {;FRAME.c: 172: return 0b1000000;
  2206  0020DE  0E00               	movlw	0
  2207  0020E0  6E07               	movwf	?_IsInNeighbors+1,c
  2208  0020E2  0E40               	movlw	64
  2209  0020E4  6E06               	movwf	?_IsInNeighbors,c
  2210  0020E6  0012               	return	
  2211  0020E8                     l4453:
  2212                           
  2213                           ;FRAME.c: 173: };FRAME.c: 174: if(NeightAdress8==message_adress)
  2214  0020E8  5006               	movf	IsInNeighbors@message_adress,w,c
  2215  0020EA  182C               	xorwf	_NeightAdress8,w,c	;volatile
  2216  0020EC  E109               	bnz	l4459
  2217  0020EE  5007               	movf	IsInNeighbors@message_adress+1,w,c
  2218  0020F0  182D               	xorwf	_NeightAdress8+1,w,c	;volatile
  2219  0020F2  A4D8               	btfss	status,2,c
  2220  0020F4  D005               	goto	l4459
  2221                           
  2222                           ;FRAME.c: 175: {;FRAME.c: 176: return 0b10000000;
  2223  0020F6  0E00               	movlw	0
  2224  0020F8  6E07               	movwf	?_IsInNeighbors+1,c
  2225  0020FA  0E80               	movlw	128
  2226  0020FC  6E06               	movwf	?_IsInNeighbors,c
  2227  0020FE  0012               	return	
  2228  002100                     l4459:
  2229                           
  2230                           ;FRAME.c: 177: };FRAME.c: 192: return 0;
  2231  002100  0E00               	movlw	0
  2232  002102  6E07               	movwf	?_IsInNeighbors+1,c
  2233  002104  0E00               	movlw	0
  2234  002106  6E06               	movwf	?_IsInNeighbors,c
  2235  002108  0012               	return		;funcret
  2236  00210A                     __end_of_IsInNeighbors:
  2237                           	opt callstack 0
  2238                           
  2239 ;; *************** function _FRAME_PrzypisanieDokarty *****************
  2240 ;; Defined at:
  2241 ;;		line 738 in file "FRAME.c"
  2242 ;; Parameters:    Size  Location     Type
  2243 ;;  message         2    5[COMRAM] PTR struct .
  2244 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2245 ;; Auto vars:     Size  Location     Type
  2246 ;;		None
  2247 ;; Return value:  Size  Location     Type
  2248 ;;                  1    wreg      void 
  2249 ;; Registers used:
  2250 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2251 ;; Tracked objects:
  2252 ;;		On entry : 0/0
  2253 ;;		On exit  : 0/0
  2254 ;;		Unchanged: 0/0
  2255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2256 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2258 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2259 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2260 ;;Total ram usage:        6 bytes
  2261 ;; Hardware stack levels used:    1
  2262 ;; Hardware stack levels required when called:    3
  2263 ;; This function calls:
  2264 ;;		Nothing
  2265 ;; This function is called by:
  2266 ;;		_FRAME_HandleCanFrame
  2267 ;; This function uses a non-reentrant model
  2268 ;;
  2269                           
  2270                           	psect	text13
  2271  00226C                     __ptext13:
  2272                           	opt callstack 0
  2273  00226C                     _FRAME_PrzypisanieDokarty:
  2274                           	opt callstack 25
  2275                           
  2276                           ;FRAME.c: 740: if(message->message_type == 0x02)
  2277                           
  2278                           ;incstack = 0
  2279  00226C  EE20 F001          	lfsr	2,1
  2280  002270  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2281  002272  26D9               	addwf	fsr2l,f,c
  2282  002274  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2283  002276  22DA               	addwfc	fsr2h,f,c
  2284  002278  0E02               	movlw	2
  2285  00227A  18DE               	xorwf	postinc2,w,c
  2286  00227C  A4D8               	btfss	status,2,c
  2287  00227E  D021               	goto	l4787
  2288                           
  2289                           ;FRAME.c: 741: {;FRAME.c: 742: message->data_length = 3;
  2290  002280  EE20 F010          	lfsr	2,16
  2291  002284  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2292  002286  26D9               	addwf	fsr2l,f,c
  2293  002288  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2294  00228A  22DA               	addwfc	fsr2h,f,c
  2295  00228C  0E03               	movlw	3
  2296  00228E  6EDF               	movwf	indf2,c
  2297                           
  2298                           ;FRAME.c: 743: message->data[0] = (unsigned char)Dane->NrKarty >> 8 ;
  2299  002290  EE20 F008          	lfsr	2,8
  2300  002294  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2301  002296  26D9               	addwf	fsr2l,f,c
  2302  002298  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2303  00229A  22DA               	addwfc	fsr2h,f,c
  2304  00229C  0E00               	movlw	0
  2305  00229E  6EDF               	movwf	indf2,c
  2306                           
  2307                           ;FRAME.c: 744: message->data[1] = (unsigned char)Dane->NrKarty ;
  2308  0022A0  EE20 F009          	lfsr	2,9
  2309  0022A4  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2310  0022A6  26D9               	addwf	fsr2l,f,c
  2311  0022A8  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2312  0022AA  22DA               	addwfc	fsr2h,f,c
  2313  0022AC  C040 FFDF          	movff	64,indf2
  2314                           
  2315                           ;FRAME.c: 745: message->data[2] = (unsigned char)Dane->Nr_WeWy ;
  2316  0022B0  EE20 F00A          	lfsr	2,10
  2317  0022B4  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2318  0022B6  26D9               	addwf	fsr2l,f,c
  2319  0022B8  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2320  0022BA  22DA               	addwfc	fsr2h,f,c
  2321  0022BC  C042 FFDF          	movff	66,indf2
  2322                           
  2323                           ;FRAME.c: 747: }
  2324  0022C0  0012               	return	
  2325  0022C2                     l4787:
  2326                           
  2327                           ;FRAME.c: 748: else;FRAME.c: 749: {;FRAME.c: 750: Dane->NrKarty = (message->data[0] << 8
      +                          ) | (message->data[1]);
  2328  0022C2  EE20 F008          	lfsr	2,8
  2329  0022C6  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2330  0022C8  26D9               	addwf	fsr2l,f,c
  2331  0022CA  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2332  0022CC  22DA               	addwfc	fsr2h,f,c
  2333  0022CE  50DF               	movf	indf2,w,c
  2334  0022D0  6E08               	movwf	??_FRAME_PrzypisanieDokarty& (0+255),c
  2335  0022D2  5008               	movf	??_FRAME_PrzypisanieDokarty,w,c
  2336  0022D4  6E0A               	movwf	(??_FRAME_PrzypisanieDokarty+2)& (0+255),c
  2337  0022D6  6A09               	clrf	(??_FRAME_PrzypisanieDokarty+1)& (0+255),c
  2338  0022D8  EE20 F009          	lfsr	2,9
  2339  0022DC  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2340  0022DE  26D9               	addwf	fsr2l,f,c
  2341  0022E0  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2342  0022E2  22DA               	addwfc	fsr2h,f,c
  2343  0022E4  50DF               	movf	indf2,w,c
  2344  0022E6  6E0B               	movwf	(??_FRAME_PrzypisanieDokarty+3)& (0+255),c
  2345  0022E8  500B               	movf	??_FRAME_PrzypisanieDokarty+3,w,c
  2346  0022EA  1009               	iorwf	??_FRAME_PrzypisanieDokarty+1,w,c
  2347  0022EC  6E40               	movwf	64,c
  2348  0022EE  500A               	movf	??_FRAME_PrzypisanieDokarty+2,w,c
  2349  0022F0  6E41               	movwf	65,c
  2350                           
  2351                           ;FRAME.c: 751: Dane->Nr_WeWy = (message->data[2]);
  2352  0022F2  EE20 F00A          	lfsr	2,10
  2353  0022F6  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2354  0022F8  26D9               	addwf	fsr2l,f,c
  2355  0022FA  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2356  0022FC  22DA               	addwfc	fsr2h,f,c
  2357  0022FE  50DF               	movf	indf2,w,c
  2358  002300  6E08               	movwf	??_FRAME_PrzypisanieDokarty& (0+255),c
  2359  002302  5008               	movf	??_FRAME_PrzypisanieDokarty,w,c
  2360  002304  6E42               	movwf	66,c
  2361  002306  6A43               	clrf	67,c
  2362  002308  0012               	return		;funcret
  2363  00230A                     __end_of_FRAME_PrzypisanieDokarty:
  2364                           	opt callstack 0
  2365                           
  2366 ;; *************** function _FRAME_Plot *****************
  2367 ;; Defined at:
  2368 ;;		line 623 in file "FRAME.c"
  2369 ;; Parameters:    Size  Location     Type
  2370 ;;  message         2   12[COMRAM] PTR struct .
  2371 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2372 ;; Auto vars:     Size  Location     Type
  2373 ;;		None
  2374 ;; Return value:  Size  Location     Type
  2375 ;;                  1    wreg      void 
  2376 ;; Registers used:
  2377 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2378 ;; Tracked objects:
  2379 ;;		On entry : 0/0
  2380 ;;		On exit  : 0/0
  2381 ;;		Unchanged: 0/0
  2382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2383 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2385 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2386 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2387 ;;Total ram usage:        3 bytes
  2388 ;; Hardware stack levels used:    1
  2389 ;; Hardware stack levels required when called:    4
  2390 ;; This function calls:
  2391 ;;		___lwdiv
  2392 ;; This function is called by:
  2393 ;;		_FRAME_HandleCanFrame
  2394 ;; This function uses a non-reentrant model
  2395 ;;
  2396                           
  2397                           	psect	text14
  2398  00281E                     __ptext14:
  2399                           	opt callstack 0
  2400  00281E                     _FRAME_Plot:
  2401                           	opt callstack 24
  2402                           
  2403                           ;FRAME.c: 626: if(message->message_type == 0x02)
  2404                           
  2405                           ;incstack = 0
  2406  00281E  EE20 F001          	lfsr	2,1
  2407  002822  500D               	movf	FRAME_Plot@message,w,c
  2408  002824  26D9               	addwf	fsr2l,f,c
  2409  002826  500E               	movf	FRAME_Plot@message+1,w,c
  2410  002828  22DA               	addwfc	fsr2h,f,c
  2411  00282A  0E02               	movlw	2
  2412  00282C  18DE               	xorwf	postinc2,w,c
  2413  00282E  A4D8               	btfss	status,2,c
  2414  002830  D013               	goto	l4777
  2415                           
  2416                           ;FRAME.c: 627: {;FRAME.c: 628: message->data[0] = (BYTE)(Dane->timerRysowaniaWykresuU16/
      +                          10);
  2417  002832  EE20 F008          	lfsr	2,8
  2418  002836  500D               	movf	FRAME_Plot@message,w,c
  2419  002838  26D9               	addwf	fsr2l,f,c
  2420  00283A  500E               	movf	FRAME_Plot@message+1,w,c
  2421  00283C  22DA               	addwfc	fsr2h,f,c
  2422  00283E  C00C F006          	movff	12,___lwdiv@dividend
  2423  002842  C00D F007          	movff	13,___lwdiv@dividend+1
  2424  002846  0E00               	movlw	0
  2425  002848  6E09               	movwf	___lwdiv@divisor+1,c
  2426  00284A  0E0A               	movlw	10
  2427  00284C  6E08               	movwf	___lwdiv@divisor,c
  2428  00284E  EC3B  F014         	call	___lwdiv	;wreg free
  2429  002852  5006               	movf	?___lwdiv,w,c
  2430  002854  6EDF               	movwf	indf2,c
  2431                           
  2432                           ;FRAME.c: 629: }
  2433  002856  0012               	return	
  2434  002858                     l4777:
  2435                           
  2436                           ;FRAME.c: 630: else;FRAME.c: 631: {;FRAME.c: 632: Dane->timerRysowaniaWykresuU16 = (WORD
      +                          )message->data[0]*10;
  2437  002858  EE20 F008          	lfsr	2,8
  2438  00285C  500D               	movf	FRAME_Plot@message,w,c
  2439  00285E  26D9               	addwf	fsr2l,f,c
  2440  002860  500E               	movf	FRAME_Plot@message+1,w,c
  2441  002862  22DA               	addwfc	fsr2h,f,c
  2442  002864  50DF               	movf	indf2,w,c
  2443  002866  6E0F               	movwf	??_FRAME_Plot& (0+255),c
  2444  002868  500F               	movf	??_FRAME_Plot,w,c
  2445  00286A  0D0A               	mullw	10
  2446  00286C  CFF3 F00C          	movff	prodl,12
  2447  002870  CFF4 F00D          	movff	prodh,13
  2448  002874  0012               	return		;funcret
  2449  002876                     __end_of_FRAME_Plot:
  2450                           	opt callstack 0
  2451                           
  2452 ;; *************** function _FRAME_MapPosition *****************
  2453 ;; Defined at:
  2454 ;;		line 649 in file "FRAME.c"
  2455 ;; Parameters:    Size  Location     Type
  2456 ;;  message         2    5[COMRAM] PTR struct .
  2457 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2458 ;; Auto vars:     Size  Location     Type
  2459 ;;		None
  2460 ;; Return value:  Size  Location     Type
  2461 ;;                  1    wreg      void 
  2462 ;; Registers used:
  2463 ;;		None
  2464 ;; Tracked objects:
  2465 ;;		On entry : 0/0
  2466 ;;		On exit  : 0/0
  2467 ;;		Unchanged: 0/0
  2468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2469 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2472 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2473 ;;Total ram usage:        2 bytes
  2474 ;; Hardware stack levels used:    1
  2475 ;; Hardware stack levels required when called:    3
  2476 ;; This function calls:
  2477 ;;		Nothing
  2478 ;; This function is called by:
  2479 ;;		_FRAME_HandleCanFrame
  2480 ;; This function uses a non-reentrant model
  2481 ;;
  2482                           
  2483                           	psect	text15
  2484  002D62                     __ptext15:
  2485                           	opt callstack 0
  2486  002D62                     _FRAME_MapPosition:
  2487                           	opt callstack 25
  2488                           
  2489                           ;incstack = 0
  2490  002D62  0012               	return		;funcret
  2491  002D64                     __end_of_FRAME_MapPosition:
  2492                           	opt callstack 0
  2493                           
  2494 ;; *************** function _FRAME_ExcitationValue *****************
  2495 ;; Defined at:
  2496 ;;		line 238 in file "FRAME.c"
  2497 ;; Parameters:    Size  Location     Type
  2498 ;;  message         2   11[COMRAM] PTR struct .
  2499 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2500 ;; Auto vars:     Size  Location     Type
  2501 ;;		None
  2502 ;; Return value:  Size  Location     Type
  2503 ;;                  1    wreg      void 
  2504 ;; Registers used:
  2505 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2506 ;; Tracked objects:
  2507 ;;		On entry : 0/0
  2508 ;;		On exit  : 0/0
  2509 ;;		Unchanged: 0/0
  2510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2511 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2513 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2514 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2515 ;;Total ram usage:        6 bytes
  2516 ;; Hardware stack levels used:    1
  2517 ;; Hardware stack levels required when called:    4
  2518 ;; This function calls:
  2519 ;;		___awmod
  2520 ;; This function is called by:
  2521 ;;		_FRAME_HandleCanFrame
  2522 ;; This function uses a non-reentrant model
  2523 ;;
  2524                           
  2525                           	psect	text16
  2526  001E48                     __ptext16:
  2527                           	opt callstack 0
  2528  001E48                     _FRAME_ExcitationValue:
  2529                           	opt callstack 24
  2530                           
  2531                           ;FRAME.c: 240: if(message->message_type == 0x02)
  2532                           
  2533                           ;incstack = 0
  2534  001E48  EE20 F001          	lfsr	2,1
  2535  001E4C  500C               	movf	FRAME_ExcitationValue@message,w,c
  2536  001E4E  26D9               	addwf	fsr2l,f,c
  2537  001E50  500D               	movf	FRAME_ExcitationValue@message+1,w,c
  2538  001E52  22DA               	addwfc	fsr2h,f,c
  2539  001E54  0E02               	movlw	2
  2540  001E56  18DE               	xorwf	postinc2,w,c
  2541  001E58  A4D8               	btfss	status,2,c
  2542  001E5A  D039               	goto	l4719
  2543                           
  2544                           ;FRAME.c: 241: {;FRAME.c: 242: message->data_length = 6;
  2545  001E5C  EE20 F010          	lfsr	2,16
  2546  001E60  500C               	movf	FRAME_ExcitationValue@message,w,c
  2547  001E62  26D9               	addwf	fsr2l,f,c
  2548  001E64  500D               	movf	FRAME_ExcitationValue@message+1,w,c
  2549  001E66  22DA               	addwfc	fsr2h,f,c
  2550  001E68  0E06               	movlw	6
  2551  001E6A  6EDF               	movwf	indf2,c
  2552                           
  2553                           ;FRAME.c: 247: message->data[0] = MinPower/0x100;
  2554  001E6C  EE20 F008          	lfsr	2,8
  2555  001E70  500C               	movf	FRAME_ExcitationValue@message,w,c
  2556  001E72  26D9               	addwf	fsr2l,f,c
  2557  001E74  500D               	movf	FRAME_ExcitationValue@message+1,w,c
  2558  001E76  22DA               	addwfc	fsr2h,f,c
  2559  001E78  5021               	movf	_MinPower+1,w,c	;volatile
  2560  001E7A  6EDF               	movwf	indf2,c
  2561                           
  2562                           ;FRAME.c: 248: message->data[1] = MinPower & 0xFF;
  2563  001E7C  EE20 F009          	lfsr	2,9
  2564  001E80  500C               	movf	FRAME_ExcitationValue@message,w,c
  2565  001E82  26D9               	addwf	fsr2l,f,c
  2566  001E84  500D               	movf	FRAME_ExcitationValue@message+1,w,c
  2567  001E86  22DA               	addwfc	fsr2h,f,c
  2568  001E88  C020  FFDF         	movff	_MinPower,indf2	;volatile
  2569                           
  2570                           ;FRAME.c: 249: message->data[2] = MaxPower/0x100;
  2571  001E8C  EE20 F00A          	lfsr	2,10
  2572  001E90  500C               	movf	FRAME_ExcitationValue@message,w,c
  2573  001E92  26D9               	addwf	fsr2l,f,c
  2574  001E94  500D               	movf	FRAME_ExcitationValue@message+1,w,c
  2575  001E96  22DA               	addwfc	fsr2h,f,c
  2576  001E98  503B               	movf	_MaxPower+1,w,c	;volatile
  2577  001E9A  6EDF               	movwf	indf2,c
  2578                           
  2579                           ;FRAME.c: 250: message->data[3] = MaxPower & 0xFF;
  2580  001E9C  EE20 F00B          	lfsr	2,11
  2581  001EA0  500C               	movf	FRAME_ExcitationValue@message,w,c
  2582  001EA2  26D9               	addwf	fsr2l,f,c
  2583  001EA4  500D               	movf	FRAME_ExcitationValue@message+1,w,c
  2584  001EA6  22DA               	addwfc	fsr2h,f,c
  2585  001EA8  C03A  FFDF         	movff	_MaxPower,indf2	;volatile
  2586                           
  2587                           ;FRAME.c: 251: message->data[4] = 0;
  2588  001EAC  EE20 F00C          	lfsr	2,12
  2589  001EB0  500C               	movf	FRAME_ExcitationValue@message,w,c
  2590  001EB2  26D9               	addwf	fsr2l,f,c
  2591  001EB4  500D               	movf	FRAME_ExcitationValue@message+1,w,c
  2592  001EB6  22DA               	addwfc	fsr2h,f,c
  2593  001EB8  0E00               	movlw	0
  2594  001EBA  6EDF               	movwf	indf2,c
  2595                           
  2596                           ;FRAME.c: 252: message->data[5] = 0;
  2597  001EBC  EE20 F00D          	lfsr	2,13
  2598  001EC0  500C               	movf	FRAME_ExcitationValue@message,w,c
  2599  001EC2  26D9               	addwf	fsr2l,f,c
  2600  001EC4  500D               	movf	FRAME_ExcitationValue@message+1,w,c
  2601  001EC6  22DA               	addwfc	fsr2h,f,c
  2602  001EC8  0E00               	movlw	0
  2603  001ECA  6EDF               	movwf	indf2,c
  2604                           
  2605                           ;FRAME.c: 253: }
  2606  001ECC  0012               	return	
  2607  001ECE                     l4719:
  2608                           
  2609                           ;FRAME.c: 254: else;FRAME.c: 255: {;FRAME.c: 258: MinPower = ((message->data[0])*0x100) 
      +                          | ((message->data[1]) % 0xFF);
  2610  001ECE  EE20 F009          	lfsr	2,9
  2611  001ED2  500C               	movf	FRAME_ExcitationValue@message,w,c
  2612  001ED4  26D9               	addwf	fsr2l,f,c
  2613  001ED6  500D               	movf	FRAME_ExcitationValue@message+1,w,c
  2614  001ED8  22DA               	addwfc	fsr2h,f,c
  2615  001EDA  50DF               	movf	indf2,w,c
  2616  001EDC  6E0E               	movwf	??_FRAME_ExcitationValue& (0+255),c
  2617  001EDE  500E               	movf	??_FRAME_ExcitationValue,w,c
  2618  001EE0  6E06               	movwf	___awmod@dividend,c
  2619  001EE2  6A07               	clrf	___awmod@dividend+1,c
  2620  001EE4  0E00               	movlw	0
  2621  001EE6  6E09               	movwf	___awmod@divisor+1,c
  2622  001EE8  6808               	setf	___awmod@divisor,c
  2623  001EEA  EC49  F013         	call	___awmod	;wreg free
  2624  001EEE  EE20 F008          	lfsr	2,8
  2625  001EF2  500C               	movf	FRAME_ExcitationValue@message,w,c
  2626  001EF4  26D9               	addwf	fsr2l,f,c
  2627  001EF6  500D               	movf	FRAME_ExcitationValue@message+1,w,c
  2628  001EF8  22DA               	addwfc	fsr2h,f,c
  2629  001EFA  50DF               	movf	indf2,w,c
  2630  001EFC  6E0F               	movwf	(??_FRAME_ExcitationValue+1)& (0+255),c
  2631  001EFE  500F               	movf	??_FRAME_ExcitationValue+1,w,c
  2632  001F00  6E11               	movwf	(??_FRAME_ExcitationValue+3)& (0+255),c
  2633  001F02  6A10               	clrf	(??_FRAME_ExcitationValue+2)& (0+255),c
  2634  001F04  5006               	movf	?___awmod,w,c
  2635  001F06  1010               	iorwf	??_FRAME_ExcitationValue+2,w,c
  2636  001F08  6E20               	movwf	_MinPower,c	;volatile
  2637  001F0A  5007               	movf	?___awmod+1,w,c
  2638  001F0C  1011               	iorwf	??_FRAME_ExcitationValue+3,w,c
  2639  001F0E  6E21               	movwf	_MinPower+1,c	;volatile
  2640                           
  2641                           ;FRAME.c: 259: MaxPower = ((message->data[2])*0x100) | ((message->data[3]) % 0xFF);
  2642  001F10  EE20 F00B          	lfsr	2,11
  2643  001F14  500C               	movf	FRAME_ExcitationValue@message,w,c
  2644  001F16  26D9               	addwf	fsr2l,f,c
  2645  001F18  500D               	movf	FRAME_ExcitationValue@message+1,w,c
  2646  001F1A  22DA               	addwfc	fsr2h,f,c
  2647  001F1C  50DF               	movf	indf2,w,c
  2648  001F1E  6E0E               	movwf	??_FRAME_ExcitationValue& (0+255),c
  2649  001F20  500E               	movf	??_FRAME_ExcitationValue,w,c
  2650  001F22  6E06               	movwf	___awmod@dividend,c
  2651  001F24  6A07               	clrf	___awmod@dividend+1,c
  2652  001F26  0E00               	movlw	0
  2653  001F28  6E09               	movwf	___awmod@divisor+1,c
  2654  001F2A  6808               	setf	___awmod@divisor,c
  2655  001F2C  EC49  F013         	call	___awmod	;wreg free
  2656  001F30  EE20 F00A          	lfsr	2,10
  2657  001F34  500C               	movf	FRAME_ExcitationValue@message,w,c
  2658  001F36  26D9               	addwf	fsr2l,f,c
  2659  001F38  500D               	movf	FRAME_ExcitationValue@message+1,w,c
  2660  001F3A  22DA               	addwfc	fsr2h,f,c
  2661  001F3C  50DF               	movf	indf2,w,c
  2662  001F3E  6E0F               	movwf	(??_FRAME_ExcitationValue+1)& (0+255),c
  2663  001F40  500F               	movf	??_FRAME_ExcitationValue+1,w,c
  2664  001F42  6E11               	movwf	(??_FRAME_ExcitationValue+3)& (0+255),c
  2665  001F44  6A10               	clrf	(??_FRAME_ExcitationValue+2)& (0+255),c
  2666  001F46  5006               	movf	?___awmod,w,c
  2667  001F48  1010               	iorwf	??_FRAME_ExcitationValue+2,w,c
  2668  001F4A  6E3A               	movwf	_MaxPower,c	;volatile
  2669  001F4C  5007               	movf	?___awmod+1,w,c
  2670  001F4E  1011               	iorwf	??_FRAME_ExcitationValue+3,w,c
  2671  001F50  6E3B               	movwf	_MaxPower+1,c	;volatile
  2672  001F52  0012               	return		;funcret
  2673  001F54                     __end_of_FRAME_ExcitationValue:
  2674                           	opt callstack 0
  2675                           
  2676 ;; *************** function _FRAME_ExcitationMultiplier *****************
  2677 ;; Defined at:
  2678 ;;		line 274 in file "FRAME.c"
  2679 ;; Parameters:    Size  Location     Type
  2680 ;;  message         2    5[COMRAM] PTR struct .
  2681 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2682 ;; Auto vars:     Size  Location     Type
  2683 ;;  i               2    8[COMRAM] unsigned short 
  2684 ;; Return value:  Size  Location     Type
  2685 ;;                  1    wreg      void 
  2686 ;; Registers used:
  2687 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2688 ;; Tracked objects:
  2689 ;;		On entry : 0/0
  2690 ;;		On exit  : 0/0
  2691 ;;		Unchanged: 0/0
  2692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2693 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2694 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2695 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2696 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2697 ;;Total ram usage:        5 bytes
  2698 ;; Hardware stack levels used:    1
  2699 ;; Hardware stack levels required when called:    3
  2700 ;; This function calls:
  2701 ;;		Nothing
  2702 ;; This function is called by:
  2703 ;;		_FRAME_HandleCanFrame
  2704 ;; This function uses a non-reentrant model
  2705 ;;
  2706                           
  2707                           	psect	text17
  2708  002916                     __ptext17:
  2709                           	opt callstack 0
  2710  002916                     _FRAME_ExcitationMultiplier:
  2711                           	opt callstack 25
  2712                           
  2713                           ;FRAME.c: 276: WORD i;;FRAME.c: 278: if(message->message_type == 0x02)
  2714                           
  2715                           ;incstack = 0
  2716  002916  EE20 F001          	lfsr	2,1
  2717  00291A  5006               	movf	FRAME_ExcitationMultiplier@message,w,c
  2718  00291C  26D9               	addwf	fsr2l,f,c
  2719  00291E  5007               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  2720  002920  22DA               	addwfc	fsr2h,f,c
  2721  002922  0E02               	movlw	2
  2722  002924  18DE               	xorwf	postinc2,w,c
  2723  002926  A4D8               	btfss	status,2,c
  2724  002928  0012               	return	
  2725                           
  2726                           ;FRAME.c: 279: {;FRAME.c: 280: message->data_length = 1;
  2727  00292A  EE20 F010          	lfsr	2,16
  2728  00292E  5006               	movf	FRAME_ExcitationMultiplier@message,w,c
  2729  002930  26D9               	addwf	fsr2l,f,c
  2730  002932  5007               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  2731  002934  22DA               	addwfc	fsr2h,f,c
  2732  002936  0E01               	movlw	1
  2733  002938  6EDF               	movwf	indf2,c
  2734                           
  2735                           ;FRAME.c: 281: for(i=0; i<3; i++)
  2736  00293A  0E00               	movlw	0
  2737  00293C  6E0A               	movwf	FRAME_ExcitationMultiplier@i+1,c
  2738  00293E  0E00               	movlw	0
  2739  002940  6E09               	movwf	FRAME_ExcitationMultiplier@i,c
  2740  002942                     l4731:
  2741                           
  2742                           ;FRAME.c: 282: {
  2743  002942  4A09               	infsnz	FRAME_ExcitationMultiplier@i,f,c
  2744  002944  2A0A               	incf	FRAME_ExcitationMultiplier@i+1,f,c
  2745  002946  500A               	movf	FRAME_ExcitationMultiplier@i+1,w,c
  2746  002948  E104               	bnz	u4130
  2747  00294A  0E03               	movlw	3
  2748  00294C  5C09               	subwf	FRAME_ExcitationMultiplier@i,w,c
  2749  00294E  A0D8               	btfss	status,0,c
  2750  002950  D7F8               	goto	l4731
  2751  002952                     u4130:
  2752                           
  2753                           ;FRAME.c: 285: };FRAME.c: 286: message->data[0] = 0xFF;
  2754  002952  EE20 F008          	lfsr	2,8
  2755  002956  5006               	movf	FRAME_ExcitationMultiplier@message,w,c
  2756  002958  26D9               	addwf	fsr2l,f,c
  2757  00295A  5007               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  2758  00295C  22DA               	addwfc	fsr2h,f,c
  2759  00295E  0EFF               	movlw	255
  2760  002960  6EDF               	movwf	indf2,c
  2761                           
  2762                           ;FRAME.c: 287: }
  2763  002962  0012               	return		;funcret
  2764  002964                     __end_of_FRAME_ExcitationMultiplier:
  2765                           	opt callstack 0
  2766                           
  2767 ;; *************** function _FRAME_DeviceReset *****************
  2768 ;; Defined at:
  2769 ;;		line 428 in file "FRAME.c"
  2770 ;; Parameters:    Size  Location     Type
  2771 ;;  message         2   16[COMRAM] PTR struct .
  2772 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2773 ;; Auto vars:     Size  Location     Type
  2774 ;;		None
  2775 ;; Return value:  Size  Location     Type
  2776 ;;                  1    wreg      void 
  2777 ;; Registers used:
  2778 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2779 ;; Tracked objects:
  2780 ;;		On entry : 0/0
  2781 ;;		On exit  : 0/0
  2782 ;;		Unchanged: 0/0
  2783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2784 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2786 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2787 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2788 ;;Total ram usage:        3 bytes
  2789 ;; Hardware stack levels used:    1
  2790 ;; Hardware stack levels required when called:    6
  2791 ;; This function calls:
  2792 ;;		_FRAME_DataUpdateAndChangeOption
  2793 ;;		_WriteDataToEEPROM
  2794 ;; This function is called by:
  2795 ;;		_FRAME_HandleCanFrame
  2796 ;; This function uses a non-reentrant model
  2797 ;;
  2798                           
  2799                           	psect	text18
  2800  001BD8                     __ptext18:
  2801                           	opt callstack 0
  2802  001BD8                     _FRAME_DeviceReset:
  2803                           	opt callstack 22
  2804                           
  2805                           ;FRAME.c: 430: if(message->message_type == 0x02)
  2806                           
  2807                           ;incstack = 0
  2808  001BD8  EE20 F001          	lfsr	2,1
  2809  001BDC  5011               	movf	FRAME_DeviceReset@message,w,c
  2810  001BDE  26D9               	addwf	fsr2l,f,c
  2811  001BE0  5012               	movf	FRAME_DeviceReset@message+1,w,c
  2812  001BE2  22DA               	addwfc	fsr2h,f,c
  2813  001BE4  0E02               	movlw	2
  2814  001BE6  18DE               	xorwf	postinc2,w,c
  2815  001BE8  A4D8               	btfss	status,2,c
  2816  001BEA  D057               	goto	l4753
  2817                           
  2818                           ;FRAME.c: 431: {;FRAME.c: 432: message->data_length = 8;
  2819  001BEC  EE20 F010          	lfsr	2,16
  2820  001BF0  5011               	movf	FRAME_DeviceReset@message,w,c
  2821  001BF2  26D9               	addwf	fsr2l,f,c
  2822  001BF4  5012               	movf	FRAME_DeviceReset@message+1,w,c
  2823  001BF6  22DA               	addwfc	fsr2h,f,c
  2824  001BF8  0E08               	movlw	8
  2825  001BFA  6EDF               	movwf	indf2,c
  2826                           
  2827                           ;FRAME.c: 434: message->data[0] = (RCON>>6) & 0x01;
  2828  001BFC  EE20 F008          	lfsr	2,8
  2829  001C00  5011               	movf	FRAME_DeviceReset@message,w,c
  2830  001C02  26D9               	addwf	fsr2l,f,c
  2831  001C04  5012               	movf	FRAME_DeviceReset@message+1,w,c
  2832  001C06  22DA               	addwfc	fsr2h,f,c
  2833  001C08  44D0               	rlncf	4048,w,c	;volatile
  2834  001C0A  46E8               	rlncf	wreg,f,c
  2835  001C0C  0B03               	andlw	3
  2836  001C0E  0B01               	andlw	1
  2837  001C10  6EDF               	movwf	indf2,c
  2838                           
  2839                           ;FRAME.c: 435: message->data[1] = Flagi.wykonanoZapisDoFlash;
  2840  001C12  EE20 F009          	lfsr	2,9
  2841  001C16  5011               	movf	FRAME_DeviceReset@message,w,c
  2842  001C18  26D9               	addwf	fsr2l,f,c
  2843  001C1A  5012               	movf	FRAME_DeviceReset@message+1,w,c
  2844  001C1C  22DA               	addwfc	fsr2h,f,c
  2845  001C1E  0100               	movlb	0	; () banked
  2846  001C20  A9C6               	btfss	_Flagi& (0+255),4,b
  2847  001C22  D002               	goto	u4170
  2848  001C24  0E01               	movlw	1
  2849  001C26  D001               	goto	u4176
  2850  001C28                     u4170:
  2851  001C28  0E00               	movlw	0
  2852  001C2A                     u4176:
  2853  001C2A  6EDF               	movwf	indf2,c
  2854                           
  2855                           ;FRAME.c: 436: message->data[2] = Flagi.pomiarTla;
  2856  001C2C  EE20 F00A          	lfsr	2,10
  2857  001C30  5011               	movf	FRAME_DeviceReset@message,w,c
  2858  001C32  26D9               	addwf	fsr2l,f,c
  2859  001C34  5012               	movf	FRAME_DeviceReset@message+1,w,c
  2860  001C36  22DA               	addwfc	fsr2h,f,c
  2861  001C38  A1C6               	btfss	_Flagi& (0+255),0,b
  2862  001C3A  D002               	goto	u4180
  2863  001C3C  0E01               	movlw	1
  2864  001C3E  D001               	goto	u4186
  2865  001C40                     u4180:
  2866  001C40  0E00               	movlw	0
  2867  001C42                     u4186:
  2868  001C42  6EDF               	movwf	indf2,c
  2869                           
  2870                           ;FRAME.c: 437: message->data[3] = 0;
  2871  001C44  EE20 F00B          	lfsr	2,11
  2872  001C48  5011               	movf	FRAME_DeviceReset@message,w,c
  2873  001C4A  26D9               	addwf	fsr2l,f,c
  2874  001C4C  5012               	movf	FRAME_DeviceReset@message+1,w,c
  2875  001C4E  22DA               	addwfc	fsr2h,f,c
  2876  001C50  0E00               	movlw	0
  2877  001C52  6EDF               	movwf	indf2,c
  2878                           
  2879                           ;FRAME.c: 438: message->data[4] = Dane->rokU16;
  2880  001C54  EE20 F00C          	lfsr	2,12
  2881  001C58  5011               	movf	FRAME_DeviceReset@message,w,c
  2882  001C5A  26D9               	addwf	fsr2l,f,c
  2883  001C5C  5012               	movf	FRAME_DeviceReset@message+1,w,c
  2884  001C5E  22DA               	addwfc	fsr2h,f,c
  2885  001C60  C036 FFDF          	movff	54,indf2
  2886                           
  2887                           ;FRAME.c: 439: message->data[5] = Dane->miesiacU16;
  2888  001C64  EE20 F00D          	lfsr	2,13
  2889  001C68  5011               	movf	FRAME_DeviceReset@message,w,c
  2890  001C6A  26D9               	addwf	fsr2l,f,c
  2891  001C6C  5012               	movf	FRAME_DeviceReset@message+1,w,c
  2892  001C6E  22DA               	addwfc	fsr2h,f,c
  2893  001C70  C038 FFDF          	movff	56,indf2
  2894                           
  2895                           ;FRAME.c: 440: message->data[6] = Dane->dzienU16;
  2896  001C74  EE20 F00E          	lfsr	2,14
  2897  001C78  5011               	movf	FRAME_DeviceReset@message,w,c
  2898  001C7A  26D9               	addwf	fsr2l,f,c
  2899  001C7C  5012               	movf	FRAME_DeviceReset@message+1,w,c
  2900  001C7E  22DA               	addwfc	fsr2h,f,c
  2901  001C80  C03A FFDF          	movff	58,indf2
  2902                           
  2903                           ;FRAME.c: 441: message->data[7] = Dane->godzinaU16;
  2904  001C84  EE20 F00F          	lfsr	2,15
  2905  001C88  5011               	movf	FRAME_DeviceReset@message,w,c
  2906  001C8A  26D9               	addwf	fsr2l,f,c
  2907  001C8C  5012               	movf	FRAME_DeviceReset@message+1,w,c
  2908  001C8E  22DA               	addwfc	fsr2h,f,c
  2909  001C90  C03C FFDF          	movff	60,indf2
  2910                           
  2911                           ; BSR set to: 0
  2912                           ;FRAME.c: 442: RCON &= ~(1<<6);
  2913  001C94  9CD0               	bcf	4048,6,c	;volatile
  2914                           
  2915                           ; BSR set to: 0
  2916                           ;FRAME.c: 443: Flagi.wykonanoZapisDoFlash = 0;
  2917  001C96  99C6               	bcf	_Flagi& (0+255),4,b
  2918                           
  2919                           ;FRAME.c: 457: }
  2920  001C98  0012               	return	
  2921  001C9A                     l4753:
  2922                           
  2923                           ;FRAME.c: 458: else;FRAME.c: 459: {;FRAME.c: 460: message->data_length = 1;
  2924  001C9A  EE20 F010          	lfsr	2,16
  2925  001C9E  5011               	movf	FRAME_DeviceReset@message,w,c
  2926  001CA0  26D9               	addwf	fsr2l,f,c
  2927  001CA2  5012               	movf	FRAME_DeviceReset@message+1,w,c
  2928  001CA4  22DA               	addwfc	fsr2h,f,c
  2929  001CA6  0E01               	movlw	1
  2930  001CA8  6EDF               	movwf	indf2,c
  2931                           
  2932                           ;FRAME.c: 462: if(message->data[2])
  2933  001CAA  EE20 F00A          	lfsr	2,10
  2934  001CAE  5011               	movf	FRAME_DeviceReset@message,w,c
  2935  001CB0  26D9               	addwf	fsr2l,f,c
  2936  001CB2  5012               	movf	FRAME_DeviceReset@message+1,w,c
  2937  001CB4  22DA               	addwfc	fsr2h,f,c
  2938  001CB6  50DF               	movf	indf2,w,c
  2939  001CB8  B4D8               	btfsc	status,2,c
  2940  001CBA  D00F               	goto	l4763
  2941                           
  2942                           ;FRAME.c: 463: {;FRAME.c: 464: Flagi.pomiarTla = 1;
  2943  001CBC  0100               	movlb	0	; () banked
  2944  001CBE  81C6               	bsf	_Flagi& (0+255),0,b
  2945                           
  2946                           ; BSR set to: 0
  2947                           ;FRAME.c: 465: if(message->data[1])
  2948  001CC0  EE20 F009          	lfsr	2,9
  2949  001CC4  5011               	movf	FRAME_DeviceReset@message,w,c
  2950  001CC6  26D9               	addwf	fsr2l,f,c
  2951  001CC8  5012               	movf	FRAME_DeviceReset@message+1,w,c
  2952  001CCA  22DA               	addwfc	fsr2h,f,c
  2953  001CCC  50DF               	movf	indf2,w,c
  2954  001CCE  B4D8               	btfsc	status,2,c
  2955  001CD0  D01E               	goto	l4771
  2956                           
  2957                           ; BSR set to: 0
  2958                           ;FRAME.c: 466: {;FRAME.c: 467: Flagi.zapisDoFlash = 1;
  2959  001CD2  87C6               	bsf	_Flagi& (0+255),3,b
  2960                           
  2961                           ; BSR set to: 0
  2962                           ;FRAME.c: 468: WriteDataToEEPROM();
  2963  001CD4  EC0E  F009         	call	_WriteDataToEEPROM	;wreg free
  2964  001CD8  D01A               	goto	l4771
  2965  001CDA                     l4763:
  2966                           
  2967                           ;FRAME.c: 471: else;FRAME.c: 472: {;FRAME.c: 473: if(message->data[1])
  2968  001CDA  EE20 F009          	lfsr	2,9
  2969  001CDE  5011               	movf	FRAME_DeviceReset@message,w,c
  2970  001CE0  26D9               	addwf	fsr2l,f,c
  2971  001CE2  5012               	movf	FRAME_DeviceReset@message+1,w,c
  2972  001CE4  22DA               	addwfc	fsr2h,f,c
  2973  001CE6  50DF               	movf	indf2,w,c
  2974  001CE8  B4D8               	btfsc	status,2,c
  2975  001CEA  D008               	goto	l4767
  2976                           
  2977                           ;FRAME.c: 474: {;FRAME.c: 475: FRAME_DataUpdateAndChangeOption(message);
  2978  001CEC  C011  F006         	movff	FRAME_DeviceReset@message,FRAME_DataUpdateAndChangeOption@message
  2979  001CF0  C012  F007         	movff	FRAME_DeviceReset@message+1,FRAME_DataUpdateAndChangeOption@message+1
  2980  001CF4  ECE2  F013         	call	_FRAME_DataUpdateAndChangeOption	;wreg free
  2981                           
  2982                           ;FRAME.c: 476: WriteDataToEEPROM();
  2983  001CF8  EC0E  F009         	call	_WriteDataToEEPROM	;wreg free
  2984  001CFC                     l4767:
  2985                           
  2986                           ;FRAME.c: 478: };FRAME.c: 479: if(message->data[0])
  2987  001CFC  EE20 F008          	lfsr	2,8
  2988  001D00  5011               	movf	FRAME_DeviceReset@message,w,c
  2989  001D02  26D9               	addwf	fsr2l,f,c
  2990  001D04  5012               	movf	FRAME_DeviceReset@message+1,w,c
  2991  001D06  22DA               	addwfc	fsr2h,f,c
  2992  001D08  50DF               	movf	indf2,w,c
  2993  001D0A  A4D8               	btfss	status,2,c
  2994  001D0C  00FF               	reset		;# 
  2995  001D0E                     l4771:
  2996                           
  2997                           ;FRAME.c: 482: };FRAME.c: 483: };FRAME.c: 484: message->data[0] = 0xFF;
  2998  001D0E  EE20 F008          	lfsr	2,8
  2999  001D12  5011               	movf	FRAME_DeviceReset@message,w,c
  3000  001D14  26D9               	addwf	fsr2l,f,c
  3001  001D16  5012               	movf	FRAME_DeviceReset@message+1,w,c
  3002  001D18  22DA               	addwfc	fsr2h,f,c
  3003  001D1A  0EFF               	movlw	255
  3004  001D1C  6EDF               	movwf	indf2,c
  3005  001D1E  0012               	return		;funcret
  3006  001D20                     __end_of_FRAME_DeviceReset:
  3007                           	opt callstack 0
  3008                           
  3009 ;; *************** function _WriteDataToEEPROM *****************
  3010 ;; Defined at:
  3011 ;;		line 559 in file "FRAME.c"
  3012 ;; Parameters:    Size  Location     Type
  3013 ;;		None
  3014 ;; Auto vars:     Size  Location     Type
  3015 ;;		None
  3016 ;; Return value:  Size  Location     Type
  3017 ;;                  1    wreg      void 
  3018 ;; Registers used:
  3019 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3020 ;; Tracked objects:
  3021 ;;		On entry : 0/0
  3022 ;;		On exit  : 0/0
  3023 ;;		Unchanged: 0/0
  3024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3027 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3028 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3029 ;;Total ram usage:        2 bytes
  3030 ;; Hardware stack levels used:    1
  3031 ;; Hardware stack levels required when called:    5
  3032 ;; This function calls:
  3033 ;;		_NVMWrite
  3034 ;;		_WritetoEEPROM
  3035 ;; This function is called by:
  3036 ;;		_FRAME_DeviceReset
  3037 ;; This function uses a non-reentrant model
  3038 ;;
  3039                           
  3040                           	psect	text19
  3041  00121C                     __ptext19:
  3042                           	opt callstack 0
  3043  00121C                     _WriteDataToEEPROM:
  3044                           	opt callstack 22
  3045                           
  3046                           ;FRAME.c: 561: NVMWrite(&Init_Data,110,2);
  3047                           
  3048                           ;incstack = 0
  3049  00121C  0E48               	movlw	low _Init_Data
  3050  00121E  6E09               	movwf	NVMWrite@source,c
  3051  001220  0E00               	movlw	high _Init_Data
  3052  001222  6E0A               	movwf	NVMWrite@source+1,c
  3053  001224  0E00               	movlw	0
  3054  001226  6E0C               	movwf	NVMWrite@addr+1,c
  3055  001228  0E6E               	movlw	110
  3056  00122A  6E0B               	movwf	NVMWrite@addr,c
  3057  00122C  0E00               	movlw	0
  3058  00122E  6E0E               	movwf	NVMWrite@count+1,c
  3059  001230  0E02               	movlw	2
  3060  001232  6E0D               	movwf	NVMWrite@count,c
  3061  001234  EC33  F015         	call	_NVMWrite	;wreg free
  3062                           
  3063                           ;FRAME.c: 562: if(MinAdres>(UINT)NeightAdress1>MaxAdres)
  3064  001238  5024               	movf	_MinAdres,w,c	;volatile
  3065  00123A  5C38               	subwf	_NeightAdress1,w,c	;volatile
  3066  00123C  5025               	movf	_MinAdres+1,w,c	;volatile
  3067  00123E  5839               	subwfb	_NeightAdress1+1,w,c	;volatile
  3068  001240  B0D8               	btfsc	status,0,c
  3069  001242  D002               	goto	u3660
  3070  001244  0E01               	movlw	1
  3071  001246  D001               	goto	u3670
  3072  001248                     u3660:
  3073  001248  0E00               	movlw	0
  3074  00124A                     u3670:
  3075  00124A  6E0F               	movwf	??_WriteDataToEEPROM& (0+255),c
  3076  00124C  6A10               	clrf	(??_WriteDataToEEPROM+1)& (0+255),c
  3077  00124E  500F               	movf	??_WriteDataToEEPROM,w,c
  3078  001250  5C3E               	subwf	_MaxAdres,w,c	;volatile
  3079  001252  5010               	movf	??_WriteDataToEEPROM+1,w,c
  3080  001254  583F               	subwfb	_MaxAdres+1,w,c	;volatile
  3081  001256  B0D8               	btfsc	status,0,c
  3082  001258  D004               	goto	l4471
  3083                           
  3084                           ;FRAME.c: 563: {;FRAME.c: 564: NeightAdress1=0x0000;
  3085  00125A  0E00               	movlw	0
  3086  00125C  6E39               	movwf	_NeightAdress1+1,c	;volatile
  3087  00125E  0E00               	movlw	0
  3088  001260  6E38               	movwf	_NeightAdress1,c	;volatile
  3089  001262                     l4471:
  3090                           
  3091                           ;FRAME.c: 565: };FRAME.c: 566: NVMWrite(&NeightAdress1,113,2);
  3092  001262  0E38               	movlw	low _NeightAdress1
  3093  001264  6E09               	movwf	NVMWrite@source,c
  3094  001266  0E00               	movlw	high _NeightAdress1
  3095  001268  6E0A               	movwf	NVMWrite@source+1,c
  3096  00126A  0E00               	movlw	0
  3097  00126C  6E0C               	movwf	NVMWrite@addr+1,c
  3098  00126E  0E71               	movlw	113
  3099  001270  6E0B               	movwf	NVMWrite@addr,c
  3100  001272  0E00               	movlw	0
  3101  001274  6E0E               	movwf	NVMWrite@count+1,c
  3102  001276  0E02               	movlw	2
  3103  001278  6E0D               	movwf	NVMWrite@count,c
  3104  00127A  EC33  F015         	call	_NVMWrite	;wreg free
  3105                           
  3106                           ;FRAME.c: 567: if(MinAdres>(UINT)NeightAdress2>MaxAdres)
  3107  00127E  5024               	movf	_MinAdres,w,c	;volatile
  3108  001280  5C4A               	subwf	_NeightAdress2,w,c	;volatile
  3109  001282  5025               	movf	_MinAdres+1,w,c	;volatile
  3110  001284  584B               	subwfb	_NeightAdress2+1,w,c	;volatile
  3111  001286  B0D8               	btfsc	status,0,c
  3112  001288  D002               	goto	u3690
  3113  00128A  0E01               	movlw	1
  3114  00128C  D001               	goto	u3700
  3115  00128E                     u3690:
  3116  00128E  0E00               	movlw	0
  3117  001290                     u3700:
  3118  001290  6E0F               	movwf	??_WriteDataToEEPROM& (0+255),c
  3119  001292  6A10               	clrf	(??_WriteDataToEEPROM+1)& (0+255),c
  3120  001294  500F               	movf	??_WriteDataToEEPROM,w,c
  3121  001296  5C3E               	subwf	_MaxAdres,w,c	;volatile
  3122  001298  5010               	movf	??_WriteDataToEEPROM+1,w,c
  3123  00129A  583F               	subwfb	_MaxAdres+1,w,c	;volatile
  3124  00129C  B0D8               	btfsc	status,0,c
  3125  00129E  D004               	goto	l4477
  3126                           
  3127                           ;FRAME.c: 568: {;FRAME.c: 569: NeightAdress2=0x0000;
  3128  0012A0  0E00               	movlw	0
  3129  0012A2  6E4B               	movwf	_NeightAdress2+1,c	;volatile
  3130  0012A4  0E00               	movlw	0
  3131  0012A6  6E4A               	movwf	_NeightAdress2,c	;volatile
  3132  0012A8                     l4477:
  3133                           
  3134                           ;FRAME.c: 570: };FRAME.c: 571: NVMWrite(&NeightAdress2,116,2);
  3135  0012A8  0E4A               	movlw	low _NeightAdress2
  3136  0012AA  6E09               	movwf	NVMWrite@source,c
  3137  0012AC  0E00               	movlw	high _NeightAdress2
  3138  0012AE  6E0A               	movwf	NVMWrite@source+1,c
  3139  0012B0  0E00               	movlw	0
  3140  0012B2  6E0C               	movwf	NVMWrite@addr+1,c
  3141  0012B4  0E74               	movlw	116
  3142  0012B6  6E0B               	movwf	NVMWrite@addr,c
  3143  0012B8  0E00               	movlw	0
  3144  0012BA  6E0E               	movwf	NVMWrite@count+1,c
  3145  0012BC  0E02               	movlw	2
  3146  0012BE  6E0D               	movwf	NVMWrite@count,c
  3147  0012C0  EC33  F015         	call	_NVMWrite	;wreg free
  3148                           
  3149                           ;FRAME.c: 572: if(MinAdres>(UINT)NeightAdress3>MaxAdres)
  3150  0012C4  5024               	movf	_MinAdres,w,c	;volatile
  3151  0012C6  5C36               	subwf	_NeightAdress3,w,c	;volatile
  3152  0012C8  5025               	movf	_MinAdres+1,w,c	;volatile
  3153  0012CA  5837               	subwfb	_NeightAdress3+1,w,c	;volatile
  3154  0012CC  B0D8               	btfsc	status,0,c
  3155  0012CE  D002               	goto	u3720
  3156  0012D0  0E01               	movlw	1
  3157  0012D2  D001               	goto	u3730
  3158  0012D4                     u3720:
  3159  0012D4  0E00               	movlw	0
  3160  0012D6                     u3730:
  3161  0012D6  6E0F               	movwf	??_WriteDataToEEPROM& (0+255),c
  3162  0012D8  6A10               	clrf	(??_WriteDataToEEPROM+1)& (0+255),c
  3163  0012DA  500F               	movf	??_WriteDataToEEPROM,w,c
  3164  0012DC  5C3E               	subwf	_MaxAdres,w,c	;volatile
  3165  0012DE  5010               	movf	??_WriteDataToEEPROM+1,w,c
  3166  0012E0  583F               	subwfb	_MaxAdres+1,w,c	;volatile
  3167  0012E2  B0D8               	btfsc	status,0,c
  3168  0012E4  D004               	goto	l4483
  3169                           
  3170                           ;FRAME.c: 573: {;FRAME.c: 574: NeightAdress3=0x0000;
  3171  0012E6  0E00               	movlw	0
  3172  0012E8  6E37               	movwf	_NeightAdress3+1,c	;volatile
  3173  0012EA  0E00               	movlw	0
  3174  0012EC  6E36               	movwf	_NeightAdress3,c	;volatile
  3175  0012EE                     l4483:
  3176                           
  3177                           ;FRAME.c: 575: };FRAME.c: 576: NVMWrite(&NeightAdress3,119,2);
  3178  0012EE  0E36               	movlw	low _NeightAdress3
  3179  0012F0  6E09               	movwf	NVMWrite@source,c
  3180  0012F2  0E00               	movlw	high _NeightAdress3
  3181  0012F4  6E0A               	movwf	NVMWrite@source+1,c
  3182  0012F6  0E00               	movlw	0
  3183  0012F8  6E0C               	movwf	NVMWrite@addr+1,c
  3184  0012FA  0E77               	movlw	119
  3185  0012FC  6E0B               	movwf	NVMWrite@addr,c
  3186  0012FE  0E00               	movlw	0
  3187  001300  6E0E               	movwf	NVMWrite@count+1,c
  3188  001302  0E02               	movlw	2
  3189  001304  6E0D               	movwf	NVMWrite@count,c
  3190  001306  EC33  F015         	call	_NVMWrite	;wreg free
  3191                           
  3192                           ;FRAME.c: 577: if(MinAdres>(UINT)NeightAdress4>MaxAdres)
  3193  00130A  5024               	movf	_MinAdres,w,c	;volatile
  3194  00130C  5C34               	subwf	_NeightAdress4,w,c	;volatile
  3195  00130E  5025               	movf	_MinAdres+1,w,c	;volatile
  3196  001310  5835               	subwfb	_NeightAdress4+1,w,c	;volatile
  3197  001312  B0D8               	btfsc	status,0,c
  3198  001314  D002               	goto	u3750
  3199  001316  0E01               	movlw	1
  3200  001318  D001               	goto	u3760
  3201  00131A                     u3750:
  3202  00131A  0E00               	movlw	0
  3203  00131C                     u3760:
  3204  00131C  6E0F               	movwf	??_WriteDataToEEPROM& (0+255),c
  3205  00131E  6A10               	clrf	(??_WriteDataToEEPROM+1)& (0+255),c
  3206  001320  500F               	movf	??_WriteDataToEEPROM,w,c
  3207  001322  5C3E               	subwf	_MaxAdres,w,c	;volatile
  3208  001324  5010               	movf	??_WriteDataToEEPROM+1,w,c
  3209  001326  583F               	subwfb	_MaxAdres+1,w,c	;volatile
  3210  001328  B0D8               	btfsc	status,0,c
  3211  00132A  D004               	goto	l4489
  3212                           
  3213                           ;FRAME.c: 578: {;FRAME.c: 579: NeightAdress4=0x0000;
  3214  00132C  0E00               	movlw	0
  3215  00132E  6E35               	movwf	_NeightAdress4+1,c	;volatile
  3216  001330  0E00               	movlw	0
  3217  001332  6E34               	movwf	_NeightAdress4,c	;volatile
  3218  001334                     l4489:
  3219                           
  3220                           ;FRAME.c: 580: };FRAME.c: 581: NVMWrite(&NeightAdress4,122,2);
  3221  001334  0E34               	movlw	low _NeightAdress4
  3222  001336  6E09               	movwf	NVMWrite@source,c
  3223  001338  0E00               	movlw	high _NeightAdress4
  3224  00133A  6E0A               	movwf	NVMWrite@source+1,c
  3225  00133C  0E00               	movlw	0
  3226  00133E  6E0C               	movwf	NVMWrite@addr+1,c
  3227  001340  0E7A               	movlw	122
  3228  001342  6E0B               	movwf	NVMWrite@addr,c
  3229  001344  0E00               	movlw	0
  3230  001346  6E0E               	movwf	NVMWrite@count+1,c
  3231  001348  0E02               	movlw	2
  3232  00134A  6E0D               	movwf	NVMWrite@count,c
  3233  00134C  EC33  F015         	call	_NVMWrite	;wreg free
  3234                           
  3235                           ;FRAME.c: 582: if(MinAdres>(UINT)NeightAdress5>MaxAdres)
  3236  001350  5024               	movf	_MinAdres,w,c	;volatile
  3237  001352  5C32               	subwf	_NeightAdress5,w,c	;volatile
  3238  001354  5025               	movf	_MinAdres+1,w,c	;volatile
  3239  001356  5833               	subwfb	_NeightAdress5+1,w,c	;volatile
  3240  001358  B0D8               	btfsc	status,0,c
  3241  00135A  D002               	goto	u3780
  3242  00135C  0E01               	movlw	1
  3243  00135E  D001               	goto	u3790
  3244  001360                     u3780:
  3245  001360  0E00               	movlw	0
  3246  001362                     u3790:
  3247  001362  6E0F               	movwf	??_WriteDataToEEPROM& (0+255),c
  3248  001364  6A10               	clrf	(??_WriteDataToEEPROM+1)& (0+255),c
  3249  001366  500F               	movf	??_WriteDataToEEPROM,w,c
  3250  001368  5C3E               	subwf	_MaxAdres,w,c	;volatile
  3251  00136A  5010               	movf	??_WriteDataToEEPROM+1,w,c
  3252  00136C  583F               	subwfb	_MaxAdres+1,w,c	;volatile
  3253  00136E  B0D8               	btfsc	status,0,c
  3254  001370  D004               	goto	l4495
  3255                           
  3256                           ;FRAME.c: 583: {;FRAME.c: 584: NeightAdress5=0x0000;
  3257  001372  0E00               	movlw	0
  3258  001374  6E33               	movwf	_NeightAdress5+1,c	;volatile
  3259  001376  0E00               	movlw	0
  3260  001378  6E32               	movwf	_NeightAdress5,c	;volatile
  3261  00137A                     l4495:
  3262                           
  3263                           ;FRAME.c: 585: };FRAME.c: 586: NVMWrite(&NeightAdress5,125,2);
  3264  00137A  0E32               	movlw	low _NeightAdress5
  3265  00137C  6E09               	movwf	NVMWrite@source,c
  3266  00137E  0E00               	movlw	high _NeightAdress5
  3267  001380  6E0A               	movwf	NVMWrite@source+1,c
  3268  001382  0E00               	movlw	0
  3269  001384  6E0C               	movwf	NVMWrite@addr+1,c
  3270  001386  0E7D               	movlw	125
  3271  001388  6E0B               	movwf	NVMWrite@addr,c
  3272  00138A  0E00               	movlw	0
  3273  00138C  6E0E               	movwf	NVMWrite@count+1,c
  3274  00138E  0E02               	movlw	2
  3275  001390  6E0D               	movwf	NVMWrite@count,c
  3276  001392  EC33  F015         	call	_NVMWrite	;wreg free
  3277                           
  3278                           ;FRAME.c: 587: if(MinAdres>(UINT)NeightAdress6>MaxAdres)
  3279  001396  5024               	movf	_MinAdres,w,c	;volatile
  3280  001398  5C30               	subwf	_NeightAdress6,w,c	;volatile
  3281  00139A  5025               	movf	_MinAdres+1,w,c	;volatile
  3282  00139C  5831               	subwfb	_NeightAdress6+1,w,c	;volatile
  3283  00139E  B0D8               	btfsc	status,0,c
  3284  0013A0  D002               	goto	u3810
  3285  0013A2  0E01               	movlw	1
  3286  0013A4  D001               	goto	u3820
  3287  0013A6                     u3810:
  3288  0013A6  0E00               	movlw	0
  3289  0013A8                     u3820:
  3290  0013A8  6E0F               	movwf	??_WriteDataToEEPROM& (0+255),c
  3291  0013AA  6A10               	clrf	(??_WriteDataToEEPROM+1)& (0+255),c
  3292  0013AC  500F               	movf	??_WriteDataToEEPROM,w,c
  3293  0013AE  5C3E               	subwf	_MaxAdres,w,c	;volatile
  3294  0013B0  5010               	movf	??_WriteDataToEEPROM+1,w,c
  3295  0013B2  583F               	subwfb	_MaxAdres+1,w,c	;volatile
  3296  0013B4  B0D8               	btfsc	status,0,c
  3297  0013B6  D004               	goto	l4501
  3298                           
  3299                           ;FRAME.c: 588: {;FRAME.c: 589: NeightAdress6=0x0000;
  3300  0013B8  0E00               	movlw	0
  3301  0013BA  6E31               	movwf	_NeightAdress6+1,c	;volatile
  3302  0013BC  0E00               	movlw	0
  3303  0013BE  6E30               	movwf	_NeightAdress6,c	;volatile
  3304  0013C0                     l4501:
  3305                           
  3306                           ;FRAME.c: 590: };FRAME.c: 591: NVMWrite(&NeightAdress6,128,2);
  3307  0013C0  0E30               	movlw	low _NeightAdress6
  3308  0013C2  6E09               	movwf	NVMWrite@source,c
  3309  0013C4  0E00               	movlw	high _NeightAdress6
  3310  0013C6  6E0A               	movwf	NVMWrite@source+1,c
  3311  0013C8  0E00               	movlw	0
  3312  0013CA  6E0C               	movwf	NVMWrite@addr+1,c
  3313  0013CC  0E80               	movlw	128
  3314  0013CE  6E0B               	movwf	NVMWrite@addr,c
  3315  0013D0  0E00               	movlw	0
  3316  0013D2  6E0E               	movwf	NVMWrite@count+1,c
  3317  0013D4  0E02               	movlw	2
  3318  0013D6  6E0D               	movwf	NVMWrite@count,c
  3319  0013D8  EC33  F015         	call	_NVMWrite	;wreg free
  3320                           
  3321                           ;FRAME.c: 592: if(MinAdres>(UINT)NeightAdress7>MaxAdres)
  3322  0013DC  5024               	movf	_MinAdres,w,c	;volatile
  3323  0013DE  5C2E               	subwf	_NeightAdress7,w,c	;volatile
  3324  0013E0  5025               	movf	_MinAdres+1,w,c	;volatile
  3325  0013E2  582F               	subwfb	_NeightAdress7+1,w,c	;volatile
  3326  0013E4  B0D8               	btfsc	status,0,c
  3327  0013E6  D002               	goto	u3840
  3328  0013E8  0E01               	movlw	1
  3329  0013EA  D001               	goto	u3850
  3330  0013EC                     u3840:
  3331  0013EC  0E00               	movlw	0
  3332  0013EE                     u3850:
  3333  0013EE  6E0F               	movwf	??_WriteDataToEEPROM& (0+255),c
  3334  0013F0  6A10               	clrf	(??_WriteDataToEEPROM+1)& (0+255),c
  3335  0013F2  500F               	movf	??_WriteDataToEEPROM,w,c
  3336  0013F4  5C3E               	subwf	_MaxAdres,w,c	;volatile
  3337  0013F6  5010               	movf	??_WriteDataToEEPROM+1,w,c
  3338  0013F8  583F               	subwfb	_MaxAdres+1,w,c	;volatile
  3339  0013FA  B0D8               	btfsc	status,0,c
  3340  0013FC  D004               	goto	l4507
  3341                           
  3342                           ;FRAME.c: 593: {;FRAME.c: 594: NeightAdress7=0x0000;
  3343  0013FE  0E00               	movlw	0
  3344  001400  6E2F               	movwf	_NeightAdress7+1,c	;volatile
  3345  001402  0E00               	movlw	0
  3346  001404  6E2E               	movwf	_NeightAdress7,c	;volatile
  3347  001406                     l4507:
  3348                           
  3349                           ;FRAME.c: 595: };FRAME.c: 596: NVMWrite(&NeightAdress7,131,2);
  3350  001406  0E2E               	movlw	low _NeightAdress7
  3351  001408  6E09               	movwf	NVMWrite@source,c
  3352  00140A  0E00               	movlw	high _NeightAdress7
  3353  00140C  6E0A               	movwf	NVMWrite@source+1,c
  3354  00140E  0E00               	movlw	0
  3355  001410  6E0C               	movwf	NVMWrite@addr+1,c
  3356  001412  0E83               	movlw	131
  3357  001414  6E0B               	movwf	NVMWrite@addr,c
  3358  001416  0E00               	movlw	0
  3359  001418  6E0E               	movwf	NVMWrite@count+1,c
  3360  00141A  0E02               	movlw	2
  3361  00141C  6E0D               	movwf	NVMWrite@count,c
  3362  00141E  EC33  F015         	call	_NVMWrite	;wreg free
  3363                           
  3364                           ;FRAME.c: 597: if(MinAdres>(UINT)NeightAdress8>MaxAdres)
  3365  001422  5024               	movf	_MinAdres,w,c	;volatile
  3366  001424  5C2C               	subwf	_NeightAdress8,w,c	;volatile
  3367  001426  5025               	movf	_MinAdres+1,w,c	;volatile
  3368  001428  582D               	subwfb	_NeightAdress8+1,w,c	;volatile
  3369  00142A  B0D8               	btfsc	status,0,c
  3370  00142C  D002               	goto	u3870
  3371  00142E  0E01               	movlw	1
  3372  001430  D001               	goto	u3880
  3373  001432                     u3870:
  3374  001432  0E00               	movlw	0
  3375  001434                     u3880:
  3376  001434  6E0F               	movwf	??_WriteDataToEEPROM& (0+255),c
  3377  001436  6A10               	clrf	(??_WriteDataToEEPROM+1)& (0+255),c
  3378  001438  500F               	movf	??_WriteDataToEEPROM,w,c
  3379  00143A  5C3E               	subwf	_MaxAdres,w,c	;volatile
  3380  00143C  5010               	movf	??_WriteDataToEEPROM+1,w,c
  3381  00143E  583F               	subwfb	_MaxAdres+1,w,c	;volatile
  3382  001440  B0D8               	btfsc	status,0,c
  3383  001442  D004               	goto	l4513
  3384                           
  3385                           ;FRAME.c: 598: {;FRAME.c: 599: NeightAdress8=0x0000;
  3386  001444  0E00               	movlw	0
  3387  001446  6E2D               	movwf	_NeightAdress8+1,c	;volatile
  3388  001448  0E00               	movlw	0
  3389  00144A  6E2C               	movwf	_NeightAdress8,c	;volatile
  3390  00144C                     l4513:
  3391                           
  3392                           ;FRAME.c: 600: };FRAME.c: 601: NVMWrite(&NeightAdress8,134,2);
  3393  00144C  0E2C               	movlw	low _NeightAdress8
  3394  00144E  6E09               	movwf	NVMWrite@source,c
  3395  001450  0E00               	movlw	high _NeightAdress8
  3396  001452  6E0A               	movwf	NVMWrite@source+1,c
  3397  001454  0E00               	movlw	0
  3398  001456  6E0C               	movwf	NVMWrite@addr+1,c
  3399  001458  0E86               	movlw	134
  3400  00145A  6E0B               	movwf	NVMWrite@addr,c
  3401  00145C  0E00               	movlw	0
  3402  00145E  6E0E               	movwf	NVMWrite@count+1,c
  3403  001460  0E02               	movlw	2
  3404  001462  6E0D               	movwf	NVMWrite@count,c
  3405  001464  EC33  F015         	call	_NVMWrite	;wreg free
  3406                           
  3407                           ;FRAME.c: 603: WritetoEEPROM(1400,MinRange & 0xFF);
  3408  001468  0E05               	movlw	5
  3409  00146A  6E07               	movwf	WritetoEEPROM@Address+1,c
  3410  00146C  0E78               	movlw	120
  3411  00146E  6E06               	movwf	WritetoEEPROM@Address,c
  3412  001470  C022  F008         	movff	_MinRange,WritetoEEPROM@Data	;volatile
  3413  001474  EC84  F015         	call	_WritetoEEPROM	;wreg free
  3414                           
  3415                           ;FRAME.c: 604: WritetoEEPROM(1401,MinRange >> 8);
  3416  001478  0E05               	movlw	5
  3417  00147A  6E07               	movwf	WritetoEEPROM@Address+1,c
  3418  00147C  0E79               	movlw	121
  3419  00147E  6E06               	movwf	WritetoEEPROM@Address,c
  3420  001480  5023               	movf	_MinRange+1,w,c	;volatile
  3421  001482  6E08               	movwf	WritetoEEPROM@Data,c
  3422  001484  EC84  F015         	call	_WritetoEEPROM	;wreg free
  3423                           
  3424                           ;FRAME.c: 605: WritetoEEPROM(1440,MaxRange & 0xFF);
  3425  001488  0E05               	movlw	5
  3426  00148A  6E07               	movwf	WritetoEEPROM@Address+1,c
  3427  00148C  0EA0               	movlw	160
  3428  00148E  6E06               	movwf	WritetoEEPROM@Address,c
  3429  001490  C03C  F008         	movff	_MaxRange,WritetoEEPROM@Data	;volatile
  3430  001494  EC84  F015         	call	_WritetoEEPROM	;wreg free
  3431                           
  3432                           ;FRAME.c: 606: WritetoEEPROM(1441,MaxRange >> 8);
  3433  001498  0E05               	movlw	5
  3434  00149A  6E07               	movwf	WritetoEEPROM@Address+1,c
  3435  00149C  0EA1               	movlw	161
  3436  00149E  6E06               	movwf	WritetoEEPROM@Address,c
  3437  0014A0  503D               	movf	_MaxRange+1,w,c	;volatile
  3438  0014A2  6E08               	movwf	WritetoEEPROM@Data,c
  3439  0014A4  EC84  F015         	call	_WritetoEEPROM	;wreg free
  3440                           
  3441                           ;FRAME.c: 607: WritetoEEPROM(1480,MinPower);
  3442  0014A8  0E05               	movlw	5
  3443  0014AA  6E07               	movwf	WritetoEEPROM@Address+1,c
  3444  0014AC  0EC8               	movlw	200
  3445  0014AE  6E06               	movwf	WritetoEEPROM@Address,c
  3446  0014B0  C020  F008         	movff	_MinPower,WritetoEEPROM@Data	;volatile
  3447  0014B4  EC84  F015         	call	_WritetoEEPROM	;wreg free
  3448                           
  3449                           ;FRAME.c: 608: WritetoEEPROM(1520,MaxPower);
  3450  0014B8  0E05               	movlw	5
  3451  0014BA  6E07               	movwf	WritetoEEPROM@Address+1,c
  3452  0014BC  0EF0               	movlw	240
  3453  0014BE  6E06               	movwf	WritetoEEPROM@Address,c
  3454  0014C0  C03A  F008         	movff	_MaxPower,WritetoEEPROM@Data	;volatile
  3455  0014C4  EC84  F015         	call	_WritetoEEPROM	;wreg free
  3456  0014C8  0012               	return		;funcret
  3457  0014CA                     __end_of_WriteDataToEEPROM:
  3458                           	opt callstack 0
  3459                           
  3460 ;; *************** function _NVMWrite *****************
  3461 ;; Defined at:
  3462 ;;		line 148 in file "EEPROM.c"
  3463 ;; Parameters:    Size  Location     Type
  3464 ;;  source          2    8[COMRAM] PTR unsigned char 
  3465 ;;		 -> Init_Data(2), NeightAdress8(2), NeightAdress7(2), NeightAdress6(2), 
  3466 ;;		 -> NeightAdress5(2), NeightAdress4(2), NeightAdress3(2), NeightAdress2(2), 
  3467 ;;		 -> NeightAdress1(2), 
  3468 ;;  addr            2   10[COMRAM] unsigned short 
  3469 ;;  count           2   12[COMRAM] unsigned short 
  3470 ;; Auto vars:     Size  Location     Type
  3471 ;;		None
  3472 ;; Return value:  Size  Location     Type
  3473 ;;                  1    wreg      void 
  3474 ;; Registers used:
  3475 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3476 ;; Tracked objects:
  3477 ;;		On entry : 0/0
  3478 ;;		On exit  : 0/0
  3479 ;;		Unchanged: 0/0
  3480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3481 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3484 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3485 ;;Total ram usage:        6 bytes
  3486 ;; Hardware stack levels used:    1
  3487 ;; Hardware stack levels required when called:    4
  3488 ;; This function calls:
  3489 ;;		_WritetoEEPROM
  3490 ;; This function is called by:
  3491 ;;		_WriteDataToEEPROM
  3492 ;; This function uses a non-reentrant model
  3493 ;;
  3494                           
  3495                           	psect	text20
  3496  002A66                     __ptext20:
  3497                           	opt callstack 0
  3498  002A66                     _NVMWrite:
  3499                           	opt callstack 22
  3500                           
  3501                           ;EEPROM.c: 150: while(count > 0)
  3502                           
  3503                           ;incstack = 0
  3504  002A66  D015               	goto	l4215
  3505  002A68                     l975:
  3506  002A68  B2A6               	btfsc	4006,1,c	;volsfr
  3507  002A6A  D7FE               	goto	l975
  3508                           
  3509                           ;EEPROM.c: 153: WritetoEEPROM(addr++,*source);
  3510  002A6C  C00B  F006         	movff	NVMWrite@addr,WritetoEEPROM@Address
  3511  002A70  C00C  F007         	movff	NVMWrite@addr+1,WritetoEEPROM@Address+1
  3512  002A74  C009  FFD9         	movff	NVMWrite@source,fsr2l
  3513  002A78  C00A  FFDA         	movff	NVMWrite@source+1,fsr2h
  3514  002A7C  50DF               	movf	indf2,w,c
  3515  002A7E  6E08               	movwf	WritetoEEPROM@Data,c
  3516  002A80  EC84  F015         	call	_WritetoEEPROM	;wreg free
  3517  002A84  4A0B               	infsnz	NVMWrite@addr,f,c
  3518  002A86  2A0C               	incf	NVMWrite@addr+1,f,c
  3519                           
  3520                           ;EEPROM.c: 154: count--;
  3521  002A88  060D               	decf	NVMWrite@count,f,c
  3522  002A8A  A0D8               	btfss	status,0,c
  3523  002A8C  060E               	decf	NVMWrite@count+1,f,c
  3524                           
  3525                           ;EEPROM.c: 155: source++;
  3526  002A8E  4A09               	infsnz	NVMWrite@source,f,c
  3527  002A90  2A0A               	incf	NVMWrite@source+1,f,c
  3528  002A92                     l4215:
  3529  002A92  500D               	movf	NVMWrite@count,w,c
  3530  002A94  100E               	iorwf	NVMWrite@count+1,w,c
  3531  002A96  B4D8               	btfsc	status,2,c
  3532  002A98  0012               	return	
  3533  002A9A  D7E6               	goto	l975
  3534  002A9C                     __end_of_NVMWrite:
  3535                           	opt callstack 0
  3536                           
  3537 ;; *************** function _WritetoEEPROM *****************
  3538 ;; Defined at:
  3539 ;;		line 95 in file "EEPROM.c"
  3540 ;; Parameters:    Size  Location     Type
  3541 ;;  Address         2    5[COMRAM] unsigned short 
  3542 ;;  Data            1    7[COMRAM] unsigned char 
  3543 ;; Auto vars:     Size  Location     Type
  3544 ;;		None
  3545 ;; Return value:  Size  Location     Type
  3546 ;;                  1    wreg      void 
  3547 ;; Registers used:
  3548 ;;		wreg, status,2
  3549 ;; Tracked objects:
  3550 ;;		On entry : 0/0
  3551 ;;		On exit  : 0/0
  3552 ;;		Unchanged: 0/0
  3553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3554 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3557 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3558 ;;Total ram usage:        3 bytes
  3559 ;; Hardware stack levels used:    1
  3560 ;; Hardware stack levels required when called:    3
  3561 ;; This function calls:
  3562 ;;		Nothing
  3563 ;; This function is called by:
  3564 ;;		_WriteDataToEEPROM
  3565 ;;		_NVMWrite
  3566 ;; This function uses a non-reentrant model
  3567 ;;
  3568                           
  3569                           	psect	text21
  3570  002B08                     __ptext21:
  3571                           	opt callstack 0
  3572  002B08                     _WritetoEEPROM:
  3573                           	opt callstack 23
  3574                           
  3575                           ;EEPROM.c: 97: static BYTE GIE_Status;;EEPROM.c: 99: EEADRH = (BYTE)(Address>>8);
  3576                           
  3577                           ;incstack = 0
  3578  002B08  5007               	movf	WritetoEEPROM@Address+1,w,c
  3579  002B0A  6EAA               	movwf	4010,c	;volatile
  3580                           
  3581                           ;EEPROM.c: 100: EEADR = (BYTE)Address;
  3582  002B0C  C006  FFA9         	movff	WritetoEEPROM@Address,4009	;volatile
  3583                           
  3584                           ;EEPROM.c: 101: EEDATA = Data;
  3585  002B10  C008  FFA8         	movff	WritetoEEPROM@Data,4008	;volatile
  3586                           
  3587                           ;EEPROM.c: 102: EECON1bits.WREN = 1;
  3588  002B14  84A6               	bsf	4006,2,c	;volsfr
  3589                           
  3590                           ;EEPROM.c: 103: GIE_Status = INTCONbits.GIE;
  3591  002B16  0E00               	movlw	0
  3592  002B18  BEF2               	btfsc	4082,7,c	;volatile
  3593  002B1A  0E01               	movlw	1
  3594  002B1C  6E26               	movwf	WritetoEEPROM@GIE_Status,c
  3595                           
  3596                           ;EEPROM.c: 104: INTCONbits.GIE = 0;
  3597  002B1E  9EF2               	bcf	4082,7,c	;volatile
  3598                           
  3599                           ;EEPROM.c: 105: EECON2 = 0x55;
  3600  002B20  0E55               	movlw	85
  3601  002B22  6EA7               	movwf	4007,c	;volsfr
  3602                           
  3603                           ;EEPROM.c: 106: EECON2 = 0xAA;
  3604  002B24  0EAA               	movlw	170
  3605  002B26  6EA7               	movwf	4007,c	;volsfr
  3606                           
  3607                           ;EEPROM.c: 107: EECON1bits.WR = 1;
  3608  002B28  82A6               	bsf	4006,1,c	;volsfr
  3609                           
  3610                           ;EEPROM.c: 108: INTCONbits.GIE = GIE_Status;
  3611  002B2A  B026               	btfsc	WritetoEEPROM@GIE_Status,0,c
  3612  002B2C  D002               	bra	u3315
  3613  002B2E  9EF2               	bcf	4082,7,c	;volatile
  3614  002B30  D001               	bra	u3316
  3615  002B32                     u3315:
  3616  002B32  8EF2               	bsf	4082,7,c	;volatile
  3617  002B34                     u3316:
  3618                           
  3619                           ;EEPROM.c: 109: EECON1bits.WREN = 0;
  3620  002B34  94A6               	bcf	4006,2,c	;volsfr
  3621  002B36                     l958:
  3622  002B36  B2A6               	btfsc	4006,1,c	;volsfr
  3623  002B38  D7FE               	goto	l958
  3624  002B3A  0012               	return	
  3625  002B3C                     __end_of_WritetoEEPROM:
  3626                           	opt callstack 0
  3627                           
  3628 ;; *************** function _FRAME_DataUpdateAndChangeOption *****************
  3629 ;; Defined at:
  3630 ;;		line 407 in file "FRAME.c"
  3631 ;; Parameters:    Size  Location     Type
  3632 ;;  message         2    5[COMRAM] PTR struct .
  3633 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3634 ;; Auto vars:     Size  Location     Type
  3635 ;;		None
  3636 ;; Return value:  Size  Location     Type
  3637 ;;                  1    wreg      void 
  3638 ;; Registers used:
  3639 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3640 ;; Tracked objects:
  3641 ;;		On entry : 0/0
  3642 ;;		On exit  : 0/0
  3643 ;;		Unchanged: 0/0
  3644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3645 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3647 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3648 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3649 ;;Total ram usage:        3 bytes
  3650 ;; Hardware stack levels used:    1
  3651 ;; Hardware stack levels required when called:    3
  3652 ;; This function calls:
  3653 ;;		Nothing
  3654 ;; This function is called by:
  3655 ;;		_FRAME_DeviceReset
  3656 ;; This function uses a non-reentrant model
  3657 ;;
  3658                           
  3659                           	psect	text22
  3660  0027C4                     __ptext22:
  3661                           	opt callstack 0
  3662  0027C4                     _FRAME_DataUpdateAndChangeOption:
  3663                           	opt callstack 24
  3664                           
  3665                           ;FRAME.c: 410: Dane->rokU16 = message->data[4];
  3666                           
  3667                           ;incstack = 0
  3668  0027C4  EE20 F00C          	lfsr	2,12
  3669  0027C8  5006               	movf	FRAME_DataUpdateAndChangeOption@message,w,c
  3670  0027CA  26D9               	addwf	fsr2l,f,c
  3671  0027CC  5007               	movf	FRAME_DataUpdateAndChangeOption@message+1,w,c
  3672  0027CE  22DA               	addwfc	fsr2h,f,c
  3673  0027D0  50DF               	movf	indf2,w,c
  3674  0027D2  6E08               	movwf	??_FRAME_DataUpdateAndChangeOption& (0+255),c
  3675  0027D4  5008               	movf	??_FRAME_DataUpdateAndChangeOption,w,c
  3676  0027D6  6E36               	movwf	54,c
  3677  0027D8  6A37               	clrf	55,c
  3678                           
  3679                           ;FRAME.c: 411: Dane->miesiacU16 = message->data[5];
  3680  0027DA  EE20 F00D          	lfsr	2,13
  3681  0027DE  5006               	movf	FRAME_DataUpdateAndChangeOption@message,w,c
  3682  0027E0  26D9               	addwf	fsr2l,f,c
  3683  0027E2  5007               	movf	FRAME_DataUpdateAndChangeOption@message+1,w,c
  3684  0027E4  22DA               	addwfc	fsr2h,f,c
  3685  0027E6  50DF               	movf	indf2,w,c
  3686  0027E8  6E08               	movwf	??_FRAME_DataUpdateAndChangeOption& (0+255),c
  3687  0027EA  5008               	movf	??_FRAME_DataUpdateAndChangeOption,w,c
  3688  0027EC  6E38               	movwf	56,c
  3689  0027EE  6A39               	clrf	57,c
  3690                           
  3691                           ;FRAME.c: 412: Dane->dzienU16 = message->data[6];
  3692  0027F0  EE20 F00E          	lfsr	2,14
  3693  0027F4  5006               	movf	FRAME_DataUpdateAndChangeOption@message,w,c
  3694  0027F6  26D9               	addwf	fsr2l,f,c
  3695  0027F8  5007               	movf	FRAME_DataUpdateAndChangeOption@message+1,w,c
  3696  0027FA  22DA               	addwfc	fsr2h,f,c
  3697  0027FC  50DF               	movf	indf2,w,c
  3698  0027FE  6E08               	movwf	??_FRAME_DataUpdateAndChangeOption& (0+255),c
  3699  002800  5008               	movf	??_FRAME_DataUpdateAndChangeOption,w,c
  3700  002802  6E3A               	movwf	58,c
  3701  002804  6A3B               	clrf	59,c
  3702                           
  3703                           ;FRAME.c: 413: Dane->godzinaU16 = message->data[7];
  3704  002806  EE20 F00F          	lfsr	2,15
  3705  00280A  5006               	movf	FRAME_DataUpdateAndChangeOption@message,w,c
  3706  00280C  26D9               	addwf	fsr2l,f,c
  3707  00280E  5007               	movf	FRAME_DataUpdateAndChangeOption@message+1,w,c
  3708  002810  22DA               	addwfc	fsr2h,f,c
  3709  002812  50DF               	movf	indf2,w,c
  3710  002814  6E08               	movwf	??_FRAME_DataUpdateAndChangeOption& (0+255),c
  3711  002816  5008               	movf	??_FRAME_DataUpdateAndChangeOption,w,c
  3712  002818  6E3C               	movwf	60,c
  3713  00281A  6A3D               	clrf	61,c
  3714  00281C  0012               	return		;funcret
  3715  00281E                     __end_of_FRAME_DataUpdateAndChangeOption:
  3716                           	opt callstack 0
  3717                           
  3718 ;; *************** function _FRAME_AxisStatus *****************
  3719 ;; Defined at:
  3720 ;;		line 371 in file "FRAME.c"
  3721 ;; Parameters:    Size  Location     Type
  3722 ;;  message         2    5[COMRAM] PTR struct .
  3723 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3724 ;; Auto vars:     Size  Location     Type
  3725 ;;  i               2    0        unsigned short 
  3726 ;; Return value:  Size  Location     Type
  3727 ;;                  1    wreg      void 
  3728 ;; Registers used:
  3729 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3730 ;; Tracked objects:
  3731 ;;		On entry : 0/0
  3732 ;;		On exit  : 0/0
  3733 ;;		Unchanged: 0/0
  3734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3735 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3737 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3738 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3739 ;;Total ram usage:        3 bytes
  3740 ;; Hardware stack levels used:    1
  3741 ;; Hardware stack levels required when called:    3
  3742 ;; This function calls:
  3743 ;;		Nothing
  3744 ;; This function is called by:
  3745 ;;		_FRAME_HandleCanFrame
  3746 ;; This function uses a non-reentrant model
  3747 ;;
  3748                           
  3749                           	psect	text23
  3750  002A9C                     __ptext23:
  3751                           	opt callstack 0
  3752  002A9C                     _FRAME_AxisStatus:
  3753                           	opt callstack 25
  3754                           
  3755                           ;FRAME.c: 373: WORD i;;FRAME.c: 375: if(message->message_type == 0x02)
  3756                           
  3757                           ;incstack = 0
  3758  002A9C  EE20 F001          	lfsr	2,1
  3759  002AA0  5006               	movf	FRAME_AxisStatus@message,w,c
  3760  002AA2  26D9               	addwf	fsr2l,f,c
  3761  002AA4  5007               	movf	FRAME_AxisStatus@message+1,w,c
  3762  002AA6  22DA               	addwfc	fsr2h,f,c
  3763  002AA8  0E02               	movlw	2
  3764  002AAA  18DE               	xorwf	postinc2,w,c
  3765  002AAC  A4D8               	btfss	status,2,c
  3766  002AAE  0012               	return	
  3767                           
  3768                           ;FRAME.c: 376: {;FRAME.c: 377: message->data_length = 1;
  3769  002AB0  EE20 F010          	lfsr	2,16
  3770  002AB4  5006               	movf	FRAME_AxisStatus@message,w,c
  3771  002AB6  26D9               	addwf	fsr2l,f,c
  3772  002AB8  5007               	movf	FRAME_AxisStatus@message+1,w,c
  3773  002ABA  22DA               	addwfc	fsr2h,f,c
  3774  002ABC  0E01               	movlw	1
  3775  002ABE  6EDF               	movwf	indf2,c
  3776                           
  3777                           ;FRAME.c: 388: message->data[0] = 0xFF;
  3778  002AC0  EE20 F008          	lfsr	2,8
  3779  002AC4  5006               	movf	FRAME_AxisStatus@message,w,c
  3780  002AC6  26D9               	addwf	fsr2l,f,c
  3781  002AC8  5007               	movf	FRAME_AxisStatus@message+1,w,c
  3782  002ACA  22DA               	addwfc	fsr2h,f,c
  3783  002ACC  0EFF               	movlw	255
  3784  002ACE  6EDF               	movwf	indf2,c
  3785                           
  3786                           ;FRAME.c: 389: }
  3787  002AD0  0012               	return		;funcret
  3788  002AD2                     __end_of_FRAME_AxisStatus:
  3789                           	opt callstack 0
  3790                           
  3791 ;; *************** function _FRAME_AveragingTimes *****************
  3792 ;; Defined at:
  3793 ;;		line 307 in file "FRAME.c"
  3794 ;; Parameters:    Size  Location     Type
  3795 ;;  message         2    5[COMRAM] PTR struct .
  3796 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3797 ;; Auto vars:     Size  Location     Type
  3798 ;;		None
  3799 ;; Return value:  Size  Location     Type
  3800 ;;                  1    wreg      void 
  3801 ;; Registers used:
  3802 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3803 ;; Tracked objects:
  3804 ;;		On entry : 0/0
  3805 ;;		On exit  : 0/0
  3806 ;;		Unchanged: 0/0
  3807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3808 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3810 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3811 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3812 ;;Total ram usage:        3 bytes
  3813 ;; Hardware stack levels used:    1
  3814 ;; Hardware stack levels required when called:    3
  3815 ;; This function calls:
  3816 ;;		Nothing
  3817 ;; This function is called by:
  3818 ;;		_FRAME_HandleCanFrame
  3819 ;; This function uses a non-reentrant model
  3820 ;;
  3821                           
  3822                           	psect	text24
  3823  002AD2                     __ptext24:
  3824                           	opt callstack 0
  3825  002AD2                     _FRAME_AveragingTimes:
  3826                           	opt callstack 25
  3827                           
  3828                           ;FRAME.c: 309: if(message->message_type == 0x02)
  3829                           
  3830                           ;incstack = 0
  3831  002AD2  EE20 F001          	lfsr	2,1
  3832  002AD6  5006               	movf	FRAME_AveragingTimes@message,w,c
  3833  002AD8  26D9               	addwf	fsr2l,f,c
  3834  002ADA  5007               	movf	FRAME_AveragingTimes@message+1,w,c
  3835  002ADC  22DA               	addwfc	fsr2h,f,c
  3836  002ADE  0E02               	movlw	2
  3837  002AE0  18DE               	xorwf	postinc2,w,c
  3838  002AE2  A4D8               	btfss	status,2,c
  3839  002AE4  0012               	return	
  3840                           
  3841                           ;FRAME.c: 310: {;FRAME.c: 311: message->data_length = 1;
  3842  002AE6  EE20 F010          	lfsr	2,16
  3843  002AEA  5006               	movf	FRAME_AveragingTimes@message,w,c
  3844  002AEC  26D9               	addwf	fsr2l,f,c
  3845  002AEE  5007               	movf	FRAME_AveragingTimes@message+1,w,c
  3846  002AF0  22DA               	addwfc	fsr2h,f,c
  3847  002AF2  0E01               	movlw	1
  3848  002AF4  6EDF               	movwf	indf2,c
  3849                           
  3850                           ;FRAME.c: 319: message->data[0] = 0xFF;
  3851  002AF6  EE20 F008          	lfsr	2,8
  3852  002AFA  5006               	movf	FRAME_AveragingTimes@message,w,c
  3853  002AFC  26D9               	addwf	fsr2l,f,c
  3854  002AFE  5007               	movf	FRAME_AveragingTimes@message+1,w,c
  3855  002B00  22DA               	addwfc	fsr2h,f,c
  3856  002B02  0EFF               	movlw	255
  3857  002B04  6EDF               	movwf	indf2,c
  3858                           
  3859                           ;FRAME.c: 320: }
  3860  002B06  0012               	return		;funcret
  3861  002B08                     __end_of_FRAME_AveragingTimes:
  3862                           	opt callstack 0
  3863                           
  3864 ;; *************** function _FRAME_AnalogValue *****************
  3865 ;; Defined at:
  3866 ;;		line 707 in file "FRAME.c"
  3867 ;; Parameters:    Size  Location     Type
  3868 ;;  message         2    5[COMRAM] PTR struct .
  3869 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3870 ;;  set             2    7[COMRAM] unsigned short 
  3871 ;; Auto vars:     Size  Location     Type
  3872 ;;  i               2    0        unsigned short 
  3873 ;; Return value:  Size  Location     Type
  3874 ;;                  1    wreg      void 
  3875 ;; Registers used:
  3876 ;;		None
  3877 ;; Tracked objects:
  3878 ;;		On entry : 0/0
  3879 ;;		On exit  : 0/0
  3880 ;;		Unchanged: 0/0
  3881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3882 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3885 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3886 ;;Total ram usage:        4 bytes
  3887 ;; Hardware stack levels used:    1
  3888 ;; Hardware stack levels required when called:    3
  3889 ;; This function calls:
  3890 ;;		Nothing
  3891 ;; This function is called by:
  3892 ;;		_FRAME_HandleCanFrame
  3893 ;; This function uses a non-reentrant model
  3894 ;;
  3895                           
  3896                           	psect	text25
  3897  002D64                     __ptext25:
  3898                           	opt callstack 0
  3899  002D64                     _FRAME_AnalogValue:
  3900                           	opt callstack 25
  3901                           
  3902                           ;incstack = 0
  3903  002D64  0012               	return		;funcret
  3904  002D66                     __end_of_FRAME_AnalogValue:
  3905                           	opt callstack 0
  3906                           
  3907 ;; *************** function _FRAME_AdressOfNeighbors *****************
  3908 ;; Defined at:
  3909 ;;		line 765 in file "FRAME.c"
  3910 ;; Parameters:    Size  Location     Type
  3911 ;;  message         2    5[COMRAM] PTR struct .
  3912 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3913 ;;  nrRamki         2    7[COMRAM] unsigned short 
  3914 ;; Auto vars:     Size  Location     Type
  3915 ;;  kier            2   13[COMRAM] unsigned short 
  3916 ;;  it              2    0        unsigned short 
  3917 ;; Return value:  Size  Location     Type
  3918 ;;                  1    wreg      void 
  3919 ;; Registers used:
  3920 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3921 ;; Tracked objects:
  3922 ;;		On entry : 0/0
  3923 ;;		On exit  : 0/0
  3924 ;;		Unchanged: 0/0
  3925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3926 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3927 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3928 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3929 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3930 ;;Total ram usage:       10 bytes
  3931 ;; Hardware stack levels used:    1
  3932 ;; Hardware stack levels required when called:    4
  3933 ;; This function calls:
  3934 ;;		_CAN_SetupFilter_Ne
  3935 ;; This function is called by:
  3936 ;;		_FRAME_HandleCanFrame
  3937 ;; This function uses a non-reentrant model
  3938 ;;
  3939                           
  3940                           	psect	text26
  3941  000F50                     __ptext26:
  3942                           	opt callstack 0
  3943  000F50                     _FRAME_AdressOfNeighbors:
  3944                           	opt callstack 24
  3945                           
  3946                           ;FRAME.c: 767: WORD it;;FRAME.c: 770: WORD kier = (nrRamki-0x10);
  3947                           
  3948                           ;incstack = 0
  3949  000F50  0EF0               	movlw	240
  3950  000F52  2408               	addwf	FRAME_AdressOfNeighbors@nrRamki,w,c
  3951  000F54  6E0E               	movwf	FRAME_AdressOfNeighbors@kier,c
  3952  000F56  0EFF               	movlw	255
  3953  000F58  2009               	addwfc	FRAME_AdressOfNeighbors@nrRamki+1,w,c
  3954  000F5A  6E0F               	movwf	FRAME_AdressOfNeighbors@kier+1,c
  3955                           
  3956                           ;FRAME.c: 771: if(message->message_type == 0x02)
  3957  000F5C  EE20 F001          	lfsr	2,1
  3958  000F60  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3959  000F62  26D9               	addwf	fsr2l,f,c
  3960  000F64  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3961  000F66  22DA               	addwfc	fsr2h,f,c
  3962  000F68  0E02               	movlw	2
  3963  000F6A  18DE               	xorwf	postinc2,w,c
  3964  000F6C  A4D8               	btfss	status,2,c
  3965  000F6E  D08E               	goto	l4801
  3966                           
  3967                           ;FRAME.c: 772: {;FRAME.c: 774: message->data_length = 8;
  3968  000F70  EE20 F010          	lfsr	2,16
  3969  000F74  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3970  000F76  26D9               	addwf	fsr2l,f,c
  3971  000F78  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3972  000F7A  22DA               	addwfc	fsr2h,f,c
  3973  000F7C  0E08               	movlw	8
  3974  000F7E  6EDF               	movwf	indf2,c
  3975                           
  3976                           ;FRAME.c: 776: if(kier == 0)
  3977  000F80  500E               	movf	FRAME_AdressOfNeighbors@kier,w,c
  3978  000F82  100F               	iorwf	FRAME_AdressOfNeighbors@kier+1,w,c
  3979  000F84  A4D8               	btfss	status,2,c
  3980  000F86  D041               	goto	l4799
  3981                           
  3982                           ;FRAME.c: 777: {;FRAME.c: 778: message->data[0] = (NeightAdress1>> 8);
  3983  000F88  EE20 F008          	lfsr	2,8
  3984  000F8C  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3985  000F8E  26D9               	addwf	fsr2l,f,c
  3986  000F90  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3987  000F92  22DA               	addwfc	fsr2h,f,c
  3988  000F94  5039               	movf	_NeightAdress1+1,w,c	;volatile
  3989  000F96  6EDF               	movwf	indf2,c
  3990                           
  3991                           ;FRAME.c: 779: message->data[1] = NeightAdress1 & 0b11111111;
  3992  000F98  EE20 F009          	lfsr	2,9
  3993  000F9C  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3994  000F9E  26D9               	addwf	fsr2l,f,c
  3995  000FA0  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3996  000FA2  22DA               	addwfc	fsr2h,f,c
  3997  000FA4  C038  FFDF         	movff	_NeightAdress1,indf2	;volatile
  3998                           
  3999                           ;FRAME.c: 780: message->data[2] = (NeightAdress2>> 8);
  4000  000FA8  EE20 F00A          	lfsr	2,10
  4001  000FAC  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  4002  000FAE  26D9               	addwf	fsr2l,f,c
  4003  000FB0  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  4004  000FB2  22DA               	addwfc	fsr2h,f,c
  4005  000FB4  504B               	movf	_NeightAdress2+1,w,c	;volatile
  4006  000FB6  6EDF               	movwf	indf2,c
  4007                           
  4008                           ;FRAME.c: 781: message->data[3] = NeightAdress2 & 0b11111111;
  4009  000FB8  EE20 F00B          	lfsr	2,11
  4010  000FBC  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  4011  000FBE  26D9               	addwf	fsr2l,f,c
  4012  000FC0  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  4013  000FC2  22DA               	addwfc	fsr2h,f,c
  4014  000FC4  C04A  FFDF         	movff	_NeightAdress2,indf2	;volatile
  4015                           
  4016                           ;FRAME.c: 782: message->data[4] = (NeightAdress3>> 8);
  4017  000FC8  EE20 F00C          	lfsr	2,12
  4018  000FCC  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  4019  000FCE  26D9               	addwf	fsr2l,f,c
  4020  000FD0  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  4021  000FD2  22DA               	addwfc	fsr2h,f,c
  4022  000FD4  5037               	movf	_NeightAdress3+1,w,c	;volatile
  4023  000FD6  6EDF               	movwf	indf2,c
  4024                           
  4025                           ;FRAME.c: 783: message->data[5] = NeightAdress3 & 0b11111111;
  4026  000FD8  EE20 F00D          	lfsr	2,13
  4027  000FDC  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  4028  000FDE  26D9               	addwf	fsr2l,f,c
  4029  000FE0  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  4030  000FE2  22DA               	addwfc	fsr2h,f,c
  4031  000FE4  C036  FFDF         	movff	_NeightAdress3,indf2	;volatile
  4032                           
  4033                           ;FRAME.c: 784: message->data[6] = (NeightAdress4>> 8);
  4034  000FE8  EE20 F00E          	lfsr	2,14
  4035  000FEC  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  4036  000FEE  26D9               	addwf	fsr2l,f,c
  4037  000FF0  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  4038  000FF2  22DA               	addwfc	fsr2h,f,c
  4039  000FF4  5035               	movf	_NeightAdress4+1,w,c	;volatile
  4040  000FF6  6EDF               	movwf	indf2,c
  4041                           
  4042                           ;FRAME.c: 785: message->data[7] = NeightAdress4 & 0b11111111;
  4043  000FF8  EE20 F00F          	lfsr	2,15
  4044  000FFC  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  4045  000FFE  26D9               	addwf	fsr2l,f,c
  4046  001000  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  4047  001002  22DA               	addwfc	fsr2h,f,c
  4048  001004  C034  FFDF         	movff	_NeightAdress4,indf2	;volatile
  4049                           
  4050                           ;FRAME.c: 786: }
  4051  001008  0012               	return	
  4052  00100A                     l4799:
  4053                           
  4054                           ;FRAME.c: 787: else;FRAME.c: 788: {;FRAME.c: 789: message->data[0] = (NeightAdress5>> 8)
      +                          ;
  4055  00100A  EE20 F008          	lfsr	2,8
  4056  00100E  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  4057  001010  26D9               	addwf	fsr2l,f,c
  4058  001012  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  4059  001014  22DA               	addwfc	fsr2h,f,c
  4060  001016  5033               	movf	_NeightAdress5+1,w,c	;volatile
  4061  001018  6EDF               	movwf	indf2,c
  4062                           
  4063                           ;FRAME.c: 790: message->data[1] = NeightAdress5 & 0b11111111;
  4064  00101A  EE20 F009          	lfsr	2,9
  4065  00101E  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  4066  001020  26D9               	addwf	fsr2l,f,c
  4067  001022  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  4068  001024  22DA               	addwfc	fsr2h,f,c
  4069  001026  C032  FFDF         	movff	_NeightAdress5,indf2	;volatile
  4070                           
  4071                           ;FRAME.c: 791: message->data[2] = (NeightAdress6>> 8);
  4072  00102A  EE20 F00A          	lfsr	2,10
  4073  00102E  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  4074  001030  26D9               	addwf	fsr2l,f,c
  4075  001032  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  4076  001034  22DA               	addwfc	fsr2h,f,c
  4077  001036  5031               	movf	_NeightAdress6+1,w,c	;volatile
  4078  001038  6EDF               	movwf	indf2,c
  4079                           
  4080                           ;FRAME.c: 792: message->data[3] = NeightAdress6 & 0b11111111;
  4081  00103A  EE20 F00B          	lfsr	2,11
  4082  00103E  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  4083  001040  26D9               	addwf	fsr2l,f,c
  4084  001042  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  4085  001044  22DA               	addwfc	fsr2h,f,c
  4086  001046  C030  FFDF         	movff	_NeightAdress6,indf2	;volatile
  4087                           
  4088                           ;FRAME.c: 793: message->data[4] = (NeightAdress7>> 8);
  4089  00104A  EE20 F00C          	lfsr	2,12
  4090  00104E  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  4091  001050  26D9               	addwf	fsr2l,f,c
  4092  001052  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  4093  001054  22DA               	addwfc	fsr2h,f,c
  4094  001056  502F               	movf	_NeightAdress7+1,w,c	;volatile
  4095  001058  6EDF               	movwf	indf2,c
  4096                           
  4097                           ;FRAME.c: 794: message->data[5] = NeightAdress7 & 0b11111111;
  4098  00105A  EE20 F00D          	lfsr	2,13
  4099  00105E  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  4100  001060  26D9               	addwf	fsr2l,f,c
  4101  001062  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  4102  001064  22DA               	addwfc	fsr2h,f,c
  4103  001066  C02E  FFDF         	movff	_NeightAdress7,indf2	;volatile
  4104                           
  4105                           ;FRAME.c: 795: message->data[6] = (NeightAdress8>> 8);
  4106  00106A  EE20 F00E          	lfsr	2,14
  4107  00106E  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  4108  001070  26D9               	addwf	fsr2l,f,c
  4109  001072  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  4110  001074  22DA               	addwfc	fsr2h,f,c
  4111  001076  502D               	movf	_NeightAdress8+1,w,c	;volatile
  4112  001078  6EDF               	movwf	indf2,c
  4113                           
  4114                           ;FRAME.c: 796: message->data[7] = NeightAdress8 & 0b11111111;
  4115  00107A  EE20 F00F          	lfsr	2,15
  4116  00107E  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  4117  001080  26D9               	addwf	fsr2l,f,c
  4118  001082  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  4119  001084  22DA               	addwfc	fsr2h,f,c
  4120  001086  C02C  FFDF         	movff	_NeightAdress8,indf2	;volatile
  4121  00108A  0012               	return	
  4122  00108C                     l4801:
  4123                           
  4124                           ;FRAME.c: 802: else;FRAME.c: 803: {;FRAME.c: 806: if(kier == 0)
  4125  00108C  500E               	movf	FRAME_AdressOfNeighbors@kier,w,c
  4126  00108E  100F               	iorwf	FRAME_AdressOfNeighbors@kier+1,w,c
  4127  001090  A4D8               	btfss	status,2,c
  4128  001092  D063               	goto	l4807
  4129                           
  4130                           ;FRAME.c: 807: {;FRAME.c: 808: NeightAdress1 = (message->data[0] << 8)| message->data[1]
      +                          ;
  4131  001094  EE20 F008          	lfsr	2,8
  4132  001098  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  4133  00109A  26D9               	addwf	fsr2l,f,c
  4134  00109C  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  4135  00109E  22DA               	addwfc	fsr2h,f,c
  4136  0010A0  50DF               	movf	indf2,w,c
  4137  0010A2  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  4138  0010A4  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  4139  0010A6  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  4140  0010A8  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  4141  0010AA  EE20 F009          	lfsr	2,9
  4142  0010AE  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  4143  0010B0  26D9               	addwf	fsr2l,f,c
  4144  0010B2  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  4145  0010B4  22DA               	addwfc	fsr2h,f,c
  4146  0010B6  50DF               	movf	indf2,w,c
  4147  0010B8  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  4148  0010BA  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  4149  0010BC  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  4150  0010BE  6E38               	movwf	_NeightAdress1,c	;volatile
  4151  0010C0  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  4152  0010C2  6E39               	movwf	_NeightAdress1+1,c	;volatile
  4153                           
  4154                           ;FRAME.c: 809: NeightAdress2 = (message->data[2] << 8)| message->data[3];
  4155  0010C4  EE20 F00A          	lfsr	2,10
  4156  0010C8  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  4157  0010CA  26D9               	addwf	fsr2l,f,c
  4158  0010CC  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  4159  0010CE  22DA               	addwfc	fsr2h,f,c
  4160  0010D0  50DF               	movf	indf2,w,c
  4161  0010D2  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  4162  0010D4  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  4163  0010D6  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  4164  0010D8  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  4165  0010DA  EE20 F00B          	lfsr	2,11
  4166  0010DE  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  4167  0010E0  26D9               	addwf	fsr2l,f,c
  4168  0010E2  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  4169  0010E4  22DA               	addwfc	fsr2h,f,c
  4170  0010E6  50DF               	movf	indf2,w,c
  4171  0010E8  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  4172  0010EA  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  4173  0010EC  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  4174  0010EE  6E4A               	movwf	_NeightAdress2,c	;volatile
  4175  0010F0  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  4176  0010F2  6E4B               	movwf	_NeightAdress2+1,c	;volatile
  4177                           
  4178                           ;FRAME.c: 810: NeightAdress3 = (message->data[4] << 8)| message->data[5];
  4179  0010F4  EE20 F00C          	lfsr	2,12
  4180  0010F8  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  4181  0010FA  26D9               	addwf	fsr2l,f,c
  4182  0010FC  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  4183  0010FE  22DA               	addwfc	fsr2h,f,c
  4184  001100  50DF               	movf	indf2,w,c
  4185  001102  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  4186  001104  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  4187  001106  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  4188  001108  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  4189  00110A  EE20 F00D          	lfsr	2,13
  4190  00110E  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  4191  001110  26D9               	addwf	fsr2l,f,c
  4192  001112  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  4193  001114  22DA               	addwfc	fsr2h,f,c
  4194  001116  50DF               	movf	indf2,w,c
  4195  001118  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  4196  00111A  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  4197  00111C  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  4198  00111E  6E36               	movwf	_NeightAdress3,c	;volatile
  4199  001120  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  4200  001122  6E37               	movwf	_NeightAdress3+1,c	;volatile
  4201                           
  4202                           ;FRAME.c: 811: NeightAdress4 = (message->data[6] << 8)| message->data[7];
  4203  001124  EE20 F00E          	lfsr	2,14
  4204  001128  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  4205  00112A  26D9               	addwf	fsr2l,f,c
  4206  00112C  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  4207  00112E  22DA               	addwfc	fsr2h,f,c
  4208  001130  50DF               	movf	indf2,w,c
  4209  001132  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  4210  001134  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  4211  001136  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  4212  001138  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  4213  00113A  EE20 F00F          	lfsr	2,15
  4214  00113E  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  4215  001140  26D9               	addwf	fsr2l,f,c
  4216  001142  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  4217  001144  22DA               	addwfc	fsr2h,f,c
  4218  001146  50DF               	movf	indf2,w,c
  4219  001148  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  4220  00114A  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  4221  00114C  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  4222  00114E  6E34               	movwf	_NeightAdress4,c	;volatile
  4223  001150  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  4224  001152  6E35               	movwf	_NeightAdress4+1,c	;volatile
  4225  001154                     l4805:
  4226                           
  4227                           ;FRAME.c: 812: CAN_SetupFilter_Ne();
  4228  001154  EC85  F011         	call	_CAN_SetupFilter_Ne	;wreg free
  4229                           
  4230                           ;FRAME.c: 815: }
  4231  001158  0012               	return	
  4232  00115A                     l4807:
  4233                           
  4234                           ;FRAME.c: 816: else;FRAME.c: 817: {;FRAME.c: 818: NeightAdress5 = (message->data[0] << 8
      +                          )| message->data[1];
  4235  00115A  EE20 F008          	lfsr	2,8
  4236  00115E  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  4237  001160  26D9               	addwf	fsr2l,f,c
  4238  001162  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  4239  001164  22DA               	addwfc	fsr2h,f,c
  4240  001166  50DF               	movf	indf2,w,c
  4241  001168  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  4242  00116A  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  4243  00116C  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  4244  00116E  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  4245  001170  EE20 F009          	lfsr	2,9
  4246  001174  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  4247  001176  26D9               	addwf	fsr2l,f,c
  4248  001178  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  4249  00117A  22DA               	addwfc	fsr2h,f,c
  4250  00117C  50DF               	movf	indf2,w,c
  4251  00117E  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  4252  001180  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  4253  001182  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  4254  001184  6E32               	movwf	_NeightAdress5,c	;volatile
  4255  001186  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  4256  001188  6E33               	movwf	_NeightAdress5+1,c	;volatile
  4257                           
  4258                           ;FRAME.c: 819: NeightAdress6 = (message->data[2] << 8)| message->data[3];
  4259  00118A  EE20 F00A          	lfsr	2,10
  4260  00118E  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  4261  001190  26D9               	addwf	fsr2l,f,c
  4262  001192  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  4263  001194  22DA               	addwfc	fsr2h,f,c
  4264  001196  50DF               	movf	indf2,w,c
  4265  001198  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  4266  00119A  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  4267  00119C  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  4268  00119E  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  4269  0011A0  EE20 F00B          	lfsr	2,11
  4270  0011A4  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  4271  0011A6  26D9               	addwf	fsr2l,f,c
  4272  0011A8  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  4273  0011AA  22DA               	addwfc	fsr2h,f,c
  4274  0011AC  50DF               	movf	indf2,w,c
  4275  0011AE  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  4276  0011B0  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  4277  0011B2  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  4278  0011B4  6E30               	movwf	_NeightAdress6,c	;volatile
  4279  0011B6  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  4280  0011B8  6E31               	movwf	_NeightAdress6+1,c	;volatile
  4281                           
  4282                           ;FRAME.c: 820: NeightAdress7 = (message->data[4] << 8)| message->data[5];
  4283  0011BA  EE20 F00C          	lfsr	2,12
  4284  0011BE  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  4285  0011C0  26D9               	addwf	fsr2l,f,c
  4286  0011C2  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  4287  0011C4  22DA               	addwfc	fsr2h,f,c
  4288  0011C6  50DF               	movf	indf2,w,c
  4289  0011C8  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  4290  0011CA  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  4291  0011CC  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  4292  0011CE  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  4293  0011D0  EE20 F00D          	lfsr	2,13
  4294  0011D4  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  4295  0011D6  26D9               	addwf	fsr2l,f,c
  4296  0011D8  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  4297  0011DA  22DA               	addwfc	fsr2h,f,c
  4298  0011DC  50DF               	movf	indf2,w,c
  4299  0011DE  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  4300  0011E0  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  4301  0011E2  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  4302  0011E4  6E2E               	movwf	_NeightAdress7,c	;volatile
  4303  0011E6  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  4304  0011E8  6E2F               	movwf	_NeightAdress7+1,c	;volatile
  4305                           
  4306                           ;FRAME.c: 821: NeightAdress8 = (message->data[6] << 8)| message->data[7];
  4307  0011EA  EE20 F00E          	lfsr	2,14
  4308  0011EE  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  4309  0011F0  26D9               	addwf	fsr2l,f,c
  4310  0011F2  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  4311  0011F4  22DA               	addwfc	fsr2h,f,c
  4312  0011F6  50DF               	movf	indf2,w,c
  4313  0011F8  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  4314  0011FA  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  4315  0011FC  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  4316  0011FE  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  4317  001200  EE20 F00F          	lfsr	2,15
  4318  001204  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  4319  001206  26D9               	addwf	fsr2l,f,c
  4320  001208  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  4321  00120A  22DA               	addwfc	fsr2h,f,c
  4322  00120C  50DF               	movf	indf2,w,c
  4323  00120E  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  4324  001210  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  4325  001212  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  4326  001214  6E2C               	movwf	_NeightAdress8,c	;volatile
  4327  001216  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  4328  001218  6E2D               	movwf	_NeightAdress8+1,c	;volatile
  4329  00121A  D79C               	goto	l4805
  4330  00121C                     __end_of_FRAME_AdressOfNeighbors:
  4331                           	opt callstack 0
  4332                           
  4333 ;; *************** function _FRAME_AccelerometerStatus *****************
  4334 ;; Defined at:
  4335 ;;		line 206 in file "FRAME.c"
  4336 ;; Parameters:    Size  Location     Type
  4337 ;;  message         2   11[COMRAM] PTR struct .
  4338 ;;		 -> TRM_DataTransmition@canMessage(17), 
  4339 ;; Auto vars:     Size  Location     Type
  4340 ;;		None
  4341 ;; Return value:  Size  Location     Type
  4342 ;;                  1    wreg      void 
  4343 ;; Registers used:
  4344 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4345 ;; Tracked objects:
  4346 ;;		On entry : 0/0
  4347 ;;		On exit  : 0/0
  4348 ;;		Unchanged: 0/0
  4349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4350 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4352 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4353 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4354 ;;Total ram usage:        6 bytes
  4355 ;; Hardware stack levels used:    1
  4356 ;; Hardware stack levels required when called:    4
  4357 ;; This function calls:
  4358 ;;		___awmod
  4359 ;; This function is called by:
  4360 ;;		_FRAME_HandleCanFrame
  4361 ;; This function uses a non-reentrant model
  4362 ;;
  4363                           
  4364                           	psect	text27
  4365  001F54                     __ptext27:
  4366                           	opt callstack 0
  4367  001F54                     _FRAME_AccelerometerStatus:
  4368                           	opt callstack 24
  4369                           
  4370                           ;FRAME.c: 208: if(message->message_type == 0x02)
  4371                           
  4372                           ;incstack = 0
  4373  001F54  EE20 F001          	lfsr	2,1
  4374  001F58  500C               	movf	FRAME_AccelerometerStatus@message,w,c
  4375  001F5A  26D9               	addwf	fsr2l,f,c
  4376  001F5C  500D               	movf	FRAME_AccelerometerStatus@message+1,w,c
  4377  001F5E  22DA               	addwfc	fsr2h,f,c
  4378  001F60  0E02               	movlw	2
  4379  001F62  18DE               	xorwf	postinc2,w,c
  4380  001F64  A4D8               	btfss	status,2,c
  4381  001F66  D029               	goto	l4713
  4382                           
  4383                           ;FRAME.c: 209: {;FRAME.c: 210: message->data_length = 4;
  4384  001F68  EE20 F010          	lfsr	2,16
  4385  001F6C  500C               	movf	FRAME_AccelerometerStatus@message,w,c
  4386  001F6E  26D9               	addwf	fsr2l,f,c
  4387  001F70  500D               	movf	FRAME_AccelerometerStatus@message+1,w,c
  4388  001F72  22DA               	addwfc	fsr2h,f,c
  4389  001F74  0E04               	movlw	4
  4390  001F76  6EDF               	movwf	indf2,c
  4391                           
  4392                           ;FRAME.c: 214: message->data[0] = MinRange/0x100;
  4393  001F78  EE20 F008          	lfsr	2,8
  4394  001F7C  500C               	movf	FRAME_AccelerometerStatus@message,w,c
  4395  001F7E  26D9               	addwf	fsr2l,f,c
  4396  001F80  500D               	movf	FRAME_AccelerometerStatus@message+1,w,c
  4397  001F82  22DA               	addwfc	fsr2h,f,c
  4398  001F84  5023               	movf	_MinRange+1,w,c	;volatile
  4399  001F86  6EDF               	movwf	indf2,c
  4400                           
  4401                           ;FRAME.c: 215: message->data[1] = MinRange & 0xFF;
  4402  001F88  EE20 F009          	lfsr	2,9
  4403  001F8C  500C               	movf	FRAME_AccelerometerStatus@message,w,c
  4404  001F8E  26D9               	addwf	fsr2l,f,c
  4405  001F90  500D               	movf	FRAME_AccelerometerStatus@message+1,w,c
  4406  001F92  22DA               	addwfc	fsr2h,f,c
  4407  001F94  C022  FFDF         	movff	_MinRange,indf2	;volatile
  4408                           
  4409                           ;FRAME.c: 216: message->data[2] = MaxRange/0x100;
  4410  001F98  EE20 F00A          	lfsr	2,10
  4411  001F9C  500C               	movf	FRAME_AccelerometerStatus@message,w,c
  4412  001F9E  26D9               	addwf	fsr2l,f,c
  4413  001FA0  500D               	movf	FRAME_AccelerometerStatus@message+1,w,c
  4414  001FA2  22DA               	addwfc	fsr2h,f,c
  4415  001FA4  503D               	movf	_MaxRange+1,w,c	;volatile
  4416  001FA6  6EDF               	movwf	indf2,c
  4417                           
  4418                           ;FRAME.c: 217: message->data[3] = MaxRange & 0xFF;
  4419  001FA8  EE20 F00B          	lfsr	2,11
  4420  001FAC  500C               	movf	FRAME_AccelerometerStatus@message,w,c
  4421  001FAE  26D9               	addwf	fsr2l,f,c
  4422  001FB0  500D               	movf	FRAME_AccelerometerStatus@message+1,w,c
  4423  001FB2  22DA               	addwfc	fsr2h,f,c
  4424  001FB4  C03C  FFDF         	movff	_MaxRange,indf2	;volatile
  4425                           
  4426                           ;FRAME.c: 218: }
  4427  001FB8  0012               	return	
  4428  001FBA                     l4713:
  4429                           
  4430                           ;FRAME.c: 219: else;FRAME.c: 220: {;FRAME.c: 221: MinRange = ((message->data[0])*0x100) 
      +                          | ((message->data[1]) % 0xFF);
  4431  001FBA  EE20 F009          	lfsr	2,9
  4432  001FBE  500C               	movf	FRAME_AccelerometerStatus@message,w,c
  4433  001FC0  26D9               	addwf	fsr2l,f,c
  4434  001FC2  500D               	movf	FRAME_AccelerometerStatus@message+1,w,c
  4435  001FC4  22DA               	addwfc	fsr2h,f,c
  4436  001FC6  50DF               	movf	indf2,w,c
  4437  001FC8  6E0E               	movwf	??_FRAME_AccelerometerStatus& (0+255),c
  4438  001FCA  500E               	movf	??_FRAME_AccelerometerStatus,w,c
  4439  001FCC  6E06               	movwf	___awmod@dividend,c
  4440  001FCE  6A07               	clrf	___awmod@dividend+1,c
  4441  001FD0  0E00               	movlw	0
  4442  001FD2  6E09               	movwf	___awmod@divisor+1,c
  4443  001FD4  6808               	setf	___awmod@divisor,c
  4444  001FD6  EC49  F013         	call	___awmod	;wreg free
  4445  001FDA  EE20 F008          	lfsr	2,8
  4446  001FDE  500C               	movf	FRAME_AccelerometerStatus@message,w,c
  4447  001FE0  26D9               	addwf	fsr2l,f,c
  4448  001FE2  500D               	movf	FRAME_AccelerometerStatus@message+1,w,c
  4449  001FE4  22DA               	addwfc	fsr2h,f,c
  4450  001FE6  50DF               	movf	indf2,w,c
  4451  001FE8  6E0F               	movwf	(??_FRAME_AccelerometerStatus+1)& (0+255),c
  4452  001FEA  500F               	movf	??_FRAME_AccelerometerStatus+1,w,c
  4453  001FEC  6E11               	movwf	(??_FRAME_AccelerometerStatus+3)& (0+255),c
  4454  001FEE  6A10               	clrf	(??_FRAME_AccelerometerStatus+2)& (0+255),c
  4455  001FF0  5006               	movf	?___awmod,w,c
  4456  001FF2  1010               	iorwf	??_FRAME_AccelerometerStatus+2,w,c
  4457  001FF4  6E22               	movwf	_MinRange,c	;volatile
  4458  001FF6  5007               	movf	?___awmod+1,w,c
  4459  001FF8  1011               	iorwf	??_FRAME_AccelerometerStatus+3,w,c
  4460  001FFA  6E23               	movwf	_MinRange+1,c	;volatile
  4461                           
  4462                           ;FRAME.c: 222: MaxRange = ((message->data[2])*0x100) | ((message->data[3]) % 0xFF);
  4463  001FFC  EE20 F00B          	lfsr	2,11
  4464  002000  500C               	movf	FRAME_AccelerometerStatus@message,w,c
  4465  002002  26D9               	addwf	fsr2l,f,c
  4466  002004  500D               	movf	FRAME_AccelerometerStatus@message+1,w,c
  4467  002006  22DA               	addwfc	fsr2h,f,c
  4468  002008  50DF               	movf	indf2,w,c
  4469  00200A  6E0E               	movwf	??_FRAME_AccelerometerStatus& (0+255),c
  4470  00200C  500E               	movf	??_FRAME_AccelerometerStatus,w,c
  4471  00200E  6E06               	movwf	___awmod@dividend,c
  4472  002010  6A07               	clrf	___awmod@dividend+1,c
  4473  002012  0E00               	movlw	0
  4474  002014  6E09               	movwf	___awmod@divisor+1,c
  4475  002016  6808               	setf	___awmod@divisor,c
  4476  002018  EC49  F013         	call	___awmod	;wreg free
  4477  00201C  EE20 F00A          	lfsr	2,10
  4478  002020  500C               	movf	FRAME_AccelerometerStatus@message,w,c
  4479  002022  26D9               	addwf	fsr2l,f,c
  4480  002024  500D               	movf	FRAME_AccelerometerStatus@message+1,w,c
  4481  002026  22DA               	addwfc	fsr2h,f,c
  4482  002028  50DF               	movf	indf2,w,c
  4483  00202A  6E0F               	movwf	(??_FRAME_AccelerometerStatus+1)& (0+255),c
  4484  00202C  500F               	movf	??_FRAME_AccelerometerStatus+1,w,c
  4485  00202E  6E11               	movwf	(??_FRAME_AccelerometerStatus+3)& (0+255),c
  4486  002030  6A10               	clrf	(??_FRAME_AccelerometerStatus+2)& (0+255),c
  4487  002032  5006               	movf	?___awmod,w,c
  4488  002034  1010               	iorwf	??_FRAME_AccelerometerStatus+2,w,c
  4489  002036  6E3C               	movwf	_MaxRange,c	;volatile
  4490  002038  5007               	movf	?___awmod+1,w,c
  4491  00203A  1011               	iorwf	??_FRAME_AccelerometerStatus+3,w,c
  4492  00203C  6E3D               	movwf	_MaxRange+1,c	;volatile
  4493  00203E  0012               	return		;funcret
  4494  002040                     __end_of_FRAME_AccelerometerStatus:
  4495                           	opt callstack 0
  4496                           
  4497 ;; *************** function ___awmod *****************
  4498 ;; Defined at:
  4499 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awmod.c"
  4500 ;; Parameters:    Size  Location     Type
  4501 ;;  dividend        2    5[COMRAM] int 
  4502 ;;  divisor         2    7[COMRAM] int 
  4503 ;; Auto vars:     Size  Location     Type
  4504 ;;  sign            1   10[COMRAM] unsigned char 
  4505 ;;  counter         1    9[COMRAM] unsigned char 
  4506 ;; Return value:  Size  Location     Type
  4507 ;;                  2    5[COMRAM] int 
  4508 ;; Registers used:
  4509 ;;		wreg, status,2, status,0
  4510 ;; Tracked objects:
  4511 ;;		On entry : 0/0
  4512 ;;		On exit  : 0/0
  4513 ;;		Unchanged: 0/0
  4514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4515 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4516 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4518 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4519 ;;Total ram usage:        6 bytes
  4520 ;; Hardware stack levels used:    1
  4521 ;; Hardware stack levels required when called:    3
  4522 ;; This function calls:
  4523 ;;		Nothing
  4524 ;; This function is called by:
  4525 ;;		_FRAME_AccelerometerStatus
  4526 ;;		_FRAME_ExcitationValue
  4527 ;; This function uses a non-reentrant model
  4528 ;;
  4529                           
  4530                           	psect	text28
  4531  002692                     __ptext28:
  4532                           	opt callstack 0
  4533  002692                     ___awmod:
  4534                           	opt callstack 24
  4535                           
  4536                           ;incstack = 0
  4537  002692  0E00               	movlw	0
  4538  002694  6E0B               	movwf	___awmod@sign,c
  4539  002696  AE07               	btfss	___awmod@dividend+1,7,c
  4540  002698  D006               	goto	l4535
  4541  00269A  6C06               	negf	___awmod@dividend,c
  4542  00269C  1E07               	comf	___awmod@dividend+1,f,c
  4543  00269E  B0D8               	btfsc	status,0,c
  4544  0026A0  2A07               	incf	___awmod@dividend+1,f,c
  4545  0026A2  0E01               	movlw	1
  4546  0026A4  6E0B               	movwf	___awmod@sign,c
  4547  0026A6                     l4535:
  4548  0026A6  AE09               	btfss	___awmod@divisor+1,7,c
  4549  0026A8  D004               	goto	l4539
  4550  0026AA  6C08               	negf	___awmod@divisor,c
  4551  0026AC  1E09               	comf	___awmod@divisor+1,f,c
  4552  0026AE  B0D8               	btfsc	status,0,c
  4553  0026B0  2A09               	incf	___awmod@divisor+1,f,c
  4554  0026B2                     l4539:
  4555  0026B2  5008               	movf	___awmod@divisor,w,c
  4556  0026B4  1009               	iorwf	___awmod@divisor+1,w,c
  4557  0026B6  B4D8               	btfsc	status,2,c
  4558  0026B8  D018               	goto	l4555
  4559  0026BA  0E01               	movlw	1
  4560  0026BC  6E0A               	movwf	___awmod@counter,c
  4561  0026BE  D004               	goto	l4545
  4562  0026C0                     l4543:
  4563  0026C0  90D8               	bcf	status,0,c
  4564  0026C2  3608               	rlcf	___awmod@divisor,f,c
  4565  0026C4  3609               	rlcf	___awmod@divisor+1,f,c
  4566  0026C6  2A0A               	incf	___awmod@counter,f,c
  4567  0026C8                     l4545:
  4568  0026C8  AE09               	btfss	___awmod@divisor+1,7,c
  4569  0026CA  D7FA               	goto	l4543
  4570  0026CC                     u3930:
  4571  0026CC  5008               	movf	___awmod@divisor,w,c
  4572  0026CE  5C06               	subwf	___awmod@dividend,w,c
  4573  0026D0  5009               	movf	___awmod@divisor+1,w,c
  4574  0026D2  5807               	subwfb	___awmod@dividend+1,w,c
  4575  0026D4  A0D8               	btfss	status,0,c
  4576  0026D6  D004               	goto	l4551
  4577  0026D8  5008               	movf	___awmod@divisor,w,c
  4578  0026DA  5E06               	subwf	___awmod@dividend,f,c
  4579  0026DC  5009               	movf	___awmod@divisor+1,w,c
  4580  0026DE  5A07               	subwfb	___awmod@dividend+1,f,c
  4581  0026E0                     l4551:
  4582  0026E0  90D8               	bcf	status,0,c
  4583  0026E2  3209               	rrcf	___awmod@divisor+1,f,c
  4584  0026E4  3208               	rrcf	___awmod@divisor,f,c
  4585  0026E6  2E0A               	decfsz	___awmod@counter,f,c
  4586  0026E8  D7F1               	goto	u3930
  4587  0026EA                     l4555:
  4588  0026EA  500B               	movf	___awmod@sign,w,c
  4589  0026EC  B4D8               	btfsc	status,2,c
  4590  0026EE  D004               	goto	l4559
  4591  0026F0  6C06               	negf	___awmod@dividend,c
  4592  0026F2  1E07               	comf	___awmod@dividend+1,f,c
  4593  0026F4  B0D8               	btfsc	status,0,c
  4594  0026F6  2A07               	incf	___awmod@dividend+1,f,c
  4595  0026F8                     l4559:
  4596  0026F8  C006  F006         	movff	___awmod@dividend,?___awmod
  4597  0026FC  C007  F007         	movff	___awmod@dividend+1,?___awmod+1
  4598  002700  0012               	return		;funcret
  4599  002702                     __end_of___awmod:
  4600                           	opt callstack 0
  4601                           
  4602 ;; *************** function _CAN_SendFrame *****************
  4603 ;; Defined at:
  4604 ;;		line 247 in file "CAN.c"
  4605 ;; Parameters:    Size  Location     Type
  4606 ;;  message         2   10[COMRAM] PTR struct .
  4607 ;;		 -> TRM_DataTransmition@canMessage(17), 
  4608 ;; Auto vars:     Size  Location     Type
  4609 ;;		None
  4610 ;; Return value:  Size  Location     Type
  4611 ;;                  1    wreg      void 
  4612 ;; Registers used:
  4613 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4614 ;; Tracked objects:
  4615 ;;		On entry : 0/0
  4616 ;;		On exit  : 0/0
  4617 ;;		Unchanged: 0/0
  4618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4619 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4621 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4622 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4623 ;;Total ram usage:        5 bytes
  4624 ;; Hardware stack levels used:    1
  4625 ;; Hardware stack levels required when called:    4
  4626 ;; This function calls:
  4627 ;;		_CAN_MoveBuffIntoFrame
  4628 ;; This function is called by:
  4629 ;;		_FRAME_HandleCanFrame
  4630 ;; This function uses a non-reentrant model
  4631 ;;
  4632                           
  4633                           	psect	text29
  4634  001914                     __ptext29:
  4635                           	opt callstack 0
  4636  001914                     _CAN_SendFrame:
  4637                           	opt callstack 24
  4638                           
  4639                           ;CAN.c: 252: {;CAN.c: 253: ECANCON = 0x83;
  4640                           
  4641                           ;incstack = 0
  4642                           ;CAN.c: 251: for(;;)
  4643  001914  0E83               	movlw	131
  4644  001916  6E77               	movwf	3959,c	;volatile
  4645                           
  4646                           ;CAN.c: 254: if(!RXB0CONbits.FILHIT3)
  4647  001918  A660               	btfss	3936,3,c	;volatile
  4648  00191A  D00A               	goto	l292
  4649                           
  4650                           ;CAN.c: 258: };CAN.c: 259: ECANCON = 0x84;
  4651  00191C  0E84               	movlw	132
  4652  00191E  6E77               	movwf	3959,c	;volatile
  4653                           
  4654                           ;CAN.c: 260: if(!RXB0CONbits.FILHIT3)
  4655  001920  A660               	btfss	3936,3,c	;volatile
  4656  001922  D006               	goto	l292
  4657                           
  4658                           ;CAN.c: 264: };CAN.c: 265: ECANCON = 0x85;
  4659  001924  0E85               	movlw	133
  4660  001926  6E77               	movwf	3959,c	;volatile
  4661                           
  4662                           ;CAN.c: 266: if(!RXB0CONbits.FILHIT3)
  4663  001928  A660               	btfss	3936,3,c	;volatile
  4664  00192A  D002               	goto	l292
  4665  00192C  D7F3               	goto	_CAN_SendFrame
  4666  00192E                     l293:
  4667  00192E  00FF               	reset		;# 
  4668  001930                     l292:
  4669  001930  B474               	btfsc	3956,2,c	;volatile
  4670  001932  D7FD               	goto	l293
  4671                           
  4672                           ;CAN.c: 276: };CAN.c: 277: DetectorLedRadar.timerRamkiTxCANU8 = 0;
  4673  001934  0E00               	movlw	0
  4674  001936  0100               	movlb	0	; () banked
  4675  001938  6FD1               	movwf	(_DetectorLedRadar+2)& (0+255),b
  4676                           
  4677                           ; BSR set to: 0
  4678                           ;CAN.c: 278: RXB0EIDL = message->id.v[0];
  4679  00193A  EE20 F004          	lfsr	2,4
  4680  00193E  500B               	movf	CAN_SendFrame@message,w,c
  4681  001940  26D9               	addwf	fsr2l,f,c
  4682  001942  500C               	movf	CAN_SendFrame@message+1,w,c
  4683  001944  22DA               	addwfc	fsr2h,f,c
  4684  001946  50DF               	movf	indf2,w,c
  4685  001948  6E64               	movwf	3940,c	;volatile
  4686                           
  4687                           ; BSR set to: 0
  4688                           ;CAN.c: 279: RXB0EIDH = message->id.v[1];
  4689  00194A  EE20 F005          	lfsr	2,5
  4690  00194E  500B               	movf	CAN_SendFrame@message,w,c
  4691  001950  26D9               	addwf	fsr2l,f,c
  4692  001952  500C               	movf	CAN_SendFrame@message+1,w,c
  4693  001954  22DA               	addwfc	fsr2h,f,c
  4694  001956  50DF               	movf	indf2,w,c
  4695  001958  6E63               	movwf	3939,c	;volatile
  4696                           
  4697                           ; BSR set to: 0
  4698                           ;CAN.c: 280: RXB0SIDL = ((message->id.v[2]&0xFC)*8) | (message->id.v[2] & (0x03));
  4699  00195A  EE20 F006          	lfsr	2,6
  4700  00195E  500B               	movf	CAN_SendFrame@message,w,c
  4701  001960  26D9               	addwf	fsr2l,f,c
  4702  001962  500C               	movf	CAN_SendFrame@message+1,w,c
  4703  001964  22DA               	addwfc	fsr2h,f,c
  4704  001966  50DF               	movf	indf2,w,c
  4705  001968  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  4706  00196A  0E03               	movlw	3
  4707  00196C  160D               	andwf	??_CAN_SendFrame,f,c
  4708  00196E  EE20 F006          	lfsr	2,6
  4709  001972  500B               	movf	CAN_SendFrame@message,w,c
  4710  001974  26D9               	addwf	fsr2l,f,c
  4711  001976  500C               	movf	CAN_SendFrame@message+1,w,c
  4712  001978  22DA               	addwfc	fsr2h,f,c
  4713  00197A  50DF               	movf	indf2,w,c
  4714  00197C  0BFC               	andlw	252
  4715  00197E  0D08               	mullw	8
  4716  001980  50F3               	movf	prodl,w,c
  4717  001982  100D               	iorwf	??_CAN_SendFrame,w,c
  4718  001984  6E62               	movwf	3938,c	;volatile
  4719                           
  4720                           ; BSR set to: 0
  4721                           ;CAN.c: 281: RXB0SIDLbits.EXID = 1;
  4722  001986  8662               	bsf	3938,3,c	;volatile
  4723                           
  4724                           ; BSR set to: 0
  4725                           ;CAN.c: 282: RXB0SIDH = (BYTE)(message->id.w[1]/32);
  4726  001988  EE20 F006          	lfsr	2,6
  4727  00198C  500B               	movf	CAN_SendFrame@message,w,c
  4728  00198E  26D9               	addwf	fsr2l,f,c
  4729  001990  500C               	movf	CAN_SendFrame@message+1,w,c
  4730  001992  22DA               	addwfc	fsr2h,f,c
  4731  001994  CFDE F00D          	movff	postinc2,??_CAN_SendFrame
  4732  001998  CFDD F00E          	movff	postdec2,??_CAN_SendFrame+1
  4733  00199C  0E05               	movlw	5
  4734  00199E  6E0F               	movwf	(??_CAN_SendFrame+2)& (0+255),c
  4735  0019A0                     u4035:
  4736  0019A0  90D8               	bcf	status,0,c
  4737  0019A2  320E               	rrcf	??_CAN_SendFrame+1,f,c
  4738  0019A4  320D               	rrcf	??_CAN_SendFrame,f,c
  4739  0019A6  2E0F               	decfsz	(??_CAN_SendFrame+2)& (0+255),f,c
  4740  0019A8  D7FB               	goto	u4035
  4741  0019AA  500D               	movf	??_CAN_SendFrame,w,c
  4742  0019AC  6E61               	movwf	3937,c	;volatile
  4743                           
  4744                           ; BSR set to: 0
  4745                           ;CAN.c: 284: RXB0DLC = 0;
  4746  0019AE  0E00               	movlw	0
  4747  0019B0  6E65               	movwf	3941,c	;volatile
  4748                           
  4749                           ; BSR set to: 0
  4750                           ;CAN.c: 286: if(message->message_type==0x02)
  4751  0019B2  EE20 F001          	lfsr	2,1
  4752  0019B6  500B               	movf	CAN_SendFrame@message,w,c
  4753  0019B8  26D9               	addwf	fsr2l,f,c
  4754  0019BA  500C               	movf	CAN_SendFrame@message+1,w,c
  4755  0019BC  22DA               	addwfc	fsr2h,f,c
  4756  0019BE  0E02               	movlw	2
  4757  0019C0  18DE               	xorwf	postinc2,w,c
  4758  0019C2  A4D8               	btfss	status,2,c
  4759  0019C4  D002               	goto	l4659
  4760                           
  4761                           ; BSR set to: 0
  4762                           ;CAN.c: 287: {;CAN.c: 288: RXB0DLCbits.RXRTR = 1;
  4763  0019C6  8C65               	bsf	3941,6,c	;volatile
  4764                           
  4765                           ;CAN.c: 289: }
  4766  0019C8  D05A               	goto	l4663
  4767  0019CA                     l4659:
  4768                           
  4769                           ; BSR set to: 0
  4770                           ;CAN.c: 290: else;CAN.c: 291: {;CAN.c: 292: RXB0DLCbits.DLC0 = (message->data_length & 0
      +                          x0F);
  4771  0019CA  EE20 F010          	lfsr	2,16
  4772  0019CE  500B               	movf	CAN_SendFrame@message,w,c
  4773  0019D0  26D9               	addwf	fsr2l,f,c
  4774  0019D2  500C               	movf	CAN_SendFrame@message+1,w,c
  4775  0019D4  22DA               	addwfc	fsr2h,f,c
  4776  0019D6  50DF               	movf	indf2,w,c
  4777  0019D8  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  4778  0019DA  0E0F               	movlw	15
  4779  0019DC  160D               	andwf	??_CAN_SendFrame,f,c
  4780  0019DE  5065               	movf	3941,w,c	;volatile
  4781  0019E0  180D               	xorwf	??_CAN_SendFrame,w,c
  4782  0019E2  0BFE               	andlw	-2
  4783  0019E4  180D               	xorwf	??_CAN_SendFrame,w,c
  4784  0019E6  6E65               	movwf	3941,c	;volatile
  4785                           
  4786                           ;CAN.c: 293: RXB0DLCbits.DLC1 = ((message->data_length & 0x0F)>> 1);
  4787  0019E8  EE20 F010          	lfsr	2,16
  4788  0019EC  500B               	movf	CAN_SendFrame@message,w,c
  4789  0019EE  26D9               	addwf	fsr2l,f,c
  4790  0019F0  500C               	movf	CAN_SendFrame@message+1,w,c
  4791  0019F2  22DA               	addwfc	fsr2h,f,c
  4792  0019F4  50DF               	movf	indf2,w,c
  4793  0019F6  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  4794  0019F8  90D8               	bcf	status,0,c
  4795  0019FA  320D               	rrcf	??_CAN_SendFrame,f,c
  4796  0019FC  0E07               	movlw	7
  4797  0019FE  160D               	andwf	??_CAN_SendFrame,f,c
  4798  001A00  460D               	rlncf	??_CAN_SendFrame,f,c
  4799  001A02  5065               	movf	3941,w,c	;volatile
  4800  001A04  180D               	xorwf	??_CAN_SendFrame,w,c
  4801  001A06  0BFD               	andlw	-3
  4802  001A08  180D               	xorwf	??_CAN_SendFrame,w,c
  4803  001A0A  6E65               	movwf	3941,c	;volatile
  4804                           
  4805                           ;CAN.c: 294: RXB0DLCbits.DLC2 = ((message->data_length & 0x0F)>> 2);
  4806  001A0C  EE20 F010          	lfsr	2,16
  4807  001A10  500B               	movf	CAN_SendFrame@message,w,c
  4808  001A12  26D9               	addwf	fsr2l,f,c
  4809  001A14  500C               	movf	CAN_SendFrame@message+1,w,c
  4810  001A16  22DA               	addwfc	fsr2h,f,c
  4811  001A18  50DF               	movf	indf2,w,c
  4812  001A1A  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  4813  001A1C  90D8               	bcf	status,0,c
  4814  001A1E  320D               	rrcf	??_CAN_SendFrame,f,c
  4815  001A20  90D8               	bcf	status,0,c
  4816  001A22  320D               	rrcf	??_CAN_SendFrame,f,c
  4817  001A24  0E03               	movlw	3
  4818  001A26  160D               	andwf	??_CAN_SendFrame,f,c
  4819  001A28  460D               	rlncf	??_CAN_SendFrame,f,c
  4820  001A2A  460D               	rlncf	??_CAN_SendFrame,f,c
  4821  001A2C  5065               	movf	3941,w,c	;volatile
  4822  001A2E  180D               	xorwf	??_CAN_SendFrame,w,c
  4823  001A30  0BFB               	andlw	-5
  4824  001A32  180D               	xorwf	??_CAN_SendFrame,w,c
  4825  001A34  6E65               	movwf	3941,c	;volatile
  4826                           
  4827                           ;CAN.c: 295: RXB0DLCbits.DLC3 = ((message->data_length & 0x0F)>> 3);
  4828  001A36  EE20 F010          	lfsr	2,16
  4829  001A3A  500B               	movf	CAN_SendFrame@message,w,c
  4830  001A3C  26D9               	addwf	fsr2l,f,c
  4831  001A3E  500C               	movf	CAN_SendFrame@message+1,w,c
  4832  001A40  22DA               	addwfc	fsr2h,f,c
  4833  001A42  50DF               	movf	indf2,w,c
  4834  001A44  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  4835  001A46  90D8               	bcf	status,0,c
  4836  001A48  320D               	rrcf	??_CAN_SendFrame,f,c
  4837  001A4A  90D8               	bcf	status,0,c
  4838  001A4C  320D               	rrcf	??_CAN_SendFrame,f,c
  4839  001A4E  90D8               	bcf	status,0,c
  4840  001A50  320D               	rrcf	??_CAN_SendFrame,f,c
  4841  001A52  0E01               	movlw	1
  4842  001A54  160D               	andwf	??_CAN_SendFrame,f,c
  4843  001A56  460D               	rlncf	??_CAN_SendFrame,f,c
  4844  001A58  460D               	rlncf	??_CAN_SendFrame,f,c
  4845  001A5A  460D               	rlncf	??_CAN_SendFrame,f,c
  4846  001A5C  5065               	movf	3941,w,c	;volatile
  4847  001A5E  180D               	xorwf	??_CAN_SendFrame,w,c
  4848  001A60  0BF7               	andlw	-9
  4849  001A62  180D               	xorwf	??_CAN_SendFrame,w,c
  4850  001A64  6E65               	movwf	3941,c	;volatile
  4851                           
  4852                           ; BSR set to: 0
  4853                           ;CAN.c: 297: CAN_MoveBuffIntoFrame(&RXB0D0, message->data);
  4854  001A66  0E66               	movlw	102
  4855  001A68  6E06               	movwf	CAN_MoveBuffIntoFrame@Ram,c
  4856  001A6A  0E0F               	movlw	15
  4857  001A6C  6E07               	movwf	CAN_MoveBuffIntoFrame@Ram+1,c
  4858  001A6E  0E08               	movlw	8
  4859  001A70  240B               	addwf	CAN_SendFrame@message,w,c
  4860  001A72  6E08               	movwf	CAN_MoveBuffIntoFrame@Buf,c
  4861  001A74  0E00               	movlw	0
  4862  001A76  200C               	addwfc	CAN_SendFrame@message+1,w,c
  4863  001A78  6E09               	movwf	CAN_MoveBuffIntoFrame@Buf+1,c
  4864  001A7A  ECD2  F015         	call	_CAN_MoveBuffIntoFrame	;wreg free
  4865  001A7E                     l4663:
  4866                           
  4867                           ;CAN.c: 298: };CAN.c: 300: RXB0CONbits.FILHIT3 = 1;
  4868  001A7E  8660               	bsf	3936,3,c	;volatile
  4869                           
  4870                           ;CAN.c: 302: DetectorLedRadar.Flags.ramkaTx = 1;
  4871  001A80  0100               	movlb	0	; () banked
  4872  001A82  89CF               	bsf	_DetectorLedRadar& (0+255),4,b
  4873                           
  4874                           ; BSR set to: 0
  4875  001A84  0012               	return		;funcret
  4876  001A86                     __end_of_CAN_SendFrame:
  4877                           	opt callstack 0
  4878                           
  4879 ;; *************** function _CAN_GenID *****************
  4880 ;; Defined at:
  4881 ;;		line 446 in file "CAN.c"
  4882 ;; Parameters:    Size  Location     Type
  4883 ;;  message         2    5[COMRAM] PTR struct .
  4884 ;;		 -> TRM_DataTransmition@canMessage(17), 
  4885 ;;  frameID         1    7[COMRAM] unsigned char 
  4886 ;; Auto vars:     Size  Location     Type
  4887 ;;		None
  4888 ;; Return value:  Size  Location     Type
  4889 ;;                  1    wreg      void 
  4890 ;; Registers used:
  4891 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4892 ;; Tracked objects:
  4893 ;;		On entry : 0/0
  4894 ;;		On exit  : 0/0
  4895 ;;		Unchanged: 0/0
  4896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4897 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4899 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4900 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4901 ;;Total ram usage:        5 bytes
  4902 ;; Hardware stack levels used:    1
  4903 ;; Hardware stack levels required when called:    3
  4904 ;; This function calls:
  4905 ;;		Nothing
  4906 ;; This function is called by:
  4907 ;;		_FRAME_HandleCanFrame
  4908 ;; This function uses a non-reentrant model
  4909 ;;
  4910                           
  4911                           	psect	text30
  4912  002530                     __ptext30:
  4913                           	opt callstack 0
  4914  002530                     _CAN_GenID:
  4915                           	opt callstack 25
  4916                           
  4917                           ;CAN.c: 449: message->frame_type = 0x03;
  4918                           
  4919                           ; BSR set to: 0
  4920                           ;incstack = 0
  4921  002530  EE20 F002          	lfsr	2,2
  4922  002534  5006               	movf	CAN_GenID@message,w,c
  4923  002536  26D9               	addwf	fsr2l,f,c
  4924  002538  5007               	movf	CAN_GenID@message+1,w,c
  4925  00253A  22DA               	addwfc	fsr2h,f,c
  4926  00253C  0E03               	movlw	3
  4927  00253E  6EDF               	movwf	indf2,c
  4928                           
  4929                           ;CAN.c: 450: message->message_type = 0x01;
  4930  002540  EE20 F001          	lfsr	2,1
  4931  002544  5006               	movf	CAN_GenID@message,w,c
  4932  002546  26D9               	addwf	fsr2l,f,c
  4933  002548  5007               	movf	CAN_GenID@message+1,w,c
  4934  00254A  22DA               	addwfc	fsr2h,f,c
  4935  00254C  0E01               	movlw	1
  4936  00254E  6EDF               	movwf	indf2,c
  4937                           
  4938                           ;CAN.c: 451: message->id.w[1] = (WORD)frameID * (WORD)4;
  4939  002550  5008               	movf	CAN_GenID@frameID,w,c
  4940  002552  6E09               	movwf	??_CAN_GenID& (0+255),c
  4941  002554  6A0A               	clrf	(??_CAN_GenID+1)& (0+255),c
  4942  002556  90D8               	bcf	status,0,c
  4943  002558  3609               	rlcf	??_CAN_GenID,f,c
  4944  00255A  360A               	rlcf	??_CAN_GenID+1,f,c
  4945  00255C  90D8               	bcf	status,0,c
  4946  00255E  3609               	rlcf	??_CAN_GenID,f,c
  4947  002560  360A               	rlcf	??_CAN_GenID+1,f,c
  4948  002562  EE20 F006          	lfsr	2,6
  4949  002566  5006               	movf	CAN_GenID@message,w,c
  4950  002568  26D9               	addwf	fsr2l,f,c
  4951  00256A  5007               	movf	CAN_GenID@message+1,w,c
  4952  00256C  22DA               	addwfc	fsr2h,f,c
  4953  00256E  C009  FFDE         	movff	??_CAN_GenID,postinc2
  4954  002572  C00A  FFDD         	movff	??_CAN_GenID+1,postdec2
  4955                           
  4956                           ;CAN.c: 452: message->id.w[0] = DaneCan.adresCAN;
  4957  002576  EE20 F004          	lfsr	2,4
  4958  00257A  5006               	movf	CAN_GenID@message,w,c
  4959  00257C  26D9               	addwf	fsr2l,f,c
  4960  00257E  5007               	movf	CAN_GenID@message+1,w,c
  4961  002580  22DA               	addwfc	fsr2h,f,c
  4962  002582  C0CD  FFDE         	movff	_DaneCan+2,postinc2
  4963  002586  C0CE  FFDD         	movff	_DaneCan+3,postdec2
  4964                           
  4965                           ;CAN.c: 455: message ->id.bits.b16 = 0;
  4966  00258A  EE20 F006          	lfsr	2,6
  4967  00258E  5006               	movf	CAN_GenID@message,w,c
  4968  002590  26D9               	addwf	fsr2l,f,c
  4969  002592  5007               	movf	CAN_GenID@message+1,w,c
  4970  002594  22DA               	addwfc	fsr2h,f,c
  4971  002596  90DF               	bcf	indf2,0,c
  4972                           
  4973                           ;CAN.c: 456: message ->id.bits.b17 = 0;
  4974  002598  EE20 F006          	lfsr	2,6
  4975  00259C  5006               	movf	CAN_GenID@message,w,c
  4976  00259E  26D9               	addwf	fsr2l,f,c
  4977  0025A0  5007               	movf	CAN_GenID@message+1,w,c
  4978  0025A2  22DA               	addwfc	fsr2h,f,c
  4979  0025A4  92DF               	bcf	indf2,1,c
  4980  0025A6  0012               	return		;funcret
  4981  0025A8                     __end_of_CAN_GenID:
  4982                           	opt callstack 0
  4983                           
  4984 ;; *************** function _CAN_TakeFrame *****************
  4985 ;; Defined at:
  4986 ;;		line 311 in file "CAN.c"
  4987 ;; Parameters:    Size  Location     Type
  4988 ;;  message         2   13[COMRAM] PTR struct .
  4989 ;;		 -> TRM_DataTransmition@canMessage(17), 
  4990 ;; Auto vars:     Size  Location     Type
  4991 ;;  k               1   18[COMRAM] unsigned char 
  4992 ;;  tempCON         1   17[COMRAM] unsigned char 
  4993 ;; Return value:  Size  Location     Type
  4994 ;;                  1    wreg      enum E10294
  4995 ;; Registers used:
  4996 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4997 ;; Tracked objects:
  4998 ;;		On entry : 0/0
  4999 ;;		On exit  : 0/0
  5000 ;;		Unchanged: 0/0
  5001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5002 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5003 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5004 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5005 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5006 ;;Total ram usage:        6 bytes
  5007 ;; Hardware stack levels used:    1
  5008 ;; Hardware stack levels required when called:    4
  5009 ;; This function calls:
  5010 ;;		_CAN_MoveBuffIntoFrame
  5011 ;;		___awdiv
  5012 ;; This function is called by:
  5013 ;;		_TRM_DataTransmition
  5014 ;; This function uses a non-reentrant model
  5015 ;;
  5016                           
  5017                           	psect	text31
  5018  0014CA                     __ptext31:
  5019                           	opt callstack 0
  5020  0014CA                     _CAN_TakeFrame:
  5021                           	opt callstack 25
  5022                           
  5023                           ;CAN.c: 313: BYTE k, tempCON;;CAN.c: 315: k = CANCON&0x0F;
  5024                           
  5025                           ;incstack = 0
  5026  0014CA  506F               	movf	3951,w,c	;volatile
  5027  0014CC  0B0F               	andlw	15
  5028  0014CE  6E13               	movwf	CAN_TakeFrame@k,c
  5029                           
  5030                           ;CAN.c: 317: ECANCON = 0x90 | k;
  5031  0014D0  5013               	movf	CAN_TakeFrame@k,w,c
  5032  0014D2  0990               	iorlw	144
  5033  0014D4  6E77               	movwf	3959,c	;volatile
  5034                           
  5035                           ;CAN.c: 320: switch(k)
  5036  0014D6  D018               	goto	l4875
  5037  0014D8                     l301:
  5038                           
  5039                           ;CAN.c: 323: tempCON = RXB0CON;
  5040  0014D8  CF60 F012          	movff	3936,CAN_TakeFrame@tempCON	;volatile
  5041                           
  5042                           ;CAN.c: 324: break;
  5043  0014DC  D02E               	goto	l302
  5044  0014DE                     l303:
  5045                           
  5046                           ;CAN.c: 326: tempCON = RXB1CON;
  5047  0014DE  CF50 F012          	movff	3920,CAN_TakeFrame@tempCON	;volatile
  5048                           
  5049                           ;CAN.c: 327: break;
  5050  0014E2  D02B               	goto	l302
  5051  0014E4                     l304:
  5052                           
  5053                           ;CAN.c: 329: tempCON = B0CON;
  5054  0014E4  CE20 F012          	movff	3616,CAN_TakeFrame@tempCON	;volatile
  5055                           
  5056                           ;CAN.c: 330: break;
  5057  0014E8  D028               	goto	l302
  5058  0014EA                     l305:
  5059                           
  5060                           ;CAN.c: 332: tempCON = B1CON;
  5061  0014EA  CE30 F012          	movff	3632,CAN_TakeFrame@tempCON	;volatile
  5062                           
  5063                           ;CAN.c: 333: break;
  5064  0014EE  D025               	goto	l302
  5065  0014F0                     l306:
  5066                           
  5067                           ;CAN.c: 335: tempCON = B2CON;
  5068  0014F0  CE40 F012          	movff	3648,CAN_TakeFrame@tempCON	;volatile
  5069                           
  5070                           ;CAN.c: 336: break;
  5071  0014F4  D022               	goto	l302
  5072  0014F6                     l307:
  5073                           
  5074                           ;CAN.c: 338: tempCON = B3CON;
  5075  0014F6  CE50 F012          	movff	3664,CAN_TakeFrame@tempCON	;volatile
  5076                           
  5077                           ;CAN.c: 339: break;
  5078  0014FA  D01F               	goto	l302
  5079  0014FC                     l308:
  5080                           
  5081                           ;CAN.c: 341: tempCON = B4CON;
  5082  0014FC  CE60 F012          	movff	3680,CAN_TakeFrame@tempCON	;volatile
  5083                           
  5084                           ;CAN.c: 342: break;
  5085  001500  D01C               	goto	l302
  5086  001502                     l309:
  5087                           
  5088                           ;CAN.c: 344: tempCON = B5CON;
  5089  001502  CE70 F012          	movff	3696,CAN_TakeFrame@tempCON	;volatile
  5090                           
  5091                           ;CAN.c: 345: break;
  5092  001506  D019               	goto	l302
  5093  001508                     l4875:
  5094  001508  5013               	movf	CAN_TakeFrame@k,w,c
  5095                           
  5096                           ; Switch size 1, requested type "simple"
  5097                           ; Number of cases is 8, Range of values is 0 to 7
  5098                           ; switch strategies available:
  5099                           ; Name         Instructions Cycles
  5100                           ; simple_byte           25    13 (average)
  5101                           ;	Chosen strategy is simple_byte
  5102  00150A  0A00               	xorlw	0	; case 0
  5103  00150C  B4D8               	btfsc	status,2,c
  5104  00150E  D7E4               	goto	l301
  5105  001510  0A01               	xorlw	1	; case 1
  5106  001512  B4D8               	btfsc	status,2,c
  5107  001514  D7E4               	goto	l303
  5108  001516  0A03               	xorlw	3	; case 2
  5109  001518  B4D8               	btfsc	status,2,c
  5110  00151A  D7E4               	goto	l304
  5111  00151C  0A01               	xorlw	1	; case 3
  5112  00151E  B4D8               	btfsc	status,2,c
  5113  001520  D7E4               	goto	l305
  5114  001522  0A07               	xorlw	7	; case 4
  5115  001524  B4D8               	btfsc	status,2,c
  5116  001526  D7E4               	goto	l306
  5117  001528  0A01               	xorlw	1	; case 5
  5118  00152A  B4D8               	btfsc	status,2,c
  5119  00152C  D7E4               	goto	l307
  5120  00152E  0A03               	xorlw	3	; case 6
  5121  001530  B4D8               	btfsc	status,2,c
  5122  001532  D7E4               	goto	l308
  5123  001534  0A01               	xorlw	1	; case 7
  5124  001536  B4D8               	btfsc	status,2,c
  5125  001538  D7E4               	goto	l309
  5126  00153A                     l302:
  5127                           
  5128                           ;CAN.c: 349: if((tempCON & 0x80) > 0)
  5129  00153A  AE12               	btfss	CAN_TakeFrame@tempCON,7,c
  5130  00153C  D09E               	goto	l4911
  5131                           
  5132                           ;CAN.c: 350: {;CAN.c: 351: message->buffer = RXB0CON & 0x1F;
  5133  00153E  EE20 F003          	lfsr	2,3
  5134  001542  500E               	movf	CAN_TakeFrame@message,w,c
  5135  001544  26D9               	addwf	fsr2l,f,c
  5136  001546  500F               	movf	CAN_TakeFrame@message+1,w,c
  5137  001548  22DA               	addwfc	fsr2h,f,c
  5138  00154A  5060               	movf	3936,w,c	;volatile
  5139  00154C  0B1F               	andlw	31
  5140  00154E  6EDF               	movwf	indf2,c
  5141                           
  5142                           ;CAN.c: 352: message->id.v[0] = RXB0EIDL;
  5143  001550  EE20 F004          	lfsr	2,4
  5144  001554  500E               	movf	CAN_TakeFrame@message,w,c
  5145  001556  26D9               	addwf	fsr2l,f,c
  5146  001558  500F               	movf	CAN_TakeFrame@message+1,w,c
  5147  00155A  22DA               	addwfc	fsr2h,f,c
  5148  00155C  CF64 FFDF          	movff	3940,indf2	;volatile
  5149                           
  5150                           ;CAN.c: 353: message->id.v[1] = RXB0EIDH;
  5151  001560  EE20 F005          	lfsr	2,5
  5152  001564  500E               	movf	CAN_TakeFrame@message,w,c
  5153  001566  26D9               	addwf	fsr2l,f,c
  5154  001568  500F               	movf	CAN_TakeFrame@message+1,w,c
  5155  00156A  22DA               	addwfc	fsr2h,f,c
  5156  00156C  CF63 FFDF          	movff	3939,indf2	;volatile
  5157                           
  5158                           ;CAN.c: 354: message->id.v[2] = (RXB0SIDL/8) | (RXB0SIDL&0x03);
  5159  001570  EE20 F006          	lfsr	2,6
  5160  001574  500E               	movf	CAN_TakeFrame@message,w,c
  5161  001576  26D9               	addwf	fsr2l,f,c
  5162  001578  500F               	movf	CAN_TakeFrame@message+1,w,c
  5163  00157A  22DA               	addwfc	fsr2h,f,c
  5164  00157C  CF62 F010          	movff	3938,??_CAN_TakeFrame	;volatile
  5165  001580  0E03               	movlw	3
  5166  001582  1610               	andwf	??_CAN_TakeFrame,f,c
  5167  001584  CF62 F006          	movff	3938,___awdiv@dividend	;volatile
  5168  001588  6A07               	clrf	___awdiv@dividend+1,c
  5169  00158A  0E00               	movlw	0
  5170  00158C  6E09               	movwf	___awdiv@divisor+1,c
  5171  00158E  0E08               	movlw	8
  5172  001590  6E08               	movwf	___awdiv@divisor,c
  5173  001592  EC18  F012         	call	___awdiv	;wreg free
  5174  001596  5006               	movf	?___awdiv,w,c
  5175  001598  1010               	iorwf	??_CAN_TakeFrame,w,c
  5176  00159A  6EDF               	movwf	indf2,c
  5177                           
  5178                           ;CAN.c: 355: message->id.w[1] |= (WORD)RXB0SIDH*32;
  5179  00159C  5061               	movf	3937,w,c	;volatile
  5180  00159E  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  5181  0015A0  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  5182  0015A2  0E05               	movlw	5
  5183  0015A4                     u4385:
  5184  0015A4  90D8               	bcf	status,0,c
  5185  0015A6  3610               	rlcf	??_CAN_TakeFrame,f,c
  5186  0015A8  3611               	rlcf	??_CAN_TakeFrame+1,f,c
  5187  0015AA  2EE8               	decfsz	wreg,f,c
  5188  0015AC  D7FB               	goto	u4385
  5189  0015AE  EE20 F006          	lfsr	2,6
  5190  0015B2  500E               	movf	CAN_TakeFrame@message,w,c
  5191  0015B4  26D9               	addwf	fsr2l,f,c
  5192  0015B6  500F               	movf	CAN_TakeFrame@message+1,w,c
  5193  0015B8  22DA               	addwfc	fsr2h,f,c
  5194  0015BA  5010               	movf	??_CAN_TakeFrame,w,c
  5195  0015BC  12DE               	iorwf	postinc2,f,c
  5196  0015BE  5011               	movf	??_CAN_TakeFrame+1,w,c
  5197  0015C0  12DD               	iorwf	postdec2,f,c
  5198                           
  5199                           ;CAN.c: 356: message->frame_type=0x03;
  5200  0015C2  EE20 F002          	lfsr	2,2
  5201  0015C6  500E               	movf	CAN_TakeFrame@message,w,c
  5202  0015C8  26D9               	addwf	fsr2l,f,c
  5203  0015CA  500F               	movf	CAN_TakeFrame@message+1,w,c
  5204  0015CC  22DA               	addwfc	fsr2h,f,c
  5205  0015CE  0E03               	movlw	3
  5206  0015D0  6EDF               	movwf	indf2,c
  5207                           
  5208                           ;CAN.c: 360: if(RXB0DLCbits.RXRTR == 0)
  5209  0015D2  BC65               	btfsc	3941,6,c	;volatile
  5210  0015D4  D061               	goto	l4917
  5211                           
  5212                           ;CAN.c: 361: {;CAN.c: 362: message->message_type = 0x01;
  5213  0015D6  EE20 F001          	lfsr	2,1
  5214  0015DA  500E               	movf	CAN_TakeFrame@message,w,c
  5215  0015DC  26D9               	addwf	fsr2l,f,c
  5216  0015DE  500F               	movf	CAN_TakeFrame@message+1,w,c
  5217  0015E0  22DA               	addwfc	fsr2h,f,c
  5218  0015E2  0E01               	movlw	1
  5219  0015E4  6EDF               	movwf	indf2,c
  5220                           
  5221                           ;CAN.c: 363: message->data_length= RXB0DLC & 0x0F;
  5222  0015E6  EE20 F010          	lfsr	2,16
  5223  0015EA  500E               	movf	CAN_TakeFrame@message,w,c
  5224  0015EC  26D9               	addwf	fsr2l,f,c
  5225  0015EE  500F               	movf	CAN_TakeFrame@message+1,w,c
  5226  0015F0  22DA               	addwfc	fsr2h,f,c
  5227  0015F2  5065               	movf	3941,w,c	;volatile
  5228  0015F4  0B0F               	andlw	15
  5229  0015F6  6EDF               	movwf	indf2,c
  5230                           
  5231                           ;CAN.c: 364: if(message->data_length > 8)
  5232  0015F8  EE20 F010          	lfsr	2,16
  5233  0015FC  500E               	movf	CAN_TakeFrame@message,w,c
  5234  0015FE  26D9               	addwf	fsr2l,f,c
  5235  001600  500F               	movf	CAN_TakeFrame@message+1,w,c
  5236  001602  22DA               	addwfc	fsr2h,f,c
  5237  001604  0E08               	movlw	8
  5238  001606  64DF               	cpfsgt	indf2,c
  5239  001608  D03A               	goto	l4915
  5240  00160A  D01E               	goto	l4909
  5241  00160C                     l4891:
  5242                           
  5243                           ;CAN.c: 370: RXB0CON = 0;
  5244  00160C  0E00               	movlw	0
  5245  00160E  6E60               	movwf	3936,c	;volatile
  5246                           
  5247                           ;CAN.c: 371: break;
  5248  001610  D034               	goto	l4911
  5249  001612                     l4893:
  5250                           
  5251                           ;CAN.c: 373: RXB1CON = 0;
  5252  001612  0E00               	movlw	0
  5253  001614  010F               	movlb	15	; () banked
  5254  001616  D00E               	goto	L2
  5255  001618                     l4895:
  5256                           
  5257                           ;CAN.c: 376: B0CON = 0;
  5258  001618  0E00               	movlw	0
  5259  00161A  010E               	movlb	14	; () banked
  5260  00161C  6F20               	movwf	32,b	;volatile
  5261                           
  5262                           ;CAN.c: 377: break;
  5263  00161E  D02D               	goto	l4911
  5264  001620                     l4897:
  5265                           
  5266                           ;CAN.c: 379: B1CON = 0;
  5267  001620  0E00               	movlw	0
  5268  001622  010E               	movlb	14	; () banked
  5269  001624  6F30               	movwf	48,b	;volatile
  5270                           
  5271                           ;CAN.c: 380: break;
  5272  001626  D029               	goto	l4911
  5273  001628                     l4899:
  5274                           
  5275                           ;CAN.c: 382: B2CON = 0;
  5276  001628  0E00               	movlw	0
  5277  00162A  010E               	movlb	14	; () banked
  5278  00162C  6F40               	movwf	64,b	;volatile
  5279                           
  5280                           ;CAN.c: 383: break;
  5281  00162E  D025               	goto	l4911
  5282  001630                     l4901:
  5283                           
  5284                           ;CAN.c: 385: B3CON = 0;
  5285  001630  0E00               	movlw	0
  5286  001632  010E               	movlb	14	; () banked
  5287  001634                     L2:
  5288  001634  6F50               	movwf	80,b	;volatile
  5289                           
  5290                           ;CAN.c: 386: break;
  5291  001636  D021               	goto	l4911
  5292  001638                     l4903:
  5293                           
  5294                           ;CAN.c: 388: B4CON = 0;
  5295  001638  0E00               	movlw	0
  5296  00163A  010E               	movlb	14	; () banked
  5297  00163C  6F60               	movwf	96,b	;volatile
  5298                           
  5299                           ;CAN.c: 389: break;
  5300  00163E  D01D               	goto	l4911
  5301  001640                     l4905:
  5302                           
  5303                           ;CAN.c: 391: B5CON = 0;
  5304  001640  0E00               	movlw	0
  5305  001642  010E               	movlb	14	; () banked
  5306  001644  6F70               	movwf	112,b	;volatile
  5307                           
  5308                           ;CAN.c: 392: break;
  5309  001646  D019               	goto	l4911
  5310  001648                     l4909:
  5311  001648  5013               	movf	CAN_TakeFrame@k,w,c
  5312                           
  5313                           ; Switch size 1, requested type "simple"
  5314                           ; Number of cases is 8, Range of values is 0 to 7
  5315                           ; switch strategies available:
  5316                           ; Name         Instructions Cycles
  5317                           ; simple_byte           25    13 (average)
  5318                           ;	Chosen strategy is simple_byte
  5319  00164A  0A00               	xorlw	0	; case 0
  5320  00164C  B4D8               	btfsc	status,2,c
  5321  00164E  D7DE               	goto	l4891
  5322  001650  0A01               	xorlw	1	; case 1
  5323  001652  B4D8               	btfsc	status,2,c
  5324  001654  D7DE               	goto	l4893
  5325  001656  0A03               	xorlw	3	; case 2
  5326  001658  B4D8               	btfsc	status,2,c
  5327  00165A  D7DE               	goto	l4895
  5328  00165C  0A01               	xorlw	1	; case 3
  5329  00165E  B4D8               	btfsc	status,2,c
  5330  001660  D7DF               	goto	l4897
  5331  001662  0A07               	xorlw	7	; case 4
  5332  001664  B4D8               	btfsc	status,2,c
  5333  001666  D7E0               	goto	l4899
  5334  001668  0A01               	xorlw	1	; case 5
  5335  00166A  B4D8               	btfsc	status,2,c
  5336  00166C  D7E1               	goto	l4901
  5337  00166E  0A03               	xorlw	3	; case 6
  5338  001670  B4D8               	btfsc	status,2,c
  5339  001672  D7E2               	goto	l4903
  5340  001674  0A01               	xorlw	1	; case 7
  5341  001676  B4D8               	btfsc	status,2,c
  5342  001678  D7E3               	goto	l4905
  5343  00167A                     l4911:
  5344                           
  5345                           ;CAN.c: 394: return FALSE;
  5346  00167A  0E00               	movlw	0
  5347  00167C  0012               	return	
  5348  00167E                     l4915:
  5349                           
  5350                           ;CAN.c: 395: };CAN.c: 396: CAN_MoveBuffIntoFrame(message->data, &RXB0D0);
  5351  00167E  0E08               	movlw	8
  5352  001680  240E               	addwf	CAN_TakeFrame@message,w,c
  5353  001682  6E06               	movwf	CAN_MoveBuffIntoFrame@Ram,c
  5354  001684  0E00               	movlw	0
  5355  001686  200F               	addwfc	CAN_TakeFrame@message+1,w,c
  5356  001688  6E07               	movwf	CAN_MoveBuffIntoFrame@Ram+1,c
  5357  00168A  0E66               	movlw	102
  5358  00168C  6E08               	movwf	CAN_MoveBuffIntoFrame@Buf,c
  5359  00168E  0E0F               	movlw	15
  5360  001690  6E09               	movwf	CAN_MoveBuffIntoFrame@Buf+1,c
  5361  001692  ECD2  F015         	call	_CAN_MoveBuffIntoFrame	;wreg free
  5362                           
  5363                           ;CAN.c: 397: }
  5364  001696  D027               	goto	l4937
  5365  001698                     l4917:
  5366                           
  5367                           ;CAN.c: 399: else;CAN.c: 400: {;CAN.c: 401: message->message_type=0x02;
  5368  001698  EE20 F001          	lfsr	2,1
  5369  00169C  500E               	movf	CAN_TakeFrame@message,w,c
  5370  00169E  26D9               	addwf	fsr2l,f,c
  5371  0016A0  500F               	movf	CAN_TakeFrame@message+1,w,c
  5372  0016A2  22DA               	addwfc	fsr2h,f,c
  5373  0016A4  0E02               	movlw	2
  5374  0016A6  6EDF               	movwf	indf2,c
  5375  0016A8  D01E               	goto	l4937
  5376  0016AA                     l4919:
  5377                           
  5378                           ;CAN.c: 407: RXB0CON = 0;
  5379  0016AA  0E00               	movlw	0
  5380  0016AC  6E60               	movwf	3936,c	;volatile
  5381                           
  5382                           ;CAN.c: 408: break;
  5383  0016AE  D034               	goto	l4939
  5384  0016B0                     l4921:
  5385                           
  5386                           ;CAN.c: 410: RXB1CON = 0;
  5387  0016B0  0E00               	movlw	0
  5388  0016B2  010F               	movlb	15	; () banked
  5389  0016B4  D00E               	goto	L3
  5390  0016B6                     l4923:
  5391                           
  5392                           ;CAN.c: 413: B0CON = 0;
  5393  0016B6  0E00               	movlw	0
  5394  0016B8  010E               	movlb	14	; () banked
  5395  0016BA  6F20               	movwf	32,b	;volatile
  5396                           
  5397                           ;CAN.c: 414: break;
  5398  0016BC  D02D               	goto	l4939
  5399  0016BE                     l4925:
  5400                           
  5401                           ;CAN.c: 416: B1CON = 0;
  5402  0016BE  0E00               	movlw	0
  5403  0016C0  010E               	movlb	14	; () banked
  5404  0016C2  6F30               	movwf	48,b	;volatile
  5405                           
  5406                           ;CAN.c: 417: break;
  5407  0016C4  D029               	goto	l4939
  5408  0016C6                     l4927:
  5409                           
  5410                           ;CAN.c: 419: B2CON = 0;
  5411  0016C6  0E00               	movlw	0
  5412  0016C8  010E               	movlb	14	; () banked
  5413  0016CA  6F40               	movwf	64,b	;volatile
  5414                           
  5415                           ;CAN.c: 420: break;
  5416  0016CC  D025               	goto	l4939
  5417  0016CE                     l4929:
  5418                           
  5419                           ;CAN.c: 422: B3CON = 0;
  5420  0016CE  0E00               	movlw	0
  5421  0016D0  010E               	movlb	14	; () banked
  5422  0016D2                     L3:
  5423  0016D2  6F50               	movwf	80,b	;volatile
  5424                           
  5425                           ;CAN.c: 423: break;
  5426  0016D4  D021               	goto	l4939
  5427  0016D6                     l4931:
  5428                           
  5429                           ;CAN.c: 425: B4CON = 0;
  5430  0016D6  0E00               	movlw	0
  5431  0016D8  010E               	movlb	14	; () banked
  5432  0016DA  6F60               	movwf	96,b	;volatile
  5433                           
  5434                           ;CAN.c: 426: break;
  5435  0016DC  D01D               	goto	l4939
  5436  0016DE                     l4933:
  5437                           
  5438                           ;CAN.c: 428: B5CON = 0;
  5439  0016DE  0E00               	movlw	0
  5440  0016E0  010E               	movlb	14	; () banked
  5441  0016E2  6F70               	movwf	112,b	;volatile
  5442                           
  5443                           ;CAN.c: 429: break;
  5444  0016E4  D019               	goto	l4939
  5445  0016E6                     l4937:
  5446  0016E6  5013               	movf	CAN_TakeFrame@k,w,c
  5447                           
  5448                           ; Switch size 1, requested type "simple"
  5449                           ; Number of cases is 8, Range of values is 0 to 7
  5450                           ; switch strategies available:
  5451                           ; Name         Instructions Cycles
  5452                           ; simple_byte           25    13 (average)
  5453                           ;	Chosen strategy is simple_byte
  5454  0016E8  0A00               	xorlw	0	; case 0
  5455  0016EA  B4D8               	btfsc	status,2,c
  5456  0016EC  D7DE               	goto	l4919
  5457  0016EE  0A01               	xorlw	1	; case 1
  5458  0016F0  B4D8               	btfsc	status,2,c
  5459  0016F2  D7DE               	goto	l4921
  5460  0016F4  0A03               	xorlw	3	; case 2
  5461  0016F6  B4D8               	btfsc	status,2,c
  5462  0016F8  D7DE               	goto	l4923
  5463  0016FA  0A01               	xorlw	1	; case 3
  5464  0016FC  B4D8               	btfsc	status,2,c
  5465  0016FE  D7DF               	goto	l4925
  5466  001700  0A07               	xorlw	7	; case 4
  5467  001702  B4D8               	btfsc	status,2,c
  5468  001704  D7E0               	goto	l4927
  5469  001706  0A01               	xorlw	1	; case 5
  5470  001708  B4D8               	btfsc	status,2,c
  5471  00170A  D7E1               	goto	l4929
  5472  00170C  0A03               	xorlw	3	; case 6
  5473  00170E  B4D8               	btfsc	status,2,c
  5474  001710  D7E2               	goto	l4931
  5475  001712  0A01               	xorlw	1	; case 7
  5476  001714  B4D8               	btfsc	status,2,c
  5477  001716  D7E3               	goto	l4933
  5478  001718                     l4939:
  5479                           
  5480                           ;CAN.c: 431: return TRUE;
  5481  001718  0E01               	movlw	1
  5482  00171A  0012               	return		;funcret
  5483  00171C                     __end_of_CAN_TakeFrame:
  5484                           	opt callstack 0
  5485                           
  5486 ;; *************** function ___awdiv *****************
  5487 ;; Defined at:
  5488 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awdiv.c"
  5489 ;; Parameters:    Size  Location     Type
  5490 ;;  dividend        2    5[COMRAM] int 
  5491 ;;  divisor         2    7[COMRAM] int 
  5492 ;; Auto vars:     Size  Location     Type
  5493 ;;  quotient        2   11[COMRAM] int 
  5494 ;;  sign            1   10[COMRAM] unsigned char 
  5495 ;;  counter         1    9[COMRAM] unsigned char 
  5496 ;; Return value:  Size  Location     Type
  5497 ;;                  2    5[COMRAM] int 
  5498 ;; Registers used:
  5499 ;;		wreg, status,2, status,0
  5500 ;; Tracked objects:
  5501 ;;		On entry : 0/0
  5502 ;;		On exit  : 0/0
  5503 ;;		Unchanged: 0/0
  5504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5505 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5506 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5508 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5509 ;;Total ram usage:        8 bytes
  5510 ;; Hardware stack levels used:    1
  5511 ;; Hardware stack levels required when called:    3
  5512 ;; This function calls:
  5513 ;;		Nothing
  5514 ;; This function is called by:
  5515 ;;		_CAN_TakeFrame
  5516 ;;		_FRAME_HandleCanFrame
  5517 ;; This function uses a non-reentrant model
  5518 ;;
  5519                           
  5520                           	psect	text32
  5521  002430                     __ptext32:
  5522                           	opt callstack 0
  5523  002430                     ___awdiv:
  5524                           	opt callstack 25
  5525                           
  5526                           ;incstack = 0
  5527  002430  0E00               	movlw	0
  5528  002432  6E0B               	movwf	___awdiv@sign,c
  5529  002434  AE09               	btfss	___awdiv@divisor+1,7,c
  5530  002436  D006               	goto	l4819
  5531  002438  6C08               	negf	___awdiv@divisor,c
  5532  00243A  1E09               	comf	___awdiv@divisor+1,f,c
  5533  00243C  B0D8               	btfsc	status,0,c
  5534  00243E  2A09               	incf	___awdiv@divisor+1,f,c
  5535  002440  0E01               	movlw	1
  5536  002442  6E0B               	movwf	___awdiv@sign,c
  5537  002444                     l4819:
  5538  002444  AE07               	btfss	___awdiv@dividend+1,7,c
  5539  002446  D006               	goto	l4825
  5540  002448  6C06               	negf	___awdiv@dividend,c
  5541  00244A  1E07               	comf	___awdiv@dividend+1,f,c
  5542  00244C  B0D8               	btfsc	status,0,c
  5543  00244E  2A07               	incf	___awdiv@dividend+1,f,c
  5544  002450  0E01               	movlw	1
  5545  002452  1A0B               	xorwf	___awdiv@sign,f,c
  5546  002454                     l4825:
  5547  002454  0E00               	movlw	0
  5548  002456  6E0D               	movwf	___awdiv@quotient+1,c
  5549  002458  0E00               	movlw	0
  5550  00245A  6E0C               	movwf	___awdiv@quotient,c
  5551  00245C  5008               	movf	___awdiv@divisor,w,c
  5552  00245E  1009               	iorwf	___awdiv@divisor+1,w,c
  5553  002460  B4D8               	btfsc	status,2,c
  5554  002462  D01C               	goto	l4847
  5555  002464  0E01               	movlw	1
  5556  002466  6E0A               	movwf	___awdiv@counter,c
  5557  002468  D004               	goto	l4833
  5558  00246A                     l4831:
  5559  00246A  90D8               	bcf	status,0,c
  5560  00246C  3608               	rlcf	___awdiv@divisor,f,c
  5561  00246E  3609               	rlcf	___awdiv@divisor+1,f,c
  5562  002470  2A0A               	incf	___awdiv@counter,f,c
  5563  002472                     l4833:
  5564  002472  AE09               	btfss	___awdiv@divisor+1,7,c
  5565  002474  D7FA               	goto	l4831
  5566  002476                     u4320:
  5567  002476  90D8               	bcf	status,0,c
  5568  002478  360C               	rlcf	___awdiv@quotient,f,c
  5569  00247A  360D               	rlcf	___awdiv@quotient+1,f,c
  5570  00247C  5008               	movf	___awdiv@divisor,w,c
  5571  00247E  5C06               	subwf	___awdiv@dividend,w,c
  5572  002480  5009               	movf	___awdiv@divisor+1,w,c
  5573  002482  5807               	subwfb	___awdiv@dividend+1,w,c
  5574  002484  A0D8               	btfss	status,0,c
  5575  002486  D005               	goto	l4843
  5576  002488  5008               	movf	___awdiv@divisor,w,c
  5577  00248A  5E06               	subwf	___awdiv@dividend,f,c
  5578  00248C  5009               	movf	___awdiv@divisor+1,w,c
  5579  00248E  5A07               	subwfb	___awdiv@dividend+1,f,c
  5580  002490  800C               	bsf	___awdiv@quotient,0,c
  5581  002492                     l4843:
  5582  002492  90D8               	bcf	status,0,c
  5583  002494  3209               	rrcf	___awdiv@divisor+1,f,c
  5584  002496  3208               	rrcf	___awdiv@divisor,f,c
  5585  002498  2E0A               	decfsz	___awdiv@counter,f,c
  5586  00249A  D7ED               	goto	u4320
  5587  00249C                     l4847:
  5588  00249C  500B               	movf	___awdiv@sign,w,c
  5589  00249E  B4D8               	btfsc	status,2,c
  5590  0024A0  D004               	goto	l4851
  5591  0024A2  6C0C               	negf	___awdiv@quotient,c
  5592  0024A4  1E0D               	comf	___awdiv@quotient+1,f,c
  5593  0024A6  B0D8               	btfsc	status,0,c
  5594  0024A8  2A0D               	incf	___awdiv@quotient+1,f,c
  5595  0024AA                     l4851:
  5596  0024AA  C00C  F006         	movff	___awdiv@quotient,?___awdiv
  5597  0024AE  C00D  F007         	movff	___awdiv@quotient+1,?___awdiv+1
  5598  0024B2  0012               	return		;funcret
  5599  0024B4                     __end_of___awdiv:
  5600                           	opt callstack 0
  5601                           
  5602 ;; *************** function _CAN_MoveBuffIntoFrame *****************
  5603 ;; Defined at:
  5604 ;;		line 233 in file "CAN.c"
  5605 ;; Parameters:    Size  Location     Type
  5606 ;;  Ram             2    5[COMRAM] PTR unsigned char 
  5607 ;;		 -> TRM_DataTransmition@canMessage(17), RXB0D0(1), 
  5608 ;;  Buf             2    7[COMRAM] PTR unsigned char 
  5609 ;;		 -> TRM_DataTransmition@canMessage(17), RXB0D0(1), 
  5610 ;; Auto vars:     Size  Location     Type
  5611 ;;  i               1    9[COMRAM] unsigned char 
  5612 ;; Return value:  Size  Location     Type
  5613 ;;                  1    wreg      void 
  5614 ;; Registers used:
  5615 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5616 ;; Tracked objects:
  5617 ;;		On entry : 0/0
  5618 ;;		On exit  : 0/0
  5619 ;;		Unchanged: 0/0
  5620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5621 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5622 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5624 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5625 ;;Total ram usage:        5 bytes
  5626 ;; Hardware stack levels used:    1
  5627 ;; Hardware stack levels required when called:    3
  5628 ;; This function calls:
  5629 ;;		Nothing
  5630 ;; This function is called by:
  5631 ;;		_CAN_SendFrame
  5632 ;;		_CAN_TakeFrame
  5633 ;; This function uses a non-reentrant model
  5634 ;;
  5635                           
  5636                           	psect	text33
  5637  002BA4                     __ptext33:
  5638                           	opt callstack 0
  5639  002BA4                     _CAN_MoveBuffIntoFrame:
  5640                           	opt callstack 24
  5641                           
  5642                           ;CAN.c: 235: BYTE i;;CAN.c: 236: for(i=0; i<8; ++i)
  5643                           
  5644                           ;incstack = 0
  5645  002BA4  0E00               	movlw	0
  5646  002BA6  6E0A               	movwf	CAN_MoveBuffIntoFrame@i,c
  5647  002BA8                     l4257:
  5648                           
  5649                           ;CAN.c: 237: {;CAN.c: 238: Ram[i]=(*(Buf+i));
  5650  002BA8  500A               	movf	CAN_MoveBuffIntoFrame@i,w,c
  5651  002BAA  2408               	addwf	CAN_MoveBuffIntoFrame@Buf,w,c
  5652  002BAC  6ED9               	movwf	fsr2l,c
  5653  002BAE  0E00               	movlw	0
  5654  002BB0  2009               	addwfc	CAN_MoveBuffIntoFrame@Buf+1,w,c
  5655  002BB2  6EDA               	movwf	fsr2h,c
  5656  002BB4  500A               	movf	CAN_MoveBuffIntoFrame@i,w,c
  5657  002BB6  2406               	addwf	CAN_MoveBuffIntoFrame@Ram,w,c
  5658  002BB8  6EE1               	movwf	fsr1l,c
  5659  002BBA  0E00               	movlw	0
  5660  002BBC  2007               	addwfc	CAN_MoveBuffIntoFrame@Ram+1,w,c
  5661  002BBE  6EE2               	movwf	fsr1h,c
  5662  002BC0  CFDF FFE7          	movff	indf2,indf1
  5663  002BC4  2A0A               	incf	CAN_MoveBuffIntoFrame@i,f,c
  5664  002BC6  0E07               	movlw	7
  5665  002BC8  640A               	cpfsgt	CAN_MoveBuffIntoFrame@i,c
  5666  002BCA  D7EE               	goto	l4257
  5667  002BCC  0012               	return	
  5668  002BCE                     __end_of_CAN_MoveBuffIntoFrame:
  5669                           	opt callstack 0
  5670                           
  5671 ;; *************** function _TMR1_Update_flag_Set *****************
  5672 ;; Defined at:
  5673 ;;		line 32 in file "TMR1.c"
  5674 ;; Parameters:    Size  Location     Type
  5675 ;;  a               2    5[COMRAM] unsigned int 
  5676 ;; Auto vars:     Size  Location     Type
  5677 ;;		None
  5678 ;; Return value:  Size  Location     Type
  5679 ;;                  1    wreg      void 
  5680 ;; Registers used:
  5681 ;;		None
  5682 ;; Tracked objects:
  5683 ;;		On entry : 0/0
  5684 ;;		On exit  : 0/0
  5685 ;;		Unchanged: 0/0
  5686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5687 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5690 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5691 ;;Total ram usage:        2 bytes
  5692 ;; Hardware stack levels used:    1
  5693 ;; Hardware stack levels required when called:    3
  5694 ;; This function calls:
  5695 ;;		Nothing
  5696 ;; This function is called by:
  5697 ;;		_main
  5698 ;; This function uses a non-reentrant model
  5699 ;;
  5700                           
  5701                           	psect	text34
  5702  002D28                     __ptext34:
  5703                           	opt callstack 0
  5704  002D28                     _TMR1_Update_flag_Set:
  5705                           	opt callstack 27
  5706                           
  5707                           ;TMR1.c: 34: TMR1_Update_flag = a;
  5708                           
  5709                           ;incstack = 0
  5710  002D28  C006  F0D6         	movff	TMR1_Update_flag_Set@a,_TMR1_Update_flag
  5711  002D2C  C007  F0D7         	movff	TMR1_Update_flag_Set@a+1,_TMR1_Update_flag+1
  5712  002D30  0012               	return		;funcret
  5713  002D32                     __end_of_TMR1_Update_flag_Set:
  5714                           	opt callstack 0
  5715                           
  5716 ;; *************** function _TMR1_Update_flag_Get *****************
  5717 ;; Defined at:
  5718 ;;		line 47 in file "TMR1.c"
  5719 ;; Parameters:    Size  Location     Type
  5720 ;;		None
  5721 ;; Auto vars:     Size  Location     Type
  5722 ;;		None
  5723 ;; Return value:  Size  Location     Type
  5724 ;;                  2    5[COMRAM] unsigned int 
  5725 ;; Registers used:
  5726 ;;		None
  5727 ;; Tracked objects:
  5728 ;;		On entry : 0/0
  5729 ;;		On exit  : 0/0
  5730 ;;		Unchanged: 0/0
  5731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5732 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5735 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5736 ;;Total ram usage:        2 bytes
  5737 ;; Hardware stack levels used:    1
  5738 ;; Hardware stack levels required when called:    3
  5739 ;; This function calls:
  5740 ;;		Nothing
  5741 ;; This function is called by:
  5742 ;;		_main
  5743 ;; This function uses a non-reentrant model
  5744 ;;
  5745                           
  5746                           	psect	text35
  5747  002D32                     __ptext35:
  5748                           	opt callstack 0
  5749  002D32                     _TMR1_Update_flag_Get:
  5750                           	opt callstack 27
  5751                           
  5752                           ;TMR1.c: 49: return TMR1_Update_flag;
  5753                           
  5754                           ;incstack = 0
  5755  002D32  C0D6  F006         	movff	_TMR1_Update_flag,?_TMR1_Update_flag_Get
  5756  002D36  C0D7  F007         	movff	_TMR1_Update_flag+1,?_TMR1_Update_flag_Get+1
  5757  002D3A  0012               	return		;funcret
  5758  002D3C                     __end_of_TMR1_Update_flag_Get:
  5759                           	opt callstack 0
  5760                           
  5761 ;; *************** function _RADAR_Use *****************
  5762 ;; Defined at:
  5763 ;;		line 16 in file "RADARMETADATA.c"
  5764 ;; Parameters:    Size  Location     Type
  5765 ;;		None
  5766 ;; Auto vars:     Size  Location     Type
  5767 ;;		None
  5768 ;; Return value:  Size  Location     Type
  5769 ;;                  1    wreg      void 
  5770 ;; Registers used:
  5771 ;;		None
  5772 ;; Tracked objects:
  5773 ;;		On entry : 0/0
  5774 ;;		On exit  : 0/0
  5775 ;;		Unchanged: 0/0
  5776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5781 ;;Total ram usage:        0 bytes
  5782 ;; Hardware stack levels used:    1
  5783 ;; Hardware stack levels required when called:    3
  5784 ;; This function calls:
  5785 ;;		Nothing
  5786 ;; This function is called by:
  5787 ;;		_main
  5788 ;; This function uses a non-reentrant model
  5789 ;;
  5790                           
  5791                           	psect	text36
  5792  002D08                     __ptext36:
  5793                           	opt callstack 0
  5794  002D08                     _RADAR_Use:
  5795                           	opt callstack 27
  5796                           
  5797                           ;RADARMETADATA.c: 18: if(Flagi.pomiarTla == 1)
  5798                           
  5799                           ;incstack = 0
  5800  002D08  0100               	movlb	0	; () banked
  5801  002D0A  A1C6               	btfss	_Flagi& (0+255),0,b
  5802  002D0C  0012               	return	
  5803                           
  5804                           ; BSR set to: 0
  5805                           ;RADARMETADATA.c: 19: {;RADARMETADATA.c: 20: Flagi.detekcja = 0;
  5806  002D0E  93C6               	bcf	_Flagi& (0+255),1,b
  5807                           
  5808                           ;RADARMETADATA.c: 21: Flagi.pomiarTla = 0;
  5809  002D10  91C6               	bcf	_Flagi& (0+255),0,b
  5810                           
  5811                           ; BSR set to: 0
  5812  002D12  0012               	return		;funcret
  5813  002D14                     __end_of_RADAR_Use:
  5814                           	opt callstack 0
  5815                           
  5816 ;; *************** function _LED_Update *****************
  5817 ;; Defined at:
  5818 ;;		line 148 in file "LED.c"
  5819 ;; Parameters:    Size  Location     Type
  5820 ;;		None
  5821 ;; Auto vars:     Size  Location     Type
  5822 ;;		None
  5823 ;; Return value:  Size  Location     Type
  5824 ;;                  1    wreg      unsigned char 
  5825 ;; Registers used:
  5826 ;;		wreg, status,2, status,0, cstack
  5827 ;; Tracked objects:
  5828 ;;		On entry : 0/0
  5829 ;;		On exit  : 0/0
  5830 ;;		Unchanged: 0/0
  5831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5835 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5836 ;;Total ram usage:        0 bytes
  5837 ;; Hardware stack levels used:    1
  5838 ;; Hardware stack levels required when called:    5
  5839 ;; This function calls:
  5840 ;;		_LED_Clear
  5841 ;;		_LED_Control
  5842 ;;		_LED_Left
  5843 ;;		_LED_Light_Pos
  5844 ;;		_LED_Right
  5845 ;; This function is called by:
  5846 ;;		_main
  5847 ;; This function uses a non-reentrant model
  5848 ;;
  5849                           
  5850                           	psect	text37
  5851  0023A0                     __ptext37:
  5852                           	opt callstack 0
  5853  0023A0                     _LED_Update:
  5854                           	opt callstack 25
  5855                           
  5856                           ;LED.c: 150: static LED_RGA_type Red = RED;;LED.c: 151: static LED_RGA_type Green = GREE
      +                          N;;LED.c: 152: static UINT pos1 = 0b0000000001;;LED.c: 153: static UINT pos2 = 0b0000000
      +                          001;;LED.c: 154: static BOOL laststat = 20;;LED.c: 157: if(LOCK == 0)
  5857                           
  5858                           ; BSR set to: 0
  5859                           ;incstack = 0
  5860  0023A0  502B               	movf	_LOCK,w,c
  5861  0023A2  A4D8               	btfss	status,2,c
  5862  0023A4  D01C               	goto	l5067
  5863                           
  5864                           ;LED.c: 158: {;LED.c: 159: if(laststat>0)
  5865  0023A6  5046               	movf	LED_Update@laststat,w,c
  5866  0023A8  B4D8               	btfsc	status,2,c
  5867  0023AA  D014               	goto	l5063
  5868                           
  5869                           ;LED.c: 160: {;LED.c: 161: LED_Control(RED,0b0000000000);
  5870  0023AC  0E00               	movlw	0
  5871  0023AE  6E07               	movwf	LED_Control@diode+1,c
  5872  0023B0  0E00               	movlw	0
  5873  0023B2  6E06               	movwf	LED_Control@diode,c
  5874  0023B4  0E00               	movlw	0
  5875  0023B6  EC43  F00D         	call	_LED_Control
  5876                           
  5877                           ;LED.c: 162: LED_Light_Pos(Green,pos2,Fulfillment_Lvl);
  5878  0023BA  C040  F00D         	movff	LED_Update@pos2,LED_Light_Pos@pos
  5879  0023BE  C041  F00E         	movff	LED_Update@pos2+1,LED_Light_Pos@pos+1
  5880  0023C2  C044  F00F         	movff	_Fulfillment_Lvl,LED_Light_Pos@fulfillment
  5881  0023C6  C045  F010         	movff	_Fulfillment_Lvl+1,LED_Light_Pos@fulfillment+1
  5882  0023CA  5047               	movf	LED_Update@Green,w,c
  5883  0023CC  ECDE  F010         	call	_LED_Light_Pos
  5884                           
  5885                           ;LED.c: 163: laststat--;
  5886  0023D0  0646               	decf	LED_Update@laststat,f,c
  5887                           
  5888                           ;LED.c: 164: }
  5889  0023D2  D019               	goto	l5071
  5890  0023D4                     l5063:
  5891                           
  5892                           ;LED.c: 165: else;LED.c: 166: {;LED.c: 167: laststat = 0;
  5893  0023D4  0E00               	movlw	0
  5894  0023D6  6E46               	movwf	LED_Update@laststat,c
  5895                           
  5896                           ;LED.c: 168: LED_Clear();
  5897  0023D8  EC3D  F016         	call	_LED_Clear	;wreg free
  5898  0023DC  D014               	goto	l5071
  5899  0023DE                     l5067:
  5900                           
  5901                           ;LED.c: 172: else;LED.c: 173: {;LED.c: 174: LED_Control(Green,0b0000000000);
  5902  0023DE  0E00               	movlw	0
  5903  0023E0  6E07               	movwf	LED_Control@diode+1,c
  5904  0023E2  0E00               	movlw	0
  5905  0023E4  6E06               	movwf	LED_Control@diode,c
  5906  0023E6  5047               	movf	LED_Update@Green,w,c
  5907  0023E8  EC43  F00D         	call	_LED_Control
  5908                           
  5909                           ;LED.c: 175: LED_Light_Pos(RED,pos1,Fulfillment_Lvl);
  5910  0023EC  C042  F00D         	movff	LED_Update@pos1,LED_Light_Pos@pos
  5911  0023F0  C043  F00E         	movff	LED_Update@pos1+1,LED_Light_Pos@pos+1
  5912  0023F4  C044  F00F         	movff	_Fulfillment_Lvl,LED_Light_Pos@fulfillment
  5913  0023F8  C045  F010         	movff	_Fulfillment_Lvl+1,LED_Light_Pos@fulfillment+1
  5914  0023FC  0E00               	movlw	0
  5915  0023FE  ECDE  F010         	call	_LED_Light_Pos
  5916                           
  5917                           ;LED.c: 176: laststat=100;
  5918  002402  0E64               	movlw	100
  5919  002404  6E46               	movwf	LED_Update@laststat,c
  5920  002406                     l5071:
  5921                           
  5922                           ;LED.c: 177: };LED.c: 178: pos1 = LED_Right(pos1);
  5923  002406  C042  F006         	movff	LED_Update@pos1,LED_Right@a
  5924  00240A  C043  F007         	movff	LED_Update@pos1+1,LED_Right@a+1
  5925  00240E  ECB2  F014         	call	_LED_Right	;wreg free
  5926  002412  C006  F042         	movff	?_LED_Right,LED_Update@pos1
  5927  002416  C007  F043         	movff	?_LED_Right+1,LED_Update@pos1+1
  5928                           
  5929                           ;LED.c: 179: pos2 = LED_Left(pos2);
  5930  00241A  C040  F006         	movff	LED_Update@pos2,LED_Left@a
  5931  00241E  C041  F007         	movff	LED_Update@pos2+1,LED_Left@a+1
  5932  002422  ECD8  F014         	call	_LED_Left	;wreg free
  5933  002426  C006  F040         	movff	?_LED_Left,LED_Update@pos2
  5934  00242A  C007  F041         	movff	?_LED_Left+1,LED_Update@pos2+1
  5935  00242E  0012               	return		;funcret
  5936  002430                     __end_of_LED_Update:
  5937                           	opt callstack 0
  5938                           
  5939 ;; *************** function _LED_Light_Pos *****************
  5940 ;; Defined at:
  5941 ;;		line 251 in file "LED.c"
  5942 ;; Parameters:    Size  Location     Type
  5943 ;;  color           1    wreg     enum E10511
  5944 ;;  pos             2   12[COMRAM] unsigned int 
  5945 ;;  fulfillment     2   14[COMRAM] unsigned int 
  5946 ;; Auto vars:     Size  Location     Type
  5947 ;;  color           1   16[COMRAM] enum E10511
  5948 ;;  flage           2   21[COMRAM] unsigned int 
  5949 ;;  pos2            2   19[COMRAM] unsigned int 
  5950 ;;  LED_array       2   17[COMRAM] unsigned int 
  5951 ;; Return value:  Size  Location     Type
  5952 ;;                  2   12[COMRAM] unsigned int 
  5953 ;; Registers used:
  5954 ;;		wreg, status,2, status,0, cstack
  5955 ;; Tracked objects:
  5956 ;;		On entry : 0/0
  5957 ;;		On exit  : 0/0
  5958 ;;		Unchanged: 0/0
  5959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5960 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5961 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5963 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5964 ;;Total ram usage:       11 bytes
  5965 ;; Hardware stack levels used:    1
  5966 ;; Hardware stack levels required when called:    4
  5967 ;; This function calls:
  5968 ;;		_LED_Control
  5969 ;;		_LED_Left
  5970 ;;		_LED_Right
  5971 ;;		___lwdiv
  5972 ;; This function is called by:
  5973 ;;		_LED_Update
  5974 ;; This function uses a non-reentrant model
  5975 ;;
  5976                           
  5977                           	psect	text38
  5978  0021BC                     __ptext38:
  5979                           	opt callstack 0
  5980  0021BC                     _LED_Light_Pos:
  5981                           	opt callstack 25
  5982                           
  5983                           ;incstack = 0
  5984                           ;LED_Light_Pos@color stored from wreg
  5985  0021BC  6E11               	movwf	LED_Light_Pos@color,c
  5986                           
  5987                           ;LED.c: 253: UINT pos2 =pos;
  5988  0021BE  C00D  F014         	movff	LED_Light_Pos@pos,LED_Light_Pos@pos2
  5989  0021C2  C00E  F015         	movff	LED_Light_Pos@pos+1,LED_Light_Pos@pos2+1
  5990                           
  5991                           ;LED.c: 254: UINT LED_array = 0b0000000000;
  5992  0021C6  0E00               	movlw	0
  5993  0021C8  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  5994  0021CA  0E00               	movlw	0
  5995  0021CC  6E12               	movwf	LED_Light_Pos@LED_array,c
  5996                           
  5997                           ;LED.c: 255: UINT flage = fulfillment/10;
  5998  0021CE  C00F  F006         	movff	LED_Light_Pos@fulfillment,___lwdiv@dividend
  5999  0021D2  C010  F007         	movff	LED_Light_Pos@fulfillment+1,___lwdiv@dividend+1
  6000  0021D6  0E00               	movlw	0
  6001  0021D8  6E09               	movwf	___lwdiv@divisor+1,c
  6002  0021DA  0E0A               	movlw	10
  6003  0021DC  6E08               	movwf	___lwdiv@divisor,c
  6004  0021DE  EC3B  F014         	call	___lwdiv	;wreg free
  6005  0021E2  C006  F016         	movff	?___lwdiv,LED_Light_Pos@flage
  6006  0021E6  C007  F017         	movff	?___lwdiv+1,LED_Light_Pos@flage+1
  6007                           
  6008                           ;LED.c: 256: if(color == RED)
  6009  0021EA  5011               	movf	LED_Light_Pos@color,w,c
  6010  0021EC  B4D8               	btfsc	status,2,c
  6011  0021EE  D017               	goto	l4969
  6012  0021F0  D031               	goto	l4977
  6013  0021F2                     l4963:
  6014                           
  6015                           ;LED.c: 259: {;LED.c: 260: LED_array = pos2|LED_array;
  6016  0021F2  5012               	movf	LED_Light_Pos@LED_array,w,c
  6017  0021F4  1014               	iorwf	LED_Light_Pos@pos2,w,c
  6018  0021F6  6E12               	movwf	LED_Light_Pos@LED_array,c
  6019  0021F8  5013               	movf	LED_Light_Pos@LED_array+1,w,c
  6020  0021FA  1015               	iorwf	LED_Light_Pos@pos2+1,w,c
  6021  0021FC  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  6022                           
  6023                           ;LED.c: 261: pos2 = LED_Left(pos2);
  6024  0021FE  C014  F006         	movff	LED_Light_Pos@pos2,LED_Left@a
  6025  002202  C015  F007         	movff	LED_Light_Pos@pos2+1,LED_Left@a+1
  6026  002206  ECD8  F014         	call	_LED_Left	;wreg free
  6027  00220A  C006  F014         	movff	?_LED_Left,LED_Light_Pos@pos2
  6028  00220E  C007  F015         	movff	?_LED_Left+1,LED_Light_Pos@pos2+1
  6029                           
  6030                           ;LED.c: 262: flage = flage - 1;
  6031  002212  0EFF               	movlw	255
  6032  002214  2416               	addwf	LED_Light_Pos@flage,w,c
  6033  002216  6E16               	movwf	LED_Light_Pos@flage,c
  6034  002218  0EFF               	movlw	255
  6035  00221A  2017               	addwfc	LED_Light_Pos@flage+1,w,c
  6036  00221C  6E17               	movwf	LED_Light_Pos@flage+1,c
  6037  00221E                     l4969:
  6038  00221E  5016               	movf	LED_Light_Pos@flage,w,c
  6039  002220  1017               	iorwf	LED_Light_Pos@flage+1,w,c
  6040  002222  B4D8               	btfsc	status,2,c
  6041  002224  D01B               	goto	u4430
  6042  002226  D7E5               	goto	l4963
  6043  002228                     l4971:
  6044                           
  6045                           ;LED.c: 268: {;LED.c: 269: LED_array = pos2|LED_array;
  6046  002228  5012               	movf	LED_Light_Pos@LED_array,w,c
  6047  00222A  1014               	iorwf	LED_Light_Pos@pos2,w,c
  6048  00222C  6E12               	movwf	LED_Light_Pos@LED_array,c
  6049  00222E  5013               	movf	LED_Light_Pos@LED_array+1,w,c
  6050  002230  1015               	iorwf	LED_Light_Pos@pos2+1,w,c
  6051  002232  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  6052                           
  6053                           ;LED.c: 270: pos2 = LED_Right(pos2);
  6054  002234  C014  F006         	movff	LED_Light_Pos@pos2,LED_Right@a
  6055  002238  C015  F007         	movff	LED_Light_Pos@pos2+1,LED_Right@a+1
  6056  00223C  ECB2  F014         	call	_LED_Right	;wreg free
  6057  002240  C006  F014         	movff	?_LED_Right,LED_Light_Pos@pos2
  6058  002244  C007  F015         	movff	?_LED_Right+1,LED_Light_Pos@pos2+1
  6059                           
  6060                           ;LED.c: 271: flage = flage - 1;
  6061  002248  0EFF               	movlw	255
  6062  00224A  2416               	addwf	LED_Light_Pos@flage,w,c
  6063  00224C  6E16               	movwf	LED_Light_Pos@flage,c
  6064  00224E  0EFF               	movlw	255
  6065  002250  2017               	addwfc	LED_Light_Pos@flage+1,w,c
  6066  002252  6E17               	movwf	LED_Light_Pos@flage+1,c
  6067  002254                     l4977:
  6068  002254  5016               	movf	LED_Light_Pos@flage,w,c
  6069  002256  1017               	iorwf	LED_Light_Pos@flage+1,w,c
  6070  002258  A4D8               	btfss	status,2,c
  6071  00225A  D7E6               	goto	l4971
  6072  00225C                     u4430:
  6073                           
  6074                           ;LED.c: 272: };LED.c: 273: };LED.c: 274: LED_Control(color, LED_array);
  6075  00225C  C012  F006         	movff	LED_Light_Pos@LED_array,LED_Control@diode
  6076  002260  C013  F007         	movff	LED_Light_Pos@LED_array+1,LED_Control@diode+1
  6077  002264  5011               	movf	LED_Light_Pos@color,w,c
  6078  002266  EC43  F00D         	call	_LED_Control
  6079  00226A  0012               	return		;funcret
  6080  00226C                     __end_of_LED_Light_Pos:
  6081                           	opt callstack 0
  6082                           
  6083 ;; *************** function ___lwdiv *****************
  6084 ;; Defined at:
  6085 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
  6086 ;; Parameters:    Size  Location     Type
  6087 ;;  dividend        2    5[COMRAM] unsigned int 
  6088 ;;  divisor         2    7[COMRAM] unsigned int 
  6089 ;; Auto vars:     Size  Location     Type
  6090 ;;  quotient        2   10[COMRAM] unsigned int 
  6091 ;;  counter         1    9[COMRAM] unsigned char 
  6092 ;; Return value:  Size  Location     Type
  6093 ;;                  2    5[COMRAM] unsigned int 
  6094 ;; Registers used:
  6095 ;;		wreg, status,2, status,0
  6096 ;; Tracked objects:
  6097 ;;		On entry : 0/0
  6098 ;;		On exit  : 0/0
  6099 ;;		Unchanged: 0/0
  6100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6101 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6102 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6104 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6105 ;;Total ram usage:        7 bytes
  6106 ;; Hardware stack levels used:    1
  6107 ;; Hardware stack levels required when called:    3
  6108 ;; This function calls:
  6109 ;;		Nothing
  6110 ;; This function is called by:
  6111 ;;		_LED_Light_Pos
  6112 ;;		_FRAME_Plot
  6113 ;; This function uses a non-reentrant model
  6114 ;;
  6115                           
  6116                           	psect	text39
  6117  002876                     __ptext39:
  6118                           	opt callstack 0
  6119  002876                     ___lwdiv:
  6120                           	opt callstack 24
  6121                           
  6122                           ;incstack = 0
  6123  002876  0E00               	movlw	0
  6124  002878  6E0C               	movwf	___lwdiv@quotient+1,c
  6125  00287A  0E00               	movlw	0
  6126  00287C  6E0B               	movwf	___lwdiv@quotient,c
  6127  00287E  5008               	movf	___lwdiv@divisor,w,c
  6128  002880  1009               	iorwf	___lwdiv@divisor+1,w,c
  6129  002882  B4D8               	btfsc	status,2,c
  6130  002884  D01C               	goto	l1483
  6131  002886  0E01               	movlw	1
  6132  002888  6E0A               	movwf	___lwdiv@counter,c
  6133  00288A  D004               	goto	l4571
  6134  00288C                     l4569:
  6135  00288C  90D8               	bcf	status,0,c
  6136  00288E  3608               	rlcf	___lwdiv@divisor,f,c
  6137  002890  3609               	rlcf	___lwdiv@divisor+1,f,c
  6138  002892  2A0A               	incf	___lwdiv@counter,f,c
  6139  002894                     l4571:
  6140  002894  AE09               	btfss	___lwdiv@divisor+1,7,c
  6141  002896  D7FA               	goto	l4569
  6142  002898                     u3970:
  6143  002898  90D8               	bcf	status,0,c
  6144  00289A  360B               	rlcf	___lwdiv@quotient,f,c
  6145  00289C  360C               	rlcf	___lwdiv@quotient+1,f,c
  6146  00289E  5008               	movf	___lwdiv@divisor,w,c
  6147  0028A0  5C06               	subwf	___lwdiv@dividend,w,c
  6148  0028A2  5009               	movf	___lwdiv@divisor+1,w,c
  6149  0028A4  5807               	subwfb	___lwdiv@dividend+1,w,c
  6150  0028A6  A0D8               	btfss	status,0,c
  6151  0028A8  D005               	goto	l4581
  6152  0028AA  5008               	movf	___lwdiv@divisor,w,c
  6153  0028AC  5E06               	subwf	___lwdiv@dividend,f,c
  6154  0028AE  5009               	movf	___lwdiv@divisor+1,w,c
  6155  0028B0  5A07               	subwfb	___lwdiv@dividend+1,f,c
  6156  0028B2  800B               	bsf	___lwdiv@quotient,0,c
  6157  0028B4                     l4581:
  6158  0028B4  90D8               	bcf	status,0,c
  6159  0028B6  3209               	rrcf	___lwdiv@divisor+1,f,c
  6160  0028B8  3208               	rrcf	___lwdiv@divisor,f,c
  6161  0028BA  2E0A               	decfsz	___lwdiv@counter,f,c
  6162  0028BC  D7ED               	goto	u3970
  6163  0028BE                     l1483:
  6164  0028BE  C00B  F006         	movff	___lwdiv@quotient,?___lwdiv
  6165  0028C2  C00C  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  6166  0028C6  0012               	return		;funcret
  6167  0028C8                     __end_of___lwdiv:
  6168                           	opt callstack 0
  6169                           
  6170 ;; *************** function _LED_Right *****************
  6171 ;; Defined at:
  6172 ;;		line 195 in file "LED.c"
  6173 ;; Parameters:    Size  Location     Type
  6174 ;;  a               2    5[COMRAM] unsigned int 
  6175 ;; Auto vars:     Size  Location     Type
  6176 ;;  b               2    9[COMRAM] unsigned int 
  6177 ;; Return value:  Size  Location     Type
  6178 ;;                  2    5[COMRAM] unsigned int 
  6179 ;; Registers used:
  6180 ;;		wreg, status,2, status,0
  6181 ;; Tracked objects:
  6182 ;;		On entry : 0/0
  6183 ;;		On exit  : 0/0
  6184 ;;		Unchanged: 0/0
  6185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6186 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6187 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6188 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6189 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6190 ;;Total ram usage:        6 bytes
  6191 ;; Hardware stack levels used:    1
  6192 ;; Hardware stack levels required when called:    3
  6193 ;; This function calls:
  6194 ;;		Nothing
  6195 ;; This function is called by:
  6196 ;;		_LED_Update
  6197 ;;		_LED_Light_Pos
  6198 ;; This function uses a non-reentrant model
  6199 ;;
  6200                           
  6201                           	psect	text40
  6202  002964                     __ptext40:
  6203                           	opt callstack 0
  6204  002964                     _LED_Right:
  6205                           	opt callstack 26
  6206                           
  6207                           ;LED.c: 197: if ((a & 0b0000000001) == 0b0000000001)
  6208                           
  6209                           ;incstack = 0
  6210  002964  A006               	btfss	LED_Right@a,0,c
  6211  002966  D018               	goto	l3511
  6212                           
  6213                           ;LED.c: 198: {;LED.c: 199: UINT b = a & 0b1111111110;
  6214  002968  0EFE               	movlw	254
  6215  00296A  1406               	andwf	LED_Right@a,w,c
  6216  00296C  6E0A               	movwf	LED_Right@b,c
  6217  00296E  0E03               	movlw	3
  6218  002970  1407               	andwf	LED_Right@a+1,w,c
  6219  002972  6E0B               	movwf	LED_Right@b+1,c
  6220                           
  6221                           ;LED.c: 200: b = b >> 1;
  6222  002974  90D8               	bcf	status,0,c
  6223  002976  300B               	rrcf	LED_Right@b+1,w,c
  6224  002978  6E08               	movwf	??_LED_Right& (0+255),c
  6225  00297A  300A               	rrcf	LED_Right@b,w,c
  6226  00297C  6E0A               	movwf	LED_Right@b,c
  6227  00297E  C008  F00B         	movff	??_LED_Right,LED_Right@b+1
  6228                           
  6229                           ;LED.c: 201: b = b | 0b1000000000;
  6230  002982  0E00               	movlw	0
  6231  002984  100A               	iorwf	LED_Right@b,w,c
  6232  002986  6E0A               	movwf	LED_Right@b,c
  6233  002988  0E02               	movlw	2
  6234  00298A  100B               	iorwf	LED_Right@b+1,w,c
  6235  00298C  6E0B               	movwf	LED_Right@b+1,c
  6236                           
  6237                           ;LED.c: 202: return b;
  6238  00298E  C00A  F006         	movff	LED_Right@b,?_LED_Right
  6239  002992  C00B  F007         	movff	LED_Right@b+1,?_LED_Right+1
  6240  002996  0012               	return	
  6241  002998                     l3511:
  6242                           
  6243                           ;LED.c: 204: else;LED.c: 205: {;LED.c: 206: a =a >> 1;
  6244  002998  90D8               	bcf	status,0,c
  6245  00299A  3007               	rrcf	LED_Right@a+1,w,c
  6246  00299C  6E08               	movwf	??_LED_Right& (0+255),c
  6247  00299E  3006               	rrcf	LED_Right@a,w,c
  6248  0029A0  6E06               	movwf	LED_Right@a,c
  6249  0029A2  C008  F007         	movff	??_LED_Right,LED_Right@a+1
  6250                           
  6251                           ;LED.c: 207: return a;
  6252  0029A6  C006  F006         	movff	LED_Right@a,?_LED_Right
  6253  0029AA  C007  F007         	movff	LED_Right@a+1,?_LED_Right+1
  6254  0029AE  0012               	return		;funcret
  6255  0029B0                     __end_of_LED_Right:
  6256                           	opt callstack 0
  6257                           
  6258 ;; *************** function _LED_Left *****************
  6259 ;; Defined at:
  6260 ;;		line 222 in file "LED.c"
  6261 ;; Parameters:    Size  Location     Type
  6262 ;;  a               2    5[COMRAM] unsigned int 
  6263 ;; Auto vars:     Size  Location     Type
  6264 ;;  b               2    7[COMRAM] unsigned int 
  6265 ;; Return value:  Size  Location     Type
  6266 ;;                  2    5[COMRAM] unsigned int 
  6267 ;; Registers used:
  6268 ;;		wreg, status,2, status,0
  6269 ;; Tracked objects:
  6270 ;;		On entry : 0/0
  6271 ;;		On exit  : 0/0
  6272 ;;		Unchanged: 0/0
  6273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6274 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6275 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6277 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6278 ;;Total ram usage:        4 bytes
  6279 ;; Hardware stack levels used:    1
  6280 ;; Hardware stack levels required when called:    3
  6281 ;; This function calls:
  6282 ;;		Nothing
  6283 ;; This function is called by:
  6284 ;;		_LED_Update
  6285 ;;		_LED_Light_Pos
  6286 ;; This function uses a non-reentrant model
  6287 ;;
  6288                           
  6289                           	psect	text41
  6290  0029B0                     __ptext41:
  6291                           	opt callstack 0
  6292  0029B0                     _LED_Left:
  6293                           	opt callstack 25
  6294                           
  6295                           ;LED.c: 224: if ((a & 0b1000000000) == 0b1000000000)
  6296                           
  6297                           ;incstack = 0
  6298  0029B0  A207               	btfss	LED_Left@a+1,1,c
  6299  0029B2  D015               	goto	l3527
  6300                           
  6301                           ;LED.c: 225: {;LED.c: 226: UINT b = a & 0b0111111111;
  6302  0029B4  0EFF               	movlw	255
  6303  0029B6  1406               	andwf	LED_Left@a,w,c
  6304  0029B8  6E08               	movwf	LED_Left@b,c
  6305  0029BA  0E01               	movlw	1
  6306  0029BC  1407               	andwf	LED_Left@a+1,w,c
  6307  0029BE  6E09               	movwf	LED_Left@b+1,c
  6308                           
  6309                           ;LED.c: 227: b = b << 1;
  6310  0029C0  90D8               	bcf	status,0,c
  6311  0029C2  3408               	rlcf	LED_Left@b,w,c
  6312  0029C4  6E08               	movwf	LED_Left@b,c
  6313  0029C6  3409               	rlcf	LED_Left@b+1,w,c
  6314  0029C8  6E09               	movwf	LED_Left@b+1,c
  6315                           
  6316                           ;LED.c: 228: b = b | 0b0000000001;
  6317  0029CA  0E01               	movlw	1
  6318  0029CC  1008               	iorwf	LED_Left@b,w,c
  6319  0029CE  6E08               	movwf	LED_Left@b,c
  6320  0029D0  5009               	movf	LED_Left@b+1,w,c
  6321  0029D2  6E09               	movwf	LED_Left@b+1,c
  6322                           
  6323                           ;LED.c: 229: return b;
  6324  0029D4  C008  F006         	movff	LED_Left@b,?_LED_Left
  6325  0029D8  C009  F007         	movff	LED_Left@b+1,?_LED_Left+1
  6326  0029DC  0012               	return	
  6327  0029DE                     l3527:
  6328                           
  6329                           ;LED.c: 231: else;LED.c: 232: {;LED.c: 233: a = a << 1;
  6330  0029DE  90D8               	bcf	status,0,c
  6331  0029E0  3406               	rlcf	LED_Left@a,w,c
  6332  0029E2  6E06               	movwf	LED_Left@a,c
  6333  0029E4  3407               	rlcf	LED_Left@a+1,w,c
  6334  0029E6  6E07               	movwf	LED_Left@a+1,c
  6335                           
  6336                           ;LED.c: 234: return a;
  6337  0029E8  C006  F006         	movff	LED_Left@a,?_LED_Left
  6338  0029EC  C007  F007         	movff	LED_Left@a+1,?_LED_Left+1
  6339  0029F0  0012               	return		;funcret
  6340  0029F2                     __end_of_LED_Left:
  6341                           	opt callstack 0
  6342                           
  6343 ;; *************** function _LED_Clear *****************
  6344 ;; Defined at:
  6345 ;;		line 67 in file "LED.c"
  6346 ;; Parameters:    Size  Location     Type
  6347 ;;		None
  6348 ;; Auto vars:     Size  Location     Type
  6349 ;;		None
  6350 ;; Return value:  Size  Location     Type
  6351 ;;                  2  371[None  ] unsigned int 
  6352 ;; Registers used:
  6353 ;;		wreg, status,2, status,0, cstack
  6354 ;; Tracked objects:
  6355 ;;		On entry : 0/0
  6356 ;;		On exit  : 0/0
  6357 ;;		Unchanged: 0/0
  6358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6363 ;;Total ram usage:        0 bytes
  6364 ;; Hardware stack levels used:    1
  6365 ;; Hardware stack levels required when called:    4
  6366 ;; This function calls:
  6367 ;;		_LED_Control
  6368 ;; This function is called by:
  6369 ;;		_LED_Update
  6370 ;; This function uses a non-reentrant model
  6371 ;;
  6372                           
  6373                           	psect	text42
  6374  002C7A                     __ptext42:
  6375                           	opt callstack 0
  6376  002C7A                     _LED_Clear:
  6377                           	opt callstack 25
  6378                           
  6379                           ;LED.c: 69: LED_Control(RED,0b0000000000);
  6380                           
  6381                           ;incstack = 0
  6382  002C7A  0E00               	movlw	0
  6383  002C7C  6E07               	movwf	LED_Control@diode+1,c
  6384  002C7E  0E00               	movlw	0
  6385  002C80  6E06               	movwf	LED_Control@diode,c
  6386  002C82  0E00               	movlw	0
  6387  002C84  EC43  F00D         	call	_LED_Control
  6388                           
  6389                           ;LED.c: 70: LED_Control(GREEN,0b1010101010);
  6390  002C88  0E02               	movlw	2
  6391  002C8A  6E07               	movwf	LED_Control@diode+1,c
  6392  002C8C  0EAA               	movlw	170
  6393  002C8E  6E06               	movwf	LED_Control@diode,c
  6394  002C90  0E01               	movlw	1
  6395  002C92  EC43  F00D         	call	_LED_Control
  6396  002C96  0012               	return		;funcret
  6397  002C98                     __end_of_LED_Clear:
  6398                           	opt callstack 0
  6399                           
  6400 ;; *************** function _INI_All *****************
  6401 ;; Defined at:
  6402 ;;		line 54 in file "INI.c"
  6403 ;; Parameters:    Size  Location     Type
  6404 ;;		None
  6405 ;; Auto vars:     Size  Location     Type
  6406 ;;		None
  6407 ;; Return value:  Size  Location     Type
  6408 ;;                  1    wreg      void 
  6409 ;; Registers used:
  6410 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6411 ;; Tracked objects:
  6412 ;;		On entry : 0/0
  6413 ;;		On exit  : 0/0
  6414 ;;		Unchanged: 0/0
  6415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6420 ;;Total ram usage:        0 bytes
  6421 ;; Hardware stack levels used:    1
  6422 ;; Hardware stack levels required when called:    6
  6423 ;; This function calls:
  6424 ;;		_CAN_Setup
  6425 ;;		_INI_GlobalInterrupt
  6426 ;;		_INI_LED_Start
  6427 ;;		_INI_OUTPUT
  6428 ;;		_INI_Timer
  6429 ;;		_NVMInit
  6430 ;;		_ReadDataToEEPROM
  6431 ;; This function is called by:
  6432 ;;		_main
  6433 ;; This function uses a non-reentrant model
  6434 ;;
  6435                           
  6436                           	psect	text43
  6437  002C1A                     __ptext43:
  6438                           	opt callstack 0
  6439  002C1A                     _INI_All:
  6440                           	opt callstack 24
  6441                           
  6442                           ;INI.c: 57: WDTCONbits.SWDTEN = 1;
  6443                           
  6444                           ;incstack = 0
  6445  002C1A  80D1               	bsf	4049,0,c	;volatile
  6446                           
  6447                           ;INI.c: 60: NVMInit();
  6448  002C1C  ECF9  F014         	call	_NVMInit	;wreg free
  6449                           
  6450                           ;INI.c: 62: ReadDataToEEPROM();
  6451  002C20  EC31  F006         	call	_ReadDataToEEPROM	;wreg free
  6452  002C24  0004               	clrwdt		;# 
  6453                           
  6454                           ;INI.c: 66: INI_OUTPUT();
  6455  002C26  EC1E  F016         	call	_INI_OUTPUT	;wreg free
  6456                           
  6457                           ;INI.c: 68: CAN_Setup();
  6458  002C2A  ECB4  F013         	call	_CAN_Setup	;wreg free
  6459                           
  6460                           ;INI.c: 69: INI_GlobalInterrupt();
  6461  002C2E  EC7D  F016         	call	_INI_GlobalInterrupt	;wreg free
  6462                           
  6463                           ;INI.c: 71: INI_Timer();
  6464  002C32  EC4C  F016         	call	_INI_Timer	;wreg free
  6465                           
  6466                           ;INI.c: 73: INI_LED_Start();
  6467  002C36  ECB8  F015         	call	_INI_LED_Start	;wreg free
  6468  002C3A  0012               	return		;funcret
  6469  002C3C                     __end_of_INI_All:
  6470                           	opt callstack 0
  6471                           
  6472 ;; *************** function _ReadDataToEEPROM *****************
  6473 ;; Defined at:
  6474 ;;		line 498 in file "FRAME.c"
  6475 ;; Parameters:    Size  Location     Type
  6476 ;;		None
  6477 ;; Auto vars:     Size  Location     Type
  6478 ;;		None
  6479 ;; Return value:  Size  Location     Type
  6480 ;;                  1    wreg      void 
  6481 ;; Registers used:
  6482 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6483 ;; Tracked objects:
  6484 ;;		On entry : 0/0
  6485 ;;		On exit  : 0/0
  6486 ;;		Unchanged: 0/0
  6487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6490 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6491 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6492 ;;Total ram usage:        2 bytes
  6493 ;; Hardware stack levels used:    1
  6494 ;; Hardware stack levels required when called:    5
  6495 ;; This function calls:
  6496 ;;		_NVMRead
  6497 ;;		_ReadfromEEPROM
  6498 ;; This function is called by:
  6499 ;;		_INI_All
  6500 ;; This function uses a non-reentrant model
  6501 ;;
  6502                           
  6503                           	psect	text44
  6504  000C62                     __ptext44:
  6505                           	opt callstack 0
  6506  000C62                     _ReadDataToEEPROM:
  6507                           	opt callstack 24
  6508                           
  6509                           ;FRAME.c: 501: NVMRead(&Init_Data,110,2);
  6510                           
  6511                           ;incstack = 0
  6512  000C62  0E48               	movlw	low _Init_Data
  6513  000C64  6E08               	movwf	NVMRead@dest,c
  6514  000C66  0E00               	movlw	high _Init_Data
  6515  000C68  6E09               	movwf	NVMRead@dest+1,c
  6516  000C6A  0E00               	movlw	0
  6517  000C6C  6E0B               	movwf	NVMRead@addr+1,c
  6518  000C6E  0E6E               	movlw	110
  6519  000C70  6E0A               	movwf	NVMRead@addr,c
  6520  000C72  0E00               	movlw	0
  6521  000C74  6E0D               	movwf	NVMRead@count+1,c
  6522  000C76  0E02               	movlw	2
  6523  000C78  6E0C               	movwf	NVMRead@count,c
  6524  000C7A  EC9E  F015         	call	_NVMRead	;wreg free
  6525                           
  6526                           ;FRAME.c: 502: NVMRead(&NeightAdress1,113,2);
  6527  000C7E  0E38               	movlw	low _NeightAdress1
  6528  000C80  6E08               	movwf	NVMRead@dest,c
  6529  000C82  0E00               	movlw	high _NeightAdress1
  6530  000C84  6E09               	movwf	NVMRead@dest+1,c
  6531  000C86  0E00               	movlw	0
  6532  000C88  6E0B               	movwf	NVMRead@addr+1,c
  6533  000C8A  0E71               	movlw	113
  6534  000C8C  6E0A               	movwf	NVMRead@addr,c
  6535  000C8E  0E00               	movlw	0
  6536  000C90  6E0D               	movwf	NVMRead@count+1,c
  6537  000C92  0E02               	movlw	2
  6538  000C94  6E0C               	movwf	NVMRead@count,c
  6539  000C96  EC9E  F015         	call	_NVMRead	;wreg free
  6540                           
  6541                           ;FRAME.c: 503: if(NeightAdress1==0xFFFF || (MinAdres>NeightAdress1>MaxAdres))
  6542  000C9A  2838               	incf	_NeightAdress1,w,c	;volatile
  6543  000C9C  E103               	bnz	u2840
  6544  000C9E  2839               	incf	_NeightAdress1+1,w,c	;volatile
  6545  000CA0  B4D8               	btfsc	status,2,c
  6546  000CA2  D011               	goto	u2870
  6547  000CA4                     u2840:
  6548  000CA4  5024               	movf	_MinAdres,w,c	;volatile
  6549  000CA6  5C38               	subwf	_NeightAdress1,w,c	;volatile
  6550  000CA8  5025               	movf	_MinAdres+1,w,c	;volatile
  6551  000CAA  5839               	subwfb	_NeightAdress1+1,w,c	;volatile
  6552  000CAC  B0D8               	btfsc	status,0,c
  6553  000CAE  D002               	goto	u2850
  6554  000CB0  0E01               	movlw	1
  6555  000CB2  D001               	goto	u2860
  6556  000CB4                     u2850:
  6557  000CB4  0E00               	movlw	0
  6558  000CB6                     u2860:
  6559  000CB6  6E0E               	movwf	??_ReadDataToEEPROM& (0+255),c
  6560  000CB8  6A0F               	clrf	(??_ReadDataToEEPROM+1)& (0+255),c
  6561  000CBA  500E               	movf	??_ReadDataToEEPROM,w,c
  6562  000CBC  5C3E               	subwf	_MaxAdres,w,c	;volatile
  6563  000CBE  500F               	movf	??_ReadDataToEEPROM+1,w,c
  6564  000CC0  583F               	subwfb	_MaxAdres+1,w,c	;volatile
  6565  000CC2  B0D8               	btfsc	status,0,c
  6566  000CC4  D004               	goto	l3895
  6567  000CC6                     u2870:
  6568                           
  6569                           ;FRAME.c: 504: {;FRAME.c: 505: NeightAdress1=0x0000;
  6570  000CC6  0E00               	movlw	0
  6571  000CC8  6E39               	movwf	_NeightAdress1+1,c	;volatile
  6572  000CCA  0E00               	movlw	0
  6573  000CCC  6E38               	movwf	_NeightAdress1,c	;volatile
  6574  000CCE                     l3895:
  6575                           
  6576                           ;FRAME.c: 506: };FRAME.c: 507: NVMRead(&NeightAdress2,116,2);
  6577  000CCE  0E4A               	movlw	low _NeightAdress2
  6578  000CD0  6E08               	movwf	NVMRead@dest,c
  6579  000CD2  0E00               	movlw	high _NeightAdress2
  6580  000CD4  6E09               	movwf	NVMRead@dest+1,c
  6581  000CD6  0E00               	movlw	0
  6582  000CD8  6E0B               	movwf	NVMRead@addr+1,c
  6583  000CDA  0E74               	movlw	116
  6584  000CDC  6E0A               	movwf	NVMRead@addr,c
  6585  000CDE  0E00               	movlw	0
  6586  000CE0  6E0D               	movwf	NVMRead@count+1,c
  6587  000CE2  0E02               	movlw	2
  6588  000CE4  6E0C               	movwf	NVMRead@count,c
  6589  000CE6  EC9E  F015         	call	_NVMRead	;wreg free
  6590                           
  6591                           ;FRAME.c: 508: if(NeightAdress2==0xFFFF || (MinAdres>NeightAdress2>MaxAdres))
  6592  000CEA  284A               	incf	_NeightAdress2,w,c	;volatile
  6593  000CEC  E103               	bnz	u2880
  6594  000CEE  284B               	incf	_NeightAdress2+1,w,c	;volatile
  6595  000CF0  B4D8               	btfsc	status,2,c
  6596  000CF2  D011               	goto	u2910
  6597  000CF4                     u2880:
  6598  000CF4  5024               	movf	_MinAdres,w,c	;volatile
  6599  000CF6  5C4A               	subwf	_NeightAdress2,w,c	;volatile
  6600  000CF8  5025               	movf	_MinAdres+1,w,c	;volatile
  6601  000CFA  584B               	subwfb	_NeightAdress2+1,w,c	;volatile
  6602  000CFC  B0D8               	btfsc	status,0,c
  6603  000CFE  D002               	goto	u2890
  6604  000D00  0E01               	movlw	1
  6605  000D02  D001               	goto	u2900
  6606  000D04                     u2890:
  6607  000D04  0E00               	movlw	0
  6608  000D06                     u2900:
  6609  000D06  6E0E               	movwf	??_ReadDataToEEPROM& (0+255),c
  6610  000D08  6A0F               	clrf	(??_ReadDataToEEPROM+1)& (0+255),c
  6611  000D0A  500E               	movf	??_ReadDataToEEPROM,w,c
  6612  000D0C  5C3E               	subwf	_MaxAdres,w,c	;volatile
  6613  000D0E  500F               	movf	??_ReadDataToEEPROM+1,w,c
  6614  000D10  583F               	subwfb	_MaxAdres+1,w,c	;volatile
  6615  000D12  B0D8               	btfsc	status,0,c
  6616  000D14  D004               	goto	l3903
  6617  000D16                     u2910:
  6618                           
  6619                           ;FRAME.c: 509: {;FRAME.c: 510: NeightAdress2=0x0000;
  6620  000D16  0E00               	movlw	0
  6621  000D18  6E4B               	movwf	_NeightAdress2+1,c	;volatile
  6622  000D1A  0E00               	movlw	0
  6623  000D1C  6E4A               	movwf	_NeightAdress2,c	;volatile
  6624  000D1E                     l3903:
  6625                           
  6626                           ;FRAME.c: 511: };FRAME.c: 512: NVMRead(&NeightAdress3,119,2);
  6627  000D1E  0E36               	movlw	low _NeightAdress3
  6628  000D20  6E08               	movwf	NVMRead@dest,c
  6629  000D22  0E00               	movlw	high _NeightAdress3
  6630  000D24  6E09               	movwf	NVMRead@dest+1,c
  6631  000D26  0E00               	movlw	0
  6632  000D28  6E0B               	movwf	NVMRead@addr+1,c
  6633  000D2A  0E77               	movlw	119
  6634  000D2C  6E0A               	movwf	NVMRead@addr,c
  6635  000D2E  0E00               	movlw	0
  6636  000D30  6E0D               	movwf	NVMRead@count+1,c
  6637  000D32  0E02               	movlw	2
  6638  000D34  6E0C               	movwf	NVMRead@count,c
  6639  000D36  EC9E  F015         	call	_NVMRead	;wreg free
  6640                           
  6641                           ;FRAME.c: 513: if(NeightAdress3==0xFFFF || (MinAdres>NeightAdress3>MaxAdres))
  6642  000D3A  2836               	incf	_NeightAdress3,w,c	;volatile
  6643  000D3C  E103               	bnz	u2920
  6644  000D3E  2837               	incf	_NeightAdress3+1,w,c	;volatile
  6645  000D40  B4D8               	btfsc	status,2,c
  6646  000D42  D011               	goto	u2950
  6647  000D44                     u2920:
  6648  000D44  5024               	movf	_MinAdres,w,c	;volatile
  6649  000D46  5C36               	subwf	_NeightAdress3,w,c	;volatile
  6650  000D48  5025               	movf	_MinAdres+1,w,c	;volatile
  6651  000D4A  5837               	subwfb	_NeightAdress3+1,w,c	;volatile
  6652  000D4C  B0D8               	btfsc	status,0,c
  6653  000D4E  D002               	goto	u2930
  6654  000D50  0E01               	movlw	1
  6655  000D52  D001               	goto	u2940
  6656  000D54                     u2930:
  6657  000D54  0E00               	movlw	0
  6658  000D56                     u2940:
  6659  000D56  6E0E               	movwf	??_ReadDataToEEPROM& (0+255),c
  6660  000D58  6A0F               	clrf	(??_ReadDataToEEPROM+1)& (0+255),c
  6661  000D5A  500E               	movf	??_ReadDataToEEPROM,w,c
  6662  000D5C  5C3E               	subwf	_MaxAdres,w,c	;volatile
  6663  000D5E  500F               	movf	??_ReadDataToEEPROM+1,w,c
  6664  000D60  583F               	subwfb	_MaxAdres+1,w,c	;volatile
  6665  000D62  B0D8               	btfsc	status,0,c
  6666  000D64  D004               	goto	l3911
  6667  000D66                     u2950:
  6668                           
  6669                           ;FRAME.c: 514: {;FRAME.c: 515: NeightAdress3=0x0000;
  6670  000D66  0E00               	movlw	0
  6671  000D68  6E37               	movwf	_NeightAdress3+1,c	;volatile
  6672  000D6A  0E00               	movlw	0
  6673  000D6C  6E36               	movwf	_NeightAdress3,c	;volatile
  6674  000D6E                     l3911:
  6675                           
  6676                           ;FRAME.c: 516: };FRAME.c: 517: NVMRead(&NeightAdress4,122,2);
  6677  000D6E  0E34               	movlw	low _NeightAdress4
  6678  000D70  6E08               	movwf	NVMRead@dest,c
  6679  000D72  0E00               	movlw	high _NeightAdress4
  6680  000D74  6E09               	movwf	NVMRead@dest+1,c
  6681  000D76  0E00               	movlw	0
  6682  000D78  6E0B               	movwf	NVMRead@addr+1,c
  6683  000D7A  0E7A               	movlw	122
  6684  000D7C  6E0A               	movwf	NVMRead@addr,c
  6685  000D7E  0E00               	movlw	0
  6686  000D80  6E0D               	movwf	NVMRead@count+1,c
  6687  000D82  0E02               	movlw	2
  6688  000D84  6E0C               	movwf	NVMRead@count,c
  6689  000D86  EC9E  F015         	call	_NVMRead	;wreg free
  6690                           
  6691                           ;FRAME.c: 518: if(NeightAdress4==0xFFFF || (MinAdres>NeightAdress4>MaxAdres))
  6692  000D8A  2834               	incf	_NeightAdress4,w,c	;volatile
  6693  000D8C  E103               	bnz	u2960
  6694  000D8E  2835               	incf	_NeightAdress4+1,w,c	;volatile
  6695  000D90  B4D8               	btfsc	status,2,c
  6696  000D92  D011               	goto	u2990
  6697  000D94                     u2960:
  6698  000D94  5024               	movf	_MinAdres,w,c	;volatile
  6699  000D96  5C34               	subwf	_NeightAdress4,w,c	;volatile
  6700  000D98  5025               	movf	_MinAdres+1,w,c	;volatile
  6701  000D9A  5835               	subwfb	_NeightAdress4+1,w,c	;volatile
  6702  000D9C  B0D8               	btfsc	status,0,c
  6703  000D9E  D002               	goto	u2970
  6704  000DA0  0E01               	movlw	1
  6705  000DA2  D001               	goto	u2980
  6706  000DA4                     u2970:
  6707  000DA4  0E00               	movlw	0
  6708  000DA6                     u2980:
  6709  000DA6  6E0E               	movwf	??_ReadDataToEEPROM& (0+255),c
  6710  000DA8  6A0F               	clrf	(??_ReadDataToEEPROM+1)& (0+255),c
  6711  000DAA  500E               	movf	??_ReadDataToEEPROM,w,c
  6712  000DAC  5C3E               	subwf	_MaxAdres,w,c	;volatile
  6713  000DAE  500F               	movf	??_ReadDataToEEPROM+1,w,c
  6714  000DB0  583F               	subwfb	_MaxAdres+1,w,c	;volatile
  6715  000DB2  B0D8               	btfsc	status,0,c
  6716  000DB4  D004               	goto	l3919
  6717  000DB6                     u2990:
  6718                           
  6719                           ;FRAME.c: 519: {;FRAME.c: 520: NeightAdress4=0x0000;
  6720  000DB6  0E00               	movlw	0
  6721  000DB8  6E35               	movwf	_NeightAdress4+1,c	;volatile
  6722  000DBA  0E00               	movlw	0
  6723  000DBC  6E34               	movwf	_NeightAdress4,c	;volatile
  6724  000DBE                     l3919:
  6725                           
  6726                           ;FRAME.c: 521: };FRAME.c: 522: NVMRead(&NeightAdress5,125,2);
  6727  000DBE  0E32               	movlw	low _NeightAdress5
  6728  000DC0  6E08               	movwf	NVMRead@dest,c
  6729  000DC2  0E00               	movlw	high _NeightAdress5
  6730  000DC4  6E09               	movwf	NVMRead@dest+1,c
  6731  000DC6  0E00               	movlw	0
  6732  000DC8  6E0B               	movwf	NVMRead@addr+1,c
  6733  000DCA  0E7D               	movlw	125
  6734  000DCC  6E0A               	movwf	NVMRead@addr,c
  6735  000DCE  0E00               	movlw	0
  6736  000DD0  6E0D               	movwf	NVMRead@count+1,c
  6737  000DD2  0E02               	movlw	2
  6738  000DD4  6E0C               	movwf	NVMRead@count,c
  6739  000DD6  EC9E  F015         	call	_NVMRead	;wreg free
  6740                           
  6741                           ;FRAME.c: 523: if(NeightAdress5==0xFFFF || (MinAdres>NeightAdress5>MaxAdres))
  6742  000DDA  2832               	incf	_NeightAdress5,w,c	;volatile
  6743  000DDC  E103               	bnz	u3000
  6744  000DDE  2833               	incf	_NeightAdress5+1,w,c	;volatile
  6745  000DE0  B4D8               	btfsc	status,2,c
  6746  000DE2  D011               	goto	u3030
  6747  000DE4                     u3000:
  6748  000DE4  5024               	movf	_MinAdres,w,c	;volatile
  6749  000DE6  5C32               	subwf	_NeightAdress5,w,c	;volatile
  6750  000DE8  5025               	movf	_MinAdres+1,w,c	;volatile
  6751  000DEA  5833               	subwfb	_NeightAdress5+1,w,c	;volatile
  6752  000DEC  B0D8               	btfsc	status,0,c
  6753  000DEE  D002               	goto	u3010
  6754  000DF0  0E01               	movlw	1
  6755  000DF2  D001               	goto	u3020
  6756  000DF4                     u3010:
  6757  000DF4  0E00               	movlw	0
  6758  000DF6                     u3020:
  6759  000DF6  6E0E               	movwf	??_ReadDataToEEPROM& (0+255),c
  6760  000DF8  6A0F               	clrf	(??_ReadDataToEEPROM+1)& (0+255),c
  6761  000DFA  500E               	movf	??_ReadDataToEEPROM,w,c
  6762  000DFC  5C3E               	subwf	_MaxAdres,w,c	;volatile
  6763  000DFE  500F               	movf	??_ReadDataToEEPROM+1,w,c
  6764  000E00  583F               	subwfb	_MaxAdres+1,w,c	;volatile
  6765  000E02  B0D8               	btfsc	status,0,c
  6766  000E04  D004               	goto	l3927
  6767  000E06                     u3030:
  6768                           
  6769                           ;FRAME.c: 524: {;FRAME.c: 525: NeightAdress5=0x0000;
  6770  000E06  0E00               	movlw	0
  6771  000E08  6E33               	movwf	_NeightAdress5+1,c	;volatile
  6772  000E0A  0E00               	movlw	0
  6773  000E0C  6E32               	movwf	_NeightAdress5,c	;volatile
  6774  000E0E                     l3927:
  6775                           
  6776                           ;FRAME.c: 526: };FRAME.c: 527: NVMRead(&NeightAdress6,128,2);
  6777  000E0E  0E30               	movlw	low _NeightAdress6
  6778  000E10  6E08               	movwf	NVMRead@dest,c
  6779  000E12  0E00               	movlw	high _NeightAdress6
  6780  000E14  6E09               	movwf	NVMRead@dest+1,c
  6781  000E16  0E00               	movlw	0
  6782  000E18  6E0B               	movwf	NVMRead@addr+1,c
  6783  000E1A  0E80               	movlw	128
  6784  000E1C  6E0A               	movwf	NVMRead@addr,c
  6785  000E1E  0E00               	movlw	0
  6786  000E20  6E0D               	movwf	NVMRead@count+1,c
  6787  000E22  0E02               	movlw	2
  6788  000E24  6E0C               	movwf	NVMRead@count,c
  6789  000E26  EC9E  F015         	call	_NVMRead	;wreg free
  6790                           
  6791                           ;FRAME.c: 528: if(NeightAdress6==0xFFFF || (MinAdres>NeightAdress6>MaxAdres))
  6792  000E2A  2830               	incf	_NeightAdress6,w,c	;volatile
  6793  000E2C  E103               	bnz	u3040
  6794  000E2E  2831               	incf	_NeightAdress6+1,w,c	;volatile
  6795  000E30  B4D8               	btfsc	status,2,c
  6796  000E32  D011               	goto	u3070
  6797  000E34                     u3040:
  6798  000E34  5024               	movf	_MinAdres,w,c	;volatile
  6799  000E36  5C30               	subwf	_NeightAdress6,w,c	;volatile
  6800  000E38  5025               	movf	_MinAdres+1,w,c	;volatile
  6801  000E3A  5831               	subwfb	_NeightAdress6+1,w,c	;volatile
  6802  000E3C  B0D8               	btfsc	status,0,c
  6803  000E3E  D002               	goto	u3050
  6804  000E40  0E01               	movlw	1
  6805  000E42  D001               	goto	u3060
  6806  000E44                     u3050:
  6807  000E44  0E00               	movlw	0
  6808  000E46                     u3060:
  6809  000E46  6E0E               	movwf	??_ReadDataToEEPROM& (0+255),c
  6810  000E48  6A0F               	clrf	(??_ReadDataToEEPROM+1)& (0+255),c
  6811  000E4A  500E               	movf	??_ReadDataToEEPROM,w,c
  6812  000E4C  5C3E               	subwf	_MaxAdres,w,c	;volatile
  6813  000E4E  500F               	movf	??_ReadDataToEEPROM+1,w,c
  6814  000E50  583F               	subwfb	_MaxAdres+1,w,c	;volatile
  6815  000E52  B0D8               	btfsc	status,0,c
  6816  000E54  D004               	goto	l3935
  6817  000E56                     u3070:
  6818                           
  6819                           ;FRAME.c: 529: {;FRAME.c: 530: NeightAdress6=0x0000;
  6820  000E56  0E00               	movlw	0
  6821  000E58  6E31               	movwf	_NeightAdress6+1,c	;volatile
  6822  000E5A  0E00               	movlw	0
  6823  000E5C  6E30               	movwf	_NeightAdress6,c	;volatile
  6824  000E5E                     l3935:
  6825                           
  6826                           ;FRAME.c: 531: };FRAME.c: 532: NVMRead(&NeightAdress7,131,2);
  6827  000E5E  0E2E               	movlw	low _NeightAdress7
  6828  000E60  6E08               	movwf	NVMRead@dest,c
  6829  000E62  0E00               	movlw	high _NeightAdress7
  6830  000E64  6E09               	movwf	NVMRead@dest+1,c
  6831  000E66  0E00               	movlw	0
  6832  000E68  6E0B               	movwf	NVMRead@addr+1,c
  6833  000E6A  0E83               	movlw	131
  6834  000E6C  6E0A               	movwf	NVMRead@addr,c
  6835  000E6E  0E00               	movlw	0
  6836  000E70  6E0D               	movwf	NVMRead@count+1,c
  6837  000E72  0E02               	movlw	2
  6838  000E74  6E0C               	movwf	NVMRead@count,c
  6839  000E76  EC9E  F015         	call	_NVMRead	;wreg free
  6840                           
  6841                           ;FRAME.c: 533: if(NeightAdress7==0xFFFF || (MinAdres>NeightAdress7>MaxAdres))
  6842  000E7A  282E               	incf	_NeightAdress7,w,c	;volatile
  6843  000E7C  E103               	bnz	u3080
  6844  000E7E  282F               	incf	_NeightAdress7+1,w,c	;volatile
  6845  000E80  B4D8               	btfsc	status,2,c
  6846  000E82  D011               	goto	u3110
  6847  000E84                     u3080:
  6848  000E84  5024               	movf	_MinAdres,w,c	;volatile
  6849  000E86  5C2E               	subwf	_NeightAdress7,w,c	;volatile
  6850  000E88  5025               	movf	_MinAdres+1,w,c	;volatile
  6851  000E8A  582F               	subwfb	_NeightAdress7+1,w,c	;volatile
  6852  000E8C  B0D8               	btfsc	status,0,c
  6853  000E8E  D002               	goto	u3090
  6854  000E90  0E01               	movlw	1
  6855  000E92  D001               	goto	u3100
  6856  000E94                     u3090:
  6857  000E94  0E00               	movlw	0
  6858  000E96                     u3100:
  6859  000E96  6E0E               	movwf	??_ReadDataToEEPROM& (0+255),c
  6860  000E98  6A0F               	clrf	(??_ReadDataToEEPROM+1)& (0+255),c
  6861  000E9A  500E               	movf	??_ReadDataToEEPROM,w,c
  6862  000E9C  5C3E               	subwf	_MaxAdres,w,c	;volatile
  6863  000E9E  500F               	movf	??_ReadDataToEEPROM+1,w,c
  6864  000EA0  583F               	subwfb	_MaxAdres+1,w,c	;volatile
  6865  000EA2  B0D8               	btfsc	status,0,c
  6866  000EA4  D004               	goto	l3943
  6867  000EA6                     u3110:
  6868                           
  6869                           ;FRAME.c: 534: {;FRAME.c: 535: NeightAdress7=0x0000;
  6870  000EA6  0E00               	movlw	0
  6871  000EA8  6E2F               	movwf	_NeightAdress7+1,c	;volatile
  6872  000EAA  0E00               	movlw	0
  6873  000EAC  6E2E               	movwf	_NeightAdress7,c	;volatile
  6874  000EAE                     l3943:
  6875                           
  6876                           ;FRAME.c: 536: };FRAME.c: 537: NVMRead(&NeightAdress8,134,2);
  6877  000EAE  0E2C               	movlw	low _NeightAdress8
  6878  000EB0  6E08               	movwf	NVMRead@dest,c
  6879  000EB2  0E00               	movlw	high _NeightAdress8
  6880  000EB4  6E09               	movwf	NVMRead@dest+1,c
  6881  000EB6  0E00               	movlw	0
  6882  000EB8  6E0B               	movwf	NVMRead@addr+1,c
  6883  000EBA  0E86               	movlw	134
  6884  000EBC  6E0A               	movwf	NVMRead@addr,c
  6885  000EBE  0E00               	movlw	0
  6886  000EC0  6E0D               	movwf	NVMRead@count+1,c
  6887  000EC2  0E02               	movlw	2
  6888  000EC4  6E0C               	movwf	NVMRead@count,c
  6889  000EC6  EC9E  F015         	call	_NVMRead	;wreg free
  6890                           
  6891                           ;FRAME.c: 538: if(NeightAdress8==0xFFFF || (MinAdres>NeightAdress8>MaxAdres))
  6892  000ECA  282C               	incf	_NeightAdress8,w,c	;volatile
  6893  000ECC  E103               	bnz	u3120
  6894  000ECE  282D               	incf	_NeightAdress8+1,w,c	;volatile
  6895  000ED0  B4D8               	btfsc	status,2,c
  6896  000ED2  D011               	goto	u3150
  6897  000ED4                     u3120:
  6898  000ED4  5024               	movf	_MinAdres,w,c	;volatile
  6899  000ED6  5C2C               	subwf	_NeightAdress8,w,c	;volatile
  6900  000ED8  5025               	movf	_MinAdres+1,w,c	;volatile
  6901  000EDA  582D               	subwfb	_NeightAdress8+1,w,c	;volatile
  6902  000EDC  B0D8               	btfsc	status,0,c
  6903  000EDE  D002               	goto	u3130
  6904  000EE0  0E01               	movlw	1
  6905  000EE2  D001               	goto	u3140
  6906  000EE4                     u3130:
  6907  000EE4  0E00               	movlw	0
  6908  000EE6                     u3140:
  6909  000EE6  6E0E               	movwf	??_ReadDataToEEPROM& (0+255),c
  6910  000EE8  6A0F               	clrf	(??_ReadDataToEEPROM+1)& (0+255),c
  6911  000EEA  500E               	movf	??_ReadDataToEEPROM,w,c
  6912  000EEC  5C3E               	subwf	_MaxAdres,w,c	;volatile
  6913  000EEE  500F               	movf	??_ReadDataToEEPROM+1,w,c
  6914  000EF0  583F               	subwfb	_MaxAdres+1,w,c	;volatile
  6915  000EF2  B0D8               	btfsc	status,0,c
  6916  000EF4  D004               	goto	l3951
  6917  000EF6                     u3150:
  6918                           
  6919                           ;FRAME.c: 539: {;FRAME.c: 540: NeightAdress8=0x0000;
  6920  000EF6  0E00               	movlw	0
  6921  000EF8  6E2D               	movwf	_NeightAdress8+1,c	;volatile
  6922  000EFA  0E00               	movlw	0
  6923  000EFC  6E2C               	movwf	_NeightAdress8,c	;volatile
  6924  000EFE                     l3951:
  6925                           
  6926                           ;FRAME.c: 541: };FRAME.c: 543: MinRange = ReadfromEEPROM((WORD)1400);
  6927  000EFE  0E05               	movlw	5
  6928  000F00  6E07               	movwf	ReadfromEEPROM@Address+1,c
  6929  000F02  0E78               	movlw	120
  6930  000F04  6E06               	movwf	ReadfromEEPROM@Address,c
  6931  000F06  EC6C  F016         	call	_ReadfromEEPROM	;wreg free
  6932  000F0A  6E0E               	movwf	??_ReadDataToEEPROM& (0+255),c
  6933  000F0C  500E               	movf	??_ReadDataToEEPROM,w,c
  6934  000F0E  6E22               	movwf	_MinRange,c	;volatile
  6935  000F10  6A23               	clrf	_MinRange+1,c	;volatile
  6936                           
  6937                           ;FRAME.c: 544: MaxRange = ReadfromEEPROM((WORD)1440);
  6938  000F12  0E05               	movlw	5
  6939  000F14  6E07               	movwf	ReadfromEEPROM@Address+1,c
  6940  000F16  0EA0               	movlw	160
  6941  000F18  6E06               	movwf	ReadfromEEPROM@Address,c
  6942  000F1A  EC6C  F016         	call	_ReadfromEEPROM	;wreg free
  6943  000F1E  6E0E               	movwf	??_ReadDataToEEPROM& (0+255),c
  6944  000F20  500E               	movf	??_ReadDataToEEPROM,w,c
  6945  000F22  6E3C               	movwf	_MaxRange,c	;volatile
  6946  000F24  6A3D               	clrf	_MaxRange+1,c	;volatile
  6947                           
  6948                           ;FRAME.c: 545: MinPower = ReadfromEEPROM((WORD)1480);
  6949  000F26  0E05               	movlw	5
  6950  000F28  6E07               	movwf	ReadfromEEPROM@Address+1,c
  6951  000F2A  0EC8               	movlw	200
  6952  000F2C  6E06               	movwf	ReadfromEEPROM@Address,c
  6953  000F2E  EC6C  F016         	call	_ReadfromEEPROM	;wreg free
  6954  000F32  6E0E               	movwf	??_ReadDataToEEPROM& (0+255),c
  6955  000F34  500E               	movf	??_ReadDataToEEPROM,w,c
  6956  000F36  6E20               	movwf	_MinPower,c	;volatile
  6957  000F38  6A21               	clrf	_MinPower+1,c	;volatile
  6958                           
  6959                           ;FRAME.c: 546: MaxPower = ReadfromEEPROM((WORD)1520);
  6960  000F3A  0E05               	movlw	5
  6961  000F3C  6E07               	movwf	ReadfromEEPROM@Address+1,c
  6962  000F3E  0EF0               	movlw	240
  6963  000F40  6E06               	movwf	ReadfromEEPROM@Address,c
  6964  000F42  EC6C  F016         	call	_ReadfromEEPROM	;wreg free
  6965  000F46  6E0E               	movwf	??_ReadDataToEEPROM& (0+255),c
  6966  000F48  500E               	movf	??_ReadDataToEEPROM,w,c
  6967  000F4A  6E3A               	movwf	_MaxPower,c	;volatile
  6968  000F4C  6A3B               	clrf	_MaxPower+1,c	;volatile
  6969  000F4E  0012               	return		;funcret
  6970  000F50                     __end_of_ReadDataToEEPROM:
  6971                           	opt callstack 0
  6972                           
  6973 ;; *************** function _NVMRead *****************
  6974 ;; Defined at:
  6975 ;;		line 125 in file "EEPROM.c"
  6976 ;; Parameters:    Size  Location     Type
  6977 ;;  dest            2    7[COMRAM] PTR unsigned char 
  6978 ;;		 -> Init_Data(2), NeightAdress8(2), NeightAdress7(2), NeightAdress6(2), 
  6979 ;;		 -> NeightAdress5(2), NeightAdress4(2), NeightAdress3(2), NeightAdress2(2), 
  6980 ;;		 -> NeightAdress1(2), 
  6981 ;;  addr            2    9[COMRAM] unsigned short 
  6982 ;;  count           2   11[COMRAM] unsigned short 
  6983 ;; Auto vars:     Size  Location     Type
  6984 ;;		None
  6985 ;; Return value:  Size  Location     Type
  6986 ;;                  1    wreg      void 
  6987 ;; Registers used:
  6988 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6989 ;; Tracked objects:
  6990 ;;		On entry : 0/0
  6991 ;;		On exit  : 0/0
  6992 ;;		Unchanged: 0/0
  6993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6994 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6997 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6998 ;;Total ram usage:        6 bytes
  6999 ;; Hardware stack levels used:    1
  7000 ;; Hardware stack levels required when called:    4
  7001 ;; This function calls:
  7002 ;;		_ReadfromEEPROM
  7003 ;; This function is called by:
  7004 ;;		_ReadDataToEEPROM
  7005 ;; This function uses a non-reentrant model
  7006 ;;
  7007                           
  7008                           	psect	text45
  7009  002B3C                     __ptext45:
  7010                           	opt callstack 0
  7011  002B3C                     _NVMRead:
  7012                           	opt callstack 24
  7013                           
  7014                           ;EEPROM.c: 127: while( count > 0 )
  7015                           
  7016                           ;incstack = 0
  7017  002B3C  D014               	goto	l3643
  7018  002B3E                     l966:
  7019  002B3E  B2A6               	btfsc	4006,1,c	;volsfr
  7020  002B40  D7FE               	goto	l966
  7021                           
  7022                           ;EEPROM.c: 130: *dest++ = ReadfromEEPROM(addr++);
  7023  002B42  C00A  F006         	movff	NVMRead@addr,ReadfromEEPROM@Address
  7024  002B46  C00B  F007         	movff	NVMRead@addr+1,ReadfromEEPROM@Address+1
  7025  002B4A  EC6C  F016         	call	_ReadfromEEPROM	;wreg free
  7026  002B4E  C008  FFD9         	movff	NVMRead@dest,fsr2l
  7027  002B52  C009  FFDA         	movff	NVMRead@dest+1,fsr2h
  7028  002B56  6EDF               	movwf	indf2,c
  7029  002B58  4A0A               	infsnz	NVMRead@addr,f,c
  7030  002B5A  2A0B               	incf	NVMRead@addr+1,f,c
  7031  002B5C  4A08               	infsnz	NVMRead@dest,f,c
  7032  002B5E  2A09               	incf	NVMRead@dest+1,f,c
  7033                           
  7034                           ;EEPROM.c: 131: count--;
  7035  002B60  060C               	decf	NVMRead@count,f,c
  7036  002B62  A0D8               	btfss	status,0,c
  7037  002B64  060D               	decf	NVMRead@count+1,f,c
  7038  002B66                     l3643:
  7039  002B66  500C               	movf	NVMRead@count,w,c
  7040  002B68  100D               	iorwf	NVMRead@count+1,w,c
  7041  002B6A  B4D8               	btfsc	status,2,c
  7042  002B6C  0012               	return	
  7043  002B6E  D7E7               	goto	l966
  7044  002B70                     __end_of_NVMRead:
  7045                           	opt callstack 0
  7046                           
  7047 ;; *************** function _ReadfromEEPROM *****************
  7048 ;; Defined at:
  7049 ;;		line 73 in file "EEPROM.c"
  7050 ;; Parameters:    Size  Location     Type
  7051 ;;  Address         2    5[COMRAM] unsigned short 
  7052 ;; Auto vars:     Size  Location     Type
  7053 ;;		None
  7054 ;; Return value:  Size  Location     Type
  7055 ;;                  1    wreg      unsigned char 
  7056 ;; Registers used:
  7057 ;;		wreg, status,2
  7058 ;; Tracked objects:
  7059 ;;		On entry : 0/0
  7060 ;;		On exit  : 0/0
  7061 ;;		Unchanged: 0/0
  7062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7063 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7066 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7067 ;;Total ram usage:        2 bytes
  7068 ;; Hardware stack levels used:    1
  7069 ;; Hardware stack levels required when called:    3
  7070 ;; This function calls:
  7071 ;;		Nothing
  7072 ;; This function is called by:
  7073 ;;		_ReadDataToEEPROM
  7074 ;;		_NVMRead
  7075 ;; This function uses a non-reentrant model
  7076 ;;
  7077                           
  7078                           	psect	text46
  7079  002CD8                     __ptext46:
  7080                           	opt callstack 0
  7081  002CD8                     _ReadfromEEPROM:
  7082                           	opt callstack 25
  7083                           
  7084                           ;EEPROM.c: 75: EEADRH = (BYTE)(Address>>8);
  7085                           
  7086                           ;incstack = 0
  7087  002CD8  5007               	movf	ReadfromEEPROM@Address+1,w,c
  7088  002CDA  6EAA               	movwf	4010,c	;volatile
  7089                           
  7090                           ;EEPROM.c: 76: EEADR = (BYTE)Address;
  7091  002CDC  C006  FFA9         	movff	ReadfromEEPROM@Address,4009	;volatile
  7092                           
  7093                           ;EEPROM.c: 77: EECON1bits.RD = 1;
  7094  002CE0  80A6               	bsf	4006,0,c	;volsfr
  7095                           
  7096                           ;EEPROM.c: 78: EECON1bits.EEPGD = 0;
  7097  002CE2  9EA6               	bcf	4006,7,c	;volsfr
  7098                           
  7099                           ;EEPROM.c: 79: EECON1bits.CFGS = 0;
  7100  002CE4  9CA6               	bcf	4006,6,c	;volsfr
  7101                           
  7102                           ;EEPROM.c: 80: return EEDATA;
  7103  002CE6  50A8               	movf	4008,w,c	;volatile
  7104  002CE8  0012               	return		;funcret
  7105  002CEA                     __end_of_ReadfromEEPROM:
  7106                           	opt callstack 0
  7107                           
  7108 ;; *************** function _NVMInit *****************
  7109 ;; Defined at:
  7110 ;;		line 49 in file "EEPROM.c"
  7111 ;; Parameters:    Size  Location     Type
  7112 ;;		None
  7113 ;; Auto vars:     Size  Location     Type
  7114 ;;  NeightAdress    2    0        unsigned int 
  7115 ;;  result          1   13[COMRAM] enum E10294
  7116 ;; Return value:  Size  Location     Type
  7117 ;;                  1    wreg      enum E10294
  7118 ;; Registers used:
  7119 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7120 ;; Tracked objects:
  7121 ;;		On entry : 0/0
  7122 ;;		On exit  : 0/0
  7123 ;;		Unchanged: 0/0
  7124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7126 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7128 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7129 ;;Total ram usage:        3 bytes
  7130 ;; Hardware stack levels used:    1
  7131 ;; Hardware stack levels required when called:    4
  7132 ;; This function calls:
  7133 ;;		_NVMalloc
  7134 ;; This function is called by:
  7135 ;;		_INI_All
  7136 ;; This function uses a non-reentrant model
  7137 ;;
  7138                           
  7139                           	psect	text47
  7140  0029F2                     __ptext47:
  7141                           	opt callstack 0
  7142  0029F2                     _NVMInit:
  7143                           	opt callstack 25
  7144                           
  7145                           ;EEPROM.c: 51: BOOL result = TRUE;
  7146                           
  7147                           ;incstack = 0
  7148  0029F2  0E01               	movlw	1
  7149  0029F4  6E0E               	movwf	NVMInit@result,c
  7150                           
  7151                           ;EEPROM.c: 53: nextEEPosition = 0;
  7152  0029F6  0E00               	movlw	0
  7153  0029F8  0100               	movlb	0	; () banked
  7154  0029FA  6FD3               	movwf	(_nextEEPosition+1)& (0+255),b
  7155  0029FC  0E00               	movlw	0
  7156  0029FE  6FD2               	movwf	_nextEEPosition& (0+255),b
  7157                           
  7158                           ; BSR set to: 0
  7159                           ;EEPROM.c: 55: result &= NVMalloc(sizeof(KartaStruct), &ustawieniaKarty);
  7160  002A00  0E00               	movlw	0
  7161  002A02  6E07               	movwf	NVMalloc@size+1,c
  7162  002A04  0E03               	movlw	3
  7163  002A06  6E06               	movwf	NVMalloc@size,c
  7164  002A08  0EDC               	movlw	low _ustawieniaKarty
  7165  002A0A  6E08               	movwf	NVMalloc@location,c
  7166  002A0C  0E00               	movlw	high _ustawieniaKarty
  7167  002A0E  6E09               	movwf	NVMalloc@location+1,c
  7168  002A10  EC17  F015         	call	_NVMalloc	;wreg free
  7169  002A14  160E               	andwf	NVMInit@result,f,c
  7170                           
  7171                           ;EEPROM.c: 56: result &= NVMalloc(8*sizeof(NeightAdress_Example), &neighborsAdress);
  7172  002A16  0E00               	movlw	0
  7173  002A18  6E07               	movwf	NVMalloc@size+1,c
  7174  002A1A  0E10               	movlw	16
  7175  002A1C  6E06               	movwf	NVMalloc@size,c
  7176  002A1E  0EDA               	movlw	low _neighborsAdress
  7177  002A20  6E08               	movwf	NVMalloc@location,c
  7178  002A22  0E00               	movlw	high _neighborsAdress
  7179  002A24  6E09               	movwf	NVMalloc@location+1,c
  7180  002A26  EC17  F015         	call	_NVMalloc	;wreg free
  7181  002A2A  160E               	andwf	NVMInit@result,f,c
  7182  002A2C  0012               	return		;funcret
  7183  002A2E                     __end_of_NVMInit:
  7184                           	opt callstack 0
  7185                           
  7186 ;; *************** function _NVMalloc *****************
  7187 ;; Defined at:
  7188 ;;		line 24 in file "EEPROM.c"
  7189 ;; Parameters:    Size  Location     Type
  7190 ;;  size            2    5[COMRAM] unsigned short 
  7191 ;;  location        2    7[COMRAM] PTR unsigned short 
  7192 ;;		 -> neighborsAdress(2), ustawieniaKarty(2), 
  7193 ;; Auto vars:     Size  Location     Type
  7194 ;;		None
  7195 ;; Return value:  Size  Location     Type
  7196 ;;                  1    wreg      enum E10294
  7197 ;; Registers used:
  7198 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7199 ;; Tracked objects:
  7200 ;;		On entry : 0/0
  7201 ;;		On exit  : 0/0
  7202 ;;		Unchanged: 0/0
  7203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7204 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7206 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7207 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7208 ;;Total ram usage:        6 bytes
  7209 ;; Hardware stack levels used:    1
  7210 ;; Hardware stack levels required when called:    3
  7211 ;; This function calls:
  7212 ;;		Nothing
  7213 ;; This function is called by:
  7214 ;;		_NVMInit
  7215 ;; This function uses a non-reentrant model
  7216 ;;
  7217                           
  7218                           	psect	text48
  7219  002A2E                     __ptext48:
  7220                           	opt callstack 0
  7221  002A2E                     _NVMalloc:
  7222                           	opt callstack 25
  7223                           
  7224                           ;EEPROM.c: 28: if ((nextEEPosition + (WORD)size) > (WORD)0x400)
  7225                           
  7226                           ;incstack = 0
  7227  002A2E  5006               	movf	NVMalloc@size,w,c
  7228  002A30  0100               	movlb	0	; () banked
  7229  002A32  25D2               	addwf	_nextEEPosition& (0+255),w,b
  7230  002A34  6E0A               	movwf	??_NVMalloc& (0+255),c
  7231  002A36  5007               	movf	NVMalloc@size+1,w,c
  7232  002A38  21D3               	addwfc	(_nextEEPosition+1)& (0+255),w,b
  7233  002A3A  6E0B               	movwf	(??_NVMalloc+1)& (0+255),c
  7234  002A3C  040A               	decf	??_NVMalloc,w,c
  7235  002A3E  0E04               	movlw	4
  7236  002A40  580B               	subwfb	??_NVMalloc+1,w,c
  7237  002A42  A0D8               	btfss	status,0,c
  7238  002A44  D002               	goto	l3689
  7239                           
  7240                           ; BSR set to: 0
  7241                           ;EEPROM.c: 29: {;EEPROM.c: 30: return FALSE;
  7242  002A46  0E00               	movlw	0
  7243  002A48  0012               	return	
  7244  002A4A                     l3689:
  7245                           
  7246                           ; BSR set to: 0
  7247                           ;EEPROM.c: 31: };EEPROM.c: 33: *location = nextEEPosition;
  7248  002A4A  C008  FFD9         	movff	NVMalloc@location,fsr2l
  7249  002A4E  C009  FFDA         	movff	NVMalloc@location+1,fsr2h
  7250  002A52  C0D2  FFDE         	movff	_nextEEPosition,postinc2
  7251  002A56  C0D3  FFDD         	movff	_nextEEPosition+1,postdec2
  7252                           
  7253                           ; BSR set to: 0
  7254                           ;EEPROM.c: 34: nextEEPosition += size;
  7255  002A5A  5006               	movf	NVMalloc@size,w,c
  7256  002A5C  27D2               	addwf	_nextEEPosition& (0+255),f,b
  7257  002A5E  5007               	movf	NVMalloc@size+1,w,c
  7258  002A60  23D3               	addwfc	(_nextEEPosition+1)& (0+255),f,b
  7259                           
  7260                           ; BSR set to: 0
  7261                           ;EEPROM.c: 35: return TRUE;
  7262  002A62  0E01               	movlw	1
  7263                           
  7264                           ; BSR set to: 0
  7265  002A64  0012               	return		;funcret
  7266  002A66                     __end_of_NVMalloc:
  7267                           	opt callstack 0
  7268                           
  7269 ;; *************** function _INI_Timer *****************
  7270 ;; Defined at:
  7271 ;;		line 92 in file "TMR1.c"
  7272 ;; Parameters:    Size  Location     Type
  7273 ;;		None
  7274 ;; Auto vars:     Size  Location     Type
  7275 ;;		None
  7276 ;; Return value:  Size  Location     Type
  7277 ;;                  1    wreg      unsigned char 
  7278 ;; Registers used:
  7279 ;;		wreg, status,2
  7280 ;; Tracked objects:
  7281 ;;		On entry : 0/0
  7282 ;;		On exit  : 0/0
  7283 ;;		Unchanged: 0/0
  7284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7289 ;;Total ram usage:        0 bytes
  7290 ;; Hardware stack levels used:    1
  7291 ;; Hardware stack levels required when called:    3
  7292 ;; This function calls:
  7293 ;;		Nothing
  7294 ;; This function is called by:
  7295 ;;		_INI_All
  7296 ;; This function uses a non-reentrant model
  7297 ;;
  7298                           
  7299                           	psect	text49
  7300  002C98                     __ptext49:
  7301                           	opt callstack 0
  7302  002C98                     _INI_Timer:
  7303                           	opt callstack 26
  7304                           
  7305                           ;TMR1.c: 96: IRCF2 = 1;
  7306                           
  7307                           ; BSR set to: 0
  7308                           ;incstack = 0
  7309  002C98  8CD3               	bsf	4051,6,c	;volatile
  7310                           
  7311                           ;TMR1.c: 97: IRCF1 = 1;
  7312  002C9A  8AD3               	bsf	4051,5,c	;volatile
  7313                           
  7314                           ;TMR1.c: 98: IRCF0 = 1;
  7315  002C9C  88D3               	bsf	4051,4,c	;volatile
  7316                           
  7317                           ;TMR1.c: 99: T1CON = 0b00111101;
  7318  002C9E  0E3D               	movlw	61
  7319  002CA0  6ECD               	movwf	4045,c	;volatile
  7320                           
  7321                           ;TMR1.c: 100: TMR1H= (UINT8)((0xFFFF - (((8000000/8)/4)/10)) >> 8);
  7322  002CA2  0E9E               	movlw	158
  7323  002CA4  6ECF               	movwf	4047,c	;volatile
  7324                           
  7325                           ;TMR1.c: 101: TMR1L=(UINT8)((0xFFFF - (((8000000/8)/4)/10)) & 0xFF);
  7326  002CA6  0E57               	movlw	87
  7327  002CA8  6ECE               	movwf	4046,c	;volatile
  7328                           
  7329                           ;TMR1.c: 102: TMR1IE=1;
  7330  002CAA  809D               	bsf	3997,0,c	;volatile
  7331                           
  7332                           ;TMR1.c: 103: TMR1ON = 1;
  7333  002CAC  80CD               	bsf	4045,0,c	;volatile
  7334  002CAE  0012               	return		;funcret
  7335  002CB0                     __end_of_INI_Timer:
  7336                           	opt callstack 0
  7337                           
  7338 ;; *************** function _INI_OUTPUT *****************
  7339 ;; Defined at:
  7340 ;;		line 29 in file "INI.c"
  7341 ;; Parameters:    Size  Location     Type
  7342 ;;		None
  7343 ;; Auto vars:     Size  Location     Type
  7344 ;;		None
  7345 ;; Return value:  Size  Location     Type
  7346 ;;                  1    wreg      void 
  7347 ;; Registers used:
  7348 ;;		wreg, status,2
  7349 ;; Tracked objects:
  7350 ;;		On entry : 0/0
  7351 ;;		On exit  : 0/0
  7352 ;;		Unchanged: 0/0
  7353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7357 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7358 ;;Total ram usage:        0 bytes
  7359 ;; Hardware stack levels used:    1
  7360 ;; Hardware stack levels required when called:    3
  7361 ;; This function calls:
  7362 ;;		Nothing
  7363 ;; This function is called by:
  7364 ;;		_INI_All
  7365 ;; This function uses a non-reentrant model
  7366 ;;
  7367                           
  7368                           	psect	text50
  7369  002C3C                     __ptext50:
  7370                           	opt callstack 0
  7371  002C3C                     _INI_OUTPUT:
  7372                           	opt callstack 26
  7373                           
  7374                           ;INI.c: 33: LATA = 0;
  7375                           
  7376                           ;incstack = 0
  7377  002C3C  0E00               	movlw	0
  7378  002C3E  6E89               	movwf	3977,c	;volatile
  7379                           
  7380                           ;INI.c: 34: LATB = 0;
  7381  002C40  0E00               	movlw	0
  7382  002C42  6E8A               	movwf	3978,c	;volatile
  7383                           
  7384                           ;INI.c: 35: LATC = 0;
  7385  002C44  0E00               	movlw	0
  7386  002C46  6E8B               	movwf	3979,c	;volatile
  7387                           
  7388                           ;INI.c: 36: TRISA = 0x0C;
  7389  002C48  0E0C               	movlw	12
  7390  002C4A  6E92               	movwf	3986,c	;volatile
  7391                           
  7392                           ;INI.c: 37: TRISB = 0b10001000;
  7393  002C4C  0E88               	movlw	136
  7394  002C4E  6E93               	movwf	3987,c	;volatile
  7395                           
  7396                           ;INI.c: 38: TRISC = 0xBF;
  7397  002C50  0EBF               	movlw	191
  7398  002C52  6E94               	movwf	3988,c	;volatile
  7399                           
  7400                           ;INI.c: 39: RCONbits.IPEN = 1;
  7401  002C54  8ED0               	bsf	4048,7,c	;volatile
  7402                           
  7403                           ;INI.c: 42: DetectorLedRadar.Flags.inicjalizacja = 1;
  7404  002C56  0100               	movlb	0	; () banked
  7405  002C58  87CF               	bsf	_DetectorLedRadar& (0+255),3,b
  7406                           
  7407                           ; BSR set to: 0
  7408  002C5A  0012               	return		;funcret
  7409  002C5C                     __end_of_INI_OUTPUT:
  7410                           	opt callstack 0
  7411                           
  7412 ;; *************** function _INI_LED_Start *****************
  7413 ;; Defined at:
  7414 ;;		line 286 in file "LED.c"
  7415 ;; Parameters:    Size  Location     Type
  7416 ;;		None
  7417 ;; Auto vars:     Size  Location     Type
  7418 ;;		None
  7419 ;; Return value:  Size  Location     Type
  7420 ;;                  1    wreg      void 
  7421 ;; Registers used:
  7422 ;;		wreg, status,2, status,0, cstack
  7423 ;; Tracked objects:
  7424 ;;		On entry : 0/0
  7425 ;;		On exit  : 0/0
  7426 ;;		Unchanged: 0/0
  7427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7431 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7432 ;;Total ram usage:        0 bytes
  7433 ;; Hardware stack levels used:    1
  7434 ;; Hardware stack levels required when called:    4
  7435 ;; This function calls:
  7436 ;;		_LED_Control
  7437 ;; This function is called by:
  7438 ;;		_INI_All
  7439 ;; This function uses a non-reentrant model
  7440 ;;
  7441                           
  7442                           	psect	text51
  7443  002B70                     __ptext51:
  7444                           	opt callstack 0
  7445  002B70                     _INI_LED_Start:
  7446                           	opt callstack 25
  7447                           
  7448                           ;LED.c: 288: TRISA = TRISA & 0b00000001;
  7449                           
  7450                           ; BSR set to: 0
  7451                           ;incstack = 0
  7452  002B70  5092               	movf	3986,w,c	;volatile
  7453  002B72  0B01               	andlw	1
  7454  002B74  6E92               	movwf	3986,c	;volatile
  7455                           
  7456                           ;LED.c: 289: TRISB = TRISB & 0b11111100;
  7457  002B76  5093               	movf	3987,w,c	;volatile
  7458  002B78  0BFC               	andlw	252
  7459  002B7A  6E93               	movwf	3987,c	;volatile
  7460                           
  7461                           ;LED.c: 290: TRISE = TRISE & 0b11111000;
  7462  002B7C  5096               	movf	3990,w,c	;volatile
  7463  002B7E  0BF8               	andlw	248
  7464  002B80  6E96               	movwf	3990,c	;volatile
  7465                           
  7466                           ;LED.c: 291: TRISD = TRISD & 0b00000000;
  7467  002B82  0E00               	movlw	0
  7468  002B84  6E95               	movwf	3989,c	;volatile
  7469                           
  7470                           ;LED.c: 292: LED_Control(RED,0b0000000000);
  7471  002B86  0E00               	movlw	0
  7472  002B88  6E07               	movwf	LED_Control@diode+1,c
  7473  002B8A  0E00               	movlw	0
  7474  002B8C  6E06               	movwf	LED_Control@diode,c
  7475  002B8E  0E00               	movlw	0
  7476  002B90  EC43  F00D         	call	_LED_Control
  7477                           
  7478                           ;LED.c: 293: LED_Control(GREEN,0b0000000000);
  7479  002B94  0E00               	movlw	0
  7480  002B96  6E07               	movwf	LED_Control@diode+1,c
  7481  002B98  0E00               	movlw	0
  7482  002B9A  6E06               	movwf	LED_Control@diode,c
  7483  002B9C  0E01               	movlw	1
  7484  002B9E  EC43  F00D         	call	_LED_Control
  7485  002BA2  0012               	return		;funcret
  7486  002BA4                     __end_of_INI_LED_Start:
  7487                           	opt callstack 0
  7488                           
  7489 ;; *************** function _LED_Control *****************
  7490 ;; Defined at:
  7491 ;;		line 311 in file "LED.c"
  7492 ;; Parameters:    Size  Location     Type
  7493 ;;  color           1    wreg     enum E10511
  7494 ;;  diode           2    5[COMRAM] unsigned int 
  7495 ;; Auto vars:     Size  Location     Type
  7496 ;;  color           1    9[COMRAM] enum E10511
  7497 ;;  cos             2    0        unsigned int 
  7498 ;; Return value:  Size  Location     Type
  7499 ;;                  1    wreg      unsigned char 
  7500 ;; Registers used:
  7501 ;;		wreg, status,2, status,0
  7502 ;; Tracked objects:
  7503 ;;		On entry : 0/0
  7504 ;;		On exit  : 0/0
  7505 ;;		Unchanged: 0/0
  7506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7507 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7508 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7510 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7511 ;;Total ram usage:        5 bytes
  7512 ;; Hardware stack levels used:    1
  7513 ;; Hardware stack levels required when called:    3
  7514 ;; This function calls:
  7515 ;;		Nothing
  7516 ;; This function is called by:
  7517 ;;		_LED_Error
  7518 ;;		_LED_Clear
  7519 ;;		_LED_Update
  7520 ;;		_LED_Light_Pos
  7521 ;;		_INI_LED_Start
  7522 ;; This function uses a non-reentrant model
  7523 ;;
  7524                           
  7525                           	psect	text52
  7526  001A86                     __ptext52:
  7527                           	opt callstack 0
  7528  001A86                     _LED_Control:
  7529                           	opt callstack 24
  7530                           
  7531                           ;incstack = 0
  7532                           ;LED_Control@color stored from wreg
  7533  001A86  6E0A               	movwf	LED_Control@color,c
  7534                           
  7535                           ;LED.c: 314: if(color == RED)
  7536  001A88  500A               	movf	LED_Control@color,w,c
  7537  001A8A  A4D8               	btfss	status,2,c
  7538  001A8C  D050               	goto	l428
  7539                           
  7540                           ;LED.c: 315: {;LED.c: 317: if((diode & 0b0000000001)== 0b0000000001)
  7541  001A8E  A006               	btfss	LED_Control@diode,0,c
  7542  001A90  D003               	goto	l4271
  7543                           
  7544                           ;LED.c: 318: {;LED.c: 319: LATD = LATD | ~0b11101111;
  7545  001A92  508C               	movf	3980,w,c	;volatile
  7546  001A94  0910               	iorlw	16
  7547  001A96  D002               	goto	L4
  7548  001A98                     l4271:
  7549                           
  7550                           ;LED.c: 321: else;LED.c: 322: {;LED.c: 323: LATD = LATD &0b11101111;
  7551  001A98  508C               	movf	3980,w,c	;volatile
  7552  001A9A  0BEF               	andlw	239
  7553  001A9C                     L4:
  7554  001A9C  6E8C               	movwf	3980,c	;volatile
  7555                           
  7556                           ;LED.c: 324: };LED.c: 326: if((diode & 0b0000000010) == 0b0000000010)
  7557  001A9E  A206               	btfss	LED_Control@diode,1,c
  7558  001AA0  D003               	goto	l4277
  7559                           
  7560                           ;LED.c: 327: {;LED.c: 328: LATD = LATD | ~0b10111111;
  7561  001AA2  508C               	movf	3980,w,c	;volatile
  7562  001AA4  0940               	iorlw	64
  7563  001AA6  D002               	goto	L5
  7564  001AA8                     l4277:
  7565                           
  7566                           ;LED.c: 330: else;LED.c: 331: {;LED.c: 332: LATD = LATD & 0b10111111;
  7567  001AA8  508C               	movf	3980,w,c	;volatile
  7568  001AAA  0BBF               	andlw	191
  7569  001AAC                     L5:
  7570  001AAC  6E8C               	movwf	3980,c	;volatile
  7571                           
  7572                           ;LED.c: 333: };LED.c: 335: if((diode & 0b0000000100) == 0b0000000100)
  7573  001AAE  A406               	btfss	LED_Control@diode,2,c
  7574  001AB0  D003               	goto	l4283
  7575                           
  7576                           ;LED.c: 336: {;LED.c: 337: LATB = LATB | ~0b11111110;
  7577  001AB2  508A               	movf	3978,w,c	;volatile
  7578  001AB4  0901               	iorlw	1
  7579  001AB6  D002               	goto	L6
  7580  001AB8                     l4283:
  7581                           
  7582                           ;LED.c: 339: else;LED.c: 340: {;LED.c: 341: LATB = LATB & 0b11111110;
  7583  001AB8  508A               	movf	3978,w,c	;volatile
  7584  001ABA  0BFE               	andlw	254
  7585  001ABC                     L6:
  7586  001ABC  6E8A               	movwf	3978,c	;volatile
  7587                           
  7588                           ;LED.c: 342: };LED.c: 345: if((diode & 0b0000001000) == 0b0000001000)
  7589  001ABE  A606               	btfss	LED_Control@diode,3,c
  7590  001AC0  D003               	goto	l4289
  7591                           
  7592                           ;LED.c: 346: {;LED.c: 347: LATA = LATA | ~0b11111101;
  7593  001AC2  5089               	movf	3977,w,c	;volatile
  7594  001AC4  0902               	iorlw	2
  7595  001AC6  D002               	goto	L7
  7596  001AC8                     l4289:
  7597                           
  7598                           ;LED.c: 349: else;LED.c: 350: {;LED.c: 351: LATA = LATA & 0b11111101;
  7599  001AC8  5089               	movf	3977,w,c	;volatile
  7600  001ACA  0BFD               	andlw	253
  7601  001ACC                     L7:
  7602  001ACC  6E89               	movwf	3977,c	;volatile
  7603                           
  7604                           ;LED.c: 352: };LED.c: 355: if((diode & 0b0000010000) == 0b0000010000)
  7605  001ACE  A806               	btfss	LED_Control@diode,4,c
  7606  001AD0  D003               	goto	l4295
  7607                           
  7608                           ;LED.c: 356: {;LED.c: 357: LATA = LATA | ~0b11110111;
  7609  001AD2  5089               	movf	3977,w,c	;volatile
  7610  001AD4  0908               	iorlw	8
  7611  001AD6  D002               	goto	L8
  7612  001AD8                     l4295:
  7613                           
  7614                           ;LED.c: 359: else;LED.c: 360: {;LED.c: 361: LATA = LATA & 0b11110111;
  7615  001AD8  5089               	movf	3977,w,c	;volatile
  7616  001ADA  0BF7               	andlw	247
  7617  001ADC                     L8:
  7618  001ADC  6E89               	movwf	3977,c	;volatile
  7619                           
  7620                           ;LED.c: 362: };LED.c: 365: if((diode & 0b0000100000) == 0b0000100000)
  7621  001ADE  AA06               	btfss	LED_Control@diode,5,c
  7622  001AE0  D003               	goto	l4301
  7623                           
  7624                           ;LED.c: 366: {;LED.c: 367: LATA = LATA | ~0b11011111;
  7625  001AE2  5089               	movf	3977,w,c	;volatile
  7626  001AE4  0920               	iorlw	32
  7627  001AE6  D002               	goto	L9
  7628  001AE8                     l4301:
  7629                           
  7630                           ;LED.c: 369: else;LED.c: 370: {;LED.c: 371: LATA = LATA & 0b11011111;
  7631  001AE8  5089               	movf	3977,w,c	;volatile
  7632  001AEA  0BDF               	andlw	223
  7633  001AEC                     L9:
  7634  001AEC  6E89               	movwf	3977,c	;volatile
  7635                           
  7636                           ;LED.c: 372: };LED.c: 374: if((diode & 0b0001000000) == 0b0001000000)
  7637  001AEE  AC06               	btfss	LED_Control@diode,6,c
  7638  001AF0  D003               	goto	l4307
  7639                           
  7640                           ;LED.c: 375: {;LED.c: 376: LATE = LATE | ~0b11111101;
  7641  001AF2  508D               	movf	3981,w,c	;volatile
  7642  001AF4  0902               	iorlw	2
  7643  001AF6  D002               	goto	L10
  7644  001AF8                     l4307:
  7645                           
  7646                           ;LED.c: 378: else;LED.c: 379: {;LED.c: 380: LATE = LATE & 0b11111101;
  7647  001AF8  508D               	movf	3981,w,c	;volatile
  7648  001AFA  0BFD               	andlw	253
  7649  001AFC                     L10:
  7650  001AFC  6E8D               	movwf	3981,c	;volatile
  7651                           
  7652                           ;LED.c: 381: };LED.c: 383: if((diode & 0b0010000000) == 0b0010000000)
  7653  001AFE  AE06               	btfss	LED_Control@diode,7,c
  7654  001B00  D003               	goto	l4313
  7655                           
  7656                           ;LED.c: 384: {;LED.c: 385: LATA = LATA | ~0b01111111;
  7657  001B02  5089               	movf	3977,w,c	;volatile
  7658  001B04  0980               	iorlw	128
  7659  001B06  D002               	goto	L11
  7660  001B08                     l4313:
  7661                           
  7662                           ;LED.c: 387: else;LED.c: 388: {;LED.c: 389: LATA = LATA & 0b01111111;
  7663  001B08  5089               	movf	3977,w,c	;volatile
  7664  001B0A  0B7F               	andlw	127
  7665  001B0C                     L11:
  7666  001B0C  6E89               	movwf	3977,c	;volatile
  7667                           
  7668                           ;LED.c: 390: };LED.c: 393: if((diode & 0b0100000000) == 0b0100000000)
  7669  001B0E  A007               	btfss	LED_Control@diode+1,0,c
  7670  001B10  D003               	goto	l4319
  7671                           
  7672                           ;LED.c: 394: {;LED.c: 395: LATD = LATD | ~0b11111110;
  7673  001B12  508C               	movf	3980,w,c	;volatile
  7674  001B14  0901               	iorlw	1
  7675  001B16  D002               	goto	L12
  7676  001B18                     l4319:
  7677                           
  7678                           ;LED.c: 397: else;LED.c: 398: {;LED.c: 399: LATD = LATD & 0b11111110;
  7679  001B18  508C               	movf	3980,w,c	;volatile
  7680  001B1A  0BFE               	andlw	254
  7681  001B1C                     L12:
  7682  001B1C  6E8C               	movwf	3980,c	;volatile
  7683                           
  7684                           ;LED.c: 400: };LED.c: 402: if((diode & 0b1000000000) == 0b1000000000)
  7685  001B1E  A207               	btfss	LED_Control@diode+1,1,c
  7686  001B20  D003               	goto	l4325
  7687                           
  7688                           ;LED.c: 403: {;LED.c: 404: LATD = LATD | ~0b11111011;
  7689  001B22  508C               	movf	3980,w,c	;volatile
  7690  001B24  0904               	iorlw	4
  7691  001B26  D002               	goto	L13
  7692  001B28                     l4325:
  7693                           
  7694                           ;LED.c: 406: else;LED.c: 407: {;LED.c: 408: LATD = LATD & 0b11111011;
  7695  001B28  508C               	movf	3980,w,c	;volatile
  7696  001B2A  0BFB               	andlw	251
  7697  001B2C                     L13:
  7698  001B2C  6E8C               	movwf	3980,c	;volatile
  7699  001B2E                     l428:
  7700                           
  7701                           ;LED.c: 409: };LED.c: 411: };LED.c: 413: if(color == GREEN)
  7702  001B2E  040A               	decf	LED_Control@color,w,c
  7703  001B30  A4D8               	btfss	status,2,c
  7704  001B32  0012               	return	
  7705                           
  7706                           ;LED.c: 414: {;LED.c: 416: if((diode & 0b0000000001) == 0b0000000001)
  7707  001B34  A006               	btfss	LED_Control@diode,0,c
  7708  001B36  D003               	goto	l4331
  7709                           
  7710                           ;LED.c: 417: {;LED.c: 418: LATD = LATD | ~0b11011111;
  7711  001B38  508C               	movf	3980,w,c	;volatile
  7712  001B3A  0920               	iorlw	32
  7713  001B3C  D002               	goto	L14
  7714  001B3E                     l4331:
  7715                           
  7716                           ;LED.c: 420: else;LED.c: 421: {;LED.c: 422: LATD = LATD & 0b11011111;
  7717  001B3E  508C               	movf	3980,w,c	;volatile
  7718  001B40  0BDF               	andlw	223
  7719  001B42                     L14:
  7720  001B42  6E8C               	movwf	3980,c	;volatile
  7721                           
  7722                           ;LED.c: 423: };LED.c: 426: if((diode & 0b0000000010) == 0b0000000010)
  7723  001B44  A206               	btfss	LED_Control@diode,1,c
  7724  001B46  D003               	goto	l4337
  7725                           
  7726                           ;LED.c: 427: {;LED.c: 428: LATD = LATD | ~0b01111111;
  7727  001B48  508C               	movf	3980,w,c	;volatile
  7728  001B4A  0980               	iorlw	128
  7729  001B4C  D002               	goto	L15
  7730  001B4E                     l4337:
  7731                           
  7732                           ;LED.c: 430: else;LED.c: 431: {;LED.c: 432: LATD = LATD & 0b01111111;
  7733  001B4E  508C               	movf	3980,w,c	;volatile
  7734  001B50  0B7F               	andlw	127
  7735  001B52                     L15:
  7736  001B52  6E8C               	movwf	3980,c	;volatile
  7737                           
  7738                           ;LED.c: 433: };LED.c: 436: if((diode & 0b0000000100) == 0b0000000100)
  7739  001B54  A406               	btfss	LED_Control@diode,2,c
  7740  001B56  D003               	goto	l4343
  7741                           
  7742                           ;LED.c: 437: {;LED.c: 438: LATB = LATB | ~0b11111101;
  7743  001B58  508A               	movf	3978,w,c	;volatile
  7744  001B5A  0902               	iorlw	2
  7745  001B5C  D002               	goto	L16
  7746  001B5E                     l4343:
  7747                           
  7748                           ;LED.c: 440: else;LED.c: 441: {;LED.c: 442: LATB = LATB & 0b11111101;
  7749  001B5E  508A               	movf	3978,w,c	;volatile
  7750  001B60  0BFD               	andlw	253
  7751  001B62                     L16:
  7752  001B62  6E8A               	movwf	3978,c	;volatile
  7753                           
  7754                           ;LED.c: 443: };LED.c: 445: if((diode & 0b0000001000) == 0b0000001000)
  7755  001B64  A606               	btfss	LED_Control@diode,3,c
  7756  001B66  D003               	goto	l4349
  7757                           
  7758                           ;LED.c: 446: {;LED.c: 447: LATA = LATA | ~0b11111011;
  7759  001B68  5089               	movf	3977,w,c	;volatile
  7760  001B6A  0904               	iorlw	4
  7761  001B6C  D002               	goto	L17
  7762  001B6E                     l4349:
  7763                           
  7764                           ;LED.c: 449: else;LED.c: 450: {;LED.c: 451: LATA = LATA & 0b11111011;
  7765  001B6E  5089               	movf	3977,w,c	;volatile
  7766  001B70  0BFB               	andlw	251
  7767  001B72                     L17:
  7768  001B72  6E89               	movwf	3977,c	;volatile
  7769                           
  7770                           ;LED.c: 452: };LED.c: 455: if((diode & 0b0000010000) == 0b0000010000)
  7771  001B74  A806               	btfss	LED_Control@diode,4,c
  7772  001B76  D003               	goto	l4355
  7773                           
  7774                           ;LED.c: 456: {;LED.c: 457: LATA = LATA | ~0b11101111;
  7775  001B78  5089               	movf	3977,w,c	;volatile
  7776  001B7A  0910               	iorlw	16
  7777  001B7C  D002               	goto	L18
  7778  001B7E                     l4355:
  7779                           
  7780                           ;LED.c: 459: else;LED.c: 460: {;LED.c: 461: LATA = LATA & 0b11101111;
  7781  001B7E  5089               	movf	3977,w,c	;volatile
  7782  001B80  0BEF               	andlw	239
  7783  001B82                     L18:
  7784  001B82  6E89               	movwf	3977,c	;volatile
  7785                           
  7786                           ;LED.c: 462: };LED.c: 465: if((diode & 0b0000100000) == 0b0000100000)
  7787  001B84  AA06               	btfss	LED_Control@diode,5,c
  7788  001B86  D003               	goto	l4361
  7789                           
  7790                           ;LED.c: 466: {;LED.c: 467: LATE = LATE | ~0b11111110;
  7791  001B88  508D               	movf	3981,w,c	;volatile
  7792  001B8A  0901               	iorlw	1
  7793  001B8C  D002               	goto	L19
  7794  001B8E                     l4361:
  7795                           
  7796                           ;LED.c: 469: else;LED.c: 470: {;LED.c: 471: LATE = LATE & 0b11111110;
  7797  001B8E  508D               	movf	3981,w,c	;volatile
  7798  001B90  0BFE               	andlw	254
  7799  001B92                     L19:
  7800  001B92  6E8D               	movwf	3981,c	;volatile
  7801                           
  7802                           ;LED.c: 472: };LED.c: 475: if((diode & 0b0001000000) == 0b0001000000)
  7803  001B94  AC06               	btfss	LED_Control@diode,6,c
  7804  001B96  D003               	goto	l4367
  7805                           
  7806                           ;LED.c: 476: {;LED.c: 477: LATE = LATE | ~0b11111011;
  7807  001B98  508D               	movf	3981,w,c	;volatile
  7808  001B9A  0904               	iorlw	4
  7809  001B9C  D002               	goto	L20
  7810  001B9E                     l4367:
  7811                           
  7812                           ;LED.c: 479: else;LED.c: 480: {;LED.c: 481: LATE = LATE & 0b11111011;
  7813  001B9E  508D               	movf	3981,w,c	;volatile
  7814  001BA0  0BFB               	andlw	251
  7815  001BA2                     L20:
  7816  001BA2  6E8D               	movwf	3981,c	;volatile
  7817                           
  7818                           ;LED.c: 482: };LED.c: 484: if((diode & 0b0010000000) == 0b0010000000)
  7819  001BA4  AE06               	btfss	LED_Control@diode,7,c
  7820  001BA6  D003               	goto	l4373
  7821                           
  7822                           ;LED.c: 485: {;LED.c: 486: LATA = LATA | ~0b10111111;
  7823  001BA8  5089               	movf	3977,w,c	;volatile
  7824  001BAA  0940               	iorlw	64
  7825  001BAC  D002               	goto	L21
  7826  001BAE                     l4373:
  7827                           
  7828                           ;LED.c: 488: else;LED.c: 489: {;LED.c: 490: LATA = LATA & 0b10111111;
  7829  001BAE  5089               	movf	3977,w,c	;volatile
  7830  001BB0  0BBF               	andlw	191
  7831  001BB2                     L21:
  7832  001BB2  6E89               	movwf	3977,c	;volatile
  7833                           
  7834                           ;LED.c: 491: };LED.c: 493: if((diode & 0b0100000000) == 0b0100000000)
  7835  001BB4  A007               	btfss	LED_Control@diode+1,0,c
  7836  001BB6  D003               	goto	l4379
  7837                           
  7838                           ;LED.c: 494: {;LED.c: 495: LATD = LATD | ~0b11111101;
  7839  001BB8  508C               	movf	3980,w,c	;volatile
  7840  001BBA  0902               	iorlw	2
  7841  001BBC  D002               	goto	L22
  7842  001BBE                     l4379:
  7843                           
  7844                           ;LED.c: 497: else;LED.c: 498: {;LED.c: 499: LATD = LATD & 0b11111101;
  7845  001BBE  508C               	movf	3980,w,c	;volatile
  7846  001BC0  0BFD               	andlw	253
  7847  001BC2                     L22:
  7848  001BC2  6E8C               	movwf	3980,c	;volatile
  7849                           
  7850                           ;LED.c: 500: };LED.c: 502: if((diode & 0b1000000000) == 0b1000000000)
  7851  001BC4  A207               	btfss	LED_Control@diode+1,1,c
  7852  001BC6  D004               	goto	l4385
  7853                           
  7854                           ;LED.c: 503: {;LED.c: 504: LATD = LATD | ~0b11110111;
  7855  001BC8  508C               	movf	3980,w,c	;volatile
  7856  001BCA  0908               	iorlw	8
  7857  001BCC  6E8C               	movwf	3980,c	;volatile
  7858                           
  7859                           ;LED.c: 505: }
  7860  001BCE  0012               	return	
  7861  001BD0                     l4385:
  7862                           
  7863                           ;LED.c: 506: else;LED.c: 507: {;LED.c: 508: LATD = LATD &0b11110111;
  7864  001BD0  508C               	movf	3980,w,c	;volatile
  7865  001BD2  0BF7               	andlw	247
  7866  001BD4  6E8C               	movwf	3980,c	;volatile
  7867  001BD6  0012               	return		;funcret
  7868  001BD8                     __end_of_LED_Control:
  7869                           	opt callstack 0
  7870                           
  7871 ;; *************** function _INI_GlobalInterrupt *****************
  7872 ;; Defined at:
  7873 ;;		line 78 in file "INI.c"
  7874 ;; Parameters:    Size  Location     Type
  7875 ;;		None
  7876 ;; Auto vars:     Size  Location     Type
  7877 ;;		None
  7878 ;; Return value:  Size  Location     Type
  7879 ;;                  1    wreg      void 
  7880 ;; Registers used:
  7881 ;;		None
  7882 ;; Tracked objects:
  7883 ;;		On entry : 0/0
  7884 ;;		On exit  : 0/0
  7885 ;;		Unchanged: 0/0
  7886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7890 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7891 ;;Total ram usage:        0 bytes
  7892 ;; Hardware stack levels used:    1
  7893 ;; Hardware stack levels required when called:    3
  7894 ;; This function calls:
  7895 ;;		Nothing
  7896 ;; This function is called by:
  7897 ;;		_INI_All
  7898 ;; This function uses a non-reentrant model
  7899 ;;
  7900                           
  7901                           	psect	text53
  7902  002CFA                     __ptext53:
  7903                           	opt callstack 0
  7904  002CFA                     _INI_GlobalInterrupt:
  7905                           	opt callstack 26
  7906                           
  7907                           ;INI.c: 80: INTCONbits.GIEH=1;
  7908                           
  7909                           ;incstack = 0
  7910  002CFA  8EF2               	bsf	4082,7,c	;volatile
  7911                           
  7912                           ;INI.c: 81: INTCONbits.GIEL=1;
  7913  002CFC  8CF2               	bsf	4082,6,c	;volatile
  7914                           
  7915                           ;INI.c: 82: RCONbits.IPEN=1;
  7916  002CFE  8ED0               	bsf	4048,7,c	;volatile
  7917                           
  7918                           ;INI.c: 83: IPEN =1;
  7919  002D00  8ED0               	bsf	4048,7,c	;volatile
  7920                           
  7921                           ;INI.c: 85: PEIE=1;
  7922  002D02  8CF2               	bsf	4082,6,c	;volatile
  7923                           
  7924                           ;INI.c: 86: TMR1IP = 0;
  7925  002D04  909F               	bcf	3999,0,c	;volatile
  7926  002D06  0012               	return		;funcret
  7927  002D08                     __end_of_INI_GlobalInterrupt:
  7928                           	opt callstack 0
  7929                           
  7930 ;; *************** function _CAN_Setup *****************
  7931 ;; Defined at:
  7932 ;;		line 24 in file "CAN.c"
  7933 ;; Parameters:    Size  Location     Type
  7934 ;;		None
  7935 ;; Auto vars:     Size  Location     Type
  7936 ;;		None
  7937 ;; Return value:  Size  Location     Type
  7938 ;;                  1    wreg      void 
  7939 ;; Registers used:
  7940 ;;		wreg, status,2, status,0, cstack
  7941 ;; Tracked objects:
  7942 ;;		On entry : 0/0
  7943 ;;		On exit  : 0/0
  7944 ;;		Unchanged: 0/0
  7945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7948 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7949 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7950 ;;Total ram usage:        1 bytes
  7951 ;; Hardware stack levels used:    1
  7952 ;; Hardware stack levels required when called:    5
  7953 ;; This function calls:
  7954 ;;		_CAN_SetupClock
  7955 ;;		_CAN_SetupMask
  7956 ;; This function is called by:
  7957 ;;		_INI_All
  7958 ;; This function uses a non-reentrant model
  7959 ;;
  7960                           
  7961                           	psect	text54
  7962  002768                     __ptext54:
  7963                           	opt callstack 0
  7964  002768                     _CAN_Setup:
  7965                           	opt callstack 24
  7966                           
  7967                           ;CAN.c: 29: CANCON = 0x80;
  7968                           
  7969                           ;incstack = 0
  7970  002768  0E80               	movlw	128
  7971  00276A  6E6F               	movwf	3951,c	;volatile
  7972  00276C                     l4857:
  7973  00276C  506E               	movf	3950,w,c	;volatile
  7974  00276E  0BE0               	andlw	224
  7975  002770  0A80               	xorlw	128
  7976  002772  A4D8               	btfss	status,2,c
  7977  002774  D7FB               	goto	l4857
  7978                           
  7979                           ;CAN.c: 33: };CAN.c: 35: BSEL0 = 0;
  7980  002776  0E00               	movlw	0
  7981  002778  010D               	movlb	13	; () banked
  7982  00277A  6FF8               	movwf	248,b	;volatile
  7983                           
  7984                           ;CAN.c: 36: TXB0CON = 0;
  7985  00277C  0E00               	movlw	0
  7986  00277E  010F               	movlb	15	; () banked
  7987  002780  6F40               	movwf	64,b	;volatile
  7988                           
  7989                           ;CAN.c: 37: RXB0CON = 0;
  7990  002782  0E00               	movlw	0
  7991  002784  6E60               	movwf	3936,c	;volatile
  7992                           
  7993                           ;CAN.c: 38: RXB1CON = 0;
  7994  002786  0E00               	movlw	0
  7995  002788  6F50               	movwf	80,b	;volatile
  7996                           
  7997                           ;CAN.c: 39: B0CON = 0;
  7998  00278A  0E00               	movlw	0
  7999  00278C  010E               	movlb	14	; () banked
  8000  00278E  6F20               	movwf	32,b	;volatile
  8001                           
  8002                           ;CAN.c: 40: B1CON = 0;
  8003  002790  0E00               	movlw	0
  8004  002792  6F30               	movwf	48,b	;volatile
  8005                           
  8006                           ;CAN.c: 41: PIE3 = 0;
  8007  002794  0E00               	movlw	0
  8008  002796  6EA3               	movwf	4003,c	;volatile
  8009                           
  8010                           ; BSR set to: 14
  8011                           ;CAN.c: 42: IPR3 = 0xFF;
  8012  002798  68A5               	setf	4005,c	;volatile
  8013                           
  8014                           ;CAN.c: 43: PIR3 = 0x00;
  8015  00279A  0E00               	movlw	0
  8016  00279C  6EA4               	movwf	4004,c	;volatile
  8017                           
  8018                           ;CAN.c: 44: BIE0 = 0;
  8019  00279E  0E00               	movlw	0
  8020  0027A0  010D               	movlb	13	; () banked
  8021  0027A2  6FFA               	movwf	250,b	;volatile
  8022                           
  8023                           ;CAN.c: 48: ECANCON = 0x90;
  8024  0027A4  0E90               	movlw	144
  8025  0027A6  6E77               	movwf	3959,c	;volatile
  8026                           
  8027                           ; BSR set to: 13
  8028                           ;CAN.c: 51: CAN_SetupClock();
  8029  0027A8  ECE7  F015         	call	_CAN_SetupClock	;wreg free
  8030                           
  8031                           ;CAN.c: 54: CAN_SetupMask();
  8032  0027AC  ECD4  F012         	call	_CAN_SetupMask	;wreg free
  8033                           
  8034                           ;CAN.c: 56: CIOCON = 0xff;
  8035  0027B0  6873               	setf	3955,c	;volatile
  8036                           
  8037                           ;CAN.c: 62: CANCON = 0x00;
  8038  0027B2  0E00               	movlw	0
  8039  0027B4  6E6F               	movwf	3951,c	;volatile
  8040  0027B6                     l4869:
  8041  0027B6  CF6E F006          	movff	3950,??_CAN_Setup	;volatile
  8042  0027BA  0EE0               	movlw	224
  8043  0027BC  1606               	andwf	??_CAN_Setup,f,c
  8044  0027BE  B4D8               	btfsc	status,2,c
  8045  0027C0  0012               	return	
  8046  0027C2  D7F9               	goto	l4869
  8047  0027C4                     __end_of_CAN_Setup:
  8048                           	opt callstack 0
  8049                           
  8050 ;; *************** function _CAN_SetupMask *****************
  8051 ;; Defined at:
  8052 ;;		line 84 in file "CAN.c"
  8053 ;; Parameters:    Size  Location     Type
  8054 ;;		None
  8055 ;; Auto vars:     Size  Location     Type
  8056 ;;		None
  8057 ;; Return value:  Size  Location     Type
  8058 ;;                  1    wreg      void 
  8059 ;; Registers used:
  8060 ;;		wreg, status,2, cstack
  8061 ;; Tracked objects:
  8062 ;;		On entry : 0/0
  8063 ;;		On exit  : 0/0
  8064 ;;		Unchanged: 0/0
  8065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8070 ;;Total ram usage:        0 bytes
  8071 ;; Hardware stack levels used:    1
  8072 ;; Hardware stack levels required when called:    4
  8073 ;; This function calls:
  8074 ;;		_CAN_SetupFilter_Ne
  8075 ;; This function is called by:
  8076 ;;		_CAN_Setup
  8077 ;; This function uses a non-reentrant model
  8078 ;;
  8079                           
  8080                           	psect	text55
  8081  0025A8                     __ptext55:
  8082                           	opt callstack 0
  8083  0025A8                     _CAN_SetupMask:
  8084                           	opt callstack 24
  8085                           
  8086                           ;CAN.c: 86: MSEL0 = 0x50;
  8087                           
  8088                           ;incstack = 0
  8089  0025A8  0E50               	movlw	80
  8090  0025AA  010D               	movlb	13	; () banked
  8091  0025AC  6FF0               	movwf	240,b	;volatile
  8092                           
  8093                           ;CAN.c: 87: MSEL1 = 0x55;
  8094  0025AE  0E55               	movlw	85
  8095  0025B0  6FF1               	movwf	241,b	;volatile
  8096                           
  8097                           ;CAN.c: 88: MSEL2 = 0x55;
  8098  0025B2  0E55               	movlw	85
  8099  0025B4  6FF2               	movwf	242,b	;volatile
  8100                           
  8101                           ;CAN.c: 89: MSEL3 = 0x55;
  8102  0025B6  0E55               	movlw	85
  8103  0025B8  6FF3               	movwf	243,b	;volatile
  8104                           
  8105                           ;CAN.c: 92: RXM0SIDH = 0b00000000;
  8106  0025BA  0E00               	movlw	0
  8107  0025BC  010F               	movlb	15	; () banked
  8108  0025BE  6F18               	movwf	24,b	;volatile
  8109                           
  8110                           ;CAN.c: 93: RXM0SIDL = 0b00001011;
  8111  0025C0  0E0B               	movlw	11
  8112  0025C2  6F19               	movwf	25,b	;volatile
  8113                           
  8114                           ; BSR set to: 15
  8115                           ;CAN.c: 94: RXM0EIDH = 0xFF;
  8116  0025C4  691A               	setf	26,b	;volatile
  8117                           
  8118                           ; BSR set to: 15
  8119                           ;CAN.c: 95: RXM0EIDL = 0xFF;
  8120  0025C6  691B               	setf	27,b	;volatile
  8121                           
  8122                           ; BSR set to: 15
  8123                           ;CAN.c: 98: RXM1SIDH = 0xFF;
  8124  0025C8  691C               	setf	28,b	;volatile
  8125                           
  8126                           ; BSR set to: 15
  8127                           ;CAN.c: 99: RXM1SIDL = 0xFF;
  8128  0025CA  691D               	setf	29,b	;volatile
  8129                           
  8130                           ; BSR set to: 15
  8131                           ;CAN.c: 100: RXM1EIDH = 0xFF;
  8132  0025CC  691E               	setf	30,b	;volatile
  8133                           
  8134                           ; BSR set to: 15
  8135                           ;CAN.c: 101: RXM1EIDL = 0xFF;
  8136  0025CE  691F               	setf	31,b	;volatile
  8137                           
  8138                           ;CAN.c: 104: RXM0SIDH = 0x00;
  8139  0025D0  0E00               	movlw	0
  8140  0025D2  6F18               	movwf	24,b	;volatile
  8141                           
  8142                           ;CAN.c: 105: RXM0SIDL = 0x00;
  8143  0025D4  0E00               	movlw	0
  8144  0025D6  6F19               	movwf	25,b	;volatile
  8145                           
  8146                           ;CAN.c: 110: RXF0SIDH = 0x00;
  8147  0025D8  0E00               	movlw	0
  8148  0025DA  6F00               	movwf	0,b	;volatile
  8149                           
  8150                           ;CAN.c: 111: RXF0SIDL = 0x01;
  8151  0025DC  0E01               	movlw	1
  8152  0025DE  6F01               	movwf	1,b	;volatile
  8153                           
  8154                           ; BSR set to: 15
  8155                           ;CAN.c: 112: RXF0SIDLbits.EXIDEN = 1;
  8156  0025E0  8701               	bsf	1,3,b	;volatile
  8157                           
  8158                           ;CAN.c: 113: RXF0EIDH = (BYTE)(DaneCan.adresCAN>>8);
  8159  0025E2  0100               	movlb	0	; () banked
  8160  0025E4  51CE               	movf	(_DaneCan+3)& (0+255),w,b
  8161  0025E6  010F               	movlb	15	; () banked
  8162  0025E8  6F02               	movwf	2,b	;volatile
  8163                           
  8164                           ; BSR set to: 15
  8165                           ;CAN.c: 115: RXF0EIDL = (BYTE)DaneCan.adresCAN;
  8166  0025EA  C0CD  FF03         	movff	_DaneCan+2,3843	;volatile
  8167                           
  8168                           ;CAN.c: 117: RXF1SIDH = 0x00;
  8169  0025EE  0E00               	movlw	0
  8170  0025F0  6F04               	movwf	4,b	;volatile
  8171                           
  8172                           ;CAN.c: 118: RXF1SIDL = 0x01;
  8173  0025F2  0E01               	movlw	1
  8174  0025F4  6F05               	movwf	5,b	;volatile
  8175                           
  8176                           ; BSR set to: 15
  8177                           ;CAN.c: 119: RXF1SIDLbits.EXIDEN = 1;
  8178  0025F6  8705               	bsf	5,3,b	;volatile
  8179                           
  8180                           ;CAN.c: 120: RXF1EIDH = 0x7F;
  8181  0025F8  0E7F               	movlw	127
  8182  0025FA  6F06               	movwf	6,b	;volatile
  8183                           
  8184                           ; BSR set to: 15
  8185                           ;CAN.c: 121: RXF1EIDL = 0xFF;
  8186  0025FC  6907               	setf	7,b	;volatile
  8187                           
  8188                           ; BSR set to: 15
  8189                           ;CAN.c: 123: CAN_SetupFilter_Ne();
  8190  0025FE  EC85  F011         	call	_CAN_SetupFilter_Ne	;wreg free
  8191                           
  8192                           ;CAN.c: 126: RXFBCON0 = 0b00000000;
  8193  002602  0E00               	movlw	0
  8194  002604  010D               	movlb	13	; () banked
  8195  002606  6FE0               	movwf	224,b	;volatile
  8196                           
  8197                           ; BSR set to: 13
  8198                           ;CAN.c: 128: RXFBCON1 = 0b00010001;
  8199  002608  0E11               	movlw	17
  8200  00260A  6FE1               	movwf	225,b	;volatile
  8201                           
  8202                           ; BSR set to: 13
  8203                           ;CAN.c: 130: RXFBCON2 = 0b00010001;
  8204  00260C  0E11               	movlw	17
  8205  00260E  6FE2               	movwf	226,b	;volatile
  8206                           
  8207                           ; BSR set to: 13
  8208                           ;CAN.c: 132: RXFBCON3 = 0b00010001;
  8209  002610  0E11               	movlw	17
  8210  002612  6FE3               	movwf	227,b	;volatile
  8211                           
  8212                           ; BSR set to: 13
  8213                           ;CAN.c: 134: RXFBCON4 = 0b00010001;
  8214  002614  0E11               	movlw	17
  8215  002616  6FE4               	movwf	228,b	;volatile
  8216                           
  8217                           ; BSR set to: 13
  8218                           ;CAN.c: 136: RXFCON0 = 0b11111111;
  8219  002618  69D4               	setf	212,b	;volatile
  8220                           
  8221                           ; BSR set to: 13
  8222                           ;CAN.c: 137: RXFCON1 = 0b00000011;
  8223  00261A  0E03               	movlw	3
  8224  00261C  6FD5               	movwf	213,b	;volatile
  8225                           
  8226                           ; BSR set to: 13
  8227  00261E  0012               	return		;funcret
  8228  002620                     __end_of_CAN_SetupMask:
  8229                           	opt callstack 0
  8230                           
  8231 ;; *************** function _CAN_SetupFilter_Ne *****************
  8232 ;; Defined at:
  8233 ;;		line 141 in file "CAN.c"
  8234 ;; Parameters:    Size  Location     Type
  8235 ;;		None
  8236 ;; Auto vars:     Size  Location     Type
  8237 ;;		None
  8238 ;; Return value:  Size  Location     Type
  8239 ;;                  1    wreg      void 
  8240 ;; Registers used:
  8241 ;;		wreg, status,2
  8242 ;; Tracked objects:
  8243 ;;		On entry : 0/0
  8244 ;;		On exit  : 0/0
  8245 ;;		Unchanged: 0/0
  8246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8251 ;;Total ram usage:        0 bytes
  8252 ;; Hardware stack levels used:    1
  8253 ;; Hardware stack levels required when called:    3
  8254 ;; This function calls:
  8255 ;;		Nothing
  8256 ;; This function is called by:
  8257 ;;		_CAN_SetupMask
  8258 ;;		_FRAME_AdressOfNeighbors
  8259 ;; This function uses a non-reentrant model
  8260 ;;
  8261                           
  8262                           	psect	text56
  8263  00230A                     __ptext56:
  8264                           	opt callstack 0
  8265  00230A                     _CAN_SetupFilter_Ne:
  8266                           	opt callstack 24
  8267                           
  8268                           ;CAN.c: 145: RXF2SIDH = 0;
  8269                           
  8270                           ; BSR set to: 13
  8271                           ;incstack = 0
  8272  00230A  0E00               	movlw	0
  8273  00230C  010F               	movlb	15	; () banked
  8274  00230E  6F08               	movwf	8,b	;volatile
  8275                           
  8276                           ;CAN.c: 146: RXF2SIDL = 0x20;
  8277  002310  0E20               	movlw	32
  8278  002312  6F09               	movwf	9,b	;volatile
  8279                           
  8280                           ; BSR set to: 15
  8281                           ;CAN.c: 147: RXF2SIDLbits.EXIDEN = 1;
  8282  002314  8709               	bsf	9,3,b	;volatile
  8283                           
  8284                           ;CAN.c: 148: RXF2EIDH = (BYTE)(NeightAdress1>>8);
  8285  002316  5039               	movf	_NeightAdress1+1,w,c	;volatile
  8286  002318  6F0A               	movwf	10,b	;volatile
  8287                           
  8288                           ; BSR set to: 15
  8289                           ;CAN.c: 149: RXF2EIDL = (BYTE)(NeightAdress1 & 0xFF);
  8290  00231A  C038  FF0B         	movff	_NeightAdress1,3851	;volatile
  8291                           
  8292                           ;CAN.c: 152: RXF3SIDH = 0;
  8293  00231E  0E00               	movlw	0
  8294  002320  6F0C               	movwf	12,b	;volatile
  8295                           
  8296                           ;CAN.c: 153: RXF3SIDL = 0x20;
  8297  002322  0E20               	movlw	32
  8298  002324  6F0D               	movwf	13,b	;volatile
  8299                           
  8300                           ; BSR set to: 15
  8301                           ;CAN.c: 154: RXF3SIDLbits.EXIDEN = 1;
  8302  002326  870D               	bsf	13,3,b	;volatile
  8303                           
  8304                           ;CAN.c: 155: RXF3EIDH = (BYTE)(NeightAdress2>>8);
  8305  002328  504B               	movf	_NeightAdress2+1,w,c	;volatile
  8306  00232A  6F0E               	movwf	14,b	;volatile
  8307                           
  8308                           ; BSR set to: 15
  8309                           ;CAN.c: 156: RXF3EIDL = (BYTE)(NeightAdress2 & 0xFF);
  8310  00232C  C04A  FF0F         	movff	_NeightAdress2,3855	;volatile
  8311                           
  8312                           ;CAN.c: 158: RXF4SIDH = 0;
  8313  002330  0E00               	movlw	0
  8314  002332  6F10               	movwf	16,b	;volatile
  8315                           
  8316                           ;CAN.c: 159: RXF4SIDL = 0x20;
  8317  002334  0E20               	movlw	32
  8318  002336  6F11               	movwf	17,b	;volatile
  8319                           
  8320                           ; BSR set to: 15
  8321                           ;CAN.c: 160: RXF4SIDLbits.EXIDEN = 1;
  8322  002338  8711               	bsf	17,3,b	;volatile
  8323                           
  8324                           ;CAN.c: 161: RXF4EIDH = (BYTE)(NeightAdress3>>8);
  8325  00233A  5037               	movf	_NeightAdress3+1,w,c	;volatile
  8326  00233C  6F12               	movwf	18,b	;volatile
  8327                           
  8328                           ; BSR set to: 15
  8329                           ;CAN.c: 162: RXF4EIDL = (BYTE)(NeightAdress3 & 0xFF);
  8330  00233E  C036  FF13         	movff	_NeightAdress3,3859	;volatile
  8331                           
  8332                           ;CAN.c: 164: RXF5SIDH = 0;
  8333  002342  0E00               	movlw	0
  8334  002344  6F14               	movwf	20,b	;volatile
  8335                           
  8336                           ;CAN.c: 165: RXF5SIDL = 0x20;
  8337  002346  0E20               	movlw	32
  8338  002348  6F15               	movwf	21,b	;volatile
  8339                           
  8340                           ; BSR set to: 15
  8341                           ;CAN.c: 166: RXF5SIDLbits.EXIDEN = 1;
  8342  00234A  8715               	bsf	21,3,b	;volatile
  8343                           
  8344                           ;CAN.c: 167: RXF5EIDH = (BYTE)(NeightAdress4>>8);
  8345  00234C  5035               	movf	_NeightAdress4+1,w,c	;volatile
  8346  00234E  6F16               	movwf	22,b	;volatile
  8347                           
  8348                           ; BSR set to: 15
  8349                           ;CAN.c: 168: RXF5EIDL = (BYTE)(NeightAdress4 & 0xFF);
  8350  002350  C034  FF17         	movff	_NeightAdress4,3863	;volatile
  8351                           
  8352                           ;CAN.c: 170: RXF6SIDH = 0;
  8353  002354  0E00               	movlw	0
  8354  002356  010D               	movlb	13	; () banked
  8355  002358  6F60               	movwf	96,b	;volatile
  8356                           
  8357                           ;CAN.c: 171: RXF6SIDL = 0x20;
  8358  00235A  0E20               	movlw	32
  8359  00235C  6F61               	movwf	97,b	;volatile
  8360                           
  8361                           ; BSR set to: 13
  8362                           ;CAN.c: 172: RXF6SIDLbits.EXIDEN = 1;
  8363  00235E  8761               	bsf	97,3,b	;volatile
  8364                           
  8365                           ;CAN.c: 173: RXF6EIDH = (BYTE)(NeightAdress5>>8);
  8366  002360  5033               	movf	_NeightAdress5+1,w,c	;volatile
  8367  002362  6F62               	movwf	98,b	;volatile
  8368                           
  8369                           ; BSR set to: 13
  8370                           ;CAN.c: 174: RXF6EIDL = (BYTE)(NeightAdress5 & 0xFF);
  8371  002364  C032  FD63         	movff	_NeightAdress5,3427	;volatile
  8372                           
  8373                           ;CAN.c: 176: RXF7SIDH = 0;
  8374  002368  0E00               	movlw	0
  8375  00236A  6F64               	movwf	100,b	;volatile
  8376                           
  8377                           ;CAN.c: 177: RXF7SIDL = 0x20;
  8378  00236C  0E20               	movlw	32
  8379  00236E  6F65               	movwf	101,b	;volatile
  8380                           
  8381                           ; BSR set to: 13
  8382                           ;CAN.c: 178: RXF7SIDLbits.EXIDEN = 1;
  8383  002370  8765               	bsf	101,3,b	;volatile
  8384                           
  8385                           ;CAN.c: 179: RXF7EIDH = (BYTE)(NeightAdress6>>8);
  8386  002372  5031               	movf	_NeightAdress6+1,w,c	;volatile
  8387  002374  6F66               	movwf	102,b	;volatile
  8388                           
  8389                           ; BSR set to: 13
  8390                           ;CAN.c: 180: RXF7EIDL = (BYTE)(NeightAdress6 & 0xFF);
  8391  002376  C030  FD67         	movff	_NeightAdress6,3431	;volatile
  8392                           
  8393                           ;CAN.c: 182: RXF8SIDH = 0;
  8394  00237A  0E00               	movlw	0
  8395  00237C  6F68               	movwf	104,b	;volatile
  8396                           
  8397                           ;CAN.c: 183: RXF8SIDL = 0x20;
  8398  00237E  0E20               	movlw	32
  8399  002380  6F69               	movwf	105,b	;volatile
  8400                           
  8401                           ; BSR set to: 13
  8402                           ;CAN.c: 184: RXF8SIDLbits.EXIDEN = 1;
  8403  002382  8769               	bsf	105,3,b	;volatile
  8404                           
  8405                           ;CAN.c: 185: RXF8EIDH = (BYTE)(NeightAdress7>>8);
  8406  002384  502F               	movf	_NeightAdress7+1,w,c	;volatile
  8407  002386  6F6A               	movwf	106,b	;volatile
  8408                           
  8409                           ; BSR set to: 13
  8410                           ;CAN.c: 186: RXF8EIDL = (BYTE)(NeightAdress7 & 0xFF);
  8411  002388  C02E  FD6B         	movff	_NeightAdress7,3435	;volatile
  8412                           
  8413                           ;CAN.c: 188: RXF9SIDH = 0;
  8414  00238C  0E00               	movlw	0
  8415  00238E  6F70               	movwf	112,b	;volatile
  8416                           
  8417                           ;CAN.c: 189: RXF9SIDL = 0x20;
  8418  002390  0E20               	movlw	32
  8419  002392  6F71               	movwf	113,b	;volatile
  8420                           
  8421                           ; BSR set to: 13
  8422                           ;CAN.c: 190: RXF9SIDLbits.EXIDEN = 1;
  8423  002394  8771               	bsf	113,3,b	;volatile
  8424                           
  8425                           ;CAN.c: 191: RXF9EIDH = (BYTE)(NeightAdress8>>8);
  8426  002396  502D               	movf	_NeightAdress8+1,w,c	;volatile
  8427  002398  6F72               	movwf	114,b	;volatile
  8428                           
  8429                           ; BSR set to: 13
  8430                           ;CAN.c: 192: RXF9EIDL = (BYTE)(NeightAdress8 & 0xFF);
  8431  00239A  C02C  FD73         	movff	_NeightAdress8,3443	;volatile
  8432                           
  8433                           ; BSR set to: 13
  8434  00239E  0012               	return		;funcret
  8435  0023A0                     __end_of_CAN_SetupFilter_Ne:
  8436                           	opt callstack 0
  8437                           
  8438 ;; *************** function _CAN_SetupClock *****************
  8439 ;; Defined at:
  8440 ;;		line 200 in file "CAN.c"
  8441 ;; Parameters:    Size  Location     Type
  8442 ;;		None
  8443 ;; Auto vars:     Size  Location     Type
  8444 ;;		None
  8445 ;; Return value:  Size  Location     Type
  8446 ;;                  1    wreg      void 
  8447 ;; Registers used:
  8448 ;;		None
  8449 ;; Tracked objects:
  8450 ;;		On entry : 0/0
  8451 ;;		On exit  : 0/0
  8452 ;;		Unchanged: 0/0
  8453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8458 ;;Total ram usage:        0 bytes
  8459 ;; Hardware stack levels used:    1
  8460 ;; Hardware stack levels required when called:    3
  8461 ;; This function calls:
  8462 ;;		Nothing
  8463 ;; This function is called by:
  8464 ;;		_CAN_Setup
  8465 ;; This function uses a non-reentrant model
  8466 ;;
  8467                           
  8468                           	psect	text57
  8469  002BCE                     __ptext57:
  8470                           	opt callstack 0
  8471  002BCE                     _CAN_SetupClock:
  8472                           	opt callstack 25
  8473                           
  8474                           ;CAN.c: 202: BRGCON1bits.BRP0 = (((32000000/4)/(2*20*50000))-1) & 0b000001;
  8475                           
  8476                           ; BSR set to: 13
  8477                           ;incstack = 0
  8478  002BCE  8070               	bsf	3952,0,c	;volatile
  8479                           
  8480                           ;CAN.c: 203: BRGCON1bits.BRP1 = ((((32000000/4)/(2*20*50000))-1) >> 1) & 0b000001;
  8481  002BD0  8270               	bsf	3952,1,c	;volatile
  8482                           
  8483                           ;CAN.c: 204: BRGCON1bits.BRP2 = ((((32000000/4)/(2*20*50000))-1) >> 2) & 0b000001;
  8484  002BD2  9470               	bcf	3952,2,c	;volatile
  8485                           
  8486                           ;CAN.c: 205: BRGCON1bits.BRP3 = ((((32000000/4)/(2*20*50000))-1) >> 3) & 0b000001;
  8487  002BD4  9670               	bcf	3952,3,c	;volatile
  8488                           
  8489                           ;CAN.c: 206: BRGCON1bits.BRP4 = ((((32000000/4)/(2*20*50000))-1) >> 4) & 0b000001;
  8490  002BD6  9870               	bcf	3952,4,c	;volatile
  8491                           
  8492                           ;CAN.c: 207: BRGCON1bits.BRP5 = ((((32000000/4)/(2*20*50000))-1) >> 5) & 0b000001;
  8493  002BD8  9A70               	bcf	3952,5,c	;volatile
  8494                           
  8495                           ;CAN.c: 209: BRGCON1bits.SJW0 = 1;
  8496  002BDA  8C70               	bsf	3952,6,c	;volatile
  8497                           
  8498                           ;CAN.c: 210: BRGCON1bits.SJW1 = 1;
  8499  002BDC  8E70               	bsf	3952,7,c	;volatile
  8500                           
  8501                           ;CAN.c: 212: BRGCON2bits.SEG1PH0 = 1;
  8502  002BDE  8671               	bsf	3953,3,c	;volatile
  8503                           
  8504                           ;CAN.c: 213: BRGCON2bits.SEG1PH1 = 1;
  8505  002BE0  8871               	bsf	3953,4,c	;volatile
  8506                           
  8507                           ;CAN.c: 214: BRGCON2bits.SEG1PH2 = 1;
  8508  002BE2  8A71               	bsf	3953,5,c	;volatile
  8509                           
  8510                           ;CAN.c: 216: BRGCON2bits.PRSEG2 = 1;
  8511  002BE4  8471               	bsf	3953,2,c	;volatile
  8512                           
  8513                           ;CAN.c: 217: BRGCON2bits.PRSEG1 = 0;
  8514  002BE6  9271               	bcf	3953,1,c	;volatile
  8515                           
  8516                           ;CAN.c: 218: BRGCON2bits.PRSEG0 = 0;
  8517  002BE8  9071               	bcf	3953,0,c	;volatile
  8518                           
  8519                           ;CAN.c: 220: BRGCON3bits.SEG2PH0 = 1;
  8520  002BEA  8072               	bsf	3954,0,c	;volatile
  8521                           
  8522                           ;CAN.c: 221: BRGCON3bits.SEG2PH1 = 0;
  8523  002BEC  9272               	bcf	3954,1,c	;volatile
  8524                           
  8525                           ;CAN.c: 222: BRGCON3bits.SEG2PH2 = 1;
  8526  002BEE  8472               	bsf	3954,2,c	;volatile
  8527                           
  8528                           ;CAN.c: 224: BRGCON2bits.SAM = 1;
  8529  002BF0  8C71               	bsf	3953,6,c	;volatile
  8530                           
  8531                           ;CAN.c: 225: BRGCON2bits.SEG2PHTS = 1;
  8532  002BF2  8E71               	bsf	3953,7,c	;volatile
  8533  002BF4  0012               	return		;funcret
  8534  002BF6                     __end_of_CAN_SetupClock:
  8535                           	opt callstack 0
  8536                           
  8537 ;; *************** function _FLASH_Write *****************
  8538 ;; Defined at:
  8539 ;;		line 47 in file "FLASH.c"
  8540 ;; Parameters:    Size  Location     Type
  8541 ;;  addr            4    5[COMRAM] long 
  8542 ;;  val             2    9[COMRAM] unsigned int 
  8543 ;; Auto vars:     Size  Location     Type
  8544 ;;  flashWrBufPt    2   15[COMRAM] PTR unsigned int 
  8545 ;;		 -> FLASH_Write@val(2), 
  8546 ;;  GIEBitValue     2   13[COMRAM] unsigned int 
  8547 ;;  i               2    0        int 
  8548 ;; Return value:  Size  Location     Type
  8549 ;;                  1    wreg      void 
  8550 ;; Registers used:
  8551 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8552 ;; Tracked objects:
  8553 ;;		On entry : 0/0
  8554 ;;		On exit  : 0/0
  8555 ;;		Unchanged: 0/0
  8556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8557 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8558 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8559 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8560 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8561 ;;Total ram usage:       12 bytes
  8562 ;; Hardware stack levels used:    1
  8563 ;; Hardware stack levels required when called:    3
  8564 ;; This function calls:
  8565 ;;		Nothing
  8566 ;; This function is called by:
  8567 ;;		_main
  8568 ;; This function uses a non-reentrant model
  8569 ;;
  8570                           
  8571                           	psect	text58
  8572  0024B4                     __ptext58:
  8573                           	opt callstack 0
  8574  0024B4                     _FLASH_Write:
  8575                           	opt callstack 27
  8576                           
  8577                           ;FLASH.c: 49: UINT *flashWrBufPtr = &val;
  8578                           
  8579                           ;incstack = 0
  8580  0024B4  0E0A               	movlw	low FLASH_Write@val
  8581  0024B6  6E10               	movwf	FLASH_Write@flashWrBufPtr,c
  8582  0024B8  0E00               	movlw	high FLASH_Write@val
  8583  0024BA  6E11               	movwf	FLASH_Write@flashWrBufPtr+1,c
  8584                           
  8585                           ;FLASH.c: 50: int i;;FLASH.c: 51: UINT GIEBitValue = INTCONbits.GIE;
  8586  0024BC  AEF2               	btfss	4082,7,c	;volatile
  8587  0024BE  D003               	goto	u3200
  8588  0024C0  6A0C               	clrf	??_FLASH_Write& (0+255),c
  8589  0024C2  2A0C               	incf	??_FLASH_Write& (0+255),f,c
  8590  0024C4  D001               	goto	u3208
  8591  0024C6                     u3200:
  8592  0024C6  6A0C               	clrf	??_FLASH_Write& (0+255),c
  8593  0024C8                     u3208:
  8594  0024C8  500C               	movf	??_FLASH_Write,w,c
  8595  0024CA  6E0E               	movwf	FLASH_Write@GIEBitValue,c
  8596  0024CC  6A0F               	clrf	FLASH_Write@GIEBitValue+1,c
  8597                           
  8598                           ;FLASH.c: 54: TBLPTR = addr;
  8599  0024CE  C006  FFF6         	movff	FLASH_Write@addr,tblptrl	;volatile
  8600  0024D2  C007  FFF7         	movff	FLASH_Write@addr+1,tblptrh	;volatile
  8601  0024D6  C008  FFF8         	movff	FLASH_Write@addr+2,tblptru	;volatile
  8602                           
  8603                           ;FLASH.c: 58: TABLAT = (flashWrBufPtr[0] >> 8);
  8604  0024DA  C010  FFD9         	movff	FLASH_Write@flashWrBufPtr,fsr2l
  8605  0024DE  C011  FFDA         	movff	FLASH_Write@flashWrBufPtr+1,fsr2h
  8606  0024E2  CFDE F00C          	movff	postinc2,??_FLASH_Write
  8607  0024E6  CFDD F00D          	movff	postdec2,??_FLASH_Write+1
  8608  0024EA  C00D  F00C         	movff	??_FLASH_Write+1,??_FLASH_Write
  8609  0024EE  6A0D               	clrf	??_FLASH_Write+1,c
  8610  0024F0  500C               	movf	??_FLASH_Write,w,c
  8611  0024F2  6EF5               	movwf	tablat,c	;volatile
  8612  0024F4  000C               	tblwt		*	;# 
  8613                           
  8614                           ;FLASH.c: 60: TABLAT = (flashWrBufPtr[0] & 0xff);
  8615  0024F6  C010  FFD9         	movff	FLASH_Write@flashWrBufPtr,fsr2l
  8616  0024FA  C011  FFDA         	movff	FLASH_Write@flashWrBufPtr+1,fsr2h
  8617  0024FE  50DF               	movf	indf2,w,c
  8618  002500  6EF5               	movwf	tablat,c	;volatile
  8619  002502  000C               	tblwt		*	;# 
  8620                           
  8621                           ;FLASH.c: 64: TBLPTR = addr;
  8622  002504  C006  FFF6         	movff	FLASH_Write@addr,tblptrl	;volatile
  8623  002508  C007  FFF7         	movff	FLASH_Write@addr+1,tblptrh	;volatile
  8624  00250C  C008  FFF8         	movff	FLASH_Write@addr+2,tblptru	;volatile
  8625                           
  8626                           ;FLASH.c: 66: EECON1bits.EEPGD = 1;
  8627  002510  8EA6               	bsf	4006,7,c	;volsfr
  8628                           
  8629                           ;FLASH.c: 67: EECON1bits.CFGS = 0;
  8630  002512  9CA6               	bcf	4006,6,c	;volsfr
  8631                           
  8632                           ;FLASH.c: 68: EECON1bits.WREN = 1;
  8633  002514  84A6               	bsf	4006,2,c	;volsfr
  8634                           
  8635                           ;FLASH.c: 70: INTCONbits.GIE = 0;
  8636  002516  9EF2               	bcf	4082,7,c	;volatile
  8637                           
  8638                           ;FLASH.c: 71: EECON2 = 0x55;
  8639  002518  0E55               	movlw	85
  8640  00251A  6EA7               	movwf	4007,c	;volsfr
  8641                           
  8642                           ;FLASH.c: 72: EECON2 = 0xAA;
  8643  00251C  0EAA               	movlw	170
  8644  00251E  6EA7               	movwf	4007,c	;volsfr
  8645                           
  8646                           ;FLASH.c: 73: EECON1bits.WR = 1;
  8647  002520  82A6               	bsf	4006,1,c	;volsfr
  8648                           
  8649                           ;FLASH.c: 74: INTCONbits.GIE = GIEBitValue;
  8650  002522  B00E               	btfsc	FLASH_Write@GIEBitValue,0,c
  8651  002524  D002               	bra	u3215
  8652  002526  9EF2               	bcf	4082,7,c	;volatile
  8653  002528  D001               	bra	u3216
  8654  00252A                     u3215:
  8655  00252A  8EF2               	bsf	4082,7,c	;volatile
  8656  00252C                     u3216:
  8657                           
  8658                           ;FLASH.c: 75: EECON1bits.WREN = 0;
  8659  00252C  94A6               	bcf	4006,2,c	;volsfr
  8660  00252E  0012               	return		;funcret
  8661  002530                     __end_of_FLASH_Write:
  8662                           	opt callstack 0
  8663                           
  8664 ;; *************** function _FLASH_Read *****************
  8665 ;; Defined at:
  8666 ;;		line 28 in file "FLASH.c"
  8667 ;; Parameters:    Size  Location     Type
  8668 ;;  addr            4    5[COMRAM] long 
  8669 ;; Auto vars:     Size  Location     Type
  8670 ;;		None
  8671 ;; Return value:  Size  Location     Type
  8672 ;;                  2    5[COMRAM] unsigned int 
  8673 ;; Registers used:
  8674 ;;		None
  8675 ;; Tracked objects:
  8676 ;;		On entry : 0/0
  8677 ;;		On exit  : 0/0
  8678 ;;		Unchanged: 0/0
  8679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8680 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8683 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8684 ;;Total ram usage:        4 bytes
  8685 ;; Hardware stack levels used:    1
  8686 ;; Hardware stack levels required when called:    3
  8687 ;; This function calls:
  8688 ;;		Nothing
  8689 ;; This function is called by:
  8690 ;;		_main
  8691 ;; This function uses a non-reentrant model
  8692 ;;
  8693                           
  8694                           	psect	text59
  8695  002CB0                     __ptext59:
  8696                           	opt callstack 0
  8697  002CB0                     _FLASH_Read:
  8698                           	opt callstack 27
  8699                           
  8700                           ;FLASH.c: 30: TBLPTR = addr;
  8701                           
  8702                           ;incstack = 0
  8703  002CB0  C006  FFF6         	movff	FLASH_Read@addr,tblptrl	;volatile
  8704  002CB4  C007  FFF7         	movff	FLASH_Read@addr+1,tblptrh	;volatile
  8705  002CB8  C008  FFF8         	movff	FLASH_Read@addr+2,tblptru	;volatile
  8706  002CBC  0008               	tblrd		*	; ;# 
  8707                           
  8708                           ;FLASH.c: 32: return TABLAT;
  8709  002CBE  CFF5 F006          	movff	tablat,?_FLASH_Read	;volatile
  8710  002CC2  6A07               	clrf	?_FLASH_Read+1,c
  8711  002CC4  0012               	return		;funcret
  8712  002CC6                     __end_of_FLASH_Read:
  8713                           	opt callstack 0
  8714                           
  8715 ;; *************** function _ISR_low *****************
  8716 ;; Defined at:
  8717 ;;		line 16 in file "ISR.c"
  8718 ;; Parameters:    Size  Location     Type
  8719 ;;		None
  8720 ;; Auto vars:     Size  Location     Type
  8721 ;;		None
  8722 ;; Return value:  Size  Location     Type
  8723 ;;                  1    wreg      void 
  8724 ;; Registers used:
  8725 ;;		wreg, status,2, status,0, cstack
  8726 ;; Tracked objects:
  8727 ;;		On entry : 0/0
  8728 ;;		On exit  : 0/0
  8729 ;;		Unchanged: 0/0
  8730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8733 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8734 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8735 ;;Total ram usage:        3 bytes
  8736 ;; Hardware stack levels used:    1
  8737 ;; Hardware stack levels required when called:    2
  8738 ;; This function calls:
  8739 ;;		_TMR1_Timer_reset
  8740 ;;		i1_TMR1_Update_flag_Set
  8741 ;; This function is called by:
  8742 ;;		Interrupt level 1
  8743 ;; This function uses a non-reentrant model
  8744 ;;
  8745                           
  8746                           	psect	intcodelo
  8747  000C18                     __pintcodelo:
  8748                           	opt callstack 0
  8749  000C18                     _ISR_low:
  8750                           	opt callstack 22
  8751                           
  8752                           ;incstack = 0
  8753  000C18  804C               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  8754  000C1A  CFD8 F003          	movff	status,??_ISR_low
  8755  000C1E  CFE8 F004          	movff	wreg,??_ISR_low+1
  8756  000C22  CFE0 F005          	movff	bsr,??_ISR_low+2
  8757                           
  8758                           ;ISR.c: 21: if(TMR1IF==1)
  8759  000C26  A09E               	btfss	3998,0,c	;volatile
  8760  000C28  D012               	goto	i1l821
  8761                           
  8762                           ;ISR.c: 22: {;ISR.c: 23: TMR1_Timer_reset();
  8763  000C2A  ECFB  F015         	call	_TMR1_Timer_reset	;wreg free
  8764                           
  8765                           ;ISR.c: 26: static BYTE ramkaStanuU8=0;;ISR.c: 29: TMR1_Update_flag_Set(1);
  8766  000C2E  0E00               	movlw	0
  8767  000C30  6E02               	movwf	i1TMR1_Update_flag_Set@a+1,c
  8768  000C32  0E01               	movlw	1
  8769  000C34  6E01               	movwf	i1TMR1_Update_flag_Set@a,c
  8770  000C36  EC9E  F016         	call	i1_TMR1_Update_flag_Set	;wreg free
  8771                           
  8772                           ;ISR.c: 31: DetectorLedRadar.Flags.obsluzWeWy = 1;
  8773  000C3A  0100               	movlb	0	; () banked
  8774  000C3C  81CF               	bsf	_DetectorLedRadar& (0+255),0,b
  8775                           
  8776                           ; BSR set to: 0
  8777                           ;ISR.c: 33: if(++ramkaStanuU8 > (2*10))
  8778  000C3E  2A29               	incf	ISR_low@ramkaStanuU8,f,c
  8779  000C40  0E14               	movlw	20
  8780  000C42  6429               	cpfsgt	ISR_low@ramkaStanuU8,c
  8781  000C44  D003               	goto	i1l4181
  8782                           
  8783                           ; BSR set to: 0
  8784                           ;ISR.c: 34: {;ISR.c: 35: ramkaStanuU8 = 0;
  8785  000C46  0E00               	movlw	0
  8786  000C48  6E29               	movwf	ISR_low@ramkaStanuU8,c
  8787                           
  8788                           ; BSR set to: 0
  8789                           ;ISR.c: 36: DaneCan.Flags.wyslijRamkeStanu = 1;
  8790  000C4A  81CB               	bsf	_DaneCan& (0+255),0,b
  8791  000C4C                     i1l4181:
  8792                           
  8793                           ; BSR set to: 0
  8794                           ;ISR.c: 37: };ISR.c: 41: TMR1IF=0;
  8795  000C4C  909E               	bcf	3998,0,c	;volatile
  8796  000C4E                     i1l821:
  8797  000C4E  C005  FFE0         	movff	??_ISR_low+2,bsr
  8798  000C52  C004  FFE8         	movff	??_ISR_low+1,wreg
  8799  000C56  C003  FFD8         	movff	??_ISR_low,status
  8800  000C5A  904C               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  8801  000C5C  0010               	retfie	
  8802  000C5E                     __end_of_ISR_low:
  8803                           	opt callstack 0
  8804                           
  8805 ;; *************** function i1_TMR1_Update_flag_Set *****************
  8806 ;; Defined at:
  8807 ;;		line 32 in file "TMR1.c"
  8808 ;; Parameters:    Size  Location     Type
  8809 ;;  a               2    0[COMRAM] unsigned int 
  8810 ;; Auto vars:     Size  Location     Type
  8811 ;;		None
  8812 ;; Return value:  Size  Location     Type
  8813 ;;                  1    wreg      void 
  8814 ;; Registers used:
  8815 ;;		None
  8816 ;; Tracked objects:
  8817 ;;		On entry : 0/0
  8818 ;;		On exit  : 0/0
  8819 ;;		Unchanged: 0/0
  8820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8821 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8824 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8825 ;;Total ram usage:        2 bytes
  8826 ;; Hardware stack levels used:    1
  8827 ;; Hardware stack levels required when called:    1
  8828 ;; This function calls:
  8829 ;;		Nothing
  8830 ;; This function is called by:
  8831 ;;		_ISR_low
  8832 ;; This function uses a non-reentrant model
  8833 ;;
  8834                           
  8835                           	psect	text61
  8836  002D3C                     __ptext61:
  8837                           	opt callstack 0
  8838  002D3C                     i1_TMR1_Update_flag_Set:
  8839                           	opt callstack 22
  8840                           
  8841                           ;TMR1.c: 34: TMR1_Update_flag = a;
  8842                           
  8843                           ;incstack = 0
  8844  002D3C  C001  F0D6         	movff	i1TMR1_Update_flag_Set@a,_TMR1_Update_flag
  8845  002D40  C002  F0D7         	movff	i1TMR1_Update_flag_Set@a+1,_TMR1_Update_flag+1
  8846  002D44  0012               	return		;funcret
  8847  002D46                     __end_ofi1_TMR1_Update_flag_Set:
  8848                           	opt callstack 0
  8849                           
  8850 ;; *************** function _TMR1_Timer_reset *****************
  8851 ;; Defined at:
  8852 ;;		line 63 in file "TMR1.c"
  8853 ;; Parameters:    Size  Location     Type
  8854 ;;		None
  8855 ;; Auto vars:     Size  Location     Type
  8856 ;;  t1H             1    1[COMRAM] volatile unsigned char 
  8857 ;;  t1L             1    0[COMRAM] volatile unsigned char 
  8858 ;; Return value:  Size  Location     Type
  8859 ;;                  1    wreg      unsigned char 
  8860 ;; Registers used:
  8861 ;;		wreg, status,2, status,0
  8862 ;; Tracked objects:
  8863 ;;		On entry : 0/0
  8864 ;;		On exit  : 0/0
  8865 ;;		Unchanged: 0/0
  8866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8868 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8870 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8871 ;;Total ram usage:        2 bytes
  8872 ;; Hardware stack levels used:    1
  8873 ;; Hardware stack levels required when called:    1
  8874 ;; This function calls:
  8875 ;;		Nothing
  8876 ;; This function is called by:
  8877 ;;		_ISR_low
  8878 ;; This function uses a non-reentrant model
  8879 ;;
  8880                           
  8881                           	psect	text62
  8882  002BF6                     __ptext62:
  8883                           	opt callstack 0
  8884  002BF6                     _TMR1_Timer_reset:
  8885                           	opt callstack 22
  8886                           
  8887                           ;TMR1.c: 69: volatile BYTE t1L = 0, t1H = 0;
  8888                           
  8889                           ;incstack = 0
  8890  002BF6  0E00               	movlw	0
  8891  002BF8  6E01               	movwf	TMR1_Timer_reset@t1L,c	;volatile
  8892  002BFA  0E00               	movlw	0
  8893  002BFC  6E02               	movwf	TMR1_Timer_reset@t1H,c	;volatile
  8894                           
  8895                           ;TMR1.c: 70: t1L = TMR1L;
  8896  002BFE  CFCE F001          	movff	4046,TMR1_Timer_reset@t1L	;volatile
  8897                           
  8898                           ;TMR1.c: 71: t1H = TMR1H;
  8899  002C02  CFCF F002          	movff	4047,TMR1_Timer_reset@t1H	;volatile
  8900                           
  8901                           ;TMR1.c: 72: __nop();
  8902  002C06  F000               	nop	
  8903                           
  8904                           ;TMR1.c: 73: t1H += (UINT8)((0xFFFF - (((8000000/8)/4)/10)) >> 8);
  8905  002C08  0E9E               	movlw	158
  8906  002C0A  2602               	addwf	TMR1_Timer_reset@t1H,f,c	;volatile
  8907                           
  8908                           ;TMR1.c: 74: t1L += (UINT8)((0xFFFF - (((8000000/8)/4)/10)) & 0xFF);
  8909  002C0C  0E57               	movlw	87
  8910  002C0E  2601               	addwf	TMR1_Timer_reset@t1L,f,c	;volatile
  8911                           
  8912                           ;TMR1.c: 75: TMR1H = t1H;
  8913  002C10  C002  FFCF         	movff	TMR1_Timer_reset@t1H,4047	;volatile
  8914                           
  8915                           ;TMR1.c: 76: TMR1L = 0x5B;
  8916  002C14  0E5B               	movlw	91
  8917  002C16  6ECE               	movwf	4046,c	;volatile
  8918  002C18  0012               	return		;funcret
  8919  002C1A                     __end_of_TMR1_Timer_reset:
  8920                           	opt callstack 0
  8921                           
  8922 ;; *************** function _ISR_high *****************
  8923 ;; Defined at:
  8924 ;;		line 53 in file "ISR.c"
  8925 ;; Parameters:    Size  Location     Type
  8926 ;;		None
  8927 ;; Auto vars:     Size  Location     Type
  8928 ;;		None
  8929 ;; Return value:  Size  Location     Type
  8930 ;;                  1    wreg      void 
  8931 ;; Registers used:
  8932 ;;		None
  8933 ;; Tracked objects:
  8934 ;;		On entry : 0/0
  8935 ;;		On exit  : 0/0
  8936 ;;		Unchanged: 0/0
  8937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8941 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8942 ;;Total ram usage:        0 bytes
  8943 ;; Hardware stack levels used:    1
  8944 ;; This function calls:
  8945 ;;		Nothing
  8946 ;; This function is called by:
  8947 ;;		Interrupt level 2
  8948 ;; This function uses a non-reentrant model
  8949 ;;
  8950                           
  8951                           	psect	intcode
  8952  000C08                     __pintcode:
  8953                           	opt callstack 0
  8954  000C08                     _ISR_high:
  8955                           	opt callstack 22
  8956                           
  8957                           ;incstack = 0
  8958  000C08  824C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  8959  000C0A  EDAB  F016         	call	int_func,f	;refresh shadow registers
  8960                           
  8961                           	psect	intcode_body
  8962  002D56                     __pintcode_body:
  8963                           	opt callstack 22
  8964  002D56                     int_func:
  8965                           	opt callstack 22
  8966  002D56  0006               	pop		; remove dummy address from shadow register refresh
  8967  002D58  924C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  8968  002D5A  0011               	retfie		f
  8969  002D5C                     __end_of_ISR_high:
  8970                           	opt callstack 0
  8971  0000                     
  8972                           	psect	rparam
  8973  0000                     
  8974                           	psect	temp
  8975  00004C                     btemp:
  8976                           	opt callstack 0
  8977  00004C                     	ds	1
  8978  0000                     int$flags	set	btemp
  8979  0000                     wtemp8	set	btemp+1
  8980  0000                     ttemp5	set	btemp+1
  8981  0000                     ttemp6	set	btemp+4
  8982  0000                     ttemp7	set	btemp+8
  8983                           tosu	equ	0xFFF
  8984                           tosh	equ	0xFFE
  8985                           tosl	equ	0xFFD
  8986                           stkptr	equ	0xFFC
  8987                           pclatu	equ	0xFFB
  8988                           pclath	equ	0xFFA
  8989                           pcl	equ	0xFF9
  8990                           tblptru	equ	0xFF8
  8991                           tblptrh	equ	0xFF7
  8992                           tblptrl	equ	0xFF6
  8993                           tablat	equ	0xFF5
  8994                           prodh	equ	0xFF4
  8995                           prodl	equ	0xFF3
  8996                           indf0	equ	0xFEF
  8997                           postinc0	equ	0xFEE
  8998                           postdec0	equ	0xFED
  8999                           preinc0	equ	0xFEC
  9000                           plusw0	equ	0xFEB
  9001                           fsr0h	equ	0xFEA
  9002                           fsr0l	equ	0xFE9
  9003                           wreg	equ	0xFE8
  9004                           indf1	equ	0xFE7
  9005                           postinc1	equ	0xFE6
  9006                           postdec1	equ	0xFE5
  9007                           preinc1	equ	0xFE4
  9008                           plusw1	equ	0xFE3
  9009                           fsr1h	equ	0xFE2
  9010                           fsr1l	equ	0xFE1
  9011                           bsr	equ	0xFE0
  9012                           indf2	equ	0xFDF
  9013                           postinc2	equ	0xFDE
  9014                           postdec2	equ	0xFDD
  9015                           preinc2	equ	0xFDC
  9016                           plusw2	equ	0xFDB
  9017                           fsr2h	equ	0xFDA
  9018                           fsr2l	equ	0xFD9
  9019                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         698
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     29      75
    BANK0           160     17     145
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    FRAME_AnalogValue@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_MapPosition@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FLASH_Write@flashWrBufPtr	PTR unsigned int  size(2) Largest target is 2
		 -> FLASH_Write@val(COMRAM[2]), 

    NVMWrite@source	PTR unsigned char  size(2) Largest target is 2
		 -> Init_Data(COMRAM[2]), NeightAdress8(COMRAM[2]), NeightAdress7(COMRAM[2]), NeightAdress6(COMRAM[2]), 
		 -> NeightAdress5(COMRAM[2]), NeightAdress4(COMRAM[2]), NeightAdress3(COMRAM[2]), NeightAdress2(COMRAM[2]), 
		 -> NeightAdress1(COMRAM[2]), 

    NVMRead@dest	PTR unsigned char  size(2) Largest target is 2
		 -> Init_Data(COMRAM[2]), NeightAdress8(COMRAM[2]), NeightAdress7(COMRAM[2]), NeightAdress6(COMRAM[2]), 
		 -> NeightAdress5(COMRAM[2]), NeightAdress4(COMRAM[2]), NeightAdress3(COMRAM[2]), NeightAdress2(COMRAM[2]), 
		 -> NeightAdress1(COMRAM[2]), 

    NVMalloc@location	PTR unsigned short  size(2) Largest target is 2
		 -> neighborsAdress(BANK0[2]), ustawieniaKarty(BANK0[2]), 

    FRAME_HandleCanFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_AdressOfNeighbors@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_PrzypisanieDokarty@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_SoftwareVersion@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_Plot@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_DeviceReset@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_DataUpdateAndChangeOption@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    Dane	PTR struct DaneStruct size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    FRAME_AxisStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_AveragingTimes@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_ExcitationMultiplier@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_ExcitationValue@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_AccelerometerStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_SensorExcitationStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    CAN_GenID@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    CAN_TakeFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    CAN_SendFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    CAN_MoveBuffIntoFrame@Buf	PTR unsigned char  size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), RXB0D0(SFR_3[1]), 

    CAN_MoveBuffIntoFrame@Ram	PTR unsigned char  size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), RXB0D0(SFR_3[1]), 


Critical Paths under _main in COMRAM

    _TRM_DataTransmition->_FRAME_HandleCanFrame
    _FRAME_HandleCanFrame->_FRAME_DeviceReset
    _LED_Error->_LED_Control
    _FRAME_SensorExcitationStatus->_IsInNeighbors
    _FRAME_SensorExcitationStatus->_MOC_Aktualna_Temperatura
    _FRAME_SensorExcitationStatus->_MOC_Frame_Counter
    _FRAME_SensorExcitationStatus->_MOC_NOTWORK
    _FRAME_SensorExcitationStatus->_MOC_Wynikowa_wartosc_roznicowa
    _FRAME_Plot->___lwdiv
    _FRAME_ExcitationValue->___awmod
    _FRAME_DeviceReset->_WriteDataToEEPROM
    _WriteDataToEEPROM->_NVMWrite
    _NVMWrite->_WritetoEEPROM
    _FRAME_AccelerometerStatus->___awmod
    _CAN_SendFrame->_CAN_MoveBuffIntoFrame
    _CAN_TakeFrame->___awdiv
    _LED_Update->_LED_Light_Pos
    _LED_Light_Pos->___lwdiv
    _LED_Clear->_LED_Control
    _INI_All->_ReadDataToEEPROM
    _ReadDataToEEPROM->_NVMRead
    _NVMRead->_ReadfromEEPROM
    _NVMInit->_NVMalloc
    _INI_LED_Start->_LED_Control

Critical Paths under _ISR_low in COMRAM

    _ISR_low->_TMR1_Timer_reset
    _ISR_low->i1_TMR1_Update_flag_Set

Critical Paths under _ISR_high in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_TRM_DataTransmition

Critical Paths under _ISR_low in BANK0

    None.

Critical Paths under _ISR_high in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_low in BANK1

    None.

Critical Paths under _ISR_high in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_low in BANK2

    None.

Critical Paths under _ISR_high in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_low in BANK3

    None.

Critical Paths under _ISR_high in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_low in BANK4

    None.

Critical Paths under _ISR_high in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_low in BANK5

    None.

Critical Paths under _ISR_high in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_low in BANK6

    None.

Critical Paths under _ISR_high in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_low in BANK7

    None.

Critical Paths under _ISR_high in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_low in BANK8

    None.

Critical Paths under _ISR_high in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_low in BANK9

    None.

Critical Paths under _ISR_high in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_low in BANK10

    None.

Critical Paths under _ISR_high in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_low in BANK11

    None.

Critical Paths under _ISR_high in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_low in BANK12

    None.

Critical Paths under _ISR_high in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   39875
                                             27 COMRAM     2     2      0
                         _FLASH_Read
                        _FLASH_Write
                            _INI_All
                         _LED_Update
                          _RADAR_Use
               _TMR1_Update_flag_Get
               _TMR1_Update_flag_Set
                _TRM_DataTransmition
 ---------------------------------------------------------------------------------
 (1) _TRM_DataTransmition                                 18    18      0   24232
                                              0 BANK0     17    17      0
                      _CAN_TakeFrame
               _FRAME_HandleCanFrame
 ---------------------------------------------------------------------------------
 (2) _FRAME_HandleCanFrame                                 8     6      2   21127
                                             19 COMRAM     8     6      2
                          _CAN_GenID
                      _CAN_SendFrame
          _FRAME_AccelerometerStatus
            _FRAME_AdressOfNeighbors
                  _FRAME_AnalogValue
               _FRAME_AveragingTimes
                   _FRAME_AxisStatus
                  _FRAME_DeviceReset
         _FRAME_ExcitationMultiplier
              _FRAME_ExcitationValue
                  _FRAME_MapPosition
                         _FRAME_Plot
           _FRAME_PrzypisanieDokarty
       _FRAME_SensorExcitationStatus
              _FRAME_SoftwareVersion
                          _LED_Error
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) _LED_Error                                            0     0      0    1756
                        _LED_Control
 ---------------------------------------------------------------------------------
 (3) _FRAME_SoftwareVersion                                3     1      2     305
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_SensorExcitationStatus                         6     4      2     892
                                              7 COMRAM     6     4      2
                      _IsInNeighbors
                           _LOCK_Get
                           _LOCK_Set
           _MOC_Aktualna_Temperatura
                  _MOC_Frame_Counter
                        _MOC_NOTWORK
     _MOC_Wynikowa_wartosc_roznicowa
 ---------------------------------------------------------------------------------
 (4) _MOC_Wynikowa_wartosc_roznicowa                       2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_NOTWORK                                          2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_Frame_Counter                                    2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_Aktualna_Temperatura                             2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _LOCK_Set                                             1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _LOCK_Get                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _IsInNeighbors                                        4     2      2     367
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_PrzypisanieDokarty                             6     4      2     367
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_Plot                                           3     1      2     929
                                             12 COMRAM     3     1      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) _FRAME_MapPosition                                    2     0      2     119
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_ExcitationValue                                6     4      2    1436
                                             11 COMRAM     6     4      2
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) _FRAME_ExcitationMultiplier                           5     3      2     280
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_DeviceReset                                    3     1      2    7722
                                             16 COMRAM     3     1      2
    _FRAME_DataUpdateAndChangeOption
                  _WriteDataToEEPROM
 ---------------------------------------------------------------------------------
 (4) _WriteDataToEEPROM                                    2     2      0    6833
                                             14 COMRAM     2     2      0
                           _NVMWrite
                      _WritetoEEPROM
 ---------------------------------------------------------------------------------
 (5) _NVMWrite                                             6     0      6    5074
                                              8 COMRAM     6     0      6
                      _WritetoEEPROM
 ---------------------------------------------------------------------------------
 (5) _WritetoEEPROM                                        3     0      3    1759
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (4) _FRAME_DataUpdateAndChangeOption                      3     1      2     243
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AxisStatus                                     5     3      2     212
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AveragingTimes                                 3     1      2     212
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AnalogValue                                    6     2      4     238
                                              5 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _FRAME_AdressOfNeighbors                             12     8      4    1626
                                              5 COMRAM    10     6      4
                 _CAN_SetupFilter_Ne
 ---------------------------------------------------------------------------------
 (3) _FRAME_AccelerometerStatus                            6     4      2    1374
                                             11 COMRAM     6     4      2
                            ___awmod
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     945
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _CAN_SendFrame                                        5     3      2    1128
                                             10 COMRAM     5     3      2
              _CAN_MoveBuffIntoFrame
 ---------------------------------------------------------------------------------
 (3) _CAN_GenID                                            5     2      3     455
                                              5 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (2) _CAN_TakeFrame                                        6     4      2    2121
                                             13 COMRAM     6     4      2
              _CAN_MoveBuffIntoFrame
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     811
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _CAN_MoveBuffIntoFrame                                5     1      4     668
                                              5 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) _TMR1_Update_flag_Set                                 2     0      2     202
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR1_Update_flag_Get                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _RADAR_Use                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_Update                                           0     0      0    8416
                          _LED_Clear
                        _LED_Control
                           _LED_Left
                      _LED_Light_Pos
                          _LED_Right
 ---------------------------------------------------------------------------------
 (2) _LED_Light_Pos                                       11     7      4    4176
                                             12 COMRAM    11     7      4
                        _LED_Control
                           _LED_Left
                          _LED_Right
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     717
                                              5 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _LED_Right                                            6     4      2     364
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _LED_Left                                             4     2      2     364
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _LED_Clear                                            0     0      0    1756
                        _LED_Control
 ---------------------------------------------------------------------------------
 (1) _INI_All                                              0     0      0    6212
                          _CAN_Setup
                _INI_GlobalInterrupt
                      _INI_LED_Start
                         _INI_OUTPUT
                          _INI_Timer
                            _NVMInit
                   _ReadDataToEEPROM
 ---------------------------------------------------------------------------------
 (2) _ReadDataToEEPROM                                     2     2      0    3968
                                             13 COMRAM     2     2      0
                            _NVMRead
                     _ReadfromEEPROM
 ---------------------------------------------------------------------------------
 (3) _NVMRead                                              6     0      6    3409
                                              7 COMRAM     6     0      6
                     _ReadfromEEPROM
 ---------------------------------------------------------------------------------
 (3) _ReadfromEEPROM                                       2     0      2     559
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _NVMInit                                              3     3      0     488
                                             11 COMRAM     3     3      0
                           _NVMalloc
 ---------------------------------------------------------------------------------
 (3) _NVMalloc                                             6     2      4     478
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _INI_Timer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INI_OUTPUT                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INI_LED_Start                                        0     0      0    1756
                        _LED_Control
 ---------------------------------------------------------------------------------
 (4) _LED_Control                                          5     3      2    1756
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _INI_GlobalInterrupt                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CAN_Setup                                            1     1      0       0
                                              5 COMRAM     1     1      0
                     _CAN_SetupClock
                      _CAN_SetupMask
 ---------------------------------------------------------------------------------
 (3) _CAN_SetupMask                                        0     0      0       0
                 _CAN_SetupFilter_Ne
 ---------------------------------------------------------------------------------
 (4) _CAN_SetupFilter_Ne                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CAN_SetupClock                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _FLASH_Write                                         14     8      6     548
                                              5 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (1) _FLASH_Read                                           4     0      4     228
                                              5 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR_low                                              3     3      0      76
                                              2 COMRAM     3     3      0
                   _TMR1_Timer_reset
             i1_TMR1_Update_flag_Set
 ---------------------------------------------------------------------------------
 (8) i1_TMR1_Update_flag_Set                               2     0      2      48
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (8) _TMR1_Timer_reset                                     2     2      0      28
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_high                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FLASH_Read
   _FLASH_Write
   _INI_All
     _CAN_Setup
       _CAN_SetupClock
       _CAN_SetupMask
         _CAN_SetupFilter_Ne
     _INI_GlobalInterrupt
     _INI_LED_Start
       _LED_Control
     _INI_OUTPUT
     _INI_Timer
     _NVMInit
       _NVMalloc
     _ReadDataToEEPROM
       _NVMRead
         _ReadfromEEPROM
       _ReadfromEEPROM
   _LED_Update
     _LED_Clear
       _LED_Control
     _LED_Control
     _LED_Left
     _LED_Light_Pos
       _LED_Control
       _LED_Left
       _LED_Right
       ___lwdiv
     _LED_Right
   _RADAR_Use
   _TMR1_Update_flag_Get
   _TMR1_Update_flag_Set
   _TRM_DataTransmition
     _CAN_TakeFrame
       _CAN_MoveBuffIntoFrame
       ___awdiv
     _FRAME_HandleCanFrame
       _CAN_GenID
       _CAN_SendFrame
         _CAN_MoveBuffIntoFrame
       _FRAME_AccelerometerStatus
         ___awmod
       _FRAME_AdressOfNeighbors
         _CAN_SetupFilter_Ne
       _FRAME_AnalogValue
       _FRAME_AveragingTimes
       _FRAME_AxisStatus
       _FRAME_DeviceReset
         _FRAME_DataUpdateAndChangeOption
         _WriteDataToEEPROM
           _NVMWrite
             _WritetoEEPROM
           _WritetoEEPROM
       _FRAME_ExcitationMultiplier
       _FRAME_ExcitationValue
         ___awmod
       _FRAME_MapPosition
       _FRAME_Plot
         ___lwdiv
       _FRAME_PrzypisanieDokarty
       _FRAME_SensorExcitationStatus
         _IsInNeighbors
         _LOCK_Get
         _LOCK_Set
         _MOC_Aktualna_Temperatura
         _MOC_Frame_Counter
         _MOC_NOTWORK
         _MOC_Wynikowa_wartosc_roznicowa
       _FRAME_SoftwareVersion
       _LED_Error
         _LED_Control
       ___awdiv

 _ISR_low (ROOT)
   _TMR1_Timer_reset
   i1_TMR1_Update_flag_Set

 _ISR_high (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0     220      31       16.4%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     11      91       5       90.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1D      4B       1       79.8%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      DC      20        0.0%
DATA                 0      0     2FC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Aug 20 13:28:47 2019

               __end_of_FRAME_DeviceReset 1D20                     ?_FRAME_AveragingTimes 0006  
                            ___awdiv@sign 000B                                        bsr 000FE0  
                             __CFG_BORV$3 000000                         ?_FRAME_AxisStatus 0006  
                       _FRAME_MapPosition 2D62                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            NVMRead@count 000C                              __CFG_CP3$OFF 000000  
                       WritetoEEPROM@Data 0008                        __size_of_CAN_GenID 0078  
                                     l301 14D8                                       l302 153A  
                                     l303 14DE                                       l304 14E4  
                                     l305 14EA                                       l306 14F0  
                                     l307 14F6                                       l308 14FC  
                                     l309 1502                                       l428 1B2E  
                                     l292 1930                                       l293 192E  
                             ?_LED_Update 0001                                       l734 190E  
                                     l735 1906                                       l966 2B3E  
                                     l958 2B36                                       l975 2A68  
                            __CFG_CPB$OFF 000000                        ??_FRAME_AxisStatus 0008  
                            __CFG_CPD$OFF 000000                        ?_FRAME_MapPosition 0006  
                      __size_of_CAN_Setup 005C                              ___awmod@sign 000B  
                            ?_LED_Control 0006                                       wreg 000FE8  
                   __end_of_CAN_TakeFrame 171C                               ?_INI_OUTPUT 0001  
                  __size_of_INI_LED_Start 0034                             NVMInit@result 000E  
                   __end_of_CAN_SendFrame 1A86                              __CFG_LVP$OFF 000000  
                         _neighborsAdress 00DA                 TRM_DataTransmition@weWyU8 0028  
            __size_of_INI_GlobalInterrupt 000E                       ??_FRAME_MapPosition 0008  
                            __CFG_WDT$OFF 000000                                      l5001 176C  
                         __end_of_INI_All 2C3C                                      l1483 28BE  
                                    l5011 17B2                                      l5003 177A  
                                    l4301 1AE8                                      l5021 1804  
                                    l5013 17C0                                      l5005 1788  
                                    l3511 2998                                      l4215 2A92  
                                    l5023 181A                                      l5015 17CE  
                                    l5007 1796                                      l5111 218E  
                                    l4313 1B08                                      l5017 17DC  
                                    l5009 17A4                                      l5121 21B0  
                                    l4331 1B3E                                      l4307 1AF8  
                                    l5019 17F6                                      l5027 1830  
                                    l4325 1B28                                      l4501 13C0  
                                    l5029 188C                                      l4343 1B5E  
                                    l4319 1B18                                      l4271 1A98  
                                    l3527 29DE                                      l5071 2406  
                                    l5063 23D4                                      l4423 2070  
                                    l4361 1B8E                                      l4337 1B4E  
                                    l4257 2BA8                                      l4513 144C  
                                    l4441 20B8                                      l4417 2058  
                                    l4355 1B7E                                      l4283 1AB8  
                                    l3643 2B66                                      l5067 23DE  
                                    l4507 1406                                      l4435 20A0  
                                    l4373 1BAE                                      l4349 1B6E  
                                    l4277 1AA8                                      l4453 20E8  
                                    l4429 2088                                      l4367 1B9E  
                                    l4295 1AD8                                      l3911 0D6E  
                                    l3903 0D1E                                      l4551 26E0  
                                    l4543 26C0                                      l4535 26A6  
                                    l4471 1262                                      l4447 20D0  
                                    l4703 1E32                                      l5087 28F6  
                                    l4385 1BD0                                      l4289 1AC8  
                                    l4545 26C8                                      l4713 1FBA  
                                    l4801 108C                                      l4379 1BBE  
                                    l4571 2894                                      l4555 26EA  
                                    l4539 26B2                                      l4483 12EE  
                                    l4731 2942                                      l4459 2100  
                                    l4581 28B4                                      l4901 1630  
                                    l4805 1154                                      l4477 12A8  
                                    l3951 0EFE                                      l3943 0EAE  
                                    l3935 0E5E                                      l3927 0E0E  
                                    l3919 0DBE                                      l4831 246A  
                                    l4903 1638                                      l4911 167A  
                                    l4663 1A7E                                      l4559 26F8  
                                    l4807 115A                                      l4495 137A  
                                    l4719 1ECE                                      l3689 2A4A  
                                    l4569 288C                                      l4833 2472  
                                    l4825 2454                                      l4921 16B0  
                                    l4905 1640                                      l4489 1334  
                                    l4753 1C9A                                      l4851 24AA  
                                    l4843 2492                                      l4819 2444  
                                    l4931 16D6                                      l4923 16B6  
                                    l4915 167E                                      l4659 19CA  
                                    l4771 1D0E                                      l4763 1CDA  
                                    l4933 16DE                                      l4925 16BE  
                                    l4909 1648                                      l4917 1698  
                                    _BIE0 000DFA                                      l3895 0CCE  
                                    l4847 249C                                      l4927 16C6  
                                    l4919 16AA                                      l4767 1CFC  
                                    l4695 1E08                                      l4857 276C  
                                    l4929 16CE                                      l4937 16E6  
                                    l4777 2858                                      l4689 1DC2  
                                    l4971 2228                                      l4963 21F2  
                                    l4939 1718                                      l4891 160C  
                                    l4875 1508                                      l4787 22C2  
                                    l4869 27B6                                      l4893 1612  
                                    l4895 1618                                      l4799 100A  
                                    l4969 221E                                      l4977 2254  
                                    l4897 1620                                      l4899 1628  
                                    l4997 1750                                      l4999 175E  
                       _MOC_Frame_Counter 2CEA                                      u3000 0DE4  
                                    u3010 0DF4                                      u3100 0E96  
                                    u3020 0DF6                                      _LATA 000F89  
                                    u3110 0EA6                                      u3030 0E06  
                                    _LATB 000F8A                                      _LATC 000F8B  
                                    u3200 24C6                                      u3120 0ED4  
                                    u3040 0E34                                      _LATD 000F8C  
                                    _LATE 000F8D                                      u3130 0EE4  
                                    u3050 0E44                                      u3140 0EE6  
                                    u3060 0E46                                      u3150 0EF6  
                                    u3070 0E56                                      u3215 252A  
                                    u3216 252C                                      u3208 24C8  
                                    u3080 0E84                                      u3090 0E94  
                                    u4130 2952                                      u4035 19A0  
                                    u3315 2B32                                      u3316 2B34  
                                    _IPR3 000FA5                                      u4320 2476  
                                    _IPEN 007E87                                      _PIE3 000FA3  
                                    u4170 1C28                                      u2900 0D06  
                                    u3700 1290                                      u4180 1C40  
                                    u2910 0D16                                      u4430 225C  
                                    u2920 0D44                                      u2840 0CA4  
                                    u3720 12D4                                      u4176 1C2A  
                                    u2930 0D54                                      u2850 0CB4  
                                    u3810 13A6                                      u3730 12D6  
                                    u4186 1C42                                      _PEIE 007F96  
                                    u2940 0D56                                      u2860 0CB6  
                                    u3820 13A8                                      u3660 1248  
                                    _LOCK 002B                                      u2950 0D66  
                                    u2870 0CC6                                      u3750 131A  
                                    u3670 124A                                      u2960 0D94  
                                    u2880 0CF4                                      u3840 13EC  
                                    u3760 131C                                      u4385 15A4  
                                    u2970 0DA4                                      u2890 0D04  
                                    u3930 26CC                                      u3850 13EE  
                                    u3690 128E                                      u2980 0DA6  
                                    u3780 1360                                      u2990 0DB6  
                                    u3870 1432                                      u3790 1362  
                                    u3880 1434                                      u3970 2898  
                                    _PIR3 000FA4                                      _RCON 000FD0  
             ??_FRAME_AccelerometerStatus 000E                                      _Dane 00D8  
                         __end_of_ISR_low 0C5E                          LED_Control@diode 0006  
                    FRAME_AnalogValue@set 0008                        ?_MOC_Frame_Counter 0006  
                                    _main 210A                          LED_Control@color 000A  
                         __end_of_NVMInit 2A2E                           __end_of_NVMRead 2B70  
                                    fsr1h 000FE2                                      fsr2h 000FDA  
                                    indf1 000FE7                                      indf2 000FDF  
                                    fsr1l 000FE1                                      fsr2l 000FD9  
                                    btemp 004C                            _CAN_SetupClock 2BCE  
                      __size_of_LED_Clear 001E                                      prodh 000FF4  
                                    prodl 000FF3                     __end_of_CAN_SetupMask 2620  
           __size_of_TMR1_Update_flag_Get 000A                                      start 0C5E  
           __size_of_TMR1_Update_flag_Set 000A                        __size_of_RADAR_Use 000C  
                      __size_of_LED_Error 001E                             __CFG_IESO$OFF 000000  
                      __size_of_LED_Right 004C             __size_of_FRAME_HandleCanFrame 01F8  
                           _LED_Light_Pos 21BC                             __CFG_MCLRE$ON 000000  
                            ___param_bank 000000                       ??_MOC_Frame_Counter 0008  
              ??_MOC_Aktualna_Temperatura 0008         FRAME_HandleCanFrame@identyfikator 001B  
                     __size_of_FLASH_Read 0016                        __size_of_INI_Timer 0018  
               __end_of_FRAME_MapPosition 2D64                             _NeightAdress1 0038  
                           _NeightAdress2 004A                             _NeightAdress3 0036  
                           _NeightAdress4 0034                             _NeightAdress5 0032  
                           _NeightAdress6 0030                             _NeightAdress7 002E  
                           _NeightAdress8 002C                          __end_of_LED_Left 29F2  
                   ReadfromEEPROM@Address 0006                                     _B0CON 000E20  
                                   _B1CON 000E30                                     _B2CON 000E40  
                                   _B3CON 000E50                                     _B4CON 000E60  
                                   _B5CON 000E70                          __end_of_LOCK_Get 2D60  
                                   ?_main 0001                          __end_of_LOCK_Set 2D56  
                         __end_of___awdiv 24B4                                     _EEADR 000FA9  
                         __end_of___awmod 2702                                     _BSEL0 000DF8  
                         ___awdiv@divisor 0008                                     _T1CON 000FCD  
                                   _IRCF0 007E9C                                     _IRCF1 007E9D  
       FRAME_ExcitationMultiplier@message 0006                                     _IRCF2 007E9E  
                         __end_of___lwdiv 28C8                                     i1l821 0C4E  
                     __size_of_FRAME_Plot 0058                           ___awdiv@counter 000A  
                                   _MSEL0 000DF0                                     _MSEL1 000DF1  
                                   _MSEL2 000DF2                                     _MSEL3 000DF3  
                                   _TMR1H 000FCF                                     _TMR1L 000FCE  
                                   _TRISA 000F92                                     _TRISB 000F93  
                                   _TRISC 000F94                                     _TRISD 000F95  
                                   _TRISE 000F96                             __CFG_PWRT$OFF 000000  
                                   _Flagi 00C6                    ?_CAN_MoveBuffIntoFrame 0006  
                           __CFG_WRT0$OFF 000000                __size_of_FRAME_AnalogValue 0002  
                           __CFG_WRT1$OFF 000000                             __CFG_WRT2$OFF 000000  
                           __CFG_WRT3$OFF 000000                            __CFG_EBTR0$OFF 000000  
                          __CFG_FCMEN$OFF 000000                            __CFG_EBTR1$OFF 000000  
                          __CFG_EBTR2$OFF 000000                            __CFG_EBTR3$OFF 000000  
                        __end_of_ISR_high 2D5C                             __CFG_WRTB$OFF 000000  
                           __CFG_WRTC$OFF 000000                             __CFG_WRTD$OFF 000000  
               __end_of_MOC_Frame_Counter 2CFA                            __CFG_EBTRB$OFF 000000  
                 i1TMR1_Update_flag_Set@a 0001                              ?_MOC_NOTWORK 0006  
               __size_of_ReadDataToEEPROM 02EE                          __end_of_NVMWrite 2A9C  
                        __end_of_NVMalloc 2A66                                     tablat 000FF5  
                  __end_of_CAN_SetupClock 2BF6                                     ttemp5 004D  
                                   ttemp6 0050                                     ttemp7 0054  
                                   status 000FD8                                     wtemp8 004D  
                       __end_of_CAN_GenID 25A8                            __CFG_PBADEN$ON 000000  
                     __size_of_LED_Update 0090                            ?_LED_Light_Pos 000D  
                        _TMR1_Timer_reset 2BF6                         __end_of_CAN_Setup 27C4  
                           _INI_LED_Start 2B70                  FLASH_Write@flashWrBufPtr 0010  
                   _FRAME_ExcitationValue 1E48          FRAME_AccelerometerStatus@message 000C  
                         __initialization 2620                       __size_of_INI_OUTPUT 0020  
                        CAN_GenID@frameID 0008                              __end_of_main 21BC  
                  ??_FRAME_AveragingTimes 0008                __size_of_FRAME_DeviceReset 0148  
                ?_FRAME_AdressOfNeighbors 0006                    __size_of_WritetoEEPROM 0034  
                        CAN_GenID@message 0006                 _FRAME_AccelerometerStatus 1F54  
                    __size_of_FLASH_Write 007C                                    ??_main 001C  
                  CAN_MoveBuffIntoFrame@i 000A                             __activetblptr 000002  
                            NVMWrite@addr 000B                          _TMR1_Update_flag 00D6  
                       __end_of_LED_Clear 2C98                   WritetoEEPROM@GIE_Status 0026  
                   __end_of_IsInNeighbors 210A                           _wartosciSasiada 00F1  
                       __end_of_RADAR_Use 2D14                                 ??_INI_All 0010  
                       __end_of_LED_Error 2C7A                         __end_of_LED_Right 29B0  
                    WritetoEEPROM@Address 0006                                 ??_ISR_low 0003  
                               ??_NVMInit 000C                                 ??_NVMRead 000E  
                                  _CANCON 000F6F                                    _EEADRH 000FAA  
                                  _EEDATA 000FA8                                    _EECON2 000FA7  
                        ___awdiv@dividend 0006               FRAME_ExcitationMultiplier@i 0009  
                                  _CIOCON 000F73                           __CFG_BBSIZ$1024 000000  
                       __end_of_INI_Timer 2CB0                                    i1l4181 0C4C  
                                  _TABLAT 000FF5                           ?_CAN_SetupClock 0001  
                                  _TBLPTR 000FF6                                    _RXB0D0 000F66  
                                  _TMR1IE 007CE8                                    _TMR1IF 007CF0  
                                  _TMR1IP 007CF8                                    _TMR1ON 007E68  
            ??_FRAME_ExcitationMultiplier 0008                            ?_INI_LED_Start 0001  
                          __CFG_XINST$OFF 000000                                 ??___awdiv 000A  
                          __CFG_STVREN$ON 000000                                 ??___awmod 000A  
                        LED_Light_Pos@pos 000D                __size_of_FRAME_MapPosition 0002  
                               ??___lwdiv 000A                                    clear_0 2660  
                                  clear_1 2672                                    clear_2 267E  
                        ___awdiv@quotient 000C                           ___awmod@divisor 0008  
                         ___awmod@counter 000A                              NVMalloc@size 0006  
              ??_FRAME_PrzypisanieDokarty 0008                  ??i1_TMR1_Update_flag_Set 0003  
                         __CFG_BOREN$BOHW 000000                   __size_of_ReadfromEEPROM 0012  
                            __pdataCOMRAM 003A                                    tblptrh 000FF7  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                            ??_FLASH_Read 000A       __size_of_FRAME_ExcitationMultiplier 004E  
              __size_of_MOC_Frame_Counter 0010                      __size_of_LED_Control 0152  
                           _WritetoEEPROM 2B08                  FRAME_MapPosition@message 0006  
                          FLASH_Read@addr 0006                     TMR1_Update_flag_Set@a 0006  
                              __accesstop 0060                   __end_of__initialization 2684  
                            ??_FRAME_Plot 000F                       ISR_low@ramkaStanuU8 0029  
                               ?_LED_Left 0006                           ??_LED_Light_Pos 0011  
                           ___rparam_used 000001                    ?_FRAME_ExcitationValue 000C  
                               ?_LOCK_Get 0001                                 ?_LOCK_Set 0001  
         __end_of_FRAME_AdressOfNeighbors 121C                            __pcstackCOMRAM 0001  
                            __pidataBANK0 2D60                                 LED_Left@a 0006  
                               LED_Left@b 0008                       _INI_GlobalInterrupt 2CFA  
                               ?_ISR_high 0001                        __end_of_FLASH_Read 2CC6  
                               ?_NVMWrite 0009                                 ?_NVMalloc 0006  
                            ??_LED_Update 0018               __end_of_TRM_DataTransmition 2916  
                   _FRAME_SoftwareVersion 2702                        __end_of_FRAME_Plot 2876  
                            ??_INI_OUTPUT 0006                                 LOCK_Set@k 0006  
                 FRAME_AxisStatus@message 0006               IsInNeighbors@message_adress 0006  
                          ?_WritetoEEPROM 0006                      ?_INI_GlobalInterrupt 0001  
                        _ReadDataToEEPROM 0C62                 __size_of_FRAME_AxisStatus 0036  
                              __pbssBANK0 0060               __size_of_CAN_SetupFilter_Ne 0096  
                          FLASH_Write@val 000A                             NVMWrite@count 000D  
                    __size_of_MOC_NOTWORK 0008                           ??_INI_LED_Start 000B  
                              ??_LED_Left 0008                                ??_LOCK_Get 0006  
                              ??_LOCK_Set 0006                        __end_of_LED_Update 2430  
                      __end_of_INI_OUTPUT 2C5C                                ??_ISR_high 0001  
                     TMR1_Timer_reset@t1H 0002                       TMR1_Timer_reset@t1L 0001  
                                 _ECANCON 000F77                                   _CANSTAT 000F6E  
                              ??_NVMWrite 000F                   ??_CAN_MoveBuffIntoFrame 000A  
                              ??_NVMalloc 000A              __end_of_TMR1_Update_flag_Get 2D3C  
            __end_of_TMR1_Update_flag_Set 2D32           __size_ofi1_TMR1_Update_flag_Set 000A  
            __end_of_FRAME_HandleCanFrame 1914                                   _INI_All 2C1A  
                __end_of_TMR1_Timer_reset 2C1A                                   _RXB0DLC 000F65  
                                 _RXB0CON 000F60                                   _RXB1CON 000F50  
                   ??_INI_GlobalInterrupt 0006                                   _TXB0CON 000F40  
                                 _ISR_low 0C18                                   _RXFCON0 000DD4  
                                 _RXFCON1 000DD5                                   _NVMInit 29F2  
                                 _NVMRead 2B3C                                   _DaneCan 00CB  
      __end_of_FRAME_ExcitationMultiplier 2964                _FRAME_ExcitationMultiplier 2916  
             FRAME_HandleCanFrame@message 0014                                   __Hparam 0000  
        ??_MOC_Wynikowa_wartosc_roznicowa 0008           ?_MOC_Wynikowa_wartosc_roznicowa 0006  
                                 __Lparam 0000                    __size_of_CAN_TakeFrame 0252  
                               _CAN_GenID 2530                                   ___awdiv 2430  
                                 ___awmod 2692                                 _CAN_Setup 2768  
                  __size_of_CAN_SendFrame 0172                                   ___lwdiv 2876  
                       LED_Light_Pos@pos2 0014                                   __pcinit 2620  
                                 __ramtop 0D00    FRAME_DataUpdateAndChangeOption@message 0006  
                                 __ptext0 210A                                   __ptext1 28C8  
                                 __ptext2 171C                                   __ptext3 2C5C  
                                 __ptext4 2702                                   __ptext5 1D20  
                                 __ptext6 2D14                                   __ptext7 2D46  
                                 __ptext8 2CEA                                   __ptext9 2D1E  
                  ?_FRAME_SoftwareVersion 0006                            _ReadfromEEPROM 2CD8  
                        ___awmod@dividend 0006                           ??_WritetoEEPROM 0009  
                  __size_of_CAN_SetupMask 0078         __size_of_MOC_Aktualna_Temperatura 000A  
          FRAME_AdressOfNeighbors@nrRamki 0008                 ?_MOC_Aktualna_Temperatura 0006  
        __size_of_FRAME_AdressOfNeighbors 02CC                          ??_CAN_SetupClock 0006  
          FRAME_AdressOfNeighbors@message 0006                                 _LED_Clear 2C7A  
                                 main@adr 001C                                 _RADAR_Use 2D08  
                               _LED_Error 2C5C                            __pintcode_body 2D56  
                               _LED_Right 2964                      end_of_initialization 2684  
    FRAME_SensorExcitationStatus@statwect 001E                             __Lmediumconst 0000  
                                 int_func 2D56                                 _INI_Timer 2C98  
                  i1_TMR1_Update_flag_Set 2D3C          TRM_DataTransmition@czujnikWeWyU8 0027  
                              ?_CAN_GenID 0006                             ??_FLASH_Write 000C  
                                 postdec1 000FE5                                   postdec2 000FDD  
                                 postinc0 000FEE                                   postinc2 000FDE  
                              ?_CAN_Setup 0001             __size_of_FRAME_AveragingTimes 0036  
                  __end_of_ReadfromEEPROM 2CEA                      CAN_SendFrame@message 000B  
                        NVMalloc@location 0008                             LED_Update@Red 002A  
                           _CAN_TakeFrame 14CA                                ?_LED_Clear 0001  
                             NVMRead@addr 000A                             _CAN_SendFrame 1914  
                              ?_RADAR_Use 0001                                ?_LED_Error 0001  
                             NVMRead@dest 0008               FRAME_AdressOfNeighbors@kier 000E  
                              ?_LED_Right 0006                          _FRAME_AxisStatus 2A9C  
                 ??_FRAME_ExcitationValue 000E                                ?_INI_Timer 0001  
                         _ramkaCanRxKarty 0060                      _TMR1_Update_flag_Get 2D32  
                         _ramkaCanTxKarty 00B5                      _TMR1_Update_flag_Set 2D28  
                           _CAN_SetupMask 25A8                         __size_of_LED_Left 0042  
                    _FRAME_HandleCanFrame 171C                    __size_of_IsInNeighbors 00CA  
                       __size_of_LOCK_Get 0004                         __size_of_LOCK_Set 0008  
                       _WriteDataToEEPROM 121C                  __end_of_ReadDataToEEPROM 0F50  
                          CAN_TakeFrame@k 0013                        ?_WriteDataToEEPROM 0001  
                         ?_ReadfromEEPROM 0006                             __pidataCOMRAM 2CC6  
                       __size_of_ISR_high 2154                                LED_Right@a 0006  
                              LED_Right@b 000A                       __end_of_FLASH_Write 2530  
                   MOC_Frame_Counter@zeta 00EF                         __size_of_NVMWrite 0036  
                           ??_LED_Control 0008                       ??_WriteDataToEEPROM 000F  
                       __size_of_NVMalloc 0038                       start_initialization 2620  
                          ?_CAN_TakeFrame 000E                                 _Init_Data 0048  
                          ?_CAN_SendFrame 000B           FRAME_SensorExcitationStatus@tru 000C  
                        __CFG_OSC$IRCIO67 000000         __size_of_FRAME_PrzypisanieDokarty 009E  
               ?_FRAME_PrzypisanieDokarty 0006                     ?_TMR1_Update_flag_Get 0006  
                   ?_TMR1_Update_flag_Set 0006                            ?_CAN_SetupMask 0001  
                   __end_of_LED_Light_Pos 226C                     ?_FRAME_HandleCanFrame 0014  
               __end_of_WriteDataToEEPROM 14CA                               ??_CAN_GenID 0009  
                             ??_CAN_Setup 0006                               __pdataBANK0 00EF  
                        __CFG_LPT1OSC$OFF 000000                  CAN_MoveBuffIntoFrame@Buf 0008  
    __end_of_FRAME_SensorExcitationStatus 1E48     __size_of_FRAME_SensorExcitationStatus 0128  
                CAN_MoveBuffIntoFrame@Ram 0006              _FRAME_SensorExcitationStatus 1D20  
          __size_of_CAN_MoveBuffIntoFrame 002A                               __pbssBIGRAM 00F1  
           __end_of_CAN_MoveBuffIntoFrame 2BCE                           _Fulfillment_Lvl 0044  
                             __pbssCOMRAM 001E                                  ?_INI_All 0001  
                 _FRAME_AdressOfNeighbors 0F50                           FLASH_Write@addr 0006  
                           __pcstackBANK0 00DE                             _IsInNeighbors 2040  
                       ?_TMR1_Timer_reset 0001                           _ustawieniaKarty 00DC  
                             _BRGCON1bits 000F70                               _BRGCON2bits 000F71  
                             _BRGCON3bits 000F72                                  ?_ISR_low 0001  
 __end_of_FRAME_DataUpdateAndChangeOption 281E  __size_of_FRAME_DataUpdateAndChangeOption 005A  
       ??_FRAME_DataUpdateAndChangeOption 0008          ?_FRAME_DataUpdateAndChangeOption 0006  
         _FRAME_DataUpdateAndChangeOption 27C4                               ??_LED_Clear 000B  
                           ??_MOC_NOTWORK 0008                __end_of_CAN_SetupFilter_Ne 23A0  
                                ?_NVMInit 0001                                  ?_NVMRead 0008  
                      ??_TMR1_Timer_reset 0001                               ??_RADAR_Use 0006  
                             ??_LED_Error 000B                            NVMWrite@source 0009  
                             ??_LED_Right 0008              __size_of_TRM_DataTransmition 004E  
                     __end_of_LED_Control 1BD8               ?_FRAME_ExcitationMultiplier 0006  
                             ??_INI_Timer 0006                     __end_of_INI_LED_Start 2BA4  
                        ___lwdiv@dividend 0006                                 __pintcode 0C08  
                                ?___awdiv 0006                               _FLASH_Write 24B4  
                                ?___awmod 0006                   ??_FRAME_SoftwareVersion 0008  
        __end_of_MOC_Aktualna_Temperatura 2D28                                  ?___lwdiv 0006  
                       FRAME_Plot@message 000D                               __pintcodelo 0C18  
             __end_of_INI_GlobalInterrupt 2D08                           ??_CAN_TakeFrame 0010  
           ?_FRAME_SensorExcitationStatus 0008    __end_of_MOC_Wynikowa_wartosc_roznicowa 2D1E  
 __size_of_MOC_Wynikowa_wartosc_roznicowa 000A            _MOC_Wynikowa_wartosc_roznicowa 2D14  
                             _COMSTATbits 000F74                            ?_IsInNeighbors 0006  
                         ??_CAN_SendFrame 000D                          ___lwdiv@quotient 000B  
                 ?i1_TMR1_Update_flag_Set 0001               FRAME_AveragingTimes@message 0006  
                  ??_TMR1_Update_flag_Get 0008                    ??_TMR1_Update_flag_Set 0008  
                         ??_CAN_SetupMask 0006                                  _LED_Left 29B0  
                  ??_FRAME_HandleCanFrame 0016                      CAN_TakeFrame@message 000E  
                     __end_of_MOC_NOTWORK 2D4E                                  _LOCK_Get 2D5C  
                    CAN_TakeFrame@tempCON 0012                                  _LOCK_Set 2D4E  
              __size_of_WriteDataToEEPROM 02AE                                  _RXB0EIDH 000F63  
                                _RXB0EIDL 000F64                                  _RCONbits 000FD0  
                        __CFG_WDTPS$32768 000000                                  _RXB0SIDH 000F61  
                                _RXB0SIDL 000F62                                  _RXF0EIDH 000F02  
                                _RXF0EIDL 000F03                                  _RXF1EIDH 000F06  
                                _RXF1EIDL 000F07                                  _RXF2EIDH 000F0A  
                                _RXF2EIDL 000F0B                                  _RXF3EIDH 000F0E  
                                _RXF3EIDL 000F0F                                  _RXF4EIDH 000F12  
                                _RXF4EIDL 000F13                                  _RXF5EIDH 000F16  
                                _RXF5EIDL 000F17                                  _RXF6EIDH 000D62  
                                _RXF6EIDL 000D63                                  _RXF0SIDH 000F00  
                                _RXF7EIDH 000D66                                  _RXF0SIDL 000F01  
                                _RXF7EIDL 000D67                                  _RXF1SIDH 000F04  
                                _RXF8EIDH 000D6A                                  _RXF1SIDL 000F05  
                                _RXF8EIDL 000D6B                                  _RXF2SIDH 000F08  
                                _RXF9EIDH 000D72                                  _RXF2SIDL 000F09  
                                _RXF9EIDL 000D73                                  _RXF3SIDH 000F0C  
                                _RXF3SIDL 000F0D                                  _ISR_high 0C08  
                                _RXF4SIDH 000F10                                  _RXF4SIDL 000F11  
                                _RXF5SIDH 000F14                                  _RXF5SIDL 000F15  
                                _RXF6SIDH 000D60                                  _RXF6SIDL 000D61  
                                _RXM0EIDH 000F1A                                  _RXF7SIDH 000D64  
                                _RXM0EIDL 000F1B                                  _RXF7SIDL 000D65  
                                _RXM1EIDH 000F1E                                  _RXF8SIDH 000D68  
                                _RXM1EIDL 000F1F                                  _RXF8SIDL 000D69  
                                _RXF9SIDH 000D70                                  _RXF9SIDL 000D71  
                                _RXFBCON0 000DE0                                  _RXFBCON1 000DE1  
                                _RXFBCON2 000DE2                                  _RXFBCON3 000DE3  
                                _RXFBCON4 000DE4                                  _RXM0SIDH 000F18  
                                _RXM0SIDL 000F19                                  _RXM1SIDH 000F1C  
                                _RXM1SIDL 000F1D                  __end_of_FRAME_AxisStatus 2AD2  
                                _NVMWrite 2A66                    FLASH_Write@GIEBitValue 000E  
                                _NVMalloc 2A2E                 ??_FRAME_AdressOfNeighbors 000A  
                      LED_Update@laststat 0046                          _DetectorLedRadar 00CF  
                             _LED_Control 1A86                          __size_of_INI_All 0022  
            FRAME_ExcitationValue@message 000C                     __end_of_WritetoEEPROM 2B3C  
          __end_ofi1_TMR1_Update_flag_Set 2D46                            _nextEEPosition 00D2  
                               copy_data0 264C                          __size_of_ISR_low 0046  
      __size_of_FRAME_AccelerometerStatus 00EC              __end_of_FRAME_AveragingTimes 2B08  
                                _MaxAdres 003E                          __size_of_NVMInit 003C  
                        __size_of_NVMRead 0034                ?_FRAME_AccelerometerStatus 000C  
                                _MinAdres 0024                                  _MaxRange 003C  
                                _MaxPower 003A                                  _MinRange 0022  
                                _MinPower 0020            __size_of_FRAME_ExcitationValue 010C  
           __end_of_FRAME_ExcitationValue 1F54                                _EECON1bits 000FA6  
                                __Hrparam 0000                              _RXB0SIDLbits 000F62  
                        ??_ReadfromEEPROM 0008                                  __Lrparam 0000  
                       ?_ReadDataToEEPROM 0001                          __size_of___awdiv 0084  
                        __size_of___awmod 0070                          __size_of___lwdiv 0052  
                      ??_ReadDataToEEPROM 000E                           ??_IsInNeighbors 0008  
                _MOC_Aktualna_Temperatura 2D1E           FRAME_PrzypisanieDokarty@message 0006  
                      LED_Light_Pos@flage 0016                        LED_Light_Pos@color 0011  
        __end_of_FRAME_PrzypisanieDokarty 230A                              _RXF0SIDLbits 000F01  
                FRAME_AnalogValue@message 0006                           ___lwdiv@divisor 0008  
                            _RXF1SIDLbits 000F05                                _FLASH_Read 2CB0  
                         ___lwdiv@counter 000A                                  __ptext10 2D4E  
                                __ptext11 2D5C                                  __ptext20 2A66  
                                __ptext12 2040                                  __ptext21 2B08  
                                __ptext13 226C                                  __ptext30 2530  
                                __ptext22 27C4                                  __ptext14 281E  
                                __ptext31 14CA                                  __ptext23 2A9C  
                                __ptext15 2D62                                  __ptext40 2964  
                                __ptext32 2430                                  __ptext24 2AD2  
                                __ptext16 1E48                                  __ptext41 29B0  
                                __ptext33 2BA4                                  __ptext25 2D64  
                                __ptext17 2916                                  __ptext50 2C3C  
                                __ptext42 2C7A                                  __ptext34 2D28  
                                __ptext26 0F50                                  __ptext18 1BD8  
                                __ptext51 2B70                                  __ptext43 2C1A  
                                __ptext35 2D32                                  __ptext27 1F54  
                                __ptext19 121C                                  __ptext52 1A86  
                                __ptext44 0C62                                  __ptext36 2D08  
                                __ptext28 2692            ??_FRAME_SensorExcitationStatus 000A  
                                __ptext61 2D3C                                  __ptext53 2CFA  
                                __ptext45 2B3C                                  __ptext37 23A0  
                                __ptext29 1914                                  __ptext62 2BF6  
                                __ptext54 2768                                  __ptext46 2CD8  
                                __ptext38 21BC                                  __ptext55 25A8  
                                __ptext47 29F2                                  __ptext39 2876  
                                __ptext56 230A                                  __ptext48 2A2E  
                                __ptext57 2BCE                                  __ptext49 2C98  
                                __ptext58 24B4                                  __ptext59 2CB0  
           TRM_DataTransmition@canMessage 00DE                              _RXF2SIDLbits 000F09  
                             _MOC_NOTWORK 2D46                              _RXF3SIDLbits 000F0D  
               FRAME_HandleCanFrame@ident 0019                              _RXF4SIDLbits 000F11  
                FRAME_DeviceReset@message 0011         __end_of_FRAME_AccelerometerStatus 2040  
                            _RXF5SIDLbits 000F15                                _FRAME_Plot 281E  
                           __size_of_main 00B2                              _RXF6SIDLbits 000D61  
                            _RXF7SIDLbits 000D65                   __size_of_CAN_SetupClock 0028  
                            _RXF8SIDLbits 000D69                              _RXF9SIDLbits 000D71  
                                int$flags 004C                       _TRM_DataTransmition 28C8  
                             _RXB0DLCbits 000F65                                _LED_Update 23A0  
                             _RXB0CONbits 000F60                                _INTCONbits 000FF2  
                              _INI_OUTPUT 2C3C                         _FRAME_AnalogValue 2D64  
                    ?_TRM_DataTransmition 0001              FRAME_SoftwareVersion@message 0006  
                                intlevel1 0000                                  intlevel2 0000  
                         _czujnikiNaMapie 00D4                        ?_FRAME_AnalogValue 0006  
     FRAME_SensorExcitationStatus@message 0008                               _TXB0CONbits 000F40  
                     ??_FRAME_AnalogValue 000A                 __size_of_TMR1_Timer_reset 0024  
                      _CAN_SetupFilter_Ne 230A                              ?_FLASH_Write 0006  
                LED_Light_Pos@fulfillment 000F                      _FRAME_AveragingTimes 2AD2  
                     ?_CAN_SetupFilter_Ne 0001            __size_of_FRAME_SoftwareVersion 0066  
                       _FRAME_DeviceReset 1BD8             __end_of_FRAME_SoftwareVersion 2768  
                      ?_FRAME_DeviceReset 0011                           LED_Update@Green 0047  
               __end_of_FRAME_AnalogValue 2D66                    __size_of_LED_Light_Pos 00B0  
                             ?_FLASH_Read 0006                     _CAN_MoveBuffIntoFrame 2BA4  
                              _WDTCONbits 000FD1                       ??_FRAME_DeviceReset 0013  
                   ??_TRM_DataTransmition 001C                  _FRAME_PrzypisanieDokarty 226C  
                  LED_Light_Pos@LED_array 0012                      ??_CAN_SetupFilter_Ne 0006  
                          LED_Update@pos1 0042                            LED_Update@pos2 0040  
                             ?_FRAME_Plot 000D  
